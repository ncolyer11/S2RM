tiny	2	0	official	named
c	a	com/mojang/math/Axis
	f	La;	a	XN
	f	La;	b	XP
	f	La;	c	YN
	f	La;	d	YP
	f	La;	e	ZN
	f	La;	f	ZP
	m	(Lorg/joml/Vector3f;)La;	of	of
	m	(F)Lorg/joml/Quaternionf;	rotation	rotation
	m	(F)Lorg/joml/Quaternionf;	rotationDegrees	rotationDegrees
	m	(Lorg/joml/Vector3f;F)Lorg/joml/Quaternionf;	a	lambda$of$6
	m	(F)Lorg/joml/Quaternionf;	a	lambda$static$5
	m	(F)Lorg/joml/Quaternionf;	b	lambda$static$4
	m	(F)Lorg/joml/Quaternionf;	c	lambda$static$3
	m	(F)Lorg/joml/Quaternionf;	d	lambda$static$2
	m	(F)Lorg/joml/Quaternionf;	e	lambda$static$1
	m	(F)Lorg/joml/Quaternionf;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	b	com/mojang/math/Constants
	f	F	a	PI
	f	F	b	RAD_TO_DEG
	f	F	c	DEG_TO_RAD
	f	F	d	EPSILON
	m	()V	<init>	<init>
c	c	com/mojang/math/Divisor
	f	I	a	denominator
	f	I	b	quotient
	f	I	c	mod
	f	I	d	returnedParts
	f	I	e	remainder
	m	(II)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()I	nextInt	nextInt
	m	(II)Ljava/lang/Iterable;	a	asIterable
	m	(II)Ljava/util/Iterator;	b	lambda$asIterable$0
c	d	com/mojang/math/FieldsAreNonnullByDefault
c	e	com/mojang/math/GivensParameters
	f	F	a	sinHalf
	f	F	b	cosHalf
	m	(FF)V	<init>	<init>
	m	(FF)Le;	a	fromUnnormalized
	m	(F)Le;	a	fromPositiveAngle
	m	()Le;	a	inverse
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	aroundX
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	b	aroundY
	m	(Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	c	aroundZ
	m	()F	b	cos
	m	()F	c	sin
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	a	aroundX
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	b	aroundY
	m	(Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f;	c	aroundZ
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	d	sinHalf
	m	()F	e	cosHalf
c	f	com/mojang/math/MatrixUtil
	f	F	a	G
	f	Le;	b	PI_4
	m	()V	<init>	<init>
	m	(Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f;	a	mulComponentWise
	m	(FFF)Le;	a	approxGivensQuat
	m	(FF)Le;	a	qrGivensQuat
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V	a	similarityTransform
	m	(Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V	a	stepJacobi
	m	(Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf;	a	eigenvalueJacobi
	m	(Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple;	a	svdDecompose
	m	(Lorg/joml/Matrix4fc;I)Z	b	checkPropertyRaw
	m	(Lorg/joml/Matrix4fc;I)Z	a	checkProperty
	m	(Lorg/joml/Matrix4fc;)Z	a	isIdentity
	m	(Lorg/joml/Matrix4fc;)Z	b	isPureTranslation
	m	(Lorg/joml/Matrix4fc;)Z	c	isOrthonormal
	m	()V	<clinit>	<clinit>
c	g	com/mojang/math/MethodsReturnNonnullByDefault
c	h	com/mojang/math/OctahedralGroup
	f	Lh;	a	IDENTITY
	f	Lh;	b	ROT_180_FACE_XY
	f	Lh;	c	ROT_180_FACE_XZ
	f	Lh;	d	ROT_180_FACE_YZ
	f	Lh;	e	ROT_120_NNN
	f	Lh;	f	ROT_120_NNP
	f	Lh;	g	ROT_120_NPN
	f	Lh;	h	ROT_120_NPP
	f	Lh;	i	ROT_120_PNN
	f	Lh;	j	ROT_120_PNP
	f	Lh;	k	ROT_120_PPN
	f	Lh;	l	ROT_120_PPP
	f	Lh;	m	ROT_180_EDGE_XY_NEG
	f	Lh;	n	ROT_180_EDGE_XY_POS
	f	Lh;	o	ROT_180_EDGE_XZ_NEG
	f	Lh;	p	ROT_180_EDGE_XZ_POS
	f	Lh;	q	ROT_180_EDGE_YZ_NEG
	f	Lh;	r	ROT_180_EDGE_YZ_POS
	f	Lh;	s	ROT_90_X_NEG
	f	Lh;	t	ROT_90_X_POS
	f	Lh;	u	ROT_90_Y_NEG
	f	Lh;	v	ROT_90_Y_POS
	f	Lh;	w	ROT_90_Z_NEG
	f	Lh;	x	ROT_90_Z_POS
	f	Lh;	y	INVERSION
	f	Lh;	z	INVERT_X
	f	Lh;	A	INVERT_Y
	f	Lh;	B	INVERT_Z
	f	Lh;	C	ROT_60_REF_NNN
	f	Lh;	D	ROT_60_REF_NNP
	f	Lh;	E	ROT_60_REF_NPN
	f	Lh;	F	ROT_60_REF_NPP
	f	Lh;	G	ROT_60_REF_PNN
	f	Lh;	H	ROT_60_REF_PNP
	f	Lh;	I	ROT_60_REF_PPN
	f	Lh;	J	ROT_60_REF_PPP
	f	Lh;	K	SWAP_XY
	f	Lh;	L	SWAP_YZ
	f	Lh;	M	SWAP_XZ
	f	Lh;	N	SWAP_NEG_XY
	f	Lh;	O	SWAP_NEG_YZ
	f	Lh;	P	SWAP_NEG_XZ
	f	Lh;	Q	ROT_90_REF_X_NEG
	f	Lh;	R	ROT_90_REF_X_POS
	f	Lh;	S	ROT_90_REF_Y_NEG
	f	Lh;	T	ROT_90_REF_Y_POS
	f	Lh;	U	ROT_90_REF_Z_NEG
	f	Lh;	V	ROT_90_REF_Z_POS
	f	[Ljh$a;	X	AXES
	f	Lorg/joml/Matrix3fc;	Y	transformation
	f	Ljava/lang/String;	Z	name
	f	Ljava/util/Map;	aa	rotatedDirections
	f	Z	ab	invertX
	f	Z	ac	invertY
	f	Z	ad	invertZ
	f	Lj;	ae	permutation
	f	[[Lh;	af	CAYLEY_TABLE
	f	[Lh;	ag	INVERSE_TABLE
	f	[[Lh;	ah	XY_TABLE
	f	[Lh;	ai	$VALUES
	m	()[Lh;	values	values
	m	(Ljava/lang/String;)Lh;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lj;ZZZ)V	<init>	<init>
	m	()Lit/unimi/dsi/fastutil/booleans/BooleanList;	d	packInversions
	m	(Lh;)Lh;	a	compose
	m	()Lh;	a	inverse
	m	()Lorg/joml/Matrix3fc;	b	transformation
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljh;)Ljh;	a	rotate
	m	(Ljh$a;)Z	a	inverts
	m	(Ljh$a;)Ljh$a;	b	permute
	m	(Ljj;)Ljj;	a	rotate
	m	(Li;Li;)Lh;	a	fromXYAngles
	m	(Ljh;)Ljh;	b	lambda$rotate$7
	m	([[Lh;)V	a	lambda$static$6
	m	(I)[Lh;	a	lambda$static$5
	m	(Lh;)Lh;	b	lambda$static$4
	m	(Lh;Lh;)Z	a	lambda$static$3
	m	([[Lh;)V	b	lambda$static$2
	m	(Lh;)Lh;	c	lambda$static$1
	m	(Lh;)Lcom/mojang/datafixers/util/Pair;	d	lambda$static$0
	m	()[Lh;	e	$values
	m	()V	<clinit>	<clinit>
c	h$1	com/mojang/math/OctahedralGroup$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	m	()V	<clinit>	<clinit>
c	i	com/mojang/math/Quadrant
	f	Li;	a	R0
	f	Li;	b	R90
	f	Li;	c	R180
	f	Li;	d	R270
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	I	f	shift
	f	[Li;	g	$VALUES
	m	()[Li;	values	values
	m	(Ljava/lang/String;)Li;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	(I)Li;	a	parseJson
	m	(I)I	b	rotateVertexIndex
	m	(Li;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$0
	m	()[Li;	a	$values
	m	()V	<clinit>	<clinit>
c	j	com/mojang/math/SymmetricGroup3
	f	Lj;	a	P123
	f	Lj;	b	P213
	f	Lj;	c	P132
	f	Lj;	d	P231
	f	Lj;	e	P312
	f	Lj;	f	P321
	f	[I	g	permutation
	f	Lorg/joml/Matrix3fc;	h	transformation
	f	I	i	ORDER
	f	[[Lj;	j	CAYLEY_TABLE
	f	[Lj;	k	$VALUES
	m	()[Lj;	values	values
	m	(Ljava/lang/String;)Lj;	valueOf	valueOf
	m	(Ljava/lang/String;IIII)V	<init>	<init>
	m	(Lj;)Lj;	a	compose
	m	(I)I	a	permutation
	m	()Lorg/joml/Matrix3fc;	a	transformation
	m	([[Lj;)V	a	lambda$static$1
	m	([ILj;)Z	a	lambda$static$0
	m	()[Lj;	b	$values
	m	()V	<clinit>	<clinit>
c	k	com/mojang/math/Transformation
	f	Lorg/joml/Matrix4fc;	c	matrix
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	EXTENDED_CODEC
	f	Z	d	decomposed
	f	Lorg/joml/Vector3f;	e	translation
	f	Lorg/joml/Quaternionf;	f	leftRotation
	f	Lorg/joml/Vector3f;	g	scale
	f	Lorg/joml/Quaternionf;	h	rightRotation
	f	Lk;	i	IDENTITY
	m	(Lorg/joml/Matrix4fc;)V	<init>	<init>
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)V	<init>	<init>
	m	()Lk;	a	identity
	m	(Lk;)Lk;	a	compose
	m	()Lk;	b	inverse
	m	()V	i	ensureDecomposed
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f;	a	compose
	m	()Lorg/joml/Matrix4fc;	c	getMatrix
	m	()Lorg/joml/Matrix4f;	d	getMatrixCopy
	m	()Lorg/joml/Vector3f;	e	getTranslation
	m	()Lorg/joml/Quaternionf;	f	getLeftRotation
	m	()Lorg/joml/Vector3f;	g	getScale
	m	()Lorg/joml/Quaternionf;	h	getRightRotation
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lk;F)Lk;	a	slerp
	m	()Lk;	j	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lk;)Lorg/joml/Quaternionf;	b	lambda$static$3
	m	(Lk;)Lorg/joml/Vector3f;	c	lambda$static$2
	m	(Lk;)Lorg/joml/Quaternionf;	d	lambda$static$1
	m	(Lk;)Lorg/joml/Vector3f;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	l	com/mojang/math/package-info
c	m	net/minecraft/BlockUtil
	m	()V	<init>	<init>
	m	(Ljb;Ljh$a;ILjh$a;ILjava/util/function/Predicate;)Lm$a;	a	getLargestRectangleAround
	m	(Ljava/util/function/Predicate;Ljb$a;Ljh;I)I	a	getLimit
	m	([I)Lcom/mojang/datafixers/util/Pair;	a	getMaxRectangleLocation
	m	(Ldly;Ljb;Ldpz;Ljh;Ldpz;)Ljava/util/Optional;	a	getTopConnectedBlock
c	m$a	net/minecraft/BlockUtil$FoundRectangle
	f	Ljb;	a	minCorner
	f	I	b	axis1Size
	f	I	c	axis2Size
	m	(Ljb;II)V	<init>	<init>
c	m$b	net/minecraft/BlockUtil$IntBounds
	f	I	a	min
	f	I	b	max
	m	(II)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	n	net/minecraft/CharPredicate
	m	(C)Z	test	test
	m	(Ln;)Ln;	and	and
	m	()Ln;	negate	negate
	m	(Ln;)Ln;	or	or
	m	(Ln;C)Z	a	lambda$or$2
	m	(C)Z	a	lambda$negate$1
	m	(Ln;C)Z	b	lambda$and$0
c	o	net/minecraft/ChatFormatting
	f	Lo;	a	BLACK
	f	Lo;	b	DARK_BLUE
	f	Lo;	c	DARK_GREEN
	f	Lo;	d	DARK_AQUA
	f	Lo;	e	DARK_RED
	f	Lo;	f	DARK_PURPLE
	f	Lo;	g	GOLD
	f	Lo;	h	GRAY
	f	Lo;	i	DARK_GRAY
	f	Lo;	j	BLUE
	f	Lo;	k	GREEN
	f	Lo;	l	AQUA
	f	Lo;	m	RED
	f	Lo;	n	LIGHT_PURPLE
	f	Lo;	o	YELLOW
	f	Lo;	p	WHITE
	f	Lo;	q	OBFUSCATED
	f	Lo;	r	BOLD
	f	Lo;	s	STRIKETHROUGH
	f	Lo;	t	UNDERLINE
	f	Lo;	u	ITALIC
	f	Lo;	v	RESET
	f	Lcom/mojang/serialization/Codec;	w	CODEC
	f	Lcom/mojang/serialization/Codec;	x	COLOR_CODEC
	f	C	y	PREFIX_CODE
	f	Ljava/util/Map;	z	FORMATTING_BY_NAME
	f	Ljava/util/regex/Pattern;	A	STRIP_FORMATTING_PATTERN
	f	Ljava/lang/String;	B	name
	f	C	C	code
	f	Z	D	isFormat
	f	Ljava/lang/String;	E	toString
	f	I	F	id
	f	Ljava/lang/Integer;	G	color
	f	[Lo;	H	$VALUES
	m	()[Lo;	values	values
	m	(Ljava/lang/String;)Lo;	valueOf	valueOf
	m	(Ljava/lang/String;)Ljava/lang/String;	c	cleanName
	m	(Ljava/lang/String;ILjava/lang/String;CILjava/lang/Integer;)V	<init>	<init>
	m	(Ljava/lang/String;ILjava/lang/String;CZ)V	<init>	<init>
	m	(Ljava/lang/String;ILjava/lang/String;CZILjava/lang/Integer;)V	<init>	<init>
	m	()C	a	getChar
	m	()I	b	getId
	m	()Z	d	isFormat
	m	()Z	e	isColor
	m	()Ljava/lang/Integer;	f	getColor
	m	()Ljava/lang/String;	g	getName
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripFormatting
	m	(Ljava/lang/String;)Lo;	b	getByName
	m	(I)Lo;	a	getById
	m	(C)Lo;	a	getByCode
	m	(ZZ)Ljava/util/Collection;	a	getNames
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lo;)Lo;	a	lambda$static$3
	m	(Lo;)Ljava/lang/String;	b	lambda$static$2
	m	(Lo;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
	m	(Lo;)Ljava/lang/String;	d	lambda$static$0
	m	()[Lo;	h	$values
	m	()V	<clinit>	<clinit>
c	p	net/minecraft/CrashReport
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	b	DATE_TIME_FORMATTER
	f	Ljava/lang/String;	c	title
	f	Ljava/lang/Throwable;	d	exception
	f	Ljava/util/List;	e	details
	f	Ljava/nio/file/Path;	f	saveFile
	f	Z	g	trackingStackTrace
	f	[Ljava/lang/StackTraceElement;	h	uncategorizedStackTrace
	f	Lae;	i	systemReport
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getTitle
	m	()Ljava/lang/Throwable;	b	getException
	m	()Ljava/lang/String;	c	getDetails
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
	m	()Ljava/lang/String;	d	getExceptionMessage
	m	(Lz;Ljava/util/List;)Ljava/lang/String;	a	getFriendlyReport
	m	(Lz;)Ljava/lang/String;	a	getFriendlyReport
	m	()Ljava/nio/file/Path;	e	getSaveFile
	m	(Ljava/nio/file/Path;Lz;Ljava/util/List;)Z	a	saveToFile
	m	(Ljava/nio/file/Path;Lz;)Z	a	saveToFile
	m	()Lae;	f	getSystemReport
	m	(Ljava/lang/String;)Lq;	a	addCategory
	m	(Ljava/lang/String;I)Lq;	a	addCategory
	m	(Ljava/lang/Throwable;Ljava/lang/String;)Lp;	a	forThrowable
	m	()V	g	preload
	m	()V	<clinit>	<clinit>
c	q	net/minecraft/CrashReportCategory
	f	Ljava/lang/String;	a	title
	f	Ljava/util/List;	b	entries
	f	[Ljava/lang/StackTraceElement;	c	stackTrace
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ldmw;DDD)Ljava/lang/String;	a	formatLocation
	m	(Ldmw;Ljb;)Ljava/lang/String;	a	formatLocation
	m	(Ldmw;III)Ljava/lang/String;	a	formatLocation
	m	(Ljava/lang/String;Lr;)Lq;	a	setDetail
	m	(Ljava/lang/String;Ljava/lang/Object;)Lq;	a	setDetail
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	setDetailError
	m	(I)I	a	fillInStackTrace
	m	(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z	a	validateStackTrace
	m	(I)V	b	trimStacktrace
	m	(Ljava/lang/StringBuilder;)V	a	getDetails
	m	()[Ljava/lang/StackTraceElement;	a	getStacktrace
	m	(Lq;Ldmw;Ljb;Leeb;)V	a	populateBlockDetails
	m	(Lq;Ldmw;Ljb;)Lq;	a	populateBlockLocationDetails
	m	(Ldmw;Ljb;)Ljava/lang/String;	b	lambda$populateBlockLocationDetails$0
c	q$a	net/minecraft/CrashReportCategory$Entry
	f	Ljava/lang/String;	a	key
	f	Ljava/lang/String;	b	value
	m	(Ljava/lang/String;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	b	getValue
c	r	net/minecraft/CrashReportDetail
c	s	net/minecraft/DefaultUncaughtExceptionHandler
	f	Lorg/slf4j/Logger;	a	logger
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	uncaughtException	uncaughtException
c	t	net/minecraft/DefaultUncaughtExceptionHandlerWithName
	f	Lorg/slf4j/Logger;	a	logger
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	uncaughtException	uncaughtException
c	u	net/minecraft/DetectedVersion
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lah;	a	BUILT_IN
	m	()V	<init>	<init>
	m	()Lah;	b	createFromConstants
	m	(Lcom/google/gson/JsonObject;)Lah;	a	createFromJson
	m	()Lah;	a	tryDetectVersion
	m	()V	<clinit>	<clinit>
c	v	net/minecraft/FieldsAreNonnullByDefault
c	w	net/minecraft/FileUtil
	f	Ljava/util/regex/Pattern;	a	COPY_COUNTER_PATTERN
	f	I	b	MAX_FILE_NAME
	f	Ljava/util/regex/Pattern;	c	RESERVED_WINDOWS_FILENAMES
	f	Ljava/util/regex/Pattern;	d	STRICT_PATH_SEGMENT_CHECK
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	sanitizeName
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	findAvailableName
	m	(Ljava/nio/file/Path;)Z	a	isPathNormalized
	m	(Ljava/nio/file/Path;)Z	b	isPathPortable
	m	(Ljava/lang/String;)Z	b	isPathPartPortable
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path;	b	createPathToResource
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getFullResourcePath
	m	(Ljava/lang/String;)Ljava/lang/String;	d	normalizeResourcePath
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	e	decomposePath
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path;	a	resolvePath
	m	(Ljava/lang/String;)Z	f	isValidStrictPathSegment
	m	([Ljava/lang/String;)V	a	validatePath
	m	(Ljava/nio/file/Path;)V	c	createDirectoriesSafe
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decomposePath$3
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decomposePath$2
	m	(Ljava/lang/String;)Ljava/lang/String;	g	lambda$decomposePath$1
	m	(Ljava/lang/String;)Ljava/lang/String;	h	lambda$decomposePath$0
	m	()V	<clinit>	<clinit>
c	x	net/minecraft/MethodsReturnNonnullByDefault
c	y	net/minecraft/Optionull
	m	()V	<init>	<init>
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	orElse
	m	(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	a	map
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	mapOrDefault
	m	(Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	mapOrElse
	m	(Ljava/util/Collection;)Ljava/lang/Object;	a	first
	m	(Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object;	a	firstOrDefault
	m	(Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object;	a	firstOrElse
	m	([Ljava/lang/Object;)Z	a	isNullOrEmpty
	m	([Z)Z	a	isNullOrEmpty
	m	([B)Z	a	isNullOrEmpty
	m	([C)Z	a	isNullOrEmpty
	m	([S)Z	a	isNullOrEmpty
	m	([I)Z	a	isNullOrEmpty
	m	([J)Z	a	isNullOrEmpty
	m	([F)Z	a	isNullOrEmpty
	m	([D)Z	a	isNullOrEmpty
c	z	net/minecraft/ReportType
	f	Ljava/lang/String;	f	header
	f	Ljava/util/List;	g	nuggets
	f	Lz;	a	CRASH
	f	Lz;	b	PROFILE
	f	Lz;	c	TEST
	f	Lz;	d	NETWORK_PROTOCOL_ERROR
	f	Lz;	e	CHUNK_IO_ERROR
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getErrorComment
	m	(Ljava/lang/StringBuilder;Ljava/util/List;)V	a	appendHeader
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	header
	m	()Ljava/util/List;	c	nuggets
	m	()V	<clinit>	<clinit>
c	aa	net/minecraft/ReportedException
	f	Lp;	a	report
	m	(Lp;)V	<init>	<init>
	m	()Lp;	a	getReport
	m	()Ljava/lang/Throwable;	getCause	getCause
	m	()Ljava/lang/String;	getMessage	getMessage
c	ab	net/minecraft/ResourceLocationException
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
c	ac	net/minecraft/SharedConstants
	f	Z	a	SNAPSHOT
	f	I	b	WORLD_VERSION
	f	Ljava/lang/String;	c	SERIES
	f	Ljava/lang/String;	d	VERSION_STRING
	f	I	e	RELEASE_NETWORK_PROTOCOL_VERSION
	f	I	f	SNAPSHOT_NETWORK_PROTOCOL_VERSION
	f	I	g	SNBT_NAG_VERSION
	f	I	bq	SNAPSHOT_PROTOCOL_BIT
	f	Z	h	CRASH_EAGERLY
	f	I	i	RESOURCE_PACK_FORMAT
	f	I	j	DATA_PACK_FORMAT
	f	I	k	LANGUAGE_FORMAT
	f	I	l	REPORT_FORMAT_VERSION
	f	Ljava/lang/String;	m	DATA_VERSION_TAG
	f	Z	n	FIX_TNT_DUPE
	f	Z	o	FIX_SAND_DUPE
	f	Z	p	USE_DEBUG_FEATURES
	f	Z	q	DEBUG_OPEN_INCOMPATIBLE_WORLDS
	f	Z	r	DEBUG_ALLOW_LOW_SIM_DISTANCE
	f	Z	s	DEBUG_HOTKEYS
	f	Z	t	DEBUG_UI_NARRATION
	f	Z	u	DEBUG_RENDER
	f	Z	v	DEBUG_SHUFFLE_UI_RENDERING_ORDER
	f	Z	w	DEBUG_RENDER_UI_LAYERING_RECTANGLES
	f	Z	x	DEBUG_PATHFINDING
	f	Z	y	DEBUG_WATER
	f	Z	z	DEBUG_HEIGHTMAP
	f	Z	A	DEBUG_COLLISION
	f	Z	B	DEBUG_SHOW_LOCAL_SERVER_ENTITY_HIT_BOXES
	f	Z	C	DEBUG_SUPPORT_BLOCKS
	f	Z	D	DEBUG_SHAPES
	f	Z	E	DEBUG_NEIGHBORSUPDATE
	f	Z	F	DEBUG_EXPERIMENTAL_REDSTONEWIRE_UPDATE_ORDER
	f	Z	G	DEBUG_STRUCTURES
	f	Z	H	DEBUG_LIGHT
	f	Z	I	DEBUG_SKY_LIGHT_SECTIONS
	f	Z	J	DEBUG_WORLDGENATTEMPT
	f	Z	K	DEBUG_SOLID_FACE
	f	Z	L	DEBUG_CHUNKS
	f	Z	M	DEBUG_GAME_EVENT_LISTENERS
	f	Z	N	DEBUG_DUMP_TEXTURE_ATLAS
	f	Z	O	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES
	f	Z	P	DEBUG_STRUCTURE_EDIT_MODE
	f	Z	Q	DEBUG_SAVE_STRUCTURES_AS_SNBT
	f	Z	R	DEBUG_SYNCHRONOUS_GL_LOGS
	f	Z	S	DEBUG_VERBOSE_SERVER_EVENTS
	f	Z	T	DEBUG_NAMED_RUNNABLES
	f	Z	U	DEBUG_GOAL_SELECTOR
	f	Z	V	DEBUG_VILLAGE_SECTIONS
	f	Z	W	DEBUG_BRAIN
	f	Z	X	DEBUG_BEES
	f	Z	Y	DEBUG_RAIDS
	f	Z	Z	DEBUG_BLOCK_BREAK
	f	Z	aa	DEBUG_MONITOR_TICK_TIMES
	f	Z	ab	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN
	f	Z	ac	DEBUG_DONT_SAVE_WORLD
	f	Z	ad	DEBUG_LARGE_DRIPSTONE
	f	Z	ae	DEBUG_CARVERS
	f	Z	af	DEBUG_ORE_VEINS
	f	Z	ag	DEBUG_SCULK_CATALYST
	f	Z	ah	DEBUG_BYPASS_REALMS_VERSION_CHECK
	f	Z	ai	DEBUG_SOCIAL_INTERACTIONS
	f	Z	aj	DEBUG_VALIDATE_RESOURCE_PATH_CASE
	f	Z	ak	DEBUG_UNLOCK_ALL_TRADES
	f	Z	al	DEBUG_BREEZE_MOB
	f	Z	am	DEBUG_TRIAL_SPAWNER_DETECTS_SHEEP_AS_PLAYERS
	f	Z	an	DEBUG_VAULT_DETECTS_SHEEP_AS_PLAYERS
	f	Z	ao	DEBUG_FORCE_ONBOARDING_SCREEN
	f	Z	ap	DEBUG_CURSOR_POS
	f	Z	aq	DEBUG_DEFAULT_SKIN_OVERRIDE
	f	Z	ar	DEBUG_IGNORE_LOCAL_MOB_CAP
	f	Z	as	DEBUG_DISABLE_LIQUID_SPREADING
	f	Z	at	DEBUG_AQUIFERS
	f	Z	au	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING
	f	Z	av	DEBUG_ENTITY_BLOCK_INTERSECTION
	f	Z	aw	debugGenerateSquareTerrainWithoutNoise
	f	Z	ax	debugGenerateStripedTerrainWithoutNoise
	f	Z	ay	DEBUG_ONLY_GENERATE_HALF_THE_WORLD
	f	Z	az	DEBUG_DISABLE_FLUID_GENERATION
	f	Z	aA	DEBUG_DISABLE_AQUIFERS
	f	Z	aB	DEBUG_DISABLE_SURFACE
	f	Z	aC	DEBUG_DISABLE_CARVERS
	f	Z	aD	DEBUG_DISABLE_STRUCTURES
	f	Z	aE	DEBUG_DISABLE_FEATURES
	f	Z	aF	DEBUG_DISABLE_ORE_VEINS
	f	Z	aG	DEBUG_DISABLE_BLENDING
	f	Z	aH	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION
	f	I	aI	DEFAULT_MINECRAFT_PORT
	f	Z	aJ	DEBUG_SUBTITLES
	f	I	aK	FAKE_MS_LATENCY
	f	I	aL	FAKE_MS_JITTER
	f	Lio/netty/util/ResourceLeakDetector$Level;	aM	NETTY_LEAK_DETECTION
	f	Z	aN	COMMAND_STACK_TRACES
	f	Z	aO	DEBUG_WORLD_RECREATE
	f	Z	aP	DEBUG_SHOW_SERVER_DEBUG_VALUES
	f	Z	aQ	DEBUG_FEATURE_COUNT
	f	Z	aR	DEBUG_RESOURCE_GENERATION_OVERRIDE
	f	Z	aS	DEBUG_FORCE_TELEMETRY
	f	Z	aT	DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND
	f	J	aU	MAXIMUM_TICK_TIME_NANOS
	f	F	aV	MAXIMUM_BLOCK_EXPLOSION_RESISTANCE
	f	Z	aW	USE_WORKFLOWS_HOOKS
	f	Z	aX	USE_DEVONLY
	f	Z	aY	CHECK_DATA_FIXER_SCHEMA
	f	Z	aZ	IS_RUNNING_IN_IDE
	f	I	ba	WORLD_RESOLUTION
	f	I	bb	MAX_CHAT_LENGTH
	f	I	bc	MAX_USER_INPUT_COMMAND_LENGTH
	f	I	bd	MAX_FUNCTION_COMMAND_LENGTH
	f	I	be	MAX_PLAYER_NAME_LENGTH
	f	I	bf	MAX_CHAINED_NEIGHBOR_UPDATES
	f	I	bg	MAX_RENDER_DISTANCE
	f	[C	bh	ILLEGAL_FILE_CHARACTERS
	f	I	bi	TICKS_PER_SECOND
	f	I	bj	MILLIS_PER_TICK
	f	I	bk	TICKS_PER_MINUTE
	f	I	bl	TICKS_PER_GAME_DAY
	f	F	bm	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK
	f	F	bn	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE
	f	F	bo	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY
	f	I	bp	WORLD_ICON_SIZE
	f	Lah;	br	CURRENT_VERSION
	m	()V	<init>	<init>
	m	(Lah;)V	a	setVersion
	m	()V	a	tryDetectVersion
	m	()Lah;	b	getCurrentVersion
	m	()I	c	getProtocolVersion
	m	(Ldlz;)Z	a	debugVoidTerrain
	m	()V	<clinit>	<clinit>
c	ad	net/minecraft/SuppressForbidden
	m	()Ljava/lang/String;	a	reason
c	ae	net/minecraft/SystemReport
	f	J	a	BYTES_PER_MEBIBYTE
	f	J	b	ONE_GIGA
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	OPERATING_SYSTEM
	f	Ljava/lang/String;	e	JAVA_VERSION
	f	Ljava/lang/String;	f	JAVA_VM_VERSION
	f	Ljava/util/Map;	g	entries
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	setDetail
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	a	setDetail
	m	(Loshi/SystemInfo;)V	a	putHardware
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	ignoreErrors
	m	(J)F	a	sizeInMiB
	m	(Ljava/util/List;)V	a	putPhysicalMemory
	m	(Loshi/hardware/VirtualMemory;)V	a	putVirtualMemory
	m	(Loshi/hardware/GlobalMemory;)V	a	putMemory
	m	(Ljava/util/List;)V	b	putGraphics
	m	(Loshi/hardware/CentralProcessor;)V	a	putProcessor
	m	()V	b	putStorage
	m	(Ljava/lang/String;)V	a	putSpaceForProperty
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)V	b	putSpaceForPath
	m	(Ljava/lang/StringBuilder;)V	a	appendToCrashReportString
	m	()Ljava/lang/String;	a	toLineSeparatedString
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$toLineSeparatedString$23
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$appendToCrashReportString$22
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$putSpaceForProperty$21
	m	()Ljava/lang/String;	c	lambda$putStorage$20
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	b	lambda$putProcessor$19
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	c	lambda$putProcessor$18
	m	(Loshi/hardware/CentralProcessor;)Ljava/lang/String;	d	lambda$putProcessor$17
	m	(Loshi/hardware/CentralProcessor$ProcessorIdentifier;)Ljava/lang/String;	a	lambda$putProcessor$16
	m	(Loshi/hardware/GraphicsCard;)Ljava/lang/String;	a	lambda$putGraphics$15
	m	(Loshi/hardware/GlobalMemory;)V	b	lambda$putMemory$14
	m	(Loshi/hardware/GlobalMemory;)V	c	lambda$putMemory$13
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	b	lambda$putVirtualMemory$12
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	c	lambda$putVirtualMemory$11
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	d	lambda$putVirtualMemory$10
	m	(Loshi/hardware/VirtualMemory;)Ljava/lang/String;	e	lambda$putVirtualMemory$9
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	a	lambda$putPhysicalMemory$8
	m	(Loshi/hardware/PhysicalMemory;)Ljava/lang/String;	b	lambda$putPhysicalMemory$7
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	a	lambda$putHardware$6
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	b	lambda$putHardware$5
	m	(Loshi/hardware/HardwareAbstractionLayer;)V	c	lambda$putHardware$4
	m	()Ljava/lang/String;	d	lambda$new$3
	m	()V	e	lambda$new$2
	m	()Ljava/lang/String;	f	lambda$new$1
	m	()Ljava/lang/String;	g	lambda$new$0
	m	()V	<clinit>	<clinit>
c	af	net/minecraft/TracingExecutor
	f	Ljava/util/concurrent/ExecutorService;	a	service
	m	(Ljava/util/concurrent/ExecutorService;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/concurrent/Executor;	a	forName
	m	(Ljava/lang/Runnable;)V	execute	execute
	m	(JLjava/util/concurrent/TimeUnit;)V	a	shutdownAndAwait
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	a	wrapUnnamed
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/concurrent/ExecutorService;	a	service
	m	(Ljava/lang/Runnable;)V	b	lambda$wrapUnnamed$4
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	lambda$forName$3
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	b	lambda$forName$2
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	c	lambda$forName$1
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	d	lambda$forName$0
c	ag	net/minecraft/Util
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	I	h	DEFAULT_MAX_THREADS
	f	I	i	DEFAULT_SAFE_FILE_OPERATION_RETRIES
	f	Ljava/lang/String;	j	MAX_THREADS_SYSTEM_PROPERTY
	f	Laf;	k	BACKGROUND_EXECUTOR
	f	Laf;	l	IO_POOL
	f	Laf;	m	DOWNLOAD_POOL
	f	Ljava/time/format/DateTimeFormatter;	n	FILENAME_DATE_TIME_FORMATTER
	f	I	a	LINEAR_LOOKUP_THRESHOLD
	f	Ljava/util/Set;	o	ALLOWED_UNTRUSTED_LINK_PROTOCOLS
	f	J	b	NANOS_PER_MILLI
	f	Lbdf$a;	c	timeSource
	f	Lcom/google/common/base/Ticker;	d	TICKER
	f	Ljava/util/UUID;	e	NIL_UUID
	f	Ljava/nio/file/spi/FileSystemProvider;	f	ZIP_FILE_SYSTEM_PROVIDER
	f	Ljava/util/function/Consumer;	p	thePauser
	m	()V	<init>	<init>
	m	()Ljava/util/stream/Collector;	a	toMap
	m	()Ljava/util/stream/Collector;	b	toMutableList
	m	(Lefe;Ljava/lang/Object;)Ljava/lang/String;	a	getPropertyName
	m	(Ljava/lang/String;Lame;)Ljava/lang/String;	a	makeDescriptionId
	m	()J	c	getMillis
	m	()J	d	getNanos
	m	()J	e	getEpochMillis
	m	()Ljava/lang/String;	f	getFilenameFormattedDateTime
	m	(Ljava/lang/String;)Laf;	c	makeExecutor
	m	()I	g	maxAllowedExecutorThreads
	m	()I	q	getMaxThreads
	m	()Laf;	h	backgroundExecutor
	m	()Laf;	i	ioPool
	m	()Laf;	j	nonCriticalIoPool
	m	()V	k	shutdownExecutors
	m	(Ljava/lang/String;Z)Laf;	a	makeIoExecutor
	m	(Ljava/lang/Throwable;)V	a	throwAsRuntime
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	onThreadException
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	fetchChoiceType
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	b	doFetchChoiceType
	m	(Ljava/lang/Runnable;Ljava/lang/String;)V	a	runNamed
	m	(Ljy;Ljava/lang/Object;)Ljava/lang/String;	a	getRegisteredName
	m	()Ljava/util/function/Predicate;	l	allOf
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	allOf
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	a	allOf
	m	()Ljava/util/function/Predicate;	m	anyOf
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	([Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	b	anyOf
	m	(IILjava/util/List;)Z	a	isSymmetrical
	m	(II)I	a	growByHalf
	m	()Lag$a;	n	getPlatform
	m	(Ljava/lang/String;)Ljava/net/URI;	a	parseAndValidateUntrustedUri
	m	()Ljava/util/stream/Stream;	o	getVmArguments
	m	(Ljava/util/List;)Ljava/lang/Object;	c	lastOf
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInIterable
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object;	b	findPreviousInIterable
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	a	make
	m	(Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object;	a	make
	m	(Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/Map;	a	makeEnumMap
	m	(Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/Map;	a	mapValues
	m	(Ljava/util/Map;Lcom/google/common/base/Function;)Ljava/util/Map;	a	mapValuesLazy
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	d	sequence
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	e	sequenceFailFast
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	f	sequenceFailFastAndCancel
	m	(Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fallibleSequence
	m	(Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional;	a	ifElse
	m	(Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	name
	m	(Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable;	a	name
	m	(Ljava/lang/String;)V	b	logAndPauseIfInIde
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	logAndPauseIfInIde
	m	(Ljava/lang/Throwable;)Ljava/lang/Throwable;	b	pauseInIde
	m	(Ljava/util/function/Consumer;)V	a	setPause
	m	(Ljava/lang/String;)V	d	doPause
	m	(Ljava/lang/Throwable;)Ljava/lang/String;	c	describeError
	m	([Ljava/lang/Object;Lbck;)Ljava/lang/Object;	a	getRandom
	m	([ILbck;)I	a	getRandom
	m	(Ljava/util/List;Lbck;)Ljava/lang/Object;	a	getRandom
	m	(Ljava/util/List;Lbck;)Ljava/util/Optional;	b	getRandomSafe
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createRenamer
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	a	createDeleter
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	b	createFileDeletedCheck
	m	(Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier;	c	createFileCreatedCheck
	m	([Ljava/util/function/BooleanSupplier;)Z	a	executeInSequence
	m	(ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z	a	runWithRetries
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	safeReplaceFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)Z	a	safeReplaceOrMoveFile
	m	(Ljava/lang/String;II)I	a	offsetByCodepoints
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	prefix
	m	(Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
	m	(Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
	m	(Ljava/util/List;I)Lcom/mojang/serialization/DataResult;	a	fixedSize
	m	()V	p	startTimerHackThread
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	copyBetweenDirs
	m	(Ljava/lang/String;Ln;)Ljava/lang/String;	a	sanitizeName
	m	(Ljava/util/function/Function;)Lbct;	a	singleKeyCache
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	memoize
	m	(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;	a	memoize
	m	(Ljava/util/stream/Stream;Lbck;)Ljava/util/List;	a	toShuffledList
	m	(Ljava/util/stream/IntStream;Lbck;)Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	toShuffledList
	m	([Ljava/lang/Object;Lbck;)Ljava/util/List;	b	shuffledCopy
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lbck;)Ljava/util/List;	a	shuffledCopy
	m	(Ljava/util/List;Lbck;)V	c	shuffle
	m	(Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	c	blockUntilDone
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object;	a	blockUntilDone
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	g	createIndexLookup
	m	(Ljava/util/List;)Ljava/util/function/ToIntFunction;	h	createIndexIdentityLookup
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/Typed;	a	writeAndReadTypedOrThrow
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/Typed;	a	readTypedOrThrow
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Z)Lcom/mojang/datafixers/Typed;	a	readTypedOrThrow
	m	(Ljava/util/List;Ljava/lang/Object;)Ljava/util/List;	a	copyAndAdd
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	a	copyAndAdd
	m	(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;	a	copyAndPut
	m	(Ln;I)Ljava/lang/String;	a	lambda$sanitizeName$30
	m	(I)Ljava/lang/String;	a	lambda$fixedSize$29
	m	(I)Ljava/lang/String;	b	lambda$fixedSize$28
	m	(I)Ljava/lang/String;	c	lambda$fixedSize$27
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$prefix$26
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	a	lambda$fallibleSequence$25
	m	(Ljava/util/List;[Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$fallibleSequence$24
	m	(Ljava/util/function/Consumer;Ljava/util/List;ILjava/lang/Object;Ljava/lang/Throwable;)V	a	lambda$fallibleSequence$23
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/List;Ljava/lang/Throwable;)V	a	lambda$sequenceFailFastAndCancel$22
	m	(Ljava/util/List;Ljava/lang/Void;)Ljava/util/List;	b	lambda$sequence$21
	m	(Ljava/util/function/Function;Ljava/util/Map$Entry;)Ljava/lang/Object;	a	lambda$mapValues$20
	m	(Ljava/lang/String;)Z	e	lambda$getVmArguments$19
	m	(I)[Ljava/util/function/Predicate;	d	lambda$anyOf$18
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$17
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$16
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$15
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$14
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	a	lambda$anyOf$13
	m	(Ljava/lang/Object;)Z	a	lambda$anyOf$12
	m	(I)[Ljava/util/function/Predicate;	e	lambda$allOf$11
	m	([Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$10
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$9
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$8
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$7
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljava/lang/Object;)Z	b	lambda$allOf$6
	m	(Ljava/lang/Object;)Z	b	lambda$allOf$5
	m	(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;ZLjava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$makeIoExecutor$4
	m	(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicInteger;Ljava/util/concurrent/ForkJoinPool;)Ljava/util/concurrent/ForkJoinWorkerThread;	a	lambda$makeExecutor$3
	m	(Ljava/lang/String;)V	f	lambda$static$2
	m	()Ljava/lang/IllegalStateException;	r	lambda$static$1
	m	(Ljava/nio/file/spi/FileSystemProvider;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ag$1	net/minecraft/Util$1
	m	()V	<init>	<init>
	m	()J	read	read
c	ag$2	net/minecraft/Util$10
	f	Ljava/util/Map;	b	cache
	f	Ljava/util/function/Function;	a	val$function
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()Ljava/lang/String;	toString	toString
c	ag$3	net/minecraft/Util$11
	f	Ljava/util/Map;	b	cache
	f	Ljava/util/function/BiFunction;	a	val$function
	m	(Ljava/util/function/BiFunction;)V	<init>	<init>
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$apply$0
c	ag$4	net/minecraft/Util$2
	f	Ljava/lang/String;	a	val$threadName
	f	Ljava/lang/String;	b	val$name
	m	(Ljava/util/concurrent/ForkJoinPool;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()V	onStart	onStart
	m	(Ljava/lang/Throwable;)V	onTermination	onTermination
c	ag$5	net/minecraft/Util$5
	f	Ljava/nio/file/Path;	a	val$from
	f	Ljava/nio/file/Path;	b	val$to
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	<init>	<init>
	m	()Z	getAsBoolean	getAsBoolean
	m	()Ljava/lang/String;	toString	toString
c	ag$6	net/minecraft/Util$6
	f	Ljava/nio/file/Path;	a	val$target
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Z	getAsBoolean	getAsBoolean
	m	()Ljava/lang/String;	toString	toString
c	ag$7	net/minecraft/Util$7
	f	Ljava/nio/file/Path;	a	val$target
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Z	getAsBoolean	getAsBoolean
	m	()Ljava/lang/String;	toString	toString
c	ag$8	net/minecraft/Util$8
	f	Ljava/nio/file/Path;	a	val$target
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Z	getAsBoolean	getAsBoolean
	m	()Ljava/lang/String;	toString	toString
c	ag$9	net/minecraft/Util$9
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()V	run	run
c	ag$a	net/minecraft/Util$OS
	f	Lag$a;	a	LINUX
	f	Lag$a;	b	SOLARIS
	f	Lag$a;	c	WINDOWS
	f	Lag$a;	d	OSX
	f	Lag$a;	e	UNKNOWN
	f	Ljava/lang/String;	f	telemetryName
	f	[Lag$a;	g	$VALUES
	m	()[Lag$a;	values	values
	m	(Ljava/lang/String;)Lag$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljava/net/URI;)V	a	openUri
	m	(Ljava/io/File;)V	a	openFile
	m	(Ljava/nio/file/Path;)V	a	openPath
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
	m	(Ljava/lang/String;)V	a	openUri
	m	()Ljava/lang/String;	a	telemetryName
	m	(Ljava/net/URI;)Ljava/lang/Process;	c	lambda$openUri$0
	m	()[Lag$a;	b	$values
	m	()V	<clinit>	<clinit>
c	ag$a$1	net/minecraft/Util$OS$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
c	ag$a$2	net/minecraft/Util$OS$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljava/net/URI;)[Ljava/lang/String;	b	getOpenUriArguments
c	ah	net/minecraft/WorldVersion
	m	()Lfck;	a	dataVersion
	m	()Ljava/lang/String;	b	id
	m	()Ljava/lang/String;	c	name
	m	()I	d	protocolVersion
	m	(Lawd;)I	a	packVersion
	m	()Ljava/util/Date;	e	buildTime
	m	()Z	f	stable
c	ah$1	net/minecraft/WorldVersion$1
	f	[I	a	$SwitchMap$net$minecraft$server$packs$PackType
	m	()V	<clinit>	<clinit>
c	ah$a	net/minecraft/WorldVersion$Simple
	f	Ljava/lang/String;	a	id
	f	Ljava/lang/String;	b	name
	f	Lfck;	c	dataVersion
	f	I	d	protocolVersion
	f	I	e	resourcePackVersion
	f	I	f	datapackVersion
	f	Ljava/util/Date;	g	buildTime
	f	Z	h	stable
	m	(Ljava/lang/String;Ljava/lang/String;Lfck;IIILjava/util/Date;Z)V	<init>	<init>
	m	(Lawd;)I	a	packVersion
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	id
	m	()Ljava/lang/String;	c	name
	m	()Lfck;	a	dataVersion
	m	()I	d	protocolVersion
	m	()I	g	resourcePackVersion
	m	()I	h	datapackVersion
	m	()Ljava/util/Date;	e	buildTime
	m	()Z	f	stable
c	ai	net/minecraft/advancements/Advancement
	f	Ljava/util/Optional;	c	parent
	f	Ljava/util/Optional;	d	display
	f	Lan;	e	rewards
	f	Ljava/util/Map;	f	criteria
	f	Lam;	g	requirements
	f	Z	h	sendsTelemetryEvent
	f	Ljava/util/Optional;	i	name
	f	Lcom/mojang/serialization/Codec;	j	CRITERIA_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lan;Ljava/util/Map;Lam;Z)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Lan;Ljava/util/Map;Lam;ZLjava/util/Optional;)V	<init>	<init>
	m	(Lai;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Lav;)Lxo;	a	decorateName
	m	(Laj;)Lxo;	a	name
	m	(Lwx;)V	a	write
	m	(Lwx;)Lai;	b	read
	m	()Z	a	isRoot
	m	(Lbci;Ljm$a;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	parent
	m	()Ljava/util/Optional;	c	display
	m	()Lan;	d	rewards
	m	()Ljava/util/Map;	e	criteria
	m	()Lam;	f	requirements
	m	()Z	g	sendsTelemetryEvent
	m	()Ljava/util/Optional;	h	name
	m	(Lbci;Ljm$a;Ljava/lang/String;Lar;)V	a	lambda$validate$9
	m	(Laj;)Lxo;	b	lambda$name$8
	m	(Lxo;Lyl;)Lyl;	a	lambda$decorateName$7
	m	(Lai;Lam;)Lai;	a	lambda$validate$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ljava/util/Optional;Ljava/util/Optional;Lan;Ljava/util/Map;Ljava/util/Optional;Ljava/lang/Boolean;)Lai;	a	lambda$static$4
	m	(Ljava/util/Map;)Lam;	a	lambda$static$3
	m	(Lai;)Ljava/util/Optional;	b	lambda$static$2
	m	(Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	m	()Ljava/lang/String;	i	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ai$a	net/minecraft/advancements/Advancement$Builder
	f	Ljava/util/Optional;	a	parent
	f	Ljava/util/Optional;	b	display
	f	Lan;	c	rewards
	f	Lcom/google/common/collect/ImmutableMap$Builder;	d	criteria
	f	Ljava/util/Optional;	e	requirements
	f	Lam$a;	f	requirementsStrategy
	f	Z	g	sendsTelemetryEvent
	m	()V	<init>	<init>
	m	()Lai$a;	a	advancement
	m	()Lai$a;	b	recipeAdvancement
	m	(Laj;)Lai$a;	a	parent
	m	(Lame;)Lai$a;	a	parent
	m	(Ldcv;Lxo;Lxo;Lame;Lap;ZZZ)Lai$a;	a	display
	m	(Ldmt;Lxo;Lxo;Lame;Lap;ZZZ)Lai$a;	a	display
	m	(Lav;)Lai$a;	a	display
	m	(Lan$a;)Lai$a;	a	rewards
	m	(Lan;)Lai$a;	a	rewards
	m	(Ljava/lang/String;Lar;)Lai$a;	a	addCriterion
	m	(Lam$a;)Lai$a;	a	requirements
	m	(Lam;)Lai$a;	a	requirements
	m	()Lai$a;	c	sendsTelemetryEvent
	m	(Lame;)Laj;	b	build
	m	(Ljava/util/function/Consumer;Ljava/lang/String;)Laj;	a	save
	m	(Ljava/util/Map;)Lam;	a	lambda$build$0
c	aj	net/minecraft/advancements/AdvancementHolder
	f	Lame;	c	id
	f	Lai;	d	value
	f	Lzm;	a	STREAM_CODEC
	f	Lzm;	b	LIST_STREAM_CODEC
	m	(Lame;Lai;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Lame;	a	id
	m	()Lai;	b	value
	m	()V	<clinit>	<clinit>
c	ak	net/minecraft/advancements/AdvancementNode
	f	Laj;	a	holder
	f	Lak;	b	parent
	f	Ljava/util/Set;	c	children
	m	(Laj;Lak;)V	<init>	<init>
	m	()Lai;	a	advancement
	m	()Laj;	b	holder
	m	()Lak;	c	parent
	m	()Lak;	d	root
	m	(Lak;)Lak;	a	getRoot
	m	()Ljava/lang/Iterable;	e	children
	m	(Lak;)V	b	addChild
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
c	al	net/minecraft/advancements/AdvancementProgress
	f	Ljava/time/format/DateTimeFormatter;	b	OBTAINED_TIME_FORMAT
	f	Lcom/mojang/serialization/Codec;	c	OBTAINED_TIME_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CRITERIA_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	e	criteria
	f	Lam;	f	requirements
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Lam;)V	a	update
	m	()Z	a	isDone
	m	()Z	b	hasProgress
	m	(Ljava/lang/String;)Z	a	grantProgress
	m	(Ljava/lang/String;)Z	b	revokeProgress
	m	()Ljava/lang/String;	toString	toString
	m	(Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lal;	b	fromNetwork
	m	(Ljava/lang/String;)Las;	c	getCriterion
	m	(Ljava/lang/String;)Z	d	isCriterionDone
	m	()F	c	getPercent
	m	()Lxo;	d	getProgressText
	m	()I	h	countCompletedRequirements
	m	()Ljava/lang/Iterable;	e	getRemainingCriteria
	m	()Ljava/lang/Iterable;	f	getCompletedCriteria
	m	()Ljava/time/Instant;	g	getFirstProgressDate
	m	(Lal;)I	a	compareTo
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(Lwg;Las;)V	a	lambda$serializeToNetwork$9
	m	(Ljava/util/Set;Ljava/util/Map$Entry;)Z	a	lambda$update$8
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
	m	(Ljava/util/Map;Ljava/lang/Boolean;)Lal;	a	lambda$static$6
	m	(Lal;)Ljava/util/Map;	b	lambda$static$5
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$static$4
	m	(Ljava/util/Map$Entry;)Ljava/time/Instant;	a	lambda$static$3
	m	(Ljava/util/Map$Entry;)Z	b	lambda$static$2
	m	(Ljava/util/Map;)Ljava/util/Map;	b	lambda$static$1
	m	(Ljava/time/Instant;)Ljava/time/temporal/TemporalAccessor;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	am	net/minecraft/advancements/AdvancementRequirements
	f	Ljava/util/List;	c	requirements
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lam;	b	EMPTY
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Ljava/util/Collection;)Lam;	a	allOf
	m	(Ljava/util/Collection;)Lam;	b	anyOf
	m	()I	a	size
	m	(Ljava/util/function/Predicate;)Z	a	test
	m	(Ljava/util/function/Predicate;)I	b	count
	m	(Ljava/util/List;Ljava/util/function/Predicate;)Z	a	anyMatch
	m	(Ljava/util/Set;)Lcom/mojang/serialization/DataResult;	a	validate
	m	()Z	b	isEmpty
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/util/Set;	c	names
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	d	requirements
	m	(Ljava/util/Set;Ljava/util/Set;)Ljava/lang/String;	a	lambda$validate$3
	m	()Ljava/lang/String;	e	lambda$validate$2
	m	(Lwg;Ljava/util/List;)V	a	lambda$write$1
	m	(Lwg;)Ljava/util/List;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	am$a	net/minecraft/advancements/AdvancementRequirements$Strategy
	f	Lam$a;	a	AND
	f	Lam$a;	b	OR
	m	(Ljava/util/Collection;)Lam;	create	create
	m	()V	<clinit>	<clinit>
c	an	net/minecraft/advancements/AdvancementRewards
	f	I	c	experience
	f	Ljava/util/List;	d	loot
	f	Ljava/util/List;	e	recipes
	f	Ljava/util/Optional;	f	function
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lan;	b	EMPTY
	m	(ILjava/util/List;Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	(Lauc;)V	a	grant
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	experience
	m	()Ljava/util/List;	b	loot
	m	()Ljava/util/List;	c	recipes
	m	()Ljava/util/Optional;	d	function
	m	(Lnet/minecraft/server/MinecraftServer;Lauc;Lib;)V	a	lambda$grant$2
	m	(Lnet/minecraft/server/MinecraftServer;Lef;)Ljava/util/Optional;	a	lambda$grant$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	an$a	net/minecraft/advancements/AdvancementRewards$Builder
	f	I	a	experience
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	loot
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	recipes
	f	Ljava/util/Optional;	d	function
	m	()V	<init>	<init>
	m	(I)Lan$a;	a	experience
	m	(I)Lan$a;	b	addExperience
	m	(Lamd;)Lan$a;	a	loot
	m	(Lamd;)Lan$a;	b	addLootTable
	m	(Lamd;)Lan$a;	c	recipe
	m	(Lamd;)Lan$a;	d	addRecipe
	m	(Lame;)Lan$a;	a	function
	m	(Lame;)Lan$a;	b	runs
	m	()Lan;	a	build
c	ao	net/minecraft/advancements/AdvancementTree
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	nodes
	f	Ljava/util/Set;	c	roots
	f	Ljava/util/Set;	d	tasks
	f	Lao$a;	e	listener
	m	()V	<init>	<init>
	m	(Lak;)V	a	remove
	m	(Ljava/util/Set;)V	a	remove
	m	(Ljava/util/Collection;)V	a	addAll
	m	(Laj;)Z	b	tryInsert
	m	()V	a	clear
	m	()Ljava/lang/Iterable;	b	roots
	m	()Ljava/util/Collection;	c	nodes
	m	(Lame;)Lak;	a	get
	m	(Laj;)Lak;	a	get
	m	(Lao$a;)V	a	setListener
	m	()V	<clinit>	<clinit>
c	ao$a	net/minecraft/advancements/AdvancementTree$Listener
	m	(Lak;)V	a	onAddAdvancementRoot
	m	(Lak;)V	b	onRemoveAdvancementRoot
	m	(Lak;)V	c	onAddAdvancementTask
	m	(Lak;)V	d	onRemoveAdvancementTask
	m	()V	a	onAdvancementsCleared
c	ap	net/minecraft/advancements/AdvancementType
	f	Lap;	a	TASK
	f	Lap;	b	CHALLENGE
	f	Lap;	c	GOAL
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	Lo;	f	chatColor
	f	Lxo;	g	displayName
	f	[Lap;	h	$VALUES
	m	()[Lap;	values	values
	m	(Ljava/lang/String;)Lap;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lo;)V	<init>	<init>
	m	()Lo;	a	getChatColor
	m	()Lxo;	b	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Laj;Lauc;)Lyc;	a	createAnnouncement
	m	()[Lap;	d	$values
	m	()V	<clinit>	<clinit>
c	aq	net/minecraft/advancements/CriteriaTriggers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcj;	b	IMPOSSIBLE
	f	Lcq;	c	PLAYER_KILLED_ENTITY
	f	Lcq;	d	ENTITY_KILLED_PLAYER
	f	Lbv;	e	ENTER_BLOCK
	f	Lcl;	f	INVENTORY_CHANGED
	f	Ldi;	g	RECIPE_UNLOCKED
	f	Ldc;	h	PLAYER_HURT_ENTITY
	f	Lby;	i	ENTITY_HURT_PLAYER
	f	Lbt;	j	ENCHANTED_ITEM
	f	Lce;	k	FILLED_BUCKET
	f	Lbb;	l	BREWED_POTION
	f	Lbh;	m	CONSTRUCT_BEACON
	f	Ldy;	n	USED_ENDER_EYE
	f	Ldt;	o	SUMMONED_ENTITY
	f	Lba;	p	BRED_ANIMALS
	f	Ldf;	q	LOCATION
	f	Ldf;	r	SLEPT_IN_BED
	f	Lbl;	s	CURED_ZOMBIE_VILLAGER
	f	Ldx;	t	TRADE
	f	Lcm;	u	ITEM_DURABILITY_CHANGED
	f	Lcr;	v	LEVITATION
	f	Lbc;	w	CHANGED_DIMENSION
	f	Ldf;	x	TICK
	f	Ldv;	y	TAME_ANIMAL
	f	Lco;	z	PLACED_BLOCK
	f	Lbi;	A	CONSUME_ITEM
	f	Lbs;	B	EFFECTS_CHANGED
	f	Ldz;	C	USED_TOTEM
	f	Lbr;	D	NETHER_TRAVEL
	f	Lcg;	E	FISHING_ROD_HOOKED
	f	Lbd;	F	CHANNELED_LIGHTNING
	f	Ldk;	G	SHOT_CROSSBOW
	f	Lcp;	H	KILLED_BY_ARROW
	f	Ldf;	I	RAID_WIN
	f	Ldf;	J	RAID_OMEN
	f	Ldn;	K	HONEY_BLOCK_SLIDE
	f	Lay;	L	BEE_NEST_DESTROYED
	f	Ldw;	M	TARGET_BLOCK_HIT
	f	Lco;	N	ITEM_USED_ON_BLOCK
	f	Lbp;	O	DEFAULT_BLOCK_USE
	f	Lax;	P	ANY_BLOCK_USE
	f	Lcw;	Q	GENERATE_LOOT
	f	Ldb;	R	THROWN_ITEM_PICKED_UP_BY_ENTITY
	f	Ldb;	S	THROWN_ITEM_PICKED_UP_BY_PLAYER
	f	Ldd;	T	PLAYER_INTERACTED_WITH_ENTITY
	f	Ldd;	U	PLAYER_SHEARED_EQUIPMENT
	f	Ldr;	V	START_RIDING_TRIGGER
	f	Lcu;	W	LIGHTNING_STRIKE
	f	Lea;	X	USING_ITEM
	f	Lbr;	Y	FALL_FROM_HEIGHT
	f	Lbr;	Z	RIDE_ENTITY_IN_LAVA_TRIGGER
	f	Lcq;	aa	KILL_MOB_NEAR_SCULK_CATALYST
	f	Lco;	ab	ALLAY_DROP_ITEM_ON_BLOCK
	f	Ldf;	ac	AVOID_VIBRATION
	f	Ldh;	ad	RECIPE_CRAFTED
	f	Ldh;	ae	CRAFTER_RECIPE_CRAFTED
	f	Lcd;	af	FALL_AFTER_EXPLOSION
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lat;)Lat;	a	register
	m	(Ljy;)Lat;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	ar	net/minecraft/advancements/Criterion
	f	Lat;	b	trigger
	f	Lau;	c	triggerInstance
	f	Lcom/mojang/serialization/MapCodec;	d	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lat;Lau;)V	<init>	<init>
	m	(Lat;)Lcom/mojang/serialization/Codec;	a	criterionCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lat;	a	trigger
	m	()Lau;	b	triggerInstance
	m	(Lat;Lau;)Lar;	a	lambda$criterionCodec$0
	m	()V	<clinit>	<clinit>
c	as	net/minecraft/advancements/CriterionProgress
	f	Ljava/time/Instant;	a	obtained
	m	()V	<init>	<init>
	m	(Ljava/time/Instant;)V	<init>	<init>
	m	()Z	a	isDone
	m	()V	b	grant
	m	()V	c	revoke
	m	()Ljava/time/Instant;	d	getObtained
	m	()Ljava/lang/String;	toString	toString
	m	(Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Las;	b	fromNetwork
c	at	net/minecraft/advancements/CriterionTrigger
	m	(Lamm;Lat$a;)V	a	addPlayerListener
	m	(Lamm;Lat$a;)V	b	removePlayerListener
	m	(Lamm;)V	a	removePlayerListeners
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lau;)Lar;	a	createCriterion
c	at$a	net/minecraft/advancements/CriterionTrigger$Listener
	f	Lau;	a	trigger
	f	Laj;	b	advancement
	f	Ljava/lang/String;	c	criterion
	m	(Lau;Laj;Ljava/lang/String;)V	<init>	<init>
	m	(Lamm;)V	a	run
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lau;	a	trigger
	m	()Laj;	b	advancement
	m	()Ljava/lang/String;	c	criterion
c	au	net/minecraft/advancements/CriterionTriggerInstance
	m	(Lbk;)V	a	validate
c	av	net/minecraft/advancements/DisplayInfo
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lxo;	c	title
	f	Lxo;	d	description
	f	Ldcv;	e	icon
	f	Ljava/util/Optional;	f	background
	f	Lap;	g	type
	f	Z	h	showToast
	f	Z	i	announceChat
	f	Z	j	hidden
	f	F	k	x
	f	F	l	y
	m	(Ldcv;Lxo;Lxo;Ljava/util/Optional;Lap;ZZZ)V	<init>	<init>
	m	(FF)V	a	setLocation
	m	()Lxo;	a	getTitle
	m	()Lxo;	b	getDescription
	m	()Ldcv;	c	getIcon
	m	()Ljava/util/Optional;	d	getBackground
	m	()Lap;	e	getType
	m	()F	f	getX
	m	()F	g	getY
	m	()Z	h	shouldShowToast
	m	()Z	i	shouldAnnounceChat
	m	()Z	j	isHidden
	m	(Lwx;)V	a	serializeToNetwork
	m	(Lwx;)Lav;	b	fromNetwork
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aw	net/minecraft/advancements/TreeNodePosition
	f	Lak;	a	node
	f	Law;	b	parent
	f	Law;	c	previousSibling
	f	I	d	childIndex
	f	Ljava/util/List;	e	children
	f	Law;	f	ancestor
	f	Law;	g	thread
	f	I	h	x
	f	F	i	y
	f	F	j	mod
	f	F	k	change
	f	F	l	shift
	m	(Lak;Law;Law;II)V	<init>	<init>
	m	(Lak;Law;)Law;	a	addChild
	m	()V	a	firstWalk
	m	(FIF)F	a	secondWalk
	m	(F)V	a	thirdWalk
	m	()V	b	executeShifts
	m	()Law;	c	previousOrThread
	m	()Law;	d	nextOrThread
	m	(Law;)Law;	a	apportion
	m	(Law;F)V	a	moveSubtree
	m	(Law;Law;)Law;	a	getAncestor
	m	()V	e	finalizePosition
	m	(Lak;)V	a	run
	m	(Lav;)V	a	lambda$finalizePosition$0
c	ax	net/minecraft/advancements/critereon/AnyBlockInteractionTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljb;Ldcv;)V	a	trigger
	m	(Lfdj;Lax$a;)Z	a	lambda$trigger$0
c	ax$a	net/minecraft/advancements/critereon/AnyBlockInteractionTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	location
	m	(Lbk;Lbj;)V	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ay	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Leeb;Ldcv;I)V	a	trigger
	m	(Leeb;Ldcv;ILay$a;)Z	a	lambda$trigger$0
c	ay$a	net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	item
	f	Lcx$d;	e	beesInside
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	(Ldpz;Lcn$a;Lcx$d;)Lar;	a	destroyedBeeNest
	m	(Leeb;Ldcv;I)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	block
	m	()Ljava/util/Optional;	c	item
	m	()Lcx$d;	d	beesInside
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	az	net/minecraft/advancements/critereon/BlockPredicate
	f	Ljava/util/Optional;	c	blocks
	f	Ljava/util/Optional;	d	properties
	f	Ljava/util/Optional;	e	nbt
	f	Lbo;	f	components
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lbo;)V	<init>	<init>
	m	(Laub;Ljb;)Z	a	matches
	m	(Leef;)Z	a	matches
	m	(Leeb;)Z	a	matchesState
	m	(Ldmx;Leaz;Lda;)Z	a	matchesBlockEntity
	m	(Leaz;Lbo;)Z	a	matchesComponents
	m	()Z	a	requiresNbt
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	blocks
	m	()Ljava/util/Optional;	c	properties
	m	()Ljava/util/Optional;	d	nbt
	m	()Lbo;	e	components
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	az$a	net/minecraft/advancements/critereon/BlockPredicate$Builder
	f	Ljava/util/Optional;	a	blocks
	f	Ljava/util/Optional;	b	properties
	f	Ljava/util/Optional;	c	nbt
	f	Lbo;	d	components
	m	()V	<init>	<init>
	m	()Laz$a;	a	block
	m	(Ljm;[Ldpz;)Laz$a;	a	of
	m	(Ljm;Ljava/util/Collection;)Laz$a;	a	of
	m	(Ljm;Lbae;)Laz$a;	a	of
	m	(Lui;)Laz$a;	a	hasNbt
	m	(Lds$a;)Laz$a;	a	setProperties
	m	(Lbo;)Laz$a;	a	components
	m	()Laz;	b	build
c	ba	net/minecraft/advancements/critereon/BredAnimalsTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcmd;Lcmd;Lbzc;)V	a	trigger
	m	(Lfdj;Lfdj;Lfdj;Lba$a;)Z	a	lambda$trigger$0
c	ba$a	net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	parent
	f	Ljava/util/Optional;	d	partner
	f	Ljava/util/Optional;	e	child
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	bredAnimals
	m	(Lbz$a;)Lar;	a	bredAnimals
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	bredAnimals
	m	(Lfdj;Lfdj;Lfdj;)Z	a	matches
	m	(Ljava/util/Optional;Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	parent
	m	()Ljava/util/Optional;	d	partner
	m	()Ljava/util/Optional;	e	child
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bb	net/minecraft/advancements/critereon/BrewedPotionTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljl;)V	a	trigger
	m	(Ljl;Lbb$a;)Z	a	lambda$trigger$0
c	bb$a	net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	potion
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	brewedPotion
	m	(Ljl;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	potion
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bc	net/minecraft/advancements/critereon/ChangeDimensionTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lamd;Lamd;)V	a	trigger
	m	(Lamd;Lamd;Lbc$a;)Z	a	lambda$trigger$0
c	bc$a	net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	from
	f	Ljava/util/Optional;	d	to
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	changedDimension
	m	(Lamd;Lamd;)Lar;	a	changedDimension
	m	(Lamd;)Lar;	a	changedDimensionTo
	m	(Lamd;)Lar;	b	changedDimensionFrom
	m	(Lamd;Lamd;)Z	b	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	from
	m	()Ljava/util/Optional;	d	to
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bd	net/minecraft/advancements/critereon/ChanneledLightningTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljava/util/Collection;)V	a	trigger
	m	(Ljava/util/List;Lbd$a;)Z	a	lambda$trigger$1
	m	(Lauc;Lbzm;)Lfdj;	a	lambda$trigger$0
c	bd$a	net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/List;	c	victims
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/List;)V	<init>	<init>
	m	([Lbz$a;)Lar;	a	channeledLightning
	m	(Ljava/util/Collection;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/List;	b	victims
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	be	net/minecraft/advancements/critereon/CollectionContentsPredicate
	m	()Ljava/util/List;	a	unpack
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	([Ljava/util/function/Predicate;)Lbe;	a	of
	m	(Ljava/util/List;)Lbe;	a	of
c	be$a	net/minecraft/advancements/critereon/CollectionContentsPredicate$Multiple
	f	Ljava/util/List;	a	tests
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	tests
	m	(Ljava/lang/Object;)Z	test	test
	m	(Ljava/lang/Object;Ljava/util/function/Predicate;)Z	a	lambda$test$0
c	be$b	net/minecraft/advancements/critereon/CollectionContentsPredicate$Single
	f	Ljava/util/function/Predicate;	a	test
	m	(Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/Predicate;	b	test
	m	(Ljava/lang/Object;)Z	test	test
c	be$c	net/minecraft/advancements/critereon/CollectionContentsPredicate$Zero
	m	()V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Object;)Z	test	test
c	bf	net/minecraft/advancements/critereon/CollectionCountsPredicate
	m	()Ljava/util/List;	a	unpack
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	([Lbf$a;)Lbf;	a	of
	m	(Ljava/util/List;)Lbf;	a	of
c	bf$a	net/minecraft/advancements/critereon/CollectionCountsPredicate$Entry
	f	Ljava/util/function/Predicate;	a	test
	f	Lcx$d;	b	count
	m	(Ljava/util/function/Predicate;Lcx$d;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/Predicate;	a	test
	m	()Lcx$d;	b	count
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	bf$b	net/minecraft/advancements/critereon/CollectionCountsPredicate$Multiple
	f	Ljava/util/List;	a	entries
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	entries
	m	(Ljava/lang/Object;)Z	test	test
c	bf$c	net/minecraft/advancements/critereon/CollectionCountsPredicate$Single
	f	Lbf$a;	a	entry
	m	(Lbf$a;)V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbf$a;	b	entry
	m	(Ljava/lang/Object;)Z	test	test
c	bf$d	net/minecraft/advancements/critereon/CollectionCountsPredicate$Zero
	m	()V	<init>	<init>
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/util/List;	a	unpack
	m	(Ljava/lang/Object;)Z	test	test
c	bg	net/minecraft/advancements/critereon/CollectionPredicate
	f	Ljava/util/Optional;	a	contains
	f	Ljava/util/Optional;	b	counts
	f	Ljava/util/Optional;	c	size
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Iterable;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	contains
	m	()Ljava/util/Optional;	b	counts
	m	()Ljava/util/Optional;	c	size
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	bh	net/minecraft/advancements/critereon/ConstructBeaconTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;I)V	a	trigger
	m	(ILbh$a;)Z	a	lambda$trigger$0
c	bh$a	net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcx$d;	c	level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	()Lar;	b	constructedBeacon
	m	(Lcx$d;)Lar;	a	constructedBeacon
	m	(I)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lcx$d;	c	level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bi	net/minecraft/advancements/critereon/ConsumeItemTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;)V	a	trigger
	m	(Ldcv;Lbi$a;)Z	a	lambda$trigger$0
c	bi$a	net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	usedItem
	m	(Ljm;Ldmt;)Lar;	a	usedItem
	m	(Lcn$a;)Lar;	a	usedItem
	m	(Ldcv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bj	net/minecraft/advancements/critereon/ContextAwarePredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	conditions
	f	Ljava/util/function/Predicate;	c	compositePredicates
	m	(Ljava/util/List;)V	<init>	<init>
	m	([Lfgs;)Lbj;	a	create
	m	(Lfdj;)Z	a	matches
	m	(Lfdp;)V	a	validate
	m	(Lbj;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bk	net/minecraft/advancements/critereon/CriterionValidator
	f	Lbci;	a	reporter
	f	Ljm$a;	b	lootData
	m	(Lbci;Ljm$a;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/lang/String;)V	a	validateEntity
	m	(Ljava/util/List;Ljava/lang/String;)V	a	validateEntities
	m	(Lbj;Ljava/lang/String;)V	a	validateEntity
	m	(Lbj;Lbdo;Ljava/lang/String;)V	a	validate
	m	(Ljava/util/List;Lbdo;Ljava/lang/String;)V	a	validate
	m	(Ljava/lang/String;Lbj;)V	a	lambda$validateEntity$0
c	bl	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcso;Lcuf;)V	a	trigger
	m	(Lfdj;Lfdj;Lbl$a;)Z	a	lambda$trigger$0
c	bl$a	net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	zombie
	f	Ljava/util/Optional;	d	villager
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	curedZombieVillager
	m	(Lfdj;Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	zombie
	m	()Ljava/util/Optional;	d	villager
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bm	net/minecraft/advancements/critereon/DamagePredicate
	f	Lcx$c;	b	dealtDamage
	f	Lcx$c;	c	takenDamage
	f	Ljava/util/Optional;	d	sourceEntity
	f	Ljava/util/Optional;	e	blocked
	f	Ljava/util/Optional;	f	type
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$c;Lcx$c;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lauc;Lbyb;FFZ)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$c;	a	dealtDamage
	m	()Lcx$c;	b	takenDamage
	m	()Ljava/util/Optional;	c	sourceEntity
	m	()Ljava/util/Optional;	d	blocked
	m	()Ljava/util/Optional;	e	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bm$a	net/minecraft/advancements/critereon/DamagePredicate$Builder
	f	Lcx$c;	a	dealtDamage
	f	Lcx$c;	b	takenDamage
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	blocked
	f	Ljava/util/Optional;	e	type
	m	()V	<init>	<init>
	m	()Lbm$a;	a	damageInstance
	m	(Lcx$c;)Lbm$a;	a	dealtDamage
	m	(Lcx$c;)Lbm$a;	b	takenDamage
	m	(Lbz;)Lbm$a;	a	sourceEntity
	m	(Ljava/lang/Boolean;)Lbm$a;	a	blocked
	m	(Lbn;)Lbm$a;	a	type
	m	(Lbn$a;)Lbm$a;	a	type
	m	()Lbm;	b	build
c	bn	net/minecraft/advancements/critereon/DamageSourcePredicate
	f	Ljava/util/List;	b	tags
	f	Ljava/util/Optional;	c	directEntity
	f	Ljava/util/Optional;	d	sourceEntity
	f	Ljava/util/Optional;	e	isDirect
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lauc;Lbyb;)Z	a	matches
	m	(Laub;Lfis;Lbyb;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	tags
	m	()Ljava/util/Optional;	b	directEntity
	m	()Ljava/util/Optional;	c	sourceEntity
	m	()Ljava/util/Optional;	d	isDirect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bn$a	net/minecraft/advancements/critereon/DamageSourcePredicate$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	tags
	f	Ljava/util/Optional;	b	directEntity
	f	Ljava/util/Optional;	c	sourceEntity
	f	Ljava/util/Optional;	d	isDirect
	m	()V	<init>	<init>
	m	()Lbn$a;	a	damageType
	m	(Ldu;)Lbn$a;	a	tag
	m	(Lbz$a;)Lbn$a;	a	direct
	m	(Lbz$a;)Lbn$a;	b	source
	m	(Z)Lbn$a;	a	isDirect
	m	()Lbn;	b	build
c	bo	net/minecraft/advancements/critereon/DataComponentMatchers
	f	Lkk;	d	exact
	f	Ljava/util/Map;	e	partial
	f	Lbo;	a	ANY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Lkk;Ljava/util/Map;)V	<init>	<init>
	m	(Lkl;)Z	a	test
	m	()Z	a	isEmpty
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkk;	b	exact
	m	()Ljava/util/Map;	c	partial
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bo$a	net/minecraft/advancements/critereon/DataComponentMatchers$Builder
	f	Lkk;	a	exact
	f	Lcom/google/common/collect/ImmutableMap$Builder;	b	partial
	m	()V	<init>	<init>
	m	()Lbo$a;	a	components
	m	(Lkz$b;Lkz;)Lbo$a;	a	partial
	m	(Lkk;)Lbo$a;	a	exact
	m	()Lbo;	b	build
c	bp	net/minecraft/advancements/critereon/DefaultBlockInteractionTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljb;)V	a	trigger
	m	(Lfdj;Lbp$a;)Z	a	lambda$trigger$0
c	bp$a	net/minecraft/advancements/critereon/DefaultBlockInteractionTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	location
	m	(Lbk;Lbj;)V	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bq	net/minecraft/advancements/critereon/DistancePredicate
	f	Lcx$c;	b	x
	f	Lcx$c;	c	y
	f	Lcx$c;	d	z
	f	Lcx$c;	e	horizontal
	f	Lcx$c;	f	absolute
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$c;Lcx$c;Lcx$c;Lcx$c;Lcx$c;)V	<init>	<init>
	m	(Lcx$c;)Lbq;	a	horizontal
	m	(Lcx$c;)Lbq;	b	vertical
	m	(Lcx$c;)Lbq;	c	absolute
	m	(DDDDDD)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$c;	a	x
	m	()Lcx$c;	b	y
	m	()Lcx$c;	c	z
	m	()Lcx$c;	d	horizontal
	m	()Lcx$c;	e	absolute
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	br	net/minecraft/advancements/critereon/DistanceTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lfis;)V	a	trigger
	m	(Lauc;Lfis;Lfis;Lbr$a;)Z	a	lambda$trigger$0
c	br$a	net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	startPosition
	f	Ljava/util/Optional;	d	distance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbz$a;Lbq;Lcv$a;)Lar;	a	fallFromHeight
	m	(Lbz$a;Lbq;)Lar;	a	rideEntityInLava
	m	(Lbq;)Lar;	a	travelledThroughNether
	m	(Laub;Lfis;Lfis;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	startPosition
	m	()Ljava/util/Optional;	c	distance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bs	net/minecraft/advancements/critereon/EffectsChangedTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbzm;)V	a	trigger
	m	(Lauc;Lfdj;Lbs$a;)Z	a	lambda$trigger$0
c	bs$a	net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	effects
	f	Ljava/util/Optional;	d	source
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcy$a;)Lar;	a	hasEffects
	m	(Lbz$a;)Lar;	a	gotEffectsFrom
	m	(Lauc;Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	effects
	m	()Ljava/util/Optional;	c	source
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bt	net/minecraft/advancements/critereon/EnchantedItemTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;I)V	a	trigger
	m	(Ldcv;ILbt$a;)Z	a	lambda$trigger$0
c	bt$a	net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcx$d;	d	levels
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	()Lar;	b	enchantedItem
	m	(Ldcv;I)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	item
	m	()Lcx$d;	d	levels
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bu	net/minecraft/advancements/critereon/EnchantmentPredicate
	f	Ljava/util/Optional;	b	enchantments
	f	Lcx$d;	c	level
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;Lcx$d;)V	<init>	<init>
	m	(Ljp;Lcx$d;)V	<init>	<init>
	m	(Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	(Ldjo;)Z	a	containedIn
	m	(Ldjo;Ljl;)Z	a	matchesEnchantment
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	enchantments
	m	()Lcx$d;	b	level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bv	net/minecraft/advancements/critereon/EnterBlockTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Leeb;)V	a	trigger
	m	(Leeb;Lbv$a;)Z	a	lambda$trigger$0
c	bv$a	net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbv$a;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Ldpz;)Lar;	a	entersBlock
	m	(Leeb;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	block
	m	()Ljava/util/Optional;	c	state
	m	(Lbv$a;)Lcom/mojang/serialization/DataResult;	b	lambda$validate$5
	m	(Lbv$a;Ljl;)Ljava/util/Optional;	a	lambda$validate$4
	m	(Ljl;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
	m	(Ljl;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	(Ljl;Lds;)Ljava/util/Optional;	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bw	net/minecraft/advancements/critereon/EntityEquipmentPredicate
	f	Ljava/util/Optional;	b	head
	f	Ljava/util/Optional;	c	chest
	f	Ljava/util/Optional;	d	legs
	f	Ljava/util/Optional;	e	feet
	f	Ljava/util/Optional;	f	body
	f	Ljava/util/Optional;	g	mainhand
	f	Ljava/util/Optional;	h	offhand
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljm;Ljm;)Lbw;	a	captainPredicate
	m	(Lbzm;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	head
	m	()Ljava/util/Optional;	b	chest
	m	()Ljava/util/Optional;	c	legs
	m	()Ljava/util/Optional;	d	feet
	m	()Ljava/util/Optional;	e	body
	m	()Ljava/util/Optional;	f	mainhand
	m	()Ljava/util/Optional;	g	offhand
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bw$a	net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder
	f	Ljava/util/Optional;	a	head
	f	Ljava/util/Optional;	b	chest
	f	Ljava/util/Optional;	c	legs
	f	Ljava/util/Optional;	d	feet
	f	Ljava/util/Optional;	e	body
	f	Ljava/util/Optional;	f	mainhand
	f	Ljava/util/Optional;	g	offhand
	m	()V	<init>	<init>
	m	()Lbw$a;	a	equipment
	m	(Lcn$a;)Lbw$a;	a	head
	m	(Lcn$a;)Lbw$a;	b	chest
	m	(Lcn$a;)Lbw$a;	c	legs
	m	(Lcn$a;)Lbw$a;	d	feet
	m	(Lcn$a;)Lbw$a;	e	body
	m	(Lcn$a;)Lbw$a;	f	mainhand
	m	(Lcn$a;)Lbw$a;	g	offhand
	m	()Lbw;	b	build
c	bx	net/minecraft/advancements/critereon/EntityFlagsPredicate
	f	Ljava/util/Optional;	b	isOnGround
	f	Ljava/util/Optional;	c	isOnFire
	f	Ljava/util/Optional;	d	isCrouching
	f	Ljava/util/Optional;	e	isSprinting
	f	Ljava/util/Optional;	f	isSwimming
	f	Ljava/util/Optional;	g	isFlying
	f	Ljava/util/Optional;	h	isBaby
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbzm;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	isOnGround
	m	()Ljava/util/Optional;	b	isOnFire
	m	()Ljava/util/Optional;	c	isCrouching
	m	()Ljava/util/Optional;	d	isSprinting
	m	()Ljava/util/Optional;	e	isSwimming
	m	()Ljava/util/Optional;	f	isFlying
	m	()Ljava/util/Optional;	g	isBaby
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bx$a	net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder
	f	Ljava/util/Optional;	a	isOnGround
	f	Ljava/util/Optional;	b	isOnFire
	f	Ljava/util/Optional;	c	isCrouching
	f	Ljava/util/Optional;	d	isSprinting
	f	Ljava/util/Optional;	e	isSwimming
	f	Ljava/util/Optional;	f	isFlying
	f	Ljava/util/Optional;	g	isBaby
	m	()V	<init>	<init>
	m	()Lbx$a;	a	flags
	m	(Ljava/lang/Boolean;)Lbx$a;	a	setOnGround
	m	(Ljava/lang/Boolean;)Lbx$a;	b	setOnFire
	m	(Ljava/lang/Boolean;)Lbx$a;	c	setCrouching
	m	(Ljava/lang/Boolean;)Lbx$a;	d	setSprinting
	m	(Ljava/lang/Boolean;)Lbx$a;	e	setSwimming
	m	(Ljava/lang/Boolean;)Lbx$a;	f	setIsFlying
	m	(Ljava/lang/Boolean;)Lbx$a;	g	setIsBaby
	m	()Lbx;	b	build
c	by	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbyb;FFZ)V	a	trigger
	m	(Lauc;Lbyb;FFZLby$a;)Z	a	lambda$trigger$0
c	by$a	net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	damage
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	entityHurtPlayer
	m	(Lbm;)Lar;	a	entityHurtPlayer
	m	(Lbm$a;)Lar;	a	entityHurtPlayer
	m	(Lauc;Lbyb;FFZ)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	damage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bz	net/minecraft/advancements/critereon/EntityPredicate
	f	Ljava/util/Optional;	c	entityType
	f	Ljava/util/Optional;	d	distanceToPlayer
	f	Ljava/util/Optional;	e	movement
	f	Lbz$b;	f	location
	f	Ljava/util/Optional;	g	effects
	f	Ljava/util/Optional;	h	nbt
	f	Ljava/util/Optional;	i	flags
	f	Ljava/util/Optional;	j	equipment
	f	Ljava/util/Optional;	k	subPredicate
	f	Ljava/util/Optional;	l	periodicTick
	f	Ljava/util/Optional;	m	vehicle
	f	Ljava/util/Optional;	n	passenger
	f	Ljava/util/Optional;	o	targetedEntity
	f	Ljava/util/Optional;	p	team
	f	Ljava/util/Optional;	q	slots
	f	Lbo;	r	components
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	ADVANCEMENT_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lbz$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lbo;)V	<init>	<init>
	m	(Lbz$a;)Lbj;	a	wrap
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	wrap
	m	([Lbz$a;)Ljava/util/List;	a	wrap
	m	(Lbz;)Lbj;	a	wrap
	m	(Lauc;Lbzm;)Z	a	matches
	m	(Laub;Lfis;Lbzm;)Z	a	matches
	m	(Lauc;Lbzm;)Lfdj;	b	createContext
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	entityType
	m	()Ljava/util/Optional;	b	distanceToPlayer
	m	()Ljava/util/Optional;	c	movement
	m	()Lbz$b;	d	location
	m	()Ljava/util/Optional;	e	effects
	m	()Ljava/util/Optional;	f	nbt
	m	()Ljava/util/Optional;	g	flags
	m	()Ljava/util/Optional;	h	equipment
	m	()Ljava/util/Optional;	i	subPredicate
	m	()Ljava/util/Optional;	j	periodicTick
	m	()Ljava/util/Optional;	k	vehicle
	m	()Ljava/util/Optional;	l	passenger
	m	()Ljava/util/Optional;	m	targetedEntity
	m	()Ljava/util/Optional;	n	team
	m	()Ljava/util/Optional;	o	slots
	m	()Lbo;	p	components
	m	(Laub;Lfis;Lbzm;)Z	b	lambda$matches$2
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bz$a	net/minecraft/advancements/critereon/EntityPredicate$Builder
	f	Ljava/util/Optional;	a	entityType
	f	Ljava/util/Optional;	b	distanceToPlayer
	f	Ljava/util/Optional;	c	movement
	f	Ljava/util/Optional;	d	located
	f	Ljava/util/Optional;	e	steppingOnLocation
	f	Ljava/util/Optional;	f	movementAffectedBy
	f	Ljava/util/Optional;	g	effects
	f	Ljava/util/Optional;	h	nbt
	f	Ljava/util/Optional;	i	flags
	f	Ljava/util/Optional;	j	equipment
	f	Ljava/util/Optional;	k	subPredicate
	f	Ljava/util/Optional;	l	periodicTick
	f	Ljava/util/Optional;	m	vehicle
	f	Ljava/util/Optional;	n	passenger
	f	Ljava/util/Optional;	o	targetedEntity
	f	Ljava/util/Optional;	p	team
	f	Ljava/util/Optional;	q	slots
	f	Lbo;	r	components
	m	()V	<init>	<init>
	m	()Lbz$a;	a	entity
	m	(Ljm;Lbzv;)Lbz$a;	a	of
	m	(Ljm;Lbae;)Lbz$a;	a	of
	m	(Lcc;)Lbz$a;	a	entityType
	m	(Lbq;)Lbz$a;	a	distance
	m	(Lcz;)Lbz$a;	a	moving
	m	(Lcv$a;)Lbz$a;	a	located
	m	(Lcv$a;)Lbz$a;	b	steppingOn
	m	(Lcv$a;)Lbz$a;	c	movementAffectedBy
	m	(Lcy$a;)Lbz$a;	a	effects
	m	(Lda;)Lbz$a;	a	nbt
	m	(Lbx$a;)Lbz$a;	a	flags
	m	(Lbw$a;)Lbz$a;	a	equipment
	m	(Lbw;)Lbz$a;	a	equipment
	m	(Lca;)Lbz$a;	a	subPredicate
	m	(I)Lbz$a;	a	periodicTick
	m	(Lbz$a;)Lbz$a;	a	vehicle
	m	(Lbz$a;)Lbz$a;	b	passenger
	m	(Lbz$a;)Lbz$a;	c	targetedEntity
	m	(Ljava/lang/String;)Lbz$a;	a	team
	m	(Ldq;)Lbz$a;	a	slots
	m	(Lbo;)Lbz$a;	a	components
	m	()Lbz;	b	build
c	bz$b	net/minecraft/advancements/critereon/EntityPredicate$LocationWrapper
	f	Ljava/util/Optional;	b	located
	f	Ljava/util/Optional;	c	steppingOn
	f	Ljava/util/Optional;	d	affectsMovement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	located
	m	()Ljava/util/Optional;	b	steppingOn
	m	()Ljava/util/Optional;	c	affectsMovement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ca	net/minecraft/advancements/critereon/EntitySubPredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	cb	net/minecraft/advancements/critereon/EntitySubPredicates
	f	Lcom/mojang/serialization/MapCodec;	a	LIGHTNING
	f	Lcom/mojang/serialization/MapCodec;	b	FISHING_HOOK
	f	Lcom/mojang/serialization/MapCodec;	c	PLAYER
	f	Lcom/mojang/serialization/MapCodec;	d	SLIME
	f	Lcom/mojang/serialization/MapCodec;	e	RAIDER
	f	Lcom/mojang/serialization/MapCodec;	f	SHEEP
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	register
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	cc	net/minecraft/advancements/critereon/EntityTypePredicate
	f	Ljp;	b	types
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljp;)V	<init>	<init>
	m	(Ljm;Lbzv;)Lcc;	a	of
	m	(Ljm;Lbae;)Lcc;	a	of
	m	(Lbzv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	types
	m	()V	<clinit>	<clinit>
c	cd	net/minecraft/advancements/critereon/FallAfterExplosionTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lfis;Lbzm;)V	a	trigger
	m	(Lauc;Lfis;Lfis;Lfdj;Lcd$a;)Z	a	lambda$trigger$0
c	cd$a	net/minecraft/advancements/critereon/FallAfterExplosionTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	startPosition
	f	Ljava/util/Optional;	d	distance
	f	Ljava/util/Optional;	e	cause
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbq;Lbz$a;)Lar;	a	fallAfterExplosion
	m	(Lbk;)V	a	validate
	m	(Laub;Lfis;Lfis;Lfdj;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	startPosition
	m	()Ljava/util/Optional;	c	distance
	m	()Ljava/util/Optional;	d	cause
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ce	net/minecraft/advancements/critereon/FilledBucketTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;)V	a	trigger
	m	(Ldcv;Lce$a;)Z	a	lambda$trigger$0
c	ce$a	net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcn$a;)Lar;	a	filledBucket
	m	(Ldcv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cf	net/minecraft/advancements/critereon/FishingHookPredicate
	f	Ljava/util/Optional;	d	inOpenWater
	f	Lcf;	b	ANY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	(Z)Lcf;	a	inOpenWater
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	inOpenWater
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cg	net/minecraft/advancements/critereon/FishingRodHookedTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;Lcvk;Ljava/util/Collection;)V	a	trigger
	m	(Ldcv;Lfdj;Ljava/util/Collection;Lcg$a;)Z	a	lambda$trigger$0
c	cg$a	net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	rod
	f	Ljava/util/Optional;	d	entity
	f	Ljava/util/Optional;	e	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	fishedItem
	m	(Ldcv;Lfdj;Ljava/util/Collection;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	rod
	m	()Ljava/util/Optional;	c	entity
	m	()Ljava/util/Optional;	d	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ch	net/minecraft/advancements/critereon/FluidPredicate
	f	Ljava/util/Optional;	b	fluids
	f	Ljava/util/Optional;	c	properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;Ljb;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	fluids
	m	()Ljava/util/Optional;	b	properties
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ch$a	net/minecraft/advancements/critereon/FluidPredicate$Builder
	f	Ljava/util/Optional;	a	fluids
	f	Ljava/util/Optional;	b	properties
	m	()V	<init>	<init>
	m	()Lch$a;	a	fluid
	m	(Lfak;)Lch$a;	a	of
	m	(Ljp;)Lch$a;	a	of
	m	(Lds;)Lch$a;	a	setProperties
	m	()Lch;	b	build
c	ci	net/minecraft/advancements/critereon/GameTypePredicate
	f	Ljava/util/List;	d	types
	f	Lci;	a	ANY
	f	Lci;	b	SURVIVAL_LIKE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	([Ldmr;)Lci;	a	of
	m	(Ldmr;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	types
	m	()V	<clinit>	<clinit>
c	cj	net/minecraft/advancements/critereon/ImpossibleTrigger
	m	()V	<init>	<init>
	m	(Lamm;Lat$a;)V	a	addPlayerListener
	m	(Lamm;Lat$a;)V	b	removePlayerListener
	m	(Lamm;)V	a	removePlayerListeners
	m	()Lcom/mojang/serialization/Codec;	a	codec
c	cj$a	net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()V	<init>	<init>
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	ck	net/minecraft/advancements/critereon/InputPredicate
	f	Ljava/util/Optional;	b	forward
	f	Ljava/util/Optional;	c	backward
	f	Ljava/util/Optional;	d	left
	f	Ljava/util/Optional;	e	right
	f	Ljava/util/Optional;	f	jump
	f	Ljava/util/Optional;	g	sneak
	f	Ljava/util/Optional;	h	sprint
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcur;)Z	a	matches
	m	(Ljava/util/Optional;Z)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	forward
	m	()Ljava/util/Optional;	b	backward
	m	()Ljava/util/Optional;	c	left
	m	()Ljava/util/Optional;	d	right
	m	()Ljava/util/Optional;	e	jump
	m	()Ljava/util/Optional;	f	sneak
	m	()Ljava/util/Optional;	g	sprint
	m	(ZLjava/lang/Boolean;)Ljava/lang/Boolean;	a	lambda$matches$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cl	net/minecraft/advancements/critereon/InventoryChangeTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcus;Ldcv;)V	a	trigger
	m	(Lauc;Lcus;Ldcv;III)V	a	trigger
	m	(Lcus;Ldcv;IIILcl$a;)Z	a	lambda$trigger$0
c	cl$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcl$a$a;	c	slots
	f	Ljava/util/List;	d	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcl$a$a;Ljava/util/List;)V	<init>	<init>
	m	([Lcn$a;)Lar;	a	hasItems
	m	([Lcn;)Lar;	a	hasItems
	m	([Ldmt;)Lar;	a	hasItems
	m	(Lcus;Ldcv;III)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lcl$a$a;	b	slots
	m	()Ljava/util/List;	c	items
	m	(Ldcv;Lcn;)Z	a	lambda$matches$2
	m	(I)[Lcn;	a	lambda$hasItems$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cl$a$a	net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance$Slots
	f	Lcx$d;	c	occupied
	f	Lcx$d;	d	full
	f	Lcx$d;	e	empty
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcl$a$a;	b	ANY
	m	(Lcx$d;Lcx$d;Lcx$d;)V	<init>	<init>
	m	(III)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	a	occupied
	m	()Lcx$d;	b	full
	m	()Lcx$d;	c	empty
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cm	net/minecraft/advancements/critereon/ItemDurabilityTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;I)V	a	trigger
	m	(Ldcv;ILcm$a;)Z	a	lambda$trigger$0
c	cm$a	net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcx$d;	d	durability
	f	Lcx$d;	e	delta
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcx$d;Lcx$d;)V	<init>	<init>
	m	(Ljava/util/Optional;Lcx$d;)Lar;	a	changedDurability
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcx$d;)Lar;	a	changedDurability
	m	(Ldcv;I)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	()Lcx$d;	c	durability
	m	()Lcx$d;	d	delta
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cn	net/minecraft/advancements/critereon/ItemPredicate
	f	Ljava/util/Optional;	b	items
	f	Lcx$d;	c	count
	f	Lbo;	d	components
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcx$d;Lbo;)V	<init>	<init>
	m	(Ldcv;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	items
	m	()Lcx$d;	b	count
	m	()Lbo;	c	components
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cn$a	net/minecraft/advancements/critereon/ItemPredicate$Builder
	f	Ljava/util/Optional;	a	items
	f	Lcx$d;	b	count
	f	Lbo;	c	components
	m	()V	<init>	<init>
	m	()Lcn$a;	a	item
	m	(Ljm;[Ldmt;)Lcn$a;	a	of
	m	(Ljm;Lbae;)Lcn$a;	a	of
	m	(Lcx$d;)Lcn$a;	a	withCount
	m	(Lbo;)Lcn$a;	a	withComponents
	m	()Lcn;	b	build
	m	(Ldmt;)Ljl;	a	lambda$of$0
c	co	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljb;Ldcv;)V	a	trigger
	m	(Lfdj;Lco$a;)Z	a	lambda$trigger$0
c	co$a	net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	location
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldpz;)Lar;	a	placedBlock
	m	([Lfgs$a;)Lar;	a	placedBlock
	m	(Ldpz;Lefe;Ljava/lang/String;)Lar;	a	placedBlockWithProperties
	m	(Ldpz;Lefe;Z)Lar;	a	placedBlockWithProperties
	m	(Ldpz;Lefe;I)Lar;	a	placedBlockWithProperties
	m	(Ldpz;Lefe;Ljava/lang/Comparable;)Lar;	a	placedBlockWithProperties
	m	(Lcv$a;Lcn$a;)Lco$a;	c	itemUsedOnLocation
	m	(Lcv$a;Lcn$a;)Lar;	a	itemUsedOnBlock
	m	(Lcv$a;Lcn$a;)Lar;	b	allayDropItemOnBlock
	m	(Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	location
	m	(Lbk;Lbj;)V	a	lambda$validate$2
	m	(I)[Lfgs;	a	lambda$placedBlock$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cp	net/minecraft/advancements/critereon/KilledByArrowTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljava/util/Collection;Ldcv;)V	a	trigger
	m	(Ljava/util/List;Ljava/util/Set;Ldcv;Lcp$a;)Z	a	lambda$trigger$0
c	cp$a	net/minecraft/advancements/critereon/KilledByArrowTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/List;	c	victims
	f	Lcx$d;	d	uniqueEntityTypes
	f	Ljava/util/Optional;	e	firedFromWeapon
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/List;Lcx$d;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljm;[Lbz$a;)Lar;	a	crossbowKilled
	m	(Ljm;Lcx$d;)Lar;	a	crossbowKilled
	m	(Ljava/util/Collection;ILdcv;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/List;	b	victims
	m	()Lcx$d;	c	uniqueEntityTypes
	m	()Ljava/util/Optional;	d	firedFromWeapon
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cq	net/minecraft/advancements/critereon/KilledTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbzm;Lbyb;)V	a	trigger
	m	(Lauc;Lfdj;Lbyb;Lcq$a;)Z	a	lambda$trigger$0
c	cq$a	net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entityPredicate
	f	Ljava/util/Optional;	d	killingBlow
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;)Lar;	a	playerKilledEntity
	m	(Lbz$a;)Lar;	a	playerKilledEntity
	m	()Lar;	b	playerKilledEntity
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	playerKilledEntity
	m	(Lbz$a;Ljava/util/Optional;)Lar;	a	playerKilledEntity
	m	(Ljava/util/Optional;Lbn$a;)Lar;	a	playerKilledEntity
	m	(Lbz$a;Lbn$a;)Lar;	a	playerKilledEntity
	m	()Lar;	c	playerKilledEntityNearSculkCatalyst
	m	(Ljava/util/Optional;)Lar;	b	entityKilledPlayer
	m	(Lbz$a;)Lar;	b	entityKilledPlayer
	m	()Lar;	d	entityKilledPlayer
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lar;	b	entityKilledPlayer
	m	(Lbz$a;Ljava/util/Optional;)Lar;	b	entityKilledPlayer
	m	(Ljava/util/Optional;Lbn$a;)Lar;	b	entityKilledPlayer
	m	(Lbz$a;Lbn$a;)Lar;	b	entityKilledPlayer
	m	(Lauc;Lfdj;Lbyb;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	e	entityPredicate
	m	()Ljava/util/Optional;	f	killingBlow
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cr	net/minecraft/advancements/critereon/LevitationTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lfis;I)V	a	trigger
	m	(Lauc;Lfis;ILcr$a;)Z	a	lambda$trigger$0
c	cr$a	net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	distance
	f	Lcx$d;	d	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	(Lbq;)Lar;	a	levitated
	m	(Lauc;Lfis;I)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	distance
	m	()Lcx$d;	c	duration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cs	net/minecraft/advancements/critereon/LightPredicate
	f	Lcx$d;	b	composite
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$d;)V	<init>	<init>
	m	(Laub;Ljb;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	a	composite
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cs$a	net/minecraft/advancements/critereon/LightPredicate$Builder
	f	Lcx$d;	a	composite
	m	()V	<init>	<init>
	m	()Lcs$a;	a	light
	m	(Lcx$d;)Lcs$a;	a	setComposite
	m	()Lcs;	b	build
c	ct	net/minecraft/advancements/critereon/LightningBoltPredicate
	f	Lcx$d;	c	blocksSetOnFire
	f	Ljava/util/Optional;	d	entityStruck
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lcx$d;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcx$d;)Lct;	a	blockSetOnFire
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	b	blocksSetOnFire
	m	()Ljava/util/Optional;	c	entityStruck
	m	(Laub;Lfis;Lbzm;)Z	a	lambda$matches$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cu	net/minecraft/advancements/critereon/LightningStrikeTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcal;Ljava/util/List;)V	a	trigger
	m	(Lfdj;Ljava/util/List;Lcu$a;)Z	a	lambda$trigger$1
	m	(Lauc;Lbzm;)Lfdj;	a	lambda$trigger$0
c	cu$a	net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	lightning
	f	Ljava/util/Optional;	d	bystander
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	lightningStrike
	m	(Lfdj;Ljava/util/List;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	lightning
	m	()Ljava/util/Optional;	c	bystander
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cv	net/minecraft/advancements/critereon/LocationPredicate
	f	Ljava/util/Optional;	b	position
	f	Ljava/util/Optional;	c	biomes
	f	Ljava/util/Optional;	d	structures
	f	Ljava/util/Optional;	e	dimension
	f	Ljava/util/Optional;	f	smokey
	f	Ljava/util/Optional;	g	light
	f	Ljava/util/Optional;	h	block
	f	Ljava/util/Optional;	i	fluid
	f	Ljava/util/Optional;	j	canSeeSky
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;DDD)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	position
	m	()Ljava/util/Optional;	b	biomes
	m	()Ljava/util/Optional;	c	structures
	m	()Ljava/util/Optional;	d	dimension
	m	()Ljava/util/Optional;	e	smokey
	m	()Ljava/util/Optional;	f	light
	m	()Ljava/util/Optional;	g	block
	m	()Ljava/util/Optional;	h	fluid
	m	()Ljava/util/Optional;	i	canSeeSky
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cv$a	net/minecraft/advancements/critereon/LocationPredicate$Builder
	f	Lcx$c;	a	x
	f	Lcx$c;	b	y
	f	Lcx$c;	c	z
	f	Ljava/util/Optional;	d	biomes
	f	Ljava/util/Optional;	e	structures
	f	Ljava/util/Optional;	f	dimension
	f	Ljava/util/Optional;	g	smokey
	f	Ljava/util/Optional;	h	light
	f	Ljava/util/Optional;	i	block
	f	Ljava/util/Optional;	j	fluid
	f	Ljava/util/Optional;	k	canSeeSky
	m	()V	<init>	<init>
	m	()Lcv$a;	a	location
	m	(Ljl;)Lcv$a;	a	inBiome
	m	(Lamd;)Lcv$a;	a	inDimension
	m	(Ljl;)Lcv$a;	b	inStructure
	m	(Lcx$c;)Lcv$a;	a	atYLocation
	m	(Lcx$c;)Lcv$a;	b	setX
	m	(Lcx$c;)Lcv$a;	c	setY
	m	(Lcx$c;)Lcv$a;	d	setZ
	m	(Ljp;)Lcv$a;	a	setBiomes
	m	(Ljp;)Lcv$a;	b	setStructures
	m	(Lamd;)Lcv$a;	b	setDimension
	m	(Lcs$a;)Lcv$a;	a	setLight
	m	(Laz$a;)Lcv$a;	a	setBlock
	m	(Lch$a;)Lcv$a;	a	setFluid
	m	(Z)Lcv$a;	a	setSmokey
	m	(Z)Lcv$a;	b	setCanSeeSky
	m	()Lcv;	b	build
c	cv$b	net/minecraft/advancements/critereon/LocationPredicate$PositionPredicate
	f	Lcx$c;	b	x
	f	Lcx$c;	c	y
	f	Lcx$c;	d	z
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$c;Lcx$c;Lcx$c;)V	<init>	<init>
	m	(Lcx$c;Lcx$c;Lcx$c;)Ljava/util/Optional;	a	of
	m	(DDD)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$c;	a	x
	m	()Lcx$c;	b	y
	m	()Lcx$c;	c	z
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cw	net/minecraft/advancements/critereon/LootTableTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lamd;)V	a	trigger
	m	(Lamd;Lcw$a;)Z	a	lambda$trigger$0
c	cw$a	net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lamd;	c	lootTable
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lamd;)V	<init>	<init>
	m	(Lamd;)Lar;	a	lootTableUsed
	m	(Lamd;)Z	b	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lamd;	b	lootTable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cx	net/minecraft/advancements/critereon/MinMaxBounds
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SWAPPED
	m	()Ljava/util/Optional;	a	min
	m	()Ljava/util/Optional;	b	max
	m	()Z	c	isAny
	m	()Ljava/util/Optional;	d	unwrapPoint
	m	(Lcom/mojang/serialization/Codec;Lcx$a;)Lcom/mojang/serialization/Codec;	a	createCodec
	m	(Lzm;Lcx$a;)Lzm;	a	createStreamCodec
	m	(Lcom/mojang/brigadier/StringReader;Lcx$b;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcx;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/util/Optional;	a	readNumber
	m	(Lcom/mojang/brigadier/StringReader;)Z	a	isAllowedInputChat
	m	(Lcx;)Lcom/mojang/datafixers/util/Either;	a	lambda$createCodec$4
	m	(Lcx$a;Lcom/mojang/datafixers/util/Either;)Lcx;	a	lambda$createCodec$3
	m	(Lcx$a;Ljava/lang/Number;)Lcx;	a	lambda$createCodec$2
	m	(Lcx;)Lcx;	b	lambda$createCodec$1
	m	(Lcom/mojang/serialization/Codec;Lcx$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$0
	m	()V	<clinit>	<clinit>
c	cx$1	net/minecraft/advancements/critereon/MinMaxBounds$1
	f	I	d	MIN_FLAG
	f	I	a	MAX_FLAG
	f	Lzm;	b	val$numberCodec
	f	Lcx$a;	c	val$factory
	m	(Lzm;Lcx$a;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lcx;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcx;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Lzm;Lio/netty/buffer/ByteBuf;Ljava/lang/Number;)V	a	lambda$encode$1
	m	(Lzm;Lio/netty/buffer/ByteBuf;Ljava/lang/Number;)V	b	lambda$encode$0
c	cx$a	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lcx;	create	create
c	cx$b	net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcx;	create	create
c	cx$c	net/minecraft/advancements/critereon/MinMaxBounds$Doubles
	f	Ljava/util/Optional;	f	min
	f	Ljava/util/Optional;	g	max
	f	Ljava/util/Optional;	h	minSq
	f	Ljava/util/Optional;	i	maxSq
	f	Lcx$c;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcx$c;	a	create
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
	m	(D)Lcx$c;	a	exactly
	m	(DD)Lcx$c;	a	between
	m	(D)Lcx$c;	b	atLeast
	m	(D)Lcx$c;	c	atMost
	m	(D)Z	d	matches
	m	(D)Z	e	matchesSqr
	m	(Lcom/mojang/brigadier/StringReader;)Lcx$c;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcx$c;	a	fromReader
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	min
	m	()Ljava/util/Optional;	b	max
	m	()Ljava/util/Optional;	e	minSq
	m	()Ljava/util/Optional;	f	maxSq
	m	(Ljava/lang/Double;)Ljava/lang/Double;	a	lambda$fromReader$1
	m	(Ljava/lang/Double;)Ljava/lang/Double;	b	lambda$squareOpt$0
	m	()V	<clinit>	<clinit>
c	cx$d	net/minecraft/advancements/critereon/MinMaxBounds$Ints
	f	Ljava/util/Optional;	f	min
	f	Ljava/util/Optional;	g	max
	f	Ljava/util/Optional;	h	minSq
	f	Ljava/util/Optional;	i	maxSq
	f	Lcx$d;	c	ANY
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/Optional;Ljava/util/Optional;)Lcx$d;	a	create
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	squareOpt
	m	(I)Lcx$d;	a	exactly
	m	(II)Lcx$d;	a	between
	m	(I)Lcx$d;	b	atLeast
	m	(I)Lcx$d;	c	atMost
	m	(I)Z	d	matches
	m	(J)Z	a	matchesSqr
	m	(Lcom/mojang/brigadier/StringReader;)Lcx$d;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lcx$d;	a	fromReader
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	min
	m	()Ljava/util/Optional;	b	max
	m	()Ljava/util/Optional;	e	minSq
	m	()Ljava/util/Optional;	f	maxSq
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$fromReader$2
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	b	lambda$new$1
	m	(Ljava/lang/Integer;)Ljava/lang/Long;	c	lambda$squareOpt$0
	m	()V	<clinit>	<clinit>
c	cy	net/minecraft/advancements/critereon/MobEffectsPredicate
	f	Ljava/util/Map;	b	effectMap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lbzm;)Z	a	matches
	m	(Lcam;)Z	a	matches
	m	(Ljava/util/Map;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	effectMap
	m	()V	<clinit>	<clinit>
c	cy$a	net/minecraft/advancements/critereon/MobEffectsPredicate$Builder
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	effectMap
	m	()V	<init>	<init>
	m	()Lcy$a;	a	effects
	m	(Ljl;)Lcy$a;	a	and
	m	(Ljl;Lcy$b;)Lcy$a;	a	and
	m	()Ljava/util/Optional;	b	build
c	cy$b	net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate
	f	Lcx$d;	b	amplifier
	f	Lcx$d;	c	duration
	f	Ljava/util/Optional;	d	ambient
	f	Ljava/util/Optional;	e	visible
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()V	<init>	<init>
	m	(Lcx$d;Lcx$d;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbyq;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	a	amplifier
	m	()Lcx$d;	b	duration
	m	()Ljava/util/Optional;	c	ambient
	m	()Ljava/util/Optional;	d	visible
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cz	net/minecraft/advancements/critereon/MovementPredicate
	f	Lcx$c;	b	x
	f	Lcx$c;	c	y
	f	Lcx$c;	d	z
	f	Lcx$c;	e	speed
	f	Lcx$c;	f	horizontalSpeed
	f	Lcx$c;	g	verticalSpeed
	f	Lcx$c;	h	fallDistance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$c;Lcx$c;Lcx$c;Lcx$c;Lcx$c;Lcx$c;Lcx$c;)V	<init>	<init>
	m	(Lcx$c;)Lcz;	a	speed
	m	(Lcx$c;)Lcz;	b	horizontalSpeed
	m	(Lcx$c;)Lcz;	c	verticalSpeed
	m	(Lcx$c;)Lcz;	d	fallDistance
	m	(DDDD)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$c;	a	x
	m	()Lcx$c;	b	y
	m	()Lcx$c;	c	z
	m	()Lcx$c;	d	speed
	m	()Lcx$c;	e	horizontalSpeed
	m	()Lcx$c;	f	verticalSpeed
	m	()Lcx$c;	g	fallDistance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	da	net/minecraft/advancements/critereon/NbtPredicate
	f	Lui;	d	tag
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ljava/lang/String;	c	SELECTED_ITEM_TAG
	m	(Lui;)V	<init>	<init>
	m	(Lkl;)Z	a	matches
	m	(Lbzm;)Z	a	matches
	m	(Lvi;)Z	a	matches
	m	(Lbzm;)Lui;	b	getEntityTagToCompare
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lui;	a	tag
	m	()V	<clinit>	<clinit>
c	db	net/minecraft/advancements/critereon/PickedUpItemTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;Lbzm;)V	a	trigger
	m	(Lauc;Ldcv;Lfdj;Ldb$a;)Z	a	lambda$trigger$0
c	db$a	net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ljava/util/Optional;	d	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbj;Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	thrownItemPickedUpByEntity
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	thrownItemPickedUpByPlayer
	m	(Lauc;Ldcv;Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	()Ljava/util/Optional;	c	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dc	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbzm;Lbyb;FFZ)V	a	trigger
	m	(Lauc;Lfdj;Lbyb;FFZLdc$a;)Z	a	lambda$trigger$0
c	dc$a	net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	damage
	f	Ljava/util/Optional;	d	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	playerHurtEntity
	m	(Ljava/util/Optional;)Lar;	a	playerHurtEntityWithDamage
	m	(Lbm$a;)Lar;	a	playerHurtEntityWithDamage
	m	(Ljava/util/Optional;)Lar;	b	playerHurtEntity
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lar;	a	playerHurtEntity
	m	(Lbm$a;Ljava/util/Optional;)Lar;	a	playerHurtEntity
	m	(Lauc;Lfdj;Lbyb;FFZ)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	damage
	m	()Ljava/util/Optional;	d	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dd	net/minecraft/advancements/critereon/PlayerInteractTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;Lbzm;)V	a	trigger
	m	(Ldcv;Lfdj;Ldd$a;)Z	a	lambda$trigger$0
c	dd$a	net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Ljava/util/Optional;	d	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;Lcn$a;Ljava/util/Optional;)Lar;	a	itemUsedOnEntity
	m	(Ljava/util/Optional;Lcn$a;Ljava/util/Optional;)Lar;	b	equipmentSheared
	m	(Lcn$a;Ljava/util/Optional;)Lar;	a	equipmentSheared
	m	(Lcn$a;Ljava/util/Optional;)Lar;	b	itemUsedOnEntity
	m	(Ldcv;Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	()Ljava/util/Optional;	c	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	de	net/minecraft/advancements/critereon/PlayerPredicate
	f	Lcx$d;	d	level
	f	Lci;	e	gameType
	f	Ljava/util/List;	f	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	g	recipes
	f	Ljava/util/Map;	h	advancements
	f	Ljava/util/Optional;	i	lookingAt
	f	Ljava/util/Optional;	j	input
	f	I	b	LOOKING_AT_RANGE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Lcx$d;Lci;Ljava/util/List;Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;Ljava/util/Map;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	b	level
	m	()Lci;	c	gameType
	m	()Ljava/util/List;	d	stats
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	e	recipes
	m	()Ljava/util/Map;	f	advancements
	m	()Ljava/util/Optional;	g	lookingAt
	m	()Ljava/util/Optional;	h	input
	m	(Lbzm;)Z	a	lambda$matches$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	de$a	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	c	criterions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;)V	<init>	<init>
	m	(Lal;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	criterions
	m	(Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	de$b	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate
	f	Z	c	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Z)V	<init>	<init>
	m	(Lal;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	state
	m	(Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	de$c	net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Lde$c;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	de$d	net/minecraft/advancements/critereon/PlayerPredicate$Builder
	f	Lcx$d;	a	level
	f	Lci;	b	gameType
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	stats
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	d	recipes
	f	Ljava/util/Map;	e	advancements
	f	Ljava/util/Optional;	f	lookingAt
	f	Ljava/util/Optional;	g	input
	m	()V	<init>	<init>
	m	()Lde$d;	a	player
	m	(Lcx$d;)Lde$d;	a	setLevel
	m	(Lazi;Ljl$c;Lcx$d;)Lde$d;	a	addStat
	m	(Lamd;Z)Lde$d;	a	addRecipe
	m	(Lci;)Lde$d;	a	setGameType
	m	(Lbz$a;)Lde$d;	a	setLookingAt
	m	(Lame;Z)Lde$d;	a	checkAdvancementDone
	m	(Lame;Ljava/util/Map;)Lde$d;	a	checkAdvancementCriterions
	m	(Lck;)Lde$d;	a	hasInput
	m	()Lde;	b	build
c	de$e	net/minecraft/advancements/critereon/PlayerPredicate$StatMatcher
	f	Lazi;	b	type
	f	Ljl;	c	value
	f	Lcx$d;	d	range
	f	Ljava/util/function/Supplier;	e	stat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lazi;Ljl;Lcx$d;)V	<init>	<init>
	m	(Lazi;Ljl;Lcx$d;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lazi;)Lcom/mojang/serialization/MapCodec;	a	createTypedCodec
	m	(Lazk;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lazi;	a	type
	m	()Ljl;	b	value
	m	()Lcx$d;	c	range
	m	()Ljava/util/function/Supplier;	d	stat
	m	(Lazi;Ljl;)Lazg;	a	lambda$new$2
	m	(Lazi;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createTypedCodec$1
	m	(Lazi;Ljl;Lcx$d;)Lde$e;	a	lambda$createTypedCodec$0
	m	()V	<clinit>	<clinit>
c	df	net/minecraft/advancements/critereon/PlayerTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;)V	a	trigger
	m	(Ldf$a;)Z	a	lambda$trigger$0
c	df$a	net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	(Lcv$a;)Lar;	a	located
	m	(Lbz$a;)Lar;	a	located
	m	(Ljava/util/Optional;)Lar;	a	located
	m	()Lar;	b	sleptInBed
	m	()Lar;	c	raidWon
	m	()Lar;	d	avoidVibration
	m	()Lar;	e	tick
	m	(Ljm;Ljm;Ldpz;Ldcr;)Lar;	a	walkOnBlockWithEquipment
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dg	net/minecraft/advancements/critereon/RaiderPredicate
	f	Z	d	hasRaid
	f	Z	e	isCaptain
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldg;	c	CAPTAIN_WITHOUT_RAID
	m	(ZZ)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	b	hasRaid
	m	()Z	c	isCaptain
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dh	net/minecraft/advancements/critereon/RecipeCraftedTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lamd;Ljava/util/List;)V	a	trigger
	m	(Lamd;Ljava/util/List;Ldh$a;)Z	a	lambda$trigger$0
c	dh$a	net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lamd;	c	recipeId
	f	Ljava/util/List;	d	ingredients
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lamd;Ljava/util/List;)V	<init>	<init>
	m	(Lamd;Ljava/util/List;)Lar;	a	craftedItem
	m	(Lamd;)Lar;	a	craftedItem
	m	(Lamd;)Lar;	b	crafterCraftedItem
	m	(Lamd;Ljava/util/List;)Z	b	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lamd;	b	recipeId
	m	()Ljava/util/List;	c	ingredients
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	di	net/minecraft/advancements/critereon/RecipeUnlockedTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldhr;)V	a	trigger
	m	(Lamd;)Lar;	a	unlocked
	m	(Ldhr;Ldi$a;)Z	a	lambda$trigger$0
c	di$a	net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lamd;	c	recipe
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lamd;)V	<init>	<init>
	m	(Ldhr;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lamd;	b	recipe
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dj	net/minecraft/advancements/critereon/SheepPredicate
	f	Ljava/util/Optional;	c	sheared
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Ldj;	b	hasWool
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	sheared
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dk	net/minecraft/advancements/critereon/ShotCrossbowTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;)V	a	trigger
	m	(Ldcv;Ldk$a;)Z	a	lambda$trigger$0
c	dk$a	net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/Optional;)Lar;	a	shotCrossbow
	m	(Ljm;Ldmt;)Lar;	a	shotCrossbow
	m	(Ldcv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dl	net/minecraft/advancements/critereon/SimpleCriterionTrigger
	f	Ljava/util/Map;	a	players
	m	()V	<init>	<init>
	m	(Lamm;Lat$a;)V	a	addPlayerListener
	m	(Lamm;Lat$a;)V	b	removePlayerListener
	m	(Lamm;)V	a	removePlayerListeners
	m	(Lauc;Ljava/util/function/Predicate;)V	a	trigger
	m	(Lamm;)Ljava/util/Set;	b	lambda$addPlayerListener$0
c	dl$a	net/minecraft/advancements/critereon/SimpleCriterionTrigger$SimpleInstance
	m	(Lbk;)V	a	validate
	m	()Ljava/util/Optional;	a	player
c	dm	net/minecraft/advancements/critereon/SingleComponentItemPredicate
	m	(Lkl;)Z	a	matches
	m	()Lkp;	a	componentType
	m	(Ljava/lang/Object;)Z	a	matches
c	dn	net/minecraft/advancements/critereon/SlideDownBlockTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Leeb;)V	a	trigger
	m	(Leeb;Ldn$a;)Z	a	lambda$trigger$0
c	dn$a	net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	block
	f	Ljava/util/Optional;	d	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldn$a;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Ldpz;)Lar;	a	slidesDownBlock
	m	(Leeb;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	block
	m	()Ljava/util/Optional;	c	state
	m	(Ldn$a;)Lcom/mojang/serialization/DataResult;	b	lambda$validate$5
	m	(Ldn$a;Ljl;)Ljava/util/Optional;	a	lambda$validate$4
	m	(Ljl;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
	m	(Ljl;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	(Ljl;Lds;)Ljava/util/Optional;	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dp	net/minecraft/advancements/critereon/SlimePredicate
	f	Lcx$d;	c	size
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lcx$d;)V	<init>	<init>
	m	(Lcx$d;)Ldp;	a	sized
	m	(Lbzm;Laub;Lfis;)Z	a	matches
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	b	size
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dq	net/minecraft/advancements/critereon/SlotsPredicate
	f	Ljava/util/Map;	b	slots
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lbzm;)Z	a	matches
	m	(Lbzm;Lcn;Lit/unimi/dsi/fastutil/ints/IntList;)Z	a	matchSlots
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	slots
	m	()V	<clinit>	<clinit>
c	dr	net/minecraft/advancements/critereon/StartRidingTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;)V	a	trigger
	m	(Ldr$a;)Z	a	lambda$trigger$0
c	dr$a	net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	(Lbz$a;)Lar;	a	playerStartsRiding
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ds	net/minecraft/advancements/critereon/StatePropertiesPredicate
	f	Ljava/util/List;	c	properties
	f	Lcom/mojang/serialization/Codec;	d	PROPERTIES_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Leec;Leed;)Z	a	matches
	m	(Leeb;)Z	a	matches
	m	(Lfal;)Z	a	matches
	m	(Leec;)Ljava/util/Optional;	a	checkState
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	properties
	m	(Ljava/util/List;)Ljava/util/Map;	a	lambda$static$2
	m	(Ljava/util/Map;)Ljava/util/List;	a	lambda$static$1
	m	(Ljava/util/Map$Entry;)Lds$c;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ds$a	net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	matchers
	m	()V	<init>	<init>
	m	()Lds$a;	a	properties
	m	(Lefe;Ljava/lang/String;)Lds$a;	a	hasProperty
	m	(Lefe;I)Lds$a;	a	hasProperty
	m	(Lefe;Z)Lds$a;	a	hasProperty
	m	(Lefe;Ljava/lang/Comparable;)Lds$a;	a	hasProperty
	m	()Ljava/util/Optional;	b	build
c	ds$b	net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactMatcher
	f	Ljava/lang/String;	e	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Leed;Lefe;)Z	a	match
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	value
	m	()V	<clinit>	<clinit>
c	ds$c	net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher
	f	Ljava/lang/String;	b	name
	f	Lds$e;	c	valueMatcher
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/lang/String;Lds$e;)V	<init>	<init>
	m	(Leec;Leed;)Z	a	match
	m	(Leec;)Ljava/util/Optional;	a	checkState
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Lds$e;	b	valueMatcher
	m	()V	<clinit>	<clinit>
c	ds$d	net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedMatcher
	f	Ljava/util/Optional;	e	minValue
	f	Ljava/util/Optional;	f	maxValue
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Leed;Lefe;)Z	a	match
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	minValue
	m	()Ljava/util/Optional;	b	maxValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ds$e	net/minecraft/advancements/critereon/StatePropertiesPredicate$ValueMatcher
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Leed;Lefe;)Z	a	match
	m	(Lds$e;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	(Lds$e;)Lcom/mojang/datafixers/util/Either;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dt	net/minecraft/advancements/critereon/SummonedEntityTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbzm;)V	a	trigger
	m	(Lfdj;Ldt$a;)Z	a	lambda$trigger$0
c	dt$a	net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbz$a;)Lar;	a	summonedEntity
	m	(Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	du	net/minecraft/advancements/critereon/TagPredicate
	f	Lbae;	a	tag
	f	Z	b	expected
	m	(Lbae;Z)V	<init>	<init>
	m	(Lamd;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lbae;)Ldu;	a	is
	m	(Lbae;)Ldu;	b	isNot
	m	(Ljl;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbae;	a	tag
	m	()Z	b	expected
	m	(Lamd;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	dv	net/minecraft/advancements/critereon/TameAnimalTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcmd;)V	a	trigger
	m	(Lfdj;Ldv$a;)Z	a	lambda$trigger$0
c	dv$a	net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	tamedAnimal
	m	(Lbz$a;)Lar;	a	tamedAnimal
	m	(Lfdj;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dw	net/minecraft/advancements/critereon/TargetBlockTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lbzm;Lfis;I)V	a	trigger
	m	(Lfdj;Lfis;ILdw$a;)Z	a	lambda$trigger$0
c	dw$a	net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcx$d;	c	signalStrength
	f	Ljava/util/Optional;	d	projectile
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcx$d;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcx$d;Ljava/util/Optional;)Lar;	a	targetHit
	m	(Lfdj;Lfis;I)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lcx$d;	b	signalStrength
	m	()Ljava/util/Optional;	c	projectile
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dx	net/minecraft/advancements/critereon/TradeTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Lcua;Ldcv;)V	a	trigger
	m	(Lfdj;Ldcv;Ldx$a;)Z	a	lambda$trigger$0
c	dx$a	net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	villager
	f	Ljava/util/Optional;	d	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lar;	b	tradedWithVillager
	m	(Lbz$a;)Lar;	a	tradedWithVillager
	m	(Lfdj;Ldcv;)Z	a	matches
	m	(Lbk;)V	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	c	villager
	m	()Ljava/util/Optional;	d	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dy	net/minecraft/advancements/critereon/UsedEnderEyeTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ljb;)V	a	trigger
	m	(DLdy$a;)Z	a	lambda$trigger$0
c	dy$a	net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Lcx$c;	c	distance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcx$c;)V	<init>	<init>
	m	(D)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Lcx$c;	b	distance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dz	net/minecraft/advancements/critereon/UsedTotemTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;)V	a	trigger
	m	(Ldcv;Ldz$a;)Z	a	lambda$trigger$0
c	dz$a	net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcn;)Lar;	a	usedTotem
	m	(Ljm;Ldmt;)Lar;	a	usedTotem
	m	(Ldcv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ea	net/minecraft/advancements/critereon/UsingItemTrigger
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	(Lauc;Ldcv;)V	a	trigger
	m	(Ldcv;Lea$a;)Z	a	lambda$trigger$0
c	ea$a	net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance
	f	Ljava/util/Optional;	b	player
	f	Ljava/util/Optional;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbz$a;Lcn$a;)Lar;	a	lookingAt
	m	(Ldcv;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	player
	m	()Ljava/util/Optional;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eb	net/minecraft/advancements/critereon/WrappedMinMaxBounds
	f	Ljava/lang/Float;	c	min
	f	Ljava/lang/Float;	d	max
	f	Leb;	a	ANY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INTS_ONLY
	m	(Ljava/lang/Float;Ljava/lang/Float;)V	<init>	<init>
	m	(F)Leb;	a	exactly
	m	(FF)Leb;	a	between
	m	(F)Leb;	b	atLeast
	m	(F)Leb;	c	atMost
	m	(F)Z	d	matches
	m	(D)Z	a	matchesSqr
	m	()Lcom/google/gson/JsonElement;	a	serializeToJson
	m	(Lcom/google/gson/JsonElement;)Leb;	a	fromJson
	m	(Lcom/mojang/brigadier/StringReader;Z)Leb;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Leb;	a	fromReader
	m	(Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float;	b	readNumber
	m	(Lcom/mojang/brigadier/StringReader;Z)Z	c	isAllowedNumber
	m	(Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float;	a	optionallyFormat
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Float;	b	min
	m	()Ljava/lang/Float;	c	max
	m	(Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$fromReader$0
	m	()V	<clinit>	<clinit>
c	ec	net/minecraft/advancements/critereon/package-info
c	ed	net/minecraft/advancements/package-info
c	ee	net/minecraft/commands/BrigadierExceptions
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	DOUBLE_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	DOUBLE_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	FLOAT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	FLOAT_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	INTEGER_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	INTEGER_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	LONG_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	LONG_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	LITERAL_INCORRECT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	READER_EXPECTED_START_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	READER_EXPECTED_END_OF_QUOTE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	l	READER_INVALID_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	m	READER_INVALID_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	n	READER_INVALID_INT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	READER_EXPECTED_INT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	p	READER_INVALID_LONG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	q	READER_EXPECTED_LONG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	READER_INVALID_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	s	READER_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	t	READER_INVALID_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	u	READER_EXPECTED_FLOAT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	v	READER_EXPECTED_BOOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	w	READER_EXPECTED_SYMBOL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	x	DISPATCHER_UNKNOWN_COMMAND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	y	DISPATCHER_UNKNOWN_ARGUMENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	z	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	A	DISPATCHER_PARSE_EXCEPTION
	m	()V	<init>	<init>
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	doubleTooLow	doubleTooLow
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	doubleTooHigh	doubleTooHigh
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	floatTooLow	floatTooLow
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	floatTooHigh	floatTooHigh
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	integerTooLow	integerTooLow
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	integerTooHigh	integerTooHigh
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	longTooLow	longTooLow
	m	()Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	longTooHigh	longTooHigh
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	literalIncorrect	literalIncorrect
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedStartOfQuote	readerExpectedStartOfQuote
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedEndOfQuote	readerExpectedEndOfQuote
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidEscape	readerInvalidEscape
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidBool	readerInvalidBool
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidInt	readerInvalidInt
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedInt	readerExpectedInt
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidLong	readerInvalidLong
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedLong	readerExpectedLong
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidDouble	readerInvalidDouble
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedDouble	readerExpectedDouble
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerInvalidFloat	readerInvalidFloat
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedFloat	readerExpectedFloat
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	readerExpectedBool	readerExpectedBool
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	readerExpectedSymbol	readerExpectedSymbol
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	dispatcherUnknownCommand	dispatcherUnknownCommand
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	dispatcherUnknownArgument	dispatcherUnknownArgument
	m	()Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	dispatcherExpectedArgumentSeparator	dispatcherExpectedArgumentSeparator
	m	()Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	dispatcherParseException	dispatcherParseException
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$16
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$15
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$14
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$13
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$12
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$11
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$10
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$9
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	i	lambda$static$8
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$7
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$6
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$5
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ef	net/minecraft/commands/CacheableFunction
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lame;	b	id
	f	Z	c	resolved
	f	Ljava/util/Optional;	d	function
	m	(Lame;)V	<init>	<init>
	m	(Lamt;)Ljava/util/Optional;	a	get
	m	()Lame;	a	getId
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	eg	net/minecraft/commands/CommandBuildContext
	m	(Ljn$a;Lcyd;)Leg;	a	simple
	m	()Lcyd;	a	enabledFeatures
c	eg$1	net/minecraft/commands/CommandBuildContext$1
	f	Ljn$a;	a	val$access
	f	Lcyd;	b	val$enabledFeatures
	m	(Ljn$a;Lcyd;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	()Lcyd;	a	enabledFeatures
	m	(Lcyd;Ljn$b;)Ljn$b;	a	lambda$lookup$0
c	eh	net/minecraft/commands/CommandResultCallback
	f	Leh;	a	EMPTY
	m	(ZI)V	onResult	onResult
	m	(I)V	onSuccess	onSuccess
	m	()V	onFailure	onFailure
	m	(Leh;Leh;)Leh;	chain	chain
	m	(Leh;Leh;ZI)V	a	lambda$chain$0
	m	()V	<clinit>	<clinit>
c	eh$1	net/minecraft/commands/CommandResultCallback$1
	m	()V	<init>	<init>
	m	(ZI)V	onResult	onResult
	m	()Ljava/lang/String;	toString	toString
c	ei	net/minecraft/commands/CommandSigningContext
	f	Lei;	a	ANONYMOUS
	m	(Ljava/lang/String;)Lye;	a	getArgument
	m	()V	<clinit>	<clinit>
c	ei$1	net/minecraft/commands/CommandSigningContext$1
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lye;	a	getArgument
c	ei$a	net/minecraft/commands/CommandSigningContext$SignedArguments
	f	Ljava/util/Map;	b	arguments
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/lang/String;)Lye;	a	getArgument
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	arguments
c	ej	net/minecraft/commands/CommandSource
	f	Lej;	a	NULL
	m	(Lxo;)V	a	sendSystemMessage
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	()Z	o_	alwaysAccepts
	m	()V	<clinit>	<clinit>
c	ej$1	net/minecraft/commands/CommandSource$1
	m	()V	<init>	<init>
	m	(Lxo;)V	a	sendSystemMessage
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
c	ek	net/minecraft/commands/CommandSourceStack
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ENTITY
	f	Lej;	d	source
	f	Lfis;	e	worldPosition
	f	Laub;	f	level
	f	I	g	permissionLevel
	f	Ljava/lang/String;	h	textName
	f	Lxo;	i	displayName
	f	Lnet/minecraft/server/MinecraftServer;	j	server
	f	Z	k	silent
	f	Lbzm;	l	entity
	f	Leh;	m	resultCallback
	f	Lex$a;	n	anchor
	f	Lfir;	o	rotation
	f	Lei;	p	signingContext
	f	Lbdc;	q	chatMessageChainer
	m	(Lej;Lfis;Lfir;Laub;ILjava/lang/String;Lxo;Lnet/minecraft/server/MinecraftServer;Lbzm;)V	<init>	<init>
	m	(Lej;Lfis;Lfir;Laub;ILjava/lang/String;Lxo;Lnet/minecraft/server/MinecraftServer;Lbzm;ZLeh;Lex$a;Lei;Lbdc;)V	<init>	<init>
	m	(Lej;)Lek;	a	withSource
	m	(Lbzm;)Lek;	a	withEntity
	m	(Lfis;)Lek;	a	withPosition
	m	(Lfir;)Lek;	a	withRotation
	m	(Leh;)Lek;	a	withCallback
	m	(Leh;Ljava/util/function/BinaryOperator;)Lek;	a	withCallback
	m	()Lek;	a	withSuppressedOutput
	m	(I)Lek;	a	withPermission
	m	(I)Lek;	b	withMaximumPermission
	m	(Lex$a;)Lek;	a	withAnchor
	m	(Laub;)Lek;	a	withLevel
	m	(Lbzm;Lex$a;)Lek;	a	facing
	m	(Lfis;)Lek;	b	facing
	m	(Lei;Lbdc;)Lek;	a	withSigningContext
	m	()Lxo;	b	getDisplayName
	m	()Ljava/lang/String;	c	getTextName
	m	(I)Z	c	hasPermission
	m	()Lfis;	d	getPosition
	m	()Laub;	e	getLevel
	m	()Lbzm;	f	getEntity
	m	()Lbzm;	g	getEntityOrException
	m	()Lauc;	h	getPlayerOrException
	m	()Lauc;	i	getPlayer
	m	()Z	j	isPlayer
	m	()Lfir;	k	getRotation
	m	()Lnet/minecraft/server/MinecraftServer;	l	getServer
	m	()Lex$a;	m	getAnchor
	m	()Lei;	n	getSigningContext
	m	()Lbdc;	o	getChatMessageChainer
	m	(Lauc;)Z	a	shouldFilterMessageTo
	m	(Lyd;ZLxk$a;)V	a	sendChatMessage
	m	(Lxo;)V	a	sendSystemMessage
	m	(Ljava/util/function/Supplier;Z)V	a	sendSuccess
	m	(Lxo;)V	c	broadcastToAdmins
	m	(Lxo;)V	b	sendFailure
	m	()Leh;	p	callback
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
	m	(Lamd;Leq$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
	m	(Lamd;)Ljava/util/Optional;	a	getLookup
	m	()Ljava/util/Set;	t	levels
	m	()Ljz;	u	registryAccess
	m	()Lcyd;	v	enabledFeatures
	m	()Lcom/mojang/brigadier/CommandDispatcher;	w	dispatcher
	m	(Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLhr;)V	a	handleError
	m	()Z	x	isSilent
	m	(Leh;)Lem;	b	withCallback
	m	(Leq$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljn;)Ljava/util/concurrent/CompletableFuture;	a	lambda$suggestRegistryElements$1
	m	(Ldhr;)Lame;	a	lambda$suggestRegistryElements$0
	m	()V	<clinit>	<clinit>
c	el	net/minecraft/commands/Commands
	f	Ljava/lang/String;	a	COMMAND_PREFIX
	f	Ljava/lang/ThreadLocal;	g	CURRENT_EXECUTION_CONTEXT
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	I	b	LEVEL_ALL
	f	I	c	LEVEL_MODERATORS
	f	I	d	LEVEL_GAMEMASTERS
	f	I	e	LEVEL_ADMINS
	f	I	f	LEVEL_OWNERS
	f	Ladi$e;	i	COMMAND_NODE_INSPECTOR
	f	Lcom/mojang/brigadier/CommandDispatcher;	j	dispatcher
	m	(Lel$a;Leg;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults;	a	mapSource
	m	(Lek;Ljava/lang/String;)V	a	performPrefixedCommand
	m	(Ljava/lang/String;)Ljava/lang/String;	a	trimOptionalPrefix
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)V	a	performCommand
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;Lek;)Lcom/mojang/brigadier/context/ContextChain;	a	finishParsing
	m	(Lek;Ljava/util/function/Consumer;)V	a	executeCommandInContext
	m	(Lauc;)V	a	sendCommands
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/lang/Object;Ljava/util/Map;)V	a	fillUsableCommands
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	b	literal
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	argument
	m	(Lel$b;)Ljava/util/function/Predicate;	a	createValidator
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	(Lcom/mojang/brigadier/ParseResults;)V	a	validateParseResults
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	getParseException
	m	(Ljn$a;)Leg;	a	createValidationContext
	m	()V	b	validate
	m	(I)Laph;	a	hasPermission
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Ljava/lang/String;	a	lambda$validate$8
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Z	b	lambda$validate$7
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Collection;)V	a	lambda$validate$6
	m	(Lel$b;Ljava/lang/String;)Z	a	lambda$createValidator$5
	m	(Ljava/lang/String;Lyl;)Lyl;	a	lambda$finishParsing$4
	m	(Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	c	lambda$finishParsing$3
	m	(Lyc;Lyl;)Lyl;	a	lambda$performCommand$2
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lek;Lho;)V	a	lambda$performCommand$1
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$performCommand$0
	m	()V	<clinit>	<clinit>
c	el$1	net/minecraft/commands/Commands$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)Lame;	a	suggestionId
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Z	a	isExecutable
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Z	b	isRestricted
c	el$2	net/minecraft/commands/Commands$2
	f	Ljn$a;	a	val$registries
	m	(Ljn$a;)V	<init>	<init>
	m	()Lcyd;	a	enabledFeatures
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Ljn$b;)Ljn$b$a;	a	createLookup
c	el$2$1	net/minecraft/commands/Commands$2$1
	f	Ljn$b;	a	val$original
	m	(Lel$2;Ljn$b;)V	<init>	<init>
	m	()Ljn$b;	a	parent
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Lbae;)Ljp$c;	b	getOrThrow
	m	(Lbae;)Ljp$c;	c	lambda$getOrThrow$0
c	el$a	net/minecraft/commands/Commands$CommandSelection
	f	Lel$a;	a	ALL
	f	Lel$a;	b	DEDICATED
	f	Lel$a;	c	INTEGRATED
	f	Z	d	includeIntegrated
	f	Z	e	includeDedicated
	f	[Lel$a;	f	$VALUES
	m	()[Lel$a;	values	values
	m	(Ljava/lang/String;)Lel$a;	valueOf	valueOf
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
	m	()[Lel$a;	a	$values
	m	()V	<clinit>	<clinit>
c	el$b	net/minecraft/commands/Commands$ParseFunction
	m	(Lcom/mojang/brigadier/StringReader;)V	parse	parse
c	em	net/minecraft/commands/ExecutionCommandSource
	m	(Leh;)Lem;	b	withCallback
	m	()Leh;	p	callback
	m	()Lem;	a_	clearCallbacks
	m	()Lcom/mojang/brigadier/CommandDispatcher;	w	dispatcher
	m	(Lcom/mojang/brigadier/exceptions/CommandExceptionType;Lcom/mojang/brigadier/Message;ZLhr;)V	a	handleError
	m	()Z	x	isSilent
	m	(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;ZLhr;)V	a	handleError
	m	()Lcom/mojang/brigadier/ResultConsumer;	b_	resultConsumer
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$resultConsumer$0
c	en	net/minecraft/commands/FunctionInstantiationException
	f	Lxo;	a	messageComponent
	m	(Lxo;)V	<init>	<init>
	m	()Lxo;	a	messageComponent
c	eo	net/minecraft/commands/ParserUtils
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;Ln;)Ljava/lang/String;	a	readWhile
c	ep	net/minecraft/commands/PermissionSource
	m	(I)Z	c	hasPermission
	m	()Z	c_	allowsSelectors
c	ep$a	net/minecraft/commands/PermissionSource$Check
	f	I	a	requiredLevel
	m	(I)V	<init>	<init>
	m	(Lep;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	requiredLevel
	m	(Ljava/lang/Object;)Z	test	test
c	eq	net/minecraft/commands/SharedSuggestionProvider
	f	Lcom/google/common/base/CharMatcher;	c	MATCH_SPLITTER
	m	()Ljava/util/Collection;	q	getOnlinePlayerNames
	m	()Ljava/util/Collection;	y	getCustomTabSugggestions
	m	()Ljava/util/Collection;	z	getSelectedEntities
	m	()Ljava/util/Collection;	r	getAllTeams
	m	()Ljava/util/stream/Stream;	s	getAvailableSounds
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	customSuggestion
	m	()Ljava/util/Collection;	A	getRelevantCoordinates
	m	()Ljava/util/Collection;	B	getAbsoluteCoordinates
	m	()Ljava/util/Set;	t	levels
	m	()Ljz;	u	registryAccess
	m	()Lcyd;	v	enabledFeatures
	m	(Ljn;Leq$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestRegistryElements
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lamd;Leq$a;)Ljava/util/concurrent/CompletableFuture;	a	listSuggestions
	m	(Lamd;Leq$a;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture;	a	suggestRegistryElements
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
	m	(Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V	a	filterResources
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	a	suggestResource
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	a	suggestCoordinates
	m	(Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture;	b	suggest2DCoordinates
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	(Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggest
	m	(Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture;	b	suggest
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	matchesSubStr
	m	(Ljava/lang/String;Ljava/lang/String;)Z	b	lambda$suggest$5
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V	a	lambda$suggestResource$4
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lame;)V	a	lambda$suggestResource$3
	m	(Lame;)Lame;	a	lambda$suggestResource$2
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Lame;)V	a	lambda$suggestResource$1
	m	(Lame;)Lame;	b	lambda$suggestResource$0
	m	()V	<clinit>	<clinit>
c	eq$a	net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType
	f	Leq$a;	a	TAGS
	f	Leq$a;	b	ELEMENTS
	f	Leq$a;	c	ALL
	f	[Leq$a;	d	$VALUES
	m	()[Leq$a;	values	values
	m	(Ljava/lang/String;)Leq$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Z	a	shouldSuggestTags
	m	()Z	b	shouldSuggestElements
	m	()[Leq$a;	c	$values
	m	()V	<clinit>	<clinit>
c	eq$b	net/minecraft/commands/SharedSuggestionProvider$TextCoordinates
	f	Leq$b;	a	DEFAULT_LOCAL
	f	Leq$b;	b	DEFAULT_GLOBAL
	f	Ljava/lang/String;	c	x
	f	Ljava/lang/String;	d	y
	f	Ljava/lang/String;	e	z
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	er	net/minecraft/commands/arguments/AngleArgument
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_ANGLE
	m	()V	<init>	<init>
	m	()Ler;	a	angle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F	a	getAngle
	m	(Lcom/mojang/brigadier/StringReader;)Ler$a;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	er$a	net/minecraft/commands/arguments/AngleArgument$SingleAngle
	f	F	a	angle
	f	Z	b	isRelative
	m	(FZ)V	<init>	<init>
	m	(Lek;)F	a	getAngle
c	es	net/minecraft/commands/arguments/ArgumentSignatures
	f	Ljava/util/List;	b	entries
	f	Les;	a	EMPTY
	f	I	c	MAX_ARGUMENT_COUNT
	f	I	d	MAX_ARGUMENT_NAME_LENGTH
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lyg;Les$b;)Les;	a	signCommand
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	entries
	m	(Les$b;Lyg$a;)Les$a;	a	lambda$signCommand$1
	m	(Lwg;Les$a;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	es$a	net/minecraft/commands/arguments/ArgumentSignatures$Entry
	f	Ljava/lang/String;	a	name
	f	Lya;	b	signature
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Lya;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Lya;	b	signature
c	es$b	net/minecraft/commands/arguments/ArgumentSignatures$Signer
	m	(Ljava/lang/String;)Lya;	sign	sign
c	et	net/minecraft/commands/arguments/ColorArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	m	()V	<init>	<init>
	m	()Let;	a	color
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lo;	a	getColor
	m	(Lcom/mojang/brigadier/StringReader;)Lo;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eu	net/minecraft/commands/arguments/ComponentArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_COMPONENT
	f	Lcom/mojang/serialization/DynamicOps;	c	OPS
	f	Lbsw;	d	TAG_PARSER
	m	(Ljn$a;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lxo;	a	getRawComponent
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lbzm;)Lxo;	a	getResolvedComponent
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lxo;	b	getResolvedComponent
	m	(Leg;)Leu;	a	textComponent
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ev	net/minecraft/commands/arguments/CompoundTagArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()V	<init>	<init>
	m	()Lev;	a	compoundTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lui;	a	getCompoundTag
	m	(Lcom/mojang/brigadier/StringReader;)Lui;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	ew	net/minecraft/commands/arguments/DimensionArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_VALUE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Lame;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	()Lew;	a	dimension
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laub;	a	getDimension
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Lamd;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ex	net/minecraft/commands/arguments/EntityAnchorArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lex$a;	a	getAnchor
	m	()Lex;	a	anchor
	m	(Lcom/mojang/brigadier/StringReader;)Lex$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ex$a	net/minecraft/commands/arguments/EntityAnchorArgument$Anchor
	f	Lex$a;	a	FEET
	f	Lex$a;	b	EYES
	f	Ljava/util/Map;	c	BY_NAME
	f	Ljava/lang/String;	d	name
	f	Ljava/util/function/BiFunction;	e	transform
	f	[Lex$a;	f	$VALUES
	m	()[Lex$a;	values	values
	m	(Ljava/lang/String;)Lex$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiFunction;)V	<init>	<init>
	m	(Ljava/lang/String;)Lex$a;	a	getByName
	m	(Lbzm;)Lfis;	a	apply
	m	(Lek;)Lfis;	a	apply
	m	(Ljava/util/HashMap;)V	a	lambda$static$2
	m	(Lfis;Lbzm;)Lfis;	a	lambda$static$1
	m	(Lfis;Lbzm;)Lfis;	b	lambda$static$0
	m	()[Lex$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ey	net/minecraft/commands/arguments/EntityArgument
	f	Ljava/util/Collection;	g	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_SINGLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_SINGLE_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ONLY_PLAYERS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_ENTITIES_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_PLAYERS_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SELECTORS_NOT_ALLOWED
	f	Z	h	single
	f	Z	i	playersOnly
	m	(ZZ)V	<init>	<init>
	m	()Ley;	a	entity
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lbzm;	a	getEntity
	m	()Ley;	b	entities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getEntities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getOptionalEntities
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	d	getOptionalPlayers
	m	()Ley;	c	player
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lauc;	e	getPlayer
	m	()Ley;	d	players
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	f	getPlayers
	m	(Lcom/mojang/brigadier/StringReader;)Lhd;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lhd;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lhd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Leq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$0
	m	()V	<clinit>	<clinit>
c	ey$a	net/minecraft/commands/arguments/EntityArgument$Info
	f	B	a	FLAG_SINGLE
	f	B	b	FLAG_PLAYERS_ONLY
	m	()V	<init>	<init>
	m	(Ley$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Ley$a$a;	a	deserializeFromNetwork
	m	(Ley$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Ley;)Ley$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	ey$a$a	net/minecraft/commands/arguments/EntityArgument$Info$Template
	f	Z	b	single
	f	Z	c	playersOnly
	f	Ley$a;	a	this$0
	m	(Ley$a;ZZ)V	<init>	<init>
	m	(Leg;)Ley;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	ez	net/minecraft/commands/arguments/GameModeArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	[Ldmr;	b	VALUES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ldmr;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	()Lez;	a	gameMode
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldmr;	a	getGameMode
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fa	net/minecraft/commands/arguments/GameProfileArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_UNKNOWN_PLAYER
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getGameProfiles
	m	()Lfa;	a	gameProfile
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfa$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;)Lfa$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfa$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Leq;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	lambda$listSuggestions$1
	m	(Ljava/lang/String;Lek;)Ljava/util/Collection;	a	lambda$parse$0
	m	()V	<clinit>	<clinit>
c	fa$a	net/minecraft/commands/arguments/GameProfileArgument$Result
	m	(Lek;)Ljava/util/Collection;	getNames	getNames
c	fa$b	net/minecraft/commands/arguments/GameProfileArgument$SelectorResult
	f	Lhd;	a	selector
	m	(Lhd;)V	<init>	<init>
	m	(Lek;)Ljava/util/Collection;	getNames	getNames
c	fb	net/minecraft/commands/arguments/HeightmapTypeArgument
	f	Lcom/mojang/serialization/Codec;	a	LOWER_CASE_CODEC
	m	()[Leka$a;	b	keptTypes
	m	()V	<init>	<init>
	m	()Lfb;	a	heightmap
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Leka$a;	a	getHeightmap
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
	m	(I)[Leka$a;	a	lambda$keptTypes$1
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fc	net/minecraft/commands/arguments/HexColorArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_HEX
	m	()V	<init>	<init>
	m	()Lfc;	a	hexColor
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/Integer;	a	getHexColor
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fd	net/minecraft/commands/arguments/MessageArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	TOO_LONG
	m	()V	<init>	<init>
	m	()Lfd;	a	message
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lxo;	a	getMessage
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	resolveChatMessage
	m	(Ljava/util/function/Consumer;Lek;Lye;)V	a	resolveSignedMessage
	m	(Ljava/util/function/Consumer;Lek;Lye;)V	b	resolveDisguisedMessage
	m	(Lek;Lye;)Ljava/util/concurrent/CompletableFuture;	a	filterPlainText
	m	(Lcom/mojang/brigadier/StringReader;)Lfd$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfd$a;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lye;Lxo;Ljava/util/function/Consumer;Lauu;)V	a	lambda$resolveSignedMessage$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fd$a	net/minecraft/commands/arguments/MessageArgument$Message
	f	Ljava/lang/String;	a	text
	f	[Lfd$b;	b	parts
	m	(Ljava/lang/String;[Lfd$b;)V	<init>	<init>
	m	(Lek;)Lxo;	a	resolveComponent
	m	(Lek;Z)Lxo;	a	toComponent
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfd$a;	a	parseText
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	text
	m	()[Lfd$b;	b	parts
c	fd$b	net/minecraft/commands/arguments/MessageArgument$Part
	f	I	a	start
	f	I	b	end
	f	Lhd;	c	selector
	m	(IILhd;)V	<init>	<init>
	m	(Lek;)Lxo;	a	toComponent
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	start
	m	()I	b	end
	m	()Lhd;	c	selector
c	fe	net/minecraft/commands/arguments/NbtPathArgument
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_NODE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DATA_TOO_DEEP
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NOTHING_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_EXPECTED_LIST
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_INDEX
	f	C	g	INDEX_MATCH_START
	f	C	h	INDEX_MATCH_END
	f	C	i	KEY_MATCH_START
	f	C	j	KEY_MATCH_END
	f	C	k	QUOTED_KEY_START
	f	C	l	SINGLE_QUOTED_KEY_START
	m	()V	<init>	<init>
	m	()Lfe;	a	nbtPath
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfe$g;	a	getPath
	m	(Lcom/mojang/brigadier/StringReader;)Lfe$g;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfe$h;	a	parseNode
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lfe$h;	a	readObjectNode
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readUnquotedName
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(C)Z	a	isAllowedInUnquotedName
	m	(Lui;)Ljava/util/function/Predicate;	a	createTagPredicate
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lui;Lvi;)Z	a	lambda$createTagPredicate$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fe$a	net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode
	f	Lfe$a;	a	INSTANCE
	m	()V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
	m	()V	<clinit>	<clinit>
c	fe$b	net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
c	fe$c	net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode
	f	I	a	index
	m	(I)V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
c	fe$d	net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode
	f	Lui;	a	pattern
	f	Ljava/util/function/Predicate;	b	predicate
	m	(Lui;)V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
	m	(Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lvi;)V	a	lambda$getOrCreateTag$0
c	fe$e	net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode
	f	Ljava/lang/String;	a	name
	f	Lui;	b	pattern
	f	Ljava/util/function/Predicate;	c	predicate
	m	(Ljava/lang/String;Lui;)V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
c	fe$f	net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode
	f	Ljava/util/function/Predicate;	a	predicate
	m	(Lui;)V	<init>	<init>
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
c	fe$g	net/minecraft/commands/arguments/NbtPathArgument$NbtPath
	f	Ljava/lang/String;	b	original
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	nodeToOriginalPosition
	f	[Lfe$h;	d	nodes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;)Lfe$g;	a	of
	m	(Ljava/lang/String;[Lfe$h;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
	m	(Lvi;)Ljava/util/List;	a	get
	m	(Lvi;)I	b	countMatching
	m	(Lvi;)Ljava/util/List;	d	getOrCreateParents
	m	(Lvi;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
	m	(Ljava/util/List;Ljava/util/function/Function;)I	a	apply
	m	(Lvi;I)Z	a	isTooDeep
	m	(Lvi;Lvi;)I	a	set
	m	()I	b	estimatePathDepth
	m	(ILui;Ljava/util/List;)I	a	insert
	m	(Lvi;)I	c	remove
	m	(Lfe$h;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	createNotFoundException
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	a	asString
	m	(Lfe$h;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lvi;Lvi;)Ljava/lang/Integer;	a	lambda$set$4
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lvi;)Lvi;	a	lambda$set$3
	m	(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$apply$2
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	m	(Ljava/lang/String;Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fe$h	net/minecraft/commands/arguments/NbtPathArgument$Node
	m	(Lvi;Ljava/util/List;)V	a	getTag
	m	(Lvi;Ljava/util/function/Supplier;Ljava/util/List;)V	a	getOrCreateTag
	m	()Lvi;	a	createPreferredParentTag
	m	(Lvi;Ljava/util/function/Supplier;)I	a	setTag
	m	(Lvi;)I	a	removeTag
	m	(Ljava/util/List;)Ljava/util/List;	a	get
	m	(Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List;	a	getOrCreate
	m	(Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List;	a	collect
	m	(Ljava/util/function/Supplier;Lvi;Ljava/util/List;)V	a	lambda$getOrCreate$0
c	ff	net/minecraft/commands/arguments/NbtTagArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lbsw;	b	TAG_PARSER
	m	()V	<init>	<init>
	m	()Lff;	a	nbtTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lvi;	a	getNbtTag
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	()V	<clinit>	<clinit>
c	fg	net/minecraft/commands/arguments/ObjectiveArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_OBJECTIVE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_OBJECTIVE_READ_ONLY
	m	()V	<init>	<init>
	m	()Lfg;	a	objective
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfjp;	a	getObjective
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfjp;	b	getWritableObjective
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fh	net/minecraft/commands/arguments/ObjectiveCriteriaArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	m	()V	<init>	<init>
	m	()Lfh;	a	criteria
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfka;	a	getCriteria
	m	(Lcom/mojang/brigadier/StringReader;)Lfka;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	(Lazi;Ljava/lang/Object;)Ljava/lang/String;	a	getName
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;ILjava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fi	net/minecraft/commands/arguments/OperationArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OPERATION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DIVIDE_BY_ZERO
	m	()V	<init>	<init>
	m	()Lfi;	a	operation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfi$a;	a	getOperation
	m	(Lcom/mojang/brigadier/StringReader;)Lfi$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Ljava/lang/String;)Lfi$a;	a	getOperation
	m	(Ljava/lang/String;)Lfi$b;	b	getSimpleOperation
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(II)I	a	lambda$getSimpleOperation$5
	m	(II)I	b	lambda$getSimpleOperation$4
	m	(II)I	c	lambda$getSimpleOperation$3
	m	(II)I	d	lambda$getSimpleOperation$2
	m	(II)I	e	lambda$getSimpleOperation$1
	m	(Lfjv;Lfjv;)V	a	lambda$getOperation$0
	m	()V	<clinit>	<clinit>
c	fi$a	net/minecraft/commands/arguments/OperationArgument$Operation
	m	(Lfjv;Lfjv;)V	apply	apply
c	fi$b	net/minecraft/commands/arguments/OperationArgument$SimpleOperation
	m	(II)I	apply	apply
	m	(Lfjv;Lfjv;)V	apply	apply
c	fj	net/minecraft/commands/arguments/ParticleArgument
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_PARTICLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_OPTIONS
	f	Ljn$a;	d	registries
	f	Lvj;	e	VALUE_PARSER
	m	(Leg;)V	<init>	<init>
	m	(Leg;)Lfj;	a	particle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lmc;	a	getParticle
	m	(Lcom/mojang/brigadier/StringReader;)Lmc;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;Ljn$a;)Lmc;	a	readParticle
	m	(Lcom/mojang/brigadier/StringReader;Ljn;)Lmd;	a	readParticleType
	m	(Lvj;Lcom/mojang/brigadier/StringReader;Lmd;Ljn$a;)Lmc;	a	readParticle
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readParticleType$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fk	net/minecraft/commands/arguments/RangeArgument
	m	()Lfk$b;	a	intRange
	m	()Lfk$a;	b	floatRange
c	fk$a	net/minecraft/commands/arguments/RangeArgument$Floats
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcx$c;	a	getRange
	m	(Lcom/mojang/brigadier/StringReader;)Lcx$c;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	fk$b	net/minecraft/commands/arguments/RangeArgument$Ints
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcx$d;	a	getRange
	m	(Lcom/mojang/brigadier/StringReader;)Lcx$d;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	fl	net/minecraft/commands/arguments/ResourceArgument
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NOT_SUMMONABLE_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_UNKNOWN_RESOURCE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_INVALID_RESOURCE_TYPE
	f	Lamd;	e	registryKey
	f	Ljn;	f	registryLookup
	m	(Leg;Lamd;)V	<init>	<init>
	m	(Leg;Lamd;)Lfl;	a	resource
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lamd;)Ljl$c;	a	getResource
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	a	getAttribute
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	b	getConfiguredFeature
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	c	getStructure
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	d	getEntityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	e	getSummonableEntityType
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	f	getMobEffect
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	g	getEnchantment
	m	(Lcom/mojang/brigadier/StringReader;)Ljl$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$3
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fl$a	net/minecraft/commands/arguments/ResourceArgument$Info
	m	()V	<init>	<init>
	m	(Lfl$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfl$a$a;	a	deserializeFromNetwork
	m	(Lfl$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfl;)Lfl$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fl$a$a	net/minecraft/commands/arguments/ResourceArgument$Info$Template
	f	Lamd;	b	registryKey
	f	Lfl$a;	a	this$0
	m	(Lfl$a;Lamd;)V	<init>	<init>
	m	(Leg;)Lfl;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fm	net/minecraft/commands/arguments/ResourceKeyArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INVALID_FEATURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_STRUCTURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_INVALID_TEMPLATE_POOL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_INVALID_RECIPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_INVALID_ADVANCEMENT
	f	Lamd;	g	registryKey
	m	(Lamd;)V	<init>	<init>
	m	(Lamd;)Lfm;	a	key
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lamd;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lamd;	a	getRegistryKey
	m	(Lcom/mojang/brigadier/context/CommandContext;Lamd;)Ljy;	a	getRegistry
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lamd;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Ljl$c;	b	resolveKey
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	a	getConfiguredFeature
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	b	getStructure
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl$c;	c	getStructureTemplatePool
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldhr;	d	getRecipe
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Laj;	e	getAdvancement
	m	(Lcom/mojang/brigadier/StringReader;)Lamd;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lamd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRecipe$7
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lamd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$resolveKey$6
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lamd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$getRegistryKey$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fm$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info
	m	()V	<init>	<init>
	m	(Lfm$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfm$a$a;	a	deserializeFromNetwork
	m	(Lfm$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfm;)Lfm$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fm$a$a	net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template
	f	Lamd;	b	registryKey
	f	Lfm$a;	a	this$0
	m	(Lfm$a;Lamd;)V	<init>	<init>
	m	(Leg;)Lfm;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fn	net/minecraft/commands/arguments/ResourceLocationArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	m	()V	<init>	<init>
	m	()Lfn;	a	id
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lame;	a	getId
	m	(Lcom/mojang/brigadier/StringReader;)Lame;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	fo	net/minecraft/commands/arguments/ResourceOrIdArgument
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_FAILED_TO_PARSE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ELEMENT
	f	Lcom/mojang/serialization/DynamicOps;	c	OPS
	f	Ljn$a;	e	registryLookup
	f	Ljava/util/Optional;	f	elementLookup
	f	Lcom/mojang/serialization/Codec;	g	codec
	f	Lbsx;	h	grammar
	f	Lamd;	i	registryKey
	m	(Leg;Lamd;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/DynamicOps;)Lbsx;	a	createGrammar
	m	(Leg;)Lfo$e;	a	lootTable
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl;	a	getLootTable
	m	(Leg;)Lfo$c;	b	lootModifier
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl;	b	getLootModifier
	m	(Leg;)Lfo$d;	c	lootPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl;	c	getLootPredicate
	m	(Leg;)Lfo$a;	d	dialog
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl;	d	getDialog
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljl;	e	getResource
	m	(Lcom/mojang/brigadier/StringReader;)Ljl;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Lbsx;Lcom/mojang/serialization/DynamicOps;)Ljl;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lbsj;Lamd;Lbsj;Lbst;)Lfo$g;	a	lambda$createGrammar$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fo$a	net/minecraft/commands/arguments/ResourceOrIdArgument$DialogArgument
	m	(Leg;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
c	fo$b	net/minecraft/commands/arguments/ResourceOrIdArgument$InlineResult
	f	Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljn$a;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljn$b;)Ljl;	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	value
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$0
c	fo$c	net/minecraft/commands/arguments/ResourceOrIdArgument$LootModifierArgument
	m	(Leg;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
c	fo$d	net/minecraft/commands/arguments/ResourceOrIdArgument$LootPredicateArgument
	m	(Leg;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
c	fo$e	net/minecraft/commands/arguments/ResourceOrIdArgument$LootTableArgument
	m	(Leg;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
c	fo$f	net/minecraft/commands/arguments/ResourceOrIdArgument$ReferenceResult
	f	Lamd;	a	key
	m	(Lamd;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljn$a;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljn$b;)Ljl;	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	(Lcom/mojang/brigadier/ImmutableStringReader;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$0
c	fo$g	net/minecraft/commands/arguments/ResourceOrIdArgument$Result
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljn$a;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljn$b;)Ljl;	a	parse
c	fp	net/minecraft/commands/arguments/ResourceOrTagArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_INVALID_TAG_TYPE
	f	Ljn;	d	registryLookup
	f	Lamd;	e	registryKey
	m	(Leg;Lamd;)V	<init>	<init>
	m	(Leg;Lamd;)Lfp;	a	resourceOrTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lamd;)Lfp$c;	a	getResourceOrTag
	m	(Lcom/mojang/brigadier/StringReader;)Lfp$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$6
	m	(Lcom/mojang/brigadier/StringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	b	lambda$parse$5
	m	(Lfp$c;Lamd;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$4
	m	(Lamd;Ljp$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$3
	m	(Lamd;Ljl$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTag$2
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fp$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info
	m	()V	<init>	<init>
	m	(Lfp$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfp$a$a;	a	deserializeFromNetwork
	m	(Lfp$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfp;)Lfp$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fp$a$a	net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template
	f	Lamd;	b	registryKey
	f	Lfp$a;	a	this$0
	m	(Lfp$a;Lamd;)V	<init>	<init>
	m	(Leg;)Lfp;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fp$b	net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult
	f	Ljl$c;	a	value
	m	(Ljl$c;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	(Ljl;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl$c;	c	value
	m	(Ljava/lang/Object;)Z	test	test
c	fp$c	net/minecraft/commands/arguments/ResourceOrTagArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	()Ljava/lang/String;	b	asPrintable
c	fp$d	net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult
	f	Ljp$c;	a	tag
	m	(Ljp$c;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	(Ljl;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp$c;	c	tag
	m	(Ljava/lang/Object;)Z	test	test
c	fq	net/minecraft/commands/arguments/ResourceOrTagKeyArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lamd;	b	registryKey
	m	(Lamd;)V	<init>	<init>
	m	(Lamd;)Lfq;	a	resourceOrTagKey
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lamd;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lfq$c;	a	getResourceOrTagKey
	m	(Lcom/mojang/brigadier/StringReader;)Lfq$c;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Lfq$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getResourceOrTagKey$0
	m	()V	<clinit>	<clinit>
c	fq$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info
	m	()V	<init>	<init>
	m	(Lfq$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfq$a$a;	a	deserializeFromNetwork
	m	(Lfq$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfq;)Lfq$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fq$a$a	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template
	f	Lamd;	b	registryKey
	f	Lfq$a;	a	this$0
	m	(Lfq$a;Lamd;)V	<init>	<init>
	m	(Leg;)Lfq;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fq$b	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult
	f	Lamd;	a	key
	m	(Lamd;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	(Ljl;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	c	key
	m	(Ljava/lang/Object;)Z	test	test
c	fq$c	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	()Ljava/lang/String;	b	asPrintable
c	fq$d	net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult
	f	Lbae;	a	key
	m	(Lbae;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Either;	a	unwrap
	m	(Lamd;)Ljava/util/Optional;	a	cast
	m	(Ljl;)Z	a	test
	m	()Ljava/lang/String;	b	asPrintable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbae;	c	key
	m	(Ljava/lang/Object;)Z	test	test
c	fr	net/minecraft/commands/arguments/ResourceSelectorArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_NO_MATCHES
	f	Lamd;	c	registryKey
	f	Ljn;	d	registryLookup
	m	(Leg;Lamd;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/Collection;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljn;)Ljava/util/Collection;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	b	readPattern
	m	(C)Z	a	isAllowedPatternCharacter
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
	m	(Ljava/lang/String;Lame;)Z	a	matches
	m	(Leg;Lamd;)Lfr;	a	resourceSelector
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getSelectedResources
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/String;Ljl$c;)Z	a	lambda$parse$2
	m	(Ljava/lang/String;Ljl$c;)Z	b	lambda$parse$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fr$a	net/minecraft/commands/arguments/ResourceSelectorArgument$Info
	m	()V	<init>	<init>
	m	(Lfr$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfr$a$a;	a	deserializeFromNetwork
	m	(Lfr$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfr;)Lfr$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fr$a$a	net/minecraft/commands/arguments/ResourceSelectorArgument$Info$Template
	f	Lamd;	b	registryKey
	f	Lfr$a;	a	this$0
	m	(Lfr$a;Lamd;)V	<init>	<init>
	m	(Leg;)Lfr;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fs	net/minecraft/commands/arguments/ScoreHolderArgument
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_SCORE_HOLDERS
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_RESULTS
	f	Z	d	multiple
	m	(Z)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfjw;	a	getName
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	b	getNames
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	c	getNamesWithDefaultWildcard
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	getNames
	m	()Lfs;	a	scoreHolder
	m	()Lfs;	b	scoreHolders
	m	(Lcom/mojang/brigadier/StringReader;)Lfs$b;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Lfs$b;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Z)Lfs$b;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/Object;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/String;Ljava/util/List;Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$5
	m	(Ljava/util/UUID;Ljava/util/List;Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$4
	m	(Ljava/util/List;Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$3
	m	(Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	a	lambda$parse$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fs$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info
	f	B	a	FLAG_MULTIPLE
	m	()V	<init>	<init>
	m	(Lfs$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lfs$a$a;	a	deserializeFromNetwork
	m	(Lfs$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lfs;)Lfs$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	fs$a$a	net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template
	f	Z	b	multiple
	f	Lfs$a;	a	this$0
	m	(Lfs$a;Z)V	<init>	<init>
	m	(Leg;)Lfs;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	fs$b	net/minecraft/commands/arguments/ScoreHolderArgument$Result
	m	(Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
c	fs$c	net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult
	f	Lhd;	a	selector
	m	(Lhd;)V	<init>	<init>
	m	(Lek;Ljava/util/function/Supplier;)Ljava/util/Collection;	getNames	getNames
c	ft	net/minecraft/commands/arguments/ScoreboardSlotArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	m	()V	<init>	<init>
	m	()Lft;	a	displaySlot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfjo;	a	getDisplaySlot
	m	(Lcom/mojang/brigadier/StringReader;)Lfjo;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fu	net/minecraft/commands/arguments/SignedArgument
c	fv	net/minecraft/commands/arguments/SlotArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_ONLY_SINGLE_SLOT_ALLOWED
	m	()V	<init>	<init>
	m	()Lfv;	a	slot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I	a	getSlot
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(C)Z	a	lambda$parse$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fw	net/minecraft/commands/arguments/SlotsArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_SLOT
	m	()V	<init>	<init>
	m	()Lfw;	a	slots
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldal;	a	getSlots
	m	(Lcom/mojang/brigadier/StringReader;)Ldal;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(C)Z	a	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fx	net/minecraft/commands/arguments/StringRepresentableArgument
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_VALUE
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/util/function/Supplier;	c	values
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Ljava/lang/String;)Ljava/lang/String;	a	convertId
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$getExamples$3
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$listSuggestions$2
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parse$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fy	net/minecraft/commands/arguments/StyleArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_INVALID_STYLE
	f	Lcom/mojang/serialization/DynamicOps;	c	OPS
	f	Lbsw;	d	TAG_PARSER
	m	(Ljn$a;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lyl;	a	getStyle
	m	(Leg;)Lfy;	a	style
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fz	net/minecraft/commands/arguments/TeamArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_TEAM_NOT_FOUND
	m	()V	<init>	<init>
	m	()Lfz;	a	team
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfjs;	a	getTeam
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ga	net/minecraft/commands/arguments/TemplateMirrorArgument
	m	()V	<init>	<init>
	m	()Lfx;	a	templateMirror
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldvd;	a	getMirror
c	gb	net/minecraft/commands/arguments/TemplateRotationArgument
	m	()V	<init>	<init>
	m	()Lgb;	a	templateRotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ldwu;	a	getRotation
c	gc	net/minecraft/commands/arguments/TimeArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_UNIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_TICK_COUNT_TOO_LOW
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	UNITS
	f	I	e	minimum
	m	(I)V	<init>	<init>
	m	()Lgc;	a	time
	m	(I)Lgc;	a	time
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	gc$a	net/minecraft/commands/arguments/TimeArgument$Info
	m	()V	<init>	<init>
	m	(Lgc$a$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lgc$a$a;	a	deserializeFromNetwork
	m	(Lgc$a$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lgc;)Lgc$a$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	gc$a$a	net/minecraft/commands/arguments/TimeArgument$Info$Template
	f	I	b	min
	f	Lgc$a;	a	this$0
	m	(Lgc$a;I)V	<init>	<init>
	m	(Leg;)Lgc;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	gd	net/minecraft/commands/arguments/UuidArgument
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_UUID
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Ljava/util/regex/Pattern;	c	ALLOWED_CHARACTERS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID;	a	getUuid
	m	()Lgd;	a	uuid
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	ge	net/minecraft/commands/arguments/WaypointArgument
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_A_WAYPOINT
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfkx;	a	getWaypoint
	m	()V	<clinit>	<clinit>
c	gf	net/minecraft/commands/arguments/blocks/BlockInput
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Leeb;	b	state
	f	Ljava/util/Set;	c	properties
	f	Lui;	d	tag
	m	(Leeb;Ljava/util/Set;Lui;)V	<init>	<init>
	m	()Leeb;	a	getState
	m	()Ljava/util/Set;	b	getDefinedProperties
	m	(Leef;)Z	a	test
	m	(Laub;Ljb;)Z	a	test
	m	(Laub;Ljb;I)Z	a	place
	m	(Leeb;)Leeb;	a	overwriteWithDefinedProperties
	m	(Leeb;Leeb;Lefe;)Leeb;	a	copyProperty
	m	(Ljava/lang/Object;)Z	test	test
	m	()Ljava/lang/String;	c	lambda$place$1
	m	()Ljava/lang/String;	d	lambda$place$0
	m	()V	<clinit>	<clinit>
c	gg	net/minecraft/commands/arguments/blocks/BlockPredicateArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Ljn;	b	blocks
	m	(Leg;)V	<init>	<init>
	m	(Leg;)Lgg;	a	blockPredicate
	m	(Lcom/mojang/brigadier/StringReader;)Lgg$b;	a	parse
	m	(Ljn;Lcom/mojang/brigadier/StringReader;)Lgg$b;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate;	a	getBlockPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lgi$b;)Lgg$b;	a	lambda$parse$1
	m	(Lgi$a;)Lgg$b;	a	lambda$parse$0
	m	()V	<clinit>	<clinit>
c	gg$a	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate
	f	Leeb;	a	state
	f	Ljava/util/Set;	b	properties
	f	Lui;	c	nbt
	m	(Leeb;Ljava/util/Set;Lui;)V	<init>	<init>
	m	(Leef;)Z	a	test
	m	()Z	a	requiresNbt
	m	(Ljava/lang/Object;)Z	test	test
c	gg$b	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result
	m	()Z	a	requiresNbt
c	gg$c	net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate
	f	Ljp;	a	tag
	f	Lui;	b	nbt
	f	Ljava/util/Map;	c	vagueProperties
	m	(Ljp;Ljava/util/Map;Lui;)V	<init>	<init>
	m	(Leef;)Z	a	test
	m	()Z	a	requiresNbt
	m	(Ljava/lang/Object;)Z	test	test
c	gh	net/minecraft/commands/arguments/blocks/BlockStateArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Ljn;	b	blocks
	m	(Leg;)V	<init>	<init>
	m	(Leg;)Lgh;	a	block
	m	(Lcom/mojang/brigadier/StringReader;)Lgf;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgf;	a	getBlock
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gi	net/minecraft/commands/arguments/blocks/BlockStateParser
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_TAGS_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_BLOCK
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_UNKNOWN_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_DUPLICATE_PROPERTY
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	e	ERROR_INVALID_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_EXPECTED_END_OF_PROPERTIES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_UNKNOWN_TAG
	f	C	i	SYNTAX_START_PROPERTIES
	f	C	j	SYNTAX_START_NBT
	f	C	k	SYNTAX_END_PROPERTIES
	f	C	l	SYNTAX_EQUALS
	f	C	m	SYNTAX_PROPERTY_SEPARATOR
	f	C	n	SYNTAX_TAG
	f	Ljava/util/function/Function;	o	SUGGEST_NOTHING
	f	Ljn;	p	blocks
	f	Lcom/mojang/brigadier/StringReader;	q	reader
	f	Z	r	forTesting
	f	Z	s	allowNbt
	f	Ljava/util/Map;	t	properties
	f	Ljava/util/Map;	u	vagueProperties
	f	Lame;	v	id
	f	Leec;	w	definition
	f	Leeb;	x	state
	f	Lui;	y	nbt
	f	Ljp;	z	tag
	f	Ljava/util/function/Function;	A	suggestions
	m	(Ljn;Lcom/mojang/brigadier/StringReader;ZZ)V	<init>	<init>
	m	(Ljn;Ljava/lang/String;Z)Lgi$a;	a	parseForBlock
	m	(Ljn;Lcom/mojang/brigadier/StringReader;Z)Lgi$a;	a	parseForBlock
	m	(Ljn;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
	m	(Ljn;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either;	b	parseForTesting
	m	(Ljn;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	()V	a	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestPropertyNameOrEnd
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestVaguePropertyNameOrEnd
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestPropertyName
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestVaguePropertyName
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenNbt
	m	()Z	b	hasBlockEntity
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestEquals
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	g	suggestNextPropertyOrEnd
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lefe;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;	a	addSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestVaguePropertyValue
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	h	suggestOpenVaguePropertiesOrNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	i	suggestOpenPropertiesOrNbt
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	j	suggestTag
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	k	suggestItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	l	suggestBlockIdOrTag
	m	()V	c	readBlock
	m	()V	d	readTag
	m	()V	e	readProperties
	m	()V	f	readVagueProperties
	m	()V	g	readNbt
	m	(Lefe;Ljava/lang/String;I)V	a	setValue
	m	(Leeb;)Ljava/lang/String;	a	serialize
	m	(Ljava/lang/StringBuilder;Lefe;Ljava/lang/Comparable;)V	a	appendProperty
	m	(Lamd;)Ljava/lang/String;	a	lambda$serialize$10
	m	(Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readVagueProperties$9
	m	(Lefe;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$readProperties$8
	m	(ILame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readTag$7
	m	(I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readBlock$6
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	gi$a	net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult
	f	Leeb;	a	blockState
	f	Ljava/util/Map;	b	properties
	f	Lui;	c	nbt
	m	(Leeb;Ljava/util/Map;Lui;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leeb;	a	blockState
	m	()Ljava/util/Map;	b	properties
	m	()Lui;	c	nbt
c	gi$b	net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult
	f	Ljp;	a	tag
	f	Ljava/util/Map;	b	vagueProperties
	f	Lui;	c	nbt
	m	(Ljp;Ljava/util/Map;Lui;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	tag
	m	()Ljava/util/Map;	b	vagueProperties
	m	()Lui;	c	nbt
c	gj	net/minecraft/commands/arguments/blocks/package-info
c	gk	net/minecraft/commands/arguments/coordinates/BlockPosArgument
	f	Ljava/util/Collection;	d	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_OUT_OF_WORLD
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OUT_OF_BOUNDS
	m	()V	<init>	<init>
	m	()Lgk;	a	blockPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljb;	a	getLoadedBlockPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Laub;Ljava/lang/String;)Ljb;	a	getLoadedBlockPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljb;	b	getBlockPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljb;	c	getSpawnablePos
	m	(Lcom/mojang/brigadier/StringReader;)Lgm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gl	net/minecraft/commands/arguments/coordinates/ColumnPosArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	m	()V	<init>	<init>
	m	()Lgl;	a	columnPos
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Latm;	a	getColumnPos
	m	(Lcom/mojang/brigadier/StringReader;)Lgm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gm	net/minecraft/commands/arguments/coordinates/Coordinates
	m	(Lek;)Lfis;	a	getPosition
	m	(Lek;)Lfir;	b	getRotation
	m	(Lek;)Ljb;	c	getBlockPos
	m	()Z	a	isXRelative
	m	()Z	b	isYRelative
	m	()Z	c	isZRelative
c	gn	net/minecraft/commands/arguments/coordinates/LocalCoordinates
	f	C	a	PREFIX_LOCAL_COORDINATE
	f	D	b	left
	f	D	c	up
	f	D	d	forwards
	m	(DDD)V	<init>	<init>
	m	(Lek;)Lfis;	a	getPosition
	m	(Lek;)Lfir;	b	getRotation
	m	()Z	a	isXRelative
	m	()Z	b	isYRelative
	m	()Z	c	isZRelative
	m	(Lcom/mojang/brigadier/StringReader;)Lgn;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;I)D	a	readDouble
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
c	go	net/minecraft/commands/arguments/coordinates/RotationArgument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	m	()V	<init>	<init>
	m	()Lgo;	a	rotation
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgm;	a	getRotation
	m	(Lcom/mojang/brigadier/StringReader;)Lgm;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gp	net/minecraft/commands/arguments/coordinates/SwizzleArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID
	m	()V	<init>	<init>
	m	()Lgp;	a	swizzle
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet;	a	getSwizzle
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet;	a	parse
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gq	net/minecraft/commands/arguments/coordinates/Vec2Argument
	f	Ljava/util/Collection;	b	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Z	c	centerCorrect
	m	(Z)V	<init>	<init>
	m	()Lgq;	a	vec2
	m	(Z)Lgq;	a	vec2
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfir;	a	getVec2
	m	(Lcom/mojang/brigadier/StringReader;)Lgm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gr	net/minecraft/commands/arguments/coordinates/Vec3Argument
	f	Ljava/util/Collection;	c	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_COMPLETE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_MIXED_TYPE
	f	Z	d	centerCorrect
	m	(Z)V	<init>	<init>
	m	()Lgr;	a	vec3
	m	(Z)Lgr;	a	vec3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lfis;	a	getVec3
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgm;	b	getCoordinates
	m	(Lcom/mojang/brigadier/StringReader;)Lgm;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gs	net/minecraft/commands/arguments/coordinates/WorldCoordinate
	f	C	c	PREFIX_RELATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_EXPECTED_DOUBLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_INT
	f	Z	d	relative
	f	D	e	value
	m	(ZD)V	<init>	<init>
	m	(D)D	a	get
	m	(Lcom/mojang/brigadier/StringReader;Z)Lgs;	a	parseDouble
	m	(Lcom/mojang/brigadier/StringReader;)Lgs;	a	parseInt
	m	(Lcom/mojang/brigadier/StringReader;)Z	b	isRelative
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Z	a	isRelative
	m	()V	<clinit>	<clinit>
c	gt	net/minecraft/commands/arguments/coordinates/WorldCoordinates
	f	Lgs;	a	x
	f	Lgs;	b	y
	f	Lgs;	c	z
	m	(Lgs;Lgs;Lgs;)V	<init>	<init>
	m	(Lek;)Lfis;	a	getPosition
	m	(Lek;)Lfir;	b	getRotation
	m	()Z	a	isXRelative
	m	()Z	b	isYRelative
	m	()Z	c	isZRelative
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Lcom/mojang/brigadier/StringReader;)Lgt;	a	parseInt
	m	(Lcom/mojang/brigadier/StringReader;Z)Lgt;	a	parseDouble
	m	(DDD)Lgt;	a	absolute
	m	(Lfir;)Lgt;	a	absolute
	m	()I	hashCode	hashCode
c	gu	net/minecraft/commands/arguments/coordinates/package-info
c	gv	net/minecraft/commands/arguments/item/ComponentPredicateParser
	m	()V	<init>	<init>
	m	(Lgv$b;)Lbsx;	a	createGrammar
	m	(Lbsj;Lbsj;Lgv$b;Lbsj;Lbsr;)Ljava/lang/Object;	a	lambda$createGrammar$9
	m	(Lgv$b;Lbsj;Lbst;)Ljava/lang/Object;	a	lambda$createGrammar$8
	m	(Lbsj;Lbsj;Lbst;)Ljava/lang/Object;	a	lambda$createGrammar$7
	m	(Lbsj;Lbsj;Lbst;)Ljava/util/List;	b	lambda$createGrammar$6
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	a	lambda$createGrammar$5
	m	(Lgv$b;Lbsj;Lbsj;Lbst;)Ljava/util/List;	a	lambda$createGrammar$4
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/util/List;	b	lambda$createGrammar$3
	m	(Lbst;)Lbdk;	a	lambda$createGrammar$2
	m	(Lbsj;Lbsj;Lbst;)Ljava/util/Optional;	c	lambda$createGrammar$1
	m	(Lbsj;Lbsj;Lbst;)Ljava/util/List;	d	lambda$createGrammar$0
c	gv$a	net/minecraft/commands/arguments/item/ComponentPredicateParser$ComponentLookupRule
	m	(Lbsq;Lgv$b;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	validateElement
	m	()Ljava/util/stream/Stream;	a	possibleResources
c	gv$b	net/minecraft/commands/arguments/item/ComponentPredicateParser$Context
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	forElementType
	m	()Ljava/util/stream/Stream;	a	listElementTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	b	forTagType
	m	()Ljava/util/stream/Stream;	b	listTagTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	c	lookupComponentType
	m	()Ljava/util/stream/Stream;	c	listComponentTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;)Ljava/lang/Object;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	d	lookupPredicateType
	m	()Ljava/util/stream/Stream;	d	listPredicateTypes
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	b	createPredicateTest
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	negate
	m	(Ljava/util/List;)Ljava/lang/Object;	a	anyOf
c	gv$c	net/minecraft/commands/arguments/item/ComponentPredicateParser$ElementLookupRule
	m	(Lbsq;Lgv$b;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	validateElement
	m	()Ljava/util/stream/Stream;	a	possibleResources
c	gv$d	net/minecraft/commands/arguments/item/ComponentPredicateParser$PredicateLookupRule
	m	(Lbsq;Lgv$b;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	validateElement
	m	()Ljava/util/stream/Stream;	a	possibleResources
c	gv$e	net/minecraft/commands/arguments/item/ComponentPredicateParser$TagLookupRule
	m	(Lbsq;Lgv$b;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	validateElement
	m	()Ljava/util/stream/Stream;	a	possibleResources
c	gw	net/minecraft/commands/arguments/item/FunctionArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_FUNCTION
	m	()V	<init>	<init>
	m	()Lgw;	a	functions
	m	(Lcom/mojang/brigadier/StringReader;)Lgw$a;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lame;)Lib;	a	getFunction
	m	(Lcom/mojang/brigadier/context/CommandContext;Lame;)Ljava/util/Collection;	b	getFunctionTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection;	a	getFunctions
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	b	getFunctionOrTag
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	c	getFunctionCollection
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$getFunction$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	gw$1	net/minecraft/commands/arguments/item/FunctionArgument$1
	f	Lame;	a	val$id
	m	(Lgw;Lame;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
c	gw$2	net/minecraft/commands/arguments/item/FunctionArgument$2
	f	Lame;	a	val$id
	m	(Lgw;Lame;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
c	gw$a	net/minecraft/commands/arguments/item/FunctionArgument$Result
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	create
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	b	unwrap
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair;	c	unwrapToCollection
c	gx	net/minecraft/commands/arguments/item/ItemArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lgz;	b	parser
	m	(Leg;)V	<init>	<init>
	m	(Leg;)Lgx;	a	item
	m	(Lcom/mojang/brigadier/StringReader;)Lgy;	a	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lgy;	a	getItem
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	()V	<clinit>	<clinit>
c	gy	net/minecraft/commands/arguments/item/ItemInput
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_STACK_TOO_BIG
	f	Ljl;	b	item
	f	Lko;	c	components
	m	(Ljl;Lko;)V	<init>	<init>
	m	()Ldcr;	a	getItem
	m	(IZ)Ldcv;	a	createItemStack
	m	(Ljn$a;)Ljava/lang/String;	a	serialize
	m	(Ljn$a;)Ljava/lang/String;	b	serializeComponents
	m	()Ljava/lang/String;	b	getItemName
	m	()Ljava/lang/Object;	c	lambda$getItemName$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$serializeComponents$2
	m	(Lame;Lvi;)Ljava/lang/String;	a	lambda$serializeComponents$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	gz	net/minecraft/commands/arguments/item/ItemParser
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_UNKNOWN_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	h	ERROR_MALFORMED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_REPEATED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	k	ERROR_MALFORMED_ITEM
	f	C	a	SYNTAX_START_COMPONENTS
	f	C	b	SYNTAX_END_COMPONENTS
	f	C	c	SYNTAX_COMPONENT_SEPARATOR
	f	C	d	SYNTAX_COMPONENT_ASSIGNMENT
	f	C	e	SYNTAX_REMOVED_COMPONENT
	f	Ljava/util/function/Function;	l	SUGGEST_NOTHING
	f	Ljn$b;	m	items
	f	Lamc;	n	registryOps
	f	Lvj;	o	tagParser
	m	(Ljn$a;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Lgz$a;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;Ljl;Lko;)V	a	validateComponents
	m	(Lcom/mojang/brigadier/StringReader;Lgz$d;)V	a	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	(Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$validateComponents$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	gz$1	net/minecraft/commands/arguments/item/ItemParser$1
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	a	val$itemResult
	f	Lko$a;	b	val$componentsBuilder
	m	(Lgz;Lorg/apache/commons/lang3/mutable/MutableObject;Lko$a;)V	<init>	<init>
	m	(Ljl;)V	a	visitItem
	m	(Lkp;Ljava/lang/Object;)V	a	visitComponent
	m	(Lkp;)V	a	visitRemovedComponent
c	gz$a	net/minecraft/commands/arguments/item/ItemParser$ItemResult
	f	Ljl;	a	item
	f	Lko;	b	components
	m	(Ljl;Lko;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	item
	m	()Lko;	b	components
c	gz$b	net/minecraft/commands/arguments/item/ItemParser$State
	f	Lcom/mojang/brigadier/StringReader;	b	reader
	f	Lgz$d;	c	visitor
	f	Lgz;	a	this$0
	m	(Lgz;Lcom/mojang/brigadier/StringReader;Lgz$d;)V	<init>	<init>
	m	()V	a	parse
	m	()V	b	readItem
	m	()V	c	readComponents
	m	(Lcom/mojang/brigadier/StringReader;)Lkp;	a	readComponentType
	m	(Lvj;Lamc;Lkp;)V	a	readComponent
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestStartComponents
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	suggestNextOrEndComponents
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	suggestAssignment
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	d	suggestItem
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	e	suggestComponentAssignmentOrRemoval
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	f	suggestComponent
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	suggestComponent
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;Ljava/util/Map$Entry;)V	a	lambda$suggestComponent$3
	m	(Ljava/util/Map$Entry;)Lame;	a	lambda$suggestComponent$2
	m	(ILkp;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readComponent$1
	m	(ILame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$readItem$0
c	gz$c	net/minecraft/commands/arguments/item/ItemParser$SuggestionsVisitor
	f	Ljava/util/function/Function;	a	suggestions
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;)V	a	visitSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/StringReader;)Ljava/util/concurrent/CompletableFuture;	a	resolveSuggestions
c	gz$d	net/minecraft/commands/arguments/item/ItemParser$Visitor
	m	(Ljl;)V	a	visitItem
	m	(Lkp;Ljava/lang/Object;)V	a	visitComponent
	m	(Lkp;)V	a	visitRemovedComponent
	m	(Ljava/util/function/Function;)V	a	visitSuggestions
c	ha	net/minecraft/commands/arguments/item/ItemPredicateArgument
	f	Ljava/util/Collection;	a	EXAMPLES
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_UNKNOWN_TAG
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_UNKNOWN_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	e	ERROR_MALFORMED_COMPONENT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_PREDICATE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	g	ERROR_MALFORMED_PREDICATE
	f	Lame;	h	COUNT_ID
	f	Ljava/util/Map;	i	PSEUDO_COMPONENTS
	f	Ljava/util/Map;	j	PSEUDO_PREDICATES
	m	(Leg;)V	<init>	<init>
	m	(Leg;)Lha;	a	itemPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lha$d;	a	getItemPredicate
	m	()Ljava/util/Collection;	getExamples	getExamples
	m	(Ljava/util/List;)Lha$d;	a	lambda$new$13
	m	(Lha$c;)Lha$c;	a	lambda$static$12
	m	(Lcx$d;)Ljava/util/function/Predicate;	a	lambda$static$11
	m	(Lcx$d;Ldcv;)Z	a	lambda$static$10
	m	(Lha$a;)Lha$a;	a	lambda$static$9
	m	(Lcx$d;)Ljava/util/function/Predicate;	b	lambda$static$8
	m	(Lcx$d;Ldcv;)Z	b	lambda$static$7
	m	(Ldcv;)Z	a	lambda$static$6
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ha$a	net/minecraft/commands/arguments/item/ItemPredicateArgument$ComponentWrapper
	f	Lame;	a	id
	f	Ljava/util/function/Predicate;	b	presenceChecker
	f	Lcom/mojang/serialization/Decoder;	c	valueChecker
	m	(Lame;Ljava/util/function/Predicate;Lcom/mojang/serialization/Decoder;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;Lkp;)Lha$a;	a	create
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lcom/mojang/serialization/Dynamic;)Ljava/util/function/Predicate;	a	decode
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Ljava/util/function/Predicate;	b	presenceChecker
	m	()Lcom/mojang/serialization/Decoder;	c	valueChecker
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$decode$3
	m	(Lkp;Ljava/lang/Object;)Ljava/util/function/Predicate;	a	lambda$create$2
	m	(Lkp;Ljava/lang/Object;Ldcv;)Z	a	lambda$create$1
	m	(Lkp;Ldcv;)Z	a	lambda$create$0
c	ha$b	net/minecraft/commands/arguments/item/ItemPredicateArgument$Context
	f	Ljn$a;	a	registries
	f	Ljn$b;	b	items
	f	Ljn$b;	c	components
	f	Ljn$b;	d	predicates
	m	(Ljn$a;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/util/function/Predicate;	e	forElementType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/util/function/Predicate;	f	forTagType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lha$a;	g	lookupComponentType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lha$a;Lcom/mojang/serialization/Dynamic;)Ljava/util/function/Predicate;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lha$a;)Ljava/util/function/Predicate;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lha$c;	h	lookupPredicateType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lha$c;Lcom/mojang/serialization/Dynamic;)Ljava/util/function/Predicate;	a	createPredicateTest
	m	()Ljava/util/stream/Stream;	a	listElementTypes
	m	()Ljava/util/stream/Stream;	b	listTagTypes
	m	()Ljava/util/stream/Stream;	c	listComponentTypes
	m	()Ljava/util/stream/Stream;	d	listPredicateTypes
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	negate
	m	(Ljava/util/List;)Ljava/util/function/Predicate;	b	anyOf
	m	(Ljava/util/List;)Ljava/lang/Object;	a	anyOf
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	negate
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	b	createPredicateTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	d	lookupPredicateType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;)Ljava/lang/Object;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/Object;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	createComponentTest
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	c	lookupComponentType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	b	forTagType
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	forElementType
	m	(Ljl$c;)Lame;	a	lambda$listComponentTypes$7
	m	(Ljl$c;)Z	b	lambda$listComponentTypes$6
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	i	lambda$lookupPredicateType$5
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	j	lambda$lookupComponentType$4
	m	(Ljp;Ldcv;)Z	a	lambda$forTagType$3
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	k	lambda$forTagType$2
	m	(Ljl$c;Ldcv;)Z	a	lambda$forElementType$1
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	l	lambda$forElementType$0
c	ha$c	net/minecraft/commands/arguments/item/ItemPredicateArgument$PredicateWrapper
	f	Lame;	a	id
	f	Lcom/mojang/serialization/Decoder;	b	type
	m	(Ljl$c;)V	<init>	<init>
	m	(Lame;Lcom/mojang/serialization/Decoder;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lcom/mojang/serialization/Dynamic;)Ljava/util/function/Predicate;	a	decode
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Lcom/mojang/serialization/Decoder;	b	type
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$decode$1
	m	(Lkz;)Ljava/util/function/Predicate;	a	lambda$new$0
c	ha$d	net/minecraft/commands/arguments/item/ItemPredicateArgument$Result
c	hb	net/minecraft/commands/arguments/item/package-info
c	hc	net/minecraft/commands/arguments/package-info
c	hd	net/minecraft/commands/arguments/selector/EntitySelector
	f	I	a	INFINITE
	f	Ljava/util/function/BiConsumer;	b	ORDER_ARBITRARY
	f	Lein;	c	ANY_TYPE
	f	I	d	maxResults
	f	Z	e	includesEntities
	f	Z	f	worldLimited
	f	Ljava/util/List;	g	contextFreePredicates
	f	Lcx$c;	h	range
	f	Ljava/util/function/Function;	i	position
	f	Lfin;	j	aabb
	f	Ljava/util/function/BiConsumer;	k	order
	f	Z	l	currentEntity
	f	Ljava/lang/String;	m	playerName
	f	Ljava/util/UUID;	n	entityUUID
	f	Lein;	o	type
	f	Z	p	usesSelector
	m	(IZZLjava/util/List;Lcx$c;Ljava/util/function/Function;Lfin;Ljava/util/function/BiConsumer;ZLjava/lang/String;Ljava/util/UUID;Lbzv;Z)V	<init>	<init>
	m	()I	a	getMaxResults
	m	()Z	b	includesEntities
	m	()Z	c	isSelfSelector
	m	()Z	d	isWorldLimited
	m	()Z	e	usesSelector
	m	(Lek;)V	e	checkPermissions
	m	(Lek;)Lbzm;	a	findSingleEntity
	m	(Lek;)Ljava/util/List;	b	findEntities
	m	(Ljava/util/List;Laub;Lfin;Ljava/util/function/Predicate;)V	a	addEntities
	m	()I	f	getResultLimit
	m	(Lek;)Lauc;	c	findSinglePlayer
	m	(Lek;)Ljava/util/List;	d	findPlayers
	m	(Lfis;)Lfin;	a	getAbsoluteAabb
	m	(Lfis;Lfin;Lcyd;)Ljava/util/function/Predicate;	a	getPredicate
	m	(Lfis;Ljava/util/List;)Ljava/util/List;	a	sortAndLimit
	m	(Ljava/util/List;)Lxo;	a	joinNames
	m	(Lfis;Lbzm;)Z	a	lambda$getPredicate$3
	m	(Lfin;Lbzm;)Z	a	lambda$getPredicate$2
	m	(Lcyd;Lbzm;)Z	a	lambda$getPredicate$1
	m	(Lfis;Ljava/util/List;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	hd$1	net/minecraft/commands/arguments/selector/EntitySelector$1
	m	()V	<init>	<init>
	m	(Lbzm;)Lbzm;	a	tryCast
	m	()Ljava/lang/Class;	a	getBaseClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
c	he	net/minecraft/commands/arguments/selector/EntitySelectorParser
	f	C	a	SYNTAX_SELECTOR_START
	f	C	o	SYNTAX_OPTIONS_START
	f	C	p	SYNTAX_OPTIONS_END
	f	C	b	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR
	f	C	q	SYNTAX_OPTIONS_SEPARATOR
	f	C	c	SYNTAX_NOT
	f	C	d	SYNTAX_TAG
	f	C	r	SELECTOR_NEAREST_PLAYER
	f	C	s	SELECTOR_ALL_PLAYERS
	f	C	t	SELECTOR_RANDOM_PLAYERS
	f	C	u	SELECTOR_CURRENT_ENTITY
	f	C	v	SELECTOR_ALL_ENTITIES
	f	C	w	SELECTOR_NEAREST_ENTITY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_INVALID_NAME_OR_UUID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_UNKNOWN_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SELECTORS_NOT_ALLOWED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_MISSING_SELECTOR_TYPE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_EXPECTED_END_OF_OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	j	ERROR_EXPECTED_OPTION_VALUE
	f	Ljava/util/function/BiConsumer;	k	ORDER_NEAREST
	f	Ljava/util/function/BiConsumer;	l	ORDER_FURTHEST
	f	Ljava/util/function/BiConsumer;	m	ORDER_RANDOM
	f	Ljava/util/function/BiFunction;	n	SUGGEST_NOTHING
	f	Lcom/mojang/brigadier/StringReader;	x	reader
	f	Z	y	allowSelectors
	f	I	z	maxResults
	f	Z	A	includesEntities
	f	Z	B	worldLimited
	f	Lcx$c;	C	distance
	f	Lcx$d;	D	level
	f	Ljava/lang/Double;	E	x
	f	Ljava/lang/Double;	F	y
	f	Ljava/lang/Double;	G	z
	f	Ljava/lang/Double;	H	deltaX
	f	Ljava/lang/Double;	I	deltaY
	f	Ljava/lang/Double;	J	deltaZ
	f	Leb;	K	rotX
	f	Leb;	L	rotY
	f	Ljava/util/List;	M	predicates
	f	Ljava/util/function/BiConsumer;	N	order
	f	Z	O	currentEntity
	f	Ljava/lang/String;	P	playerName
	f	I	Q	startPosition
	f	Ljava/util/UUID;	R	entityUUID
	f	Ljava/util/function/BiFunction;	S	suggestions
	f	Z	T	hasNameEquals
	f	Z	U	hasNameNotEquals
	f	Z	V	isLimited
	f	Z	W	isSorted
	f	Z	X	hasGamemodeEquals
	f	Z	Y	hasGamemodeNotEquals
	f	Z	Z	hasTeamEquals
	f	Z	aa	hasTeamNotEquals
	f	Lbzv;	ab	type
	f	Z	ac	typeInverse
	f	Z	ad	hasScores
	f	Z	ae	hasAdvancements
	f	Z	af	usesSelectors
	m	(Lcom/mojang/brigadier/StringReader;Z)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	a	allowSelectors
	m	()Lhd;	a	getSelector
	m	(DDD)Lfin;	a	createAabb
	m	()V	I	finalizePredicates
	m	(Leb;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate;	a	createRotationPredicate
	m	()V	b	parseSelector
	m	()V	c	parseNameOrUUID
	m	()V	d	parseOptions
	m	()Z	e	shouldInvertValue
	m	()Z	f	isTag
	m	()Lcom/mojang/brigadier/StringReader;	g	getReader
	m	(Ljava/util/function/Predicate;)V	a	addPredicate
	m	()V	h	setWorldLimited
	m	()Lcx$c;	i	getDistance
	m	(Lcx$c;)V	a	setDistance
	m	()Lcx$d;	j	getLevel
	m	(Lcx$d;)V	a	setLevel
	m	()Leb;	k	getRotX
	m	(Leb;)V	a	setRotX
	m	()Leb;	l	getRotY
	m	(Leb;)V	b	setRotY
	m	()Ljava/lang/Double;	m	getX
	m	()Ljava/lang/Double;	n	getY
	m	()Ljava/lang/Double;	o	getZ
	m	(D)V	a	setX
	m	(D)V	b	setY
	m	(D)V	c	setZ
	m	(D)V	d	setDeltaX
	m	(D)V	e	setDeltaY
	m	(D)V	f	setDeltaZ
	m	()Ljava/lang/Double;	p	getDeltaX
	m	()Ljava/lang/Double;	q	getDeltaY
	m	()Ljava/lang/Double;	r	getDeltaZ
	m	(I)V	a	setMaxResults
	m	(Z)V	a	setIncludesEntities
	m	()Ljava/util/function/BiConsumer;	s	getOrder
	m	(Ljava/util/function/BiConsumer;)V	a	setOrder
	m	()Lhd;	t	parse
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	fillSelectorSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	suggestNameOrSelector
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	c	suggestName
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	d	suggestSelector
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	e	suggestOpenOptions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	f	suggestOptionsKeyOrClose
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	g	suggestOptionsKey
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	h	suggestOptionsNextOrClose
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	i	suggestEquals
	m	()Z	u	isCurrentEntity
	m	(Ljava/util/function/BiFunction;)V	a	setSuggestions
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	fillSuggestions
	m	()Z	v	hasNameEquals
	m	(Z)V	b	setHasNameEquals
	m	()Z	w	hasNameNotEquals
	m	(Z)V	c	setHasNameNotEquals
	m	()Z	x	isLimited
	m	(Z)V	d	setLimited
	m	()Z	y	isSorted
	m	(Z)V	e	setSorted
	m	()Z	z	hasGamemodeEquals
	m	(Z)V	f	setHasGamemodeEquals
	m	()Z	A	hasGamemodeNotEquals
	m	(Z)V	g	setHasGamemodeNotEquals
	m	()Z	B	hasTeamEquals
	m	(Z)V	h	setHasTeamEquals
	m	()Z	C	hasTeamNotEquals
	m	(Z)V	i	setHasTeamNotEquals
	m	(Lbzv;)V	a	limitToType
	m	()V	D	setTypeLimitedInversely
	m	()Z	E	isTypeLimited
	m	()Z	F	isTypeLimitedInversely
	m	()Z	G	hasScores
	m	(Z)V	j	setHasScores
	m	()Z	H	hasAdvancements
	m	(Z)V	k	setHasAdvancements
	m	(Ljava/util/function/ToDoubleFunction;DDLbzm;)Z	a	lambda$createRotationPredicate$11
	m	(Lbzm;)Z	a	lambda$finalizePredicates$10
	m	(Lfis;)Lfis;	a	lambda$getSelector$9
	m	(Lfis;)Lfis;	b	lambda$getSelector$8
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	j	lambda$static$7
	m	(Lfis;Ljava/util/List;)V	a	lambda$static$6
	m	(Lfis;Ljava/util/List;)V	b	lambda$static$5
	m	(Lfis;Lbzm;Lbzm;)I	a	lambda$static$4
	m	(Lfis;Ljava/util/List;)V	c	lambda$static$3
	m	(Lfis;Lbzm;Lbzm;)I	b	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	hf	net/minecraft/commands/arguments/selector/SelectorPattern
	f	Ljava/lang/String;	b	pattern
	f	Lhd;	c	resolved
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;Lhd;)V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	parse
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	a	pattern
	m	()Lhd;	b	resolved
	m	(Ljava/lang/String;Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Ljava/lang/String;	a	lambda$parse$0
	m	()V	<clinit>	<clinit>
c	hg	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Ljava/util/Map;	j	OPTIONS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_UNKNOWN_OPTION
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_INAPPLICABLE_OPTION
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_RANGE_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_LEVEL_NEGATIVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_LIMIT_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_SORT_UNKNOWN
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_GAME_MODE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_ENTITY_TYPE_INVALID
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lhg$a;Ljava/util/function/Predicate;Lxo;)V	a	register
	m	()V	a	bootStrap
	m	(Lhe;Ljava/lang/String;I)Lhg$a;	a	get
	m	(Lhe;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V	a	suggestNames
	m	(Lhe;)Z	a	lambda$bootStrap$65
	m	(Lhe;)V	b	lambda$bootStrap$64
	m	(Lamd;ZLbzm;)Z	a	lambda$bootStrap$63
	m	(Lhe;)Z	c	lambda$bootStrap$62
	m	(Lhe;)V	d	lambda$bootStrap$61
	m	(Ljava/util/Map;Lbzm;)Z	a	lambda$bootStrap$60
	m	(ZLal;)Z	a	lambda$bootStrap$59
	m	(Ljava/util/Map;Lal;)Z	a	lambda$bootStrap$58
	m	(ZLas;)Z	a	lambda$bootStrap$57
	m	(Lhe;)Z	e	lambda$bootStrap$56
	m	(Lhe;)V	f	lambda$bootStrap$55
	m	(Ljava/util/Map;Lbzm;)Z	b	lambda$bootStrap$54
	m	(Lhe;)Z	g	lambda$bootStrap$53
	m	(Lhe;)V	h	lambda$bootStrap$52
	m	(Lui;ZLbzm;)Z	a	lambda$bootStrap$51
	m	(Lhe;)Z	i	lambda$bootStrap$50
	m	(Lhe;)V	j	lambda$bootStrap$49
	m	(Ljava/lang/String;ZLbzm;)Z	a	lambda$bootStrap$48
	m	(Lhe;)Z	k	lambda$bootStrap$47
	m	(Lhe;)V	l	lambda$bootStrap$46
	m	(Lbzv;ZLbzm;)Z	a	lambda$bootStrap$45
	m	(Lhe;ILame;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$bootStrap$44
	m	(Lbae;ZLbzm;)Z	a	lambda$bootStrap$43
	m	(Lhe;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$42
	m	(Ljp$c;)Lame;	a	lambda$bootStrap$41
	m	(Ljp$c;)Lame;	b	lambda$bootStrap$40
	m	(Lhe;)Z	m	lambda$bootStrap$39
	m	(Lhe;)V	n	lambda$bootStrap$38
	m	(Ljava/lang/String;ZLbzm;)Z	b	lambda$bootStrap$37
	m	(Lhe;)Z	o	lambda$bootStrap$36
	m	(Lhe;)V	p	lambda$bootStrap$35
	m	(Ldmr;ZLbzm;)Z	a	lambda$bootStrap$34
	m	(Lhe;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	b	lambda$bootStrap$33
	m	(Lhe;)Z	q	lambda$bootStrap$32
	m	(Lhe;)V	r	lambda$bootStrap$31
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	lambda$bootStrap$30
	m	(Lhe;)Z	s	lambda$bootStrap$29
	m	(Lhe;)V	t	lambda$bootStrap$28
	m	(Lhe;)Z	u	lambda$bootStrap$27
	m	(Lhe;)V	v	lambda$bootStrap$26
	m	(Lhe;)Z	w	lambda$bootStrap$25
	m	(Lhe;)V	x	lambda$bootStrap$24
	m	(Lhe;)Z	y	lambda$bootStrap$23
	m	(Lhe;)V	z	lambda$bootStrap$22
	m	(Lhe;)Z	A	lambda$bootStrap$21
	m	(Lhe;)V	B	lambda$bootStrap$20
	m	(Lhe;)Z	C	lambda$bootStrap$19
	m	(Lhe;)V	D	lambda$bootStrap$18
	m	(Lhe;)Z	E	lambda$bootStrap$17
	m	(Lhe;)V	F	lambda$bootStrap$16
	m	(Lhe;)Z	G	lambda$bootStrap$15
	m	(Lhe;)V	H	lambda$bootStrap$14
	m	(Lhe;)Z	I	lambda$bootStrap$13
	m	(Lhe;)V	J	lambda$bootStrap$12
	m	(Lhe;)Z	K	lambda$bootStrap$11
	m	(Lhe;)V	L	lambda$bootStrap$10
	m	(Lhe;)Z	M	lambda$bootStrap$9
	m	(Lhe;)V	N	lambda$bootStrap$8
	m	(Lhe;)Z	O	lambda$bootStrap$7
	m	(Lhe;)V	P	lambda$bootStrap$6
	m	(Ljava/lang/String;ZLbzm;)Z	c	lambda$bootStrap$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	hg$a	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier
	m	(Lhe;)V	handle	handle
c	hg$b	net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option
	f	Lhg$a;	a	modifier
	f	Ljava/util/function/Predicate;	b	canUse
	f	Lxo;	c	description
	m	(Lhg$a;Ljava/util/function/Predicate;Lxo;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lhg$a;	a	modifier
	m	()Ljava/util/function/Predicate;	b	canUse
	m	()Lxo;	c	description
c	hh	net/minecraft/commands/arguments/selector/options/package-info
c	hi	net/minecraft/commands/arguments/selector/package-info
c	hj	net/minecraft/commands/execution/ChainModifiers
	f	B	b	flags
	f	Lhj;	a	DEFAULT
	f	B	c	FLAG_FORKED
	f	B	d	FLAG_IS_RETURN
	m	(B)V	<init>	<init>
	m	(B)Lhj;	a	setFlag
	m	()Z	a	isForked
	m	()Lhj;	b	setForked
	m	()Z	c	isReturn
	m	()Lhj;	d	setReturn
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()B	e	flags
	m	()V	<clinit>	<clinit>
c	hk	net/minecraft/commands/execution/CommandQueueEntry
	f	Lhq;	a	frame
	f	Lhn;	b	action
	m	(Lhq;Lhn;)V	<init>	<init>
	m	(Lho;)V	a	execute
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lhq;	a	frame
	m	()Lhn;	b	action
c	hl	net/minecraft/commands/execution/CustomCommandExecutor
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
c	hl$a	net/minecraft/commands/execution/CustomCommandExecutor$CommandAdapter
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	run	run
c	hl$b	net/minecraft/commands/execution/CustomCommandExecutor$WithErrorHandling
	m	()V	<init>	<init>
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
	m	(Lcom/mojang/brigadier/exceptions/CommandSyntaxException;Lem;Lhj;Lhr;)V	a	onError
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	b	runGuarded
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
c	hm	net/minecraft/commands/execution/CustomModifierExecutor
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	apply
c	hm$a	net/minecraft/commands/execution/CustomModifierExecutor$ModifierAdapter
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	apply	apply
c	hn	net/minecraft/commands/execution/EntryAction
	m	(Lho;Lhq;)V	execute	execute
c	ho	net/minecraft/commands/execution/ExecutionContext
	f	I	a	MAX_QUEUE_DEPTH
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	commandLimit
	f	I	d	forkLimit
	f	Lbtt;	e	profiler
	f	Lhr;	f	tracer
	f	I	g	commandQuota
	f	Z	h	queueOverflow
	f	Ljava/util/Deque;	i	commandQueue
	f	Ljava/util/List;	j	newTopCommands
	f	I	k	currentFrameDepth
	m	(IILbtt;)V	<init>	<init>
	m	(Lho;Leh;)Lhq;	a	createTopFrame
	m	(Lho;Lid;Lem;Leh;)V	a	queueInitialFunctionCall
	m	(Lho;Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lem;Leh;)V	a	queueInitialCommandExecution
	m	()V	f	handleQueueOverflow
	m	(Lhk;)V	a	queueNext
	m	(I)V	a	discardAtDepthOrHigher
	m	(I)Lhq$a;	b	frameControlForDepth
	m	()V	a	runCommandQueue
	m	()V	g	pushNewCommands
	m	(Lhr;)V	a	tracer
	m	()Lhr;	b	tracer
	m	()Lbtt;	c	profiler
	m	()I	d	forkLimit
	m	()V	e	incrementCost
	m	()V	close	close
	m	(I)V	c	lambda$frameControlForDepth$0
	m	()V	<clinit>	<clinit>
c	hp	net/minecraft/commands/execution/ExecutionControl
	m	(Lhn;)V	a	queueNext
	m	(Lhr;)V	a	tracer
	m	()Lhr;	a	tracer
	m	()Lhq;	b	currentFrame
	m	(Lho;Lhq;)Lhp;	a	create
c	hp$1	net/minecraft/commands/execution/ExecutionControl$1
	f	Lho;	a	val$context
	f	Lhq;	b	val$frame
	m	(Lho;Lhq;)V	<init>	<init>
	m	(Lhn;)V	a	queueNext
	m	(Lhr;)V	a	tracer
	m	()Lhr;	a	tracer
	m	()Lhq;	b	currentFrame
c	hq	net/minecraft/commands/execution/Frame
	f	I	a	depth
	f	Leh;	b	returnValueConsumer
	f	Lhq$a;	c	frameControl
	m	(ILeh;Lhq$a;)V	<init>	<init>
	m	(I)V	a	returnSuccess
	m	()V	a	returnFailure
	m	()V	b	discard
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	depth
	m	()Leh;	d	returnValueConsumer
	m	()Lhq$a;	e	frameControl
c	hq$a	net/minecraft/commands/execution/Frame$FrameControl
	m	()V	discard	discard
c	hr	net/minecraft/commands/execution/TraceCallbacks
	m	(ILjava/lang/String;)V	a	onCommand
	m	(ILjava/lang/String;I)V	a	onReturn
	m	(Ljava/lang/String;)V	a	onError
	m	(ILame;I)V	a	onCall
	m	()V	close	close
c	hs	net/minecraft/commands/execution/UnboundEntryAction
	m	(Ljava/lang/Object;Lho;Lhq;)V	execute	execute
	m	(Ljava/lang/Object;)Lhn;	bind	bind
	m	(Ljava/lang/Object;Lho;Lhq;)V	a	lambda$bind$0
c	ht	net/minecraft/commands/execution/package-info
c	hu	net/minecraft/commands/execution/tasks/BuildContexts
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_FORK_LIMIT_REACHED
	f	Ljava/lang/String;	b	commandInput
	f	Lcom/mojang/brigadier/context/ContextChain;	c	command
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;)V	<init>	<init>
	m	(Lem;Ljava/util/List;Lho;Lhq;Lhj;)V	a	execute
	m	(Lho;Lhq;)V	a	traceCommandStart
	m	()Ljava/lang/String;	toString	toString
	m	(Lhx;Lhq;Lem;)Lhk;	a	lambda$execute$3
	m	(Lcom/mojang/brigadier/context/CommandContext;ZI)V	a	lambda$execute$2
	m	()Ljava/lang/String;	a	lambda$execute$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	hu$a	net/minecraft/commands/execution/tasks/BuildContexts$Continuation
	f	Lhj;	b	modifiers
	f	Lem;	c	originalSource
	f	Ljava/util/List;	d	sources
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lem;Ljava/util/List;)V	<init>	<init>
	m	(Lho;Lhq;)V	execute	execute
c	hu$b	net/minecraft/commands/execution/tasks/BuildContexts$TopLevel
	f	Lem;	b	source
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;Lem;)V	<init>	<init>
	m	(Lho;Lhq;)V	execute	execute
c	hu$c	net/minecraft/commands/execution/tasks/BuildContexts$Unbound
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/ContextChain;)V	<init>	<init>
	m	(Lem;Lho;Lhq;)V	a	execute
	m	(Ljava/lang/Object;Lho;Lhq;)V	execute	execute
c	hv	net/minecraft/commands/execution/tasks/CallFunction
	f	Lid;	a	function
	f	Leh;	b	resultCallback
	f	Z	c	returnParentFrame
	m	(Lid;Leh;Z)V	<init>	<init>
	m	(Lem;Lho;Lhq;)V	a	execute
	m	(Ljava/lang/Object;Lho;Lhq;)V	execute	execute
	m	(Lem;Lhq;Lhs;)Lhk;	a	lambda$execute$0
c	hw	net/minecraft/commands/execution/tasks/ContinuationTask
	f	Lhw$a;	a	taskFactory
	f	Ljava/util/List;	b	arguments
	f	Lhk;	c	selfEntry
	f	I	d	index
	m	(Lhw$a;Ljava/util/List;Lhq;)V	<init>	<init>
	m	(Lho;Lhq;)V	execute	execute
	m	(Lho;Lhq;Ljava/util/List;Lhw$a;)V	a	schedule
c	hw$a	net/minecraft/commands/execution/tasks/ContinuationTask$TaskProvider
	m	(Lhq;Ljava/lang/Object;)Lhk;	create	create
c	hx	net/minecraft/commands/execution/tasks/ExecuteCommand
	f	Ljava/lang/String;	a	commandInput
	f	Lhj;	b	modifiers
	f	Lcom/mojang/brigadier/context/CommandContext;	c	executionContext
	m	(Ljava/lang/String;Lhj;Lcom/mojang/brigadier/context/CommandContext;)V	<init>	<init>
	m	(Lem;Lho;Lhq;)V	a	execute
	m	(Ljava/lang/Object;Lho;Lhq;)V	execute	execute
	m	()Ljava/lang/String;	a	lambda$execute$0
c	hy	net/minecraft/commands/execution/tasks/FallthroughTask
	f	Lhy;	a	INSTANCE
	m	()V	<init>	<init>
	m	()Lhn;	a	instance
	m	(Lho;Lhq;)V	execute	execute
	m	()V	<clinit>	<clinit>
c	hz	net/minecraft/commands/execution/tasks/IsolatedCall
	f	Ljava/util/function/Consumer;	a	taskProducer
	f	Leh;	b	output
	m	(Ljava/util/function/Consumer;Leh;)V	<init>	<init>
	m	(Lho;Lhq;)V	execute	execute
c	ia	net/minecraft/commands/execution/tasks/package-info
c	ib	net/minecraft/commands/functions/CommandFunction
	m	()Lame;	a	id
	m	(Lui;Lcom/mojang/brigadier/CommandDispatcher;)Lid;	a	instantiate
	m	(Ljava/lang/CharSequence;)Z	b	shouldConcatenateNextLine
	m	(Lame;Lcom/mojang/brigadier/CommandDispatcher;Lem;Ljava/util/List;)Lib;	a	fromLines
	m	(Ljava/lang/CharSequence;)V	a	checkCommandLineLength
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lem;Lcom/mojang/brigadier/StringReader;)Lhs;	a	parseCommand
c	ic	net/minecraft/commands/functions/FunctionBuilder
	f	Ljava/util/List;	a	plainEntries
	f	Ljava/util/List;	b	macroEntries
	f	Ljava/util/List;	c	macroArguments
	m	()V	<init>	<init>
	m	(Lhs;)V	a	addCommand
	m	(Ljava/lang/String;)I	a	getArgumentIndex
	m	(Ljava/util/List;)Lit/unimi/dsi/fastutil/ints/IntList;	a	convertToIndices
	m	(Ljava/lang/String;ILem;)V	a	addMacro
	m	(Lame;)Lib;	a	build
c	id	net/minecraft/commands/functions/InstantiatedFunction
	m	()Lame;	a	id
	m	()Ljava/util/List;	b	entries
c	ie	net/minecraft/commands/functions/MacroFunction
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	I	b	MAX_CACHE_ENTRIES
	f	Ljava/util/List;	c	parameters
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;	d	cache
	f	Lame;	e	id
	f	Ljava/util/List;	f	entries
	m	(Lame;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lame;	a	id
	m	(Lui;Lcom/mojang/brigadier/CommandDispatcher;)Lid;	a	instantiate
	m	(Lvi;)Ljava/lang/String;	a	stringify
	m	(Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntList;Ljava/util/List;)V	a	lookupValues
	m	(Ljava/util/List;Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;)Lid;	a	substituteAndParse
	m	(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;	a	lambda$substituteAndParse$2
	m	(Ljava/util/List;Ljava/util/List;I)V	a	lambda$lookupValues$1
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ie$a	net/minecraft/commands/functions/MacroFunction$Entry
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lame;)Lhs;	a	instantiate
c	ie$b	net/minecraft/commands/functions/MacroFunction$MacroEntry
	f	Lih;	a	template
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	parameters
	f	Lem;	c	compilationContext
	m	(Lih;Lit/unimi/dsi/fastutil/ints/IntList;Lem;)V	<init>	<init>
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lame;)Lhs;	a	instantiate
c	ie$c	net/minecraft/commands/functions/MacroFunction$PlainTextEntry
	f	Lhs;	a	compiledAction
	m	(Lhs;)V	<init>	<init>
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	parameters
	m	(Ljava/util/List;Lcom/mojang/brigadier/CommandDispatcher;Lame;)Lhs;	a	instantiate
c	ig	net/minecraft/commands/functions/PlainTextFunction
	f	Lame;	a	id
	f	Ljava/util/List;	b	entries
	m	(Lame;Ljava/util/List;)V	<init>	<init>
	m	(Lui;Lcom/mojang/brigadier/CommandDispatcher;)Lid;	a	instantiate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Ljava/util/List;	b	entries
c	ih	net/minecraft/commands/functions/StringTemplate
	f	Ljava/util/List;	a	segments
	f	Ljava/util/List;	b	variables
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/String;)Lih;	a	fromString
	m	(Ljava/lang/String;)Z	b	isValidVariableName
	m	(Ljava/util/List;)Ljava/lang/String;	a	substitute
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	segments
	m	()Ljava/util/List;	b	variables
c	ii	net/minecraft/commands/functions/package-info
c	ij	net/minecraft/commands/package-info
c	ik	net/minecraft/commands/synchronization/ArgumentTypeInfo
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
c	ik$a	net/minecraft/commands/synchronization/ArgumentTypeInfo$Template
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
	m	()Lik;	a	type
c	il	net/minecraft/commands/synchronization/ArgumentTypeInfos
	f	Ljava/util/Map;	a	BY_CLASS
	m	()V	<init>	<init>
	m	(Ljy;Ljava/lang/String;Ljava/lang/Class;Lik;)Lik;	a	register
	m	(Ljy;)Lik;	a	bootstrap
	m	(Ljava/lang/Class;)Ljava/lang/Class;	b	fixClassType
	m	(Ljava/lang/Class;)Z	a	isClassRecognized
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik;	a	byClass
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	b	unpack
	m	()V	<clinit>	<clinit>
c	im	net/minecraft/commands/synchronization/ArgumentUtils
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	B	b	NUMBER_FLAG_MIN
	f	B	c	NUMBER_FLAG_MAX
	m	()V	<init>	<init>
	m	(ZZ)I	a	createNumberFlags
	m	(B)Z	a	numberHasMin
	m	(B)Z	b	numberHasMax
	m	(Lcom/google/gson/JsonObject;Lik;Lik$a;)V	a	serializeArgumentCap
	m	(Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V	a	serializeArgumentToJson
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject;	a	serializeNodeToJson
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set;	a	findUsedArgumentTypes
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V	a	findUsedArgumentTypes
	m	(Ljava/util/Set;Ljava/util/Set;Lcom/mojang/brigadier/tree/CommandNode;)V	a	lambda$findUsedArgumentTypes$0
	m	()V	<clinit>	<clinit>
c	in	net/minecraft/commands/synchronization/SingletonArgumentInfo
	f	Lin$a;	a	template
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/util/function/Supplier;)Lin;	a	contextFree
	m	(Ljava/util/function/Function;)Lin;	a	contextAware
	m	(Lin$a;Lwg;)V	a	serializeToNetwork
	m	(Lin$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lin$a;	a	deserializeFromNetwork
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lin$a;	b	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
	m	(Ljava/util/function/Supplier;Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$contextFree$0
c	in$a	net/minecraft/commands/synchronization/SingletonArgumentInfo$Template
	f	Ljava/util/function/Function;	b	constructor
	f	Lin;	a	this$0
	m	(Lin;Ljava/util/function/Function;)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
	m	()Lik;	a	type
c	ip	net/minecraft/commands/synchronization/SuggestionProviders
	f	Ljava/util/Map;	d	PROVIDERS_BY_NAME
	f	Lame;	e	ID_ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	ASK_SERVER
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	AVAILABLE_SOUNDS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	c	SUMMONABLE_ENTITIES
	m	()V	<init>	<init>
	m	(Lame;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	register
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	cast
	m	(Lame;)Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	getProvider
	m	(Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lame;	b	getName
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbzv;)Z	a	lambda$static$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ip$a	net/minecraft/commands/synchronization/SuggestionProviders$RegisteredSuggestion
	f	Lame;	a	name
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	delegate
	m	(Lame;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	getSuggestions	getSuggestions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	name
	m	()Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	delegate
c	iq	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo
	m	()V	<init>	<init>
	m	(Liq$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Liq$a;	a	deserializeFromNetwork
	m	(Liq$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Liq$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	iq$a	net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template
	f	D	b	min
	f	D	c	max
	f	Liq;	a	this$0
	m	(Liq;DD)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/DoubleArgumentType;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	ir	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo
	m	()V	<init>	<init>
	m	(Lir$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lir$a;	a	deserializeFromNetwork
	m	(Lir$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lir$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	ir$a	net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template
	f	F	b	min
	f	F	c	max
	f	Lir;	a	this$0
	m	(Lir;FF)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/FloatArgumentType;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	is	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo
	m	()V	<init>	<init>
	m	(Lis$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Lis$a;	a	deserializeFromNetwork
	m	(Lis$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lis$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	is$a	net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template
	f	I	b	min
	f	I	c	max
	f	Lis;	a	this$0
	m	(Lis;II)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/IntegerArgumentType;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	iu	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo
	m	()V	<init>	<init>
	m	(Liu$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Liu$a;	a	deserializeFromNetwork
	m	(Liu$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/LongArgumentType;)Liu$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	iu$a	net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template
	f	J	b	min
	f	J	c	max
	f	Liu;	a	this$0
	m	(Liu;JJ)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/LongArgumentType;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	iv	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer
	m	()V	<init>	<init>
	m	(Liv$a;Lwg;)V	a	serializeToNetwork
	m	(Lwg;)Liv$a;	a	deserializeFromNetwork
	m	(Liv$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lcom/mojang/brigadier/arguments/StringArgumentType;)Liv$a;	a	unpack
	m	(Lcom/mojang/brigadier/arguments/ArgumentType;)Lik$a;	a	unpack
	m	(Lik$a;Lcom/google/gson/JsonObject;)V	a	serializeToJson
	m	(Lwg;)Lik$a;	b	deserializeFromNetwork
	m	(Lik$a;Lwg;)V	a	serializeToNetwork
c	iv$1	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$1
	f	[I	a	$SwitchMap$com$mojang$brigadier$arguments$StringArgumentType$StringType
	m	()V	<clinit>	<clinit>
c	iv$a	net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template
	f	Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;	b	type
	f	Liv;	a	this$0
	m	(Liv;Lcom/mojang/brigadier/arguments/StringArgumentType$StringType;)V	<init>	<init>
	m	(Leg;)Lcom/mojang/brigadier/arguments/StringArgumentType;	a	instantiate
	m	()Lik;	a	type
	m	(Leg;)Lcom/mojang/brigadier/arguments/ArgumentType;	b	instantiate
c	iw	net/minecraft/commands/synchronization/brigadier/package-info
c	ix	net/minecraft/commands/synchronization/package-info
c	iy	net/minecraft/core/AxisCycle
	f	Liy;	a	NONE
	f	Liy;	b	FORWARD
	f	Liy;	c	BACKWARD
	f	[Ljh$a;	d	AXIS_VALUES
	f	[Liy;	e	VALUES
	f	[Liy;	f	$VALUES
	m	()[Liy;	values	values
	m	(Ljava/lang/String;)Liy;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(IIILjh$a;)I	a	cycle
	m	(DDDLjh$a;)D	a	cycle
	m	(Ljh$a;)Ljh$a;	a	cycle
	m	()Liy;	a	inverse
	m	(Ljh$a;Ljh$a;)Liy;	a	between
	m	()[Liy;	b	$values
	m	()V	<clinit>	<clinit>
c	iy$1	net/minecraft/core/AxisCycle$1
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(IIILjh$a;)I	a	cycle
	m	(DDDLjh$a;)D	a	cycle
	m	(Ljh$a;)Ljh$a;	a	cycle
	m	()Liy;	a	inverse
c	iy$2	net/minecraft/core/AxisCycle$2
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(IIILjh$a;)I	a	cycle
	m	(DDDLjh$a;)D	a	cycle
	m	(Ljh$a;)Ljh$a;	a	cycle
	m	()Liy;	a	inverse
c	iy$3	net/minecraft/core/AxisCycle$3
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(IIILjh$a;)I	a	cycle
	m	(DDDLjh$a;)D	a	cycle
	m	(Ljh$a;)Ljh$a;	a	cycle
	m	()Liy;	a	inverse
c	iz	net/minecraft/core/BlockBox
	f	Ljb;	b	min
	f	Ljb;	c	max
	f	Lzm;	a	STREAM_CODEC
	m	(Ljb;Ljb;)V	<init>	<init>
	m	(Ljb;)Liz;	a	of
	m	(Ljb;Ljb;)Liz;	a	of
	m	(Ljb;)Liz;	b	include
	m	()Z	a	isBlock
	m	(Ljb;)Z	c	contains
	m	()Lfin;	b	aabb
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()I	c	sizeX
	m	()I	d	sizeY
	m	()I	e	sizeZ
	m	(Ljh;I)Liz;	a	extend
	m	(Ljh;I)Liz;	b	move
	m	(Lkg;)Liz;	a	offset
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	f	min
	m	()Ljb;	g	max
	m	()V	<clinit>	<clinit>
c	iz$1	net/minecraft/core/BlockBox$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Liz;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Liz;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	ja	net/minecraft/core/BlockMath
	f	Ljava/util/Map;	a	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL
	f	Ljava/util/Map;	b	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL
	m	()V	<init>	<init>
	m	(Lk;)Lk;	a	blockCenterToCorner
	m	(Lk;)Lk;	b	blockCornerToCenter
	m	(Lk;Ljh;)Lk;	a	getFaceTransformation
	m	()V	<clinit>	<clinit>
c	jb	net/minecraft/core/BlockPos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	Ljb;	c	ZERO
	f	I	d	PACKED_HORIZONTAL_LENGTH
	f	I	e	PACKED_Y_LENGTH
	f	J	k	PACKED_X_MASK
	f	J	l	PACKED_Y_MASK
	f	J	m	PACKED_Z_MASK
	f	I	n	Y_OFFSET
	f	I	o	Z_OFFSET
	f	I	p	X_OFFSET
	f	I	f	MAX_HORIZONTAL_COORDINATE
	m	(III)V	<init>	<init>
	m	(Lkg;)V	<init>	<init>
	m	(JLjh;)J	a	offset
	m	(JIII)J	a	offset
	m	(J)I	a	getX
	m	(J)I	b	getY
	m	(J)I	c	getZ
	m	(J)Ljb;	d	of
	m	(DDD)Ljb;	a	containing
	m	(Ljv;)Ljb;	a	containing
	m	(Ljb;Ljb;)Ljb;	a	min
	m	(Ljb;Ljb;)Ljb;	b	max
	m	()J	a	asLong
	m	(III)J	a	asLong
	m	(J)J	e	getFlatIndex
	m	(III)Ljb;	b	offset
	m	()Lfis;	b	getCenter
	m	()Lfis;	c	getBottomCenter
	m	(Lkg;)Ljb;	a	offset
	m	(Lkg;)Ljb;	b	subtract
	m	(I)Ljb;	a	multiply
	m	()Ljb;	d	above
	m	(I)Ljb;	b	above
	m	()Ljb;	e	below
	m	(I)Ljb;	c	below
	m	()Ljb;	f	north
	m	(I)Ljb;	d	north
	m	()Ljb;	g	south
	m	(I)Ljb;	e	south
	m	()Ljb;	h	west
	m	(I)Ljb;	f	west
	m	()Ljb;	i	east
	m	(I)Ljb;	g	east
	m	(Ljh;)Ljb;	a	relative
	m	(Ljh;I)Ljb;	a	relative
	m	(Ljh$a;I)Ljb;	a	relative
	m	(Ldwu;)Ljb;	a	rotate
	m	(Lkg;)Ljb;	c	cross
	m	(I)Ljb;	h	atY
	m	()Ljb;	j	immutable
	m	()Ljb$a;	k	mutable
	m	(Lfis;)Lfis;	a	clampLocationWithin
	m	(Lbck;ILjb;I)Ljava/lang/Iterable;	a	randomInCube
	m	(Ljb;)Ljava/util/stream/Stream;	a	squareOutSouthEast
	m	(Lbck;IIIIIII)Ljava/lang/Iterable;	a	randomBetweenClosed
	m	(Ljb;III)Ljava/lang/Iterable;	a	withinManhattan
	m	(Ljb;IILjava/util/function/Predicate;)Ljava/util/Optional;	a	findClosestMatch
	m	(Ljb;III)Ljava/util/stream/Stream;	b	withinManhattanStream
	m	(Lfin;)Ljava/lang/Iterable;	a	betweenClosed
	m	(Ljb;Ljb;)Ljava/lang/Iterable;	c	betweenClosed
	m	(Ljb;Ljb;)Ljava/util/stream/Stream;	d	betweenClosedStream
	m	(Leuq;)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(Lfin;)Ljava/util/stream/Stream;	b	betweenClosedStream
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(IIIIII)Ljava/lang/Iterable;	b	betweenClosed
	m	(Ljb;ILjh;Ljh;)Ljava/lang/Iterable;	a	spiralAround
	m	(Ljb;IILjava/util/function/BiConsumer;Ljava/util/function/Function;)I	a	breadthFirstTraversal
	m	(Lkg;)Lkg;	d	cross
	m	(Ljh$a;I)Lkg;	b	relative
	m	(Ljh;I)Lkg;	b	relative
	m	(Ljh;)Lkg;	b	relative
	m	(I)Lkg;	i	east
	m	()Lkg;	l	east
	m	(I)Lkg;	j	west
	m	()Lkg;	m	west
	m	(I)Lkg;	k	south
	m	()Lkg;	n	south
	m	(I)Lkg;	l	north
	m	()Lkg;	o	north
	m	(I)Lkg;	m	below
	m	()Lkg;	p	below
	m	(I)Lkg;	n	above
	m	()Lkg;	q	above
	m	(I)Lkg;	o	multiply
	m	(Lkg;)Lkg;	e	subtract
	m	(Lkg;)Lkg;	f	offset
	m	(III)Lkg;	c	offset
	m	(Ljava/util/Queue;ILjb;)V	a	lambda$breadthFirstTraversal$7
	m	(Ljh;Ljh;Ljb;I)Ljava/util/Iterator;	a	lambda$spiralAround$6
	m	(IIIIII)Ljava/util/Iterator;	c	lambda$betweenClosed$5
	m	(IIIIIII)Ljava/util/Iterator;	a	lambda$withinManhattan$4
	m	(IILbck;IIIII)Ljava/util/Iterator;	a	lambda$randomBetweenClosed$3
	m	(Ljb;)Ljava/util/stream/IntStream;	b	lambda$static$2
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Ljb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	jb$1	net/minecraft/core/BlockPos$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljb;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljb;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	jb$2	net/minecraft/core/BlockPos$2
	f	Ljb$a;	a	nextPos
	f	I	b	counter
	f	I	c	val$limit
	f	I	d	val$minX
	f	Lbck;	e	val$random
	f	I	f	val$width
	f	I	g	val$minY
	f	I	h	val$height
	f	I	i	val$minZ
	f	I	j	val$depth
	m	(IILbck;IIIII)V	<init>	<init>
	m	()Ljb;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	jb$3	net/minecraft/core/BlockPos$3
	f	Ljb$a;	h	cursor
	f	I	i	currentDepth
	f	I	j	maxX
	f	I	k	maxY
	f	I	l	x
	f	I	m	y
	f	Z	n	zMirror
	f	I	a	val$originZ
	f	I	b	val$maxDepth
	f	I	c	val$reachX
	f	I	d	val$reachY
	f	I	e	val$reachZ
	f	I	f	val$originX
	f	I	g	val$originY
	m	(IIIIIII)V	<init>	<init>
	m	()Ljb;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	jb$4	net/minecraft/core/BlockPos$4
	f	Ljb$a;	g	cursor
	f	I	h	index
	f	I	a	val$end
	f	I	b	val$width
	f	I	c	val$height
	f	I	d	val$minX
	f	I	e	val$minY
	f	I	f	val$minZ
	m	(IIIIII)V	<init>	<init>
	m	()Ljb;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	jb$5	net/minecraft/core/BlockPos$5
	f	[Ljh;	e	directions
	f	Ljb$a;	f	cursor
	f	I	g	legs
	f	I	h	leg
	f	I	i	legSize
	f	I	j	legIndex
	f	I	k	lastX
	f	I	l	lastY
	f	I	m	lastZ
	f	Ljh;	a	val$firstDirection
	f	Ljh;	b	val$secondDirection
	f	Ljb;	c	val$center
	f	I	d	val$radius
	m	(Ljh;Ljh;Ljb;I)V	<init>	<init>
	m	()Ljb$a;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	jb$6	net/minecraft/core/BlockPos$6
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$core$Direction$Axis
	m	()V	<clinit>	<clinit>
c	jb$a	net/minecraft/core/BlockPos$MutableBlockPos
	m	()V	<init>	<init>
	m	(III)V	<init>	<init>
	m	(DDD)V	<init>	<init>
	m	(III)Ljb;	b	offset
	m	(I)Ljb;	a	multiply
	m	(Ljh;I)Ljb;	a	relative
	m	(Ljh$a;I)Ljb;	a	relative
	m	(Ldwu;)Ljb;	a	rotate
	m	(III)Ljb$a;	d	set
	m	(DDD)Ljb$a;	b	set
	m	(Lkg;)Ljb$a;	g	set
	m	(J)Ljb$a;	f	set
	m	(Liy;III)Ljb$a;	a	set
	m	(Lkg;Ljh;)Ljb$a;	a	setWithOffset
	m	(Lkg;III)Ljb$a;	a	setWithOffset
	m	(Lkg;Lkg;)Ljb$a;	a	setWithOffset
	m	(Ljh;)Ljb$a;	c	move
	m	(Ljh;I)Ljb$a;	c	move
	m	(III)Ljb$a;	e	move
	m	(Lkg;)Ljb$a;	h	move
	m	(Ljh$a;II)Ljb$a;	a	clamp
	m	(I)Ljb$a;	p	setX
	m	(I)Ljb$a;	q	setY
	m	(I)Ljb$a;	r	setZ
	m	()Ljb;	j	immutable
	m	(Lkg;)Lkg;	d	cross
	m	(Ljh$a;I)Lkg;	b	relative
	m	(Ljh;I)Lkg;	b	relative
	m	(Ljh;)Lkg;	b	relative
	m	(I)Lkg;	i	east
	m	()Lkg;	l	east
	m	(I)Lkg;	j	west
	m	()Lkg;	m	west
	m	(I)Lkg;	k	south
	m	()Lkg;	n	south
	m	(I)Lkg;	l	north
	m	()Lkg;	o	north
	m	(I)Lkg;	m	below
	m	()Lkg;	p	below
	m	(I)Lkg;	n	above
	m	()Lkg;	q	above
	m	(I)Lkg;	o	multiply
	m	(Lkg;)Lkg;	e	subtract
	m	(Lkg;)Lkg;	f	offset
	m	(III)Lkg;	c	offset
	m	(I)Lkg;	s	setZ
	m	(I)Lkg;	t	setY
	m	(I)Lkg;	u	setX
c	jb$b	net/minecraft/core/BlockPos$TraversalNodeStatus
	f	Ljb$b;	a	ACCEPT
	f	Ljb$b;	b	SKIP
	f	Ljb$b;	c	STOP
	f	[Ljb$b;	d	$VALUES
	m	()[Ljb$b;	values	values
	m	(Ljava/lang/String;)Ljb$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ljb$b;	a	$values
	m	()V	<clinit>	<clinit>
c	jc	net/minecraft/core/ClientAsset
	f	Lame;	d	id
	f	Lame;	e	texturePath
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	DEFAULT_FIELD_CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Lame;)V	<init>	<init>
	m	(Lame;Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Lame;	b	texturePath
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	jd	net/minecraft/core/Cloner
	f	Lcom/mojang/serialization/Codec;	a	directCodec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ljava/lang/Object;Ljn$a;Ljn$a;)Ljava/lang/Object;	a	clone
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$clone$1
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	b	lambda$clone$0
c	jd$a	net/minecraft/core/Cloner$Factory
	f	Ljava/util/Map;	a	codecs
	m	()V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/Codec;)Ljd$a;	a	addCodec
	m	(Lamd;)Ljd;	a	cloner
c	je	net/minecraft/core/Cursor3D
	f	I	a	TYPE_INSIDE
	f	I	b	TYPE_FACE
	f	I	c	TYPE_EDGE
	f	I	d	TYPE_CORNER
	f	I	e	originX
	f	I	f	originY
	f	I	g	originZ
	f	I	h	width
	f	I	i	height
	f	I	j	depth
	f	I	k	end
	f	I	l	index
	f	I	m	x
	f	I	n	y
	f	I	o	z
	m	(IIIIII)V	<init>	<init>
	m	()Z	a	advance
	m	()I	b	nextX
	m	()I	c	nextY
	m	()I	d	nextZ
	m	()I	e	getNextType
c	jf	net/minecraft/core/DefaultedMappedRegistry
	f	Lame;	b	defaultKey
	f	Ljl$c;	c	defaultValue
	m	(Ljava/lang/String;Lamd;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
	m	(Lamd;Ljava/lang/Object;Ljx;)Ljl$c;	a	register
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljava/lang/Object;)Lame;	b	getKey
	m	(Lame;)Ljava/lang/Object;	a	getValue
	m	(Lame;)Ljava/util/Optional;	b	getOptional
	m	()Ljava/util/Optional;	a	getAny
	m	(I)Ljava/lang/Object;	a	byId
	m	(Lbck;)Ljava/util/Optional;	a	getRandom
	m	()Lame;	b	getDefaultKey
	m	()Ljava/util/Optional;	u	lambda$getRandom$0
c	jg	net/minecraft/core/DefaultedRegistry
	m	(Ljava/lang/Object;)Lame;	b	getKey
	m	(Lame;)Ljava/lang/Object;	a	getValue
	m	(I)Ljava/lang/Object;	a	byId
	m	()Lame;	b	getDefaultKey
c	jh	net/minecraft/core/Direction
	f	Ljh;	a	DOWN
	f	Ljh;	b	UP
	f	Ljh;	c	NORTH
	f	Ljh;	d	SOUTH
	f	Ljh;	e	WEST
	f	Ljh;	f	EAST
	f	Lbda$a;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	VERTICAL_CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	j	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	k	LEGACY_ID_CODEC
	f	Lcom/mojang/serialization/Codec;	l	LEGACY_ID_CODEC_2D
	f	I	m	data3d
	f	I	n	oppositeIndex
	f	I	o	data2d
	f	Ljava/lang/String;	p	name
	f	Ljh$a;	q	axis
	f	Ljh$b;	r	axisDirection
	f	Lkg;	s	normal
	f	Lfis;	t	normalVec3
	f	Lorg/joml/Vector3fc;	u	normalVec3f
	f	[Ljh;	v	VALUES
	f	[Ljh;	w	BY_3D_DATA
	f	[Ljh;	x	BY_2D_DATA
	f	[Ljh;	y	$VALUES
	m	()[Ljh;	values	values
	m	(Ljava/lang/String;)Ljh;	valueOf	valueOf
	m	(Ljava/lang/String;IIIILjava/lang/String;Ljh$b;Ljh$a;Lkg;)V	<init>	<init>
	m	(Lbzm;)[Ljh;	a	orderedByNearest
	m	(Ljh;Ljh;Ljh;)[Ljh;	a	makeDirectionArray
	m	(Lorg/joml/Matrix4fc;Ljh;)Ljh;	a	rotate
	m	(Lbck;)Ljava/util/Collection;	a	allShuffled
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Ljh;)F	a	getYRot
	m	()Lorg/joml/Quaternionf;	b	getRotation
	m	()I	d	get3DDataValue
	m	()I	e	get2DDataValue
	m	()Ljh$b;	f	getAxisDirection
	m	(Lbzm;Ljh$a;)Ljh;	a	getFacingAxis
	m	()Ljh;	g	getOpposite
	m	(Ljh$a;)Ljh;	a	getClockWise
	m	(Ljh$a;)Ljh;	b	getCounterClockWise
	m	()Ljh;	h	getClockWise
	m	()Ljh;	t	getClockWiseX
	m	()Ljh;	u	getCounterClockWiseX
	m	()Ljh;	v	getClockWiseZ
	m	()Ljh;	w	getCounterClockWiseZ
	m	()Ljh;	i	getCounterClockWise
	m	()I	j	getStepX
	m	()I	k	getStepY
	m	()I	l	getStepZ
	m	()Lorg/joml/Vector3f;	m	step
	m	()Ljava/lang/String;	n	getName
	m	()Ljh$a;	o	getAxis
	m	(Ljava/lang/String;)Ljh;	a	byName
	m	(I)Ljh;	a	from3DDataValue
	m	(I)Ljh;	b	from2DDataValue
	m	(D)Ljh;	a	fromYRot
	m	(Ljh$a;Ljh$b;)Ljh;	a	fromAxisAndDirection
	m	()F	p	toYRot
	m	(Lbck;)Ljh;	b	getRandom
	m	(DDD)Ljh;	a	getApproximateNearest
	m	(FFF)Ljh;	a	getApproximateNearest
	m	(Lfis;)Ljh;	a	getApproximateNearest
	m	(IIILjh;)Ljh;	a	getNearest
	m	(Lkg;Ljh;)Ljh;	a	getNearest
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljh;)Lcom/mojang/serialization/DataResult;	b	verifyVertical
	m	(Ljh$b;Ljh$a;)Ljh;	a	get
	m	()Lkg;	q	getUnitVec3i
	m	()Lfis;	r	getUnitVec3
	m	()Lorg/joml/Vector3fc;	s	getUnitVec3f
	m	(F)Z	a	isFacingAngle
	m	()Ljava/lang/String;	x	lambda$verifyVertical$7
	m	(I)[Ljh;	c	lambda$static$6
	m	(Ljh;)I	c	lambda$static$5
	m	(Ljh;)Z	d	lambda$static$4
	m	(I)[Ljh;	d	lambda$static$3
	m	(Ljh;)I	e	lambda$static$2
	m	(Ljh;)Ljava/lang/Byte;	f	lambda$static$1
	m	(Ljh;)Ljava/lang/Byte;	g	lambda$static$0
	m	()[Ljh;	y	$values
	m	()V	<clinit>	<clinit>
c	jh$a	net/minecraft/core/Direction$Axis
	f	Ljh$a;	a	X
	f	Ljh$a;	b	Y
	f	Ljh$a;	c	Z
	f	[Ljh$a;	d	VALUES
	f	Lbda$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Ljh$a;	g	$VALUES
	m	()[Ljh$a;	values	values
	m	(Ljava/lang/String;)Ljh$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljh$a;	a	byName
	m	()Ljava/lang/String;	a	getName
	m	()Z	b	isVertical
	m	()Z	d	isHorizontal
	m	()Ljh;	e	getPositive
	m	()Ljh;	f	getNegative
	m	()[Ljh;	g	getDirections
	m	()Ljava/lang/String;	toString	toString
	m	(Lbck;)Ljh$a;	a	getRandom
	m	(Ljh;)Z	a	test
	m	()Ljh$c;	h	getPlane
	m	()Ljava/lang/String;	c	getSerializedName
	m	(III)I	a	choose
	m	(DDD)D	a	choose
	m	(ZZZ)Z	a	choose
	m	(Ljava/lang/Object;)Z	test	test
	m	()[Ljh$a;	i	$values
	m	()V	<clinit>	<clinit>
c	jh$a$1	net/minecraft/core/Direction$Axis$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(III)I	a	choose
	m	(ZZZ)Z	a	choose
	m	(DDD)D	a	choose
	m	()Ljh;	e	getPositive
	m	()Ljh;	f	getNegative
	m	(Ljava/lang/Object;)Z	test	test
c	jh$a$2	net/minecraft/core/Direction$Axis$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(III)I	a	choose
	m	(DDD)D	a	choose
	m	(ZZZ)Z	a	choose
	m	()Ljh;	e	getPositive
	m	()Ljh;	f	getNegative
	m	(Ljava/lang/Object;)Z	test	test
c	jh$a$3	net/minecraft/core/Direction$Axis$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(III)I	a	choose
	m	(DDD)D	a	choose
	m	(ZZZ)Z	a	choose
	m	()Ljh;	e	getPositive
	m	()Ljh;	f	getNegative
	m	(Ljava/lang/Object;)Z	test	test
c	jh$b	net/minecraft/core/Direction$AxisDirection
	f	Ljh$b;	a	POSITIVE
	f	Ljh$b;	b	NEGATIVE
	f	I	c	step
	f	Ljava/lang/String;	d	name
	f	[Ljh$b;	e	$VALUES
	m	()[Ljh$b;	values	values
	m	(Ljava/lang/String;)Ljh$b;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getStep
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	toString	toString
	m	()Ljh$b;	c	opposite
	m	()[Ljh$b;	d	$values
	m	()V	<clinit>	<clinit>
c	jh$c	net/minecraft/core/Direction$Plane
	f	Ljh$c;	a	HORIZONTAL
	f	Ljh$c;	b	VERTICAL
	f	[Ljh;	c	faces
	f	[Ljh$a;	d	axis
	f	[Ljh$c;	e	$VALUES
	m	()[Ljh$c;	values	values
	m	(Ljava/lang/String;)Ljh$c;	valueOf	valueOf
	m	(Ljava/lang/String;I[Ljh;[Ljh$a;)V	<init>	<init>
	m	(Lbck;)Ljh;	a	getRandomDirection
	m	(Lbck;)Ljh$a;	b	getRandomAxis
	m	(Ljh;)Z	a	test
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lbck;)Ljava/util/List;	c	shuffledCopy
	m	()I	b	length
	m	(Ljava/lang/Object;)Z	test	test
	m	()[Ljh$c;	c	$values
	m	()V	<clinit>	<clinit>
c	ji	net/minecraft/core/Direction8
	f	Lji;	a	NORTH
	f	Lji;	b	NORTH_EAST
	f	Lji;	c	EAST
	f	Lji;	d	SOUTH_EAST
	f	Lji;	e	SOUTH
	f	Lji;	f	SOUTH_WEST
	f	Lji;	g	WEST
	f	Lji;	h	NORTH_WEST
	f	Ljava/util/Set;	i	directions
	f	Lkg;	j	step
	f	[Lji;	k	$VALUES
	m	()[Lji;	values	values
	m	(Ljava/lang/String;)Lji;	valueOf	valueOf
	m	(Ljava/lang/String;I[Ljh;)V	<init>	<init>
	m	()Ljava/util/Set;	a	getDirections
	m	()I	b	getStepX
	m	()I	c	getStepZ
	m	()[Lji;	d	$values
	m	()V	<clinit>	<clinit>
c	jj	net/minecraft/core/FrontAndTop
	f	Ljj;	a	DOWN_EAST
	f	Ljj;	b	DOWN_NORTH
	f	Ljj;	c	DOWN_SOUTH
	f	Ljj;	d	DOWN_WEST
	f	Ljj;	e	UP_EAST
	f	Ljj;	f	UP_NORTH
	f	Ljj;	g	UP_SOUTH
	f	Ljj;	h	UP_WEST
	f	Ljj;	i	WEST_UP
	f	Ljj;	j	EAST_UP
	f	Ljj;	k	NORTH_UP
	f	Ljj;	l	SOUTH_UP
	f	I	m	NUM_DIRECTIONS
	f	[Ljj;	n	BY_TOP_FRONT
	f	Ljava/lang/String;	o	name
	f	Ljh;	p	top
	f	Ljh;	q	front
	f	[Ljj;	r	$VALUES
	m	()[Ljj;	values	values
	m	(Ljava/lang/String;)Ljj;	valueOf	valueOf
	m	(Ljh;Ljh;)I	b	lookupKey
	m	(Ljava/lang/String;ILjava/lang/String;Ljh;Ljh;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljh;Ljh;)Ljj;	a	fromFrontAndTop
	m	()Ljh;	a	front
	m	()Ljh;	b	top
	m	([Ljj;)V	a	lambda$static$0
	m	()[Ljj;	d	$values
	m	()V	<clinit>	<clinit>
c	jk	net/minecraft/core/GlobalPos
	f	Lamd;	d	dimension
	f	Ljb;	e	pos
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Lamd;Ljb;)V	<init>	<init>
	m	(Lamd;Ljb;)Ljk;	a	of
	m	()Ljava/lang/String;	toString	toString
	m	(Lamd;Ljb;I)Z	a	isCloseEnough
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	dimension
	m	()Ljb;	b	pos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	jl	net/minecraft/core/Holder
	m	()Ljava/lang/Object;	a	value
	m	()Z	b	isBound
	m	(Lame;)Z	a	is
	m	(Lamd;)Z	a	is
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Lbae;)Z	a	is
	m	(Ljl;)Z	a	is
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljl$b;	f	kind
	m	(Ljo;)Z	a	canSerializeIn
	m	()Ljava/lang/String;	g	getRegisteredName
	m	(Ljava/lang/Object;)Ljl;	a	direct
	m	(Lamd;)Ljava/lang/String;	b	lambda$getRegisteredName$0
c	jl$a	net/minecraft/core/Holder$Direct
	f	Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	()Z	b	isBound
	m	(Lame;)Z	a	is
	m	(Lamd;)Z	a	is
	m	(Lbae;)Z	a	is
	m	(Ljl;)Z	a	is
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljl$b;	f	kind
	m	()Ljava/lang/String;	toString	toString
	m	(Ljo;)Z	a	canSerializeIn
	m	()Ljava/util/stream/Stream;	c	tags
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	value
c	jl$b	net/minecraft/core/Holder$Kind
	f	Ljl$b;	a	REFERENCE
	f	Ljl$b;	b	DIRECT
	f	[Ljl$b;	c	$VALUES
	m	()[Ljl$b;	values	values
	m	(Ljava/lang/String;)Ljl$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ljl$b;	a	$values
	m	()V	<clinit>	<clinit>
c	jl$c	net/minecraft/core/Holder$Reference
	f	Ljo;	a	owner
	f	Ljava/util/Set;	b	tags
	f	Ljl$c$a;	c	type
	f	Lamd;	d	key
	f	Ljava/lang/Object;	e	value
	m	(Ljl$c$a;Ljo;Lamd;Ljava/lang/Object;)V	<init>	<init>
	m	(Ljo;Lamd;)Ljl$c;	a	createStandAlone
	m	(Ljo;Ljava/lang/Object;)Ljl$c;	a	createIntrusive
	m	()Lamd;	h	key
	m	()Ljava/lang/Object;	a	value
	m	(Lame;)Z	a	is
	m	(Lamd;)Z	a	is
	m	()Ljava/util/Set;	i	boundTags
	m	(Lbae;)Z	a	is
	m	(Ljl;)Z	a	is
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Ljo;)Z	a	canSerializeIn
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	()Ljl$b;	f	kind
	m	()Z	b	isBound
	m	(Lamd;)V	b	bindKey
	m	(Ljava/lang/Object;)V	b	bindValue
	m	(Ljava/util/Collection;)V	a	bindTags
	m	()Ljava/util/stream/Stream;	c	tags
	m	()Ljava/lang/String;	toString	toString
c	jl$c$a	net/minecraft/core/Holder$Reference$Type
	f	Ljl$c$a;	a	STAND_ALONE
	f	Ljl$c$a;	b	INTRUSIVE
	f	[Ljl$c$a;	c	$VALUES
	m	()[Ljl$c$a;	values	values
	m	(Ljava/lang/String;)Ljl$c$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ljl$c$a;	a	$values
	m	()V	<clinit>	<clinit>
c	jm	net/minecraft/core/HolderGetter
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	(Lamd;)Ljl$c;	b	getOrThrow
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Lbae;)Ljp$c;	b	getOrThrow
	m	(Lbae;)Ljava/lang/IllegalStateException;	d	lambda$getOrThrow$1
	m	(Lamd;)Ljava/lang/IllegalStateException;	h	lambda$getOrThrow$0
c	jm$a	net/minecraft/core/HolderGetter$Provider
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lamd;)Ljm;	b	lookupOrThrow
	m	(Lamd;)Ljava/util/Optional;	c	get
	m	(Lamd;)Ljl$c;	d	getOrThrow
	m	(Lamd;)Ljava/lang/IllegalStateException;	g	lambda$getOrThrow$3
	m	(Lamd;Ljm;)Ljava/util/Optional;	a	lambda$getOrThrow$2
	m	(Lamd;Ljm;)Ljava/util/Optional;	b	lambda$get$1
	m	(Lamd;)Ljava/lang/IllegalStateException;	h	lambda$lookupOrThrow$0
c	jn	net/minecraft/core/HolderLookup
	m	()Ljava/util/stream/Stream;	c	listElements
	m	()Ljava/util/stream/Stream;	d_	listElementIds
	m	()Ljava/util/stream/Stream;	e	listTags
	m	()Ljava/util/stream/Stream;	f	listTagIds
c	jn$a	net/minecraft/core/HolderLookup$Provider
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	()Ljava/util/stream/Stream;	c	listRegistries
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lamd;)Ljn$b;	e	lookupOrThrow
	m	(Lcom/mojang/serialization/DynamicOps;)Lamc;	a	createSerializationContext
	m	(Ljava/util/stream/Stream;)Ljn$a;	a	create
	m	()Lcom/mojang/serialization/Lifecycle;	d	allRegistriesLifecycle
	m	(Lamd;)Ljm;	b	lookupOrThrow
	m	(Ljn$b;)Ljn$b;	a	lambda$create$1
	m	(Lamd;)Ljava/lang/IllegalStateException;	i	lambda$lookupOrThrow$0
c	jn$a$1	net/minecraft/core/HolderLookup$Provider$1
	f	Ljava/util/Map;	a	val$map
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	(Lamd;)Ljava/util/Optional;	a	lookup
c	jn$b	net/minecraft/core/HolderLookup$RegistryLookup
	m	()Lamd;	g	key
	m	()Lcom/mojang/serialization/Lifecycle;	h	registryLifecycle
	m	(Lcyd;)Ljn$b;	a	filterFeatures
	m	(Ljava/util/function/Predicate;)Ljn$b;	a	filterElements
	m	(Lcyd;Ljava/lang/Object;)Z	a	lambda$filterFeatures$0
c	jn$b$1	net/minecraft/core/HolderLookup$RegistryLookup$1
	f	Ljava/util/function/Predicate;	a	val$filter
	f	Ljn$b;	b	this$0
	m	(Ljn$b;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Ljn$b;	a	parent
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	()Ljava/util/stream/Stream;	c	listElements
	m	(Ljava/util/function/Predicate;Ljl$c;)Z	a	lambda$listElements$1
	m	(Ljava/util/function/Predicate;Ljl$c;)Z	b	lambda$get$0
c	jn$b$a	net/minecraft/core/HolderLookup$RegistryLookup$Delegate
	m	()Ljn$b;	a	parent
	m	()Lamd;	g	key
	m	()Lcom/mojang/serialization/Lifecycle;	h	registryLifecycle
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	()Ljava/util/stream/Stream;	c	listElements
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	()Ljava/util/stream/Stream;	e	listTags
c	jo	net/minecraft/core/HolderOwner
	m	(Ljo;)Z	a	canSerializeIn
c	jp	net/minecraft/core/HolderSet
	m	()Ljava/util/stream/Stream;	a	stream
	m	()I	b	size
	m	()Z	c	isBound
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	(Lbck;)Ljava/util/Optional;	a	getRandomElement
	m	(I)Ljl;	a	get
	m	(Ljl;)Z	a	contains
	m	(Ljo;)Z	a	canSerializeIn
	m	()Ljava/util/Optional;	e	unwrapKey
	m	(Ljo;Lbae;)Ljp$c;	a	emptyNamed
	m	()Ljp;	f	empty
	m	([Ljl;)Ljp$a;	a	direct
	m	(Ljava/util/List;)Ljp$a;	a	direct
	m	(Ljava/util/function/Function;[Ljava/lang/Object;)Ljp$a;	a	direct
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Ljp$a;	a	direct
c	jp$1	net/minecraft/core/HolderSet$1
	m	(Ljo;Lbae;)V	<init>	<init>
	m	()Ljava/util/List;	g	contents
c	jp$a	net/minecraft/core/HolderSet$Direct
	f	Ljp$a;	a	EMPTY
	f	Ljava/util/List;	b	contents
	f	Ljava/util/Set;	c	contentsSet
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	g	contents
	m	()Z	c	isBound
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	(Ljl;)Z	a	contains
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	jp$b	net/minecraft/core/HolderSet$ListBacked
	m	()V	<init>	<init>
	m	()Ljava/util/List;	g	contents
	m	()I	b	size
	m	()Ljava/util/Spliterator;	spliterator	spliterator
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/stream/Stream;	a	stream
	m	(Lbck;)Ljava/util/Optional;	a	getRandomElement
	m	(I)Ljl;	a	get
	m	(Ljo;)Z	a	canSerializeIn
c	jp$c	net/minecraft/core/HolderSet$Named
	f	Ljo;	a	owner
	f	Lbae;	b	key
	f	Ljava/util/List;	c	contents
	m	(Ljo;Lbae;)V	<init>	<init>
	m	(Ljava/util/List;)V	b	bind
	m	()Lbae;	h	key
	m	()Ljava/util/List;	g	contents
	m	()Z	c	isBound
	m	()Lcom/mojang/datafixers/util/Either;	d	unwrap
	m	()Ljava/util/Optional;	e	unwrapKey
	m	(Ljl;)Z	a	contains
	m	()Ljava/lang/String;	toString	toString
	m	(Ljo;)Z	a	canSerializeIn
c	jq	net/minecraft/core/IdMap
	f	I	a	DEFAULT
	m	(Ljava/lang/Object;)I	a	getId
	m	(I)Ljava/lang/Object;	a	byId
	m	(I)Ljava/lang/Object;	b	byIdOrThrow
	m	(Ljava/lang/Object;)I	c	getIdOrThrow
	m	()I	d	size
c	jr	net/minecraft/core/IdMapper
	f	I	b	nextId
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntMap;	c	tToId
	f	Ljava/util/List;	d	idToT
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Ljava/lang/Object;I)V	a	addMapping
	m	(Ljava/lang/Object;)V	b	add
	m	(Ljava/lang/Object;)I	a	getId
	m	(I)Ljava/lang/Object;	a	byId
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(I)Z	c	contains
	m	()I	d	size
c	js	net/minecraft/core/LayeredRegistryAccess
	f	Ljava/util/List;	a	keys
	f	Ljava/util/List;	b	values
	f	Ljz$b;	c	composite
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/Object;)I	d	getLayerIndexOrThrow
	m	(Ljava/lang/Object;)Ljz$b;	a	getLayer
	m	(Ljava/lang/Object;)Ljz$b;	b	getAccessForLoading
	m	(Ljava/lang/Object;)Ljz$b;	c	getAccessFrom
	m	(II)Ljz$b;	a	getCompositeAccessForLayers
	m	(Ljava/lang/Object;[Ljz$b;)Ljs;	a	replaceFrom
	m	(Ljava/lang/Object;Ljava/util/List;)Ljs;	a	replaceFrom
	m	()Ljz$b;	a	compositeAccess
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	collectRegistries
	m	(Ljava/util/Map;Ljz;)V	a	lambda$collectRegistries$2
	m	(Ljava/util/Map;Ljz$d;)V	a	lambda$collectRegistries$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
c	jt	net/minecraft/core/MappedRegistry
	f	Lamd;	b	key
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	c	byId
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntMap;	d	toId
	f	Ljava/util/Map;	e	byLocation
	f	Ljava/util/Map;	f	byKey
	f	Ljava/util/Map;	g	byValue
	f	Ljava/util/Map;	h	registrationInfos
	f	Lcom/mojang/serialization/Lifecycle;	i	registryLifecycle
	f	Ljava/util/Map;	j	frozenTags
	f	Ljt$a;	k	allTags
	f	Z	l	frozen
	f	Ljava/util/Map;	m	unregisteredIntrusiveHolders
	m	()Ljava/util/stream/Stream;	e	listTags
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;Z)V	<init>	<init>
	m	()Lamd;	g	key
	m	()Ljava/lang/String;	toString	toString
	m	()V	b	validateWrite
	m	(Lamd;)V	h	validateWrite
	m	(Lamd;Ljava/lang/Object;Ljx;)Ljl$c;	a	register
	m	(Ljava/lang/Object;)Lame;	b	getKey
	m	(Ljava/lang/Object;)Ljava/util/Optional;	d	getResourceKey
	m	(Ljava/lang/Object;)I	a	getId
	m	(Lamd;)Ljava/lang/Object;	c	getValue
	m	(I)Ljava/lang/Object;	a	byId
	m	(I)Ljava/util/Optional;	c	get
	m	(Lame;)Ljava/util/Optional;	c	get
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	()Ljava/util/Optional;	a	getAny
	m	(Ljava/lang/Object;)Ljl;	e	wrapAsHolder
	m	(Lamd;)Ljl$c;	i	getOrCreateHolderOrThrow
	m	()I	d	size
	m	(Lamd;)Ljava/util/Optional;	d	registrationInfo
	m	()Lcom/mojang/serialization/Lifecycle;	h	registryLifecycle
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Lame;)Ljava/lang/Object;	a	getValue
	m	(Ljl$c;)Ljava/lang/Object;	a	getValueFromNullable
	m	()Ljava/util/Set;	i	keySet
	m	()Ljava/util/Set;	j	registryKeySet
	m	()Ljava/util/Set;	k	entrySet
	m	()Ljava/util/stream/Stream;	c	listElements
	m	()Ljava/util/stream/Stream;	l	getTags
	m	(Lbae;)Ljp$c;	d	getOrCreateTagForRegistration
	m	(Lbae;)Ljp$c;	e	createTag
	m	()Z	m	isEmpty
	m	(Lbck;)Ljava/util/Optional;	a	getRandom
	m	(Lame;)Z	d	containsKey
	m	(Lamd;)Z	e	containsKey
	m	()Ljy;	n	freeze
	m	(Ljava/lang/Object;)Ljl$c;	f	createIntrusiveHolder
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Lbae;Ljl;)Ljl$c;	a	validateAndUnwrapTagElement
	m	(Lbae;Ljava/util/List;)V	a	bindTag
	m	()V	u	refreshTagsInHolders
	m	()V	o	bindAllTagsToEmpty
	m	()Ljm;	p	createRegistrationLookup
	m	(Lbaf$c;)Ljy$a;	a	prepareTagReload
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map;Lbae;Ljava/util/List;)V	a	lambda$prepareTagReload$12
	m	(Ljp$c;)V	a	lambda$bindAllTagsToEmpty$11
	m	(Ljava/util/Map;Lbae;Ljp$c;)V	a	lambda$refreshTagsInHolders$10
	m	(Ljava/util/Map;Ljl$c;)V	a	lambda$refreshTagsInHolders$9
	m	(Ljava/lang/Object;)Ljl$c;	g	lambda$createIntrusiveHolder$8
	m	(Ljava/util/Map$Entry;)Lame;	a	lambda$freeze$7
	m	(Ljava/util/Map$Entry;)Z	b	lambda$freeze$6
	m	(Ljava/util/Map$Entry;)Lame;	c	lambda$freeze$5
	m	(Ljava/util/Map$Entry;)Z	d	lambda$freeze$4
	m	(Ljava/lang/Object;Ljl$c;)V	a	lambda$freeze$3
	m	(Lamd;)Ljl$c;	j	lambda$getOrCreateHolderOrThrow$2
	m	(Lamd;)Ljl$c;	k	lambda$register$1
	m	(Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;)V	a	lambda$new$0
c	jt$1	net/minecraft/core/MappedRegistry$1
	f	Ljt;	a	this$0
	m	(Ljt;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	(Lamd;)Ljl$c;	b	getOrThrow
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Lbae;)Ljp$c;	b	getOrThrow
c	jt$2	net/minecraft/core/MappedRegistry$2
	f	Lcom/google/common/collect/ImmutableMap;	a	val$pendingTags
	f	Ljt;	b	this$0
	m	(Ljt;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
	m	()Ljn$b;	a	parent
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	()Ljava/util/stream/Stream;	e	listTags
c	jt$3	net/minecraft/core/MappedRegistry$3
	f	Ljava/util/Map;	a	val$pendingContents
	f	Ljn$b;	b	val$patchedHolder
	f	Lcom/google/common/collect/ImmutableMap;	c	val$pendingTags
	f	Ljt;	d	this$0
	m	(Ljt;Ljava/util/Map;Ljn$b;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
	m	()Lamd;	a	key
	m	()I	b	size
	m	()Ljn$b;	c	lookup
	m	()V	d	apply
	m	(Ljava/util/Map;Lbae;Ljp$c;)V	a	lambda$apply$0
c	jt$a	net/minecraft/core/MappedRegistry$TagSet
	m	()Ljt$a;	a	unbound
	m	(Ljava/util/Map;)Ljt$a;	a	fromMap
	m	()Z	b	isBound
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()Ljava/util/stream/Stream;	c	getTags
c	jt$a$1	net/minecraft/core/MappedRegistry$TagSet$1
	m	()V	<init>	<init>
	m	()Z	b	isBound
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()Ljava/util/stream/Stream;	c	getTags
c	jt$a$2	net/minecraft/core/MappedRegistry$TagSet$2
	f	Ljava/util/Map;	a	val$tags
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Z	b	isBound
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()Ljava/util/stream/Stream;	c	getTags
c	ju	net/minecraft/core/NonNullList
	f	Ljava/util/List;	a	list
	f	Ljava/lang/Object;	b	defaultValue
	m	()Lju;	a	create
	m	(I)Lju;	a	createWithCapacity
	m	(ILjava/lang/Object;)Lju;	a	withSize
	m	(Ljava/lang/Object;[Ljava/lang/Object;)Lju;	a	of
	m	(Ljava/util/List;Ljava/lang/Object;)V	<init>	<init>
	m	(I)Ljava/lang/Object;	get	get
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
	m	(ILjava/lang/Object;)V	add	add
	m	(I)Ljava/lang/Object;	remove	remove
	m	()I	size	size
	m	()V	clear	clear
c	jv	net/minecraft/core/Position
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
c	jw	net/minecraft/core/QuartPos
	f	I	a	BITS
	f	I	b	SIZE
	f	I	c	MASK
	f	I	d	SECTION_TO_QUARTS_BITS
	m	()V	<init>	<init>
	m	(I)I	a	fromBlock
	m	(I)I	b	quartLocal
	m	(I)I	c	toBlock
	m	(I)I	d	fromSection
	m	(I)I	e	toSection
c	jx	net/minecraft/core/RegistrationInfo
	f	Ljava/util/Optional;	b	knownPackInfo
	f	Lcom/mojang/serialization/Lifecycle;	c	lifecycle
	f	Ljx;	a	BUILT_IN
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	knownPackInfo
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	()V	<clinit>	<clinit>
c	jy	net/minecraft/core/Registry
	m	()Lamd;	g	key
	m	()Lcom/mojang/serialization/Codec;	q	byNameCodec
	m	()Lcom/mojang/serialization/Codec;	r	holderByNameCodec
	m	()Lcom/mojang/serialization/Codec;	b	referenceHolderWithLifecycle
	m	(Ljl;)Lcom/mojang/serialization/DataResult;	a	safeCastToReference
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
	m	(Ljava/lang/Object;)Lame;	b	getKey
	m	(Ljava/lang/Object;)Ljava/util/Optional;	d	getResourceKey
	m	(Ljava/lang/Object;)I	a	getId
	m	(Lamd;)Ljava/lang/Object;	c	getValue
	m	(Lame;)Ljava/lang/Object;	a	getValue
	m	(Lamd;)Ljava/util/Optional;	d	registrationInfo
	m	(Lame;)Ljava/util/Optional;	b	getOptional
	m	(Lamd;)Ljava/util/Optional;	f	getOptional
	m	()Ljava/util/Optional;	a	getAny
	m	(Lamd;)Ljava/lang/Object;	g	getValueOrThrow
	m	()Ljava/util/Set;	i	keySet
	m	()Ljava/util/Set;	k	entrySet
	m	()Ljava/util/Set;	j	registryKeySet
	m	(Lbck;)Ljava/util/Optional;	a	getRandom
	m	()Ljava/util/stream/Stream;	s	stream
	m	(Lame;)Z	d	containsKey
	m	(Lamd;)Z	e	containsKey
	m	(Ljy;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Ljy;Lame;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Ljy;Lamd;Ljava/lang/Object;)Ljava/lang/Object;	a	register
	m	(Ljy;Lamd;Ljava/lang/Object;)Ljl$c;	b	registerForHolder
	m	(Ljy;Lame;Ljava/lang/Object;)Ljl$c;	b	registerForHolder
	m	()Ljy;	n	freeze
	m	(Ljava/lang/Object;)Ljl$c;	f	createIntrusiveHolder
	m	(I)Ljava/util/Optional;	c	get
	m	(Lame;)Ljava/util/Optional;	c	get
	m	(Ljava/lang/Object;)Ljl;	e	wrapAsHolder
	m	(Lbae;)Ljava/lang/Iterable;	c	getTagOrEmpty
	m	(Lbae;Lbck;)Ljava/util/Optional;	a	getRandomElementOf
	m	()Ljava/util/stream/Stream;	l	getTags
	m	()Ljq;	t	asHolderIdMap
	m	(Lbaf$c;)Ljy$a;	a	prepareTagReload
	m	(Lbck;Ljp$c;)Ljava/util/Optional;	a	lambda$getRandomElementOf$9
	m	(Lcom/mojang/serialization/DynamicOps;Lame;)Ljava/lang/Object;	a	lambda$keys$8
	m	(Ljl;)Ljava/lang/String;	b	lambda$safeCastToReference$7
	m	(Ljl$c;)Lcom/mojang/serialization/Lifecycle;	a	lambda$referenceHolderWithLifecycle$6
	m	(Ljl$c;)Lame;	b	lambda$referenceHolderWithLifecycle$5
	m	(Lame;)Lcom/mojang/serialization/DataResult;	e	lambda$referenceHolderWithLifecycle$4
	m	(Lame;)Lcom/mojang/serialization/DataResult;	f	lambda$referenceHolderWithLifecycle$3
	m	(Lame;)Ljava/lang/String;	g	lambda$referenceHolderWithLifecycle$2
	m	(Ljl$c;)Ljl;	c	lambda$holderByNameCodec$1
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	g	lambda$byNameCodec$0
c	jy$1	net/minecraft/core/Registry$1
	f	Ljy;	b	this$0
	m	(Ljy;)V	<init>	<init>
	m	(Ljl;)I	a	getId
	m	(I)Ljl;	c	byId
	m	()I	d	size
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(I)Ljava/lang/Object;	a	byId
	m	(Ljava/lang/Object;)I	a	getId
	m	(Ljl$c;)Ljl;	a	lambda$iterator$0
c	jy$a	net/minecraft/core/Registry$PendingTags
	m	()Lamd;	a	key
	m	()Ljn$b;	c	lookup
	m	()V	d	apply
	m	()I	b	size
c	jz	net/minecraft/core/RegistryAccess
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljz$b;	b	EMPTY
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lamd;)Ljy;	f	lookupOrThrow
	m	()Ljava/util/stream/Stream;	a	registries
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	(Ljy;)Ljz$b;	a	fromRegistryOfRegistries
	m	()Ljz$b;	e	freeze
	m	(Lamd;)Ljn$b;	e	lookupOrThrow
	m	(Lamd;)Ljm;	b	lookupOrThrow
	m	(Ljz$d;)Lamd;	a	lambda$listRegistryKeys$1
	m	(Lamd;)Ljava/lang/IllegalStateException;	j	lambda$lookupOrThrow$0
	m	()V	<clinit>	<clinit>
c	jz$1	net/minecraft/core/RegistryAccess$1
	f	Ljy;	c	val$registries
	m	(Ljy;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	()Ljava/util/stream/Stream;	a	registries
	m	()Ljz$b;	e	freeze
c	jz$a	net/minecraft/core/RegistryAccess$1FrozenAccess
	m	(Ljz;Ljava/util/stream/Stream;)V	<init>	<init>
c	jz$b	net/minecraft/core/RegistryAccess$Frozen
c	jz$c	net/minecraft/core/RegistryAccess$ImmutableRegistryAccess
	f	Ljava/util/Map;	c	registries
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	()Ljava/util/stream/Stream;	a	registries
	m	(Ljy;)Ljy;	b	lambda$lookup$1
	m	(Ljy;)Ljy;	c	lambda$new$0
c	jz$d	net/minecraft/core/RegistryAccess$RegistryEntry
	f	Lamd;	a	key
	f	Ljy;	b	value
	m	(Lamd;Ljy;)V	<init>	<init>
	m	(Ljava/util/Map$Entry;)Ljz$d;	a	fromMapEntry
	m	(Lamd;Ljy;)Ljz$d;	a	fromUntyped
	m	()Ljz$d;	c	freeze
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Ljy;	b	value
c	ka	net/minecraft/core/RegistryCodecs
	m	()V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lamd;)Lcom/mojang/serialization/Codec;	a	homogeneousList
	m	(Lamd;Z)Lcom/mojang/serialization/Codec;	a	homogeneousList
c	kb	net/minecraft/core/RegistrySetBuilder
	f	Ljava/util/List;	a	entries
	m	()V	<init>	<init>
	m	(Ljn$b;)Ljm;	a	wrapContextLookup
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;Ljo;Ljava/util/Map;)Ljn$b;	a	lookupFromMap
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;Lkb$i;)Lkb;	a	add
	m	(Lamd;Lkb$i;)Lkb;	a	add
	m	(Ljz;)Lkb$b;	b	createState
	m	(Lkb$m;Ljz;Ljava/util/stream/Stream;)Ljn$a;	a	buildProviderWithContext
	m	(Ljz;)Ljn$a;	a	build
	m	(Ljz;Ljn$a;Ljd$a;Ljava/util/Map;Ljn$a;)Ljn$a;	a	createLazyFullPatchedRegistries
	m	(Ljo;Ljd$a;Lamd;Ljn$a;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljn$b;	a	createLazyFullPatchedRegistries
	m	(Ljz;Ljn$a;Ljd$a;)Lkb$g;	a	buildPatch
	m	(Lkb$b;Lkb$j;)Ljn$b;	a	lambda$buildPatch$14
	m	(Ljava/util/Map;Lamd;)V	a	lambda$buildPatch$13
	m	(Ljava/util/Set;Lamd;)Z	a	lambda$buildPatch$12
	m	(Ljava/util/Map;Lkb$j;)V	a	lambda$buildPatch$11
	m	(Lkb$b;Lkb$k;)Lkb$j;	a	lambda$buildPatch$10
	m	(Ljava/util/Map;Ljo;Ljd;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;Ljl$c;)V	a	lambda$createLazyFullPatchedRegistries$9
	m	(Ljo;Lamd;Ljd;Ljl$c;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;Lamd;)Ljl$c;	a	lambda$createLazyFullPatchedRegistries$8
	m	(Ljd;Ljl$c;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/Object;	a	lambda$createLazyFullPatchedRegistries$7
	m	(Ljo;Ljd;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/Map;Ljl$c;)V	a	lambda$createLazyFullPatchedRegistries$6
	m	(Ljd;Ljl$c;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/Object;	b	lambda$createLazyFullPatchedRegistries$5
	m	(Lkb$m;Ljd$a;Ljn$a;Ljn$a;Lorg/apache/commons/lang3/mutable/MutableObject;Lamd;)Ljn$b;	a	lambda$createLazyFullPatchedRegistries$4
	m	(Lkb$b;Lkb$k;)Ljn$b;	b	lambda$build$3
	m	(Ljava/util/Map;Lkb$m;Ljn$b;)V	a	lambda$buildProviderWithContext$2
	m	(Ljava/util/Map;Ljz$d;)V	a	lambda$buildProviderWithContext$1
	m	(Lkb$b;Lkb$k;)V	c	lambda$createState$0
c	kb$1	net/minecraft/core/RegistrySetBuilder$1
	f	Ljn$b;	a	val$original
	m	(Ljo;Ljn$b;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	get
c	kb$a	net/minecraft/core/RegistrySetBuilder$1Entry
	f	Ljn$b;	a	lookup
	f	Lamc$b;	b	opsInfo
	m	(Ljn$b;Lamc$b;)V	<init>	<init>
	m	(Ljn$b;)Lkb$a;	a	createForContextRegistry
	m	(Lkb$m;Ljn$b;)Lkb$a;	a	createForNewRegistry
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$b;	a	lookup
	m	()Lamc$b;	b	opsInfo
c	kb$2	net/minecraft/core/RegistrySetBuilder$2
	f	Lamd;	a	val$key
	f	Lcom/mojang/serialization/Lifecycle;	b	val$lifecycle
	f	Ljava/util/Map;	c	val$entries
	m	(Ljo;Lamd;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)V	<init>	<init>
	m	()Lamd;	g	key
	m	()Lcom/mojang/serialization/Lifecycle;	h	registryLifecycle
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	()Ljava/util/stream/Stream;	c	listElements
c	kb$3	net/minecraft/core/RegistrySetBuilder$3
	f	Ljava/util/Map;	a	val$lookups
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	listRegistryKeys
	m	(Lamd;)Ljava/util/Optional;	f	getEntry
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lcom/mojang/serialization/DynamicOps;)Lamc;	a	createSerializationContext
c	kb$3$1	net/minecraft/core/RegistrySetBuilder$3$1
	f	Lkb$3;	a	this$0
	m	(Lkb$3;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
c	kb$b	net/minecraft/core/RegistrySetBuilder$BuildState
	f	Lkb$m;	a	owner
	f	Lkb$l;	b	lookup
	f	Ljava/util/Map;	c	registries
	f	Ljava/util/Map;	d	registeredValues
	f	Ljava/util/List;	e	errors
	m	(Lkb$m;Lkb$l;Ljava/util/Map;Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
	m	(Ljz;Ljava/util/stream/Stream;)Lkb$b;	a	create
	m	()Lqq;	a	bootstrapContext
	m	()V	b	reportUnclaimedRegisteredValues
	m	()V	c	reportNotCollectedHolders
	m	()V	d	throwOnError
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkb$m;	e	owner
	m	()Lkb$l;	f	lookup
	m	()Ljava/util/Map;	g	registries
	m	()Ljava/util/Map;	h	registeredValues
	m	()Ljava/util/List;	i	errors
	m	(Lamd;Lkb$h;)V	a	lambda$reportUnclaimedRegisteredValues$2
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lkb$l;Lamd;)V	a	lambda$create$1
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljz$d;)V	a	lambda$create$0
c	kb$b$1	net/minecraft/core/RegistrySetBuilder$BuildState$1
	f	Lkb$b;	a	this$0
	m	(Lkb$b;)V	<init>	<init>
	m	(Lamd;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljl$c;	a	register
	m	(Lamd;)Ljm;	a	lookup
c	kb$c	net/minecraft/core/RegistrySetBuilder$EmptyTagLookup
	f	Ljo;	d	owner
	m	(Ljo;)V	<init>	<init>
	m	(Lbae;)Ljava/util/Optional;	a	get
c	kb$d	net/minecraft/core/RegistrySetBuilder$EmptyTagLookupWrapper
	f	Ljn$b;	a	parent
	m	(Ljo;Ljn$b;)V	<init>	<init>
	m	()Ljn$b;	a	parent
c	kb$e	net/minecraft/core/RegistrySetBuilder$EmptyTagRegistryLookup
	m	(Ljo;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	e	listTags
c	kb$f	net/minecraft/core/RegistrySetBuilder$LazyHolder
	f	Ljava/util/function/Supplier;	a	supplier
	m	(Ljo;Lamd;)V	<init>	<init>
	m	(Ljava/lang/Object;)V	b	bindValue
	m	()Ljava/lang/Object;	a	value
c	kb$g	net/minecraft/core/RegistrySetBuilder$PatchedRegistries
	f	Ljn$a;	a	full
	f	Ljn$a;	b	patches
	m	(Ljn$a;Ljn$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	full
	m	()Ljn$a;	b	patches
c	kb$h	net/minecraft/core/RegistrySetBuilder$RegisteredValue
	f	Ljava/lang/Object;	a	value
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	(Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	value
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
c	kb$i	net/minecraft/core/RegistrySetBuilder$RegistryBootstrap
	m	(Lqq;)V	run	run
c	kb$j	net/minecraft/core/RegistrySetBuilder$RegistryContents
	f	Lamd;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Ljava/util/Map;	c	values
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)V	<init>	<init>
	m	(Lkb$m;)Ljn$b;	a	buildAsLookup
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	()Ljava/util/Map;	c	values
	m	(Lkb$m;Ljava/util/Map$Entry;)Ljl$c;	a	lambda$buildAsLookup$1
	m	(Lkb$m;Ljava/util/Map$Entry;)Ljl$c;	b	lambda$buildAsLookup$0
c	kb$k	net/minecraft/core/RegistrySetBuilder$RegistryStub
	f	Lamd;	a	key
	f	Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	f	Lkb$i;	c	bootstrap
	m	(Lamd;Lcom/mojang/serialization/Lifecycle;Lkb$i;)V	<init>	<init>
	m	(Lkb$b;)V	b	apply
	m	(Lkb$b;)Lkb$j;	a	collectRegisteredValues
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Lcom/mojang/serialization/Lifecycle;	b	lifecycle
	m	()Lkb$i;	c	bootstrap
c	kb$l	net/minecraft/core/RegistrySetBuilder$UniversalLookup
	f	Ljava/util/Map;	a	holders
	m	(Ljo;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	(Lamd;)Ljl$c;	c	getOrCreate
	m	(Lamd;)Ljl$c;	d	lambda$getOrCreate$0
c	kb$m	net/minecraft/core/RegistrySetBuilder$UniversalOwner
	m	()V	<init>	<init>
	m	()Ljo;	a	cast
c	kb$n	net/minecraft/core/RegistrySetBuilder$ValueAndHolder
	f	Lkb$h;	a	value
	f	Ljava/util/Optional;	b	holder
	m	(Lkb$h;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkb$h;	a	value
	m	()Ljava/util/Optional;	b	holder
c	kc	net/minecraft/core/RegistrySynchronization
	f	Ljava/util/Set;	a	NETWORKABLE_REGISTRIES
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljz;Ljava/util/Set;Ljava/util/function/BiConsumer;)V	a	packRegistries
	m	(Lcom/mojang/serialization/DynamicOps;Lalz$d;Ljz;Ljava/util/Set;Ljava/util/function/BiConsumer;)V	a	packRegistry
	m	(Ljz;)Ljava/util/stream/Stream;	a	ownedNetworkableRegistries
	m	(Ljs;)Ljava/util/stream/Stream;	a	networkedRegistries
	m	(Ljs;)Ljava/util/stream/Stream;	b	networkSafeRegistries
	m	(Lamd;)Z	a	isNetworkable
	m	(Ljz$d;)Z	a	lambda$ownedNetworkableRegistries$4
	m	(Ljava/util/Set;Lalz$d;Lcom/mojang/serialization/DynamicOps;Ljava/util/function/BiConsumer;Ljy;)V	a	lambda$packRegistry$3
	m	(Ljy;Ljava/util/Set;Lalz$d;Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Ljl$c;)V	a	lambda$packRegistry$2
	m	(Ljl$c;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$packRegistry$1
	m	(Lcom/mojang/serialization/DynamicOps;Ljz;Ljava/util/Set;Ljava/util/function/BiConsumer;Lalz$d;)V	a	lambda$packRegistries$0
	m	()V	<clinit>	<clinit>
c	kc$a	net/minecraft/core/RegistrySynchronization$PackedRegistryEntry
	f	Lame;	b	id
	f	Ljava/util/Optional;	c	data
	f	Lzm;	a	STREAM_CODEC
	m	(Lame;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Ljava/util/Optional;	b	data
	m	()V	<clinit>	<clinit>
c	kd	net/minecraft/core/Rotations
	f	F	c	x
	f	F	d	y
	f	F	e	z
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(FFF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	x
	m	()F	b	y
	m	()F	c	z
	m	(Lkd;)Ljava/util/List;	a	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/util/List;)Lkd;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kd$1	net/minecraft/core/Rotations$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lkd;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lkd;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	ke	net/minecraft/core/SectionPos
	f	I	a	SECTION_BITS
	f	I	b	SECTION_SIZE
	f	I	c	SECTION_MASK
	f	I	d	SECTION_HALF_SIZE
	f	I	e	SECTION_MAX_INDEX
	f	I	f	PACKED_X_LENGTH
	f	I	j	PACKED_Y_LENGTH
	f	I	k	PACKED_Z_LENGTH
	f	J	l	PACKED_X_MASK
	f	J	m	PACKED_Y_MASK
	f	J	n	PACKED_Z_MASK
	f	I	o	Y_OFFSET
	f	I	p	Z_OFFSET
	f	I	q	X_OFFSET
	f	I	r	RELATIVE_X_SHIFT
	f	I	s	RELATIVE_Y_SHIFT
	f	I	t	RELATIVE_Z_SHIFT
	m	(III)V	<init>	<init>
	m	(III)Lke;	a	of
	m	(Ljb;)Lke;	a	of
	m	(Ldlz;I)Lke;	a	of
	m	(Leig;)Lke;	a	of
	m	(Ljv;)Lke;	a	of
	m	(J)Lke;	a	of
	m	(Lefy;)Lke;	a	bottomOf
	m	(JLjh;)J	a	offset
	m	(JIII)J	a	offset
	m	(D)I	a	posToSectionCoord
	m	(I)I	a	blockToSectionCoord
	m	(D)I	b	blockToSectionCoord
	m	(I)I	b	sectionRelative
	m	(Ljb;)S	b	sectionRelativePos
	m	(S)I	a	sectionRelativeX
	m	(S)I	b	sectionRelativeY
	m	(S)I	c	sectionRelativeZ
	m	(S)I	d	relativeToBlockX
	m	(S)I	e	relativeToBlockY
	m	(S)I	f	relativeToBlockZ
	m	(S)Ljb;	g	relativeToBlockPos
	m	(I)I	c	sectionToBlockCoord
	m	(II)I	a	sectionToBlockCoord
	m	(J)I	b	x
	m	(J)I	c	y
	m	(J)I	d	z
	m	()I	a	x
	m	()I	b	y
	m	()I	c	z
	m	()I	d	minBlockX
	m	()I	e	minBlockY
	m	()I	f	minBlockZ
	m	()I	g	maxBlockX
	m	()I	h	maxBlockY
	m	()I	i	maxBlockZ
	m	(J)J	e	blockToSection
	m	(II)J	b	getZeroNode
	m	(J)J	f	getZeroNode
	m	(J)J	g	sectionToChunk
	m	()Ljb;	j	origin
	m	()Ljb;	k	center
	m	()Ldlz;	r	chunk
	m	(Ljb;)J	c	asLong
	m	(III)J	b	asLong
	m	()J	s	asLong
	m	(III)Lke;	d	offset
	m	()Ljava/util/stream/Stream;	t	blocksInside
	m	(Lke;I)Ljava/util/stream/Stream;	a	cube
	m	(Ldlz;III)Ljava/util/stream/Stream;	a	aroundChunk
	m	(IIIIII)Ljava/util/stream/Stream;	a	betweenClosedStream
	m	(Ljb;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(JLit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	aroundAndAtBlockPos
	m	(III)Lkg;	c	offset
c	ke$1	net/minecraft/core/SectionPos$1
	f	Lje;	a	cursor
	f	I	b	val$minX
	f	I	c	val$minY
	f	I	d	val$minZ
	f	I	e	val$maxX
	f	I	f	val$maxY
	f	I	g	val$maxZ
	m	(JIIIIIII)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
c	kf	net/minecraft/core/UUIDUtil
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC_SET
	f	Lcom/mojang/serialization/Codec;	c	CODEC_LINKED_SET
	f	Lcom/mojang/serialization/Codec;	d	STRING_CODEC
	f	Lcom/mojang/serialization/Codec;	e	AUTHLIB_CODEC
	f	Lcom/mojang/serialization/Codec;	f	LENIENT_CODEC
	f	Lzm;	g	STREAM_CODEC
	f	I	h	UUID_BYTES
	f	Ljava/lang/String;	i	UUID_PREFIX_OFFLINE_PLAYER
	m	()V	<init>	<init>
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
	m	(Ljava/util/UUID;)[I	a	uuidToIntArray
	m	(JJ)[I	a	leastMostToIntArray
	m	(Ljava/util/UUID;)[B	b	uuidToByteArray
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID;	a	readUUID
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	createOfflinePlayerUUID
	m	(Ljava/lang/String;)Lcom/mojang/authlib/GameProfile;	b	createOfflineProfile
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$5
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	a	lambda$static$4
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$3
	m	(Ljava/lang/String;Ljava/lang/IllegalArgumentException;)Ljava/lang/String;	b	lambda$static$2
	m	(Ljava/util/UUID;)Ljava/util/stream/IntStream;	c	lambda$static$1
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kf$1	net/minecraft/core/UUIDUtil$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/UUID;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/UUID;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	kg	net/minecraft/core/Vec3i
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Lzm;	h	STREAM_CODEC
	f	Lkg;	i	ZERO
	f	I	a	x
	f	I	b	y
	f	I	c	z
	m	(I)Lcom/mojang/serialization/Codec;	v	offsetCodec
	m	(III)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lkg;)I	i	compareTo
	m	()I	u	getX
	m	()I	v	getY
	m	()I	w	getZ
	m	(I)Lkg;	u	setX
	m	(I)Lkg;	t	setY
	m	(I)Lkg;	s	setZ
	m	(III)Lkg;	c	offset
	m	(Lkg;)Lkg;	f	offset
	m	(Lkg;)Lkg;	e	subtract
	m	(I)Lkg;	o	multiply
	m	()Lkg;	q	above
	m	(I)Lkg;	n	above
	m	()Lkg;	p	below
	m	(I)Lkg;	m	below
	m	()Lkg;	o	north
	m	(I)Lkg;	l	north
	m	()Lkg;	n	south
	m	(I)Lkg;	k	south
	m	()Lkg;	m	west
	m	(I)Lkg;	j	west
	m	()Lkg;	l	east
	m	(I)Lkg;	i	east
	m	(Ljh;)Lkg;	b	relative
	m	(Ljh;I)Lkg;	b	relative
	m	(Ljh$a;I)Lkg;	b	relative
	m	(Lkg;)Lkg;	d	cross
	m	(Lkg;D)Z	a	closerThan
	m	(Ljv;D)Z	a	closerToCenterThan
	m	(Lkg;)D	j	distSqr
	m	(Ljv;)D	b	distToCenterSqr
	m	(DDD)D	c	distToCenterSqr
	m	(DDD)D	d	distToLowCornerSqr
	m	(Lkg;)I	k	distManhattan
	m	(Lkg;)I	l	distChessboard
	m	(Ljh$a;)I	a	get
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	x	toShortString
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(ILkg;)Lcom/mojang/serialization/DataResult;	a	lambda$offsetCodec$4
	m	(ILkg;)Ljava/lang/String;	b	lambda$offsetCodec$3
	m	(Lkg;)Ljava/util/stream/IntStream;	a	lambda$static$2
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Lkg;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kh	net/minecraft/core/WritableRegistry
	m	(Lamd;Ljava/lang/Object;Ljx;)Ljl$c;	a	register
	m	(Lbae;Ljava/util/List;)V	a	bindTag
	m	()Z	m	isEmpty
	m	()Ljm;	p	createRegistrationLookup
c	ki	net/minecraft/core/cauldron/CauldronInteraction
	f	Ljava/util/Map;	a	INTERACTIONS
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lki$a;	c	EMPTY
	f	Lki$a;	d	WATER
	f	Lki$a;	e	LAVA
	f	Lki$a;	f	POWDER_SNOW
	m	(Ljava/lang/String;)Lki$a;	a	newInteractionMap
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	interact	interact
	m	()V	a	bootStrap
	m	(Ljava/util/Map;)V	a	addDefaultInteractions
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;Ldcv;Ljava/util/function/Predicate;Layy;)Lbxj;	a	fillBucket
	m	(Ldmu;Ljb;Lcut;Lbxi;Ldcv;Leeb;Layy;)Lbxj;	a	emptyBucket
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	a	fillWaterInteraction
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	b	fillLavaInteraction
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	c	fillPowderSnowInteraction
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	d	shulkerBoxInteraction
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	e	bannerInteraction
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	f	dyedItemIteration
	m	(Ldmu;Ljb;)Z	a	isUnderWater
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	g	lambda$bootStrap$9
	m	(Leeb;)Z	a	lambda$bootStrap$8
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	h	lambda$bootStrap$7
	m	(Leeb;)Z	b	lambda$bootStrap$6
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	i	lambda$bootStrap$5
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	j	lambda$bootStrap$4
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	k	lambda$bootStrap$3
	m	(Leeb;)Z	c	lambda$bootStrap$2
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	l	lambda$bootStrap$1
	m	(Leeb;Ldmu;Ljb;Lcut;Lbxi;Ldcv;)Lbxj;	m	lambda$newInteractionMap$0
	m	()V	<clinit>	<clinit>
c	ki$a	net/minecraft/core/cauldron/CauldronInteraction$InteractionMap
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	map
	m	(Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Ljava/util/Map;	b	map
c	kj	net/minecraft/core/cauldron/package-info
c	kk	net/minecraft/core/component/DataComponentExactPredicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lkk;	c	EMPTY
	f	Ljava/util/List;	d	expectedComponents
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lkk$a;	a	builder
	m	(Lkp;Ljava/lang/Object;)Lkk;	a	expect
	m	(Lkn;)Lkk;	a	allOf
	m	(Lkn;[Lkp;)Lkk;	a	someOf
	m	()Z	b	isEmpty
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lkl;)Z	a	test
	m	()Z	c	alwaysMatches
	m	()Lko;	d	asPatch
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lkk;)Ljava/util/List;	a	lambda$static$3
	m	(Lkk;)Ljava/util/Map;	b	lambda$static$2
	m	(Lks;)Z	a	lambda$static$1
	m	(Ljava/util/Map;)Lkk;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kk$a	net/minecraft/core/component/DataComponentExactPredicate$Builder
	f	Ljava/util/List;	a	expectedComponents
	m	()V	<init>	<init>
	m	(Lks;)Lkk$a;	a	expect
	m	(Lkp;Ljava/lang/Object;)Lkk$a;	a	expect
	m	()Lkk;	a	build
c	kl	net/minecraft/core/component/DataComponentGetter
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
	m	(Lkp;)Lks;	b	getTyped
c	km	net/minecraft/core/component/DataComponentHolder
	m	()Lkn;	a	getComponents
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/Class;)Ljava/util/stream/Stream;	a	getAllOfType
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
	m	(Lkp;)Z	c	has
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$getAllOfType$1
	m	(Ljava/lang/Class;Ljava/lang/Object;)Z	a	lambda$getAllOfType$0
c	kn	net/minecraft/core/component/DataComponentMap
	f	Lkn;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	makeCodec
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	makeCodecFromMap
	m	(Lkn;Lkn;)Lkn;	a	composite
	m	()Lkn$a;	a	builder
	m	()Ljava/util/Set;	b	keySet
	m	(Lkp;)Z	c	has
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/stream/Stream;	c	stream
	m	()I	d	size
	m	()Z	e	isEmpty
	m	(Ljava/util/function/Predicate;)Lkn;	a	filter
	m	(Lkp;)Lks;	d	lambda$iterator$1
	m	(Lkn;)Lcom/mojang/serialization/DataResult;	a	lambda$makeCodecFromMap$0
	m	()V	<clinit>	<clinit>
c	kn$1	net/minecraft/core/component/DataComponentMap$1
	m	()V	<init>	<init>
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	()Ljava/util/Set;	b	keySet
	m	()Ljava/util/Iterator;	iterator	iterator
c	kn$2	net/minecraft/core/component/DataComponentMap$2
	f	Lkn;	c	val$overrides
	f	Lkn;	d	val$prototype
	m	(Lkn;Lkn;)V	<init>	<init>
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	()Ljava/util/Set;	b	keySet
c	kn$3	net/minecraft/core/component/DataComponentMap$3
	f	Ljava/util/function/Predicate;	c	val$predicate
	f	Lkn;	d	this$0
	m	(Lkn;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	()Ljava/util/Set;	b	keySet
c	kn$a	net/minecraft/core/component/DataComponentMap$Builder
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	a	map
	m	()V	<init>	<init>
	m	(Lkp;Ljava/lang/Object;)Lkn$a;	a	set
	m	(Lkp;Ljava/lang/Object;)V	b	setUnchecked
	m	(Lkn;)Lkn$a;	a	addAll
	m	()Lkn;	a	build
	m	(Ljava/util/Map;)Lkn;	a	buildFromMapTrusted
c	kn$a$a	net/minecraft/core/component/DataComponentMap$Builder$SimpleMap
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	c	map
	m	(Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)V	<init>	<init>
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkp;)Z	c	has
	m	()Ljava/util/Set;	b	keySet
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()I	d	size
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	f	map
c	ko	net/minecraft/core/component/DataComponentPatch
	f	Lko;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lzm;	d	DELIMITED_STREAM_CODEC
	f	Ljava/lang/String;	f	REMOVED_PREFIX
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	e	map
	m	(Lko$b;)Lzm;	a	createStreamCodec
	m	(Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)V	<init>	<init>
	m	()Lko$a;	a	builder
	m	(Lkp;)Ljava/util/Optional;	a	get
	m	()Ljava/util/Set;	b	entrySet
	m	()I	c	size
	m	(Ljava/util/function/Predicate;)Lko;	a	forget
	m	()Z	d	isEmpty
	m	()Lko$d;	e	split
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)Ljava/lang/String;	a	toString
	m	(Lkn$a;Ljava/util/Set;Lkp;Ljava/util/Optional;)V	a	lambda$split$2
	m	(Lko;)Ljava/util/Map;	a	lambda$static$1
	m	(Ljava/util/Map;)Lko;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ko$1	net/minecraft/core/component/DataComponentPatch$1
	m	()V	<init>	<init>
	m	(Lkp;)Lzm;	apply	apply
c	ko$2	net/minecraft/core/component/DataComponentPatch$2
	m	()V	<init>	<init>
	m	(Lkp;)Lzm;	apply	apply
c	ko$3	net/minecraft/core/component/DataComponentPatch$3
	f	Lko$b;	a	val$codecGetter
	m	(Lko$b;)V	<init>	<init>
	m	(Lwx;)Lko;	a	decode
	m	(Lwx;Lko;)V	a	encode
	m	(Lwx;Lkp;Ljava/lang/Object;)V	a	encodeComponent
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	ko$a	net/minecraft/core/component/DataComponentPatch$Builder
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	a	map
	m	()V	<init>	<init>
	m	(Lkp;Ljava/lang/Object;)Lko$a;	a	set
	m	(Lkp;)Lko$a;	a	remove
	m	(Lks;)Lko$a;	a	set
	m	()Lko;	a	build
c	ko$b	net/minecraft/core/component/DataComponentPatch$CodecGetter
	m	(Lkp;)Lzm;	apply	apply
c	ko$c	net/minecraft/core/component/DataComponentPatch$PatchKey
	f	Lkp;	b	type
	f	Z	c	removed
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lkp;Z)V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	valueCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkp;	b	type
	m	()Z	c	removed
	m	(Lko$c;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lkp;)Ljava/lang/String;	a	lambda$static$3
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lame;)Ljava/lang/String;	a	lambda$static$1
	m	(Lame;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ko$d	net/minecraft/core/component/DataComponentPatch$SplitResult
	f	Lkn;	b	added
	f	Ljava/util/Set;	c	removed
	f	Lko$d;	a	EMPTY
	m	(Lkn;Ljava/util/Set;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkn;	a	added
	m	()Ljava/util/Set;	b	removed
	m	()V	<clinit>	<clinit>
c	kp	net/minecraft/core/component/DataComponentType
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	PERSISTENT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	VALUE_MAP_CODEC
	m	()Lkp$a;	a	builder
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	()Lcom/mojang/serialization/Codec;	c	codecOrThrow
	m	()Z	d	isTransient
	m	()Lzm;	e	streamCodec
	m	(Lkp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lkp;)Ljava/lang/String;	b	lambda$static$2
	m	(Lzm;)Lzm;	a	lambda$static$1
	m	()Lcom/mojang/serialization/Codec;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kp$a	net/minecraft/core/component/DataComponentType$Builder
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Lzm;	b	streamCodec
	f	Z	c	cacheEncoding
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lkp$a;	a	persistent
	m	(Lzm;)Lkp$a;	a	networkSynchronized
	m	()Lkp$a;	a	cacheEncoding
	m	()Lkp;	b	build
	m	()Lzm;	c	lambda$build$0
c	kp$a$a	net/minecraft/core/component/DataComponentType$Builder$SimpleType
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Lzm;	f	streamCodec
	m	(Lcom/mojang/serialization/Codec;Lzm;)V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	()Lzm;	e	streamCodec
	m	()Ljava/lang/String;	toString	toString
c	kq	net/minecraft/core/component/DataComponents
	f	Lbbg;	a	ENCODER_CACHE
	f	Lkp;	b	CUSTOM_DATA
	f	Lkp;	c	MAX_STACK_SIZE
	f	Lkp;	d	MAX_DAMAGE
	f	Lkp;	e	DAMAGE
	f	Lkp;	f	UNBREAKABLE
	f	Lkp;	g	CUSTOM_NAME
	f	Lkp;	h	ITEM_NAME
	f	Lkp;	i	ITEM_MODEL
	f	Lkp;	j	LORE
	f	Lkp;	k	RARITY
	f	Lkp;	l	ENCHANTMENTS
	f	Lkp;	m	CAN_PLACE_ON
	f	Lkp;	n	CAN_BREAK
	f	Lkp;	o	ATTRIBUTE_MODIFIERS
	f	Lkp;	p	CUSTOM_MODEL_DATA
	f	Lkp;	q	TOOLTIP_DISPLAY
	f	Lkp;	r	REPAIR_COST
	f	Lkp;	s	CREATIVE_SLOT_LOCK
	f	Lkp;	t	ENCHANTMENT_GLINT_OVERRIDE
	f	Lkp;	u	INTANGIBLE_PROJECTILE
	f	Lkp;	v	FOOD
	f	Lkp;	w	CONSUMABLE
	f	Lkp;	x	USE_REMAINDER
	f	Lkp;	y	USE_COOLDOWN
	f	Lkp;	z	DAMAGE_RESISTANT
	f	Lkp;	A	TOOL
	f	Lkp;	B	WEAPON
	f	Lkp;	C	ENCHANTABLE
	f	Lkp;	D	EQUIPPABLE
	f	Lkp;	E	REPAIRABLE
	f	Lkp;	F	GLIDER
	f	Lkp;	G	TOOLTIP_STYLE
	f	Lkp;	H	DEATH_PROTECTION
	f	Lkp;	I	BLOCKS_ATTACKS
	f	Lkp;	J	STORED_ENCHANTMENTS
	f	Lkp;	K	DYED_COLOR
	f	Lkp;	L	MAP_COLOR
	f	Lkp;	M	MAP_ID
	f	Lkp;	N	MAP_DECORATIONS
	f	Lkp;	O	MAP_POST_PROCESSING
	f	Lkp;	P	CHARGED_PROJECTILES
	f	Lkp;	Q	BUNDLE_CONTENTS
	f	Lkp;	R	POTION_CONTENTS
	f	Lkp;	S	POTION_DURATION_SCALE
	f	Lkp;	T	SUSPICIOUS_STEW_EFFECTS
	f	Lkp;	U	WRITABLE_BOOK_CONTENT
	f	Lkp;	V	WRITTEN_BOOK_CONTENT
	f	Lkp;	W	TRIM
	f	Lkp;	X	DEBUG_STICK_STATE
	f	Lkp;	Y	ENTITY_DATA
	f	Lkp;	Z	BUCKET_ENTITY_DATA
	f	Lkp;	aa	BLOCK_ENTITY_DATA
	f	Lkp;	ab	INSTRUMENT
	f	Lkp;	ac	PROVIDES_TRIM_MATERIAL
	f	Lkp;	ad	OMINOUS_BOTTLE_AMPLIFIER
	f	Lkp;	ae	JUKEBOX_PLAYABLE
	f	Lkp;	af	PROVIDES_BANNER_PATTERNS
	f	Lkp;	ag	RECIPES
	f	Lkp;	ah	LODESTONE_TRACKER
	f	Lkp;	ai	FIREWORK_EXPLOSION
	f	Lkp;	aj	FIREWORKS
	f	Lkp;	ak	PROFILE
	f	Lkp;	al	NOTE_BLOCK_SOUND
	f	Lkp;	am	BANNER_PATTERNS
	f	Lkp;	an	BASE_COLOR
	f	Lkp;	ao	POT_DECORATIONS
	f	Lkp;	ap	CONTAINER
	f	Lkp;	aq	BLOCK_STATE
	f	Lkp;	ar	BEES
	f	Lkp;	as	LOCK
	f	Lkp;	at	CONTAINER_LOOT
	f	Lkp;	au	BREAK_SOUND
	f	Lkp;	av	VILLAGER_VARIANT
	f	Lkp;	aw	WOLF_VARIANT
	f	Lkp;	ax	WOLF_SOUND_VARIANT
	f	Lkp;	ay	WOLF_COLLAR
	f	Lkp;	az	FOX_VARIANT
	f	Lkp;	aA	SALMON_SIZE
	f	Lkp;	aB	PARROT_VARIANT
	f	Lkp;	aC	TROPICAL_FISH_PATTERN
	f	Lkp;	aD	TROPICAL_FISH_BASE_COLOR
	f	Lkp;	aE	TROPICAL_FISH_PATTERN_COLOR
	f	Lkp;	aF	MOOSHROOM_VARIANT
	f	Lkp;	aG	RABBIT_VARIANT
	f	Lkp;	aH	PIG_VARIANT
	f	Lkp;	aI	COW_VARIANT
	f	Lkp;	aJ	CHICKEN_VARIANT
	f	Lkp;	aK	FROG_VARIANT
	f	Lkp;	aL	HORSE_VARIANT
	f	Lkp;	aM	PAINTING_VARIANT
	f	Lkp;	aN	LLAMA_VARIANT
	f	Lkp;	aO	AXOLOTL_VARIANT
	f	Lkp;	aP	CAT_VARIANT
	f	Lkp;	aQ	CAT_COLLAR
	f	Lkp;	aR	SHEEP_COLOR
	f	Lkp;	aS	SHULKER_COLOR
	f	Lkn;	aT	COMMON_ITEM_COMPONENTS
	m	()V	<init>	<init>
	m	(Ljy;)Lkp;	a	bootstrap
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lkp;	a	register
	m	(Lkp$a;)Lkp$a;	a	lambda$static$95
	m	(Lkp$a;)Lkp$a;	b	lambda$static$94
	m	(Lkp$a;)Lkp$a;	c	lambda$static$93
	m	(Lkp$a;)Lkp$a;	d	lambda$static$92
	m	(Lkp$a;)Lkp$a;	e	lambda$static$91
	m	(Lkp$a;)Lkp$a;	f	lambda$static$90
	m	(Lkp$a;)Lkp$a;	g	lambda$static$89
	m	(Lkp$a;)Lkp$a;	h	lambda$static$88
	m	(Lkp$a;)Lkp$a;	i	lambda$static$87
	m	(Lkp$a;)Lkp$a;	j	lambda$static$86
	m	(Lkp$a;)Lkp$a;	k	lambda$static$85
	m	(Lkp$a;)Lkp$a;	l	lambda$static$84
	m	(Lkp$a;)Lkp$a;	m	lambda$static$83
	m	(Lkp$a;)Lkp$a;	n	lambda$static$82
	m	(Lkp$a;)Lkp$a;	o	lambda$static$81
	m	(Lkp$a;)Lkp$a;	p	lambda$static$80
	m	(Lkp$a;)Lkp$a;	q	lambda$static$79
	m	(Lkp$a;)Lkp$a;	r	lambda$static$78
	m	(Lkp$a;)Lkp$a;	s	lambda$static$77
	m	(Lkp$a;)Lkp$a;	t	lambda$static$76
	m	(Lkp$a;)Lkp$a;	u	lambda$static$75
	m	(Lkp$a;)Lkp$a;	v	lambda$static$74
	m	(Lkp$a;)Lkp$a;	w	lambda$static$73
	m	(Lkp$a;)Lkp$a;	x	lambda$static$72
	m	(Lkp$a;)Lkp$a;	y	lambda$static$71
	m	(Lkp$a;)Lkp$a;	z	lambda$static$70
	m	(Lkp$a;)Lkp$a;	A	lambda$static$69
	m	(Lkp$a;)Lkp$a;	B	lambda$static$68
	m	(Lkp$a;)Lkp$a;	C	lambda$static$67
	m	(Lkp$a;)Lkp$a;	D	lambda$static$66
	m	(Lkp$a;)Lkp$a;	E	lambda$static$65
	m	(Lkp$a;)Lkp$a;	F	lambda$static$64
	m	(Lkp$a;)Lkp$a;	G	lambda$static$63
	m	(Lkp$a;)Lkp$a;	H	lambda$static$62
	m	(Lkp$a;)Lkp$a;	I	lambda$static$61
	m	(Lkp$a;)Lkp$a;	J	lambda$static$60
	m	(Lkp$a;)Lkp$a;	K	lambda$static$59
	m	(Lkp$a;)Lkp$a;	L	lambda$static$58
	m	(Lkp$a;)Lkp$a;	M	lambda$static$57
	m	(Lkp$a;)Lkp$a;	N	lambda$static$56
	m	(Lkp$a;)Lkp$a;	O	lambda$static$55
	m	(Lkp$a;)Lkp$a;	P	lambda$static$54
	m	(Lkp$a;)Lkp$a;	Q	lambda$static$53
	m	(Lkp$a;)Lkp$a;	R	lambda$static$52
	m	(Lkp$a;)Lkp$a;	S	lambda$static$51
	m	(Lkp$a;)Lkp$a;	T	lambda$static$50
	m	(Lkp$a;)Lkp$a;	U	lambda$static$49
	m	(Lkp$a;)Lkp$a;	V	lambda$static$48
	m	(Lkp$a;)Lkp$a;	W	lambda$static$47
	m	(Lkp$a;)Lkp$a;	X	lambda$static$46
	m	(Lkp$a;)Lkp$a;	Y	lambda$static$45
	m	(Lkp$a;)Lkp$a;	Z	lambda$static$44
	m	(Lkp$a;)Lkp$a;	aa	lambda$static$43
	m	(Lkp$a;)Lkp$a;	ab	lambda$static$42
	m	(Lkp$a;)Lkp$a;	ac	lambda$static$41
	m	(Lkp$a;)Lkp$a;	ad	lambda$static$40
	m	(Lkp$a;)Lkp$a;	ae	lambda$static$39
	m	(Lkp$a;)Lkp$a;	af	lambda$static$38
	m	(Lkp$a;)Lkp$a;	ag	lambda$static$37
	m	(Lkp$a;)Lkp$a;	ah	lambda$static$36
	m	(Lkp$a;)Lkp$a;	ai	lambda$static$35
	m	(Lkp$a;)Lkp$a;	aj	lambda$static$34
	m	(Lkp$a;)Lkp$a;	ak	lambda$static$33
	m	(Lkp$a;)Lkp$a;	al	lambda$static$32
	m	(Lkp$a;)Lkp$a;	am	lambda$static$31
	m	(Lkp$a;)Lkp$a;	an	lambda$static$30
	m	(Lkp$a;)Lkp$a;	ao	lambda$static$29
	m	(Lkp$a;)Lkp$a;	ap	lambda$static$28
	m	(Lkp$a;)Lkp$a;	aq	lambda$static$27
	m	(Lkp$a;)Lkp$a;	ar	lambda$static$26
	m	(Lkp$a;)Lkp$a;	as	lambda$static$25
	m	(Lkp$a;)Lkp$a;	at	lambda$static$24
	m	(Lkp$a;)Lkp$a;	au	lambda$static$23
	m	(Lkp$a;)Lkp$a;	av	lambda$static$22
	m	(Lkp$a;)Lkp$a;	aw	lambda$static$21
	m	(Lkp$a;)Lkp$a;	ax	lambda$static$20
	m	(Lkp$a;)Lkp$a;	ay	lambda$static$19
	m	(Lkp$a;)Lkp$a;	az	lambda$static$18
	m	(Lkp$a;)Lkp$a;	aA	lambda$static$17
	m	(Lkp$a;)Lkp$a;	aB	lambda$static$16
	m	(Lkp$a;)Lkp$a;	aC	lambda$static$15
	m	(Lkp$a;)Lkp$a;	aD	lambda$static$14
	m	(Lkp$a;)Lkp$a;	aE	lambda$static$13
	m	(Lkp$a;)Lkp$a;	aF	lambda$static$12
	m	(Lkp$a;)Lkp$a;	aG	lambda$static$11
	m	(Lkp$a;)Lkp$a;	aH	lambda$static$10
	m	(Lkp$a;)Lkp$a;	aI	lambda$static$9
	m	(Lkp$a;)Lkp$a;	aJ	lambda$static$8
	m	(Lkp$a;)Lkp$a;	aK	lambda$static$7
	m	(Lkp$a;)Lkp$a;	aL	lambda$static$6
	m	(Lkp$a;)Lkp$a;	aM	lambda$static$5
	m	(Lkp$a;)Lkp$a;	aN	lambda$static$4
	m	(Lkp$a;)Lkp$a;	aO	lambda$static$3
	m	(Lkp$a;)Lkp$a;	aP	lambda$static$2
	m	(Lkp$a;)Lkp$a;	aQ	lambda$static$1
	m	(Lkp$a;)Lkp$a;	aR	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kr	net/minecraft/core/component/PatchedDataComponentMap
	f	Lkn;	c	prototype
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	d	patch
	f	Z	e	copyOnWrite
	m	(Lkn;)V	<init>	<init>
	m	(Lkn;Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;Z)V	<init>	<init>
	m	(Lkn;Lko;)Lkr;	a	fromPatch
	m	(Lkn;Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;)Z	a	isPatchSanitized
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkp;)Z	d	hasNonDefault
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	b	set
	m	(Lkp;)Ljava/lang/Object;	e	remove
	m	(Lko;)V	a	applyPatch
	m	(Lkp;Ljava/util/Optional;)V	a	applyPatch
	m	(Lko;)V	b	restorePatch
	m	()V	f	clearPatch
	m	(Lkn;)V	a	setAll
	m	()V	j	ensureMapOwnership
	m	()Ljava/util/Set;	b	keySet
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()I	d	size
	m	()Lko;	g	asPatch
	m	()Lkr;	h	copy
	m	()Lkn;	i	toImmutableMap
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
c	ks	net/minecraft/core/component/TypedDataComponent
	f	Lkp;	b	type
	f	Ljava/lang/Object;	c	value
	f	Lzm;	a	STREAM_CODEC
	m	(Lkp;Ljava/lang/Object;)V	<init>	<init>
	m	(Ljava/util/Map$Entry;)Lks;	a	fromEntryUnchecked
	m	(Lkp;Ljava/lang/Object;)Lks;	a	createUnchecked
	m	(Lkr;)V	a	applyTo
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encodeValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkp;	a	type
	m	()Ljava/lang/Object;	b	value
	m	()Ljava/lang/String;	c	lambda$encodeValue$0
	m	()V	<clinit>	<clinit>
c	ks$1	net/minecraft/core/component/TypedDataComponent$1
	m	()V	<init>	<init>
	m	(Lwx;)Lks;	a	decode
	m	(Lwx;Lkp;)Lks;	a	decodeTyped
	m	(Lwx;Lks;)V	a	encode
	m	(Lwx;Lks;)V	b	encodeCap
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	kt	net/minecraft/core/component/package-info
c	ku	net/minecraft/core/component/predicates/AttributeModifiersPredicate
	f	Ljava/util/Optional;	e	modifiers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldfm;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	modifiers
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ku$a	net/minecraft/core/component/predicates/AttributeModifiersPredicate$EntryPredicate
	f	Ljava/util/Optional;	b	attribute
	f	Ljava/util/Optional;	c	id
	f	Lcx$c;	d	amount
	f	Ljava/util/Optional;	e	operation
	f	Ljava/util/Optional;	f	slot
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcx$c;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldfm$c;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	attribute
	m	()Ljava/util/Optional;	b	id
	m	()Lcx$c;	c	amount
	m	()Ljava/util/Optional;	d	operation
	m	()Ljava/util/Optional;	e	slot
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kv	net/minecraft/core/component/predicates/BundlePredicate
	f	Ljava/util/Optional;	e	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldey;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	items
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kw	net/minecraft/core/component/predicates/ContainerPredicate
	f	Ljava/util/Optional;	e	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldfn;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	items
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kx	net/minecraft/core/component/predicates/CustomDataPredicate
	f	Lda;	e	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lda;)V	<init>	<init>
	m	(Lkl;)Z	a	matches
	m	(Lda;)Lkx;	a	customData
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lda;	a	value
	m	()V	<clinit>	<clinit>
c	ky	net/minecraft/core/component/predicates/DamagePredicate
	f	Lcx$d;	e	durability
	f	Lcx$d;	f	damage
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lcx$d;Lcx$d;)V	<init>	<init>
	m	(Lkl;)Z	a	matches
	m	(Lcx$d;)Lky;	a	durability
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$d;	a	durability
	m	()Lcx$d;	b	damage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kz	net/minecraft/core/component/predicates/DataComponentPredicate
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	SINGLE_STREAM_CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	singleCodec
	m	(Lkl;)Z	a	matches
	m	(Ljava/util/Map;)Ljava/util/List;	a	lambda$static$1
	m	(Ljava/util/List;)Ljava/util/Map;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	kz$a	net/minecraft/core/component/predicates/DataComponentPredicate$Single
	f	Lkz$b;	a	type
	f	Lkz;	b	predicate
	m	(Lkz$b;Lkz;)V	<init>	<init>
	m	(Ljava/util/Map$Entry;)Lkz$a;	a	fromEntry
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkz$b;	a	type
	m	()Lkz;	b	predicate
c	kz$b	net/minecraft/core/component/predicates/DataComponentPredicate$Type
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Lcom/mojang/serialization/MapCodec;	b	wrappedCodec
	f	Lzm;	c	singleStreamCodec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	()Lcom/mojang/serialization/MapCodec;	b	wrappedCodec
	m	()Lzm;	c	singleStreamCodec
	m	(Lkz;)Lkz$a;	a	lambda$new$2
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$1
	m	(Lkz;)Lkz$a;	b	lambda$new$0
c	la	net/minecraft/core/component/predicates/DataComponentPredicates
	f	Lkz$b;	a	DAMAGE
	f	Lkz$b;	b	ENCHANTMENTS
	f	Lkz$b;	c	STORED_ENCHANTMENTS
	f	Lkz$b;	d	POTIONS
	f	Lkz$b;	e	CUSTOM_DATA
	f	Lkz$b;	f	CONTAINER
	f	Lkz$b;	g	BUNDLE_CONTENTS
	f	Lkz$b;	h	FIREWORK_EXPLOSION
	f	Lkz$b;	i	FIREWORKS
	f	Lkz$b;	j	WRITABLE_BOOK
	f	Lkz$b;	k	WRITTEN_BOOK
	f	Lkz$b;	l	ATTRIBUTE_MODIFIERS
	f	Lkz$b;	m	ARMOR_TRIM
	f	Lkz$b;	n	JUKEBOX_PLAYABLE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lkz$b;	a	register
	m	(Ljy;)Lkz$b;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	lb	net/minecraft/core/component/predicates/EnchantmentsPredicate
	f	Ljava/util/List;	a	enchantments
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
	m	()Ljava/util/List;	b	enchantments
	m	(Ldjo;)Z	a	matches
	m	(Ljava/util/List;)Llb$a;	a	enchantments
	m	(Ljava/util/List;)Llb$b;	b	storedEnchantments
	m	(Ljava/lang/Object;)Z	a	matches
c	lb$a	net/minecraft/core/component/predicates/EnchantmentsPredicate$Enchantments
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ljava/lang/Object;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	lb$b	net/minecraft/core/component/predicates/EnchantmentsPredicate$StoredEnchantments
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ljava/lang/Object;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	lc	net/minecraft/core/component/predicates/FireworkExplosionPredicate
	f	Llc$a;	e	predicate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Llc$a;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldfj;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Llc$a;	b	predicate
	m	(Ljava/lang/Object;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	lc$a	net/minecraft/core/component/predicates/FireworkExplosionPredicate$FireworkPredicate
	f	Ljava/util/Optional;	b	shape
	f	Ljava/util/Optional;	c	twinkle
	f	Ljava/util/Optional;	d	trail
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldfj;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	shape
	m	()Ljava/util/Optional;	b	twinkle
	m	()Ljava/util/Optional;	c	trail
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ld	net/minecraft/core/component/predicates/FireworksPredicate
	f	Ljava/util/Optional;	e	explosions
	f	Lcx$d;	f	flightDuration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Lcx$d;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldfk;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	explosions
	m	()Lcx$d;	c	flightDuration
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	le	net/minecraft/core/component/predicates/JukeboxPlayablePredicate
	f	Ljava/util/Optional;	e	song
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldda;)Z	a	matches
	m	()Lle;	b	any
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	song
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	lf	net/minecraft/core/component/predicates/PotionsPredicate
	f	Ljp;	e	potions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljp;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Lder;)Z	a	matches
	m	(Ljp;)Lkz;	a	potions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	potions
	m	(Ljava/lang/Object;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	lg	net/minecraft/core/component/predicates/TrimPredicate
	f	Ljava/util/Optional;	e	material
	f	Ljava/util/Optional;	f	pattern
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldlg;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	material
	m	()Ljava/util/Optional;	c	pattern
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	lh	net/minecraft/core/component/predicates/WritableBookPredicate
	f	Ljava/util/Optional;	e	pages
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldge;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	pages
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	lh$a	net/minecraft/core/component/predicates/WritableBookPredicate$PagePredicate
	f	Ljava/lang/String;	b	contents
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Laut;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	contents
	m	(Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	li	net/minecraft/core/component/predicates/WrittenBookPredicate
	f	Ljava/util/Optional;	e	pages
	f	Ljava/util/Optional;	f	author
	f	Ljava/util/Optional;	g	title
	f	Lcx$d;	h	generation
	f	Ljava/util/Optional;	i	resolved
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lcx$d;Ljava/util/Optional;)V	<init>	<init>
	m	()Lkp;	a	componentType
	m	(Ldgf;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	pages
	m	()Ljava/util/Optional;	c	author
	m	()Ljava/util/Optional;	d	title
	m	()Lcx$d;	e	generation
	m	()Ljava/util/Optional;	f	resolved
	m	(Ljava/lang/Object;)Z	a	matches
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	li$a	net/minecraft/core/component/predicates/WrittenBookPredicate$PagePredicate
	f	Lxo;	b	contents
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lxo;)V	<init>	<init>
	m	(Laut;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	contents
	m	(Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	lj	net/minecraft/core/component/predicates/package-info
c	lk	net/minecraft/core/dispenser/BlockSource
	f	Laub;	a	level
	f	Ljb;	b	pos
	f	Leeb;	c	state
	f	Lebu;	d	blockEntity
	m	(Laub;Ljb;Leeb;Lebu;)V	<init>	<init>
	m	()Lfis;	a	center
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laub;	b	level
	m	()Ljb;	c	pos
	m	()Leeb;	d	state
	m	()Lebu;	e	blockEntity
c	ll	net/minecraft/core/dispenser/BoatDispenseItemBehavior
	f	Llm;	c	defaultDispenseItemBehavior
	f	Lbzv;	d	type
	m	(Lbzv;)V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Llk;)V	a	playSound
c	lm	net/minecraft/core/dispenser/DefaultDispenseItemBehavior
	f	I	c	DEFAULT_ACCURACY
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	dispense	dispense
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Ldmu;Ldcv;ILjh;Ljv;)V	a	spawnItem
	m	(Llk;)V	a	playSound
	m	(Llk;Ljh;)V	a	playAnimation
	m	(Llk;)V	b	playDefaultSound
	m	(Llk;Ljh;)V	b	playDefaultAnimation
	m	(Llk;Ldcv;Ldcv;)Ldcv;	a	consumeWithRemainder
	m	(Llk;Ldcv;)V	b	addToInventoryOrDispense
c	ln	net/minecraft/core/dispenser/DispenseItemBehavior
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lln;	b	NOOP
	m	(Llk;Ldcv;)Ldcv;	dispense	dispense
	m	()V	a	bootStrap
	m	(Llk;Ldcv;)Ldcv;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ln$1	net/minecraft/core/dispenser/DispenseItemBehavior$1
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$2	net/minecraft/core/dispenser/DispenseItemBehavior$10
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$3	net/minecraft/core/dispenser/DispenseItemBehavior$11
	m	()V	<init>	<init>
	m	(Llk;Ldcv;Ldcv;)Ldcv;	b	takeLiquid
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Leea$a;)Z	a	lambda$execute$0
c	ln$4	net/minecraft/core/dispenser/DispenseItemBehavior$12
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$5	net/minecraft/core/dispenser/DispenseItemBehavior$13
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Ldcr;)V	a	lambda$execute$0
c	ln$6	net/minecraft/core/dispenser/DispenseItemBehavior$14
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$7	net/minecraft/core/dispenser/DispenseItemBehavior$15
	f	Llm;	c	defaultDispenseItemBehavior
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$8	net/minecraft/core/dispenser/DispenseItemBehavior$2
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Ljh;Lcqo;)V	a	lambda$execute$0
c	ln$9	net/minecraft/core/dispenser/DispenseItemBehavior$3
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Lcop;)Z	a	lambda$execute$0
c	ln$10	net/minecraft/core/dispenser/DispenseItemBehavior$4
	f	Llm;	c	defaultDispenseItemBehavior
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$11	net/minecraft/core/dispenser/DispenseItemBehavior$5
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$12	net/minecraft/core/dispenser/DispenseItemBehavior$6
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Ldcr;)V	a	lambda$execute$0
c	ln$13	net/minecraft/core/dispenser/DispenseItemBehavior$7
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$14	net/minecraft/core/dispenser/DispenseItemBehavior$8
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	ln$15	net/minecraft/core/dispenser/DispenseItemBehavior$9
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
c	lo	net/minecraft/core/dispenser/EquipmentDispenseItemBehavior
	f	Llo;	c	INSTANCE
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Llk;Ldcv;)Z	b	dispenseEquipment
	m	(Ldcv;Lcam;)Z	a	lambda$dispenseEquipment$0
	m	()V	<clinit>	<clinit>
c	lp	net/minecraft/core/dispenser/MinecartDispenseItemBehavior
	f	Llm;	c	defaultDispenseItemBehavior
	f	Lbzv;	d	entityType
	m	(Lbzv;)V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Leeb;)Leff;	a	getRailShape
	m	(Llk;)V	a	playSound
c	lq	net/minecraft/core/dispenser/OptionalDispenseItemBehavior
	f	Z	c	success
	m	()V	<init>	<init>
	m	()Z	b	isSuccess
	m	(Z)V	a	setSuccess
	m	(Llk;)V	a	playSound
c	lr	net/minecraft/core/dispenser/ProjectileDispenseBehavior
	f	Lddp;	c	projectileItem
	f	Lddp$a;	d	dispenseConfig
	m	(Ldcr;)V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Llk;)V	a	playSound
c	ls	net/minecraft/core/dispenser/ShearsDispenseItemBehavior
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	(Laub;Ljb;)Z	a	tryShearBeehive
	m	(Laub;Ljb;Ldcv;)Z	a	tryShearEntity
	m	(Leea$a;)Z	a	lambda$tryShearBeehive$1
	m	(Ldcr;)V	a	lambda$execute$0
c	lt	net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior
	f	Lorg/slf4j/Logger;	c	LOGGER
	m	()V	<init>	<init>
	m	(Llk;Ldcv;)Ldcv;	a	execute
	m	()V	<clinit>	<clinit>
c	lu	net/minecraft/core/dispenser/package-info
c	lv	net/minecraft/core/package-info
c	lw	net/minecraft/core/particles/BlockParticleOption
	f	Lcom/mojang/serialization/Codec;	a	BLOCK_STATE_CODEC
	f	Lmd;	b	type
	f	Leeb;	c	state
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lmd;)Lzm;	b	streamCodec
	m	(Lmd;Leeb;)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Leeb;	b	getState
	m	(Llw;)Leeb;	a	lambda$streamCodec$3
	m	(Lmd;Leeb;)Llw;	a	lambda$streamCodec$2
	m	(Llw;)Leeb;	b	lambda$codec$1
	m	(Lmd;Leeb;)Llw;	b	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	lx	net/minecraft/core/particles/ColorParticleOption
	f	Lmd;	a	type
	f	I	b	color
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lmd;)Lzm;	b	streamCodec
	m	(Lmd;I)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()F	b	getRed
	m	()F	c	getGreen
	m	()F	d	getBlue
	m	()F	e	getAlpha
	m	(Lmd;I)Llx;	a	create
	m	(Lmd;FFF)Llx;	a	create
	m	(Llx;)Ljava/lang/Integer;	a	lambda$streamCodec$3
	m	(Lmd;Ljava/lang/Integer;)Llx;	a	lambda$streamCodec$2
	m	(Llx;)Ljava/lang/Integer;	b	lambda$codec$1
	m	(Lmd;Ljava/lang/Integer;)Llx;	b	lambda$codec$0
c	ly	net/minecraft/core/particles/DustColorTransitionOptions
	f	I	a	SCULK_PARTICLE_COLOR
	f	Lly;	b	SCULK_TO_REDSTONE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	f	I	h	fromColor
	f	I	i	toColor
	m	(IIF)V	<init>	<init>
	m	()Lorg/joml/Vector3f;	b	getFromColor
	m	()Lorg/joml/Vector3f;	c	getToColor
	m	()Lmd;	a	getType
	m	(Lly;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lly;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lly;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lly;)Ljava/lang/Integer;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	lz	net/minecraft/core/particles/DustParticleOptions
	f	I	a	REDSTONE_PARTICLE_COLOR
	f	Llz;	b	REDSTONE
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	f	I	h	color
	m	(IF)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Lorg/joml/Vector3f;	b	getColor
	m	(Llz;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Llz;)Ljava/lang/Integer;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ma	net/minecraft/core/particles/ItemParticleOption
	f	Lcom/mojang/serialization/Codec;	a	ITEM_CODEC
	f	Lmd;	b	type
	f	Ldcv;	c	itemStack
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lmd;)Lzm;	b	streamCodec
	m	(Lmd;Ldcv;)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Ldcv;	b	getItem
	m	(Lma;)Ldcv;	a	lambda$streamCodec$3
	m	(Lmd;Ldcv;)Lma;	a	lambda$streamCodec$2
	m	(Lma;)Ldcv;	b	lambda$codec$1
	m	(Lmd;Ldcv;)Lma;	b	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	mb	net/minecraft/core/particles/ParticleGroup
	f	I	b	limit
	f	Lmb;	a	SPORE_BLOSSOM
	m	(I)V	<init>	<init>
	m	()I	a	getLimit
	m	()V	<clinit>	<clinit>
c	mc	net/minecraft/core/particles/ParticleOptions
	m	()Lmd;	a	getType
c	md	net/minecraft/core/particles/ParticleType
	f	Z	a	overrideLimiter
	m	(Z)V	<init>	<init>
	m	()Z	b	getOverrideLimiter
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lzm;	d	streamCodec
c	me	net/minecraft/core/particles/ParticleTypes
	f	Lmi;	a	ANGRY_VILLAGER
	f	Lmd;	b	BLOCK
	f	Lmd;	c	BLOCK_MARKER
	f	Lmi;	d	BUBBLE
	f	Lmi;	e	CLOUD
	f	Lmi;	f	CRIT
	f	Lmi;	g	DAMAGE_INDICATOR
	f	Lmi;	h	DRAGON_BREATH
	f	Lmi;	i	DRIPPING_LAVA
	f	Lmi;	j	FALLING_LAVA
	f	Lmi;	k	LANDING_LAVA
	f	Lmi;	l	DRIPPING_WATER
	f	Lmi;	m	FALLING_WATER
	f	Lmd;	n	DUST
	f	Lmd;	o	DUST_COLOR_TRANSITION
	f	Lmi;	p	EFFECT
	f	Lmi;	q	ELDER_GUARDIAN
	f	Lmi;	r	ENCHANTED_HIT
	f	Lmi;	s	ENCHANT
	f	Lmi;	t	END_ROD
	f	Lmd;	u	ENTITY_EFFECT
	f	Lmi;	v	EXPLOSION_EMITTER
	f	Lmi;	w	EXPLOSION
	f	Lmi;	x	GUST
	f	Lmi;	y	SMALL_GUST
	f	Lmi;	z	GUST_EMITTER_LARGE
	f	Lmi;	A	GUST_EMITTER_SMALL
	f	Lmi;	B	SONIC_BOOM
	f	Lmd;	C	FALLING_DUST
	f	Lmi;	D	FIREWORK
	f	Lmi;	E	FISHING
	f	Lmi;	F	FLAME
	f	Lmi;	G	INFESTED
	f	Lmi;	H	CHERRY_LEAVES
	f	Lmi;	I	PALE_OAK_LEAVES
	f	Lmd;	J	TINTED_LEAVES
	f	Lmi;	K	SCULK_SOUL
	f	Lmd;	L	SCULK_CHARGE
	f	Lmi;	M	SCULK_CHARGE_POP
	f	Lmi;	N	SOUL_FIRE_FLAME
	f	Lmi;	O	SOUL
	f	Lmi;	P	FLASH
	f	Lmi;	Q	HAPPY_VILLAGER
	f	Lmi;	R	COMPOSTER
	f	Lmi;	S	HEART
	f	Lmi;	T	INSTANT_EFFECT
	f	Lmd;	U	ITEM
	f	Lmd;	V	VIBRATION
	f	Lmd;	W	TRAIL
	f	Lmi;	X	ITEM_SLIME
	f	Lmi;	Y	ITEM_COBWEB
	f	Lmi;	Z	ITEM_SNOWBALL
	f	Lmi;	aa	LARGE_SMOKE
	f	Lmi;	ab	LAVA
	f	Lmi;	ac	MYCELIUM
	f	Lmi;	ad	NOTE
	f	Lmi;	ae	POOF
	f	Lmi;	af	PORTAL
	f	Lmi;	ag	RAIN
	f	Lmi;	ah	SMOKE
	f	Lmi;	ai	WHITE_SMOKE
	f	Lmi;	aj	SNEEZE
	f	Lmi;	ak	SPIT
	f	Lmi;	al	SQUID_INK
	f	Lmi;	am	SWEEP_ATTACK
	f	Lmi;	an	TOTEM_OF_UNDYING
	f	Lmi;	ao	UNDERWATER
	f	Lmi;	ap	SPLASH
	f	Lmi;	aq	WITCH
	f	Lmi;	ar	BUBBLE_POP
	f	Lmi;	as	CURRENT_DOWN
	f	Lmi;	at	BUBBLE_COLUMN_UP
	f	Lmi;	au	NAUTILUS
	f	Lmi;	av	DOLPHIN
	f	Lmi;	aw	CAMPFIRE_COSY_SMOKE
	f	Lmi;	ax	CAMPFIRE_SIGNAL_SMOKE
	f	Lmi;	ay	DRIPPING_HONEY
	f	Lmi;	az	FALLING_HONEY
	f	Lmi;	aA	LANDING_HONEY
	f	Lmi;	aB	FALLING_NECTAR
	f	Lmi;	aC	FALLING_SPORE_BLOSSOM
	f	Lmi;	aD	ASH
	f	Lmi;	aE	CRIMSON_SPORE
	f	Lmi;	aF	WARPED_SPORE
	f	Lmi;	aG	SPORE_BLOSSOM_AIR
	f	Lmi;	aH	DRIPPING_OBSIDIAN_TEAR
	f	Lmi;	aI	FALLING_OBSIDIAN_TEAR
	f	Lmi;	aJ	LANDING_OBSIDIAN_TEAR
	f	Lmi;	aK	REVERSE_PORTAL
	f	Lmi;	aL	WHITE_ASH
	f	Lmi;	aM	SMALL_FLAME
	f	Lmi;	aN	SNOWFLAKE
	f	Lmi;	aO	DRIPPING_DRIPSTONE_LAVA
	f	Lmi;	aP	FALLING_DRIPSTONE_LAVA
	f	Lmi;	aQ	DRIPPING_DRIPSTONE_WATER
	f	Lmi;	aR	FALLING_DRIPSTONE_WATER
	f	Lmi;	aS	GLOW_SQUID_INK
	f	Lmi;	aT	GLOW
	f	Lmi;	aU	WAX_ON
	f	Lmi;	aV	WAX_OFF
	f	Lmi;	aW	ELECTRIC_SPARK
	f	Lmi;	aX	SCRAPE
	f	Lmd;	aY	SHRIEK
	f	Lmi;	aZ	EGG_CRACK
	f	Lmi;	ba	DUST_PLUME
	f	Lmi;	bb	TRIAL_SPAWNER_DETECTED_PLAYER
	f	Lmi;	bc	TRIAL_SPAWNER_DETECTED_PLAYER_OMINOUS
	f	Lmi;	bd	VAULT_CONNECTION
	f	Lmd;	be	DUST_PILLAR
	f	Lmi;	bf	OMINOUS_SPAWNING
	f	Lmi;	bg	RAID_OMEN
	f	Lmi;	bh	TRIAL_OMEN
	f	Lmd;	bi	BLOCK_CRUMBLE
	f	Lmi;	bj	FIREFLY
	f	Lcom/mojang/serialization/Codec;	bk	CODEC
	f	Lzm;	bl	STREAM_CODEC
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Z)Lmi;	a	register
	m	(Ljava/lang/String;ZLjava/util/function/Function;Ljava/util/function/Function;)Lmd;	a	register
	m	(Lmd;)Lzm;	a	lambda$static$11
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	b	lambda$static$10
	m	(Lmd;)Lzm;	c	lambda$static$9
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	d	lambda$static$8
	m	(Lmd;)Lzm;	e	lambda$static$7
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	f	lambda$static$6
	m	(Lmd;)Lzm;	g	lambda$static$5
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	h	lambda$static$4
	m	(Lmd;)Lzm;	i	lambda$static$3
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	j	lambda$static$2
	m	(Lmd;)Lzm;	k	lambda$static$1
	m	(Lmd;)Lcom/mojang/serialization/MapCodec;	l	lambda$static$0
	m	()V	<clinit>	<clinit>
c	me$1	net/minecraft/core/particles/ParticleTypes$1
	f	Ljava/util/function/Function;	a	val$codec
	f	Ljava/util/function/Function;	b	val$streamCodec
	m	(ZLjava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lzm;	d	streamCodec
c	mf	net/minecraft/core/particles/ScalableParticleOptionsBase
	f	F	e	MIN_SCALE
	f	F	f	MAX_SCALE
	f	Lcom/mojang/serialization/Codec;	g	SCALE
	f	F	a	scale
	m	(F)V	<init>	<init>
	m	()F	d	getScale
	m	(Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mg	net/minecraft/core/particles/SculkChargeParticleOptions
	f	F	c	roll
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(F)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	roll
	m	(Lmg;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lmg;)Ljava/lang/Float;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mh	net/minecraft/core/particles/ShriekParticleOption
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	I	c	delay
	m	(I)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()I	b	getDelay
	m	(Lmh;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lmh;)Ljava/lang/Integer;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mi	net/minecraft/core/particles/SimpleParticleType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lzm;	b	streamCodec
	m	(Z)V	<init>	<init>
	m	()Lmi;	e	getType
	m	()Lcom/mojang/serialization/MapCodec;	c	codec
	m	()Lzm;	d	streamCodec
	m	()Lmd;	a	getType
c	mj	net/minecraft/core/particles/TrailParticleOption
	f	Lfis;	c	target
	f	I	d	color
	f	I	e	duration
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Lfis;II)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	b	target
	m	()I	c	color
	m	()I	d	duration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mk	net/minecraft/core/particles/VibrationParticleOption
	f	Lcom/mojang/serialization/Codec;	c	SAFE_POSITION_SOURCE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lejf;	d	destination
	f	I	e	arrivalInTicks
	m	(Lejf;I)V	<init>	<init>
	m	()Lmd;	a	getType
	m	()Lejf;	b	getDestination
	m	()I	c	getArrivalInTicks
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lejf;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()Ljava/lang/String;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ml	net/minecraft/core/particles/package-info
c	mm	net/minecraft/core/registries/BuiltInRegistries
	f	Lorg/slf4j/Logger;	aK	LOGGER
	f	Ljava/util/Map;	aL	LOADERS
	f	Lkh;	aM	WRITABLE_REGISTRY
	f	Ljg;	a	GAME_EVENT
	f	Ljy;	b	SOUND_EVENT
	f	Ljg;	c	FLUID
	f	Ljy;	d	MOB_EFFECT
	f	Ljg;	e	BLOCK
	f	Ljg;	f	ENTITY_TYPE
	f	Ljg;	g	ITEM
	f	Ljy;	h	POTION
	f	Ljy;	i	PARTICLE_TYPE
	f	Ljy;	j	BLOCK_ENTITY_TYPE
	f	Ljy;	k	CUSTOM_STAT
	f	Ljg;	l	CHUNK_STATUS
	f	Ljy;	m	RULE_TEST
	f	Ljy;	n	RULE_BLOCK_ENTITY_MODIFIER
	f	Ljy;	o	POS_RULE_TEST
	f	Ljy;	p	MENU
	f	Ljy;	q	RECIPE_TYPE
	f	Ljy;	r	RECIPE_SERIALIZER
	f	Ljy;	s	ATTRIBUTE
	f	Ljy;	t	POSITION_SOURCE_TYPE
	f	Ljy;	u	COMMAND_ARGUMENT_TYPE
	f	Ljy;	v	STAT_TYPE
	f	Ljg;	w	VILLAGER_TYPE
	f	Ljg;	x	VILLAGER_PROFESSION
	f	Ljy;	y	POINT_OF_INTEREST_TYPE
	f	Ljg;	z	MEMORY_MODULE_TYPE
	f	Ljg;	A	SENSOR_TYPE
	f	Ljy;	B	SCHEDULE
	f	Ljy;	C	ACTIVITY
	f	Ljy;	D	LOOT_POOL_ENTRY_TYPE
	f	Ljy;	E	LOOT_FUNCTION_TYPE
	f	Ljy;	F	LOOT_CONDITION_TYPE
	f	Ljy;	G	LOOT_NUMBER_PROVIDER_TYPE
	f	Ljy;	H	LOOT_NBT_PROVIDER_TYPE
	f	Ljy;	I	LOOT_SCORE_PROVIDER_TYPE
	f	Ljy;	J	FLOAT_PROVIDER_TYPE
	f	Ljy;	K	INT_PROVIDER_TYPE
	f	Ljy;	L	HEIGHT_PROVIDER_TYPE
	f	Ljy;	M	BLOCK_PREDICATE_TYPE
	f	Ljy;	N	CARVER
	f	Ljy;	O	FEATURE
	f	Ljy;	P	STRUCTURE_PLACEMENT
	f	Ljy;	Q	STRUCTURE_PIECE
	f	Ljy;	R	STRUCTURE_TYPE
	f	Ljy;	S	PLACEMENT_MODIFIER_TYPE
	f	Ljy;	T	BLOCKSTATE_PROVIDER_TYPE
	f	Ljy;	U	FOLIAGE_PLACER_TYPE
	f	Ljy;	V	TRUNK_PLACER_TYPE
	f	Ljy;	W	ROOT_PLACER_TYPE
	f	Ljy;	X	TREE_DECORATOR_TYPE
	f	Ljy;	Y	FEATURE_SIZE_TYPE
	f	Ljy;	Z	BIOME_SOURCE
	f	Ljy;	aa	CHUNK_GENERATOR
	f	Ljy;	ab	MATERIAL_CONDITION
	f	Ljy;	ac	MATERIAL_RULE
	f	Ljy;	ad	DENSITY_FUNCTION_TYPE
	f	Ljy;	ae	BLOCK_TYPE
	f	Ljy;	af	STRUCTURE_PROCESSOR
	f	Ljy;	ag	STRUCTURE_POOL_ELEMENT
	f	Ljy;	ah	POOL_ALIAS_BINDING_TYPE
	f	Ljy;	ai	DECORATED_POT_PATTERN
	f	Ljy;	aj	CREATIVE_MODE_TAB
	f	Ljy;	ak	TRIGGER_TYPES
	f	Ljy;	al	NUMBER_FORMAT_TYPE
	f	Ljy;	am	DATA_COMPONENT_TYPE
	f	Ljy;	an	ENTITY_SUB_PREDICATE_TYPE
	f	Ljy;	ao	DATA_COMPONENT_PREDICATE_TYPE
	f	Ljy;	ap	MAP_DECORATION_TYPE
	f	Ljy;	aq	ENCHANTMENT_EFFECT_COMPONENT_TYPE
	f	Ljy;	ar	ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
	f	Ljy;	as	ENCHANTMENT_ENTITY_EFFECT_TYPE
	f	Ljy;	at	ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
	f	Ljy;	au	ENCHANTMENT_VALUE_EFFECT_TYPE
	f	Ljy;	av	ENCHANTMENT_PROVIDER_TYPE
	f	Ljy;	aw	CONSUME_EFFECT_TYPE
	f	Ljy;	ax	RECIPE_DISPLAY
	f	Ljy;	ay	SLOT_DISPLAY
	f	Ljy;	az	RECIPE_BOOK_CATEGORY
	f	Ljy;	aA	TICKET_TYPE
	f	Ljy;	aB	TEST_ENVIRONMENT_DEFINITION_TYPE
	f	Ljy;	aC	TEST_INSTANCE_TYPE
	f	Ljy;	aD	SPAWN_CONDITION_TYPE
	f	Ljy;	aE	DIALOG_TYPE
	f	Ljy;	aF	DIALOG_ACTION_TYPE
	f	Ljy;	aG	INPUT_CONTROL_TYPE
	f	Ljy;	aH	DIALOG_BODY_TYPE
	f	Ljy;	aI	TEST_FUNCTION
	f	Ljy;	aJ	REGISTRY
	m	()V	<init>	<init>
	m	(Lamd;Lmm$a;)Ljy;	a	registerSimple
	m	(Lamd;Lmm$a;)Ljy;	b	registerSimpleWithIntrusiveHolders
	m	(Lamd;Ljava/lang/String;Lmm$a;)Ljg;	a	registerDefaulted
	m	(Lamd;Ljava/lang/String;Lmm$a;)Ljg;	b	registerDefaultedWithIntrusiveHolders
	m	(Lamd;Lkh;Lmm$a;)Lkh;	a	internalRegister
	m	()V	a	bootStrap
	m	()V	b	createContents
	m	()V	c	freeze
	m	(Ljy;)V	b	validate
	m	(Ljy;)Ljm;	a	acquireBootstrapRegistrationLookup
	m	(Ljy;)V	c	bindBootstrappedTagsToEmpty
	m	(Ljy;Ljy;)V	a	lambda$validate$50
	m	(Lame;Ljava/util/function/Supplier;)V	a	lambda$createContents$49
	m	(Lmm$a;Lkh;)Ljava/lang/Object;	a	lambda$internalRegister$48
	m	(Lamd;)Ljava/lang/String;	a	lambda$internalRegister$47
	m	(Ljy;)Ljava/lang/Object;	d	lambda$static$46
	m	(Ljy;)Ljava/lang/Object;	e	lambda$static$45
	m	(Ljy;)Ljava/lang/Object;	f	lambda$static$44
	m	(Ljy;)Ljava/lang/Object;	g	lambda$static$43
	m	(Ljy;)Ljava/lang/Object;	h	lambda$static$42
	m	(Ljy;)Ljava/lang/Object;	i	lambda$static$41
	m	(Ljy;)Ljava/lang/Object;	j	lambda$static$40
	m	(Ljy;)Ljava/lang/Object;	k	lambda$static$39
	m	(Ljy;)Ljava/lang/Object;	l	lambda$static$38
	m	(Ljy;)Ljava/lang/Object;	m	lambda$static$37
	m	(Ljy;)Ljava/lang/Object;	n	lambda$static$36
	m	(Ljy;)Ljava/lang/Object;	o	lambda$static$35
	m	(Ljy;)Ljava/lang/Object;	p	lambda$static$34
	m	(Ljy;)Ljava/lang/Object;	q	lambda$static$33
	m	(Ljy;)Ljava/lang/Object;	r	lambda$static$32
	m	(Ljy;)Ljava/lang/Object;	s	lambda$static$31
	m	(Ljy;)Ljava/lang/Object;	t	lambda$static$30
	m	(Ljy;)Ljava/lang/Object;	u	lambda$static$29
	m	(Ljy;)Ljava/lang/Object;	v	lambda$static$28
	m	(Ljy;)Ljava/lang/Object;	w	lambda$static$27
	m	(Ljy;)Ljava/lang/Object;	x	lambda$static$26
	m	(Ljy;)Ljava/lang/Object;	y	lambda$static$25
	m	(Ljy;)Ljava/lang/Object;	z	lambda$static$24
	m	(Ljy;)Ljava/lang/Object;	A	lambda$static$23
	m	(Ljy;)Ljava/lang/Object;	B	lambda$static$22
	m	(Ljy;)Ljava/lang/Object;	C	lambda$static$21
	m	(Ljy;)Ljava/lang/Object;	D	lambda$static$20
	m	(Ljy;)Ljava/lang/Object;	E	lambda$static$19
	m	(Ljy;)Ljava/lang/Object;	F	lambda$static$18
	m	(Ljy;)Ljava/lang/Object;	G	lambda$static$17
	m	(Ljy;)Ljava/lang/Object;	H	lambda$static$16
	m	(Ljy;)Ljava/lang/Object;	I	lambda$static$15
	m	(Ljy;)Ljava/lang/Object;	J	lambda$static$14
	m	(Ljy;)Ljava/lang/Object;	K	lambda$static$13
	m	(Ljy;)Ljava/lang/Object;	L	lambda$static$12
	m	(Ljy;)Ljava/lang/Object;	M	lambda$static$11
	m	(Ljy;)Ljava/lang/Object;	N	lambda$static$10
	m	(Ljy;)Ljava/lang/Object;	O	lambda$static$9
	m	(Ljy;)Ljava/lang/Object;	P	lambda$static$8
	m	(Ljy;)Ljava/lang/Object;	Q	lambda$static$7
	m	(Ljy;)Ljava/lang/Object;	R	lambda$static$6
	m	(Ljy;)Ljava/lang/Object;	S	lambda$static$5
	m	(Ljy;)Ljava/lang/Object;	T	lambda$static$4
	m	(Ljy;)Ljava/lang/Object;	U	lambda$static$3
	m	(Ljy;)Ljava/lang/Object;	V	lambda$static$2
	m	(Ljy;)Ljava/lang/Object;	W	lambda$static$1
	m	(Ljy;)Ljava/lang/Object;	X	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mm$a	net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap
	m	(Ljy;)Ljava/lang/Object;	run	run
c	mn	net/minecraft/core/registries/Registries
	f	Lame;	a	ROOT_REGISTRY_NAME
	f	Lamd;	b	ACTIVITY
	f	Lamd;	c	ATTRIBUTE
	f	Lamd;	d	BIOME_SOURCE
	f	Lamd;	e	BLOCK_ENTITY_TYPE
	f	Lamd;	f	BLOCK_PREDICATE_TYPE
	f	Lamd;	g	BLOCK_STATE_PROVIDER_TYPE
	f	Lamd;	h	BLOCK_TYPE
	f	Lamd;	i	BLOCK
	f	Lamd;	j	CARVER
	f	Lamd;	k	CHUNK_GENERATOR
	f	Lamd;	l	CHUNK_STATUS
	f	Lamd;	m	COMMAND_ARGUMENT_TYPE
	f	Lamd;	n	CONSUME_EFFECT_TYPE
	f	Lamd;	o	CREATIVE_MODE_TAB
	f	Lamd;	p	CUSTOM_STAT
	f	Lamd;	q	DATA_COMPONENT_PREDICATE_TYPE
	f	Lamd;	r	DATA_COMPONENT_TYPE
	f	Lamd;	s	DECORATED_POT_PATTERN
	f	Lamd;	t	DENSITY_FUNCTION_TYPE
	f	Lamd;	u	DIALOG_BODY_TYPE
	f	Lamd;	v	DIALOG_TYPE
	f	Lamd;	w	ENCHANTMENT_EFFECT_COMPONENT_TYPE
	f	Lamd;	x	ENCHANTMENT_ENTITY_EFFECT_TYPE
	f	Lamd;	y	ENCHANTMENT_LEVEL_BASED_VALUE_TYPE
	f	Lamd;	z	ENCHANTMENT_LOCATION_BASED_EFFECT_TYPE
	f	Lamd;	A	ENCHANTMENT_PROVIDER_TYPE
	f	Lamd;	B	ENCHANTMENT_VALUE_EFFECT_TYPE
	f	Lamd;	C	ENTITY_SUB_PREDICATE_TYPE
	f	Lamd;	D	ENTITY_TYPE
	f	Lamd;	E	FEATURE_SIZE_TYPE
	f	Lamd;	F	FEATURE
	f	Lamd;	G	FLOAT_PROVIDER_TYPE
	f	Lamd;	H	FLUID
	f	Lamd;	I	FOLIAGE_PLACER_TYPE
	f	Lamd;	J	GAME_EVENT
	f	Lamd;	K	HEIGHT_PROVIDER_TYPE
	f	Lamd;	L	INPUT_CONTROL_TYPE
	f	Lamd;	M	INT_PROVIDER_TYPE
	f	Lamd;	N	ITEM
	f	Lamd;	O	LOOT_CONDITION_TYPE
	f	Lamd;	P	LOOT_FUNCTION_TYPE
	f	Lamd;	Q	LOOT_NBT_PROVIDER_TYPE
	f	Lamd;	R	LOOT_NUMBER_PROVIDER_TYPE
	f	Lamd;	S	LOOT_POOL_ENTRY_TYPE
	f	Lamd;	T	LOOT_SCORE_PROVIDER_TYPE
	f	Lamd;	U	MAP_DECORATION_TYPE
	f	Lamd;	V	MATERIAL_CONDITION
	f	Lamd;	W	MATERIAL_RULE
	f	Lamd;	X	MEMORY_MODULE_TYPE
	f	Lamd;	Y	MENU
	f	Lamd;	Z	MOB_EFFECT
	f	Lamd;	aa	NUMBER_FORMAT_TYPE
	f	Lamd;	ab	PARTICLE_TYPE
	f	Lamd;	ac	PLACEMENT_MODIFIER_TYPE
	f	Lamd;	ad	POINT_OF_INTEREST_TYPE
	f	Lamd;	ae	POOL_ALIAS_BINDING
	f	Lamd;	af	POSITION_SOURCE_TYPE
	f	Lamd;	ag	POS_RULE_TEST
	f	Lamd;	ah	POTION
	f	Lamd;	ai	RECIPE_BOOK_CATEGORY
	f	Lamd;	aj	RECIPE_DISPLAY
	f	Lamd;	ak	RECIPE_SERIALIZER
	f	Lamd;	al	RECIPE_TYPE
	f	Lamd;	am	ROOT_PLACER_TYPE
	f	Lamd;	an	RULE_BLOCK_ENTITY_MODIFIER
	f	Lamd;	ao	RULE_TEST
	f	Lamd;	ap	SCHEDULE
	f	Lamd;	aq	SENSOR_TYPE
	f	Lamd;	ar	SLOT_DISPLAY
	f	Lamd;	as	SOUND_EVENT
	f	Lamd;	at	SPAWN_CONDITION_TYPE
	f	Lamd;	au	STAT_TYPE
	f	Lamd;	av	STRUCTURE_PIECE
	f	Lamd;	aw	STRUCTURE_PLACEMENT
	f	Lamd;	ax	STRUCTURE_POOL_ELEMENT
	f	Lamd;	ay	STRUCTURE_PROCESSOR
	f	Lamd;	az	STRUCTURE_TYPE
	f	Lamd;	aA	DIALOG_ACTION_TYPE
	f	Lamd;	aB	TEST_ENVIRONMENT_DEFINITION_TYPE
	f	Lamd;	aC	TEST_FUNCTION
	f	Lamd;	aD	TEST_INSTANCE_TYPE
	f	Lamd;	aE	TICKET_TYPE
	f	Lamd;	aF	TREE_DECORATOR_TYPE
	f	Lamd;	aG	TRUNK_PLACER_TYPE
	f	Lamd;	aH	VILLAGER_PROFESSION
	f	Lamd;	aI	VILLAGER_TYPE
	f	Lamd;	aJ	BANNER_PATTERN
	f	Lamd;	aK	BIOME
	f	Lamd;	aL	CAT_VARIANT
	f	Lamd;	aM	CHAT_TYPE
	f	Lamd;	aN	CHICKEN_VARIANT
	f	Lamd;	aO	CONFIGURED_CARVER
	f	Lamd;	aP	CONFIGURED_FEATURE
	f	Lamd;	aQ	COW_VARIANT
	f	Lamd;	aR	DAMAGE_TYPE
	f	Lamd;	aS	DENSITY_FUNCTION
	f	Lamd;	aT	DIALOG
	f	Lamd;	aU	DIMENSION_TYPE
	f	Lamd;	aV	ENCHANTMENT_PROVIDER
	f	Lamd;	aW	ENCHANTMENT
	f	Lamd;	aX	FLAT_LEVEL_GENERATOR_PRESET
	f	Lamd;	aY	FROG_VARIANT
	f	Lamd;	aZ	INSTRUMENT
	f	Lamd;	ba	JUKEBOX_SONG
	f	Lamd;	bb	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Lamd;	bc	NOISE_SETTINGS
	f	Lamd;	bd	NOISE
	f	Lamd;	be	PAINTING_VARIANT
	f	Lamd;	bf	PIG_VARIANT
	f	Lamd;	bg	PLACED_FEATURE
	f	Lamd;	bh	PROCESSOR_LIST
	f	Lamd;	bi	STRUCTURE_SET
	f	Lamd;	bj	STRUCTURE
	f	Lamd;	bk	TEMPLATE_POOL
	f	Lamd;	bl	TEST_ENVIRONMENT
	f	Lamd;	bm	TEST_INSTANCE
	f	Lamd;	bn	TRIAL_SPAWNER_CONFIG
	f	Lamd;	bo	TRIGGER_TYPE
	f	Lamd;	bp	TRIM_MATERIAL
	f	Lamd;	bq	TRIM_PATTERN
	f	Lamd;	br	WOLF_VARIANT
	f	Lamd;	bs	WOLF_SOUND_VARIANT
	f	Lamd;	bt	WORLD_PRESET
	f	Lamd;	bu	DIMENSION
	f	Lamd;	bv	LEVEL_STEM
	f	Lamd;	bw	LOOT_TABLE
	f	Lamd;	bx	ITEM_MODIFIER
	f	Lamd;	by	PREDICATE
	f	Lamd;	bz	ADVANCEMENT
	f	Lamd;	bA	RECIPE
	m	()V	<init>	<init>
	m	(Lamd;)Lamd;	a	levelStemToLevel
	m	(Lamd;)Lamd;	b	levelToLevelStem
	m	(Ljava/lang/String;)Lamd;	a	createRegistryKey
	m	(Lamd;)Ljava/lang/String;	c	elementsDirPath
	m	(Lamd;)Ljava/lang/String;	d	tagsDirPath
	m	()V	<clinit>	<clinit>
c	mo	net/minecraft/core/registries/package-info
c	mp	net/minecraft/data/BlockFamilies
	f	Ljava/util/Map;	ar	MAP
	f	Ljava/lang/String;	as	RECIPE_GROUP_PREFIX_WOODEN
	f	Ljava/lang/String;	at	RECIPE_UNLOCKED_BY_HAS_PLANKS
	f	Lmq;	a	ACACIA_PLANKS
	f	Lmq;	b	CHERRY_PLANKS
	f	Lmq;	c	BIRCH_PLANKS
	f	Lmq;	d	CRIMSON_PLANKS
	f	Lmq;	e	JUNGLE_PLANKS
	f	Lmq;	f	OAK_PLANKS
	f	Lmq;	g	DARK_OAK_PLANKS
	f	Lmq;	h	PALE_OAK_PLANKS
	f	Lmq;	i	SPRUCE_PLANKS
	f	Lmq;	j	WARPED_PLANKS
	f	Lmq;	k	MANGROVE_PLANKS
	f	Lmq;	l	BAMBOO_PLANKS
	f	Lmq;	m	BAMBOO_MOSAIC
	f	Lmq;	n	MUD_BRICKS
	f	Lmq;	o	ANDESITE
	f	Lmq;	p	POLISHED_ANDESITE
	f	Lmq;	q	BLACKSTONE
	f	Lmq;	r	POLISHED_BLACKSTONE
	f	Lmq;	s	POLISHED_BLACKSTONE_BRICKS
	f	Lmq;	t	BRICKS
	f	Lmq;	u	END_STONE_BRICKS
	f	Lmq;	v	MOSSY_STONE_BRICKS
	f	Lmq;	w	COPPER_BLOCK
	f	Lmq;	x	CUT_COPPER
	f	Lmq;	y	WAXED_COPPER_BLOCK
	f	Lmq;	z	WAXED_CUT_COPPER
	f	Lmq;	A	EXPOSED_COPPER
	f	Lmq;	B	EXPOSED_CUT_COPPER
	f	Lmq;	C	WAXED_EXPOSED_COPPER
	f	Lmq;	D	WAXED_EXPOSED_CUT_COPPER
	f	Lmq;	E	WEATHERED_COPPER
	f	Lmq;	F	WEATHERED_CUT_COPPER
	f	Lmq;	G	WAXED_WEATHERED_COPPER
	f	Lmq;	H	WAXED_WEATHERED_CUT_COPPER
	f	Lmq;	I	OXIDIZED_COPPER
	f	Lmq;	J	OXIDIZED_CUT_COPPER
	f	Lmq;	K	WAXED_OXIDIZED_COPPER
	f	Lmq;	L	WAXED_OXIDIZED_CUT_COPPER
	f	Lmq;	M	COBBLESTONE
	f	Lmq;	N	MOSSY_COBBLESTONE
	f	Lmq;	O	DIORITE
	f	Lmq;	P	POLISHED_DIORITE
	f	Lmq;	Q	GRANITE
	f	Lmq;	R	POLISHED_GRANITE
	f	Lmq;	S	TUFF
	f	Lmq;	T	POLISHED_TUFF
	f	Lmq;	U	TUFF_BRICKS
	f	Lmq;	V	RESIN_BRICKS
	f	Lmq;	W	NETHER_BRICKS
	f	Lmq;	X	RED_NETHER_BRICKS
	f	Lmq;	Y	PRISMARINE
	f	Lmq;	Z	PURPUR
	f	Lmq;	aa	PRISMARINE_BRICKS
	f	Lmq;	ab	DARK_PRISMARINE
	f	Lmq;	ac	QUARTZ
	f	Lmq;	ad	SMOOTH_QUARTZ
	f	Lmq;	ae	SANDSTONE
	f	Lmq;	af	CUT_SANDSTONE
	f	Lmq;	ag	SMOOTH_SANDSTONE
	f	Lmq;	ah	RED_SANDSTONE
	f	Lmq;	ai	CUT_RED_SANDSTONE
	f	Lmq;	aj	SMOOTH_RED_SANDSTONE
	f	Lmq;	ak	STONE
	f	Lmq;	al	STONE_BRICK
	f	Lmq;	am	DEEPSLATE
	f	Lmq;	an	COBBLED_DEEPSLATE
	f	Lmq;	ao	POLISHED_DEEPSLATE
	f	Lmq;	ap	DEEPSLATE_BRICKS
	f	Lmq;	aq	DEEPSLATE_TILES
	m	()V	<init>	<init>
	m	(Ldpz;)Lmq$a;	a	familyBuilder
	m	()Ljava/util/stream/Stream;	a	getAllFamilies
	m	()V	<clinit>	<clinit>
c	mq	net/minecraft/data/BlockFamily
	f	Ldpz;	a	baseBlock
	f	Ljava/util/Map;	b	variants
	f	Z	c	generateModel
	f	Z	d	generateRecipe
	f	Ljava/lang/String;	e	recipeGroupPrefix
	f	Ljava/lang/String;	f	recipeUnlockedBy
	m	(Ldpz;)V	<init>	<init>
	m	()Ldpz;	a	getBaseBlock
	m	()Ljava/util/Map;	b	getVariants
	m	(Lmq$b;)Ldpz;	a	get
	m	()Z	c	shouldGenerateModel
	m	()Z	d	shouldGenerateRecipe
	m	()Ljava/util/Optional;	e	getRecipeGroupPrefix
	m	()Ljava/util/Optional;	f	getRecipeUnlockedBy
c	mq$a	net/minecraft/data/BlockFamily$Builder
	f	Lmq;	a	family
	m	(Ldpz;)V	<init>	<init>
	m	()Lmq;	a	getFamily
	m	(Ldpz;)Lmq$a;	a	button
	m	(Ldpz;)Lmq$a;	b	chiseled
	m	(Ldpz;)Lmq$a;	c	mosaic
	m	(Ldpz;)Lmq$a;	d	cracked
	m	(Ldpz;)Lmq$a;	e	cut
	m	(Ldpz;)Lmq$a;	f	door
	m	(Ldpz;)Lmq$a;	g	customFence
	m	(Ldpz;)Lmq$a;	h	fence
	m	(Ldpz;)Lmq$a;	i	customFenceGate
	m	(Ldpz;)Lmq$a;	j	fenceGate
	m	(Ldpz;Ldpz;)Lmq$a;	a	sign
	m	(Ldpz;)Lmq$a;	k	slab
	m	(Ldpz;)Lmq$a;	l	stairs
	m	(Ldpz;)Lmq$a;	m	pressurePlate
	m	(Ldpz;)Lmq$a;	n	polished
	m	(Ldpz;)Lmq$a;	o	trapdoor
	m	(Ldpz;)Lmq$a;	p	wall
	m	()Lmq$a;	b	dontGenerateModel
	m	()Lmq$a;	c	dontGenerateRecipe
	m	(Ljava/lang/String;)Lmq$a;	a	recipeGroupPrefix
	m	(Ljava/lang/String;)Lmq$a;	b	recipeUnlockedBy
c	mq$b	net/minecraft/data/BlockFamily$Variant
	f	Lmq$b;	a	BUTTON
	f	Lmq$b;	b	CHISELED
	f	Lmq$b;	c	CRACKED
	f	Lmq$b;	d	CUT
	f	Lmq$b;	e	DOOR
	f	Lmq$b;	f	CUSTOM_FENCE
	f	Lmq$b;	g	FENCE
	f	Lmq$b;	h	CUSTOM_FENCE_GATE
	f	Lmq$b;	i	FENCE_GATE
	f	Lmq$b;	j	MOSAIC
	f	Lmq$b;	k	SIGN
	f	Lmq$b;	l	SLAB
	f	Lmq$b;	m	STAIRS
	f	Lmq$b;	n	PRESSURE_PLATE
	f	Lmq$b;	o	POLISHED
	f	Lmq$b;	p	TRAPDOOR
	f	Lmq$b;	q	WALL
	f	Lmq$b;	r	WALL_SIGN
	f	Ljava/lang/String;	s	recipeGroup
	f	[Lmq$b;	t	$VALUES
	m	()[Lmq$b;	values	values
	m	(Ljava/lang/String;)Lmq$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getRecipeGroup
	m	()[Lmq$b;	b	$values
	m	()V	<clinit>	<clinit>
c	mr	net/minecraft/data/CachedOutput
	f	Lmr;	a	NO_CACHE
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ms	net/minecraft/data/DataGenerator
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	rootOutputFolder
	f	Lmv;	c	vanillaPackOutput
	f	Ljava/util/Set;	d	allProviderIds
	f	Ljava/util/Map;	e	providersToRun
	f	Lah;	f	version
	f	Z	g	alwaysGenerate
	m	(Ljava/nio/file/Path;Lah;Z)V	<init>	<init>
	m	()V	a	run
	m	(Z)Lms$a;	a	getVanillaPack
	m	(ZLjava/lang/String;)Lms$a;	a	getBuiltinDatapack
	m	(Lmu;Lcom/google/common/base/Stopwatch;Ljava/lang/String;Lmt;)V	a	lambda$run$0
	m	()V	<clinit>	<clinit>
c	ms$a	net/minecraft/data/DataGenerator$PackGenerator
	f	Z	b	toRun
	f	Ljava/lang/String;	c	providerPrefix
	f	Lmv;	d	output
	f	Lms;	a	this$0
	m	(Lms;ZLjava/lang/String;Lmv;)V	<init>	<init>
	m	(Lmt$a;)Lmt;	a	addProvider
c	mt	net/minecraft/data/DataProvider
	f	Ljava/util/function/ToIntFunction;	a	FIXED_ORDER_FIELDS
	f	Ljava/util/Comparator;	b	KEY_COMPARATOR
	f	Lorg/slf4j/Logger;	c	LOGGER
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmr;Lcom/mojang/serialization/Codec;Lmv$a;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	saveAll
	m	(Lmr;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	saveAll
	m	(Lmr;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	saveAll
	m	(Lmr;Ljn$a;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
	m	(Lmr;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
	m	(Lmr;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
	m	(Lmr;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	saveStable
	m	(Lcom/google/gson/JsonElement;Lmr;Ljava/nio/file/Path;)V	a	lambda$saveStable$5
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$saveAll$4
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Lmr;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$saveAll$3
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lcom/google/gson/JsonElement;	a	lambda$saveAll$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	mt$a	net/minecraft/data/DataProvider$Factory
	m	(Lmv;)Lmt;	create	create
c	mu	net/minecraft/data/HashCache
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	HEADER_MARKER
	f	Ljava/nio/file/Path;	c	rootDir
	f	Ljava/nio/file/Path;	d	cacheDir
	f	Ljava/lang/String;	e	versionId
	f	Ljava/util/Map;	f	caches
	f	Ljava/util/Set;	g	cachesToWrite
	f	Ljava/util/Set;	h	cachePaths
	f	I	i	initialCount
	f	I	j	writes
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	b	getProviderCachePath
	m	(Ljava/nio/file/Path;Ljava/util/Collection;Lah;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lmu$b;	a	readCache
	m	(Ljava/lang/String;)Z	a	shouldRunInThisVersion
	m	(Ljava/lang/String;Lmu$d;)Ljava/util/concurrent/CompletableFuture;	a	generateUpdate
	m	(Lmu$e;)V	a	applyUpdate
	m	()V	a	purgeStaleAndWrite
	m	(Ljava/util/Set;Ljava/lang/String;Lmu$b;)V	a	lambda$purgeStaleAndWrite$1
	m	(Lmu$a;Ljava/lang/Object;)Lmu$e;	a	lambda$generateUpdate$0
	m	()V	<clinit>	<clinit>
c	mu$1	net/minecraft/data/HashCache$1
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	a	val$found
	f	Ljava/util/Set;	b	val$allowedFiles
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	c	val$removed
	f	Lmu;	d	this$0
	m	(Lmu;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Set;Lorg/apache/commons/lang3/mutable/MutableInt;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	visitFile	visitFile
c	mu$a	net/minecraft/data/HashCache$CacheUpdater
	f	Ljava/lang/String;	b	provider
	f	Lmu$b;	c	oldCache
	f	Lmu$c;	d	newCache
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	writes
	f	Z	f	closed
	m	(Ljava/lang/String;Ljava/lang/String;Lmu$b;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z	a	shouldWrite
	m	(Ljava/nio/file/Path;[BLcom/google/common/hash/HashCode;)V	writeIfNeeded	writeIfNeeded
	m	()Lmu$e;	a	close
c	mu$b	net/minecraft/data/HashCache$ProviderCache
	f	Ljava/lang/String;	a	version
	f	Lcom/google/common/collect/ImmutableMap;	b	data
	m	(Ljava/lang/String;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	get
	m	()I	a	count
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lmu$b;	a	load
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V	a	save
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	version
	m	()Lcom/google/common/collect/ImmutableMap;	c	data
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$load$0
c	mu$c	net/minecraft/data/HashCache$ProviderCacheBuilder
	f	Ljava/lang/String;	a	version
	f	Ljava/util/concurrent/ConcurrentMap;	b	data
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/concurrent/ConcurrentMap;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V	a	put
	m	()Lmu$b;	a	build
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	version
	m	()Ljava/util/concurrent/ConcurrentMap;	c	data
c	mu$d	net/minecraft/data/HashCache$UpdateFunction
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	update	update
c	mu$e	net/minecraft/data/HashCache$UpdateResult
	f	Ljava/lang/String;	a	providerId
	f	Lmu$b;	b	cache
	f	I	c	writes
	m	(Ljava/lang/String;Lmu$b;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	providerId
	m	()Lmu$b;	b	cache
	m	()I	c	writes
c	net/minecraft/data/Main	net/minecraft/data/Main
	m	()V	<init>	<init>
	m	([Ljava/lang/String;)V	main	main
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lmt$a;	a	bindRegistries
	m	(Lms;Ljava/util/Collection;ZZZ)V	a	addServerProviders
	m	(Lmv;)Loh;	a	lambda$addServerProviders$6
	m	(Lmv;)Loh;	b	lambda$addServerProviders$5
	m	(Lmv;)Loh;	c	lambda$addServerProviders$4
	m	(Ljava/util/Collection;Lmv;)Lpe;	a	lambda$addServerProviders$3
	m	(Ljava/util/Collection;Lmv;)Lpg;	b	lambda$addServerProviders$2
	m	(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;Lmv;)Lmt;	a	lambda$bindRegistries$1
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	lambda$main$0
c	mv	net/minecraft/data/PackOutput
	f	Ljava/nio/file/Path;	a	outputFolder
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/nio/file/Path;	a	getOutputFolder
	m	(Lmv$b;)Ljava/nio/file/Path;	a	getOutputFolder
	m	(Lmv$b;Ljava/lang/String;)Lmv$a;	a	createPathProvider
	m	(Lamd;)Lmv$a;	a	createRegistryElementsPathProvider
	m	(Lamd;)Lmv$a;	b	createRegistryTagsPathProvider
c	mv$a	net/minecraft/data/PackOutput$PathProvider
	f	Ljava/nio/file/Path;	a	root
	f	Ljava/lang/String;	b	kind
	m	(Lmv;Lmv$b;Ljava/lang/String;)V	<init>	<init>
	m	(Lame;Ljava/lang/String;)Ljava/nio/file/Path;	a	file
	m	(Lame;)Ljava/nio/file/Path;	a	json
	m	(Lamd;)Ljava/nio/file/Path;	a	json
c	mv$b	net/minecraft/data/PackOutput$Target
	f	Lmv$b;	a	DATA_PACK
	f	Lmv$b;	b	RESOURCE_PACK
	f	Lmv$b;	c	REPORTS
	f	Ljava/lang/String;	d	directory
	f	[Lmv$b;	e	$VALUES
	m	()[Lmv$b;	values	values
	m	(Ljava/lang/String;)Lmv$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()[Lmv$b;	a	$values
	m	()V	<clinit>	<clinit>
c	mw	net/minecraft/data/advancements/AdvancementProvider
	f	Lmv$a;	d	pathProvider
	f	Ljava/util/List;	e	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ljava/util/Set;Ljava/util/List;Lmr;Ljn$a;Laj;)V	a	lambda$run$0
c	mx	net/minecraft/data/advancements/AdvancementSubProvider
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
	m	(Ljava/lang/String;)Laj;	a	createPlaceholder
c	my	net/minecraft/data/advancements/package-info
c	mz	net/minecraft/data/advancements/packs/VanillaAdvancementProvider
	m	()V	<init>	<init>
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)Lmw;	a	create
c	na	net/minecraft/data/advancements/packs/VanillaAdventureAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	DISTANCE_FROM_BOTTOM_TO_TOP
	f	I	c	Y_COORDINATE_AT_TOP
	f	I	d	Y_COORDINATE_AT_BOTTOM
	f	I	e	BEDROCK_THICKNESS
	f	Ljava/util/Map;	f	EXCEPTIONS_BY_EXPECTED_CATEGORIES
	f	Ljava/util/List;	g	MOBS_TO_KILL
	m	()V	<init>	<init>
	m	(Lcx$d;Ljava/util/Optional;)Lar;	a	fireCountAndBystander
	m	(Lbz$a;Lcn$a;)Lar;	a	lookAtThroughItem
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
	m	(Laj;Ljava/util/function/Consumer;Ljm;Ljava/util/List;)Laj;	a	createMonsterHunterAdvancement
	m	(Ljm;Ldpz;)Lar;	a	placedBlockReadByComparator
	m	(Ljm;Ldpz;)Lar;	b	placedComparatorReadingBlock
	m	(Ljm;Lbae;)Lar;	a	placedBlockActivatesCreakingHeart
	m	(Lai$a;)Lai$a;	a	smithingWithStyle
	m	(Lai$a;)Lai$a;	b	craftingANewLook
	m	(Ljm;Lai$a;)Lai$a;	a	respectingTheRemnantsCriterions
	m	(Ljn$a;Ljava/util/function/Consumer;Laj;Ldol$a;)V	a	createAdventuringTime
	m	(Lai$a;Ljm;Ljava/util/List;)Lai$a;	a	addMobsToKill
	m	(Lai$a;Ljn$a;Ljava/util/List;)Lai$a;	a	addBiomes
	m	(Ljava/util/List;Ljn;)Ljava/util/List;	a	validateMobsToKill
	m	(Ljava/util/Map;Ljava/util/List;Lcap;Ljava/util/Set;)V	a	lambda$validateMobsToKill$11
	m	(Lai$a;Ljm;Lbzv;)V	a	lambda$addMobsToKill$10
	m	(Lai$a;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$respectingTheRemnantsCriterions$9
	m	(Lai$a;Lamd;)V	a	lambda$craftingANewLook$8
	m	(Lai$a;Lox$b;)V	a	lambda$smithingWithStyle$7
	m	(Ljava/util/Set;Lox$b;)Z	a	lambda$smithingWithStyle$6
	m	(I)[Lfgs$a;	a	lambda$placedBlockActivatesCreakingHeart$5
	m	(Ljm;Lbae;Ljh;)Lfgf$a;	a	lambda$placedBlockActivatesCreakingHeart$4
	m	(I)[Lfgs$a;	b	lambda$placedComparatorReadingBlock$3
	m	(Ljm;Ldpz;Ljh;)Lfgf$a;	a	lambda$placedComparatorReadingBlock$2
	m	(I)[Lfgs$a;	c	lambda$placedBlockReadByComparator$1
	m	(Ljm;Ljh;)Lfgs$a;	a	lambda$placedBlockReadByComparator$0
	m	()V	<clinit>	<clinit>
c	nb	net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements
	f	Ljava/util/List;	a	BREEDABLE_ANIMALS
	f	Ljava/util/List;	b	INDIRECTLY_BREEDABLE_ANIMALS
	f	[Ldcr;	d	FISH
	f	[Ldcr;	e	FISH_BUCKETS
	f	[Ldcr;	f	EDIBLE_ITEMS
	f	[Ldcr;	c	WAX_SCRAPING_TOOLS
	f	Ljava/util/Comparator;	g	HOLDER_KEY_COMPARATOR
	m	()V	<init>	<init>
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
	m	(Laj;Ljava/util/function/Consumer;Ljm;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Laj;	a	createBreedAllAnimalsAdvancement
	m	(Ljm;Ljm;Ljn;Lai$a;)Lai$a;	a	addLeashedFrogVariants
	m	(Ljn;)Ljava/util/stream/Stream;	a	sortedVariants
	m	(Lai$a;Ljm;)Lai$a;	a	addFood
	m	(Lai$a;Ljava/util/stream/Stream;Ljm;Ljava/util/stream/Stream;)Lai$a;	a	addBreedable
	m	(Lai$a;Ljm;)Lai$a;	b	addFishBuckets
	m	(Lai$a;Ljm;)Lai$a;	c	addFish
	m	(Lai$a;Ljn;)Lai$a;	a	addCatVariants
	m	(Lai$a;Ljn;)Lai$a;	b	addTamedWolfVariants
	m	(Lai$a;Ljl$c;)V	a	lambda$addTamedWolfVariants$5
	m	(Lai$a;Ljl$c;)V	b	lambda$addCatVariants$4
	m	(Lai$a;Ljm;Lbzv;)V	a	lambda$addBreedable$3
	m	(Lai$a;Ljm;Lbzv;)V	b	lambda$addBreedable$2
	m	(Lai$a;Ljm;Ljm;Ljl$c;)V	a	lambda$addLeashedFrogVariants$1
	m	(Ljl$c;)Lame;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	nc	net/minecraft/data/advancements/packs/VanillaNetherAdvancements
	m	()V	<init>	<init>
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
c	nd	net/minecraft/data/advancements/packs/VanillaStoryAdvancements
	m	()V	<init>	<init>
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
c	ne	net/minecraft/data/advancements/packs/VanillaTheEndAdvancements
	m	()V	<init>	<init>
	m	(Ljn$a;Ljava/util/function/Consumer;)V	a	generate
c	nf	net/minecraft/data/advancements/packs/package-info
c	ng	net/minecraft/data/info/BiomeParametersDumpReport
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/nio/file/Path;	e	topPath
	f	Ljava/util/concurrent/CompletableFuture;	f	registries
	f	Lcom/mojang/serialization/MapCodec;	g	ENTRY_CODEC
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Ljava/nio/file/Path;Lmr;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
	m	(Lame;)Ljava/nio/file/Path;	a	createPath
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	lambda$dumpValue$3
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$1
	m	(Ljava/util/List;Lmr;Lcom/mojang/serialization/DynamicOps;Ldol$a;Ldog$c;)V	a	lambda$run$0
	m	()V	<clinit>	<clinit>
c	nh	net/minecraft/data/info/BlockListReport
	f	Lmv;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmr;Ljava/nio/file/Path;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
	m	(Lamc;Lcom/google/gson/JsonObject;Ljl$c;)V	a	lambda$run$1
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;	a	lambda$run$0
c	ni	net/minecraft/data/info/CommandsReport
	f	Lmv;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmr;Ljava/nio/file/Path;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$0
c	nj	net/minecraft/data/info/DatapackStructureReport
	f	Lmv;	d	output
	f	Lnj$b;	e	PSEUDO_REGISTRY
	f	Lnj$b;	f	STABLE_DYNAMIC_REGISTRY
	f	Lnj$b;	g	UNSTABLE_DYNAMIC_REGISTRY
	f	Lnj$b;	h	BUILT_IN_REGISTRY
	f	Ljava/util/Map;	i	MANUAL_ENTRIES
	f	Ljava/util/Map;	j	NON_REGISTRY_ENTRIES
	f	Lcom/mojang/serialization/Codec;	k	REGISTRY_KEY_CODEC
	m	(Lmv;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/util/Map;Lamd;Lnj$b;)V	a	putIfNotPresent
	m	()Ljava/util/Map;	b	listRegistries
	m	(Ljava/util/Map;Lamd;Lnj$b;)V	b	lambda$listRegistries$3
	m	(Ljava/util/Map;Lalz$d;)V	a	lambda$listRegistries$2
	m	(Ljava/util/Map;Lalz$d;)V	b	lambda$listRegistries$1
	m	(Ljava/util/Map;Ljy;)V	a	lambda$listRegistries$0
	m	()V	<clinit>	<clinit>
c	nj$a	net/minecraft/data/info/DatapackStructureReport$CustomPackEntry
	f	Lnj$c;	b	format
	f	Lnj$b;	c	entry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lnj$c;Lnj$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lnj$c;	a	format
	m	()Lnj$b;	b	entry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	nj$b	net/minecraft/data/info/DatapackStructureReport$Entry
	f	Z	c	elements
	f	Z	d	tags
	f	Z	e	stable
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(ZZZ)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	elements
	m	()Z	b	tags
	m	()Z	c	stable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	nj$c	net/minecraft/data/info/DatapackStructureReport$Format
	f	Lnj$c;	a	STRUCTURE
	f	Lnj$c;	b	MCFUNCTION
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lnj$c;	e	$VALUES
	m	()[Lnj$c;	values	values
	m	(Ljava/lang/String;)Lnj$c;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lnj$c;	a	$values
	m	()V	<clinit>	<clinit>
c	nj$d	net/minecraft/data/info/DatapackStructureReport$Report
	f	Ljava/util/Map;	b	registries
	f	Ljava/util/Map;	c	others
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	registries
	m	()Ljava/util/Map;	b	others
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	nk	net/minecraft/data/info/ItemListReport
	f	Lmv;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmr;Ljava/nio/file/Path;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
	m	(Lamc;Lcom/google/gson/JsonObject;Ljl$c;)V	a	lambda$run$1
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	a	lambda$run$0
c	nl	net/minecraft/data/info/PacketReport
	f	Lmv;	d	output
	m	(Lmv;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Lcom/google/gson/JsonElement;	b	serializePackets
	m	()Ljava/lang/String;	a	getName
	m	(Lcom/google/gson/JsonObject;Lwe;Ljava/util/List;)V	a	lambda$serializePackets$2
	m	(Lcom/google/gson/JsonObject;Lwu$a;)V	a	lambda$serializePackets$1
	m	(Lcom/google/gson/JsonObject;Lzy;I)V	a	lambda$serializePackets$0
c	nm	net/minecraft/data/info/RegistryDumpReport
	f	Lmv;	d	output
	m	(Lmv;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Ljy;)Lcom/google/gson/JsonElement;	a	dumpRegistry
	m	()Ljava/lang/String;	a	getName
	m	(Ljy;Lcom/google/gson/JsonObject;Ljl$c;)V	a	lambda$dumpRegistry$1
	m	(Lcom/google/gson/JsonObject;Ljl$c;)V	a	lambda$run$0
c	nn	net/minecraft/data/info/package-info
c	no	net/minecraft/data/loot/BlockLootSubProvider
	f	Ljn$a;	a	registries
	f	Ljava/util/Set;	b	explosionResistant
	f	Lcyd;	c	enabledFeatures
	f	Ljava/util/Map;	d	map
	f	[F	e	NORMAL_LEAVES_SAPLING_CHANCES
	f	[F	f	NORMAL_LEAVES_STICK_CHANCES
	m	()Lfgs$a;	a	hasSilkTouch
	m	()Lfgs$a;	b	doesNotHaveSilkTouch
	m	()Lfgs$a;	c	hasShears
	m	()Lfgs$a;	f	hasShearsOrSilkTouch
	m	()Lfgs$a;	g	doesNotHaveShearsOrSilkTouch
	m	(Ljava/util/Set;Lcyd;Ljn$a;)V	<init>	<init>
	m	(Ljava/util/Set;Lcyd;Ljava/util/Map;Ljn$a;)V	<init>	<init>
	m	(Ldmt;Lfet;)Lfet;	a	applyExplosionDecay
	m	(Ldmt;Lfgk;)Lfgk;	a	applyExplosionCondition
	m	(Ldmt;)Lfdo$a;	a	createSingleItemTable
	m	(Ldpz;Lfgs$a;Lfdz$a;)Lfdo$a;	a	createSelfDropDispatchTable
	m	(Ldpz;Lfdz$a;)Lfdo$a;	a	createSilkTouchDispatchTable
	m	(Ldpz;Lfdz$a;)Lfdo$a;	b	createShearsDispatchTable
	m	(Ldpz;Lfdz$a;)Lfdo$a;	c	createSilkTouchOrShearsDispatchTable
	m	(Ldpz;Ldmt;)Lfdo$a;	a	createSingleItemTableWithSilkTouch
	m	(Ldmt;Lfho;)Lfdo$a;	a	createSingleItemTable
	m	(Ldpz;Ldmt;Lfho;)Lfdo$a;	a	createSingleItemTableWithSilkTouch
	m	(Ldmt;)Lfdo$a;	d	createSilkTouchOnlyTable
	m	(Ldmt;)Lfdo$a;	e	createPotFlowerItemTable
	m	(Ldpz;)Lfdo$a;	a	createSlabItemTable
	m	(Ldpz;Lefe;Ljava/lang/Comparable;)Lfdo$a;	a	createSinglePropConditionTable
	m	(Ldpz;)Lfdo$a;	b	createNameableBlockEntityTable
	m	(Ldpz;)Lfdo$a;	c	createShulkerBoxDrop
	m	(Ldpz;)Lfdo$a;	d	createCopperOreDrops
	m	(Ldpz;)Lfdo$a;	e	createLapisOreDrops
	m	(Ldpz;)Lfdo$a;	f	createRedstoneOreDrops
	m	(Ldpz;)Lfdo$a;	g	createBannerDrop
	m	(Ldpz;)Lfdo$a;	h	createBeeNestDrop
	m	(Ldpz;)Lfdo$a;	i	createBeeHiveDrop
	m	(Ldpz;)Lfdo$a;	j	createCaveVinesDrop
	m	(Ldpz;Ldcr;)Lfdo$a;	a	createOreDrop
	m	(Ldpz;Ldmt;)Lfdo$a;	b	createMushroomBlockDrop
	m	(Ldpz;)Lfdo$a;	k	createGrassDrops
	m	(Ldpz;Ldcr;)Lfdo$a;	b	createStemDrops
	m	(Ldpz;Ldcr;)Lfdo$a;	c	createAttachedStemDrops
	m	(Ldmt;)Lfdo$a;	b	createShearsOnlyDrop
	m	(Ldmt;)Lfdo$a;	c	createShearsOrSilkTouchOnlyDrop
	m	(Ldpz;Lfgs$a;)Lfdo$a;	a	createMultifaceBlockDrops
	m	(Ldpz;)Lfdo$a;	l	createMultifaceBlockDrops
	m	(Ldpz;)Lfdo$a;	m	createMossyCarpetBlockDrops
	m	(Ldpz;Ldpz;[F)Lfdo$a;	a	createLeavesDrops
	m	(Ldpz;Ldpz;[F)Lfdo$a;	b	createOakLeavesDrops
	m	(Ldpz;)Lfdo$a;	n	createMangroveLeavesDrops
	m	(Ldpz;Ldcr;Ldcr;Lfgs$a;)Lfdo$a;	a	createCropDrops
	m	(Ldpz;)Lfdo$a;	o	createDoublePlantShearsDrop
	m	(Ldpz;Ldpz;)Lfdo$a;	a	createDoublePlantWithSeedDrops
	m	(Ldpz;)Lfdo$a;	p	createCandleDrops
	m	(Ldpz;)Lfdo$a;	q	createSegmentedBlockDrops
	m	(Ldpz;)Lfdo$a;	r	createCandleCakeDrops
	m	()Lfdo$a;	d	noDrop
	m	()V	e	generate
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	(Ldpz;Ldpz;)V	b	addNetherVinesDropTable
	m	(Ldpz;)Lfdo$a;	s	createDoorTable
	m	(Ldpz;)V	t	dropPottedContents
	m	(Ldpz;Ldpz;)V	c	otherWhenSilkTouch
	m	(Ldpz;Ldmt;)V	c	dropOther
	m	(Ldpz;)V	u	dropWhenSilkTouch
	m	(Ldpz;)V	v	dropSelf
	m	(Ldpz;Ljava/util/function/Function;)V	a	add
	m	(Ldpz;Lfdo$a;)V	a	add
	m	(Ldpz;)Ljava/lang/IllegalStateException;	w	lambda$add$7
	m	(Ldpz;)Lfdo$a;	x	lambda$dropPottedContents$6
	m	(Ljava/util/Set;Ldpz;Ljava/util/function/BiConsumer;Lamd;)V	a	lambda$generate$5
	m	(Ldpz;Ldxh;Ljava/lang/Integer;)Lfex$a;	a	lambda$createSegmentedBlockDrops$4
	m	(Ldpz;Ljava/lang/Integer;)Lfex$a;	a	lambda$createCandleDrops$3
	m	(Ldpz;Ljh;)Lfex$a;	a	lambda$createMultifaceBlockDrops$2
	m	(Ldpz;Ljh;)Lfex$a;	b	lambda$createMultifaceBlockDrops$1
	m	(Ldpz;Ljava/lang/Integer;)Lfex$a;	b	lambda$createStemDrops$0
	m	()V	<clinit>	<clinit>
c	np	net/minecraft/data/loot/EntityLootSubProvider
	f	Ljn$a;	a	registries
	f	Lcyd;	b	allowed
	f	Lcyd;	c	required
	f	Ljava/util/Map;	d	map
	m	()Lfgg$a;	a	shouldSmeltLoot
	m	(Lcyd;Ljn$a;)V	<init>	<init>
	m	(Lcyd;Lcyd;Ljn$a;)V	<init>	<init>
	m	(Ljava/util/Map;)Lfdn$a;	a	createSheepDispatchPool
	m	()V	b	generate
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	(Ljm;)Lfgs$a;	a	killedByFrog
	m	(Ljm;Ljm;Lamd;)Lfgs$a;	a	killedByFrogVariant
	m	(Lbzv;Lfdo$a;)V	a	add
	m	(Lbzv;Lamd;Lfdo$a;)V	a	add
	m	(Lbzv;)Ljava/util/Map;	a	lambda$add$4
	m	(Lbzv;)Ljava/lang/IllegalStateException;	b	lambda$add$3
	m	(Ljava/util/Set;Ljava/util/function/BiConsumer;Ljl$c;)V	a	lambda$generate$2
	m	(Lamd;)Ljava/lang/String;	a	lambda$generate$1
	m	(Ljava/util/Set;Ljl$c;Ljava/util/function/BiConsumer;Lamd;Lfdo$a;)V	a	lambda$generate$0
c	nq	net/minecraft/data/loot/LootTableProvider
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lmv$a;	e	pathProvider
	f	Ljava/util/Set;	f	requiredTables
	f	Ljava/util/List;	g	subProviders
	f	Ljava/util/concurrent/CompletableFuture;	h	registries
	m	(Lmv;Ljava/util/Set;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Lamd;)Lame;	a	sequenceIdForLootTable
	m	()Ljava/lang/String;	a	getName
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Lmr;Ljn$a;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
	m	(Ljava/lang/String;Lbci$g;)V	a	lambda$run$4
	m	(Lfdp;Ljl$c;)V	a	lambda$run$3
	m	(Ljn$a;Ljava/util/Map;Lkh;Lnq$b;)V	a	lambda$run$2
	m	(Ljava/util/Map;Lnq$b;Lkh;Lamd;Lfdo$a;)V	a	lambda$run$1
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletionStage;	b	lambda$run$0
	m	()V	<clinit>	<clinit>
c	nq$a	net/minecraft/data/loot/LootTableProvider$MissingTableProblem
	f	Lamd;	a	id
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	id
c	nq$b	net/minecraft/data/loot/LootTableProvider$SubProviderEntry
	f	Ljava/util/function/Function;	a	provider
	f	Lbdo;	b	paramSet
	m	(Ljava/util/function/Function;Lbdo;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/Function;	a	provider
	m	()Lbdo;	b	paramSet
c	nr	net/minecraft/data/loot/LootTableSubProvider
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
c	ns	net/minecraft/data/loot/package-info
c	nt	net/minecraft/data/loot/packs/LootData
	f	Ljava/util/Map;	a	WOOL_ITEM_BY_DYE
	m	()V	<clinit>	<clinit>
c	nu	net/minecraft/data/loot/packs/TradeRebalanceChestLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Lfdo$a;	a	pillagerOutpostLootTable
	m	()Lfdo$a;	b	desertPyramidLootTable
	m	()Lfdo$a;	c	ancientCityLootTable
	m	()Lfdo$a;	d	jungleTempleLootTable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	e	registries
c	nv	net/minecraft/data/loot/packs/TradeRebalanceLootTableProvider
	m	()V	<init>	<init>
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)Lnq;	a	create
c	nw	net/minecraft/data/loot/packs/VanillaArchaeologyLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	registries
c	nx	net/minecraft/data/loot/packs/VanillaBlockLoot
	f	[F	f	JUNGLE_LEAVES_SAPLING_CHANGES
	f	Ljava/util/Set;	g	EXPLOSION_RESISTANT
	m	(Ljn$a;)V	<init>	<init>
	m	()V	e	generate
	m	(Ldpz;)Lfdo$a;	w	createDecoratedPotTable
	m	()Lfdo$a;	f	createPitcherCropLoot
	m	(Ljava/lang/Integer;)Lfdz$a;	a	lambda$createPitcherCropLoot$260
	m	(Ljn$b;Ljn$b;Ldpz;)Lfdo$a;	a	lambda$generate$259
	m	(Ldpz;)Lfdo$a;	x	lambda$generate$258
	m	(Ljn$b;Ldpz;)Lfdo$a;	a	lambda$generate$257
	m	(Ldpz;)Lfdo$a;	y	lambda$generate$256
	m	(Ljn$b;Ldpz;)Lfdo$a;	b	lambda$generate$255
	m	(Ldpz;)Lfdo$a;	z	lambda$generate$254
	m	(Ldpz;Ljava/lang/Integer;)Lfdz$a;	a	lambda$generate$253
	m	(Ldpz;Ljava/lang/Integer;)Lfdz$a;	b	lambda$generate$252
	m	(Ljn$b;Ldpz;)Lfdo$a;	c	lambda$generate$251
	m	(Ljn$b;Ldpz;)Lfdo$a;	d	lambda$generate$250
	m	(Ljn$b;Ldpz;)Lfdo$a;	e	lambda$generate$249
	m	(Lnx;Ldpz;)Lfdo$a;	a	lambda$generate$248
	m	(Lnx;Ldpz;)Lfdo$a;	b	lambda$generate$247
	m	(Ljn$b;Ldpz;)Lfdo$a;	f	lambda$generate$246
	m	(Ljn$b;Ldpz;)Lfdo$a;	g	lambda$generate$245
	m	(Lnx;Ldpz;)Lfdo$a;	c	lambda$generate$244
	m	(Lnx;Ldpz;)Lfdo$a;	d	lambda$generate$243
	m	(Ldpz;)Lfdo$a;	A	lambda$generate$242
	m	(Ldpz;)Lfdo$a;	B	lambda$generate$241
	m	(Ldpz;)Lfdo$a;	C	lambda$generate$240
	m	(Ldpz;)Lfdo$a;	D	lambda$generate$239
	m	(Ldpz;)Lfdo$a;	E	lambda$generate$238
	m	(Ldpz;)Lfdo$a;	F	lambda$generate$237
	m	(Ldpz;)Lfdo$a;	G	lambda$generate$236
	m	(Lnx;Ldpz;)Lfdo$a;	e	lambda$generate$235
	m	(Lnx;Ldmt;)Lfdo$a;	a	lambda$generate$234
	m	(Lnx;Ldmt;)Lfdo$a;	b	lambda$generate$233
	m	(Lnx;Ldpz;)Lfdo$a;	f	lambda$generate$232
	m	(Ldpz;)Lfdo$a;	H	lambda$generate$231
	m	(Lnx;Ldmt;)Lfdo$a;	c	lambda$generate$230
	m	(Lnx;Ldmt;)Lfdo$a;	d	lambda$generate$229
	m	(Lnx;Ldmt;)Lfdo$a;	e	lambda$generate$228
	m	(Lnx;Ldmt;)Lfdo$a;	f	lambda$generate$227
	m	(Lnx;Ldmt;)Lfdo$a;	g	lambda$generate$226
	m	(Lnx;Ldmt;)Lfdo$a;	h	lambda$generate$225
	m	(Ldpz;)Lfdo$a;	I	lambda$generate$224
	m	(Ldpz;)Lfdo$a;	J	lambda$generate$223
	m	(Lnx;Ldpz;)Lfdo$a;	g	lambda$generate$222
	m	(Lnx;Ldpz;)Lfdo$a;	h	lambda$generate$221
	m	(Ljn$b;Ldpz;)Lfdo$a;	h	lambda$generate$220
	m	(Ldpz;)Lfdo$a;	K	lambda$generate$219
	m	(Ldpz;)Lfdo$a;	L	lambda$generate$218
	m	(Ldpz;)Lfdo$a;	M	lambda$generate$217
	m	(Ldpz;)Lfdo$a;	N	lambda$generate$216
	m	(Lnx;Ldpz;)Lfdo$a;	i	lambda$generate$215
	m	(Lnx;Ldpz;)Lfdo$a;	j	lambda$generate$214
	m	(Ldpz;)Lfdo$a;	O	lambda$generate$213
	m	(Ldpz;)Lfdo$a;	P	lambda$generate$212
	m	(Ldpz;)Lfdo$a;	Q	lambda$generate$211
	m	(Ldpz;)Lfdo$a;	R	lambda$generate$210
	m	(Ldpz;)Lfdo$a;	S	lambda$generate$209
	m	(Ldpz;)Lfdo$a;	T	lambda$generate$208
	m	(Ldpz;)Lfdo$a;	U	lambda$generate$207
	m	(Ldpz;)Lfdo$a;	V	lambda$generate$206
	m	(Ldpz;)Lfdo$a;	W	lambda$generate$205
	m	(Ljn$b;Ldpz;)Lfdo$a;	i	lambda$generate$204
	m	(Ldpz;)Lfdo$a;	X	lambda$generate$203
	m	(Ldpz;)Lfdo$a;	Y	lambda$generate$202
	m	(Ldpz;)Lfdo$a;	Z	lambda$generate$201
	m	(Ldpz;)Lfdo$a;	aa	lambda$generate$200
	m	(Ldpz;)Lfdo$a;	ab	lambda$generate$199
	m	(Ldpz;)Lfdo$a;	ac	lambda$generate$198
	m	(Ldpz;)Lfdo$a;	ad	lambda$generate$197
	m	(Ldpz;)Lfdo$a;	ae	lambda$generate$196
	m	(Ldpz;)Lfdo$a;	af	lambda$generate$195
	m	(Ldpz;)Lfdo$a;	ag	lambda$generate$194
	m	(Ldpz;)Lfdo$a;	ah	lambda$generate$193
	m	(Lnx;Ldpz;)Lfdo$a;	k	lambda$generate$192
	m	(Lnx;Ldpz;)Lfdo$a;	l	lambda$generate$191
	m	(Ldpz;)Lfdo$a;	ai	lambda$generate$190
	m	(Lnx;Ldpz;)Lfdo$a;	m	lambda$generate$189
	m	(Lnx;Ldpz;)Lfdo$a;	n	lambda$generate$188
	m	(Lnx;Ldpz;)Lfdo$a;	o	lambda$generate$187
	m	(Lnx;Ldpz;)Lfdo$a;	p	lambda$generate$186
	m	(Lnx;Ldpz;)Lfdo$a;	q	lambda$generate$185
	m	(Lnx;Ldpz;)Lfdo$a;	r	lambda$generate$184
	m	(Lnx;Ldpz;)Lfdo$a;	s	lambda$generate$183
	m	(Lnx;Ldpz;)Lfdo$a;	t	lambda$generate$182
	m	(Lnx;Ldpz;)Lfdo$a;	u	lambda$generate$181
	m	(Lnx;Ldpz;)Lfdo$a;	v	lambda$generate$180
	m	(Lnx;Ldpz;)Lfdo$a;	w	lambda$generate$179
	m	(Lnx;Ldpz;)Lfdo$a;	x	lambda$generate$178
	m	(Lnx;Ldpz;)Lfdo$a;	y	lambda$generate$177
	m	(Lnx;Ldpz;)Lfdo$a;	z	lambda$generate$176
	m	(Lnx;Ldpz;)Lfdo$a;	A	lambda$generate$175
	m	(Lnx;Ldpz;)Lfdo$a;	B	lambda$generate$174
	m	(Lnx;Ldpz;)Lfdo$a;	C	lambda$generate$173
	m	(Lnx;Ldpz;)Lfdo$a;	D	lambda$generate$172
	m	(Lnx;Ldpz;)Lfdo$a;	E	lambda$generate$171
	m	(Lnx;Ldpz;)Lfdo$a;	F	lambda$generate$170
	m	(Lnx;Ldpz;)Lfdo$a;	G	lambda$generate$169
	m	(Lnx;Ldpz;)Lfdo$a;	H	lambda$generate$168
	m	(Lnx;Ldpz;)Lfdo$a;	I	lambda$generate$167
	m	(Lnx;Ldpz;)Lfdo$a;	J	lambda$generate$166
	m	(Lnx;Ldpz;)Lfdo$a;	K	lambda$generate$165
	m	(Lnx;Ldpz;)Lfdo$a;	L	lambda$generate$164
	m	(Lnx;Ldpz;)Lfdo$a;	M	lambda$generate$163
	m	(Lnx;Ldpz;)Lfdo$a;	N	lambda$generate$162
	m	(Lnx;Ldpz;)Lfdo$a;	O	lambda$generate$161
	m	(Lnx;Ldpz;)Lfdo$a;	P	lambda$generate$160
	m	(Lnx;Ldpz;)Lfdo$a;	Q	lambda$generate$159
	m	(Lnx;Ldpz;)Lfdo$a;	R	lambda$generate$158
	m	(Lnx;Ldpz;)Lfdo$a;	S	lambda$generate$157
	m	(Lnx;Ldpz;)Lfdo$a;	T	lambda$generate$156
	m	(Lnx;Ldpz;)Lfdo$a;	U	lambda$generate$155
	m	(Lnx;Ldpz;)Lfdo$a;	V	lambda$generate$154
	m	(Lnx;Ldpz;)Lfdo$a;	W	lambda$generate$153
	m	(Lnx;Ldpz;)Lfdo$a;	X	lambda$generate$152
	m	(Lnx;Ldpz;)Lfdo$a;	Y	lambda$generate$151
	m	(Lnx;Ldpz;)Lfdo$a;	Z	lambda$generate$150
	m	(Lnx;Ldpz;)Lfdo$a;	aa	lambda$generate$149
	m	(Lnx;Ldpz;)Lfdo$a;	ab	lambda$generate$148
	m	(Lnx;Ldpz;)Lfdo$a;	ac	lambda$generate$147
	m	(Lnx;Ldpz;)Lfdo$a;	ad	lambda$generate$146
	m	(Lnx;Ldpz;)Lfdo$a;	ae	lambda$generate$145
	m	(Lnx;Ldpz;)Lfdo$a;	af	lambda$generate$144
	m	(Lnx;Ldpz;)Lfdo$a;	ag	lambda$generate$143
	m	(Lnx;Ldpz;)Lfdo$a;	ah	lambda$generate$142
	m	(Lnx;Ldpz;)Lfdo$a;	ai	lambda$generate$141
	m	(Lnx;Ldpz;)Lfdo$a;	aj	lambda$generate$140
	m	(Lnx;Ldpz;)Lfdo$a;	ak	lambda$generate$139
	m	(Lnx;Ldpz;)Lfdo$a;	al	lambda$generate$138
	m	(Lnx;Ldpz;)Lfdo$a;	am	lambda$generate$137
	m	(Lnx;Ldpz;)Lfdo$a;	an	lambda$generate$136
	m	(Lnx;Ldpz;)Lfdo$a;	ao	lambda$generate$135
	m	(Lnx;Ldpz;)Lfdo$a;	ap	lambda$generate$134
	m	(Lnx;Ldpz;)Lfdo$a;	aq	lambda$generate$133
	m	(Lnx;Ldpz;)Lfdo$a;	ar	lambda$generate$132
	m	(Lnx;Ldpz;)Lfdo$a;	as	lambda$generate$131
	m	(Lnx;Ldpz;)Lfdo$a;	at	lambda$generate$130
	m	(Lnx;Ldpz;)Lfdo$a;	au	lambda$generate$129
	m	(Lnx;Ldpz;)Lfdo$a;	av	lambda$generate$128
	m	(Lnx;Ldpz;)Lfdo$a;	aw	lambda$generate$127
	m	(Lnx;Ldpz;)Lfdo$a;	ax	lambda$generate$126
	m	(Ldpz;)Lfdo$a;	aj	lambda$generate$125
	m	(Ldpz;)Lfdo$a;	ak	lambda$generate$124
	m	(Ldpz;Ljava/lang/Integer;)Lfex$a;	c	lambda$generate$123
	m	(Ldpz;)Lfdo$a;	al	lambda$generate$122
	m	(Ldpz;)Lfdo$a;	am	lambda$generate$121
	m	(Ldpz;)Lfdo$a;	an	lambda$generate$120
	m	(Ldpz;)Lfdo$a;	ao	lambda$generate$119
	m	(Ldpz;)Lfdo$a;	ap	lambda$generate$118
	m	(Ldpz;)Lfdo$a;	aq	lambda$generate$117
	m	(Ldpz;)Lfdo$a;	ar	lambda$generate$116
	m	(Ldpz;)Lfdo$a;	as	lambda$generate$115
	m	(Ldpz;)Lfdo$a;	at	lambda$generate$114
	m	(Ldpz;)Lfdo$a;	au	lambda$generate$113
	m	(Ldpz;)Lfdo$a;	av	lambda$generate$112
	m	(Ldpz;)Lfdo$a;	aw	lambda$generate$111
	m	(Ldpz;)Lfdo$a;	ax	lambda$generate$110
	m	(Ldpz;)Lfdo$a;	ay	lambda$generate$109
	m	(Ldpz;)Lfdo$a;	az	lambda$generate$108
	m	(Ldpz;)Lfdo$a;	aA	lambda$generate$107
	m	(Ldpz;)Lfdo$a;	aB	lambda$generate$106
	m	(Ldpz;)Lfdo$a;	aC	lambda$generate$105
	m	(Ldpz;)Lfdo$a;	aD	lambda$generate$104
	m	(Ldpz;)Lfdo$a;	aE	lambda$generate$103
	m	(Ldpz;)Lfdo$a;	aF	lambda$generate$102
	m	(Lnx;Ldpz;)Lfdo$a;	ay	lambda$generate$101
	m	(Lnx;Ldpz;)Lfdo$a;	az	lambda$generate$100
	m	(Lnx;Ldpz;)Lfdo$a;	aA	lambda$generate$99
	m	(Lnx;Ldpz;)Lfdo$a;	aB	lambda$generate$98
	m	(Lnx;Ldpz;)Lfdo$a;	aC	lambda$generate$97
	m	(Lnx;Ldpz;)Lfdo$a;	aD	lambda$generate$96
	m	(Lnx;Ldpz;)Lfdo$a;	aE	lambda$generate$95
	m	(Lnx;Ldpz;)Lfdo$a;	aF	lambda$generate$94
	m	(Lnx;Ldpz;)Lfdo$a;	aG	lambda$generate$93
	m	(Lnx;Ldpz;)Lfdo$a;	aH	lambda$generate$92
	m	(Lnx;Ldpz;)Lfdo$a;	aI	lambda$generate$91
	m	(Lnx;Ldpz;)Lfdo$a;	aJ	lambda$generate$90
	m	(Lnx;Ldpz;)Lfdo$a;	aK	lambda$generate$89
	m	(Lnx;Ldpz;)Lfdo$a;	aL	lambda$generate$88
	m	(Lnx;Ldpz;)Lfdo$a;	aM	lambda$generate$87
	m	(Lnx;Ldpz;)Lfdo$a;	aN	lambda$generate$86
	m	(Lnx;Ldpz;)Lfdo$a;	aO	lambda$generate$85
	m	(Lnx;Ldpz;)Lfdo$a;	aP	lambda$generate$84
	m	(Lnx;Ldpz;)Lfdo$a;	aQ	lambda$generate$83
	m	(Lnx;Ldpz;)Lfdo$a;	aR	lambda$generate$82
	m	(Lnx;Ldpz;)Lfdo$a;	aS	lambda$generate$81
	m	(Lnx;Ldpz;)Lfdo$a;	aT	lambda$generate$80
	m	(Lnx;Ldpz;)Lfdo$a;	aU	lambda$generate$79
	m	(Lnx;Ldpz;)Lfdo$a;	aV	lambda$generate$78
	m	(Lnx;Ldpz;)Lfdo$a;	aW	lambda$generate$77
	m	(Lnx;Ldpz;)Lfdo$a;	aX	lambda$generate$76
	m	(Lnx;Ldpz;)Lfdo$a;	aY	lambda$generate$75
	m	(Lnx;Ldpz;)Lfdo$a;	aZ	lambda$generate$74
	m	(Lnx;Ldpz;)Lfdo$a;	ba	lambda$generate$73
	m	(Lnx;Ldpz;)Lfdo$a;	bb	lambda$generate$72
	m	(Lnx;Ldpz;)Lfdo$a;	bc	lambda$generate$71
	m	(Lnx;Ldpz;)Lfdo$a;	bd	lambda$generate$70
	m	(Lnx;Ldpz;)Lfdo$a;	be	lambda$generate$69
	m	(Lnx;Ldpz;)Lfdo$a;	bf	lambda$generate$68
	m	(Lnx;Ldpz;)Lfdo$a;	bg	lambda$generate$67
	m	(Lnx;Ldpz;)Lfdo$a;	bh	lambda$generate$66
	m	(Lnx;Ldpz;)Lfdo$a;	bi	lambda$generate$65
	m	(Lnx;Ldpz;)Lfdo$a;	bj	lambda$generate$64
	m	(Lnx;Ldpz;)Lfdo$a;	bk	lambda$generate$63
	m	(Lnx;Ldpz;)Lfdo$a;	bl	lambda$generate$62
	m	(Lnx;Ldpz;)Lfdo$a;	bm	lambda$generate$61
	m	(Lnx;Ldpz;)Lfdo$a;	bn	lambda$generate$60
	m	(Lnx;Ldpz;)Lfdo$a;	bo	lambda$generate$59
	m	(Lnx;Ldpz;)Lfdo$a;	bp	lambda$generate$58
	m	(Lnx;Ldpz;)Lfdo$a;	bq	lambda$generate$57
	m	(Lnx;Ldpz;)Lfdo$a;	br	lambda$generate$56
	m	(Lnx;Ldpz;)Lfdo$a;	bs	lambda$generate$55
	m	(Lnx;Ldpz;)Lfdo$a;	bt	lambda$generate$54
	m	(Lnx;Ldpz;)Lfdo$a;	bu	lambda$generate$53
	m	(Lnx;Ldpz;)Lfdo$a;	bv	lambda$generate$52
	m	(Lnx;Ldpz;)Lfdo$a;	bw	lambda$generate$51
	m	(Lnx;Ldpz;)Lfdo$a;	bx	lambda$generate$50
	m	(Lnx;Ldpz;)Lfdo$a;	by	lambda$generate$49
	m	(Lnx;Ldpz;)Lfdo$a;	bz	lambda$generate$48
	m	(Lnx;Ldpz;)Lfdo$a;	bA	lambda$generate$47
	m	(Lnx;Ldpz;)Lfdo$a;	bB	lambda$generate$46
	m	(Lnx;Ldpz;)Lfdo$a;	bC	lambda$generate$45
	m	(Lnx;Ldpz;)Lfdo$a;	bD	lambda$generate$44
	m	(Lnx;Ldpz;)Lfdo$a;	bE	lambda$generate$43
	m	(Lnx;Ldpz;)Lfdo$a;	bF	lambda$generate$42
	m	(Lnx;Ldpz;)Lfdo$a;	bG	lambda$generate$41
	m	(Lnx;Ldpz;)Lfdo$a;	bH	lambda$generate$40
	m	(Lnx;Ldpz;)Lfdo$a;	bI	lambda$generate$39
	m	(Lnx;Ldpz;)Lfdo$a;	bJ	lambda$generate$38
	m	(Lnx;Ldpz;)Lfdo$a;	bK	lambda$generate$37
	m	(Lnx;Ldpz;)Lfdo$a;	bL	lambda$generate$36
	m	(Lnx;Ldpz;)Lfdo$a;	bM	lambda$generate$35
	m	(Lnx;Ldpz;)Lfdo$a;	bN	lambda$generate$34
	m	(Lnx;Ldpz;)Lfdo$a;	bO	lambda$generate$33
	m	(Lnx;Ldpz;)Lfdo$a;	bP	lambda$generate$32
	m	(Lnx;Ldpz;)Lfdo$a;	bQ	lambda$generate$31
	m	(Lnx;Ldpz;)Lfdo$a;	bR	lambda$generate$30
	m	(Lnx;Ldpz;)Lfdo$a;	bS	lambda$generate$29
	m	(Lnx;Ldpz;)Lfdo$a;	bT	lambda$generate$28
	m	(Lnx;Ldpz;)Lfdo$a;	bU	lambda$generate$27
	m	(Lnx;Ldpz;)Lfdo$a;	bV	lambda$generate$26
	m	(Lnx;Ldpz;)Lfdo$a;	bW	lambda$generate$25
	m	(Lnx;Ldpz;)Lfdo$a;	bX	lambda$generate$24
	m	(Lnx;Ldpz;)Lfdo$a;	bY	lambda$generate$23
	m	(Lnx;Ldpz;)Lfdo$a;	bZ	lambda$generate$22
	m	(Ldpz;)Lfdo$a;	aG	lambda$generate$21
	m	(Ldpz;)Lfdo$a;	aH	lambda$generate$20
	m	(Ldpz;)Lfdo$a;	aI	lambda$generate$19
	m	(Ldpz;)Lfdo$a;	aJ	lambda$generate$18
	m	(Ldpz;)Lfdo$a;	aK	lambda$generate$17
	m	(Ldpz;)Lfdo$a;	aL	lambda$generate$16
	m	(Ldpz;)Lfdo$a;	aM	lambda$generate$15
	m	(Ldpz;)Lfdo$a;	aN	lambda$generate$14
	m	(Ldpz;)Lfdo$a;	aO	lambda$generate$13
	m	(Ldpz;)Lfdo$a;	aP	lambda$generate$12
	m	(Ldpz;)Lfdo$a;	aQ	lambda$generate$11
	m	(Ldpz;)Lfdo$a;	aR	lambda$generate$10
	m	(Ldpz;)Lfdo$a;	aS	lambda$generate$9
	m	(Ldpz;)Lfdo$a;	aT	lambda$generate$8
	m	(Ldpz;)Lfdo$a;	aU	lambda$generate$7
	m	(Ldpz;)Lfdo$a;	aV	lambda$generate$6
	m	(Lnx;Ldpz;)Lfdo$a;	ca	lambda$generate$5
	m	(Lnx;Ldpz;)Lfdo$a;	cb	lambda$generate$4
	m	(Lnx;Ldpz;)Lfdo$a;	cc	lambda$generate$3
	m	(Lnx;Ldmt;)Lfdo$a;	i	lambda$generate$2
	m	(Lnx;Ldpz;)Lfdo$a;	cd	lambda$generate$1
	m	(Ldpz;)Lfdo$a;	aW	lambda$generate$0
	m	()V	<clinit>	<clinit>
c	ny	net/minecraft/data/loot/packs/VanillaChestLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	(Ljava/util/function/BiConsumer;)V	a	spawnerLootTables
	m	()Lfdo$a;	a	shipwreckSupplyLootTable
	m	()Lfdo$a;	b	shipwreckMapLootTable
	m	()Lfdo$a;	c	bastionHoglinStableLootTable
	m	()Lfdo$a;	d	bastionBridgeLootTable
	m	()Lfdo$a;	e	endCityTreasureLootTable
	m	()Lfdo$a;	f	netherBridgeLootTable
	m	()Lfdo$a;	g	bastionTreasureLootTable
	m	()Lfdo$a;	h	bastionOtherLootTable
	m	()Lfdo$a;	i	woodlandMansionLootTable
	m	()Lfdo$a;	j	strongholdLibraryLootTable
	m	()Lfdo$a;	k	strongholdCorridorLootTable
	m	()Lfdo$a;	l	ancientCityLootTable
	m	()Lfdo$a;	m	jungleTempleLootTable
	m	()Lfdo$a;	n	shipwreckTreasureLootTable
	m	()Lfdo$a;	o	pillagerOutpostLootTable
	m	()Lfdo$a;	p	desertPyramidLootTable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	q	registries
c	nz	net/minecraft/data/loot/packs/VanillaEntityLoot
	m	(Ljn$a;)V	<init>	<init>
	m	()V	b	generate
	m	()Lfdo$a;	c	elderGuardianLootTable
	m	(Ldbt;Ldmt;)V	a	lambda$generate$0
c	oa	net/minecraft/data/loot/packs/VanillaEquipmentLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	(Ldcr;Ldcr;Ldlg;Ljn$b;)Lfdo$a;	a	trialChamberEquipment
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	registries
c	ob	net/minecraft/data/loot/packs/VanillaFishingLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Lfdo$a;	a	fishingFishLootTable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	b	registries
c	oc	net/minecraft/data/loot/packs/VanillaGiftLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	registries
c	od	net/minecraft/data/loot/packs/VanillaLootTableProvider
	m	()V	<init>	<init>
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)Lnq;	a	create
c	oe	net/minecraft/data/loot/packs/VanillaPiglinBarterLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	registries
c	of	net/minecraft/data/loot/packs/VanillaShearingLoot
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	generate	generate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	registries
	m	(Ljava/util/function/BiConsumer;Ldbt;Ldmt;)V	a	lambda$generate$0
c	og	net/minecraft/data/loot/packs/package-info
c	oh	net/minecraft/data/metadata/PackMetadataGenerator
	f	Lmv;	d	output
	f	Ljava/util/Map;	e	elements
	m	(Lmv;)V	<init>	<init>
	m	(Lawo;Ljava/lang/Object;)Loh;	a	add
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Lmv;Lxo;)Loh;	a	forFeaturePack
	m	(Lmv;Lxo;Lcyd;)Loh;	a	forFeaturePack
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/util/function/Supplier;)V	a	lambda$run$1
	m	(Lawo;Ljava/lang/Object;)Lcom/google/gson/JsonElement;	b	lambda$add$0
c	oi	net/minecraft/data/metadata/package-info
c	oj	net/minecraft/data/package-info
c	ok	net/minecraft/data/recipes/RecipeBuilder
	f	Lame;	a	ROOT_RECIPE_ADVANCEMENT
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
	m	(Ljava/lang/String;)Lok;	a	group
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Lom;)V	a	save
	m	(Lom;Ljava/lang/String;)V	a	save
	m	(Ldmt;)Lame;	a	getDefaultRecipeId
	m	(Lol;)Ldgz;	a	determineBookCategory
	m	()V	<clinit>	<clinit>
c	ok$1	net/minecraft/data/recipes/RecipeBuilder$1
	f	[I	a	$SwitchMap$net$minecraft$data$recipes$RecipeCategory
	m	()V	<clinit>	<clinit>
c	ol	net/minecraft/data/recipes/RecipeCategory
	f	Lol;	a	BUILDING_BLOCKS
	f	Lol;	b	DECORATIONS
	f	Lol;	c	REDSTONE
	f	Lol;	d	TRANSPORTATION
	f	Lol;	e	TOOLS
	f	Lol;	f	COMBAT
	f	Lol;	g	FOOD
	f	Lol;	h	BREWING
	f	Lol;	i	MISC
	f	Ljava/lang/String;	j	recipeFolderName
	f	[Lol;	k	$VALUES
	m	()[Lol;	values	values
	m	(Ljava/lang/String;)Lol;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getFolderName
	m	()[Lol;	b	$values
	m	()V	<clinit>	<clinit>
c	om	net/minecraft/data/recipes/RecipeOutput
	m	(Lamd;Ldhm;Laj;)V	a	accept
	m	()Lai$a;	a	advancement
	m	()V	b	includeRootAdvancement
c	on	net/minecraft/data/recipes/RecipeProvider
	f	Ljn$a;	a	registries
	f	Ljm;	c	items
	f	Lom;	b	output
	f	Ljava/util/Map;	d	SHAPE_BUILDERS
	m	(Ljn$a;Lom;)V	<init>	<init>
	m	()V	a	buildRecipes
	m	(Lcyd;)V	a	generateForEnabledBlockFamilies
	m	(Ldmt;Ldmt;Ljava/lang/String;)V	a	oneToOneConversionRecipe
	m	(Ldmt;Ldmt;Ljava/lang/String;I)V	a	oneToOneConversionRecipe
	m	(Ljava/util/List;Lol;Ldmt;FILjava/lang/String;)V	a	oreSmelting
	m	(Ljava/util/List;Lol;Ldmt;FILjava/lang/String;)V	b	oreBlasting
	m	(Ldhw;Ldgs$a;Ljava/util/List;Lol;Ldmt;FILjava/lang/String;Ljava/lang/String;)V	a	oreCooking
	m	(Ldcr;Lol;Ldcr;)V	a	netheriteSmithing
	m	(Ldcr;Lamd;Lamd;)V	a	trimSmithing
	m	(Lol;Ldmt;Ldmt;)V	a	twoByTwoPacker
	m	(Lol;Ldmt;Ldmt;Ljava/lang/String;)V	a	threeByThreePacker
	m	(Lol;Ldmt;Ldmt;)V	b	threeByThreePacker
	m	(Ldmt;Lbae;I)V	a	planksFromLog
	m	(Ldmt;Lbae;I)V	b	planksFromLogs
	m	(Ldmt;Ldmt;)V	a	woodFromLogs
	m	(Ldmt;Ldmt;)V	b	woodenBoat
	m	(Ldmt;Ldmt;)V	c	chestBoat
	m	(Ldmt;Ldhi;)Lok;	e	buttonBuilder
	m	(Ldmt;Ldhi;)Lok;	a	doorBuilder
	m	(Ldmt;Ldhi;)Lok;	f	fenceBuilder
	m	(Ldmt;Ldhi;)Lok;	g	fenceGateBuilder
	m	(Ldmt;Ldmt;)V	d	pressurePlate
	m	(Lol;Ldmt;Ldhi;)Lok;	c	pressurePlateBuilder
	m	(Lol;Ldmt;Ldmt;)V	c	slab
	m	(Lol;Ldmt;Ldhi;)Lok;	a	slabBuilder
	m	(Ldmt;Ldhi;)Lok;	b	stairBuilder
	m	(Ldmt;Ldhi;)Lok;	c	trapdoorBuilder
	m	(Ldmt;Ldhi;)Lok;	h	signBuilder
	m	(Ldmt;Ldmt;)V	e	hangingSign
	m	(Ljava/util/List;Ljava/util/List;Ljava/lang/String;Lol;)V	a	colorItemWithDye
	m	(Ljava/util/List;Ljava/util/List;Ldcr;Ljava/lang/String;Lol;)V	a	colorWithDye
	m	(Ldmt;Ldmt;)V	f	carpet
	m	(Ldmt;Ldmt;)V	g	bedFromPlanksAndWool
	m	(Ldmt;Ldmt;)V	h	banner
	m	(Ldmt;Ldmt;)V	i	stainedGlassFromGlassAndDye
	m	(Ldmt;)V	a	dryGhast
	m	(Ldmt;Ldmt;)V	j	harness
	m	(Ldmt;Ldmt;)V	k	stainedGlassPaneFromStainedGlass
	m	(Ldmt;Ldmt;)V	l	stainedGlassPaneFromGlassPaneAndDye
	m	(Ldmt;Ldmt;)V	m	coloredTerracottaFromTerracottaAndDye
	m	(Ldmt;Ldmt;)V	n	concretePowder
	m	(Ldmt;Ldmt;)V	o	candle
	m	(Lol;Ldmt;Ldmt;)V	d	wall
	m	(Lol;Ldmt;Ldhi;)Lok;	d	wallBuilder
	m	(Lol;Ldmt;Ldmt;)V	e	polished
	m	(Lol;Ldmt;Ldhi;)Lok;	e	polishedBuilder
	m	(Lol;Ldmt;Ldmt;)V	f	cut
	m	(Lol;Ldmt;Ldhi;)Loo;	f	cutBuilder
	m	(Lol;Ldmt;Ldmt;)V	g	chiseled
	m	(Lol;Ldmt;Ldmt;)V	h	mosaicBuilder
	m	(Lol;Ldmt;Ldhi;)Loo;	b	chiseledBuilder
	m	(Lol;Ldmt;Ldmt;)V	i	stonecutterResultFromBase
	m	(Lol;Ldmt;Ldmt;I)V	a	stonecutterResultFromBase
	m	(Ldmt;Ldmt;)V	r	smeltingResultFromBase
	m	(Lol;Ldmt;Lol;Ldmt;)V	a	nineBlockStorageRecipes
	m	(Lol;Ldmt;Lol;Ldmt;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipesWithCustomPacking
	m	(Lol;Ldmt;Lol;Ldmt;Ljava/lang/String;Ljava/lang/String;)V	b	nineBlockStorageRecipesRecipesWithCustomUnpacking
	m	(Lol;Ldmt;Lol;Ldmt;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	a	nineBlockStorageRecipes
	m	(Ldmt;Ldmt;)V	p	copySmithingTemplate
	m	(Ldmt;Ldhi;)V	d	copySmithingTemplate
	m	(Ljava/lang/String;Ldhw;Ldgs$a;I)V	a	cookRecipes
	m	(Ljava/lang/String;Ldhw;Ldgs$a;ILdmt;Ldmt;F)V	a	simpleCookingRecipe
	m	(Lcyd;)V	b	waxRecipes
	m	(Ldpz;Ldpz;)V	a	grate
	m	(Ldpz;Ldpz;)V	b	copperBulb
	m	(Ldcr;Ldym;)V	a	suspiciousStew
	m	(Lmq;Lcyd;)V	a	generateRecipes
	m	(Lmq;Lmq$b;)Ldpz;	a	getBaseBlock
	m	(Ldpz;)Lar;	a	insideOf
	m	(Lcx$d;Ldmt;)Lar;	a	has
	m	(Ldmt;)Lar;	b	has
	m	(Lbae;)Lar;	a	has
	m	([Lcn$a;)Lar;	a	inventoryTrigger
	m	([Lcn;)Lar;	a	inventoryTrigger
	m	(Ldmt;)Ljava/lang/String;	c	getHasName
	m	(Ldmt;)Ljava/lang/String;	d	getItemName
	m	(Ldmt;)Ljava/lang/String;	e	getSimpleRecipeName
	m	(Ldmt;Ldmt;)Ljava/lang/String;	q	getConversionRecipeName
	m	(Ldmt;)Ljava/lang/String;	f	getSmeltingRecipeName
	m	(Ldmt;)Ljava/lang/String;	g	getBlastingRecipeName
	m	(Lbae;)Ldhi;	b	tag
	m	(Lol;Ldmt;)Loo;	a	shaped
	m	(Lol;Ldmt;I)Loo;	a	shaped
	m	(Lol;Ldcv;)Lop;	a	shapeless
	m	(Lol;Ldmt;)Lop;	b	shapeless
	m	(Lol;Ldmt;I)Lop;	b	shapeless
	m	(I)[Lcn;	a	lambda$inventoryTrigger$21
	m	(Lon;Ldmt;Ldmt;)Lok;	a	lambda$static$20
	m	(Lon;Ldmt;Ldmt;)Lok;	b	lambda$static$19
	m	(Lon;Ldmt;Ldmt;)Lok;	c	lambda$static$18
	m	(Lon;Ldmt;Ldmt;)Lok;	d	lambda$static$17
	m	(Lon;Ldmt;Ldmt;)Lok;	e	lambda$static$16
	m	(Lon;Ldmt;Ldmt;)Lok;	f	lambda$static$15
	m	(Lon;Ldmt;Ldmt;)Lok;	g	lambda$static$14
	m	(Lon;Ldmt;Ldmt;)Lok;	h	lambda$static$13
	m	(Lon;Ldmt;Ldmt;)Lok;	i	lambda$static$12
	m	(Lon;Ldmt;Ldmt;)Lok;	j	lambda$static$11
	m	(Lon;Ldmt;Ldmt;)Lok;	k	lambda$static$10
	m	(Lon;Ldmt;Ldmt;)Lok;	l	lambda$static$9
	m	(Lon;Ldmt;Ldmt;)Lok;	m	lambda$static$8
	m	(Lon;Ldmt;Ldmt;)Lok;	n	lambda$static$7
	m	(Lon;Ldmt;Ldmt;)Lok;	o	lambda$static$6
	m	(Lcyd;Lmq;Lmq$b;Ldpz;)V	a	lambda$generateRecipes$5
	m	(Ldmt;)Ljava/lang/String;	h	lambda$generateRecipes$4
	m	(Lok;Lmq$b;Ljava/lang/String;)V	a	lambda$generateRecipes$3
	m	(Lcyd;Ldpz;Ldpz;)V	a	lambda$waxRecipes$2
	m	(Ldcr;Ldcr;)Z	a	lambda$colorWithDye$1
	m	(Lcyd;Lmq;)V	a	lambda$generateForEnabledBlockFamilies$0
	m	()V	<clinit>	<clinit>
c	on$a	net/minecraft/data/recipes/RecipeProvider$FamilyRecipeProvider
	m	(Lon;Ldmt;Ldmt;)Lok;	create	create
c	on$b	net/minecraft/data/recipes/RecipeProvider$Runner
	f	Lmv;	d	packOutput
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Ljn$a;Lom;)Lon;	a	createRecipeProvider
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$1
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$0
c	on$b$1	net/minecraft/data/recipes/RecipeProvider$Runner$1
	f	Ljava/util/Set;	a	val$allRecipes
	f	Ljava/util/List;	b	val$tasks
	f	Lmr;	c	val$cache
	f	Ljn$a;	d	val$registries
	f	Lmv$a;	e	val$recipePathProvider
	f	Lmv$a;	f	val$advancementPathProvider
	m	(Lon$b;Ljava/util/Set;Ljava/util/List;Lmr;Ljn$a;Lmv$a;Lmv$a;)V	<init>	<init>
	m	(Lamd;Ldhm;Laj;)V	a	accept
	m	()Lai$a;	a	advancement
	m	()V	b	includeRootAdvancement
	m	(Lamd;Ldhm;)V	a	saveRecipe
	m	(Laj;)V	a	saveAdvancement
c	oo	net/minecraft/data/recipes/ShapedRecipeBuilder
	f	Ljm;	b	items
	f	Lol;	c	category
	f	Ldcr;	d	result
	f	I	e	count
	f	Ljava/util/List;	f	rows
	f	Ljava/util/Map;	g	key
	f	Ljava/util/Map;	h	criteria
	f	Ljava/lang/String;	i	group
	f	Z	j	showNotification
	m	(Ljm;Lol;Ldmt;I)V	<init>	<init>
	m	(Ljm;Lol;Ldmt;)Loo;	a	shaped
	m	(Ljm;Lol;Ldmt;I)Loo;	a	shaped
	m	(Ljava/lang/Character;Lbae;)Loo;	a	define
	m	(Ljava/lang/Character;Ldmt;)Loo;	a	define
	m	(Ljava/lang/Character;Ldhi;)Loo;	a	define
	m	(Ljava/lang/String;)Loo;	b	pattern
	m	(Ljava/lang/String;Lar;)Loo;	b	unlockedBy
	m	(Ljava/lang/String;)Loo;	c	group
	m	(Z)Loo;	a	showNotification
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)Ldib;	a	ensureValid
	m	(Ljava/lang/String;)Lok;	a	group
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
c	op	net/minecraft/data/recipes/ShapelessRecipeBuilder
	f	Ljm;	b	items
	f	Lol;	c	category
	f	Ldcv;	d	result
	f	Ljava/util/List;	e	ingredients
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
	m	(Ljm;Lol;Ldcv;)V	<init>	<init>
	m	(Ljm;Lol;Ldcv;)Lop;	a	shapeless
	m	(Ljm;Lol;Ldmt;)Lop;	a	shapeless
	m	(Ljm;Lol;Ldmt;I)Lop;	a	shapeless
	m	(Lbae;)Lop;	a	requires
	m	(Ldmt;)Lop;	b	requires
	m	(Ldmt;I)Lop;	a	requires
	m	(Ldhi;)Lop;	a	requires
	m	(Ldhi;I)Lop;	a	requires
	m	(Ljava/lang/String;Lar;)Lop;	b	unlockedBy
	m	(Ljava/lang/String;)Lop;	b	group
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)V	a	ensureValid
	m	(Ljava/lang/String;)Lok;	a	group
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
c	oq	net/minecraft/data/recipes/SimpleCookingRecipeBuilder
	f	Lol;	b	category
	f	Ldgy;	c	bookCategory
	f	Ldcr;	d	result
	f	Ldhi;	e	ingredient
	f	F	f	experience
	f	I	g	cookingTime
	f	Ljava/util/Map;	h	criteria
	f	Ljava/lang/String;	i	group
	f	Ldgs$a;	j	factory
	m	(Lol;Ldgy;Ldmt;Ldhi;FILdgs$a;)V	<init>	<init>
	m	(Ldhi;Lol;Ldmt;FILdhw;Ldgs$a;)Loq;	a	generic
	m	(Ldhi;Lol;Ldmt;FI)Loq;	a	campfireCooking
	m	(Ldhi;Lol;Ldmt;FI)Loq;	b	blasting
	m	(Ldhi;Lol;Ldmt;FI)Loq;	c	smelting
	m	(Ldhi;Lol;Ldmt;FI)Loq;	d	smoking
	m	(Ljava/lang/String;Lar;)Loq;	b	unlockedBy
	m	(Ljava/lang/String;)Loq;	b	group
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Ldmt;)Ldgy;	b	determineSmeltingRecipeCategory
	m	(Ldmt;)Ldgy;	c	determineBlastingRecipeCategory
	m	(Ldhw;Ldmt;)Ldgy;	a	determineRecipeCategory
	m	(Lamd;)V	a	ensureValid
	m	(Ljava/lang/String;)Lok;	a	group
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
c	or	net/minecraft/data/recipes/SingleItemRecipeBuilder
	f	Lol;	b	category
	f	Ldcr;	c	result
	f	Ldhi;	d	ingredient
	f	I	e	count
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
	f	Ldie$a;	h	factory
	m	(Lol;Ldie$a;Ldhi;Ldmt;I)V	<init>	<init>
	m	(Ldhi;Lol;Ldmt;)Lor;	a	stonecutting
	m	(Ldhi;Lol;Ldmt;I)Lor;	a	stonecutting
	m	(Ljava/lang/String;Lar;)Lor;	b	unlockedBy
	m	(Ljava/lang/String;)Lor;	b	group
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)V	a	ensureValid
	m	(Ljava/lang/String;)Lok;	a	group
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
c	os	net/minecraft/data/recipes/SmithingTransformRecipeBuilder
	f	Ldhi;	a	template
	f	Ldhi;	b	base
	f	Ldhi;	c	addition
	f	Lol;	d	category
	f	Ldcr;	e	result
	f	Ljava/util/Map;	f	criteria
	m	(Ldhi;Ldhi;Ldhi;Lol;Ldcr;)V	<init>	<init>
	m	(Ldhi;Ldhi;Ldhi;Lol;Ldcr;)Los;	a	smithing
	m	(Ljava/lang/String;Lar;)Los;	a	unlocks
	m	(Lom;Ljava/lang/String;)V	a	save
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)V	a	ensureValid
c	ot	net/minecraft/data/recipes/SmithingTrimRecipeBuilder
	f	Lol;	a	category
	f	Ldhi;	b	template
	f	Ldhi;	c	base
	f	Ldhi;	d	addition
	f	Ljl;	e	pattern
	f	Ljava/util/Map;	f	criteria
	m	(Lol;Ldhi;Ldhi;Ldhi;Ljl;)V	<init>	<init>
	m	(Ldhi;Ldhi;Ldhi;Ljl;Lol;)Lot;	a	smithingTrim
	m	(Ljava/lang/String;Lar;)Lot;	a	unlocks
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)V	a	ensureValid
c	ou	net/minecraft/data/recipes/SpecialRecipeBuilder
	f	Ljava/util/function/Function;	a	factory
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Lou;	a	special
	m	(Lom;Ljava/lang/String;)V	a	save
	m	(Lom;Lamd;)V	a	save
c	ov	net/minecraft/data/recipes/TransmuteRecipeBuilder
	f	Lol;	b	category
	f	Ljl;	c	result
	f	Ldhi;	d	input
	f	Ldhi;	e	material
	f	Ljava/util/Map;	f	criteria
	f	Ljava/lang/String;	g	group
	m	(Lol;Ljl;Ldhi;Ldhi;)V	<init>	<init>
	m	(Lol;Ldhi;Ldhi;Ldcr;)Lov;	a	transmute
	m	(Ljava/lang/String;Lar;)Lov;	b	unlockedBy
	m	(Ljava/lang/String;)Lov;	b	group
	m	()Ldcr;	a	getResult
	m	(Lom;Lamd;)V	a	save
	m	(Lamd;)V	a	ensureValid
	m	(Ljava/lang/String;)Lok;	a	group
	m	(Ljava/lang/String;Lar;)Lok;	a	unlockedBy
c	ow	net/minecraft/data/recipes/package-info
c	ox	net/minecraft/data/recipes/packs/VanillaRecipeProvider
	f	Lcom/google/common/collect/ImmutableList;	c	COAL_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	d	IRON_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	e	COPPER_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	f	GOLD_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	g	DIAMOND_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	h	LAPIS_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	i	REDSTONE_SMELTABLES
	f	Lcom/google/common/collect/ImmutableList;	j	EMERALD_SMELTABLES
	m	(Ljn$a;Lom;)V	<init>	<init>
	m	()V	a	buildRecipes
	m	()Ljava/util/stream/Stream;	b	smithingTrims
	m	()V	c	shulkerBoxRecipes
	m	()V	d	bundleRecipes
	m	(Lcom/mojang/datafixers/util/Pair;)Lox$b;	a	lambda$smithingTrims$2
	m	(Lox$b;)V	a	lambda$buildRecipes$1
	m	(Ldcr;)V	a	lambda$buildRecipes$0
	m	()V	<clinit>	<clinit>
c	ox$a	net/minecraft/data/recipes/packs/VanillaRecipeProvider$Runner
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;Lom;)Lon;	a	createRecipeProvider
	m	()Ljava/lang/String;	a	getName
c	ox$b	net/minecraft/data/recipes/packs/VanillaRecipeProvider$TrimTemplate
	f	Ldcr;	a	template
	f	Lamd;	b	patternId
	f	Lamd;	c	recipeId
	m	(Ldcr;Lamd;Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcr;	a	template
	m	()Lamd;	b	patternId
	m	()Lamd;	c	recipeId
c	oy	net/minecraft/data/recipes/packs/package-info
c	oz	net/minecraft/data/registries/RegistriesDatapackGenerator
	f	Lmv;	d	output
	f	Ljava/util/concurrent/CompletableFuture;	e	registries
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Lmr;Ljn$a;Lcom/mojang/serialization/DynamicOps;Lalz$d;)Ljava/util/Optional;	a	dumpRegistryCap
	m	(Ljava/nio/file/Path;Lmr;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	a	dumpValue
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Lcom/mojang/serialization/DataResult$Error;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpValue$7
	m	(Lmr;Ljava/nio/file/Path;Lcom/google/gson/JsonElement;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpValue$6
	m	(Lamd;Lmr;Lcom/mojang/serialization/DynamicOps;Lalz$d;Ljn$b;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$5
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$4
	m	(Lmv$a;Lmr;Lcom/mojang/serialization/DynamicOps;Lalz$d;Ljl$c;)Ljava/util/concurrent/CompletableFuture;	a	lambda$dumpRegistryCap$3
	m	(Lmr;Ljn$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$2
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$1
	m	(Lmr;Ljn$a;Lcom/mojang/serialization/DynamicOps;Lalz$d;)Ljava/util/stream/Stream;	b	lambda$run$0
c	pa	net/minecraft/data/registries/RegistryPatchGenerator
	m	()V	<init>	<init>
	m	(Ljava/util/concurrent/CompletableFuture;Lkb;)Ljava/util/concurrent/CompletableFuture;	a	createLookup
	m	(Lkb;Ljn$a;)Lkb$g;	a	lambda$createLookup$3
	m	(Ljn$a;)Ljn$b;	a	lambda$createLookup$2
	m	(Ljn$a;)Ljn$b;	b	lambda$createLookup$1
	m	(Ljd$a;Lalz$d;)V	a	lambda$createLookup$0
c	pb	net/minecraft/data/registries/TradeRebalanceRegistries
	f	Lkb;	a	BUILDER
	m	()V	<init>	<init>
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	createLookup
	m	()V	<clinit>	<clinit>
c	pc	net/minecraft/data/registries/VanillaRegistries
	f	Lkb;	a	BUILDER
	m	()V	<init>	<init>
	m	(Ljn$a;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
	m	(Ljm;Ljn;)V	a	validateThatAllBiomeFeaturesHaveBiomeFilter
	m	(Leuc;)Z	a	validatePlacedFeature
	m	()Ljn$a;	a	createLookup
	m	(Ljm;Ljl$c;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$3
	m	(Ljm;Lame;Ljl$c;Ljl;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$2
	m	(Ljl$c;Leuc;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$1
	m	(Ljm;Lame;Lamd;)V	a	lambda$validateThatAllBiomeFeaturesHaveBiomeFilter$0
	m	()V	<clinit>	<clinit>
c	pd	net/minecraft/data/registries/package-info
c	pe	net/minecraft/data/structures/NbtToSnbt
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/Iterable;	e	inputFolders
	f	Lmv;	f	output
	m	(Lmv;Ljava/util/Collection;)V	<init>	<init>
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
	m	(Lmr;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	convertStructure
	m	(Lmr;Ljava/nio/file/Path;Ljava/lang/String;)V	a	writeSnbt
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$6
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
	m	(Ljava/nio/file/Path;Lmr;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$3
	m	(Lmr;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
	m	(Lmr;Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	b	lambda$run$1
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
	m	()V	<clinit>	<clinit>
c	pf	net/minecraft/data/structures/SnbtDatafixer
	m	()V	<init>	<init>
	m	([Ljava/lang/String;)V	a	main
	m	(Ljava/lang/String;)V	a	updateInDirectory
	m	(Ljava/nio/file/Path;)V	a	lambda$updateInDirectory$1
	m	(Ljava/nio/file/Path;)Z	b	lambda$updateInDirectory$0
c	pg	net/minecraft/data/structures/SnbtToNbt
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lmv;	e	output
	f	Ljava/lang/Iterable;	f	inputFolders
	f	Ljava/util/List;	g	filters
	m	(Lmv;Ljava/lang/Iterable;)V	<init>	<init>
	m	(Lpg$a;)Lpg;	a	addFilter
	m	(Ljava/lang/String;Lui;)Lui;	a	applyFilters
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	getName
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lpg$c;	a	readStructure
	m	(Lmr;Lpg$c;Ljava/nio/file/Path;)V	a	storeStructureIfChanged
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$5
	m	(Ljava/nio/file/Path;Lmr;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$4
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$run$3
	m	(Ljava/nio/file/Path;Lmr;Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$2
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lmr;Ljava/nio/file/Path;)V	a	lambda$run$1
	m	(Ljava/nio/file/Path;)Z	a	lambda$run$0
	m	()V	<clinit>	<clinit>
c	pg$a	net/minecraft/data/structures/SnbtToNbt$Filter
	m	(Ljava/lang/String;Lui;)Lui;	apply	apply
c	pg$b	net/minecraft/data/structures/SnbtToNbt$StructureConversionException
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	<init>	<init>
c	pg$c	net/minecraft/data/structures/SnbtToNbt$TaskResult
	f	Ljava/lang/String;	a	name
	f	[B	b	payload
	f	Lcom/google/common/hash/HashCode;	c	hash
	m	(Ljava/lang/String;[BLcom/google/common/hash/HashCode;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()[B	b	payload
	m	()Lcom/google/common/hash/HashCode;	c	hash
c	ph	net/minecraft/data/structures/StructureUpdater
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	PREFIX
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lui;)Lui;	apply	apply
	m	(Ljava/lang/String;Lui;)Lui;	a	update
	m	()V	<clinit>	<clinit>
c	pi	net/minecraft/data/structures/package-info
c	pj	net/minecraft/data/tags/BannerPatternTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	pk	net/minecraft/data/tags/BiomeTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	(Lamd;)Z	a	lambda$addTags$0
c	pl	net/minecraft/data/tags/BlockItemTagsProvider
	m	()V	<init>	<init>
	m	()V	a	run
	m	(Lbae;Lbae;)Lpz;	a	tag
c	pm	net/minecraft/data/tags/DamageTypeTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	pn	net/minecraft/data/tags/DialogTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	po	net/minecraft/data/tags/EnchantmentTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;[Lamd;)V	a	tooltipOrder
	m	(Ljava/util/Set;Ljl$c;)Z	a	lambda$tooltipOrder$0
c	pp	net/minecraft/data/tags/EntityTypeTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	(Lbzv;)Lamd;	a	lambda$new$0
c	pq	net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	pr	net/minecraft/data/tags/FluidTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	(Lfak;)Lamd;	a	lambda$new$0
c	ps	net/minecraft/data/tags/GameEventTagsProvider
	f	Ljava/util/List;	d	VIBRATIONS_EXCEPT_FLAP
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	()V	<clinit>	<clinit>
c	pt	net/minecraft/data/tags/InstrumentTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	pu	net/minecraft/data/tags/IntrinsicHolderTagsProvider
	f	Ljava/util/function/Function;	d	keyExtractor
	m	(Lmv;Lamd;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lmv;Lamd;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lbae;)Lpz;	a	tag
c	pv	net/minecraft/data/tags/KeyTagProvider
	m	(Lmv;Lamd;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lbae;)Lpz;	a	tag
c	pw	net/minecraft/data/tags/PaintingVariantTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	px	net/minecraft/data/tags/PoiTypeTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	py	net/minecraft/data/tags/StructureTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	pz	net/minecraft/data/tags/TagAppender
	m	(Ljava/lang/Object;)Lpz;	a	add
	m	([Ljava/lang/Object;)Lpz;	a	add
	m	(Ljava/util/Collection;)Lpz;	a	addAll
	m	(Ljava/util/stream/Stream;)Lpz;	a	addAll
	m	(Ljava/lang/Object;)Lpz;	b	addOptional
	m	(Lbae;)Lpz;	a	addTag
	m	(Lbae;)Lpz;	b	addOptionalTag
	m	(Lbab;)Lpz;	a	forBuilder
	m	(Ljava/util/function/Function;)Lpz;	a	map
c	pz$1	net/minecraft/data/tags/TagAppender$1
	f	Lbab;	a	val$builder
	m	(Lbab;)V	<init>	<init>
	m	(Lamd;)Lpz;	a	add
	m	(Lamd;)Lpz;	b	addOptional
	m	(Lbae;)Lpz;	a	addTag
	m	(Lbae;)Lpz;	b	addOptionalTag
	m	(Ljava/lang/Object;)Lpz;	b	addOptional
	m	(Ljava/lang/Object;)Lpz;	a	add
c	pz$2	net/minecraft/data/tags/TagAppender$2
	f	Lpz;	a	val$original
	f	Ljava/util/function/Function;	b	val$converter
	m	(Lpz;Lpz;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Lpz;	a	add
	m	(Ljava/lang/Object;)Lpz;	b	addOptional
	m	(Lbae;)Lpz;	a	addTag
	m	(Lbae;)Lpz;	b	addOptionalTag
c	qa	net/minecraft/data/tags/TagsProvider
	f	Lmv$a;	e	pathProvider
	f	Ljava/util/concurrent/CompletableFuture;	d	lookupProvider
	f	Ljava/util/concurrent/CompletableFuture;	g	contentsDone
	f	Ljava/util/concurrent/CompletableFuture;	h	parentProvider
	f	Lamd;	f	registryKey
	f	Ljava/util/Map;	i	builders
	m	(Lmv;Lamd;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Lmv;Lamd;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	(Ljn$a;)V	a	addTags
	m	(Lmr;)Ljava/util/concurrent/CompletableFuture;	a	run
	m	(Lbae;)Lbab;	b	getOrCreateRawBuilder
	m	()Ljava/util/concurrent/CompletableFuture;	b	contentsGetter
	m	()Ljava/util/concurrent/CompletableFuture;	c	createContentsProvider
	m	(Ljn$a;)Ljn$a;	b	lambda$createContentsProvider$11
	m	(Ljava/lang/Void;)Lqa$b;	a	lambda$contentsGetter$10
	m	(Lbae;)Ljava/util/Optional;	a	lambda$contentsGetter$9
	m	(Lame;)Lbab;	a	lambda$getOrCreateRawBuilder$8
	m	(Lmr;Lqa$a;)Ljava/util/concurrent/CompletionStage;	a	lambda$run$7
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$run$6
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lmr;Lqa$a;Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$run$5
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lbac;)Z	a	lambda$run$4
	m	(Lqa$a;Lame;)Z	a	lambda$run$3
	m	(Ljn$b;Lame;)Z	a	lambda$run$2
	m	(Ljn$a;Lqa$b;)Lqa$a;	a	lambda$run$1
	m	(Ljn$a;)Ljn$a;	c	lambda$run$0
c	qa$a	net/minecraft/data/tags/TagsProvider$1CombinedData
	f	Ljn$a;	a	contents
	f	Lqa$b;	b	parent
	m	(Ljn$a;Lqa$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljn$a;	a	contents
	m	()Lqa$b;	b	parent
c	qa$b	net/minecraft/data/tags/TagsProvider$TagLookup
	m	()Lqa$b;	empty	empty
	m	(Lbae;)Z	contains	contains
	m	(Lbae;)Ljava/util/Optional;	a	lambda$empty$0
c	qb	net/minecraft/data/tags/TradeRebalanceEnchantmentTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	qc	net/minecraft/data/tags/VanillaBlockTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	(Ldpz;)Z	a	lambda$addTags$1
	m	(Ldpz;)Lamd;	b	lambda$new$0
c	qc$1	net/minecraft/data/tags/VanillaBlockTagsProvider$1
	f	Lqc;	a	this$0
	m	(Lqc;)V	<init>	<init>
	m	(Lbae;Lbae;)Lpz;	a	tag
c	qd	net/minecraft/data/tags/VanillaEnchantmentTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	qe	net/minecraft/data/tags/VanillaItemTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
	m	(Ljl$c;)Lame;	a	lambda$addTags$2
	m	(Ljl$c;)Z	b	lambda$addTags$1
	m	(Ldcr;)Lamd;	a	lambda$new$0
c	qe$1	net/minecraft/data/tags/VanillaItemTagsProvider$1
	f	Lqe;	a	this$0
	m	(Lqe;)V	<init>	<init>
	m	(Lbae;Lbae;)Lpz;	a	tag
c	qe$a	net/minecraft/data/tags/VanillaItemTagsProvider$BlockToItemConverter
	f	Lpz;	a	itemAppender
	m	(Lpz;)V	<init>	<init>
	m	(Ldpz;)Lpz;	a	add
	m	(Ldpz;)Lpz;	b	addOptional
	m	(Lbae;)Lbae;	c	blockTagToItemTag
	m	(Lbae;)Lpz;	a	addTag
	m	(Lbae;)Lpz;	b	addOptionalTag
	m	(Ljava/lang/Object;)Lpz;	b	addOptional
	m	(Ljava/lang/Object;)Lpz;	a	add
c	qf	net/minecraft/data/tags/WorldPresetTagsProvider
	m	(Lmv;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljn$a;)V	a	addTags
c	qg	net/minecraft/data/tags/package-info
c	qh	net/minecraft/data/worldgen/AncientCityStructurePieces
	f	Lamd;	a	START
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qi	net/minecraft/data/worldgen/AncientCityStructurePools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qj	net/minecraft/data/worldgen/BastionBridgePools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qk	net/minecraft/data/worldgen/BastionHoglinStablePools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	ql	net/minecraft/data/worldgen/BastionHousingUnitsPools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qm	net/minecraft/data/worldgen/BastionPieces
	f	Lamd;	a	START
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qn	net/minecraft/data/worldgen/BastionSharedPools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qo	net/minecraft/data/worldgen/BastionTreasureRoomPools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qp	net/minecraft/data/worldgen/BiomeDefaultFeatures
	m	()V	<init>	<init>
	m	(Ldny$a;)V	a	addDefaultCarversAndLakes
	m	(Ldny$a;)V	b	addDefaultMonsterRoom
	m	(Ldny$a;)V	c	addDefaultUndergroundVariety
	m	(Ldny$a;)V	d	addDripstone
	m	(Ldny$a;)V	e	addSculk
	m	(Ldny$a;)V	f	addDefaultOres
	m	(Ldny$a;Z)V	a	addDefaultOres
	m	(Ldny$a;)V	g	addExtraGold
	m	(Ldny$a;)V	h	addExtraEmeralds
	m	(Ldny$a;)V	i	addInfestedStone
	m	(Ldny$a;)V	j	addDefaultSoftDisks
	m	(Ldny$a;)V	k	addSwampClayDisk
	m	(Ldny$a;)V	l	addMangroveSwampDisks
	m	(Ldny$a;)V	m	addMossyStoneBlock
	m	(Ldny$a;)V	n	addFerns
	m	(Ldny$a;)V	o	addBushes
	m	(Ldny$a;)V	p	addRareBerryBushes
	m	(Ldny$a;)V	q	addCommonBerryBushes
	m	(Ldny$a;)V	r	addLightBambooVegetation
	m	(Ldny$a;)V	s	addBambooVegetation
	m	(Ldny$a;)V	t	addTaigaTrees
	m	(Ldny$a;)V	u	addGroveTrees
	m	(Ldny$a;)V	v	addWaterTrees
	m	(Ldny$a;)V	w	addBirchTrees
	m	(Ldny$a;)V	x	addOtherBirchTrees
	m	(Ldny$a;)V	y	addTallBirchTrees
	m	(Ldny$a;)V	z	addBirchForestFlowers
	m	(Ldny$a;)V	A	addSavannaTrees
	m	(Ldny$a;)V	B	addShatteredSavannaTrees
	m	(Ldny$a;)V	C	addLushCavesVegetationFeatures
	m	(Ldny$a;)V	D	addLushCavesSpecialOres
	m	(Ldny$a;)V	E	addMountainTrees
	m	(Ldny$a;)V	F	addMountainForestTrees
	m	(Ldny$a;)V	G	addJungleTrees
	m	(Ldny$a;)V	H	addSparseJungleTrees
	m	(Ldny$a;)V	I	addBadlandsTrees
	m	(Ldny$a;)V	J	addSnowyTrees
	m	(Ldny$a;)V	K	addJungleGrass
	m	(Ldny$a;)V	L	addSavannaGrass
	m	(Ldny$a;)V	M	addShatteredSavannaGrass
	m	(Ldny$a;)V	N	addSavannaExtraGrass
	m	(Ldny$a;)V	O	addBadlandGrass
	m	(Ldny$a;)V	P	addForestFlowers
	m	(Ldny$a;)V	Q	addForestGrass
	m	(Ldny$a;)V	R	addSwampVegetation
	m	(Ldny$a;)V	S	addMangroveSwampVegetation
	m	(Ldny$a;)V	T	addMushroomFieldVegetation
	m	(Ldny$a;)V	U	addPlainVegetation
	m	(Ldny$a;)V	V	addDesertVegetation
	m	(Ldny$a;)V	W	addGiantTaigaVegetation
	m	(Ldny$a;)V	X	addDefaultFlowers
	m	(Ldny$a;)V	Y	addCherryGroveVegetation
	m	(Ldny$a;)V	Z	addMeadowVegetation
	m	(Ldny$a;)V	aa	addWarmFlowers
	m	(Ldny$a;)V	ab	addDefaultGrass
	m	(Ldny$a;)V	ac	addTaigaGrass
	m	(Ldny$a;)V	ad	addPlainGrass
	m	(Ldny$a;)V	ae	addDefaultMushrooms
	m	(Ldny$a;Z)V	b	addDefaultExtraVegetation
	m	(Ldny$a;)V	af	addLeafLitterPatch
	m	(Ldny$a;)V	ag	addBadlandExtraVegetation
	m	(Ldny$a;)V	ah	addJungleMelons
	m	(Ldny$a;)V	ai	addSparseJungleMelons
	m	(Ldny$a;)V	aj	addJungleVines
	m	(Ldny$a;)V	ak	addDesertExtraVegetation
	m	(Ldny$a;)V	al	addSwampExtraVegetation
	m	(Ldny$a;)V	am	addMangroveSwampExtraVegetation
	m	(Ldny$a;)V	an	addDesertExtraDecoration
	m	(Ldny$a;)V	ao	addFossilDecoration
	m	(Ldny$a;)V	ap	addColdOceanExtraVegetation
	m	(Ldny$a;)V	aq	addLukeWarmKelp
	m	(Ldny$a;)V	ar	addDefaultSprings
	m	(Ldny$a;)V	as	addFrozenSprings
	m	(Ldny$a;)V	at	addIcebergs
	m	(Ldny$a;)V	au	addBlueIce
	m	(Ldny$a;)V	av	addSurfaceFreezing
	m	(Ldny$a;)V	aw	addNetherDefaultOres
	m	(Ldny$a;)V	ax	addAncientDebris
	m	(Ldny$a;)V	ay	addDefaultCrystalFormations
	m	(Ldoj$a;)V	a	farmAnimals
	m	(Ldoj$a;)V	b	caveSpawns
	m	(Ldoj$a;)V	c	commonSpawns
	m	(Ldoj$a;I)V	a	commonSpawns
	m	(Ldoj$a;III)V	a	oceanSpawns
	m	(Ldoj$a;II)V	a	warmOceanSpawns
	m	(Ldoj$a;)V	d	plainsSpawns
	m	(Ldoj$a;)V	e	snowySpawns
	m	(Ldoj$a;)V	f	desertSpawns
	m	(Ldoj$a;)V	g	dripstoneCavesSpawns
	m	(Ldoj$a;IIIZ)V	a	monsters
	m	(Ldoj$a;)V	h	mooshroomSpawns
	m	(Ldoj$a;)V	i	baseJungleSpawns
	m	(Ldoj$a;)V	j	endSpawns
c	qq	net/minecraft/data/worldgen/BootstrapContext
	m	(Lamd;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljl$c;	a	register
	m	(Lamd;Ljava/lang/Object;)Ljl$c;	a	register
	m	(Lamd;)Ljm;	a	lookup
c	qr	net/minecraft/data/worldgen/Carvers
	f	Lamd;	a	CAVE
	f	Lamd;	b	CAVE_EXTRA_UNDERGROUND
	f	Lamd;	c	CANYON
	f	Lamd;	d	NETHER_CAVE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qs	net/minecraft/data/worldgen/DesertVillagePools
	f	Lamd;	a	START
	f	Lamd;	b	TERMINATORS_KEY
	f	Lamd;	c	ZOMBIE_TERMINATORS_KEY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qt	net/minecraft/data/worldgen/DimensionTypes
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	qu	net/minecraft/data/worldgen/NoiseData
	f	Lezo$a;	a	DEFAULT_SHIFT
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;ILamd;Lamd;Lamd;Lamd;)V	a	registerBiomeNoises
	m	(Lqq;Lamd;ID[D)V	a	register
	m	()V	<clinit>	<clinit>
c	qv	net/minecraft/data/worldgen/PillagerOutpostPools
	f	Lamd;	a	START
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qw	net/minecraft/data/worldgen/PlainVillagePools
	f	Lamd;	a	START
	f	Lamd;	b	TERMINATORS_KEY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qx	net/minecraft/data/worldgen/Pools
	f	Lamd;	a	EMPTY
	m	()V	<init>	<init>
	m	(Lame;)Lamd;	a	createKey
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljava/lang/String;)Lamd;	b	parseKey
	m	(Lqq;Ljava/lang/String;Lewi;)V	a	register
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	qy	net/minecraft/data/worldgen/ProcessorLists
	f	Lamd;	N	EMPTY
	f	Lamd;	a	ZOMBIE_PLAINS
	f	Lamd;	b	ZOMBIE_SAVANNA
	f	Lamd;	c	ZOMBIE_SNOWY
	f	Lamd;	d	ZOMBIE_TAIGA
	f	Lamd;	e	ZOMBIE_DESERT
	f	Lamd;	f	MOSSIFY_10_PERCENT
	f	Lamd;	g	MOSSIFY_20_PERCENT
	f	Lamd;	h	MOSSIFY_70_PERCENT
	f	Lamd;	i	STREET_PLAINS
	f	Lamd;	j	STREET_SAVANNA
	f	Lamd;	k	STREET_SNOWY_OR_TAIGA
	f	Lamd;	l	FARM_PLAINS
	f	Lamd;	m	FARM_SAVANNA
	f	Lamd;	n	FARM_SNOWY
	f	Lamd;	o	FARM_TAIGA
	f	Lamd;	p	FARM_DESERT
	f	Lamd;	q	OUTPOST_ROT
	f	Lamd;	r	BOTTOM_RAMPART
	f	Lamd;	s	TREASURE_ROOMS
	f	Lamd;	t	HOUSING
	f	Lamd;	u	SIDE_WALL_DEGRADATION
	f	Lamd;	v	STABLE_DEGRADATION
	f	Lamd;	w	BASTION_GENERIC_DEGRADATION
	f	Lamd;	x	RAMPART_DEGRADATION
	f	Lamd;	y	ENTRANCE_REPLACEMENT
	f	Lamd;	z	BRIDGE
	f	Lamd;	A	ROOF
	f	Lamd;	B	HIGH_WALL
	f	Lamd;	C	HIGH_RAMPART
	f	Lamd;	D	FOSSIL_ROT
	f	Lamd;	E	FOSSIL_COAL
	f	Lamd;	F	FOSSIL_DIAMONDS
	f	Lamd;	G	ANCIENT_CITY_START_DEGRADATION
	f	Lamd;	H	ANCIENT_CITY_GENERIC_DEGRADATION
	f	Lamd;	I	ANCIENT_CITY_WALLS_DEGRADATION
	f	Lamd;	J	TRAIL_RUINS_HOUSES_ARCHAEOLOGY
	f	Lamd;	K	TRAIL_RUINS_ROADS_ARCHAEOLOGY
	f	Lamd;	L	TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY
	f	Lamd;	M	TRIAL_CHAMBERS_COPPER_BULB_DEGRADATION
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;Lamd;Ljava/util/List;)V	a	register
	m	(Lqq;)V	a	bootstrap
	m	(Lamd;I)Leyf;	a	trailsArchyLootProcessor
	m	()V	<clinit>	<clinit>
c	qz	net/minecraft/data/worldgen/SavannaVillagePools
	f	Lamd;	a	START
	f	Lamd;	b	TERMINATORS_KEY
	f	Lamd;	c	ZOMBIE_TERMINATORS_KEY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	ra	net/minecraft/data/worldgen/SnowyVillagePools
	f	Lamd;	a	START
	f	Lamd;	b	TERMINATORS_KEY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rb	net/minecraft/data/worldgen/StructureSets
	m	(Lqq;)V	a	bootstrap
c	rc	net/minecraft/data/worldgen/Structures
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lcap;)Levf;	a	lambda$bootstrap$3
	m	(Lcap;)Lcap;	b	lambda$bootstrap$2
	m	(Lcap;)Levf;	c	lambda$bootstrap$1
	m	(Lcap;)Lcap;	d	lambda$bootstrap$0
c	rd	net/minecraft/data/worldgen/SurfaceRuleData
	f	Lekr$o;	a	AIR
	f	Lekr$o;	b	BEDROCK
	f	Lekr$o;	c	WHITE_TERRACOTTA
	f	Lekr$o;	d	ORANGE_TERRACOTTA
	f	Lekr$o;	e	TERRACOTTA
	f	Lekr$o;	f	RED_SAND
	f	Lekr$o;	g	RED_SANDSTONE
	f	Lekr$o;	h	STONE
	f	Lekr$o;	i	DEEPSLATE
	f	Lekr$o;	j	DIRT
	f	Lekr$o;	k	PODZOL
	f	Lekr$o;	l	COARSE_DIRT
	f	Lekr$o;	m	MYCELIUM
	f	Lekr$o;	n	GRASS_BLOCK
	f	Lekr$o;	o	CALCITE
	f	Lekr$o;	p	GRAVEL
	f	Lekr$o;	q	SAND
	f	Lekr$o;	r	SANDSTONE
	f	Lekr$o;	s	PACKED_ICE
	f	Lekr$o;	t	SNOW_BLOCK
	f	Lekr$o;	u	MUD
	f	Lekr$o;	v	POWDER_SNOW
	f	Lekr$o;	w	ICE
	f	Lekr$o;	x	WATER
	f	Lekr$o;	y	LAVA
	f	Lekr$o;	z	NETHERRACK
	f	Lekr$o;	A	SOUL_SAND
	f	Lekr$o;	B	SOUL_SOIL
	f	Lekr$o;	C	BASALT
	f	Lekr$o;	D	BLACKSTONE
	f	Lekr$o;	E	WARPED_WART_BLOCK
	f	Lekr$o;	F	WARPED_NYLIUM
	f	Lekr$o;	G	NETHER_WART_BLOCK
	f	Lekr$o;	H	CRIMSON_NYLIUM
	f	Lekr$o;	I	ENDSTONE
	m	()V	<init>	<init>
	m	(Ldpz;)Lekr$o;	a	makeStateRule
	m	()Lekr$o;	a	overworld
	m	(ZZZ)Lekr$o;	a	overworldLike
	m	()Lekr$o;	b	nether
	m	()Lekr$o;	c	end
	m	()Lekr$o;	d	air
	m	(D)Lekr$f;	a	surfaceNoiseAbove
	m	(I)[Lekr$o;	a	lambda$overworldLike$0
	m	()V	<clinit>	<clinit>
c	re	net/minecraft/data/worldgen/TaigaVillagePools
	f	Lamd;	a	START
	f	Lamd;	b	TERMINATORS_KEY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rf	net/minecraft/data/worldgen/TerrainProvider
	f	F	a	DEEP_OCEAN_CONTINENTALNESS
	f	F	b	OCEAN_CONTINENTALNESS
	f	F	c	PLAINS_CONTINENTALNESS
	f	F	d	BEACH_CONTINENTALNESS
	f	Lbdh;	e	NO_TRANSFORM
	f	Lbdh;	f	AMPLIFIED_OFFSET
	f	Lbdh;	g	AMPLIFIED_FACTOR
	f	Lbdh;	h	AMPLIFIED_JAGGEDNESS
	m	()V	<init>	<init>
	m	(Lbdh;Lbdh;Lbdh;Z)Lbbb;	a	overworldOffset
	m	(Lbdh;Lbdh;Lbdh;Lbdh;Z)Lbbb;	a	overworldFactor
	m	(Lbdh;Lbdh;Lbdh;Lbdh;Z)Lbbb;	b	overworldJaggedness
	m	(Lbdh;Lbdh;Lbdh;FFFFLbdh;)Lbbb;	a	buildErosionJaggednessSpline
	m	(Lbdh;Lbdh;FFLbdh;)Lbbb;	a	buildRidgeJaggednessSpline
	m	(Lbdh;FLbdh;)Lbbb;	a	buildWeirdnessJaggednessSpline
	m	(Lbdh;Lbdh;Lbdh;FZLbdh;)Lbbb;	a	getErosionFactor
	m	(FFFF)F	a	calculateSlope
	m	(Lbdh;FZLbdh;)Lbbb;	a	buildMountainRidgeSplineWithPoints
	m	(FFF)F	a	mountainContinentalness
	m	(F)F	a	calculateMountainRidgeZeroContinentalnessPoint
	m	(Lbdh;Lbdh;FFFFFFZZLbdh;)Lbbb;	a	buildErosionOffsetSpline
	m	(Lbdh;FFFFFFLbdh;)Lbbb;	a	ridgeSpline
	m	(F)F	b	lambda$static$2
	m	(F)F	c	lambda$static$1
	m	(F)F	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	rg	net/minecraft/data/worldgen/TrailRuinsStructurePools
	f	Lamd;	a	START
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rh	net/minecraft/data/worldgen/TrialChambersStructurePools
	f	Lamd;	a	START
	f	Lamd;	b	HALLWAY_FALLBACK
	f	Ljava/util/List;	c	ALIAS_BINDINGS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	spawner
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	ri	net/minecraft/data/worldgen/VillagePools
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	rj	net/minecraft/data/worldgen/biome/BiomeData
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
c	rk	net/minecraft/data/worldgen/biome/EndBiomes
	m	()V	<init>	<init>
	m	(Ldny$a;)Ldnx;	a	baseEndBiome
	m	(Ljm;Ljm;)Ldnx;	a	endBarrens
	m	(Ljm;Ljm;)Ldnx;	b	theEnd
	m	(Ljm;Ljm;)Ldnx;	c	endMidlands
	m	(Ljm;Ljm;)Ldnx;	d	endHighlands
	m	(Ljm;Ljm;)Ldnx;	e	smallEndIslands
c	rl	net/minecraft/data/worldgen/biome/NetherBiomes
	m	()V	<init>	<init>
	m	(Ljm;Ljm;)Ldnx;	a	netherWastes
	m	(Ljm;Ljm;)Ldnx;	b	soulSandValley
	m	(Ljm;Ljm;)Ldnx;	c	basaltDeltas
	m	(Ljm;Ljm;)Ldnx;	d	crimsonForest
	m	(Ljm;Ljm;)Ldnx;	e	warpedForest
c	rm	net/minecraft/data/worldgen/biome/OverworldBiomes
	f	I	a	NORMAL_WATER_COLOR
	f	I	b	NORMAL_WATER_FOG_COLOR
	f	I	d	OVERWORLD_FOG_COLOR
	f	I	e	DARK_DRY_FOLIAGE_COLOR
	f	Layw;	f	NORMAL_MUSIC
	f	I	c	SWAMP_SKELETON_WEIGHT
	m	()V	<init>	<init>
	m	(F)I	a	calculateSkyColor
	m	(ZFFLdoj$a;Ldny$a;Layw;)Ldnx;	a	biome
	m	(ZFFIILjava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ldoj$a;Ldny$a;Layw;)Ldnx;	a	biome
	m	(Ldny$a;)V	a	globalOverworldGeneration
	m	(Ljm;Ljm;Z)Ldnx;	a	oldGrowthTaiga
	m	(Ljm;Ljm;)Ldnx;	a	sparseJungle
	m	(Ljm;Ljm;)Ldnx;	b	jungle
	m	(Ljm;Ljm;)Ldnx;	c	bambooJungle
	m	(Ljm;Ljm;FZZZLdoj$a;Layw;)Ldnx;	a	baseJungle
	m	(Ljm;Ljm;Z)Ldnx;	b	windsweptHills
	m	(Ljm;Ljm;)Ldnx;	d	desert
	m	(Ljm;Ljm;ZZZ)Ldnx;	a	plains
	m	(Ljm;Ljm;)Ldnx;	e	mushroomFields
	m	(Ljm;Ljm;ZZ)Ldnx;	a	savanna
	m	(Ljm;Ljm;Z)Ldnx;	c	badlands
	m	(Ldoj$a;IILdny$a;)Ldnx;	a	baseOcean
	m	(Ljm;Ljm;)Ldny$a;	r	baseOceanGeneration
	m	(Ljm;Ljm;Z)Ldnx;	d	coldOcean
	m	(Ljm;Ljm;Z)Ldnx;	e	ocean
	m	(Ljm;Ljm;Z)Ldnx;	f	lukeWarmOcean
	m	(Ljm;Ljm;)Ldnx;	f	warmOcean
	m	(Ljm;Ljm;Z)Ldnx;	g	frozenOcean
	m	(Ljm;Ljm;ZZZ)Ldnx;	b	forest
	m	(Ljm;Ljm;Z)Ldnx;	h	taiga
	m	(Ljm;Ljm;Z)Ldnx;	i	darkForest
	m	(Ljm;Ljm;)Ldnx;	g	swamp
	m	(Ljm;Ljm;)Ldnx;	h	mangroveSwamp
	m	(Ljm;Ljm;Z)Ldnx;	j	river
	m	(Ljm;Ljm;ZZ)Ldnx;	b	beach
	m	(Ljm;Ljm;)Ldnx;	i	theVoid
	m	(Ljm;Ljm;Z)Ldnx;	k	meadowOrCherryGrove
	m	(Ljm;Ljm;)Ldnx;	j	frozenPeaks
	m	(Ljm;Ljm;)Ldnx;	k	jaggedPeaks
	m	(Ljm;Ljm;)Ldnx;	l	stonyPeaks
	m	(Ljm;Ljm;)Ldnx;	m	snowySlopes
	m	(Ljm;Ljm;)Ldnx;	n	grove
	m	(Ljm;Ljm;)Ldnx;	o	lushCaves
	m	(Ljm;Ljm;)Ldnx;	p	dripstoneCaves
	m	(Ljm;Ljm;)Ldnx;	q	deepDark
	m	()V	<clinit>	<clinit>
c	rn	net/minecraft/data/worldgen/biome/package-info
c	ro	net/minecraft/data/worldgen/features/AquaticFeatures
	f	Lamd;	a	SEAGRASS_SHORT
	f	Lamd;	b	SEAGRASS_SLIGHTLY_LESS_SHORT
	f	Lamd;	c	SEAGRASS_MID
	f	Lamd;	d	SEAGRASS_TALL
	f	Lamd;	e	SEA_PICKLE
	f	Lamd;	f	KELP
	f	Lamd;	g	WARM_OCEAN_VEGETATION
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rp	net/minecraft/data/worldgen/features/CaveFeatures
	f	Lamd;	a	MONSTER_ROOM
	f	Lamd;	b	FOSSIL_COAL
	f	Lamd;	c	FOSSIL_DIAMONDS
	f	Lamd;	d	DRIPSTONE_CLUSTER
	f	Lamd;	e	LARGE_DRIPSTONE
	f	Lamd;	f	POINTED_DRIPSTONE
	f	Lamd;	g	UNDERWATER_MAGMA
	f	Lamd;	h	GLOW_LICHEN
	f	Lamd;	i	ROOTED_AZALEA_TREE
	f	Lamd;	j	CAVE_VINE
	f	Lamd;	k	CAVE_VINE_IN_MOSS
	f	Lamd;	l	MOSS_VEGETATION
	f	Lamd;	m	MOSS_PATCH
	f	Lamd;	n	MOSS_PATCH_BONEMEAL
	f	Lamd;	o	DRIPLEAF
	f	Lamd;	p	CLAY_WITH_DRIPLEAVES
	f	Lamd;	q	CLAY_POOL_WITH_DRIPLEAVES
	f	Lamd;	r	LUSH_CAVES_CLAY
	f	Lamd;	s	MOSS_PATCH_CEILING
	f	Lamd;	t	SPORE_BLOSSOM
	f	Lamd;	u	AMETHYST_GEODE
	f	Lamd;	v	SCULK_PATCH_DEEP_DARK
	f	Lamd;	w	SCULK_PATCH_ANCIENT_CITY
	f	Lamd;	x	SCULK_VEIN
	m	()V	<init>	<init>
	m	(Ljh;)Ljl;	a	makeDripleaf
	m	()Ljl;	a	makeSmallDripleaf
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rq	net/minecraft/data/worldgen/features/EndFeatures
	f	Lamd;	a	END_PLATFORM
	f	Lamd;	b	END_SPIKE
	f	Lamd;	c	END_GATEWAY_RETURN
	f	Lamd;	d	END_GATEWAY_DELAYED
	f	Lamd;	e	CHORUS_PLANT
	f	Lamd;	f	END_ISLAND
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rr	net/minecraft/data/worldgen/features/FeatureUtils
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/util/List;)Lelh;	a	simplePatchPredicate
	m	(ILjl;)Lepz;	a	simpleRandomPatchConfiguration
	m	(Lenh;Lepm;Ljava/util/List;I)Lepz;	a	simplePatchConfiguration
	m	(Lenh;Lepm;Ljava/util/List;)Lepz;	a	simplePatchConfiguration
	m	(Lenh;Lepm;)Lepz;	a	simplePatchConfiguration
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;Lamd;Lenh;)V	a	register
	m	(Lqq;Lamd;Lenh;Lepm;)V	a	register
c	rs	net/minecraft/data/worldgen/features/MiscOverworldFeatures
	f	Lamd;	a	ICE_SPIKE
	f	Lamd;	b	ICE_PATCH
	f	Lamd;	c	FOREST_ROCK
	f	Lamd;	d	ICEBERG_PACKED
	f	Lamd;	e	ICEBERG_BLUE
	f	Lamd;	f	BLUE_ICE
	f	Lamd;	g	LAKE_LAVA
	f	Lamd;	h	DISK_CLAY
	f	Lamd;	i	DISK_GRAVEL
	f	Lamd;	j	DISK_SAND
	f	Lamd;	k	FREEZE_TOP_LAYER
	f	Lamd;	l	DISK_GRASS
	f	Lamd;	m	BONUS_CHEST
	f	Lamd;	n	VOID_START_PLATFORM
	f	Lamd;	o	DESERT_WELL
	f	Lamd;	p	SPRING_LAVA_OVERWORLD
	f	Lamd;	q	SPRING_LAVA_FROZEN
	f	Lamd;	r	SPRING_WATER
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rt	net/minecraft/data/worldgen/features/NetherFeatures
	f	Lamd;	a	DELTA
	f	Lamd;	b	SMALL_BASALT_COLUMNS
	f	Lamd;	c	LARGE_BASALT_COLUMNS
	f	Lamd;	d	BASALT_BLOBS
	f	Lamd;	e	BLACKSTONE_BLOBS
	f	Lamd;	f	GLOWSTONE_EXTRA
	f	Lamd;	g	CRIMSON_FOREST_VEGETATION
	f	Lamd;	h	CRIMSON_FOREST_VEGETATION_BONEMEAL
	f	Lamd;	i	WARPED_FOREST_VEGETION
	f	Lamd;	j	WARPED_FOREST_VEGETATION_BONEMEAL
	f	Lamd;	k	NETHER_SPROUTS
	f	Lamd;	l	NETHER_SPROUTS_BONEMEAL
	f	Lamd;	m	TWISTING_VINES
	f	Lamd;	n	TWISTING_VINES_BONEMEAL
	f	Lamd;	o	WEEPING_VINES
	f	Lamd;	p	PATCH_CRIMSON_ROOTS
	f	Lamd;	q	BASALT_PILLAR
	f	Lamd;	r	SPRING_LAVA_NETHER
	f	Lamd;	s	SPRING_NETHER_CLOSED
	f	Lamd;	t	SPRING_NETHER_OPEN
	f	Lamd;	u	PATCH_FIRE
	f	Lamd;	v	PATCH_SOUL_FIRE
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	ru	net/minecraft/data/worldgen/features/OreFeatures
	f	Lamd;	a	ORE_MAGMA
	f	Lamd;	b	ORE_SOUL_SAND
	f	Lamd;	c	ORE_NETHER_GOLD
	f	Lamd;	d	ORE_QUARTZ
	f	Lamd;	e	ORE_GRAVEL_NETHER
	f	Lamd;	f	ORE_BLACKSTONE
	f	Lamd;	g	ORE_DIRT
	f	Lamd;	h	ORE_GRAVEL
	f	Lamd;	i	ORE_GRANITE
	f	Lamd;	j	ORE_DIORITE
	f	Lamd;	k	ORE_ANDESITE
	f	Lamd;	l	ORE_TUFF
	f	Lamd;	m	ORE_COAL
	f	Lamd;	n	ORE_COAL_BURIED
	f	Lamd;	o	ORE_IRON
	f	Lamd;	p	ORE_IRON_SMALL
	f	Lamd;	q	ORE_GOLD
	f	Lamd;	r	ORE_GOLD_BURIED
	f	Lamd;	s	ORE_REDSTONE
	f	Lamd;	t	ORE_DIAMOND_SMALL
	f	Lamd;	u	ORE_DIAMOND_MEDIUM
	f	Lamd;	v	ORE_DIAMOND_LARGE
	f	Lamd;	w	ORE_DIAMOND_BURIED
	f	Lamd;	x	ORE_LAPIS
	f	Lamd;	y	ORE_LAPIS_BURIED
	f	Lamd;	z	ORE_INFESTED
	f	Lamd;	A	ORE_EMERALD
	f	Lamd;	B	ORE_ANCIENT_DEBRIS_LARGE
	f	Lamd;	C	ORE_ANCIENT_DEBRIS_SMALL
	f	Lamd;	D	ORE_COPPPER_SMALL
	f	Lamd;	E	ORE_COPPER_LARGE
	f	Lamd;	F	ORE_CLAY
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rv	net/minecraft/data/worldgen/features/PileFeatures
	f	Lamd;	a	PILE_HAY
	f	Lamd;	b	PILE_MELON
	f	Lamd;	c	PILE_SNOW
	f	Lamd;	d	PILE_ICE
	f	Lamd;	e	PILE_PUMPKIN
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rw	net/minecraft/data/worldgen/features/TreeFeatures
	f	Lamd;	a	CRIMSON_FUNGUS
	f	Lamd;	b	CRIMSON_FUNGUS_PLANTED
	f	Lamd;	c	WARPED_FUNGUS
	f	Lamd;	d	WARPED_FUNGUS_PLANTED
	f	Lamd;	e	HUGE_BROWN_MUSHROOM
	f	Lamd;	f	HUGE_RED_MUSHROOM
	f	Lamd;	g	OAK
	f	Lamd;	h	DARK_OAK
	f	Lamd;	i	PALE_OAK
	f	Lamd;	j	PALE_OAK_BONEMEAL
	f	Lamd;	k	PALE_OAK_CREAKING
	f	Lamd;	l	BIRCH
	f	Lamd;	m	ACACIA
	f	Lamd;	n	SPRUCE
	f	Lamd;	o	PINE
	f	Lamd;	p	JUNGLE_TREE
	f	Lamd;	q	FANCY_OAK
	f	Lamd;	r	JUNGLE_TREE_NO_VINE
	f	Lamd;	s	MEGA_JUNGLE_TREE
	f	Lamd;	t	MEGA_SPRUCE
	f	Lamd;	u	MEGA_PINE
	f	Lamd;	v	SUPER_BIRCH_BEES_0002
	f	Lamd;	w	SUPER_BIRCH_BEES
	f	Lamd;	x	SWAMP_OAK
	f	Lamd;	y	JUNGLE_BUSH
	f	Lamd;	z	AZALEA_TREE
	f	Lamd;	A	MANGROVE
	f	Lamd;	B	TALL_MANGROVE
	f	Lamd;	C	CHERRY
	f	Lamd;	D	OAK_BEES_0002_LEAF_LITTER
	f	Lamd;	E	OAK_BEES_002
	f	Lamd;	F	OAK_BEES_005
	f	Lamd;	G	BIRCH_BEES_0002
	f	Lamd;	H	BIRCH_BEES_0002_LEAF_LITTER
	f	Lamd;	I	BIRCH_BEES_002
	f	Lamd;	J	BIRCH_BEES_005
	f	Lamd;	K	FANCY_OAK_BEES_0002_LEAF_LITTER
	f	Lamd;	L	FANCY_OAK_BEES_002
	f	Lamd;	M	FANCY_OAK_BEES_005
	f	Lamd;	N	FANCY_OAK_BEES
	f	Lamd;	O	CHERRY_BEES_005
	f	Lamd;	P	OAK_LEAF_LITTER
	f	Lamd;	Q	DARK_OAK_LEAF_LITTER
	f	Lamd;	R	BIRCH_LEAF_LITTER
	f	Lamd;	S	FANCY_OAK_LEAF_LITTER
	f	Lamd;	T	FALLEN_OAK_TREE
	f	Lamd;	U	FALLEN_JUNGLE_TREE
	f	Lamd;	V	FALLEN_SPRUCE_TREE
	f	Lamd;	W	FALLEN_BIRCH_TREE
	f	Lamd;	X	FALLEN_SUPER_BIRCH_TREE
	m	()V	<init>	<init>
	m	(Ldpz;Ldpz;IIII)Leqi$a;	a	createStraightBlobTree
	m	()Leqi$a;	a	createOak
	m	()Leqi$a;	b	createDarkOak
	m	()Lepl$a;	c	createFallenOak
	m	(I)Lepl$a;	a	createFallenBirch
	m	()Lepl$a;	d	createFallenJungle
	m	()Lepl$a;	e	createFallenSpruce
	m	(Ldpz;II)Lepl$a;	a	createFallenTrees
	m	()Leqi$a;	f	createBirch
	m	()Leqi$a;	g	createSuperBirch
	m	()Leqi$a;	h	createJungleTree
	m	()Leqi$a;	i	createFancyOak
	m	()Leqi$a;	j	cherry
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	rx	net/minecraft/data/worldgen/features/VegetationFeatures
	f	Lamd;	a	BAMBOO_NO_PODZOL
	f	Lamd;	b	BAMBOO_SOME_PODZOL
	f	Lamd;	c	VINES
	f	Lamd;	d	PATCH_BROWN_MUSHROOM
	f	Lamd;	e	PATCH_RED_MUSHROOM
	f	Lamd;	f	PATCH_SUNFLOWER
	f	Lamd;	g	PATCH_PUMPKIN
	f	Lamd;	h	PATCH_BERRY_BUSH
	f	Lamd;	i	PATCH_TAIGA_GRASS
	f	Lamd;	j	PATCH_GRASS
	f	Lamd;	k	PATCH_GRASS_MEADOW
	f	Lamd;	l	PATCH_GRASS_JUNGLE
	f	Lamd;	m	SINGLE_PIECE_OF_GRASS
	f	Lamd;	n	PATCH_DEAD_BUSH
	f	Lamd;	o	PATCH_DRY_GRASS
	f	Lamd;	p	PATCH_MELON
	f	Lamd;	q	PATCH_WATERLILY
	f	Lamd;	r	PATCH_TALL_GRASS
	f	Lamd;	s	PATCH_LARGE_FERN
	f	Lamd;	t	PATCH_BUSH
	f	Lamd;	u	PATCH_LEAF_LITTER
	f	Lamd;	v	PATCH_FIREFLY_BUSH
	f	Lamd;	w	PATCH_CACTUS
	f	Lamd;	x	PATCH_SUGAR_CANE
	f	Lamd;	y	FLOWER_DEFAULT
	f	Lamd;	z	FLOWER_FLOWER_FOREST
	f	Lamd;	A	FLOWER_SWAMP
	f	Lamd;	B	FLOWER_PLAIN
	f	Lamd;	C	FLOWER_MEADOW
	f	Lamd;	D	FLOWER_CHERRY
	f	Lamd;	E	FLOWER_PALE_GARDEN
	f	Lamd;	F	WILDFLOWERS_BIRCH_FOREST
	f	Lamd;	G	WILDFLOWERS_MEADOW
	f	Lamd;	H	FOREST_FLOWERS
	f	Lamd;	I	PALE_FOREST_FLOWERS
	f	Lamd;	J	DARK_FOREST_VEGETATION
	f	Lamd;	K	PALE_GARDEN_VEGETATION
	f	Lamd;	L	PALE_MOSS_VEGETATION
	f	Lamd;	M	PALE_MOSS_PATCH
	f	Lamd;	N	PALE_MOSS_PATCH_BONEMEAL
	f	Lamd;	O	TREES_FLOWER_FOREST
	f	Lamd;	P	MEADOW_TREES
	f	Lamd;	Q	TREES_TAIGA
	f	Lamd;	R	TREES_BADLANDS
	f	Lamd;	S	TREES_GROVE
	f	Lamd;	T	TREES_SAVANNA
	f	Lamd;	U	TREES_SNOWY
	f	Lamd;	V	TREES_BIRCH
	f	Lamd;	W	BIRCH_TALL
	f	Lamd;	X	TREES_WINDSWEPT_HILLS
	f	Lamd;	Y	TREES_WATER
	f	Lamd;	Z	TREES_BIRCH_AND_OAK_LEAF_LITTER
	f	Lamd;	aa	TREES_PLAINS
	f	Lamd;	ab	TREES_SPARSE_JUNGLE
	f	Lamd;	ac	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lamd;	ad	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lamd;	ae	TREES_JUNGLE
	f	Lamd;	af	BAMBOO_VEGETATION
	f	Lamd;	ag	MUSHROOM_ISLAND_VEGETATION
	f	Lamd;	ah	MANGROVE_VEGETATION
	f	F	ai	FALLEN_TREE_ONE_IN_CHANCE
	m	()V	<init>	<init>
	m	(Lern;I)Lepz;	a	grassPatch
	m	(Lqq;)V	a	bootstrap
	m	(Ldpz;)Lbvt$a;	b	flowerBedPatchBuilder
	m	(II)Lbvt$a;	a	leafLitterPatchBuilder
	m	(Ldpz;IILefb;Leez;)Lbvt$a;	a	segmentedBlockPatchBuilder
	m	(Ldpz;)Letr;	a	nearWaterPredicate
	m	()V	<clinit>	<clinit>
c	ry	net/minecraft/data/worldgen/features/package-info
c	rz	net/minecraft/data/worldgen/package-info
c	sa	net/minecraft/data/worldgen/placement/AquaticPlacements
	f	Lamd;	a	SEAGRASS_WARM
	f	Lamd;	b	SEAGRASS_NORMAL
	f	Lamd;	c	SEAGRASS_COLD
	f	Lamd;	d	SEAGRASS_RIVER
	f	Lamd;	e	SEAGRASS_SWAMP
	f	Lamd;	f	SEAGRASS_DEEP_WARM
	f	Lamd;	g	SEAGRASS_DEEP
	f	Lamd;	h	SEAGRASS_DEEP_COLD
	f	Lamd;	i	SEA_PICKLE
	f	Lamd;	j	KELP_COLD
	f	Lamd;	k	KELP_WARM
	f	Lamd;	l	WARM_OCEAN_VEGETATION
	m	()V	<init>	<init>
	m	(I)Ljava/util/List;	a	seagrassPlacement
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sb	net/minecraft/data/worldgen/placement/CavePlacements
	f	Lamd;	a	MONSTER_ROOM
	f	Lamd;	b	MONSTER_ROOM_DEEP
	f	Lamd;	c	FOSSIL_UPPER
	f	Lamd;	d	FOSSIL_LOWER
	f	Lamd;	e	DRIPSTONE_CLUSTER
	f	Lamd;	f	LARGE_DRIPSTONE
	f	Lamd;	g	POINTED_DRIPSTONE
	f	Lamd;	h	UNDERWATER_MAGMA
	f	Lamd;	i	GLOW_LICHEN
	f	Lamd;	j	ROOTED_AZALEA_TREE
	f	Lamd;	k	CAVE_VINES
	f	Lamd;	l	LUSH_CAVES_VEGETATION
	f	Lamd;	m	LUSH_CAVES_CLAY
	f	Lamd;	n	LUSH_CAVES_CEILING_VEGETATION
	f	Lamd;	o	SPORE_BLOSSOM
	f	Lamd;	p	CLASSIC_VINES
	f	Lamd;	q	AMETHYST_GEODE
	f	Lamd;	r	SCULK_PATCH_DEEP_DARK
	f	Lamd;	s	SCULK_PATCH_ANCIENT_CITY
	f	Lamd;	t	SCULK_VEIN
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sc	net/minecraft/data/worldgen/placement/EndPlacements
	f	Lamd;	a	END_PLATFORM
	f	Lamd;	b	END_SPIKE
	f	Lamd;	c	END_GATEWAY_RETURN
	f	Lamd;	d	CHORUS_PLANT
	f	Lamd;	e	END_ISLAND_DECORATED
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sd	net/minecraft/data/worldgen/placement/MiscOverworldPlacements
	f	Lamd;	a	ICE_SPIKE
	f	Lamd;	b	ICE_PATCH
	f	Lamd;	c	FOREST_ROCK
	f	Lamd;	d	ICEBERG_PACKED
	f	Lamd;	e	ICEBERG_BLUE
	f	Lamd;	f	BLUE_ICE
	f	Lamd;	g	LAKE_LAVA_UNDERGROUND
	f	Lamd;	h	LAKE_LAVA_SURFACE
	f	Lamd;	i	DISK_CLAY
	f	Lamd;	j	DISK_GRAVEL
	f	Lamd;	k	DISK_SAND
	f	Lamd;	l	DISK_GRASS
	f	Lamd;	m	FREEZE_TOP_LAYER
	f	Lamd;	n	VOID_START_PLATFORM
	f	Lamd;	o	DESERT_WELL
	f	Lamd;	p	SPRING_LAVA
	f	Lamd;	q	SPRING_LAVA_FROZEN
	f	Lamd;	r	SPRING_WATER
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	se	net/minecraft/data/worldgen/placement/NetherPlacements
	f	Lamd;	a	DELTA
	f	Lamd;	b	SMALL_BASALT_COLUMNS
	f	Lamd;	c	LARGE_BASALT_COLUMNS
	f	Lamd;	d	BASALT_BLOBS
	f	Lamd;	e	BLACKSTONE_BLOBS
	f	Lamd;	f	GLOWSTONE_EXTRA
	f	Lamd;	g	GLOWSTONE
	f	Lamd;	h	CRIMSON_FOREST_VEGETATION
	f	Lamd;	i	WARPED_FOREST_VEGETATION
	f	Lamd;	j	NETHER_SPROUTS
	f	Lamd;	k	TWISTING_VINES
	f	Lamd;	l	WEEPING_VINES
	f	Lamd;	m	PATCH_CRIMSON_ROOTS
	f	Lamd;	n	BASALT_PILLAR
	f	Lamd;	o	SPRING_DELTA
	f	Lamd;	p	SPRING_CLOSED
	f	Lamd;	q	SPRING_CLOSED_DOUBLE
	f	Lamd;	r	SPRING_OPEN
	f	Lamd;	s	PATCH_SOUL_FIRE
	f	Lamd;	t	PATCH_FIRE
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sf	net/minecraft/data/worldgen/placement/OrePlacements
	f	Lamd;	a	ORE_MAGMA
	f	Lamd;	b	ORE_SOUL_SAND
	f	Lamd;	c	ORE_GOLD_DELTAS
	f	Lamd;	d	ORE_QUARTZ_DELTAS
	f	Lamd;	e	ORE_GOLD_NETHER
	f	Lamd;	f	ORE_QUARTZ_NETHER
	f	Lamd;	g	ORE_GRAVEL_NETHER
	f	Lamd;	h	ORE_BLACKSTONE
	f	Lamd;	i	ORE_DIRT
	f	Lamd;	j	ORE_GRAVEL
	f	Lamd;	k	ORE_GRANITE_UPPER
	f	Lamd;	l	ORE_GRANITE_LOWER
	f	Lamd;	m	ORE_DIORITE_UPPER
	f	Lamd;	n	ORE_DIORITE_LOWER
	f	Lamd;	o	ORE_ANDESITE_UPPER
	f	Lamd;	p	ORE_ANDESITE_LOWER
	f	Lamd;	q	ORE_TUFF
	f	Lamd;	r	ORE_COAL_UPPER
	f	Lamd;	s	ORE_COAL_LOWER
	f	Lamd;	t	ORE_IRON_UPPER
	f	Lamd;	u	ORE_IRON_MIDDLE
	f	Lamd;	v	ORE_IRON_SMALL
	f	Lamd;	w	ORE_GOLD_EXTRA
	f	Lamd;	x	ORE_GOLD
	f	Lamd;	y	ORE_GOLD_LOWER
	f	Lamd;	z	ORE_REDSTONE
	f	Lamd;	A	ORE_REDSTONE_LOWER
	f	Lamd;	B	ORE_DIAMOND
	f	Lamd;	C	ORE_DIAMOND_MEDIUM
	f	Lamd;	D	ORE_DIAMOND_LARGE
	f	Lamd;	E	ORE_DIAMOND_BURIED
	f	Lamd;	F	ORE_LAPIS
	f	Lamd;	G	ORE_LAPIS_BURIED
	f	Lamd;	H	ORE_INFESTED
	f	Lamd;	I	ORE_EMERALD
	f	Lamd;	J	ORE_ANCIENT_DEBRIS_LARGE
	f	Lamd;	K	ORE_ANCIENT_DEBRIS_SMALL
	f	Lamd;	L	ORE_COPPER
	f	Lamd;	M	ORE_COPPER_LARGE
	f	Lamd;	N	ORE_CLAY
	m	()V	<init>	<init>
	m	(Leuf;Leuf;)Ljava/util/List;	a	orePlacement
	m	(ILeuf;)Ljava/util/List;	a	commonOrePlacement
	m	(ILeuf;)Ljava/util/List;	b	rareOrePlacement
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sg	net/minecraft/data/worldgen/placement/PlacementUtils
	f	Leuf;	a	HEIGHTMAP
	f	Leuf;	b	HEIGHTMAP_NO_LEAVES
	f	Leuf;	c	HEIGHTMAP_TOP_SOLID
	f	Leuf;	d	HEIGHTMAP_WORLD_SURFACE
	f	Leuf;	e	HEIGHTMAP_OCEAN_FLOOR
	f	Leuf;	f	FULL_RANGE
	f	Leuf;	g	RANGE_10_10
	f	Leuf;	h	RANGE_8_8
	f	Leuf;	i	RANGE_4_4
	f	Leuf;	j	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;Lamd;Ljl;Ljava/util/List;)V	a	register
	m	(Lqq;Lamd;Ljl;[Leuf;)V	a	register
	m	(IFI)Leuf;	a	countExtra
	m	()Leue;	a	isEmpty
	m	(Ldpz;)Letr;	a	filteredByBlockSurvival
	m	(Ljl;[Leuf;)Ljl;	a	inlinePlaced
	m	(Lenh;Lepm;[Leuf;)Ljl;	a	inlinePlaced
	m	(Lenh;Lepm;)Ljl;	a	onlyWhenEmpty
	m	(Lenh;Lepm;Lelh;)Ljl;	a	filtered
	m	()V	<clinit>	<clinit>
c	sh	net/minecraft/data/worldgen/placement/TreePlacements
	f	Lamd;	a	CRIMSON_FUNGI
	f	Lamd;	b	WARPED_FUNGI
	f	Lamd;	c	OAK_CHECKED
	f	Lamd;	d	DARK_OAK_CHECKED
	f	Lamd;	e	PALE_OAK_CHECKED
	f	Lamd;	f	PALE_OAK_CREAKING_CHECKED
	f	Lamd;	g	BIRCH_CHECKED
	f	Lamd;	h	ACACIA_CHECKED
	f	Lamd;	i	SPRUCE_CHECKED
	f	Lamd;	j	MANGROVE_CHECKED
	f	Lamd;	k	CHERRY_CHECKED
	f	Lamd;	l	PINE_ON_SNOW
	f	Lamd;	m	SPRUCE_ON_SNOW
	f	Lamd;	n	PINE_CHECKED
	f	Lamd;	o	JUNGLE_TREE_CHECKED
	f	Lamd;	p	FANCY_OAK_CHECKED
	f	Lamd;	q	MEGA_JUNGLE_TREE_CHECKED
	f	Lamd;	r	MEGA_SPRUCE_CHECKED
	f	Lamd;	s	MEGA_PINE_CHECKED
	f	Lamd;	t	TALL_MANGROVE_CHECKED
	f	Lamd;	u	JUNGLE_BUSH
	f	Lamd;	v	SUPER_BIRCH_BEES_0002
	f	Lamd;	w	SUPER_BIRCH_BEES
	f	Lamd;	x	OAK_BEES_0002_LEAF_LITTER
	f	Lamd;	y	OAK_BEES_002
	f	Lamd;	z	BIRCH_BEES_0002_PLACED
	f	Lamd;	A	BIRCH_BEES_0002_LEAF_LITTER
	f	Lamd;	B	BIRCH_BEES_002
	f	Lamd;	C	FANCY_OAK_BEES_0002_LEAF_LITTER
	f	Lamd;	D	FANCY_OAK_BEES_002
	f	Lamd;	E	FANCY_OAK_BEES
	f	Lamd;	F	CHERRY_BEES_005
	f	Lamd;	G	OAK_LEAF_LITTER
	f	Lamd;	H	DARK_OAK_LEAF_LITTER
	f	Lamd;	I	BIRCH_LEAF_LITTER
	f	Lamd;	J	FANCY_OAK_LEAF_LITTER
	f	Lamd;	K	FALLEN_OAK_TREE
	f	Lamd;	L	FALLEN_BIRCH_TREE
	f	Lamd;	M	FALLEN_SUPER_BIRCH_TREE
	f	Lamd;	N	FALLEN_SPRUCE_TREE
	f	Lamd;	O	FALLEN_JUNGLE_TREE
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	si	net/minecraft/data/worldgen/placement/VegetationPlacements
	f	Lamd;	a	BAMBOO_LIGHT
	f	Lamd;	b	BAMBOO
	f	Lamd;	c	VINES
	f	Lamd;	d	PATCH_SUNFLOWER
	f	Lamd;	e	PATCH_PUMPKIN
	f	Lamd;	f	PATCH_GRASS_PLAIN
	f	Lamd;	g	PATCH_GRASS_MEADOW
	f	Lamd;	h	PATCH_GRASS_FOREST
	f	Lamd;	i	PATCH_GRASS_BADLANDS
	f	Lamd;	j	PATCH_GRASS_SAVANNA
	f	Lamd;	k	PATCH_GRASS_NORMAL
	f	Lamd;	l	PATCH_GRASS_TAIGA_2
	f	Lamd;	m	PATCH_GRASS_TAIGA
	f	Lamd;	n	PATCH_GRASS_JUNGLE
	f	Lamd;	o	GRASS_BONEMEAL
	f	Lamd;	p	PATCH_DEAD_BUSH_2
	f	Lamd;	q	PATCH_DEAD_BUSH
	f	Lamd;	r	PATCH_DEAD_BUSH_BADLANDS
	f	Lamd;	s	PATCH_DRY_GRASS_BADLANDS
	f	Lamd;	t	PATCH_DRY_GRASS_DESERT
	f	Lamd;	u	PATCH_MELON
	f	Lamd;	v	PATCH_MELON_SPARSE
	f	Lamd;	w	PATCH_BERRY_COMMON
	f	Lamd;	x	PATCH_BERRY_RARE
	f	Lamd;	y	PATCH_WATERLILY
	f	Lamd;	z	PATCH_TALL_GRASS_2
	f	Lamd;	A	PATCH_TALL_GRASS
	f	Lamd;	B	PATCH_LARGE_FERN
	f	Lamd;	C	PATCH_BUSH
	f	Lamd;	D	PATCH_LEAF_LITTER
	f	Lamd;	E	PATCH_CACTUS_DESERT
	f	Lamd;	F	PATCH_CACTUS_DECORATED
	f	Lamd;	G	PATCH_SUGAR_CANE_SWAMP
	f	Lamd;	H	PATCH_SUGAR_CANE_DESERT
	f	Lamd;	I	PATCH_SUGAR_CANE_BADLANDS
	f	Lamd;	J	PATCH_SUGAR_CANE
	f	Lamd;	K	PATCH_FIREFLY_BUSH_SWAMP
	f	Lamd;	L	PATCH_FIREFLY_BUSH_NEAR_WATER_SWAMP
	f	Lamd;	M	PATCH_FIREFLY_BUSH_NEAR_WATER
	f	Lamd;	N	BROWN_MUSHROOM_NETHER
	f	Lamd;	O	RED_MUSHROOM_NETHER
	f	Lamd;	P	BROWN_MUSHROOM_NORMAL
	f	Lamd;	Q	RED_MUSHROOM_NORMAL
	f	Lamd;	R	BROWN_MUSHROOM_TAIGA
	f	Lamd;	S	RED_MUSHROOM_TAIGA
	f	Lamd;	T	BROWN_MUSHROOM_OLD_GROWTH
	f	Lamd;	U	RED_MUSHROOM_OLD_GROWTH
	f	Lamd;	V	BROWN_MUSHROOM_SWAMP
	f	Lamd;	W	RED_MUSHROOM_SWAMP
	f	Lamd;	X	FLOWER_WARM
	f	Lamd;	Y	FLOWER_DEFAULT
	f	Lamd;	Z	FLOWER_FLOWER_FOREST
	f	Lamd;	aa	FLOWER_SWAMP
	f	Lamd;	ab	FLOWER_PLAINS
	f	Lamd;	ac	FLOWER_MEADOW
	f	Lamd;	ad	FLOWER_CHERRY
	f	Lamd;	ae	FLOWER_PALE_GARDEN
	f	Lamd;	af	WILDFLOWERS_BIRCH_FOREST
	f	Lamd;	ag	WILDFLOWERS_MEADOW
	f	Lamd;	ah	TREES_PLAINS
	f	Lamd;	ai	DARK_FOREST_VEGETATION
	f	Lamd;	aj	PALE_GARDEN_VEGETATION
	f	Lamd;	ak	FLOWER_FOREST_FLOWERS
	f	Lamd;	al	FOREST_FLOWERS
	f	Lamd;	am	PALE_GARDEN_FLOWERS
	f	Lamd;	an	PALE_MOSS_PATCH
	f	Lamd;	ao	TREES_FLOWER_FOREST
	f	Lamd;	ap	TREES_MEADOW
	f	Lamd;	aq	TREES_CHERRY
	f	Lamd;	ar	TREES_TAIGA
	f	Lamd;	as	TREES_GROVE
	f	Lamd;	at	TREES_BADLANDS
	f	Lamd;	au	TREES_SNOWY
	f	Lamd;	av	TREES_SWAMP
	f	Lamd;	aw	TREES_WINDSWEPT_SAVANNA
	f	Lamd;	ax	TREES_SAVANNA
	f	Lamd;	ay	BIRCH_TALL
	f	Lamd;	az	TREES_BIRCH
	f	Lamd;	aA	TREES_WINDSWEPT_FOREST
	f	Lamd;	aB	TREES_WINDSWEPT_HILLS
	f	Lamd;	aC	TREES_WATER
	f	Lamd;	aD	TREES_BIRCH_AND_OAK_LEAF_LITTER
	f	Lamd;	aE	TREES_SPARSE_JUNGLE
	f	Lamd;	aF	TREES_OLD_GROWTH_SPRUCE_TAIGA
	f	Lamd;	aG	TREES_OLD_GROWTH_PINE_TAIGA
	f	Lamd;	aH	TREES_JUNGLE
	f	Lamd;	aI	BAMBOO_VEGETATION
	f	Lamd;	aJ	MUSHROOM_ISLAND_VEGETATION
	f	Lamd;	aK	TREES_MANGROVE
	f	Leuf;	aL	TREE_THRESHOLD
	m	()V	<init>	<init>
	m	(I)Ljava/util/List;	a	worldSurfaceSquaredWithCount
	m	(ILeuf;)Ljava/util/List;	a	getMushroomPlacement
	m	(Leuf;)Lcom/google/common/collect/ImmutableList$Builder;	b	treePlacementBase
	m	(Leuf;)Ljava/util/List;	a	treePlacement
	m	(Leuf;Ldpz;)Ljava/util/List;	a	treePlacement
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sj	net/minecraft/data/worldgen/placement/VillagePlacements
	f	Lamd;	a	PILE_HAY_VILLAGE
	f	Lamd;	b	PILE_MELON_VILLAGE
	f	Lamd;	c	PILE_SNOW_VILLAGE
	f	Lamd;	d	PILE_ICE_VILLAGE
	f	Lamd;	e	PILE_PUMPKIN_VILLAGE
	f	Lamd;	f	OAK_VILLAGE
	f	Lamd;	g	ACACIA_VILLAGE
	f	Lamd;	h	SPRUCE_VILLAGE
	f	Lamd;	i	PINE_VILLAGE
	f	Lamd;	j	PATCH_CACTUS_VILLAGE
	f	Lamd;	k	FLOWER_PLAIN_VILLAGE
	f	Lamd;	l	PATCH_TAIGA_GRASS_VILLAGE
	f	Lamd;	m	PATCH_BERRY_BUSH_VILLAGE
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sk	net/minecraft/data/worldgen/placement/package-info
c	net/minecraft/gametest/Main	net/minecraft/gametest/Main
	m	()V	<init>	<init>
	m	([Ljava/lang/String;)V	main	main
	m	(Ljava/lang/String;)V	a	lambda$main$0
c	sl	net/minecraft/gametest/framework/BlockBasedTestInstance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ltt;)V	<init>	<init>
	m	(Lsy;)V	a	run
	m	(Lsy;Lefm;Ljava/util/function/Consumer;)V	a	forAllTriggeredTestBlocks
	m	(Lsy;)Ljb;	b	findStartBlock
	m	(Lsy;Lefm;)Ljava/util/List;	a	findTestBlocks
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lyc;	b	typeDescription
	m	(Lsy;Lefm;Ljava/util/List;Ljb;)V	a	lambda$findTestBlocks$4
	m	(Lsy;)V	c	lambda$run$3
	m	(Lsy;Lect;)V	a	lambda$run$2
	m	(Lsy;Ljb;)Lect;	a	lambda$run$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	sm	net/minecraft/gametest/framework/BuiltinTestFunctions
	f	Lamd;	a	ALWAYS_PASS
	f	Ljava/util/function/Consumer;	b	ALWAYS_PASS_INSTANCE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Ljy;)Ljava/util/function/Consumer;	a	bootstrap
	m	(Ljava/util/function/BiConsumer;)V	a	load
	m	()V	<clinit>	<clinit>
c	sn	net/minecraft/gametest/framework/ExhaustedAttemptsException
	m	(IILsz;)V	<init>	<init>
c	so	net/minecraft/gametest/framework/FailedTestTracker
	f	Ljava/util/Set;	a	LAST_FAILED_TESTS
	m	()V	<init>	<init>
	m	()Ljava/util/stream/Stream;	a	getLastFailedTests
	m	(Ljl$c;)V	a	rememberFailedTest
	m	()V	b	forgetFailedTests
	m	()V	<clinit>	<clinit>
c	sp	net/minecraft/gametest/framework/FunctionGameTestInstance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lamd;	c	function
	m	(Lamd;Ltt;)V	<init>	<init>
	m	(Lsy;)V	a	run
	m	()Lamd;	q	function
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lyc;	b	typeDescription
	m	()Lxo;	c	describe
	m	()Ljava/lang/IllegalStateException;	r	lambda$run$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	sq	net/minecraft/gametest/framework/GameTestAssertException
	f	Lxo;	a	message
	f	I	b	tick
	m	(Lxo;I)V	<init>	<init>
	m	()Lxo;	a	getDescription
	m	()Ljava/lang/String;	getMessage	getMessage
c	sr	net/minecraft/gametest/framework/GameTestAssertPosException
	f	Ljb;	c	absolutePos
	f	Ljb;	d	relativePos
	m	(Lxo;Ljb;Ljb;I)V	<init>	<init>
	m	()Lxo;	a	getDescription
	m	()Ljava/lang/String;	b	getMessageToShowAtBlock
	m	()Ljb;	c	getRelativePos
	m	()Ljb;	d	getAbsolutePos
c	ss	net/minecraft/gametest/framework/GameTestBatch
	f	I	a	index
	f	Ljava/util/Collection;	b	gameTestInfos
	f	Ljl;	c	environment
	m	(ILjava/util/Collection;Ljl;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	index
	m	()Ljava/util/Collection;	b	gameTestInfos
	m	()Ljl;	c	environment
c	st	net/minecraft/gametest/framework/GameTestBatchFactory
	f	I	b	MAX_TESTS_PER_BATCH
	f	Lst$a;	a	DIRECT
	m	()V	<init>	<init>
	m	(Ljava/util/Collection;Lst$a;Laub;)Ljava/util/List;	a	divideIntoBatches
	m	()Lte$b;	a	fromGameTestInfo
	m	(I)Lte$b;	a	fromGameTestInfo
	m	(Ljava/util/Collection;Ljl;I)Lss;	a	toGameTestBatch
	m	(ILjava/util/Collection;)Ljava/util/Collection;	a	lambda$fromGameTestInfo$8
	m	(ILjava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$fromGameTestInfo$7
	m	(Ljl;Ljava/util/List;J)Lss;	a	lambda$fromGameTestInfo$6
	m	(Lsz;)Ljl;	a	lambda$fromGameTestInfo$5
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$divideIntoBatches$4
	m	(Ljl;Ljava/util/List;J)Lss;	b	lambda$divideIntoBatches$3
	m	(Lsz;)Ljl;	b	lambda$divideIntoBatches$2
	m	(Lst$a;Laub;Ljl$c;)Ljava/util/stream/Stream;	a	lambda$divideIntoBatches$1
	m	(Ljl$c;Laub;)Ljava/util/stream/Stream;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	st$a	net/minecraft/gametest/framework/GameTestBatchFactory$TestDecorator
	m	(Ljl$c;Laub;)Ljava/util/stream/Stream;	decorate	decorate
c	su	net/minecraft/gametest/framework/GameTestBatchListener
	m	(Lss;)V	a	testBatchStarting
	m	(Lss;)V	b	testBatchFinished
c	sv	net/minecraft/gametest/framework/GameTestEnvironments
	f	Ljava/lang/String;	a	DEFAULT
	f	Lamd;	b	DEFAULT_KEY
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	sw	net/minecraft/gametest/framework/GameTestEvent
	f	Ljava/lang/Long;	a	expectedDelay
	f	Ljava/lang/Runnable;	b	assertion
	m	(Ljava/lang/Long;Ljava/lang/Runnable;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Lsw;	a	create
	m	(JLjava/lang/Runnable;)Lsw;	a	create
c	sx	net/minecraft/gametest/framework/GameTestException
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Lxo;	a	getDescription
c	sy	net/minecraft/gametest/framework/GameTestHelper
	f	Lsz;	a	testInfo
	f	Z	b	finalCheckAdded
	m	(Lsz;)V	<init>	<init>
	m	(Lxo;)Lsq;	a	assertionException
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lsq;	a	assertionException
	m	(Ljb;Lxo;)Lsr;	a	assertionException
	m	(Ljb;Ljava/lang/String;[Ljava/lang/Object;)Lsr;	a	assertionException
	m	()Laub;	a	getLevel
	m	(Ljb;)Leeb;	a	getBlockState
	m	(Ljb;Ljava/lang/Class;)Leaz;	a	getBlockEntity
	m	()V	b	killAllEntities
	m	(Ljava/lang/Class;)V	a	killAllEntitiesOfClass
	m	(Ldcr;Lfis;)Lcqz;	a	spawnItem
	m	(Ldcr;FFF)Lcqz;	a	spawnItem
	m	(Ldcr;Ljb;)Lcqz;	a	spawnItem
	m	(Lbzv;Ljb;)Lbzm;	a	spawn
	m	(Lbzv;Lfis;)Lbzm;	a	spawn
	m	(Lbzm;Lbyb;F)V	a	hurt
	m	(Lbzm;)V	a	kill
	m	(Lbzv;)Lbzm;	a	findOneEntity
	m	(Lbzv;IIID)Lbzm;	a	findClosestEntity
	m	(Lbzv;IIID)Ljava/util/List;	b	findEntities
	m	(Lbzv;Lfis;D)Ljava/util/List;	a	findEntities
	m	(Lbzv;III)Lbzm;	a	spawn
	m	(Lbzv;FFF)Lbzm;	a	spawn
	m	(Lbzv;Ljb;)Lcao;	b	spawnWithNoFreeWill
	m	(Lbzv;III)Lcao;	b	spawnWithNoFreeWill
	m	(Lbzv;Lfis;)Lcao;	b	spawnWithNoFreeWill
	m	(Lbzv;FFF)Lcao;	b	spawnWithNoFreeWill
	m	(Lcao;FFF)V	a	moveTo
	m	(Lcao;Ljb;F)Ltf;	a	walkTo
	m	(III)V	a	pressButton
	m	(Ljb;)V	b	pressButton
	m	(Ljb;)V	c	useBlock
	m	(Ljb;Lcut;)V	a	useBlock
	m	(Ljb;Lcut;Lfio;)V	a	useBlock
	m	(Lcam;)Lcam;	a	makeAboutToDrown
	m	(Lcam;)Lcam;	b	withLowHealth
	m	(Ldmr;)Lcut;	a	makeMockPlayer
	m	()Lauc;	c	makeMockServerPlayerInLevel
	m	(III)V	b	pullLever
	m	(Ljb;)V	d	pullLever
	m	(Ljb;J)V	a	pulseRedstone
	m	(Ljb;)V	e	destroyBlock
	m	(IIILdpz;)V	a	setBlock
	m	(IIILeeb;)V	a	setBlock
	m	(Ljb;Ldpz;)V	a	setBlock
	m	(Ljb;Leeb;)V	a	setBlock
	m	()V	d	setNight
	m	(I)V	a	setDayTime
	m	(Ldpz;III)V	a	assertBlockPresent
	m	(Ldpz;Ljb;)V	a	assertBlockPresent
	m	(Ldpz;III)V	b	assertBlockNotPresent
	m	(Ldpz;Ljb;)V	b	assertBlockNotPresent
	m	(Lbae;Ljb;)V	a	assertBlockTag
	m	(Ldpz;III)V	c	succeedWhenBlockPresent
	m	(Ldpz;Ljb;)V	c	succeedWhenBlockPresent
	m	(Ljb;Ljava/util/function/Predicate;Ljava/util/function/Function;)V	a	assertBlock
	m	(Ljb;Lefe;Ljava/lang/Comparable;)V	a	assertBlockProperty
	m	(Ljb;Lefe;Ljava/util/function/Predicate;Lxo;)V	a	assertBlockProperty
	m	(Ljb;Leeb;)V	b	assertBlockState
	m	(Ljb;Ljava/util/function/Predicate;Ljava/util/function/Function;)V	b	assertBlockState
	m	(Ljb;Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V	a	assertBlockEntityData
	m	(Ljb;Ljh;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V	a	assertRedstoneSignal
	m	(Lbzv;)V	b	assertEntityPresent
	m	(Lbzv;III)V	c	assertEntityPresent
	m	(Lbzv;Ljb;)V	c	assertEntityPresent
	m	(Lbzv;Lfin;)V	a	assertEntityPresent
	m	(Lbzv;I)V	a	assertEntitiesPresent
	m	(Lbzv;Ljb;ID)V	a	assertEntitiesPresent
	m	(Lbzv;Ljb;D)V	a	assertEntityPresent
	m	(Lbzv;Ljb;D)Ljava/util/List;	b	getEntities
	m	(Lbzv;)Ljava/util/List;	c	getEntities
	m	(Lbzm;III)V	a	assertEntityInstancePresent
	m	(Lbzm;Ljb;)V	a	assertEntityInstancePresent
	m	(Ldcr;Ljb;DI)V	a	assertItemEntityCountIs
	m	(Ldcr;Ljb;D)V	a	assertItemEntityPresent
	m	(Ldcr;Ljb;D)V	b	assertItemEntityNotPresent
	m	(Ldcr;)V	a	assertItemEntityPresent
	m	(Ldcr;)V	b	assertItemEntityNotPresent
	m	(Lbzv;)V	d	assertEntityNotPresent
	m	(Lbzv;III)V	d	assertEntityNotPresent
	m	(Lbzv;Ljb;)V	d	assertEntityNotPresent
	m	(Lbzv;Lfin;)V	b	assertEntityNotPresent
	m	(Lbzv;DDD)V	a	assertEntityTouching
	m	(Lbzv;DDD)V	b	assertEntityNotTouching
	m	(Ljb;Lbzv;Ljava/util/function/Predicate;)V	a	assertEntityData
	m	(Ljb;Lbzv;Ljava/util/function/Function;Ljava/lang/Object;)V	a	assertEntityData
	m	(Ljb;Lbzv;Ldcr;)V	a	assertEntityIsHolding
	m	(Ljb;Lbzv;Ldcr;)V	b	assertEntityInventoryContains
	m	(Ljb;)V	f	assertContainerEmpty
	m	(Ljb;Ldcr;)V	a	assertContainerContainsSingle
	m	(Ljb;Ldcr;)V	b	assertContainerContains
	m	(Leuq;Ljb;)V	a	assertSameBlockStates
	m	(Ljb;Ljb;)V	a	assertSameBlockState
	m	(JLjb;Ldcr;)V	a	assertAtTickTimeContainerContains
	m	(JLjb;)V	a	assertAtTickTimeContainerEmpty
	m	(Ljb;Lbzv;Ljava/util/function/Function;Ljava/lang/Object;)V	b	succeedWhenEntityData
	m	(Lbzm;Lfin;Lxo;)V	a	assertEntityPosition
	m	(Lbzm;Ljava/util/function/Predicate;Lxo;)V	a	assertEntityProperty
	m	(Lbzm;Ljava/util/function/Function;Ljava/lang/Object;Lxo;)V	a	assertEntityProperty
	m	(Lcam;Ljl;I)V	a	assertLivingEntityHasMobEffect
	m	(Lbzv;III)V	e	succeedWhenEntityPresent
	m	(Lbzv;Ljb;)V	e	succeedWhenEntityPresent
	m	(Lbzv;III)V	f	succeedWhenEntityNotPresent
	m	(Lbzv;Ljb;)V	f	succeedWhenEntityNotPresent
	m	()V	e	succeed
	m	()V	k	ensureSingleFinalCheck
	m	(Ljava/lang/Runnable;)V	a	succeedIf
	m	(Ljava/lang/Runnable;)V	b	succeedWhen
	m	(ILjava/lang/Runnable;)V	a	succeedOnTickWhen
	m	(JLjava/lang/Runnable;)V	a	runAtTickTime
	m	(JLjava/lang/Runnable;)V	b	runAfterDelay
	m	(Ljb;)V	g	randomTick
	m	(Ljb;)V	h	tickBlock
	m	(Ljb;)V	i	tickPrecipitation
	m	()V	f	tickPrecipitation
	m	(Leka$a;II)I	a	getHeight
	m	(Lxo;Ljb;)V	a	fail
	m	(Lxo;Lbzm;)V	a	fail
	m	(Lxo;)V	b	fail
	m	(Ljava/lang/Runnable;)V	c	failIf
	m	(Ljava/lang/Runnable;)V	d	failIfEver
	m	()Ltf;	g	startSequence
	m	(Ljb;)Ljb;	j	absolutePos
	m	(Ljb;)Ljb;	k	relativePos
	m	(Lfin;)Lfin;	a	absoluteAABB
	m	(Lfin;)Lfin;	b	relativeAABB
	m	(Lfis;)Lfis;	a	absoluteVec
	m	(Lfis;)Lfis;	b	relativeVec
	m	()Ldwu;	h	getTestRotation
	m	(ZLxo;)V	a	assertTrue
	m	(Ljava/lang/Object;Ljava/lang/Object;Lxo;)V	a	assertValueEqual
	m	(ZLxo;)V	b	assertFalse
	m	()J	i	getTick
	m	()Lfin;	j	getBounds
	m	()Lfin;	l	getRelativeBounds
	m	(Ljava/util/function/Consumer;)V	a	forEveryBlockInStructure
	m	(Ljava/lang/Runnable;)V	e	onEachTick
	m	(Lcut;Ldcv;Ljb;Ljh;)V	a	placeAt
	m	(Lamd;)V	a	setBiome
	m	(Ljava/lang/Runnable;J)V	a	lambda$onEachTick$31
	m	(Ljava/lang/Runnable;J)V	b	lambda$failIfEver$30
	m	()Lsx;	m	lambda$failIf$29
	m	(Lbzv;Ljb;)V	g	lambda$succeedWhenEntityNotPresent$28
	m	(Lbzv;Ljb;)V	h	lambda$succeedWhenEntityPresent$27
	m	(Ljb;Lbzv;Ljava/util/function/Function;Ljava/lang/Object;)V	c	lambda$succeedWhenEntityData$26
	m	(Ljb;)V	l	lambda$assertAtTickTimeContainerEmpty$25
	m	(Ljb;Ldcr;)V	c	lambda$assertAtTickTimeContainerContains$24
	m	(Ljb;Leuq;Ljb;)V	a	lambda$assertSameBlockStates$23
	m	(Ldcr;Ldcv;)Z	a	lambda$assertEntityInventoryContains$22
	m	(Ljava/lang/Object;)Z	a	lambda$assertEntityInventoryContains$21
	m	(Lfis;Lbzm;)Z	a	lambda$assertEntityNotTouching$20
	m	(Lfis;Lbzm;)Z	b	lambda$assertEntityTouching$19
	m	(Ljb;Lbzm;)Lsr;	a	lambda$assertEntityInstancePresent$18
	m	(Lbzm;Lbzm;)Z	a	lambda$assertEntityInstancePresent$17
	m	(Lxo;Leeb;)Lxo;	a	lambda$assertBlockProperty$16
	m	(Lefe;Ljava/util/function/Predicate;Leeb;)Z	a	lambda$assertBlockProperty$15
	m	(Ljava/util/function/Function;Leeb;)Lxo;	a	lambda$assertBlock$14
	m	(Ljava/util/function/Predicate;Leeb;)Z	a	lambda$assertBlock$13
	m	(Ldpz;Ljb;)V	d	lambda$succeedWhenBlockPresent$12
	m	(Lbae;Leeb;)Lxo;	a	lambda$assertBlockTag$11
	m	(Lbae;Leeb;)Z	b	lambda$assertBlockTag$10
	m	(Ldpz;Ldpz;)Lxo;	a	lambda$assertBlockNotPresent$9
	m	(Ljb;Ldpz;Ldpz;)Z	a	lambda$assertBlockNotPresent$8
	m	(Ldpz;Ldpz;)Lxo;	b	lambda$assertBlockPresent$7
	m	(Leeb;Ldpz;Ldpz;)Z	a	lambda$assertBlockPresent$6
	m	(Ljb;)V	m	lambda$pulseRedstone$5
	m	(Lcao;Ljb;F)V	b	lambda$walkTo$4
	m	(Lfin;Lbzm;)Z	a	lambda$findEntities$3
	m	(Lfis;Lbzm;Lbzm;)I	a	lambda$findClosestEntity$2
	m	(Lbzm;)V	b	lambda$killAllEntitiesOfClass$1
	m	(Lbzm;)Z	c	lambda$killAllEntitiesOfClass$0
c	sy$1	net/minecraft/gametest/framework/GameTestHelper$1
	f	Ldmr;	a	val$gameType
	m	(Lsy;Ldmu;Lcom/mojang/authlib/GameProfile;Ldmr;)V	<init>	<init>
	m	()Ldmr;	a	gameMode
	m	()Z	aa_	isClientAuthoritative
c	sy$2	net/minecraft/gametest/framework/GameTestHelper$2
	m	(Lsy;Lnet/minecraft/server/MinecraftServer;Laub;Lcom/mojang/authlib/GameProfile;Latl;)V	<init>	<init>
	m	()Ldmr;	a	gameMode
c	sy$3	net/minecraft/gametest/framework/GameTestHelper$3
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	sz	net/minecraft/gametest/framework/GameTestInfo
	f	Ljl$c;	a	test
	f	Ljb;	b	testBlockPos
	f	Laub;	c	level
	f	Ljava/util/Collection;	d	listeners
	f	I	e	timeoutTicks
	f	Ljava/util/Collection;	f	sequences
	f	Lit/unimi/dsi/fastutil/objects/Object2LongMap;	g	runAtTickTimeMap
	f	Z	h	placedStructure
	f	Z	i	chunksLoaded
	f	I	j	tickCount
	f	Z	k	started
	f	Ltp;	l	retryOptions
	f	Lcom/google/common/base/Stopwatch;	m	timer
	f	Z	n	done
	f	Ldwu;	o	extraRotation
	f	Lsx;	p	error
	f	Lecu;	q	testInstanceBlockEntity
	m	(Ljl$c;Ldwu;Laub;Ltp;)V	<init>	<init>
	m	(Ljb;)V	a	setTestBlockPos
	m	(I)Lsz;	a	startExecution
	m	()V	a	placeStructure
	m	(Lte;)V	a	tick
	m	()V	E	tickInternal
	m	()V	F	startTest
	m	(JLjava/lang/Runnable;)V	a	setRunAtTickTime
	m	()Lame;	b	id
	m	()Ljb;	c	getTestBlockPos
	m	()Ljb;	d	getTestOrigin
	m	()Lfin;	e	getStructureBounds
	m	()Lecu;	f	getTestInstanceBlockEntity
	m	()Laub;	g	getLevel
	m	()Z	h	hasSucceeded
	m	()Z	i	hasFailed
	m	()Z	j	hasStarted
	m	()Z	k	isDone
	m	()J	l	getRunTime
	m	()V	G	finish
	m	()V	m	succeed
	m	(Lxo;)V	a	fail
	m	(Lsx;)V	a	fail
	m	()Lsx;	n	getError
	m	()Ljava/lang/String;	toString	toString
	m	(Ltc;)V	a	addListener
	m	()Lsz;	o	prepareTestStructure
	m	(Ljb;Ldwu;Laub;)Lecu;	a	createTestInstanceBlock
	m	()I	p	getTick
	m	()Ltf;	q	createSequence
	m	()Z	r	isRequired
	m	()Z	s	isOptional
	m	()Lame;	t	getStructure
	m	()Ldwu;	u	getRotation
	m	()Lta;	v	getTest
	m	()Ljl$c;	w	getTestHolder
	m	()I	x	getTimeoutTicks
	m	()Z	y	isFlaky
	m	()I	z	maxAttempts
	m	()I	A	requiredSuccesses
	m	()Ltp;	B	retryOptions
	m	()Ljava/util/stream/Stream;	C	getListeners
	m	()Lsz;	D	copyReset
	m	(Lbzm;)V	a	lambda$succeed$6
	m	(Lbzm;)Z	b	lambda$succeed$5
	m	(Ltf;)V	a	lambda$tickInternal$4
	m	(Ltf;)V	b	lambda$tickInternal$3
	m	(Lte;Ltc;)V	a	lambda$tick$2
	m	(Lte;Ltc;)V	b	lambda$tick$1
	m	(Ltc;)V	b	lambda$placeStructure$0
c	ta	net/minecraft/gametest/framework/GameTestInstance
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Ltt;	a	info
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Ljy;Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	register
	m	(Ltt;)V	<init>	<init>
	m	(Lsy;)V	a	run
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljl;	d	batch
	m	()Lame;	e	structure
	m	()I	f	maxTicks
	m	()I	g	setupTicks
	m	()Z	h	required
	m	()Z	i	manualOnly
	m	()I	j	maxAttempts
	m	()I	k	requiredSuccesses
	m	()Z	l	skyAccess
	m	()Ldwu;	m	rotation
	m	()Ltt;	n	info
	m	()Lyc;	b	typeDescription
	m	()Lxo;	c	describe
	m	()Lyc;	o	describeType
	m	()Lxo;	p	describeInfo
	m	(Ljava/lang/String;Ljava/lang/String;)Lyc;	a	descriptionRow
	m	(Ljava/lang/String;Lyc;)Lyc;	a	descriptionRow
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tb	net/minecraft/gametest/framework/GameTestInstances
	f	Lamd;	a	ALWAYS_PASS
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	create
	m	()V	<clinit>	<clinit>
c	tc	net/minecraft/gametest/framework/GameTestListener
	m	(Lsz;)V	a	testStructureLoaded
	m	(Lsz;Lte;)V	a	testPassed
	m	(Lsz;Lte;)V	b	testFailed
	m	(Lsz;Lsz;Lte;)V	a	testAddedForRerun
c	td	net/minecraft/gametest/framework/GameTestMainUtil
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	DEFAULT_UNIVERSE_DIR
	f	Ljava/lang/String;	c	LEVEL_NAME
	f	Ljoptsimple/OptionParser;	d	parser
	f	Ljoptsimple/OptionSpec;	e	universe
	f	Ljoptsimple/OptionSpec;	f	report
	f	Ljoptsimple/OptionSpec;	g	tests
	f	Ljoptsimple/OptionSpec;	h	verify
	f	Ljoptsimple/OptionSpec;	i	packs
	f	Ljoptsimple/OptionSpec;	j	help
	m	()V	<init>	<init>
	m	([Ljava/lang/String;Ljava/util/function/Consumer;)V	a	runGameTestServer
	m	(Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/util/Optional;	a	optionalFromOption
	m	(Ljava/lang/String;)V	a	createOrResetDir
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	copyPacks
	m	(Lfcs$c;Lawz;Ljoptsimple/OptionSet;Ljava/lang/Thread;)Ltg;	a	lambda$runGameTestServer$0
	m	()V	<clinit>	<clinit>
c	te	net/minecraft/gametest/framework/GameTestRunner
	f	I	a	DEFAULT_TESTS_PER_ROW
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Laub;	c	level
	f	Lth;	d	testTicker
	f	Ljava/util/List;	e	allTestInfos
	f	Lcom/google/common/collect/ImmutableList;	f	batches
	f	Ljava/util/List;	g	batchListeners
	f	Ljava/util/List;	h	scheduledForRerun
	f	Lte$b;	i	testBatcher
	f	Z	j	stopped
	f	Ljl;	k	currentEnvironment
	f	Lte$c;	l	existingStructureSpawner
	f	Lte$c;	m	newStructureSpawner
	f	Z	n	haltOnError
	m	(Lte$b;Ljava/util/Collection;Laub;Lth;Lte$c;Lte$c;Z)V	<init>	<init>
	m	()Ljava/util/List;	a	getTestInfos
	m	()V	b	start
	m	()V	c	stop
	m	(Lsz;)V	a	rerunTest
	m	(I)V	a	runBatch
	m	()V	d	endCurrentEnvironment
	m	()V	e	runScheduledRerunTests
	m	(Lsu;)V	a	addListener
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	createStructuresForBatch
	m	(Lsz;)Ljava/util/Optional;	b	spawn
	m	(Laub;)V	a	clearMarkers
	m	(Lsz;)Ljava/lang/String;	c	lambda$runScheduledRerunTests$4
	m	(Lss;Lsu;)V	a	lambda$runBatch$3
	m	(Lsz;Lsz;Ltc;)V	a	lambda$rerunTest$2
	m	(Lsz;)V	d	lambda$new$1
	m	(Lss;)Ljava/util/stream/Stream;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	te$1	net/minecraft/gametest/framework/GameTestRunner$1
	f	Ltn;	a	val$currentBatchTracker
	f	Lss;	b	val$currentBatch
	f	I	c	val$batchIndex
	f	Lte;	d	this$0
	m	(Lte;Ltn;Lss;I)V	<init>	<init>
	m	()V	a	testCompleted
	m	(Lsz;)V	a	testStructureLoaded
	m	(Lsz;Lte;)V	a	testPassed
	m	(Lsz;Lte;)V	b	testFailed
	m	(Lsz;Lsz;Lte;)V	a	testAddedForRerun
	m	(J)V	a	lambda$testFailed$2
	m	(J)V	b	lambda$testCompleted$1
	m	(Lss;Lsu;)V	a	lambda$testCompleted$0
c	te$a	net/minecraft/gametest/framework/GameTestRunner$Builder
	f	Laub;	a	level
	f	Lth;	b	testTicker
	f	Lte$b;	c	batcher
	f	Lte$c;	d	existingStructureSpawner
	f	Lte$c;	e	newStructureSpawner
	f	Ljava/util/Collection;	f	batches
	f	Z	g	haltOnError
	m	(Ljava/util/Collection;Laub;)V	<init>	<init>
	m	(Ljava/util/Collection;Laub;)Lte$a;	a	fromBatches
	m	(Ljava/util/Collection;Laub;)Lte$a;	b	fromInfo
	m	(Z)Lte$a;	a	haltOnError
	m	(Lte$c;)Lte$a;	a	newStructureSpawner
	m	(Ltq;)Lte$a;	a	existingStructureSpawner
	m	(Lte$b;)Lte$a;	a	batcher
	m	()Lte;	a	build
c	te$b	net/minecraft/gametest/framework/GameTestRunner$GameTestBatcher
	m	(Ljava/util/Collection;)Ljava/util/Collection;	batch	batch
c	te$c	net/minecraft/gametest/framework/GameTestRunner$StructureSpawner
	f	Lte$c;	a	IN_PLACE
	f	Lte$c;	b	NOT_SET
	m	(Lsz;)Ljava/util/Optional;	spawnStructure	spawnStructure
	m	(Laub;)V	a	onBatchStart
	m	(Lsz;)Ljava/util/Optional;	a	lambda$static$2
	m	(Lsz;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lsz;)Lsz;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tf	net/minecraft/gametest/framework/GameTestSequence
	f	Lsz;	a	parent
	f	Ljava/util/List;	b	events
	f	I	c	lastTick
	m	(Lsz;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Ltf;	a	thenWaitUntil
	m	(JLjava/lang/Runnable;)Ltf;	a	thenWaitUntil
	m	(I)Ltf;	a	thenIdle
	m	(Ljava/lang/Runnable;)Ltf;	b	thenExecute
	m	(ILjava/lang/Runnable;)Ltf;	a	thenExecuteAfter
	m	(ILjava/lang/Runnable;)Ltf;	b	thenExecuteFor
	m	()V	a	thenSucceed
	m	(Ljava/util/function/Supplier;)V	a	thenFail
	m	()Ltf$a;	b	thenTrigger
	m	(I)V	b	tickAndContinue
	m	(I)V	c	tickAndFailIfNotComplete
	m	(Ljava/lang/Runnable;)V	c	executeWithoutFail
	m	(I)V	d	tick
	m	(Ltf$a;)V	a	lambda$thenTrigger$5
	m	(Ljava/util/function/Supplier;)V	b	lambda$thenFail$4
	m	(ILjava/lang/Runnable;)V	c	lambda$thenExecuteFor$3
	m	(ILjava/lang/Runnable;)V	d	lambda$thenExecuteAfter$2
	m	(Ljava/lang/Runnable;)V	d	lambda$thenExecute$1
	m	()V	c	lambda$thenIdle$0
c	tf$a	net/minecraft/gametest/framework/GameTestSequence$Condition
	f	I	b	NOT_TRIGGERED
	f	I	c	triggerTime
	f	Ltf;	a	this$0
	m	(Ltf;)V	<init>	<init>
	m	(I)V	a	trigger
	m	()V	a	assertTriggeredThisTick
c	tg	net/minecraft/gametest/framework/GameTestServer
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	I	m	PROGRESS_REPORT_INTERVAL
	f	I	n	TEST_POSITION_RANGE
	f	Lamz;	o	NO_SERVICES
	f	Lcyd;	p	ENABLED_FEATURES
	f	Lbru;	q	sampleLogger
	f	Ljava/util/Optional;	r	testSelection
	f	Z	s	verify
	f	Ljava/util/List;	t	testBatches
	f	Lcom/google/common/base/Stopwatch;	u	stopwatch
	f	Leky;	v	WORLD_OPTIONS
	f	Ltn;	w	testTracker
	m	(Ljava/lang/Thread;Lfcs$c;Lawz;Ljava/util/Optional;Z)Ltg;	a	create
	m	(Ljava/lang/Thread;Lfcs$c;Lawz;Land;Ljava/util/Optional;Z)V	<init>	<init>
	m	()Z	e	initServer
	m	(Laub;)Ljava/util/List;	b	evaluateTestsToRun
	m	(Ljl$c;Laub;)Ljava/util/stream/Stream;	a	rotateAndMultiply
	m	(Ljz;Ljava/lang/String;)Ljava/util/stream/Stream;	a	getTestsForSelection
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
	m	(Lsz;)V	a	logFailedTest
	m	()Lbrx;	f	getTickTimeLogger
	m	()Z	g	isTickTimeLoggingEnabled
	m	()V	w_	waitUntilNextTick
	m	(Lae;)Lae;	a	fillServerSystemReport
	m	()V	i	onServerExit
	m	(Lp;)V	a	onServerCrash
	m	(Laub;)V	c	startTests
	m	()Z	br	haveTestsStarted
	m	()Z	v_	isHardcore
	m	()I	k	getOperatorUserPermissionLevel
	m	()I	l	getFunctionCompilationLevel
	m	()Z	m	shouldRconBroadcast
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	p	isEpollEnabled
	m	()Z	q	isCommandBlockEnabled
	m	()Z	r	isPublished
	m	()Z	c	shouldInformAdmins
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(Ljl$c;)Z	a	lambda$evaluateTestsToRun$3
	m	(Ljl$c;)Z	b	lambda$evaluateTestsToRun$2
	m	(Lanc$c;Ldmy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$create$1
	m	(Ldmy;Lanc$a;)Lanc$b;	a	lambda$create$0
	m	()V	<clinit>	<clinit>
c	tg$1	net/minecraft/gametest/framework/GameTestServer$1
	m	(Ltg;Lnet/minecraft/server/MinecraftServer;Ljs;Lfcv;I)V	<init>	<init>
c	th	net/minecraft/gametest/framework/GameTestTicker
	f	Lth;	a	SINGLETON
	f	Ljava/util/Collection;	b	testInfos
	f	Lte;	c	runner
	f	Lth$a;	d	state
	f	Z	e	ticking
	m	()V	<init>	<init>
	m	(Lsz;)V	a	add
	m	()V	a	clear
	m	(Lte;)V	a	setRunner
	m	()V	b	startTicking
	m	()V	c	tick
	m	(Lsz;)V	b	lambda$tick$0
	m	()V	<clinit>	<clinit>
c	th$a	net/minecraft/gametest/framework/GameTestTicker$State
	f	Lth$a;	a	IDLE
	f	Lth$a;	b	RUNNING
	f	Lth$a;	c	HALTING
	f	[Lth$a;	d	$VALUES
	m	()[Lth$a;	values	values
	m	(Ljava/lang/String;)Lth$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lth$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ti	net/minecraft/gametest/framework/GameTestTimeoutException
	f	Lxo;	a	message
	m	(Lxo;)V	<init>	<init>
	m	()Lxo;	a	getDescription
c	tj	net/minecraft/gametest/framework/GeneratedTest
	f	Ljava/util/Map;	a	tests
	f	Lamd;	b	functionKey
	f	Ljava/util/function/Consumer;	c	function
	m	(Ljava/util/Map;Lame;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Lame;Ltt;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Ljava/util/Map;Lamd;Ljava/util/function/Consumer;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	tests
	m	()Lamd;	b	functionKey
	m	()Ljava/util/function/Consumer;	c	function
c	tk	net/minecraft/gametest/framework/GlobalTestReporter
	f	Ltz;	a	DELEGATE
	m	()V	<init>	<init>
	m	(Ltz;)V	a	replaceWith
	m	(Lsz;)V	a	onTestFailed
	m	(Lsz;)V	b	onTestSuccess
	m	()V	a	finish
	m	()V	<clinit>	<clinit>
c	tl	net/minecraft/gametest/framework/JUnitLikeTestReporter
	f	Lorg/w3c/dom/Document;	a	document
	f	Lorg/w3c/dom/Element;	b	testSuite
	f	Lcom/google/common/base/Stopwatch;	c	stopwatch
	f	Ljava/io/File;	d	destination
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lsz;Ljava/lang/String;)Lorg/w3c/dom/Element;	a	createTestCase
	m	(Lsz;)V	a	onTestFailed
	m	(Lsz;)V	b	onTestSuccess
	m	()V	a	finish
	m	(Ljava/io/File;)V	a	save
c	tm	net/minecraft/gametest/framework/LogTestReporter
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Lsz;)V	a	onTestFailed
	m	(Lsz;)V	b	onTestSuccess
	m	()V	<clinit>	<clinit>
c	tn	net/minecraft/gametest/framework/MultipleTestTracker
	f	C	a	NOT_STARTED_TEST_CHAR
	f	C	b	ONGOING_TEST_CHAR
	f	C	c	SUCCESSFUL_TEST_CHAR
	f	C	d	FAILED_OPTIONAL_TEST_CHAR
	f	C	e	FAILED_REQUIRED_TEST_CHAR
	f	Ljava/util/Collection;	f	tests
	f	Ljava/util/Collection;	g	listeners
	m	()V	<init>	<init>
	m	(Ljava/util/Collection;)V	<init>	<init>
	m	(Lsz;)V	a	addTestToTrack
	m	(Ltc;)V	a	addListener
	m	(Ljava/util/function/Consumer;)V	a	addFailureListener
	m	()I	a	getFailedRequiredCount
	m	()I	b	getFailedOptionalCount
	m	()I	c	getDoneCount
	m	()Z	d	hasFailedRequired
	m	()Z	e	hasFailedOptional
	m	()Ljava/util/Collection;	f	getFailedRequired
	m	()Ljava/util/Collection;	g	getFailedOptional
	m	()I	h	getTotalCount
	m	()Z	i	isDone
	m	()Ljava/lang/String;	j	getProgressBar
	m	()Ljava/lang/String;	toString	toString
	m	(Lsz;)V	b	remove
	m	(Ljava/lang/StringBuffer;Lsz;)V	a	lambda$getProgressBar$1
	m	(Ltc;Lsz;)V	a	lambda$addListener$0
c	tn$1	net/minecraft/gametest/framework/MultipleTestTracker$1
	f	Ljava/util/function/Consumer;	a	val$listener
	m	(Ltn;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Lsz;)V	a	testStructureLoaded
	m	(Lsz;Lte;)V	a	testPassed
	m	(Lsz;Lte;)V	b	testFailed
	m	(Lsz;Lsz;Lte;)V	a	testAddedForRerun
c	to	net/minecraft/gametest/framework/ReportGameListener
	f	I	a	attempts
	f	I	b	successes
	m	()V	<init>	<init>
	m	(Lsz;)V	a	testStructureLoaded
	m	(Lsz;Lte;Z)V	a	handleRetry
	m	(Lsz;Lte;)V	a	testPassed
	m	(Lsz;Lte;)V	b	testFailed
	m	(Lsz;Lsz;Lte;)V	a	testAddedForRerun
	m	(Lsz;Ljava/lang/String;)V	a	reportPassed
	m	(Lsz;Ljava/lang/String;)V	b	visualizePassedTest
	m	(Lsz;Ljava/lang/Throwable;)V	a	reportFailure
	m	(Lsz;Ljava/lang/Throwable;)V	b	visualizeFailedTest
	m	(Lsz;)Ljava/util/Optional;	b	getTestInstanceBlockEntity
	m	(Laub;Lo;Ljava/lang/String;)V	a	say
	m	(Laub;Ljb;Ljava/lang/String;)V	a	showRedBox
	m	(Ljava/lang/String;Lo;Lauc;)V	a	lambda$say$4
	m	(Lauc;)Z	a	lambda$say$3
	m	(Laub;Ljb;)Ljava/util/Optional;	a	lambda$getTestInstanceBlockEntity$2
	m	(Lxo;Lecu;)V	a	lambda$reportFailure$1
	m	(Lecu;)V	a	lambda$reportPassed$0
c	tp	net/minecraft/gametest/framework/RetryOptions
	f	I	a	numberOfTries
	f	Z	b	haltOnFailure
	f	Ltp;	c	NO_RETRIES
	m	(IZ)V	<init>	<init>
	m	()Ltp;	a	noRetries
	m	()Z	b	unlimitedTries
	m	(II)Z	a	hasTriesLeft
	m	()Z	c	hasRetries
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	d	numberOfTries
	m	()Z	e	haltOnFailure
	m	()V	<clinit>	<clinit>
c	tq	net/minecraft/gametest/framework/StructureGridSpawner
	f	I	c	SPACE_BETWEEN_COLUMNS
	f	I	d	SPACE_BETWEEN_ROWS
	f	I	e	testsPerRow
	f	I	f	currentRowCount
	f	Lfin;	g	rowBounds
	f	Ljb$a;	h	nextTestNorthWestCorner
	f	Ljb;	i	firstTestNorthWestCorner
	f	Z	j	clearOnBatch
	f	F	k	maxX
	f	Ljava/util/Collection;	l	testInLastBatch
	m	(Ljb;IZ)V	<init>	<init>
	m	(Laub;)V	a	onBatchStart
	m	(Lsz;)Ljava/util/Optional;	spawnStructure	spawnStructure
	m	(Laub;Lsz;)V	a	lambda$onBatchStart$0
c	tr	net/minecraft/gametest/framework/StructureUtils
	f	I	a	DEFAULT_Y_SEARCH_RADIUS
	f	Ljava/lang/String;	b	DEFAULT_TEST_STRUCTURES_DIR
	f	Ljava/nio/file/Path;	c	testStructuresDir
	m	()V	<init>	<init>
	m	(I)Ldwu;	a	getRotationForRotationSteps
	m	(Ldwu;)I	a	getRotationStepsForRotation
	m	(Lame;Ljb;Lkg;Ldwu;Laub;)Lecu;	a	createNewEmptyTest
	m	(Leuq;Laub;)V	a	clearSpaceForStructure
	m	(Ljb;Lkg;Ldwu;)Ljb;	a	getTransformedFarCorner
	m	(Ljb;Lkg;Ldwu;)Leuq;	b	getStructureBoundingBox
	m	(Ljb;ILaub;)Ljava/util/Optional;	a	findTestContainingPos
	m	(Ljb;ILaub;)Ljava/util/Optional;	b	findNearestTest
	m	(Ljb;ILaub;)Ljava/util/stream/Stream;	c	findTestBlocks
	m	(Ljb;Lbzm;Laub;)Ljava/util/stream/Stream;	a	lookedAtTestPos
	m	(ILjb;Laub;)V	a	clearBlock
	m	(Ljb;Ljb;Laub;)Z	a	doesStructureContain
	m	(Lfis;Lfis;Lecu;)Z	a	lambda$lookedAtTestPos$7
	m	(Laub;Ljb;)Ljava/util/Optional;	a	lambda$lookedAtTestPos$6
	m	(Ljb;)Z	a	lambda$findTestBlocks$5
	m	(Ljl;)Z	a	lambda$findTestBlocks$4
	m	(Ljb;Ljb;)I	a	lambda$findNearestTest$3
	m	(Ljb;Laub;Ljb;)Z	a	lambda$findTestContainingPos$2
	m	(Lbzm;)Z	a	lambda$clearSpaceForStructure$1
	m	(ILaub;Ljb;)V	a	lambda$clearSpaceForStructure$0
	m	()V	<clinit>	<clinit>
c	tr$1	net/minecraft/gametest/framework/StructureUtils$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	ts	net/minecraft/gametest/framework/TestCommand
	f	I	a	TEST_NEARBY_SEARCH_RADIUS
	f	I	b	TEST_FULL_SEARCH_RADIUS
	f	I	c	VERIFY_TEST_GRID_AXIS_SIZE
	f	I	d	VERIFY_TEST_BATCH_SIZE
	f	I	e	DEFAULT_CLEAR_RADIUS
	f	I	f	MAX_CLEAR_RADIUS
	f	I	g	TEST_POS_Z_OFFSET_FROM_PLAYER
	f	I	h	SHOW_POS_DURATION_MS
	f	I	i	DEFAULT_X_SIZE
	f	I	j	DEFAULT_Y_SIZE
	f	I	k	DEFAULT_Z_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	l	CLEAR_NO_TESTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	m	RESET_NO_TESTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	n	TEST_INSTANCE_COULD_NOT_BE_FOUND
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	o	NO_STRUCTURES_TO_EXPORT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	p	NO_TEST_INSTANCES
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	q	NO_TEST_CONTAINING
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	r	TOO_LARGE
	m	()V	<init>	<init>
	m	(Ltv;)I	a	reset
	m	(Ltv;)I	b	clear
	m	(Ltv;)I	c	export
	m	(Ltv;)I	d	verify
	m	(Ltv;Ltp;II)I	a	run
	m	(Ltv;)I	e	locate
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laos;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	runWithRetryOptions
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laos;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	runWithRetryOptions
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Laos;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	runWithRetryOptionsAndBuildInfo
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTestFunction
	m	(Lek;Lsz;)I	a	resetGameTestInfo
	m	(Lek;Ltp;Lty;)Ljava/util/stream/Stream;	a	toGameTestInfos
	m	(Lek;Ltp;Ltx;I)Ljava/util/stream/Stream;	a	toGameTestInfo
	m	(Ljb;Lek;Ltp;)Ljava/util/Optional;	a	createGameTestInfo
	m	(Lek;Lame;III)I	a	createNewStructure
	m	(Lek;Ljava/lang/String;)I	a	showPos
	m	()I	a	stopTests
	m	(Lek;Lte;)I	a	trackAndStartRunner
	m	(Lek;Ljl;)I	a	exportTestStructure
	m	(Lek;Lame;)Z	a	verifyStructureExists
	m	(Lek;)Ljb;	a	createTestPositionAround
	m	(Lsz;)V	a	lambda$trackAndStartRunner$50
	m	(Ljava/lang/String;Lxo;)Lxo;	a	lambda$showPos$49
	m	(Lecu;)Lxo;	a	lambda$createNewStructure$48
	m	(Laub;Ljb;)V	a	lambda$createNewStructure$47
	m	(ILek;Ltp;Ljl$c;)Lsz;	a	lambda$toGameTestInfo$46
	m	(Lek;Ljl$c;)Z	a	lambda$toGameTestInfo$45
	m	(Lek;Ltp;Ljb;)Ljava/util/Optional;	a	lambda$toGameTestInfos$44
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$43
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$42
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$40
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$39
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$38
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$37
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$35
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$34
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$33
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$32
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$31
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$30
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$29
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$28
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$25
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	v	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	w	lambda$register$21
	m	(Laos;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$runWithRetryOptionsAndBuildInfo$20
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$runWithRetryOptionsAndBuildInfo$19
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$runWithRetryOptionsAndBuildInfo$18
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$runWithRetryOptions$17
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$runWithRetryOptions$16
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$runWithRetryOptions$15
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$runWithRetryOptions$14
	m	(I)Lxo;	a	lambda$locate$13
	m	(Ltv;Ljb;Lorg/apache/commons/lang3/mutable/MutableInt;Ljb;)V	a	lambda$locate$12
	m	(Lxo;I)Lxo;	a	lambda$locate$11
	m	(Ljava/lang/String;Lyl;)Lyl;	a	lambda$locate$10
	m	(Ljava/util/Collection;)Lxo;	a	lambda$run$9
	m	()Lxo;	b	lambda$run$8
	m	(Ljava/lang/String;)Lxo;	a	lambda$export$7
	m	(Ljava/util/List;)Lxo;	a	lambda$clear$6
	m	(Laub;Leuq;)V	a	lambda$clear$5
	m	(Laub;Ljb;)Ljava/util/stream/Stream;	b	lambda$clear$4
	m	(I)Lxo;	b	lambda$reset$3
	m	(Ltv;Lsz;)Ljava/lang/Integer;	a	lambda$reset$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ts$a	net/minecraft/gametest/framework/TestCommand$TestBatchSummaryDisplayer
	f	Lek;	a	source
	m	(Lek;)V	<init>	<init>
	m	(Lss;)V	a	testBatchStarting
	m	(Lss;)V	b	testBatchFinished
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lek;	a	source
	m	(Lss;)Lxo;	c	lambda$testBatchStarting$0
c	ts$b	net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer
	f	Lek;	a	source
	f	Ltn;	b	tracker
	m	(Lek;Ltn;)V	<init>	<init>
	m	(Lsz;)V	a	testStructureLoaded
	m	(Lsz;Lte;)V	a	testPassed
	m	(Lsz;Lte;)V	b	testFailed
	m	(Lsz;Lsz;Lte;)V	a	testAddedForRerun
	m	()V	c	showTestSummaryIfAllDone
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lek;	a	source
	m	()Ltn;	b	tracker
	m	()Lxo;	d	lambda$showTestSummaryIfAllDone$1
	m	()Lxo;	e	lambda$showTestSummaryIfAllDone$0
c	tt	net/minecraft/gametest/framework/TestData
	f	Ljava/lang/Object;	b	environment
	f	Lame;	c	structure
	f	I	d	maxTicks
	f	I	e	setupTicks
	f	Z	f	required
	f	Ldwu;	g	rotation
	f	Z	h	manualOnly
	f	I	i	maxAttempts
	f	I	j	requiredSuccesses
	f	Z	k	skyAccess
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/lang/Object;Lame;IIZLdwu;)V	<init>	<init>
	m	(Ljava/lang/Object;Lame;IIZ)V	<init>	<init>
	m	(Ljava/lang/Object;Lame;IIZLdwu;ZIIZ)V	<init>	<init>
	m	(Ljava/util/function/Function;)Ltt;	a	map
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	environment
	m	()Lame;	b	structure
	m	()I	c	maxTicks
	m	()I	d	setupTicks
	m	()Z	e	required
	m	()Ldwu;	f	rotation
	m	()Z	g	manualOnly
	m	()I	h	maxAttempts
	m	()I	i	requiredSuccesses
	m	()Z	j	skyAccess
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu	net/minecraft/gametest/framework/TestEnvironmentDefinition
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Laub;)V	a	setup
	m	(Laub;)V	b	teardown
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$a	net/minecraft/gametest/framework/TestEnvironmentDefinition$AllOf
	f	Ljava/util/List;	d	definitions
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	([Ltu;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Laub;)V	a	setup
	m	(Laub;)V	b	teardown
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	definitions
	m	(Laub;Ljl;)V	a	lambda$teardown$2
	m	(Laub;Ljl;)V	b	lambda$setup$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$b	net/minecraft/gametest/framework/TestEnvironmentDefinition$Functions
	f	Ljava/util/Optional;	d	setupFunction
	f	Ljava/util/Optional;	e	teardownFunction
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;)V	a	setup
	m	(Laub;)V	b	teardown
	m	(Laub;Lame;)V	a	run
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	setupFunction
	m	()Ljava/util/Optional;	c	teardownFunction
	m	(Laub;Lame;)V	b	lambda$teardown$2
	m	(Laub;Lame;)V	c	lambda$setup$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$c	net/minecraft/gametest/framework/TestEnvironmentDefinition$SetGameRules
	f	Ljava/util/List;	d	boolRules
	f	Ljava/util/List;	e	intRules
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Laub;)V	a	setup
	m	(Laub;)V	b	teardown
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldmq$e;Ljava/lang/Object;)Ltu$c$a;	a	entry
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	boolRules
	m	()Ljava/util/List;	c	intRules
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$c$a	net/minecraft/gametest/framework/TestEnvironmentDefinition$SetGameRules$Entry
	f	Ldmq$e;	a	key
	f	Ljava/lang/Object;	b	value
	m	(Ldmq$e;Ljava/lang/Object;)V	<init>	<init>
	m	(Ljava/lang/Class;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldmq$e;	a	key
	m	()Ljava/lang/Object;	b	value
	m	(Ljava/lang/Class;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	tu$d	net/minecraft/gametest/framework/TestEnvironmentDefinition$TimeOfDay
	f	I	d	time
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(I)V	<init>	<init>
	m	(Laub;)V	a	setup
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	time
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$e	net/minecraft/gametest/framework/TestEnvironmentDefinition$Weather
	f	Ltu$e$a;	d	weather
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ltu$e$a;)V	<init>	<init>
	m	(Laub;)V	a	setup
	m	(Laub;)V	b	teardown
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ltu$e$a;	b	weather
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	tu$e$a	net/minecraft/gametest/framework/TestEnvironmentDefinition$Weather$Type
	f	Ltu$e$a;	a	CLEAR
	f	Ltu$e$a;	b	RAIN
	f	Ltu$e$a;	c	THUNDER
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	I	f	clearTime
	f	I	g	rainTime
	f	Z	h	raining
	f	Z	i	thundering
	f	[Ltu$e$a;	j	$VALUES
	m	()[Ltu$e$a;	values	values
	m	(Ljava/lang/String;)Ltu$e$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;IIZZ)V	<init>	<init>
	m	(Laub;)V	a	apply
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ltu$e$a;	a	$values
	m	()V	<clinit>	<clinit>
c	tv	net/minecraft/gametest/framework/TestFinder
	f	Ltx;	a	NO_FUNCTIONS
	f	Lty;	b	NO_STRUCTURES
	f	Ltx;	c	testInstanceFinder
	f	Lty;	d	testPosFinder
	f	Lek;	e	source
	m	()Ljava/util/stream/Stream;	findTestPos	findTestPos
	m	()Ltv$a;	a	builder
	m	(Lek;Ltx;Lty;)V	<init>	<init>
	m	()Lek;	b	source
	m	()Ljava/util/stream/Stream;	findTests	findTests
	m	()V	<clinit>	<clinit>
c	tv$a	net/minecraft/gametest/framework/TestFinder$Builder
	f	Ljava/util/function/UnaryOperator;	a	testFinderWrapper
	f	Ljava/util/function/UnaryOperator;	b	structureBlockPosFinderWrapper
	m	()V	<init>	<init>
	m	(Ljava/util/function/UnaryOperator;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	(I)Ltv$a;	a	createMultipleCopies
	m	(I)Ljava/util/function/UnaryOperator;	b	createCopies
	m	(Lek;Ltx;Lty;)Ltv;	a	build
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Ltv;	a	radius
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	a	nearest
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	b	allNearby
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	c	lookedAt
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ltv;	a	failedTests
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;)Ltv;	a	byResourceSelection
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ltv;	d	failedTests
	m	(Z)Ljava/util/stream/Stream;	a	lambda$failedTests$8
	m	(ZLjl$c;)Z	a	lambda$failedTests$7
	m	(Lek;)Ljava/util/stream/Stream;	a	lambda$lookedAt$6
	m	(Ljb;Lek;)Ljava/util/stream/Stream;	a	lambda$allNearby$5
	m	(Ljb;Lek;)Ljava/util/stream/Stream;	b	lambda$nearest$4
	m	(Ljb;ILek;)Ljava/util/stream/Stream;	a	lambda$radius$3
	m	(ILjava/util/function/Supplier;)Ljava/util/function/Supplier;	a	lambda$createCopies$2
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	a	lambda$new$1
	m	(Ljava/util/function/Supplier;)Ljava/util/function/Supplier;	b	lambda$new$0
c	tw	net/minecraft/gametest/framework/TestFunctionLoader
	f	Ljava/util/List;	a	loaders
	m	()V	<init>	<init>
	m	(Ltw;)V	a	registerLoader
	m	(Ljy;)V	b	runLoaders
	m	(Ljava/util/function/BiConsumer;)V	a	load
	m	(Ljy;Lamd;Ljava/util/function/Consumer;)V	a	lambda$runLoaders$0
	m	()V	<clinit>	<clinit>
c	tx	net/minecraft/gametest/framework/TestInstanceFinder
	m	()Ljava/util/stream/Stream;	findTests	findTests
c	ty	net/minecraft/gametest/framework/TestPosFinder
	m	()Ljava/util/stream/Stream;	findTestPos	findTestPos
c	tz	net/minecraft/gametest/framework/TestReporter
	m	(Lsz;)V	a	onTestFailed
	m	(Lsz;)V	b	onTestSuccess
	m	()V	a	finish
c	ua	net/minecraft/gametest/framework/UnknownGameTestException
	f	Ljava/lang/Throwable;	a	reason
	m	(Ljava/lang/Throwable;)V	<init>	<init>
	m	()Lxo;	a	getDescription
c	ub	net/minecraft/gametest/framework/package-info
c	uc	net/minecraft/locale/DeprecatedTranslationsInfo
	f	Ljava/util/List;	c	removed
	f	Ljava/util/Map;	d	renamed
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Luc;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/io/InputStream;)Luc;	a	loadFromJson
	m	(Ljava/lang/String;)Luc;	a	loadFromResource
	m	()Luc;	a	loadFromDefaultResource
	m	(Ljava/util/Map;)V	a	applyToMap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	removed
	m	()Ljava/util/Map;	c	renamed
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$applyToMap$2
	m	(Ljava/lang/String;)Ljava/lang/IllegalStateException;	b	lambda$loadFromJson$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ud	net/minecraft/locale/Language
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/google/gson/Gson;	c	GSON
	f	Ljava/util/regex/Pattern;	d	UNSUPPORTED_FORMAT_PATTERN
	f	Ljava/lang/String;	a	DEFAULT
	f	Lud;	e	instance
	m	()V	<init>	<init>
	m	()Lud;	c	loadDefault
	m	(Ljava/util/function/BiConsumer;Ljava/lang/String;)V	a	parseTranslations
	m	(Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V	a	loadFromJson
	m	()Lud;	a	getInstance
	m	(Lud;)V	a	inject
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
	m	(Ljava/lang/String;)Z	b	has
	m	()Z	b	isDefaultRightToLeft
	m	(Lxt;)Lbbm;	a	getVisualOrder
	m	(Ljava/util/List;)Ljava/util/List;	a	getVisualOrder
	m	()V	<clinit>	<clinit>
c	ud$1	net/minecraft/locale/Language$1
	f	Ljava/util/Map;	b	val$storage
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getOrDefault
	m	(Ljava/lang/String;)Z	b	has
	m	()Z	b	isDefaultRightToLeft
	m	(Lxt;)Lbbm;	a	getVisualOrder
	m	(Lxt;Lbbn;)Z	a	lambda$getVisualOrder$1
	m	(Lbbn;Lyl;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getVisualOrder$0
c	ue	net/minecraft/locale/package-info
c	uf	net/minecraft/nbt/ByteArrayTag
	f	I	b	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	[B	c	data
	m	([B)V	<init>	<init>
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Lvi;	d	copy
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lvm;)V	a	accept
	m	()[B	e	getAsByteArray
	m	()I	size	size
	m	(I)Lug;	a	get
	m	(ILvi;)Z	a	setTag
	m	(ILvi;)Z	b	addTag
	m	(I)Lug;	b	remove
	m	()V	clear	clear
	m	()Ljava/util/Optional;	f	asByteArray
	m	(Lvf;)Lvf$b;	a	accept
	m	(I)Lvi;	c	get
	m	(I)Lvi;	d	remove
	m	()V	<clinit>	<clinit>
c	uf$1	net/minecraft/nbt/ByteArrayTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Luf;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)[B	d	readAccounted
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	ug	net/minecraft/nbt/ByteTag
	f	B	v	value
	f	I	w	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	Lug;	b	ZERO
	f	Lug;	c	ONE
	m	(B)V	<init>	<init>
	m	(B)Lug;	a	valueOf
	m	(Z)Lug;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Lug;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()B	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	ug$1	net/minecraft/nbt/ByteTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lug;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)B	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	ug$a	net/minecraft/nbt/ByteTag$Cache
	f	[Lug;	a	cache
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	uh	net/minecraft/nbt/CollectionTag
	m	()V	clear	clear
	m	(ILvi;)Z	a	setTag
	m	(ILvi;)Z	b	addTag
	m	(I)Lvi;	d	remove
	m	(I)Lvi;	c	get
	m	()I	size	size
	m	()Z	isEmpty	isEmpty
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/stream/Stream;	stream	stream
c	uh$1	net/minecraft/nbt/CollectionTag$1
	f	I	b	index
	f	Luh;	a	this$0
	m	(Luh;)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()Lvi;	a	next
	m	()Ljava/lang/Object;	next	next
c	ui	net/minecraft/nbt/CompoundTag
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	v	SELF_SIZE_IN_BYTES
	f	I	w	MAP_ENTRY_SIZE_IN_BYTES
	f	Lvk;	b	TYPE
	f	Ljava/util/Map;	x	tags
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()Ljava/util/Set;	e	keySet
	m	()Ljava/util/Set;	g	entrySet
	m	()Ljava/util/Collection;	h	values
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()I	i	size
	m	(Ljava/lang/String;Lvi;)Lvi;	a	put
	m	(Ljava/lang/String;B)V	a	putByte
	m	(Ljava/lang/String;S)V	a	putShort
	m	(Ljava/lang/String;I)V	a	putInt
	m	(Ljava/lang/String;J)V	a	putLong
	m	(Ljava/lang/String;F)V	a	putFloat
	m	(Ljava/lang/String;D)V	a	putDouble
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
	m	(Ljava/lang/String;[B)V	a	putByteArray
	m	(Ljava/lang/String;[I)V	a	putIntArray
	m	(Ljava/lang/String;[J)V	a	putLongArray
	m	(Ljava/lang/String;Z)V	a	putBoolean
	m	(Ljava/lang/String;)Lvi;	a	get
	m	(Ljava/lang/String;)Z	b	contains
	m	(Ljava/lang/String;)Ljava/util/Optional;	s	getOptional
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	getByte
	m	(Ljava/lang/String;B)B	b	getByteOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	getShort
	m	(Ljava/lang/String;S)S	b	getShortOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	getInt
	m	(Ljava/lang/String;I)I	b	getIntOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	f	getLong
	m	(Ljava/lang/String;J)J	b	getLongOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	g	getFloat
	m	(Ljava/lang/String;F)F	b	getFloatOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	h	getDouble
	m	(Ljava/lang/String;D)D	b	getDoubleOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	i	getString
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	b	getStringOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	j	getByteArray
	m	(Ljava/lang/String;)Ljava/util/Optional;	k	getIntArray
	m	(Ljava/lang/String;)Ljava/util/Optional;	l	getLongArray
	m	(Ljava/lang/String;)Ljava/util/Optional;	m	getCompound
	m	(Ljava/lang/String;)Lui;	n	getCompoundOrEmpty
	m	(Ljava/lang/String;)Ljava/util/Optional;	o	getList
	m	(Ljava/lang/String;)Luo;	p	getListOrEmpty
	m	(Ljava/lang/String;)Ljava/util/Optional;	q	getBoolean
	m	(Ljava/lang/String;Z)Z	b	getBooleanOr
	m	(Ljava/lang/String;)V	r	remove
	m	()Ljava/lang/String;	toString	toString
	m	()Z	j	isEmpty
	m	()Lui;	k	shallowCopy
	m	()Lui;	l	copy
	m	()Ljava/util/Optional;	s_	asCompound
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Ljava/lang/String;Lvi;Ljava/io/DataOutput;)V	a	writeNamedTag
	m	(Lvk;Ljava/lang/String;Ljava/io/DataInput;Lur;)Lvi;	a	readNamedTagData
	m	(Lui;)Lui;	a	merge
	m	(Lvm;)V	a	accept
	m	(Lvf;)Lvf$b;	a	accept
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	b	storeNullable
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	b	storeNullable
	m	(Lcom/mojang/serialization/MapCodec;Ljava/lang/Object;)V	a	store
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	a	read
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)Ljava/util/Optional;	a	read
	m	(Lcom/mojang/serialization/MapCodec;)Ljava/util/Optional;	a	read
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/DynamicOps;)Ljava/util/Optional;	a	read
	m	()Lvi;	d	copy
	m	(Ljava/lang/String;)V	t	lambda$read$5
	m	(Ljava/lang/String;Lvi;Ljava/lang/String;)V	a	lambda$read$4
	m	(Ljava/util/HashMap;Ljava/lang/String;Lvi;)V	a	lambda$copy$3
	m	(Lui;)Lcom/mojang/serialization/Dynamic;	b	lambda$static$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lvi;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ui$1	net/minecraft/nbt/CompoundTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lui;	a	load
	m	(Ljava/io/DataInput;Lur;)Lui;	d	loadCompound
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	c	parseCompound
	m	(Ljava/io/DataInput;Lur;)Ljava/lang/String;	e	readString
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	ui$2	net/minecraft/nbt/CompoundTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	m	()V	<clinit>	<clinit>
c	uj	net/minecraft/nbt/DoubleTag
	f	D	c	value
	f	I	v	SELF_SIZE_IN_BYTES
	f	Luj;	a	ZERO
	f	Lvk;	b	TYPE
	m	(D)V	<init>	<init>
	m	(D)Luj;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Luj;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	uj$1	net/minecraft/nbt/DoubleTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Luj;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)D	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	uk	net/minecraft/nbt/EndTag
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	Luk;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Luk;	e	copy
	m	(Lvm;)V	a	accept
	m	(Lvf;)Lvf$b;	a	accept
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	uk$1	net/minecraft/nbt/EndTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Luk;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;ILur;)V	a	skip
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	ul	net/minecraft/nbt/FloatTag
	f	F	c	value
	f	I	v	SELF_SIZE_IN_BYTES
	f	Lul;	a	ZERO
	f	Lvk;	b	TYPE
	m	(F)V	<init>	<init>
	m	(F)Lul;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Lul;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	ul$1	net/minecraft/nbt/FloatTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lul;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)F	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	um	net/minecraft/nbt/IntArrayTag
	f	I	b	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	[I	c	data
	m	([I)V	<init>	<init>
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Lum;	e	copy
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()[I	g	getAsIntArray
	m	(Lvm;)V	a	accept
	m	()I	size	size
	m	(I)Lun;	a	get
	m	(ILvi;)Z	a	setTag
	m	(ILvi;)Z	b	addTag
	m	(I)Lun;	b	remove
	m	()V	clear	clear
	m	()Ljava/util/Optional;	q_	asIntArray
	m	(Lvf;)Lvf$b;	a	accept
	m	(I)Lvi;	c	get
	m	(I)Lvi;	d	remove
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	um$1	net/minecraft/nbt/IntArrayTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lum;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)[I	d	readAccounted
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	un	net/minecraft/nbt/IntTag
	f	I	b	value
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	m	(I)V	<init>	<init>
	m	(I)Lun;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Lun;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	un$1	net/minecraft/nbt/IntTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lun;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)I	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	un$a	net/minecraft/nbt/IntTag$Cache
	f	I	b	HIGH
	f	I	c	LOW
	f	[Lun;	a	cache
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	uo	net/minecraft/nbt/ListTag
	f	Ljava/lang/String;	b	WRAPPER_MARKER
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	Ljava/util/List;	v	list
	m	()V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lui;)Lvi;	a	tryUnwrap
	m	(Lui;)Z	b	isWrapper
	m	(BLvi;)Lvi;	a	wrapIfNeeded
	m	(Lvi;)Lui;	b	wrapElement
	m	(Ljava/io/DataOutput;)V	a	write
	m	()B	e	identifyRawElementType
	m	(Lvi;)V	a	addAndUnwrap
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(I)Lvi;	d	remove
	m	()Z	isEmpty	isEmpty
	m	(I)Ljava/util/Optional;	a	getCompound
	m	(I)Lui;	b	getCompoundOrEmpty
	m	(I)Ljava/util/Optional;	e	getList
	m	(I)Luo;	f	getListOrEmpty
	m	(I)Ljava/util/Optional;	g	getShort
	m	(IS)S	a	getShortOr
	m	(I)Ljava/util/Optional;	h	getInt
	m	(II)I	a	getIntOr
	m	(I)Ljava/util/Optional;	i	getIntArray
	m	(I)Ljava/util/Optional;	j	getLongArray
	m	(I)Ljava/util/Optional;	k	getDouble
	m	(ID)D	a	getDoubleOr
	m	(I)Ljava/util/Optional;	l	getFloat
	m	(IF)F	a	getFloatOr
	m	(I)Ljava/util/Optional;	m	getString
	m	(ILjava/lang/String;)Ljava/lang/String;	a	getStringOr
	m	(I)Lvi;	n	getNullable
	m	(I)Ljava/util/Optional;	o	getOptional
	m	()I	size	size
	m	(I)Lvi;	c	get
	m	(ILvi;)Lvi;	c	set
	m	(ILvi;)V	d	add
	m	(ILvi;)Z	a	setTag
	m	(ILvi;)Z	b	addTag
	m	()Luo;	g	copy
	m	()Ljava/util/Optional;	t_	asList
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/util/stream/Stream;	stream	stream
	m	()Ljava/util/stream/Stream;	j	compoundStream
	m	(Lvm;)V	a	accept
	m	()V	clear	clear
	m	(Lvf;)Lvf$b;	a	accept
	m	(I)Ljava/lang/Object;	remove	remove
	m	(ILjava/lang/Object;)V	add	add
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
	m	(I)Ljava/lang/Object;	get	get
	m	()Lvi;	d	copy
	m	(Lvi;Ljava/util/function/Consumer;)V	a	lambda$compoundStream$0
	m	()V	<clinit>	<clinit>
c	uo$1	net/minecraft/nbt/ListTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Luo;	a	load
	m	(Ljava/io/DataInput;Lur;)Luo;	d	loadList
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	c	parseList
	m	(Ljava/io/DataInput;)I	a	readListCount
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	uo$2	net/minecraft/nbt/ListTag$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	f	[I	b	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$EntryResult
	m	()V	<clinit>	<clinit>
c	up	net/minecraft/nbt/LongArrayTag
	f	I	b	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	[J	c	data
	m	([J)V	<init>	<init>
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Lup;	e	copy
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lvm;)V	a	accept
	m	()[J	g	getAsLongArray
	m	()I	size	size
	m	(I)Luq;	a	get
	m	(ILvi;)Z	a	setTag
	m	(ILvi;)Z	b	addTag
	m	(I)Luq;	b	remove
	m	()V	clear	clear
	m	()Ljava/util/Optional;	r_	asLongArray
	m	(Lvf;)Lvf$b;	a	accept
	m	(I)Lvi;	c	get
	m	(I)Lvi;	d	remove
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	up$1	net/minecraft/nbt/LongArrayTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lup;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)[J	d	readAccounted
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	uq	net/minecraft/nbt/LongTag
	f	J	b	value
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	m	(J)V	<init>	<init>
	m	(J)Luq;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Luq;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	uq$1	net/minecraft/nbt/LongTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Luq;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)J	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	uq$a	net/minecraft/nbt/LongTag$Cache
	f	I	b	HIGH
	f	I	c	LOW
	f	[Luq;	a	cache
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	ur	net/minecraft/nbt/NbtAccounter
	f	I	a	MAX_STACK_DEPTH
	f	J	b	quota
	f	J	c	usage
	f	I	d	maxDepth
	f	I	e	depth
	m	(JI)V	<init>	<init>
	m	(J)Lur;	a	create
	m	()Lur;	a	unlimitedHeap
	m	(JJ)V	a	accountBytes
	m	(J)V	b	accountBytes
	m	()V	b	pushDepth
	m	()V	c	popDepth
	m	()J	d	getUsage
	m	()I	e	getDepth
c	us	net/minecraft/nbt/NbtAccounterException
	m	(Ljava/lang/String;)V	<init>	<init>
c	ut	net/minecraft/nbt/NbtException
	m	(Ljava/lang/String;)V	<init>	<init>
c	uu	net/minecraft/nbt/NbtFormatException
	m	(Ljava/lang/String;)V	<init>	<init>
c	uv	net/minecraft/nbt/NbtIo
	f	[Ljava/nio/file/OpenOption;	a	SYNC_OUTPUT_OPTIONS
	m	()V	<init>	<init>
	m	(Ljava/nio/file/Path;Lur;)Lui;	a	readCompressed
	m	(Ljava/io/InputStream;)Ljava/io/DataInputStream;	a	createDecompressorStream
	m	(Ljava/io/OutputStream;)Ljava/io/DataOutputStream;	a	createCompressorStream
	m	(Ljava/io/InputStream;Lur;)Lui;	a	readCompressed
	m	(Ljava/nio/file/Path;Lvf;Lur;)V	a	parseCompressed
	m	(Ljava/io/InputStream;Lvf;Lur;)V	a	parseCompressed
	m	(Lui;Ljava/nio/file/Path;)V	a	writeCompressed
	m	(Lui;Ljava/io/OutputStream;)V	a	writeCompressed
	m	(Lui;Ljava/nio/file/Path;)V	b	write
	m	(Ljava/nio/file/Path;)Lui;	a	read
	m	(Ljava/io/DataInput;)Lui;	a	read
	m	(Ljava/io/DataInput;Lur;)Lui;	a	read
	m	(Lui;Ljava/io/DataOutput;)V	a	write
	m	(Ljava/io/DataInput;Lvf;Lur;)V	a	parse
	m	(Ljava/io/DataInput;Lur;)Lvi;	b	readAnyTag
	m	(Lvi;Ljava/io/DataOutput;)V	a	writeAnyTag
	m	(Lvi;Ljava/io/DataOutput;)V	b	writeUnnamedTag
	m	(Lvi;Ljava/io/DataOutput;)V	c	writeUnnamedTagWithFallback
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	readUnnamedTag
	m	(Ljava/io/DataInput;Lur;B)Lvi;	a	readTagSafe
	m	()V	<clinit>	<clinit>
c	uv$1	net/minecraft/nbt/NbtIo$1
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	m	()V	<clinit>	<clinit>
c	uv$a	net/minecraft/nbt/NbtIo$StringFallbackDataOutput
	m	(Ljava/io/DataOutput;)V	<init>	<init>
	m	(Ljava/lang/String;)V	writeUTF	writeUTF
c	uw	net/minecraft/nbt/NbtOps
	f	Luw;	a	INSTANCE
	m	()V	<init>	<init>
	m	()Lvi;	a	empty
	m	(Lcom/mojang/serialization/DynamicOps;Lvi;)Ljava/lang/Object;	a	convertTo
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Ljava/lang/Number;)Lvi;	a	createNumeric
	m	(B)Lvi;	a	createByte
	m	(S)Lvi;	a	createShort
	m	(I)Lvi;	a	createInt
	m	(J)Lvi;	a	createLong
	m	(F)Lvi;	a	createFloat
	m	(D)Lvi;	a	createDouble
	m	(Z)Lvi;	a	createBoolean
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	b	getStringValue
	m	(Ljava/lang/String;)Lvi;	a	createString
	m	(Lvi;Lvi;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lvi;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lvi;Lvi;Lvi;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lvi;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lvi;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	c	getMapValues
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	d	getMapEntries
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	e	getMap
	m	(Ljava/util/stream/Stream;)Lvi;	a	createMap
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	h	getByteBuffer
	m	(Ljava/nio/ByteBuffer;)Lvi;	a	createByteList
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	i	getIntStream
	m	(Ljava/util/stream/IntStream;)Lvi;	a	createIntList
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	j	getLongStream
	m	(Ljava/util/stream/LongStream;)Lvi;	a	createLongList
	m	(Ljava/util/stream/Stream;)Lvi;	b	createList
	m	(Lvi;Ljava/lang/String;)Lvi;	a	remove
	m	()Ljava/lang/String;	toString	toString
	m	()Lcom/mojang/serialization/RecordBuilder;	mapBuilder	mapBuilder
	m	(Lvi;)Ljava/util/Optional;	k	createCollector
	m	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;	remove	remove
	m	(Ljava/util/stream/LongStream;)Ljava/lang/Object;	createLongList	createLongList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getLongStream	getLongStream
	m	(Ljava/util/stream/IntStream;)Ljava/lang/Object;	createIntList	createIntList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getIntStream	getIntStream
	m	(Ljava/nio/ByteBuffer;)Ljava/lang/Object;	createByteList	createByteList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getByteBuffer	getByteBuffer
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createList	createList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getList	getList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStream	getStream
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMap	getMap
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapEntries	getMapEntries
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapValues	getMapValues
	m	(Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/String;)Ljava/lang/Object;	createString	createString
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStringValue	getStringValue
	m	(Z)Ljava/lang/Object;	createBoolean	createBoolean
	m	(D)Ljava/lang/Object;	createDouble	createDouble
	m	(F)Ljava/lang/Object;	createFloat	createFloat
	m	(J)Ljava/lang/Object;	createLong	createLong
	m	(I)Ljava/lang/Object;	createInt	createInt
	m	(S)Ljava/lang/Object;	createShort	createShort
	m	(B)Ljava/lang/Object;	createByte	createByte
	m	(Ljava/lang/Number;)Ljava/lang/Object;	createNumeric	createNumeric
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getNumberValue	getNumberValue
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	convertTo	convertTo
	m	()Ljava/lang/Object;	empty	empty
	m	(Lvi;)Ljava/lang/String;	l	lambda$getList$23
	m	()Ljava/lang/String;	b	lambda$getStream$22
	m	(Lui;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$createMap$21
	m	(Lvi;)Ljava/lang/String;	m	lambda$getMap$20
	m	(Lvi;)Ljava/lang/String;	n	lambda$getMapEntries$19
	m	(Lui;Ljava/util/function/BiConsumer;)V	a	lambda$getMapEntries$18
	m	(Lvi;)Ljava/lang/String;	o	lambda$getMapValues$17
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$getMapValues$16
	m	(Ljava/util/List;)Ljava/lang/String;	a	lambda$mergeToMap$15
	m	(Lvi;)Ljava/lang/String;	p	lambda$mergeToMap$14
	m	(Ljava/util/List;)Ljava/lang/String;	b	lambda$mergeToMap$13
	m	(Ljava/util/List;Lui;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$mergeToMap$12
	m	(Lvi;)Ljava/lang/String;	q	lambda$mergeToMap$11
	m	(Lvi;)Ljava/lang/String;	r	lambda$mergeToMap$10
	m	(Lvi;)Ljava/lang/String;	s	lambda$mergeToMap$9
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	t	lambda$mergeToList$8
	m	(Lvi;)Ljava/lang/String;	u	lambda$mergeToList$7
	m	(Ljava/util/List;Luw$d;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$6
	m	(Lvi;)Lcom/mojang/serialization/DataResult;	v	lambda$mergeToList$5
	m	(Lvi;)Ljava/lang/String;	w	lambda$mergeToList$4
	m	(Lvi;Luw$d;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeToList$3
	m	()Ljava/lang/String;	c	lambda$getStringValue$2
	m	()Lcom/mojang/serialization/DataResult;	d	lambda$getNumberValue$1
	m	()Ljava/lang/String;	e	lambda$getNumberValue$0
	m	()V	<clinit>	<clinit>
c	uw$1	net/minecraft/nbt/NbtOps$1
	f	Lui;	a	val$tag
	f	Luw;	b	this$0
	m	(Luw;Lui;)V	<init>	<init>
	m	(Lvi;)Lvi;	a	get
	m	(Ljava/lang/String;)Lvi;	a	get
	m	()Ljava/util/stream/Stream;	entries	entries
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;)Ljava/lang/Object;	get	get
	m	(Ljava/lang/Object;)Ljava/lang/Object;	get	get
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$entries$0
c	uw$a	net/minecraft/nbt/NbtOps$ByteListCollector
	f	Lit/unimi/dsi/fastutil/bytes/ByteArrayList;	a	values
	m	([B)V	<init>	<init>
	m	(Lvi;)Luw$d;	a	accept
	m	()Lvi;	a	result
c	uw$b	net/minecraft/nbt/NbtOps$GenericListCollector
	f	Luo;	a	result
	m	()V	<init>	<init>
	m	(Luo;)V	<init>	<init>
	m	(Lit/unimi/dsi/fastutil/ints/IntArrayList;)V	<init>	<init>
	m	(Lit/unimi/dsi/fastutil/bytes/ByteArrayList;)V	<init>	<init>
	m	(Lit/unimi/dsi/fastutil/longs/LongArrayList;)V	<init>	<init>
	m	(Lvi;)Luw$d;	a	accept
	m	()Lvi;	a	result
	m	(J)V	a	lambda$new$2
	m	(B)V	a	lambda$new$1
	m	(I)V	a	lambda$new$0
c	uw$c	net/minecraft/nbt/NbtOps$IntListCollector
	f	Lit/unimi/dsi/fastutil/ints/IntArrayList;	a	values
	m	([I)V	<init>	<init>
	m	(Lvi;)Luw$d;	a	accept
	m	()Lvi;	a	result
c	uw$d	net/minecraft/nbt/NbtOps$ListCollector
	m	(Lvi;)Luw$d;	a	accept
	m	(Ljava/lang/Iterable;)Luw$d;	a	acceptAll
	m	(Ljava/util/stream/Stream;)Luw$d;	a	acceptAll
	m	()Lvi;	a	result
c	uw$e	net/minecraft/nbt/NbtOps$LongListCollector
	f	Lit/unimi/dsi/fastutil/longs/LongArrayList;	a	values
	m	([J)V	<init>	<init>
	m	(Lvi;)Luw$d;	a	accept
	m	()Lvi;	a	result
c	uw$f	net/minecraft/nbt/NbtOps$NbtRecordBuilder
	m	(Luw;)V	<init>	<init>
	m	()Lui;	a	initBuilder
	m	(Ljava/lang/String;Lvi;Lui;)Lui;	a	append
	m	(Lui;Lvi;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	append	append
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	()Ljava/lang/Object;	initBuilder	initBuilder
	m	(Lvi;)Ljava/lang/String;	a	lambda$build$0
c	ux	net/minecraft/nbt/NbtUtils
	f	Ljava/util/Comparator;	b	YXZ_LISTTAG_INT_COMPARATOR
	f	Ljava/util/Comparator;	c	YXZ_LISTTAG_DOUBLE_COMPARATOR
	f	Lcom/mojang/serialization/Codec;	d	BLOCK_NAME_CODEC
	f	Ljava/lang/String;	a	SNBT_DATA_TAG
	f	C	e	PROPERTIES_START
	f	C	f	PROPERTIES_END
	f	Ljava/lang/String;	g	ELEMENT_SEPARATOR
	f	C	h	KEY_VALUE_SEPARATOR
	f	Lcom/google/common/base/Splitter;	i	COMMA_SPLITTER
	f	Lcom/google/common/base/Splitter;	j	COLON_SPLITTER
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	I	l	INDENT
	f	I	m	NOT_FOUND
	m	()V	<init>	<init>
	m	(Lvi;Lvi;Z)Z	a	compareNbt
	m	(Ljm;Lui;)Leeb;	a	readBlockState
	m	(Leed;Lefe;Ljava/lang/String;Lui;Lui;)Leed;	a	setValueHelper
	m	(Leeb;)Lui;	a	writeBlockState
	m	(Lfal;)Lui;	a	writeFluidState
	m	(Lefe;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Lvi;)Ljava/lang/String;	a	prettyPrint
	m	(Lvi;Z)Ljava/lang/String;	a	prettyPrint
	m	(Ljava/lang/StringBuilder;Lvi;IZ)Ljava/lang/StringBuilder;	a	prettyPrint
	m	(ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder;	a	indent
	m	(Lvi;)Lxo;	b	toPrettyComponent
	m	(Lui;)Ljava/lang/String;	a	structureToSnbt
	m	(Ljava/lang/String;)Lui;	a	snbtToStructure
	m	(Lui;)Lui;	b	packStructureTemplate
	m	(Lui;)Lui;	c	unpackStructureTemplate
	m	(Lui;)Ljava/lang/String;	d	packBlockState
	m	(Ljava/lang/String;)Lui;	b	unpackBlockState
	m	(Lui;)Lui;	e	addCurrentDataVersion
	m	(Lui;I)Lui;	a	addDataVersion
	m	(Lfdc;)V	a	addCurrentDataVersion
	m	(Lfdc;I)V	a	addDataVersion
	m	(Lui;I)I	b	getDataVersion
	m	(Lcom/mojang/serialization/Dynamic;I)I	a	getDataVersion
	m	(Lui;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$unpackBlockState$16
	m	(Ljava/lang/StringBuilder;Lui;)V	a	lambda$packBlockState$15
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$packBlockState$14
	m	(Ljava/util/Map;Lui;)Luo;	a	lambda$unpackStructureTemplate$13
	m	(Lui;Ljava/lang/String;)Ljava/lang/String;	a	lambda$unpackStructureTemplate$12
	m	(Lvi;)Ljava/util/stream/Stream;	c	lambda$unpackStructureTemplate$11
	m	(Luo;Lui;)V	a	lambda$packStructureTemplate$10
	m	(Lui;)Ljava/util/Optional;	f	lambda$packStructureTemplate$9
	m	(Lui;)Ljava/util/Optional;	g	lambda$packStructureTemplate$8
	m	(Luo;Luo;Luo;)V	a	lambda$packStructureTemplate$7
	m	(Lvi;)Ljava/util/stream/Stream;	d	lambda$packStructureTemplate$6
	m	(Luo;)D	a	lambda$static$5
	m	(Luo;)D	b	lambda$static$4
	m	(Luo;)D	c	lambda$static$3
	m	(Luo;)I	d	lambda$static$2
	m	(Luo;)I	e	lambda$static$1
	m	(Luo;)I	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	uy	net/minecraft/nbt/NumericTag
	m	()B	j	byteValue
	m	()S	i	shortValue
	m	()I	h	intValue
	m	()J	g	longValue
	m	()F	l	floatValue
	m	()D	k	doubleValue
	m	()Ljava/lang/Number;	m	box
	m	()Ljava/util/Optional;	o	asNumber
	m	()Ljava/util/Optional;	p	asByte
	m	()Ljava/util/Optional;	q	asShort
	m	()Ljava/util/Optional;	r	asInt
	m	()Ljava/util/Optional;	s	asLong
	m	()Ljava/util/Optional;	t	asFloat
	m	()Ljava/util/Optional;	u	asDouble
	m	()Ljava/util/Optional;	v	asBoolean
c	uz	net/minecraft/nbt/PrimitiveTag
	m	()Lvi;	d	copy
c	va	net/minecraft/nbt/ReportedNbtException
	m	(Lp;)V	<init>	<init>
c	vb	net/minecraft/nbt/ShortTag
	f	S	b	value
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	m	(S)V	<init>	<init>
	m	(S)Lvb;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Lvb;	e	copy
	m	(Lvm;)V	a	accept
	m	()J	g	longValue
	m	()I	h	intValue
	m	()S	i	shortValue
	m	()B	j	byteValue
	m	()D	k	doubleValue
	m	()F	l	floatValue
	m	()Ljava/lang/Number;	m	box
	m	(Lvf;)Lvf$b;	a	accept
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()S	n	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	vb$1	net/minecraft/nbt/ShortTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lvb;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)S	d	readAccounted
	m	()I	c	size
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	vb$a	net/minecraft/nbt/ShortTag$Cache
	f	I	b	HIGH
	f	I	c	LOW
	f	[Lvb;	a	cache
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	vc	net/minecraft/nbt/SnbtGrammar
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NUMBER_PARSE_FAILURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_EXPECTED_HEX_ESCAPE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INVALID_CODEPOINT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NO_SUCH_OPERATION
	f	Lbsm;	e	ERROR_EXPECTED_INTEGER_TYPE
	f	Lbsm;	f	ERROR_EXPECTED_FLOAT_TYPE
	f	Lbsm;	g	ERROR_EXPECTED_NON_NEGATIVE_NUMBER
	f	Lbsm;	h	ERROR_INVALID_CHARACTER_NAME
	f	Lbsm;	i	ERROR_INVALID_ARRAY_ELEMENT_TYPE
	f	Lbsm;	j	ERROR_INVALID_UNQUOTED_START
	f	Lbsm;	k	ERROR_EXPECTED_UNQUOTED_STRING
	f	Lbsm;	l	ERROR_INVALID_STRING_CONTENTS
	f	Lbsm;	m	ERROR_EXPECTED_BINARY_NUMERAL
	f	Lbsm;	n	ERROR_UNDESCORE_NOT_ALLOWED
	f	Lbsm;	o	ERROR_EXPECTED_DECIMAL_NUMERAL
	f	Lbsm;	p	ERROR_EXPECTED_HEX_NUMERAL
	f	Lbsm;	q	ERROR_EMPTY_KEY
	f	Lbsm;	r	ERROR_LEADING_ZERO_NOT_ALLOWED
	f	Lbsm;	s	ERROR_INFINITY_NOT_ALLOWED
	f	Ljava/util/HexFormat;	t	HEX_ESCAPE
	f	Lbta;	u	BINARY_NUMERAL
	f	Lbta;	v	DECIMAL_NUMERAL
	f	Lbta;	w	HEX_NUMERAL
	f	Lbsz;	x	PLAIN_STRING_CHUNK
	f	Lbtg$a;	y	NUMBER_LOOKEAHEAD
	f	Ljava/util/regex/Pattern;	z	UNICODE_NAME
	m	()V	<init>	<init>
	m	(Ljava/lang/NumberFormatException;)Lbsm;	a	createNumberParseError
	m	(C)Ljava/lang/String;	a	escapeControlCharacters
	m	(C)Z	b	isAllowedToStartUnquotedString
	m	(C)Z	c	canStartNumber
	m	(Ljava/lang/String;)Z	a	needsUnderscoreRemoval
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)V	a	cleanAndAppend
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;Z)V	a	cleanAndAppend
	m	(Ljava/lang/String;I)S	a	parseUnsignedShort
	m	(Lcom/mojang/serialization/DynamicOps;Lvc$e;Ljava/lang/String;Ljava/lang/String;Lvc$f;Lvc$i;Lbsr;)Ljava/lang/Object;	a	createFloat
	m	(Lcom/mojang/serialization/DynamicOps;Lbsr;Ljava/lang/String;)Ljava/lang/Object;	a	convertFloat
	m	(Lcom/mojang/serialization/DynamicOps;Lbsr;Ljava/lang/String;)Ljava/lang/Object;	b	convertDouble
	m	(Ljava/util/List;)Ljava/lang/String;	a	joinList
	m	(Lcom/mojang/serialization/DynamicOps;)Lbsx;	a	createParser
	m	(Lbsj;Lcom/mojang/serialization/DynamicOps;Lbsj;Lbsj;Lbsr;)Ljava/lang/Object;	a	lambda$createParser$26
	m	(Lbsj;Lbsj;Lcom/mojang/serialization/DynamicOps;Lbsj;Ljava/lang/Object;Lbsr;)Ljava/lang/Object;	a	lambda$createParser$25
	m	(Lbsj;Lbst;)Ljava/util/List;	a	lambda$createParser$24
	m	(Lbsj;Lbst;)Lvc$a;	b	lambda$createParser$23
	m	(Lbsj;Lbst;)Ljava/util/List;	c	lambda$createParser$22
	m	(Lbsj;Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lbst;)Ljava/lang/Object;	a	lambda$createParser$21
	m	(Lbsj;Lbst;)Ljava/util/List;	d	lambda$createParser$20
	m	(Lbsj;Lbsj;Lbsr;)Ljava/util/Map$Entry;	a	lambda$createParser$19
	m	(Lbsj;Lbsj;Lbst;)Ljava/lang/String;	a	lambda$createParser$18
	m	(Lbsj;Lbsj;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;Lbsr;)Ljava/lang/Object;	a	lambda$createParser$17
	m	(Lbsj;Lbst;)Ljava/util/List;	e	lambda$createParser$16
	m	(Lbsj;Lbst;)Ljava/lang/String;	f	lambda$createParser$15
	m	(Lbsj;Lbst;)Ljava/lang/String;	g	lambda$createParser$14
	m	(Lbsj;Lbst;)Ljava/lang/String;	h	lambda$createParser$13
	m	(Lbsj;Lbst;)Ljava/lang/String;	i	lambda$createParser$12
	m	(Lbsj;Lbst;)Ljava/lang/String;	j	lambda$createParser$11
	m	(Lbsj;Lbsj;Lbsj;Lbsj;Lbsj;Lbsr;)Ljava/lang/String;	a	lambda$createParser$10
	m	(Lbsj;Lbsj;Lbsj;Lbsj;Lbsj;Lcom/mojang/serialization/DynamicOps;Lbsr;)Ljava/lang/Object;	a	lambda$createParser$9
	m	(Lbsj;Lbsj;Lbst;)Lvc$f;	b	lambda$createParser$8
	m	(Lbsj;Lbst;)Lvc$i;	k	lambda$createParser$7
	m	(Lbsj;Lbsj;Lbsj;Lbsj;Lbsj;Lbst;)Lvc$c;	a	lambda$createParser$6
	m	(Lbsj;Lbst;)Lvc$d;	l	lambda$createParser$5
	m	(Lbsj;Lbst;)Lvc$e;	m	lambda$createParser$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	vc$1	net/minecraft/nbt/SnbtGrammar$1
	m	(Lbsm;Lbsm;)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$2	net/minecraft/nbt/SnbtGrammar$2
	m	(Lbsm;Lbsm;)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$3	net/minecraft/nbt/SnbtGrammar$3
	m	(Lbsm;Lbsm;)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$4	net/minecraft/nbt/SnbtGrammar$4
	m	(ILbsm;)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$5	net/minecraft/nbt/SnbtGrammar$5
	m	(Lit/unimi/dsi/fastutil/chars/CharList;)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$a	net/minecraft/nbt/SnbtGrammar$ArrayPrefix
	f	Lvc$a;	a	BYTE
	f	Lvc$a;	b	INT
	f	Lvc$a;	c	LONG
	f	Lvc$i;	d	defaultType
	f	Ljava/util/Set;	e	additionalTypes
	f	[Lvc$a;	f	$VALUES
	m	()[Lvc$a;	values	values
	m	(Ljava/lang/String;)Lvc$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILvc$i;[Lvc$i;)V	<init>	<init>
	m	(Lvc$i;)Z	a	isAllowed
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	create
	m	(Lvc$c;Lbsr;)Ljava/lang/Number;	a	buildNumber
	m	(Lvc$d;)Lvc$i;	a	computeType
	m	()[Lvc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	vc$a$1	net/minecraft/nbt/SnbtGrammar$ArrayPrefix$1
	f	Ljava/nio/ByteBuffer;	d	EMPTY_BUFFER
	m	(Ljava/lang/String;ILvc$i;[Lvc$i;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	create
	m	()V	<clinit>	<clinit>
c	vc$a$2	net/minecraft/nbt/SnbtGrammar$ArrayPrefix$2
	m	(Ljava/lang/String;ILvc$i;[Lvc$i;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	create
c	vc$a$3	net/minecraft/nbt/SnbtGrammar$ArrayPrefix$3
	m	(Ljava/lang/String;ILvc$i;[Lvc$i;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	create
c	vc$b	net/minecraft/nbt/SnbtGrammar$Base
	f	Lvc$b;	a	BINARY
	f	Lvc$b;	b	DECIMAL
	f	Lvc$b;	c	HEX
	f	[Lvc$b;	d	$VALUES
	m	()[Lvc$b;	values	values
	m	(Ljava/lang/String;)Lvc$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lvc$b;	a	$values
	m	()V	<clinit>	<clinit>
c	vc$c	net/minecraft/nbt/SnbtGrammar$IntegerLiteral
	f	Lvc$e;	a	sign
	f	Lvc$b;	b	base
	f	Ljava/lang/String;	c	digits
	f	Lvc$d;	d	suffix
	m	(Lvc$e;Lvc$b;Ljava/lang/String;Lvc$d;)V	<init>	<init>
	m	()Lvc$g;	e	signedOrDefault
	m	(Lvc$e;)Ljava/lang/String;	a	cleanupDigits
	m	(Lcom/mojang/serialization/DynamicOps;Lbsr;)Ljava/lang/Object;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Lvc$i;Lbsr;)Ljava/lang/Object;	a	create
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lvc$e;	a	sign
	m	()Lvc$b;	b	base
	m	()Ljava/lang/String;	c	digits
	m	()Lvc$d;	d	suffix
c	vc$d	net/minecraft/nbt/SnbtGrammar$IntegerSuffix
	f	Lvc$g;	b	signed
	f	Lvc$i;	c	type
	f	Lvc$d;	a	EMPTY
	m	(Lvc$g;Lvc$i;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lvc$g;	a	signed
	m	()Lvc$i;	b	type
	m	()V	<clinit>	<clinit>
c	vc$e	net/minecraft/nbt/SnbtGrammar$Sign
	f	Lvc$e;	a	PLUS
	f	Lvc$e;	b	MINUS
	f	[Lvc$e;	c	$VALUES
	m	()[Lvc$e;	values	values
	m	(Ljava/lang/String;)Lvc$e;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/lang/StringBuilder;)V	a	append
	m	()[Lvc$e;	a	$values
	m	()V	<clinit>	<clinit>
c	vc$f	net/minecraft/nbt/SnbtGrammar$Signed
	f	Lvc$e;	a	sign
	f	Ljava/lang/Object;	b	value
	m	(Lvc$e;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lvc$e;	a	sign
	m	()Ljava/lang/Object;	b	value
c	vc$g	net/minecraft/nbt/SnbtGrammar$SignedPrefix
	f	Lvc$g;	a	SIGNED
	f	Lvc$g;	b	UNSIGNED
	f	[Lvc$g;	c	$VALUES
	m	()[Lvc$g;	values	values
	m	(Ljava/lang/String;)Lvc$g;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lvc$g;	a	$values
	m	()V	<clinit>	<clinit>
c	vc$h	net/minecraft/nbt/SnbtGrammar$SimpleHexLiteralParseRule
	m	(I)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	vc$i	net/minecraft/nbt/SnbtGrammar$TypeSuffix
	f	Lvc$i;	a	FLOAT
	f	Lvc$i;	b	DOUBLE
	f	Lvc$i;	c	BYTE
	f	Lvc$i;	d	SHORT
	f	Lvc$i;	e	INT
	f	Lvc$i;	f	LONG
	f	[Lvc$i;	g	$VALUES
	m	()[Lvc$i;	values	values
	m	(Ljava/lang/String;)Lvc$i;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lvc$i;	a	$values
	m	()V	<clinit>	<clinit>
c	vd	net/minecraft/nbt/SnbtOperations
	f	Lbsm;	e	ERROR_EXPECTED_STRING_UUID
	f	Lbsm;	f	ERROR_EXPECTED_NUMBER_OR_BOOLEAN
	f	Ljava/lang/String;	a	BUILTIN_TRUE
	f	Ljava/lang/String;	b	BUILTIN_FALSE
	f	Ljava/util/Map;	c	BUILTIN_OPERATIONS
	f	Lbsu;	d	BUILTIN_IDS
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	vd$1	net/minecraft/nbt/SnbtOperations$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	run
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Boolean;	a	convert
c	vd$2	net/minecraft/nbt/SnbtOperations$2
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	run
c	vd$3	net/minecraft/nbt/SnbtOperations$3
	f	Ljava/util/Set;	a	keys
	m	()V	<init>	<init>
	m	(Lbsr;)Ljava/util/stream/Stream;	possibleValues	possibleValues
c	vd$a	net/minecraft/nbt/SnbtOperations$BuiltinKey
	f	Ljava/lang/String;	a	id
	f	I	b	argCount
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	id
	m	()I	b	argCount
c	vd$b	net/minecraft/nbt/SnbtOperations$BuiltinOperation
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/List;Lbsr;)Ljava/lang/Object;	a	run
c	ve	net/minecraft/nbt/SnbtPrinterTagVisitor
	f	Ljava/util/Map;	a	KEY_ORDER
	f	Ljava/util/Set;	b	NO_INDENTATION
	f	Ljava/util/regex/Pattern;	c	SIMPLE_VALUE
	f	Ljava/lang/String;	d	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	e	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	f	LIST_OPEN
	f	Ljava/lang/String;	g	LIST_CLOSE
	f	Ljava/lang/String;	h	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	i	ELEMENT_SPACING
	f	Ljava/lang/String;	j	STRUCT_OPEN
	f	Ljava/lang/String;	k	STRUCT_CLOSE
	f	Ljava/lang/String;	l	NEWLINE
	f	Ljava/lang/String;	m	indentation
	f	I	n	depth
	f	Ljava/util/List;	o	path
	f	Ljava/lang/String;	p	result
	m	()V	<init>	<init>
	m	(Ljava/lang/String;ILjava/util/List;)V	<init>	<init>
	m	(Lvi;)Ljava/lang/String;	a	visit
	m	(Lvg;)V	a	visitString
	m	(Lug;)V	a	visitByte
	m	(Lvb;)V	a	visitShort
	m	(Lun;)V	a	visitInt
	m	(Luq;)V	a	visitLong
	m	(Lul;)V	a	visitFloat
	m	(Luj;)V	a	visitDouble
	m	(Luf;)V	a	visitByteArray
	m	(Lum;)V	a	visitIntArray
	m	(Lup;)V	a	visitLongArray
	m	(Luo;)V	a	visitList
	m	(Lui;)V	a	visitCompound
	m	()V	b	popPath
	m	(Ljava/lang/String;)V	b	pushPath
	m	(Lui;)Ljava/util/List;	b	getKeys
	m	()Ljava/lang/String;	a	pathString
	m	(Ljava/lang/String;)Ljava/lang/String;	a	handleEscapePretty
	m	(Luk;)V	a	visitEnd
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	vf	net/minecraft/nbt/StreamTagVisitor
	m	()Lvf$b;	a	visitEnd
	m	(Ljava/lang/String;)Lvf$b;	a	visit
	m	(B)Lvf$b;	a	visit
	m	(S)Lvf$b;	a	visit
	m	(I)Lvf$b;	a	visit
	m	(J)Lvf$b;	a	visit
	m	(F)Lvf$b;	a	visit
	m	(D)Lvf$b;	a	visit
	m	([B)Lvf$b;	a	visit
	m	([I)Lvf$b;	a	visit
	m	([J)Lvf$b;	a	visit
	m	(Lvk;I)Lvf$b;	a	visitList
	m	(Lvk;)Lvf$a;	a	visitEntry
	m	(Lvk;Ljava/lang/String;)Lvf$a;	a	visitEntry
	m	(Lvk;I)Lvf$a;	b	visitElement
	m	()Lvf$b;	b	visitContainerEnd
	m	(Lvk;)Lvf$b;	b	visitRootEntry
c	vf$a	net/minecraft/nbt/StreamTagVisitor$EntryResult
	f	Lvf$a;	a	ENTER
	f	Lvf$a;	b	SKIP
	f	Lvf$a;	c	BREAK
	f	Lvf$a;	d	HALT
	f	[Lvf$a;	e	$VALUES
	m	()[Lvf$a;	values	values
	m	(Ljava/lang/String;)Lvf$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lvf$a;	a	$values
	m	()V	<clinit>	<clinit>
c	vf$b	net/minecraft/nbt/StreamTagVisitor$ValueResult
	f	Lvf$b;	a	CONTINUE
	f	Lvf$b;	b	BREAK
	f	Lvf$b;	c	HALT
	f	[Lvf$b;	d	$VALUES
	m	()[Lvf$b;	values	values
	m	(Ljava/lang/String;)Lvf$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lvf$b;	a	$values
	m	()V	<clinit>	<clinit>
c	vg	net/minecraft/nbt/StringTag
	f	Ljava/lang/String;	b	value
	f	I	c	SELF_SIZE_IN_BYTES
	f	Lvk;	a	TYPE
	f	Lvg;	v	EMPTY
	f	C	w	DOUBLE_QUOTE
	f	C	x	SINGLE_QUOTE
	f	C	y	ESCAPE
	f	C	z	NOT_SET
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/io/DataInput;)V	a	skipString
	m	(Ljava/lang/String;)Lvg;	a	valueOf
	m	(Ljava/io/DataOutput;)V	a	write
	m	()I	a	sizeInBytes
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Lvg;	e	copy
	m	()Ljava/util/Optional;	p_	asString
	m	(Lvm;)V	a	accept
	m	(Ljava/lang/String;)Ljava/lang/String;	b	quoteAndEscape
	m	(Ljava/lang/String;Ljava/lang/StringBuilder;)V	a	quoteAndEscape
	m	(Ljava/lang/String;)Ljava/lang/String;	c	escapeWithoutQuotes
	m	(Ljava/lang/String;Ljava/lang/StringBuilder;)V	b	escapeWithoutQuotes
	m	(Lvf;)Lvf$b;	a	accept
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	k	value
	m	()Lvi;	d	copy
	m	()V	<clinit>	<clinit>
c	vg$1	net/minecraft/nbt/StringTag$1
	m	()V	<init>	<init>
	m	(Ljava/io/DataInput;Lur;)Lvg;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lur;)Ljava/lang/String;	d	readAccounted
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	vh	net/minecraft/nbt/StringTagVisitor
	f	Ljava/util/regex/Pattern;	a	UNQUOTED_KEY_MATCH
	f	Ljava/lang/StringBuilder;	b	builder
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	a	build
	m	(Lvg;)V	a	visitString
	m	(Lug;)V	a	visitByte
	m	(Lvb;)V	a	visitShort
	m	(Lun;)V	a	visitInt
	m	(Luq;)V	a	visitLong
	m	(Lul;)V	a	visitFloat
	m	(Luj;)V	a	visitDouble
	m	(Luf;)V	a	visitByteArray
	m	(Lum;)V	a	visitIntArray
	m	(Lup;)V	a	visitLongArray
	m	(Luo;)V	a	visitList
	m	(Lui;)V	a	visitCompound
	m	(Ljava/lang/String;)V	a	handleKeyEscape
	m	(Luk;)V	a	visitEnd
	m	()V	<clinit>	<clinit>
c	vi	net/minecraft/nbt/Tag
	f	I	d	OBJECT_HEADER
	f	I	e	ARRAY_HEADER
	f	I	f	OBJECT_REFERENCE
	f	I	g	STRING_SIZE
	f	B	h	TAG_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_BYTE_ARRAY
	f	B	p	TAG_STRING
	f	B	q	TAG_LIST
	f	B	r	TAG_COMPOUND
	f	B	s	TAG_INT_ARRAY
	f	B	t	TAG_LONG_ARRAY
	f	I	u	MAX_DEPTH
	m	(Ljava/io/DataOutput;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()B	b	getId
	m	()Lvk;	c	getType
	m	()Lvi;	d	copy
	m	()I	a	sizeInBytes
	m	(Lvm;)V	a	accept
	m	(Lvf;)Lvf$b;	a	accept
	m	(Lvf;)V	b	acceptAsRoot
	m	()Ljava/util/Optional;	p_	asString
	m	()Ljava/util/Optional;	o	asNumber
	m	()Ljava/util/Optional;	p	asByte
	m	()Ljava/util/Optional;	q	asShort
	m	()Ljava/util/Optional;	r	asInt
	m	()Ljava/util/Optional;	s	asLong
	m	()Ljava/util/Optional;	t	asFloat
	m	()Ljava/util/Optional;	u	asDouble
	m	()Ljava/util/Optional;	v	asBoolean
	m	()Ljava/util/Optional;	f	asByteArray
	m	()Ljava/util/Optional;	q_	asIntArray
	m	()Ljava/util/Optional;	r_	asLongArray
	m	()Ljava/util/Optional;	s_	asCompound
	m	()Ljava/util/Optional;	t_	asList
	m	(Ljava/lang/Byte;)Ljava/lang/Boolean;	a	lambda$asBoolean$0
c	vj	net/minecraft/nbt/TagParser
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TRAILING_DATA
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_EXPECTED_COMPOUND
	f	C	c	ELEMENT_SEPARATOR
	f	C	d	NAME_VALUE_SEPARATOR
	f	Lvj;	g	NBT_OPS_PARSER
	f	Lcom/mojang/serialization/Codec;	e	FLATTENED_CODEC
	f	Lcom/mojang/serialization/Codec;	f	LENIENT_CODEC
	f	Lcom/mojang/serialization/DynamicOps;	h	ops
	f	Lbsx;	i	grammar
	m	(Lcom/mojang/serialization/DynamicOps;Lbsx;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DynamicOps;	a	getOps
	m	(Lcom/mojang/serialization/DynamicOps;)Lvj;	a	create
	m	(Lcom/mojang/brigadier/StringReader;Lvi;)Lui;	a	castToCompoundOrThrow
	m	(Ljava/lang/String;)Lui;	a	parseCompoundFully
	m	(Ljava/lang/String;)Ljava/lang/Object;	b	parseFully
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseFully
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	b	parseAsArgument
	m	(Lcom/mojang/brigadier/StringReader;)Lui;	c	parseCompoundAsArgument
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
	m	(Lvi;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	vk	net/minecraft/nbt/TagType
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;Lvf;Lur;)V	b	parseRoot
	m	(Ljava/io/DataInput;ILur;)V	a	skip
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(I)Lvk;	a	createInvalid
c	vk$1	net/minecraft/nbt/TagType$1
	f	I	a	val$id
	m	(I)V	<init>	<init>
	m	()Ljava/io/IOException;	c	createException
	m	(Ljava/io/DataInput;Lur;)Luk;	a	load
	m	(Ljava/io/DataInput;Lvf;Lur;)Lvf$b;	a	parse
	m	(Ljava/io/DataInput;ILur;)V	a	skip
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	b	getPrettyName
	m	(Ljava/io/DataInput;Lur;)Lvi;	c	load
c	vk$2	net/minecraft/nbt/TagType$2
	f	[I	a	$SwitchMap$net$minecraft$nbt$StreamTagVisitor$ValueResult
	m	()V	<clinit>	<clinit>
c	vk$a	net/minecraft/nbt/TagType$StaticSize
	m	(Ljava/io/DataInput;Lur;)V	b	skip
	m	(Ljava/io/DataInput;ILur;)V	a	skip
	m	()I	c	size
c	vk$b	net/minecraft/nbt/TagType$VariableSize
	m	(Ljava/io/DataInput;ILur;)V	a	skip
c	vl	net/minecraft/nbt/TagTypes
	f	[Lvk;	a	TYPES
	m	()V	<init>	<init>
	m	(I)Lvk;	a	getType
	m	()V	<clinit>	<clinit>
c	vm	net/minecraft/nbt/TagVisitor
	m	(Lvg;)V	a	visitString
	m	(Lug;)V	a	visitByte
	m	(Lvb;)V	a	visitShort
	m	(Lun;)V	a	visitInt
	m	(Luq;)V	a	visitLong
	m	(Lul;)V	a	visitFloat
	m	(Luj;)V	a	visitDouble
	m	(Luf;)V	a	visitByteArray
	m	(Lum;)V	a	visitIntArray
	m	(Lup;)V	a	visitLongArray
	m	(Luo;)V	a	visitList
	m	(Lui;)V	a	visitCompound
	m	(Luk;)V	a	visitEnd
c	vn	net/minecraft/nbt/TextComponentTagVisitor
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	INLINE_LIST_THRESHOLD
	f	I	c	MAX_DEPTH
	f	I	d	MAX_LENGTH
	f	Lo;	e	SYNTAX_HIGHLIGHTING_KEY
	f	Lo;	f	SYNTAX_HIGHLIGHTING_STRING
	f	Lo;	g	SYNTAX_HIGHLIGHTING_NUMBER
	f	Lo;	h	SYNTAX_HIGHLIGHTING_NUMBER_TYPE
	f	Ljava/util/regex/Pattern;	i	SIMPLE_VALUE
	f	Ljava/lang/String;	j	LIST_OPEN
	f	Ljava/lang/String;	k	LIST_CLOSE
	f	Ljava/lang/String;	l	LIST_TYPE_SEPARATOR
	f	Ljava/lang/String;	m	ELEMENT_SPACING
	f	Ljava/lang/String;	n	STRUCT_OPEN
	f	Ljava/lang/String;	o	STRUCT_CLOSE
	f	Ljava/lang/String;	p	NEWLINE
	f	Ljava/lang/String;	q	NAME_VALUE_SEPARATOR
	f	Ljava/lang/String;	r	ELEMENT_SEPARATOR
	f	Ljava/lang/String;	s	WRAPPED_ELEMENT_SEPARATOR
	f	Ljava/lang/String;	t	SPACED_ELEMENT_SEPARATOR
	f	Lxo;	u	FOLDED
	f	Lxo;	v	BYTE_TYPE
	f	Lxo;	w	SHORT_TYPE
	f	Lxo;	x	INT_TYPE
	f	Lxo;	y	LONG_TYPE
	f	Lxo;	z	FLOAT_TYPE
	f	Lxo;	A	DOUBLE_TYPE
	f	Lxo;	B	BYTE_ARRAY_TYPE
	f	Ljava/lang/String;	C	indentation
	f	I	D	indentDepth
	f	I	E	depth
	f	Lyc;	F	result
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lvi;)Lxo;	a	visit
	m	(Lvg;)V	a	visitString
	m	(Lug;)V	a	visitByte
	m	(Lvb;)V	a	visitShort
	m	(Lun;)V	a	visitInt
	m	(Luq;)V	a	visitLong
	m	(Lul;)V	a	visitFloat
	m	(Luj;)V	a	visitDouble
	m	(Luf;)V	a	visitByteArray
	m	(Lum;)V	a	visitIntArray
	m	(Lup;)V	a	visitLongArray
	m	(Luo;)Z	b	shouldWrapListElements
	m	(Luo;)V	a	visitList
	m	(Lui;)V	a	visitCompound
	m	(Lvi;Z)V	a	appendSubTag
	m	(Ljava/lang/String;)Lxo;	a	handleEscapePretty
	m	(Luk;)V	a	visitEnd
	m	()V	<clinit>	<clinit>
c	vo	net/minecraft/nbt/package-info
c	vp	net/minecraft/nbt/visitors/CollectFields
	f	I	a	fieldsToGetCount
	f	Ljava/util/Set;	b	wantedTypes
	f	Ljava/util/Deque;	c	stack
	m	([Lvr;)V	<init>	<init>
	m	(Lvk;)Lvf$b;	b	visitRootEntry
	m	(Lvk;)Lvf$a;	a	visitEntry
	m	(Lvk;Ljava/lang/String;)Lvf$a;	a	visitEntry
	m	()Lvf$b;	b	visitContainerEnd
	m	()I	c	getMissingFieldCount
c	vq	net/minecraft/nbt/visitors/CollectToTag
	f	Ljava/util/Deque;	a	containerStack
	m	()V	<init>	<init>
	m	()Lvi;	d	getResult
	m	()I	e	depth
	m	(Lvi;)V	a	appendEntry
	m	()Lvf$b;	a	visitEnd
	m	(Ljava/lang/String;)Lvf$b;	a	visit
	m	(B)Lvf$b;	a	visit
	m	(S)Lvf$b;	a	visit
	m	(I)Lvf$b;	a	visit
	m	(J)Lvf$b;	a	visit
	m	(F)Lvf$b;	a	visit
	m	(D)Lvf$b;	a	visit
	m	([B)Lvf$b;	a	visit
	m	([I)Lvf$b;	a	visit
	m	([J)Lvf$b;	a	visit
	m	(Lvk;I)Lvf$b;	a	visitList
	m	(Lvk;I)Lvf$a;	b	visitElement
	m	(Lvk;)Lvf$a;	a	visitEntry
	m	(Lvk;Ljava/lang/String;)Lvf$a;	a	visitEntry
	m	(Lvk;)V	c	enterContainerIfNeeded
	m	()Lvf$b;	b	visitContainerEnd
	m	(Lvk;)Lvf$b;	b	visitRootEntry
c	vq$a	net/minecraft/nbt/visitors/CollectToTag$CompoundBuilder
	f	Lui;	a	compound
	f	Ljava/lang/String;	b	lastId
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)V	a	acceptKey
	m	(Lvi;)V	a	acceptValue
	m	()Lvi;	a	build
c	vq$b	net/minecraft/nbt/visitors/CollectToTag$ContainerBuilder
	m	(Ljava/lang/String;)V	a	acceptKey
	m	(Lvi;)V	a	acceptValue
	m	()Lvi;	a	build
c	vq$c	net/minecraft/nbt/visitors/CollectToTag$ListBuilder
	f	Luo;	a	list
	m	()V	<init>	<init>
	m	(Lvi;)V	a	acceptValue
	m	()Lvi;	a	build
c	vq$d	net/minecraft/nbt/visitors/CollectToTag$RootBuilder
	f	Lvi;	a	result
	m	()V	<init>	<init>
	m	(Lvi;)V	a	acceptValue
	m	()Lvi;	a	build
c	vr	net/minecraft/nbt/visitors/FieldSelector
	f	Ljava/util/List;	a	path
	f	Lvk;	b	type
	f	Ljava/lang/String;	c	name
	m	(Lvk;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Lvk;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;Lvk;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/util/List;Lvk;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	path
	m	()Lvk;	b	type
	m	()Ljava/lang/String;	c	name
c	vs	net/minecraft/nbt/visitors/FieldTree
	f	I	a	depth
	f	Ljava/util/Map;	b	selectedFields
	f	Ljava/util/Map;	c	fieldsToRecurse
	m	(I)V	<init>	<init>
	m	(ILjava/util/Map;Ljava/util/Map;)V	<init>	<init>
	m	()Lvs;	a	createRoot
	m	(Lvr;)V	a	addEntry
	m	(Lvk;Ljava/lang/String;)Z	a	isSelected
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	depth
	m	()Ljava/util/Map;	c	selectedFields
	m	()Ljava/util/Map;	d	fieldsToRecurse
	m	(Ljava/lang/String;)Lvs;	a	lambda$addEntry$0
c	vt	net/minecraft/nbt/visitors/SkipAll
	f	Lvt;	a	INSTANCE
	m	()Lvf$b;	a	visitEnd
	m	(Ljava/lang/String;)Lvf$b;	a	visit
	m	(B)Lvf$b;	a	visit
	m	(S)Lvf$b;	a	visit
	m	(I)Lvf$b;	a	visit
	m	(J)Lvf$b;	a	visit
	m	(F)Lvf$b;	a	visit
	m	(D)Lvf$b;	a	visit
	m	([B)Lvf$b;	a	visit
	m	([I)Lvf$b;	a	visit
	m	([J)Lvf$b;	a	visit
	m	(Lvk;I)Lvf$b;	a	visitList
	m	(Lvk;I)Lvf$a;	b	visitElement
	m	(Lvk;)Lvf$a;	a	visitEntry
	m	(Lvk;Ljava/lang/String;)Lvf$a;	a	visitEntry
	m	()Lvf$b;	b	visitContainerEnd
	m	(Lvk;)Lvf$b;	b	visitRootEntry
	m	()V	<clinit>	<clinit>
c	vt$1	net/minecraft/nbt/visitors/SkipAll$1
	m	()V	<init>	<init>
c	vu	net/minecraft/nbt/visitors/SkipFields
	f	Ljava/util/Deque;	a	stack
	m	([Lvr;)V	<init>	<init>
	m	(Lvk;Ljava/lang/String;)Lvf$a;	a	visitEntry
	m	()Lvf$b;	b	visitContainerEnd
c	vv	net/minecraft/nbt/visitors/package-info
c	vw	net/minecraft/network/BandwidthDebugMonitor
	f	Ljava/util/concurrent/atomic/AtomicInteger;	a	bytesReceived
	f	Lbru;	b	bandwidthLogger
	m	(Lbru;)V	<init>	<init>
	m	(I)V	a	onReceive
	m	()V	a	tick
c	vx	net/minecraft/network/CipherBase
	f	Ljavax/crypto/Cipher;	a	cipher
	f	[B	b	heapIn
	f	[B	c	heapOut
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)[B	a	bufToByte
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	decipher
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encipher
c	vy	net/minecraft/network/CipherDecoder
	f	Lvx;	a	cipher
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	a	decode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V	decode	decode
c	vz	net/minecraft/network/CipherEncoder
	f	Lvx;	a	cipher
	m	(Ljavax/crypto/Cipher;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V	encode	encode
c	wa	net/minecraft/network/ClientboundPacketListener
	m	()Lzx;	O_	flow
c	wb	net/minecraft/network/CompressionDecoder
	f	I	a	MAXIMUM_COMPRESSED_LENGTH
	f	I	b	MAXIMUM_UNCOMPRESSED_LENGTH
	f	Ljava/util/zip/Inflater;	c	inflater
	f	I	d	threshold
	f	Z	e	validateDecompressed
	m	(IZ)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	decode	decode
	m	(Lio/netty/buffer/ByteBuf;)V	a	setupInflaterInput
	m	(Lio/netty/channel/ChannelHandlerContext;I)Lio/netty/buffer/ByteBuf;	a	inflate
	m	(IZ)V	a	setThreshold
c	wc	net/minecraft/network/CompressionEncoder
	f	[B	a	encodeBuf
	f	Ljava/util/zip/Deflater;	b	deflater
	f	I	c	threshold
	m	(I)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	()I	a	getThreshold
	m	(I)V	a	setThreshold
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V	encode	encode
c	wd	net/minecraft/network/Connection
	f	F	h	AVERAGE_PACKETS_SMOOTHING
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	Lorg/slf4j/Marker;	a	ROOT_MARKER
	f	Lorg/slf4j/Marker;	b	PACKET_MARKER
	f	Lorg/slf4j/Marker;	c	PACKET_RECEIVED_MARKER
	f	Lorg/slf4j/Marker;	d	PACKET_SENT_MARKER
	f	Ljava/util/function/Supplier;	e	NETWORK_WORKER_GROUP
	f	Ljava/util/function/Supplier;	f	NETWORK_EPOLL_WORKER_GROUP
	f	Ljava/util/function/Supplier;	g	LOCAL_WORKER_GROUP
	f	Lwu;	j	INITIAL_PROTOCOL
	f	Lzx;	k	receiving
	f	Z	l	sendLoginDisconnect
	f	Ljava/util/Queue;	m	pendingActions
	f	Lio/netty/channel/Channel;	n	channel
	f	Ljava/net/SocketAddress;	o	address
	f	Lws;	p	disconnectListener
	f	Lws;	q	packetListener
	f	Lwf;	r	disconnectionDetails
	f	Z	s	encrypted
	f	Z	t	disconnectionHandled
	f	I	u	receivedPackets
	f	I	v	sentPackets
	f	F	w	averageReceivedPackets
	f	F	x	averageSentPackets
	f	I	y	tickCount
	f	Z	z	handlingFault
	f	Lwf;	A	delayedDisconnect
	f	Lvw;	B	bandwidthDebugMonitor
	m	(Lzx;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;)V	channelActive	channelActive
	m	(Lio/netty/channel/ChannelHandlerContext;)V	channelInactive	channelInactive
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Throwable;)V	exceptionCaught	exceptionCaught
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;)V	a	channelRead0
	m	(Lzw;Lws;)V	a	genericsFtw
	m	(Lwu;Lws;)V	b	validateListener
	m	(Lio/netty/channel/ChannelFuture;)V	a	syncAfterConfigurationChange
	m	(Lwu;Lws;)V	a	setupInboundProtocol
	m	(Lwu;)V	a	setupOutboundProtocol
	m	(Lws;)V	a	setListenerForServerboundHandshake
	m	(Ljava/lang/String;ILakz;)V	a	initiateServerboundStatusConnection
	m	(Ljava/lang/String;ILajz;)V	a	initiateServerboundPlayConnection
	m	(Ljava/lang/String;ILwu;Lwu;Lwa;Z)V	a	initiateServerboundPlayConnection
	m	(Ljava/lang/String;ILwu;Lwu;Lwa;Lajt;)V	a	initiateServerboundConnection
	m	(Lzw;)V	a	send
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;)V	a	send
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;Z)V	a	send
	m	(Ljava/util/function/Consumer;)V	a	runOnceConnected
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;Z)V	b	sendPacket
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;Z)V	c	doSendPacket
	m	()V	a	flushChannel
	m	()V	q	flush
	m	()V	r	flushQueue
	m	()V	b	tick
	m	()V	c	tickSecond
	m	()Ljava/net/SocketAddress;	d	getRemoteAddress
	m	(Z)Ljava/lang/String;	a	getLoggableAddress
	m	(Lxo;)V	a	disconnect
	m	(Lwf;)V	a	disconnect
	m	()Z	e	isMemoryConnection
	m	()Lzx;	f	getReceiving
	m	()Lzx;	g	getSending
	m	(Ljava/net/InetSocketAddress;ZLbru;)Lwd;	a	connectToServer
	m	(Ljava/net/InetSocketAddress;ZLwd;)Lio/netty/channel/ChannelFuture;	a	connect
	m	(Z)Ljava/lang/String;	b	outboundHandlerName
	m	(Z)Ljava/lang/String;	c	inboundHandlerName
	m	(Lio/netty/channel/ChannelPipeline;)V	a	configurePacketHandler
	m	(Lio/netty/channel/ChannelPipeline;Lzx;ZLvw;)V	a	configureSerialization
	m	(Z)Lio/netty/channel/ChannelOutboundHandler;	d	createFrameEncoder
	m	(Lvw;Z)Lio/netty/channel/ChannelInboundHandler;	a	createFrameDecoder
	m	(Lio/netty/channel/ChannelPipeline;Lzx;)V	a	configureInMemoryPipeline
	m	(Ljava/net/SocketAddress;)Lwd;	a	connectToLocalServer
	m	(Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V	a	setEncryptionKey
	m	()Z	h	isEncrypted
	m	()Z	i	isConnected
	m	()Z	j	isConnecting
	m	()Lws;	k	getPacketListener
	m	()Lwf;	l	getDisconnectionDetails
	m	()V	m	setReadOnly
	m	(IZ)V	a	setupCompression
	m	()V	n	handleDisconnection
	m	()F	o	getAverageReceivedPackets
	m	()F	p	getAverageSentPackets
	m	(Lbru;)V	a	setBandwidthLogger
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead0	channelRead0
	m	()Lwf;	s	lambda$handleDisconnection$14
	m	()V	t	lambda$flush$13
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;Z)V	d	lambda$sendPacket$12
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;ZLwd;)V	a	lambda$send$11
	m	(Lwu;Lwa;Ljava/lang/String;ILajt;Lwu;Lwd;)V	a	lambda$initiateServerboundConnection$10
	m	(ZLio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundProtocol$9
	m	(Lwp;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundProtocol$8
	m	(Lwo;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupInboundProtocol$7
	m	(Lwf;)V	b	lambda$exceptionCaught$6
	m	()Lio/netty/channel/DefaultEventLoopGroup;	u	lambda$static$5
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	v	lambda$static$4
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	w	lambda$static$3
	m	(Lorg/slf4j/Marker;)V	a	lambda$static$2
	m	(Lorg/slf4j/Marker;)V	b	lambda$static$1
	m	(Lorg/slf4j/Marker;)V	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	wd$1	net/minecraft/network/Connection$1
	f	Lwd;	a	val$connection
	m	(Lwd;)V	<init>	<init>
	m	(Lio/netty/channel/Channel;)V	initChannel	initChannel
c	wd$2	net/minecraft/network/Connection$2
	m	(Lwd;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V	write	write
c	wd$3	net/minecraft/network/Connection$3
	f	Lwd;	a	val$connection
	m	(Lwd;)V	<init>	<init>
	m	(Lio/netty/channel/Channel;)V	initChannel	initChannel
c	we	net/minecraft/network/ConnectionProtocol
	f	Lwe;	a	HANDSHAKING
	f	Lwe;	b	PLAY
	f	Lwe;	c	STATUS
	f	Lwe;	d	LOGIN
	f	Lwe;	e	CONFIGURATION
	f	Ljava/lang/String;	f	id
	f	[Lwe;	g	$VALUES
	m	()[Lwe;	values	values
	m	(Ljava/lang/String;)Lwe;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	id
	m	()[Lwe;	b	$values
	m	()V	<clinit>	<clinit>
c	wf	net/minecraft/network/DisconnectionDetails
	f	Lxo;	a	reason
	f	Ljava/util/Optional;	b	report
	f	Ljava/util/Optional;	c	bugReportLink
	m	(Lxo;)V	<init>	<init>
	m	(Lxo;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	reason
	m	()Ljava/util/Optional;	b	report
	m	()Ljava/util/Optional;	c	bugReportLink
c	wg	net/minecraft/network/FriendlyByteBuf
	f	I	a	DEFAULT_NBT_QUOTA
	f	Lio/netty/buffer/ByteBuf;	d	source
	f	S	b	MAX_STRING_LENGTH
	f	I	c	MAX_COMPONENT_STRING_LENGTH
	f	I	e	PUBLIC_KEY_SIZE
	f	I	f	MAX_PUBLIC_KEY_HEADER_SIZE
	f	I	g	MAX_PUBLIC_KEY_LENGTH
	f	Lcom/google/gson/Gson;	h	GSON
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readWithCodecTrusted
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lur;)Ljava/lang/Object;	a	readWithCodec
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lwg;	a	writeWithCodec
	m	(Lcom/mojang/serialization/Codec;)Ljava/lang/Object;	a	readLenientJsonWithCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	writeJsonWithCodec
	m	(Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction;	a	limitValue
	m	(Ljava/util/function/IntFunction;Lzn;)Ljava/util/Collection;	a	readCollection
	m	(Ljava/util/Collection;Lzo;)V	a	writeCollection
	m	(Lzn;)Ljava/util/List;	a	readList
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	readIntIdList
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	a	writeIntIdList
	m	(Ljava/util/function/IntFunction;Lzn;Lzn;)Ljava/util/Map;	a	readMap
	m	(Lzn;Lzn;)Ljava/util/Map;	a	readMap
	m	(Ljava/util/Map;Lzo;Lzo;)V	a	writeMap
	m	(Ljava/util/function/Consumer;)V	a	readWithCount
	m	(Ljava/util/EnumSet;Ljava/lang/Class;)V	a	writeEnumSet
	m	(Ljava/lang/Class;)Ljava/util/EnumSet;	a	readEnumSet
	m	(Ljava/util/Optional;Lzo;)V	a	writeOptional
	m	(Lzn;)Ljava/util/Optional;	b	readOptional
	m	(Lcom/mojang/datafixers/util/Either;Lzo;Lzo;)V	a	writeEither
	m	(Lzn;Lzn;)Lcom/mojang/datafixers/util/Either;	b	readEither
	m	(Lzn;)Ljava/lang/Object;	c	readNullable
	m	(Lio/netty/buffer/ByteBuf;Lzn;)Ljava/lang/Object;	a	readNullable
	m	(Ljava/lang/Object;Lzo;)V	a	writeNullable
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;Lzo;)V	a	writeNullable
	m	()[B	b	readByteArray
	m	(Lio/netty/buffer/ByteBuf;)[B	a	readByteArray
	m	([B)Lwg;	a	writeByteArray
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	writeByteArray
	m	(I)[B	a	readByteArray
	m	(Lio/netty/buffer/ByteBuf;I)[B	a	readByteArray
	m	([I)Lwg;	a	writeVarIntArray
	m	()[I	c	readVarIntArray
	m	(I)[I	b	readVarIntArray
	m	([J)Lwg;	a	writeLongArray
	m	(Lio/netty/buffer/ByteBuf;[J)V	a	writeLongArray
	m	([J)Lwg;	b	writeFixedSizeLongArray
	m	(Lio/netty/buffer/ByteBuf;[J)V	b	writeFixedSizeLongArray
	m	()[J	d	readLongArray
	m	([J)[J	c	readFixedSizeLongArray
	m	(Lio/netty/buffer/ByteBuf;)[J	b	readLongArray
	m	(Lio/netty/buffer/ByteBuf;[J)[J	c	readFixedSizeLongArray
	m	()Ljb;	e	readBlockPos
	m	(Lio/netty/buffer/ByteBuf;)Ljb;	c	readBlockPos
	m	(Ljb;)Lwg;	a	writeBlockPos
	m	(Lio/netty/buffer/ByteBuf;Ljb;)V	a	writeBlockPos
	m	()Ldlz;	f	readChunkPos
	m	(Ldlz;)Lwg;	a	writeChunkPos
	m	(Lio/netty/buffer/ByteBuf;)Ldlz;	d	readChunkPos
	m	(Lio/netty/buffer/ByteBuf;Ldlz;)V	a	writeChunkPos
	m	()Lke;	g	readSectionPos
	m	(Lke;)Lwg;	a	writeSectionPos
	m	()Ljk;	h	readGlobalPos
	m	(Ljk;)V	a	writeGlobalPos
	m	()Lorg/joml/Vector3f;	i	readVector3f
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Vector3f;	e	readVector3f
	m	(Lorg/joml/Vector3f;)V	a	writeVector3f
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Vector3f;)V	a	writeVector3f
	m	()Lorg/joml/Quaternionf;	j	readQuaternion
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Quaternionf;	f	readQuaternion
	m	(Lorg/joml/Quaternionf;)V	a	writeQuaternion
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Quaternionf;)V	a	writeQuaternion
	m	(Lio/netty/buffer/ByteBuf;)Lfis;	g	readVec3
	m	()Lfis;	k	readVec3
	m	(Lio/netty/buffer/ByteBuf;Lfis;)V	a	writeVec3
	m	(Lfis;)V	a	writeVec3
	m	(Ljava/lang/Class;)Ljava/lang/Enum;	b	readEnum
	m	(Ljava/lang/Enum;)Lwg;	a	writeEnum
	m	(Ljava/util/function/IntFunction;)Ljava/lang/Object;	a	readById
	m	(Ljava/util/function/ToIntFunction;Ljava/lang/Object;)Lwg;	a	writeById
	m	()I	l	readVarInt
	m	()J	m	readVarLong
	m	(Ljava/util/UUID;)Lwg;	a	writeUUID
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/UUID;)V	a	writeUUID
	m	()Ljava/util/UUID;	n	readUUID
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/UUID;	h	readUUID
	m	(I)Lwg;	c	writeVarInt
	m	(J)Lwg;	a	writeVarLong
	m	(Lvi;)Lwg;	a	writeNbt
	m	(Lio/netty/buffer/ByteBuf;Lvi;)V	a	writeNbt
	m	()Lui;	o	readNbt
	m	(Lio/netty/buffer/ByteBuf;)Lui;	i	readNbt
	m	(Lio/netty/buffer/ByteBuf;Lur;)Lvi;	a	readNbt
	m	(Lur;)Lvi;	a	readNbt
	m	()Ljava/lang/String;	p	readUtf
	m	(I)Ljava/lang/String;	d	readUtf
	m	(Ljava/lang/String;)Lwg;	a	writeUtf
	m	(Ljava/lang/String;I)Lwg;	a	writeUtf
	m	()Lame;	q	readResourceLocation
	m	(Lame;)Lwg;	a	writeResourceLocation
	m	(Lamd;)Lamd;	a	readResourceKey
	m	(Lamd;)V	b	writeResourceKey
	m	()Lamd;	r	readRegistryKey
	m	()Ljava/util/Date;	s	readDate
	m	(Ljava/util/Date;)Lwg;	a	writeDate
	m	()Ljava/time/Instant;	t	readInstant
	m	(Ljava/time/Instant;)V	a	writeInstant
	m	()Ljava/security/PublicKey;	u	readPublicKey
	m	(Ljava/security/PublicKey;)Lwg;	a	writePublicKey
	m	()Lfio;	v	readBlockHitResult
	m	(Lfio;)V	a	writeBlockHitResult
	m	()Ljava/util/BitSet;	w	readBitSet
	m	(Ljava/util/BitSet;)V	a	writeBitSet
	m	(I)Ljava/util/BitSet;	e	readFixedBitSet
	m	(Ljava/util/BitSet;I)V	a	writeFixedBitSet
	m	(Lio/netty/buffer/ByteBuf;)I	j	readContainerId
	m	()I	x	readContainerId
	m	(Lio/netty/buffer/ByteBuf;I)V	b	writeContainerId
	m	(I)V	f	writeContainerId
	m	()Z	isContiguous	isContiguous
	m	()I	maxFastWritableBytes	maxFastWritableBytes
	m	()I	capacity	capacity
	m	(I)Lwg;	g	capacity
	m	()I	maxCapacity	maxCapacity
	m	()Lio/netty/buffer/ByteBufAllocator;	alloc	alloc
	m	()Ljava/nio/ByteOrder;	order	order
	m	(Ljava/nio/ByteOrder;)Lio/netty/buffer/ByteBuf;	order	order
	m	()Lio/netty/buffer/ByteBuf;	unwrap	unwrap
	m	()Z	isDirect	isDirect
	m	()Z	isReadOnly	isReadOnly
	m	()Lio/netty/buffer/ByteBuf;	asReadOnly	asReadOnly
	m	()I	readerIndex	readerIndex
	m	(I)Lwg;	h	readerIndex
	m	()I	writerIndex	writerIndex
	m	(I)Lwg;	i	writerIndex
	m	(II)Lwg;	a	setIndex
	m	()I	readableBytes	readableBytes
	m	()I	writableBytes	writableBytes
	m	()I	maxWritableBytes	maxWritableBytes
	m	()Z	isReadable	isReadable
	m	(I)Z	isReadable	isReadable
	m	()Z	isWritable	isWritable
	m	(I)Z	isWritable	isWritable
	m	()Lwg;	y	clear
	m	()Lwg;	z	markReaderIndex
	m	()Lwg;	A	resetReaderIndex
	m	()Lwg;	B	markWriterIndex
	m	()Lwg;	C	resetWriterIndex
	m	()Lwg;	D	discardReadBytes
	m	()Lwg;	E	discardSomeReadBytes
	m	(I)Lwg;	j	ensureWritable
	m	(IZ)I	ensureWritable	ensureWritable
	m	(I)Z	getBoolean	getBoolean
	m	(I)B	getByte	getByte
	m	(I)S	getUnsignedByte	getUnsignedByte
	m	(I)S	getShort	getShort
	m	(I)S	getShortLE	getShortLE
	m	(I)I	getUnsignedShort	getUnsignedShort
	m	(I)I	getUnsignedShortLE	getUnsignedShortLE
	m	(I)I	getMedium	getMedium
	m	(I)I	getMediumLE	getMediumLE
	m	(I)I	getUnsignedMedium	getUnsignedMedium
	m	(I)I	getUnsignedMediumLE	getUnsignedMediumLE
	m	(I)I	getInt	getInt
	m	(I)I	getIntLE	getIntLE
	m	(I)J	getUnsignedInt	getUnsignedInt
	m	(I)J	getUnsignedIntLE	getUnsignedIntLE
	m	(I)J	getLong	getLong
	m	(I)J	getLongLE	getLongLE
	m	(I)C	getChar	getChar
	m	(I)F	getFloat	getFloat
	m	(I)D	getDouble	getDouble
	m	(ILio/netty/buffer/ByteBuf;)Lwg;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lwg;	a	getBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lwg;	a	getBytes
	m	(I[B)Lwg;	a	getBytes
	m	(I[BII)Lwg;	a	getBytes
	m	(ILjava/nio/ByteBuffer;)Lwg;	a	getBytes
	m	(ILjava/io/OutputStream;I)Lwg;	a	getBytes
	m	(ILjava/nio/channels/GatheringByteChannel;I)I	getBytes	getBytes
	m	(ILjava/nio/channels/FileChannel;JI)I	getBytes	getBytes
	m	(IILjava/nio/charset/Charset;)Ljava/lang/CharSequence;	getCharSequence	getCharSequence
	m	(IZ)Lwg;	a	setBoolean
	m	(II)Lwg;	b	setByte
	m	(II)Lwg;	c	setShort
	m	(II)Lwg;	d	setShortLE
	m	(II)Lwg;	e	setMedium
	m	(II)Lwg;	f	setMediumLE
	m	(II)Lwg;	g	setInt
	m	(II)Lwg;	h	setIntLE
	m	(IJ)Lwg;	a	setLong
	m	(IJ)Lwg;	b	setLongLE
	m	(II)Lwg;	i	setChar
	m	(IF)Lwg;	a	setFloat
	m	(ID)Lwg;	a	setDouble
	m	(ILio/netty/buffer/ByteBuf;)Lwg;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lwg;	b	setBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lwg;	b	setBytes
	m	(I[B)Lwg;	b	setBytes
	m	(I[BII)Lwg;	b	setBytes
	m	(ILjava/nio/ByteBuffer;)Lwg;	b	setBytes
	m	(ILjava/io/InputStream;I)I	setBytes	setBytes
	m	(ILjava/nio/channels/ScatteringByteChannel;I)I	setBytes	setBytes
	m	(ILjava/nio/channels/FileChannel;JI)I	setBytes	setBytes
	m	(II)Lwg;	j	setZero
	m	(ILjava/lang/CharSequence;Ljava/nio/charset/Charset;)I	setCharSequence	setCharSequence
	m	()Z	readBoolean	readBoolean
	m	()B	readByte	readByte
	m	()S	readUnsignedByte	readUnsignedByte
	m	()S	readShort	readShort
	m	()S	readShortLE	readShortLE
	m	()I	readUnsignedShort	readUnsignedShort
	m	()I	readUnsignedShortLE	readUnsignedShortLE
	m	()I	readMedium	readMedium
	m	()I	readMediumLE	readMediumLE
	m	()I	readUnsignedMedium	readUnsignedMedium
	m	()I	readUnsignedMediumLE	readUnsignedMediumLE
	m	()I	readInt	readInt
	m	()I	readIntLE	readIntLE
	m	()J	readUnsignedInt	readUnsignedInt
	m	()J	readUnsignedIntLE	readUnsignedIntLE
	m	()J	readLong	readLong
	m	()J	readLongLE	readLongLE
	m	()C	readChar	readChar
	m	()F	readFloat	readFloat
	m	()D	readDouble	readDouble
	m	(I)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(I)Lio/netty/buffer/ByteBuf;	readSlice	readSlice
	m	(I)Lio/netty/buffer/ByteBuf;	readRetainedSlice	readRetainedSlice
	m	(Lio/netty/buffer/ByteBuf;)Lwg;	k	readBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lwg;	c	readBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lwg;	a	readBytes
	m	([B)Lwg;	b	readBytes
	m	([BII)Lwg;	a	readBytes
	m	(Ljava/nio/ByteBuffer;)Lwg;	a	readBytes
	m	(Ljava/io/OutputStream;I)Lwg;	a	readBytes
	m	(Ljava/nio/channels/GatheringByteChannel;I)I	readBytes	readBytes
	m	(ILjava/nio/charset/Charset;)Ljava/lang/CharSequence;	readCharSequence	readCharSequence
	m	(Ljava/nio/channels/FileChannel;JI)I	readBytes	readBytes
	m	(I)Lwg;	k	skipBytes
	m	(Z)Lwg;	a	writeBoolean
	m	(I)Lwg;	l	writeByte
	m	(I)Lwg;	m	writeShort
	m	(I)Lwg;	n	writeShortLE
	m	(I)Lwg;	o	writeMedium
	m	(I)Lwg;	p	writeMediumLE
	m	(I)Lwg;	q	writeInt
	m	(I)Lwg;	r	writeIntLE
	m	(J)Lwg;	b	writeLong
	m	(J)Lwg;	c	writeLongLE
	m	(I)Lwg;	s	writeChar
	m	(F)Lwg;	a	writeFloat
	m	(D)Lwg;	a	writeDouble
	m	(Lio/netty/buffer/ByteBuf;)Lwg;	l	writeBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lwg;	d	writeBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lwg;	b	writeBytes
	m	([B)Lwg;	c	writeBytes
	m	([BII)Lwg;	b	writeBytes
	m	(Ljava/nio/ByteBuffer;)Lwg;	b	writeBytes
	m	(Ljava/io/InputStream;I)I	writeBytes	writeBytes
	m	(Ljava/nio/channels/ScatteringByteChannel;I)I	writeBytes	writeBytes
	m	(Ljava/nio/channels/FileChannel;JI)I	writeBytes	writeBytes
	m	(I)Lwg;	t	writeZero
	m	(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I	writeCharSequence	writeCharSequence
	m	(IIB)I	indexOf	indexOf
	m	(B)I	bytesBefore	bytesBefore
	m	(IB)I	bytesBefore	bytesBefore
	m	(IIB)I	bytesBefore	bytesBefore
	m	(Lio/netty/util/ByteProcessor;)I	forEachByte	forEachByte
	m	(IILio/netty/util/ByteProcessor;)I	forEachByte	forEachByte
	m	(Lio/netty/util/ByteProcessor;)I	forEachByteDesc	forEachByteDesc
	m	(IILio/netty/util/ByteProcessor;)I	forEachByteDesc	forEachByteDesc
	m	()Lio/netty/buffer/ByteBuf;	copy	copy
	m	(II)Lio/netty/buffer/ByteBuf;	copy	copy
	m	()Lio/netty/buffer/ByteBuf;	slice	slice
	m	()Lio/netty/buffer/ByteBuf;	retainedSlice	retainedSlice
	m	(II)Lio/netty/buffer/ByteBuf;	slice	slice
	m	(II)Lio/netty/buffer/ByteBuf;	retainedSlice	retainedSlice
	m	()Lio/netty/buffer/ByteBuf;	duplicate	duplicate
	m	()Lio/netty/buffer/ByteBuf;	retainedDuplicate	retainedDuplicate
	m	()I	nioBufferCount	nioBufferCount
	m	()Ljava/nio/ByteBuffer;	nioBuffer	nioBuffer
	m	(II)Ljava/nio/ByteBuffer;	nioBuffer	nioBuffer
	m	(II)Ljava/nio/ByteBuffer;	internalNioBuffer	internalNioBuffer
	m	()[Ljava/nio/ByteBuffer;	nioBuffers	nioBuffers
	m	(II)[Ljava/nio/ByteBuffer;	nioBuffers	nioBuffers
	m	()Z	hasArray	hasArray
	m	()[B	array	array
	m	()I	arrayOffset	arrayOffset
	m	()Z	hasMemoryAddress	hasMemoryAddress
	m	()J	memoryAddress	memoryAddress
	m	(Ljava/nio/charset/Charset;)Ljava/lang/String;	toString	toString
	m	(IILjava/nio/charset/Charset;)Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Lio/netty/buffer/ByteBuf;)I	compareTo	compareTo
	m	()Ljava/lang/String;	toString	toString
	m	(I)Lwg;	u	retain
	m	()Lwg;	F	retain
	m	()Lwg;	G	touch
	m	(Ljava/lang/Object;)Lwg;	a	touch
	m	()I	refCnt	refCnt
	m	()Z	release	release
	m	(I)Z	release	release
	m	(Ljava/lang/Object;)Lio/netty/buffer/ByteBuf;	touch	touch
	m	()Lio/netty/buffer/ByteBuf;	touch	touch
	m	()Lio/netty/buffer/ByteBuf;	retain	retain
	m	(I)Lio/netty/buffer/ByteBuf;	retain	retain
	m	(I)Lio/netty/buffer/ByteBuf;	writeZero	writeZero
	m	(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	([BII)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	([B)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	writeBytes	writeBytes
	m	(D)Lio/netty/buffer/ByteBuf;	writeDouble	writeDouble
	m	(F)Lio/netty/buffer/ByteBuf;	writeFloat	writeFloat
	m	(I)Lio/netty/buffer/ByteBuf;	writeChar	writeChar
	m	(J)Lio/netty/buffer/ByteBuf;	writeLongLE	writeLongLE
	m	(J)Lio/netty/buffer/ByteBuf;	writeLong	writeLong
	m	(I)Lio/netty/buffer/ByteBuf;	writeIntLE	writeIntLE
	m	(I)Lio/netty/buffer/ByteBuf;	writeInt	writeInt
	m	(I)Lio/netty/buffer/ByteBuf;	writeMediumLE	writeMediumLE
	m	(I)Lio/netty/buffer/ByteBuf;	writeMedium	writeMedium
	m	(I)Lio/netty/buffer/ByteBuf;	writeShortLE	writeShortLE
	m	(I)Lio/netty/buffer/ByteBuf;	writeShort	writeShort
	m	(I)Lio/netty/buffer/ByteBuf;	writeByte	writeByte
	m	(Z)Lio/netty/buffer/ByteBuf;	writeBoolean	writeBoolean
	m	(I)Lio/netty/buffer/ByteBuf;	skipBytes	skipBytes
	m	(Ljava/io/OutputStream;I)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(Ljava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	([BII)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	([B)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(Lio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	readBytes	readBytes
	m	(II)Lio/netty/buffer/ByteBuf;	setZero	setZero
	m	(ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(I[BII)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(I[B)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	setBytes	setBytes
	m	(ID)Lio/netty/buffer/ByteBuf;	setDouble	setDouble
	m	(IF)Lio/netty/buffer/ByteBuf;	setFloat	setFloat
	m	(II)Lio/netty/buffer/ByteBuf;	setChar	setChar
	m	(IJ)Lio/netty/buffer/ByteBuf;	setLongLE	setLongLE
	m	(IJ)Lio/netty/buffer/ByteBuf;	setLong	setLong
	m	(II)Lio/netty/buffer/ByteBuf;	setIntLE	setIntLE
	m	(II)Lio/netty/buffer/ByteBuf;	setInt	setInt
	m	(II)Lio/netty/buffer/ByteBuf;	setMediumLE	setMediumLE
	m	(II)Lio/netty/buffer/ByteBuf;	setMedium	setMedium
	m	(II)Lio/netty/buffer/ByteBuf;	setShortLE	setShortLE
	m	(II)Lio/netty/buffer/ByteBuf;	setShort	setShort
	m	(II)Lio/netty/buffer/ByteBuf;	setByte	setByte
	m	(IZ)Lio/netty/buffer/ByteBuf;	setBoolean	setBoolean
	m	(ILjava/io/OutputStream;I)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(ILjava/nio/ByteBuffer;)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(I[BII)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(I[B)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(ILio/netty/buffer/ByteBuf;II)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(ILio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(ILio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	getBytes	getBytes
	m	(I)Lio/netty/buffer/ByteBuf;	ensureWritable	ensureWritable
	m	()Lio/netty/buffer/ByteBuf;	discardSomeReadBytes	discardSomeReadBytes
	m	()Lio/netty/buffer/ByteBuf;	discardReadBytes	discardReadBytes
	m	()Lio/netty/buffer/ByteBuf;	resetWriterIndex	resetWriterIndex
	m	()Lio/netty/buffer/ByteBuf;	markWriterIndex	markWriterIndex
	m	()Lio/netty/buffer/ByteBuf;	resetReaderIndex	resetReaderIndex
	m	()Lio/netty/buffer/ByteBuf;	markReaderIndex	markReaderIndex
	m	()Lio/netty/buffer/ByteBuf;	clear	clear
	m	(II)Lio/netty/buffer/ByteBuf;	setIndex	setIndex
	m	(I)Lio/netty/buffer/ByteBuf;	writerIndex	writerIndex
	m	(I)Lio/netty/buffer/ByteBuf;	readerIndex	readerIndex
	m	(I)Lio/netty/buffer/ByteBuf;	capacity	capacity
	m	(Ljava/lang/Object;)Lio/netty/util/ReferenceCounted;	touch	touch
	m	()Lio/netty/util/ReferenceCounted;	touch	touch
	m	(I)Lio/netty/util/ReferenceCounted;	retain	retain
	m	()Lio/netty/util/ReferenceCounted;	retain	retain
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(Lzo;Ljava/lang/Object;)V	a	lambda$writeEither$7
	m	(Lzo;Ljava/lang/Object;)V	b	lambda$writeEither$6
	m	(Lzo;Lzo;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$writeMap$5
	m	(ILjava/util/function/IntFunction;I)Ljava/lang/Object;	a	lambda$limitValue$4
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$writeJsonWithCodec$3
	m	(Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	b	lambda$readLenientJsonWithCodec$2
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	b	lambda$writeWithCodec$1
	m	(Lvi;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$readWithCodec$0
	m	()V	<clinit>	<clinit>
c	wh	net/minecraft/network/HandlerNames
	f	Ljava/lang/String;	a	DECOMPRESS
	f	Ljava/lang/String;	b	COMPRESS
	f	Ljava/lang/String;	c	DECODER
	f	Ljava/lang/String;	d	ENCODER
	f	Ljava/lang/String;	e	INBOUND_CONFIG
	f	Ljava/lang/String;	f	OUTBOUND_CONFIG
	f	Ljava/lang/String;	g	SPLITTER
	f	Ljava/lang/String;	h	PREPENDER
	f	Ljava/lang/String;	i	DECRYPT
	f	Ljava/lang/String;	j	ENCRYPT
	f	Ljava/lang/String;	k	UNBUNDLER
	f	Ljava/lang/String;	l	BUNDLER
	f	Ljava/lang/String;	m	PACKET_HANDLER
	f	Ljava/lang/String;	n	TIMEOUT
	f	Ljava/lang/String;	o	LEGACY_QUERY
	f	Ljava/lang/String;	p	LATENCY
	m	()V	<init>	<init>
c	wi	net/minecraft/network/HashedPatchMap
	f	Ljava/util/Map;	b	addedComponents
	f	Ljava/util/Set;	c	removedComponents
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/Map;Ljava/util/Set;)V	<init>	<init>
	m	(Lko;Lwi$a;)Lwi;	a	create
	m	(Lko;Lwi$a;)Z	b	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	addedComponents
	m	()Ljava/util/Set;	b	removedComponents
	m	(Ljava/util/Map;Lwi$a;Lks;)V	a	lambda$create$0
	m	()V	<clinit>	<clinit>
c	wi$a	net/minecraft/network/HashedPatchMap$HashGenerator
c	wj	net/minecraft/network/HashedStack
	f	Lwj;	a	EMPTY
	f	Lzm;	b	STREAM_CODEC
	m	(Ldcv;Lwi$a;)Z	a	matches
	m	(Ldcv;Lwi$a;)Lwj;	b	create
	m	(Lwj;)Ljava/util/Optional;	a	lambda$static$1
	m	(Ljava/util/Optional;)Lwj;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	wj$1	net/minecraft/network/HashedStack$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Ldcv;Lwi$a;)Z	a	matches
c	wj$a	net/minecraft/network/HashedStack$ActualItem
	f	Ljl;	d	item
	f	I	e	count
	f	Lwi;	f	components
	f	Lzm;	c	STREAM_CODEC
	m	(Ljl;ILwi;)V	<init>	<init>
	m	(Ldcv;Lwi$a;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	item
	m	()I	b	count
	m	()Lwi;	c	components
	m	()V	<clinit>	<clinit>
c	wk	net/minecraft/network/HiddenByteBuf
	f	Lio/netty/buffer/ByteBuf;	a	contents
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	pack
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	unpack
	m	()I	refCnt	refCnt
	m	()Lwk;	a	retain
	m	(I)Lwk;	a	retain
	m	()Lwk;	b	touch
	m	(Ljava/lang/Object;)Lwk;	c	touch
	m	()Z	release	release
	m	(I)Z	release	release
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lio/netty/buffer/ByteBuf;	c	contents
	m	(Ljava/lang/Object;)Lio/netty/util/ReferenceCounted;	touch	touch
	m	()Lio/netty/util/ReferenceCounted;	touch	touch
	m	(I)Lio/netty/util/ReferenceCounted;	retain	retain
	m	()Lio/netty/util/ReferenceCounted;	retain	retain
c	wl	net/minecraft/network/LocalFrameDecoder
	m	()V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead	channelRead
c	wm	net/minecraft/network/LocalFrameEncoder
	m	()V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V	write	write
c	wn	net/minecraft/network/MonitoredLocalFrameDecoder
	f	Lvw;	a	monitor
	m	(Lvw;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead	channelRead
c	wo	net/minecraft/network/PacketBundlePacker
	f	Lzu;	a	bundlerInfo
	f	Lzu$a;	b	currentBundler
	m	(Lzu;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;Ljava/util/List;)V	a	decode
	m	(Lzw;)V	a	verifyNonTerminalPacket
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V	decode	decode
c	wp	net/minecraft/network/PacketBundleUnpacker
	f	Lzu;	a	bundlerInfo
	m	(Lzu;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;Ljava/util/List;)V	a	encode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Ljava/util/List;)V	encode	encode
c	wq	net/minecraft/network/PacketDecoder
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lwu;	b	protocolInfo
	m	(Lwu;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	decode	decode
	m	()V	<clinit>	<clinit>
c	wr	net/minecraft/network/PacketEncoder
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lwu;	b	protocolInfo
	m	(Lwu;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V	encode	encode
	m	()V	<clinit>	<clinit>
c	ws	net/minecraft/network/PacketListener
	m	()Lzx;	O_	flow
	m	()Lwe;	b	protocol
	m	(Lwf;)V	a	onDisconnect
	m	(Lzw;Ljava/lang/Exception;)V	a	onPacketError
	m	(Lxo;Ljava/lang/Throwable;)Lwf;	a	createDisconnectionInfo
	m	()Z	c	isAcceptingMessages
	m	(Lzw;)Z	a	shouldHandleMessage
	m	(Lp;)V	a	fillCrashReport
	m	(Lp;Lq;)V	a	fillListenerSpecificCrashDetails
	m	()Ljava/lang/String;	d	lambda$fillCrashReport$1
	m	()Ljava/lang/String;	e	lambda$fillCrashReport$0
c	wt	net/minecraft/network/PacketSendListener
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Ljava/lang/Runnable;)Lio/netty/channel/ChannelFutureListener;	a	thenRun
	m	(Ljava/util/function/Supplier;)Lio/netty/channel/ChannelFutureListener;	a	exceptionallySend
	m	(Ljava/util/function/Supplier;Lio/netty/channel/ChannelFuture;)V	a	lambda$exceptionallySend$1
	m	(Ljava/lang/Runnable;Lio/netty/channel/ChannelFuture;)V	a	lambda$thenRun$0
	m	()V	<clinit>	<clinit>
c	wu	net/minecraft/network/ProtocolInfo
	m	()Lwe;	a	id
	m	()Lzx;	b	flow
	m	()Lzm;	c	codec
	m	()Lzu;	d	bundlerInfo
c	wu$a	net/minecraft/network/ProtocolInfo$Details
	m	()Lwe;	a	id
	m	()Lzx;	b	flow
	m	(Lwu$a$a;)V	a	listPackets
c	wu$a$a	net/minecraft/network/ProtocolInfo$Details$PacketVisitor
	m	(Lzy;I)V	accept	accept
c	wu$b	net/minecraft/network/ProtocolInfo$DetailsProvider
	m	()Lwu$a;	a	details
c	wv	net/minecraft/network/ProtocolSwapHandler
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;)V	a	handleInboundTerminalPacket
	m	(Lio/netty/channel/ChannelHandlerContext;Lzw;)V	b	handleOutboundTerminalPacket
c	ww	net/minecraft/network/RateKickingConnection
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Lxo;	i	EXCEED_REASON
	f	I	j	rateLimitPacketsPerSecond
	m	(I)V	<init>	<init>
	m	()V	c	tickSecond
	m	()V	q	lambda$tickSecond$0
	m	()V	<clinit>	<clinit>
c	wx	net/minecraft/network/RegistryFriendlyByteBuf
	f	Ljz;	d	registryAccess
	m	(Lio/netty/buffer/ByteBuf;Ljz;)V	<init>	<init>
	m	()Ljz;	H	registryAccess
	m	(Ljz;)Ljava/util/function/Function;	a	decorator
	m	(Ljz;Lio/netty/buffer/ByteBuf;)Lwx;	a	lambda$decorator$0
c	wy	net/minecraft/network/ServerboundPacketListener
	m	()Lzx;	O_	flow
c	wz	net/minecraft/network/SkipPacketDecoderException
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Throwable;)V	<init>	<init>
c	xa	net/minecraft/network/SkipPacketEncoderException
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Throwable;)V	<init>	<init>
c	xb	net/minecraft/network/SkipPacketException
c	xc	net/minecraft/network/TickablePacketListener
	m	()V	d	tick
c	xd	net/minecraft/network/UnconfiguredPipelineHandler
	m	()V	<init>	<init>
	m	(Lwu;)Lxd$b;	a	setupInboundProtocol
	m	(Lio/netty/channel/ChannelInboundHandler;)Lxd$b;	a	setupInboundHandler
	m	(Lwu;)Lxd$d;	b	setupOutboundProtocol
	m	(Lio/netty/channel/ChannelOutboundHandler;)Lxd$d;	a	setupOutboundHandler
	m	(Lio/netty/channel/ChannelOutboundHandler;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupOutboundHandler$1
	m	(Lio/netty/channel/ChannelInboundHandler;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$setupInboundHandler$0
c	xd$a	net/minecraft/network/UnconfiguredPipelineHandler$Inbound
	m	()V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead	channelRead
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V	write	write
c	xd$b	net/minecraft/network/UnconfiguredPipelineHandler$InboundConfigurationTask
	m	(Lio/netty/channel/ChannelHandlerContext;)V	run	run
	m	(Lxd$b;)Lxd$b;	andThen	andThen
	m	(Lxd$b;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$andThen$0
c	xd$c	net/minecraft/network/UnconfiguredPipelineHandler$Outbound
	m	()V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/channel/ChannelPromise;)V	write	write
c	xd$d	net/minecraft/network/UnconfiguredPipelineHandler$OutboundConfigurationTask
	m	(Lio/netty/channel/ChannelHandlerContext;)V	run	run
	m	(Lxd$d;)Lxd$d;	andThen	andThen
	m	(Lxd$d;Lio/netty/channel/ChannelHandlerContext;)V	a	lambda$andThen$0
c	xe	net/minecraft/network/Utf8String
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;I)Ljava/lang/String;	a	read
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/CharSequence;I)V	a	write
c	xf	net/minecraft/network/VarInt
	f	I	a	MAX_VARINT_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
	m	()V	<init>	<init>
	m	(I)I	a	getByteSize
	m	(B)Z	a	hasContinuationBit
	m	(Lio/netty/buffer/ByteBuf;)I	a	read
	m	(Lio/netty/buffer/ByteBuf;I)Lio/netty/buffer/ByteBuf;	a	write
c	xg	net/minecraft/network/VarLong
	f	I	a	MAX_VARLONG_SIZE
	f	I	b	DATA_BITS_MASK
	f	I	c	CONTINUATION_BIT_MASK
	f	I	d	DATA_BITS_PER_BYTE
	m	()V	<init>	<init>
	m	(J)I	a	getByteSize
	m	(B)Z	a	hasContinuationBit
	m	(Lio/netty/buffer/ByteBuf;)J	a	read
	m	(Lio/netty/buffer/ByteBuf;J)Lio/netty/buffer/ByteBuf;	a	write
c	xh	net/minecraft/network/Varint21FrameDecoder
	f	I	a	MAX_VARINT21_BYTES
	f	Lio/netty/buffer/ByteBuf;	b	helperBuf
	f	Lvw;	c	monitor
	m	(Lvw;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;)V	handlerRemoved0	handlerRemoved0
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Z	a	copyVarint
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V	decode	decode
c	xi	net/minecraft/network/Varint21LengthFieldPrepender
	f	I	a	MAX_VARINT21_BYTES
	m	()V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V	a	encode
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;Lio/netty/buffer/ByteBuf;)V	encode	encode
c	xj	net/minecraft/network/chat/ChatDecorator
	f	Lxj;	a	PLAIN
	m	(Lauc;Lxo;)Lxo;	decorate	decorate
	m	(Lauc;Lxo;)Lxo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xk	net/minecraft/network/chat/ChatType
	f	Lxl;	l	chat
	f	Lxl;	m	narration
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lxl;	d	DEFAULT_CHAT_DECORATION
	f	Lamd;	e	CHAT
	f	Lamd;	f	SAY_COMMAND
	f	Lamd;	g	MSG_COMMAND_INCOMING
	f	Lamd;	h	MSG_COMMAND_OUTGOING
	f	Lamd;	i	TEAM_MSG_COMMAND_INCOMING
	f	Lamd;	j	TEAM_MSG_COMMAND_OUTGOING
	f	Lamd;	k	EMOTE_COMMAND
	m	(Lxl;Lxl;)V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;)V	a	bootstrap
	m	(Lamd;Lbzm;)Lxk$a;	a	bind
	m	(Lamd;Lek;)Lxk$a;	a	bind
	m	(Lamd;Ljz;Lxo;)Lxk$a;	a	bind
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxl;	a	chat
	m	()Lxl;	b	narration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xk$a	net/minecraft/network/chat/ChatType$Bound
	f	Ljl;	b	chatType
	f	Lxo;	c	name
	f	Ljava/util/Optional;	d	targetName
	f	Lzm;	a	STREAM_CODEC
	m	(Ljl;Lxo;)V	<init>	<init>
	m	(Ljl;Lxo;Ljava/util/Optional;)V	<init>	<init>
	m	(Lxo;)Lxo;	a	decorate
	m	(Lxo;)Lxo;	b	decorateNarration
	m	(Lxo;)Lxk$a;	c	withTargetName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	chatType
	m	()Lxo;	b	name
	m	()Ljava/util/Optional;	c	targetName
	m	()V	<clinit>	<clinit>
c	xl	net/minecraft/network/chat/ChatTypeDecoration
	f	Ljava/lang/String;	c	translationKey
	f	Ljava/util/List;	d	parameters
	f	Lyl;	e	style
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/lang/String;Ljava/util/List;Lyl;)V	<init>	<init>
	m	(Ljava/lang/String;)Lxl;	a	withSender
	m	(Ljava/lang/String;)Lxl;	b	incomingDirectMessage
	m	(Ljava/lang/String;)Lxl;	c	outgoingDirectMessage
	m	(Ljava/lang/String;)Lxl;	d	teamMessage
	m	(Lxo;Lxk$a;)Lxo;	a	decorate
	m	(Lxo;Lxk$a;)[Lxo;	b	resolveParameters
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	translationKey
	m	()Ljava/util/List;	b	parameters
	m	()Lyl;	c	style
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xl$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter
	f	Lxl$a;	a	SENDER
	f	Lxl$a;	b	TARGET
	f	Lxl$a;	c	CONTENT
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	Lxl$a$a;	i	selector
	f	[Lxl$a;	j	$VALUES
	m	()[Lxl$a;	values	values
	m	(Ljava/lang/String;)Lxl$a;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Lxl$a$a;)V	<init>	<init>
	m	(Lxo;Lxk$a;)Lxo;	a	select
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lxl$a;)I	a	lambda$static$4
	m	(Lxl$a;)I	b	lambda$static$3
	m	(Lxo;Lxk$a;)Lxo;	b	lambda$static$2
	m	(Lxo;Lxk$a;)Lxo;	c	lambda$static$1
	m	(Lxo;Lxk$a;)Lxo;	d	lambda$static$0
	m	()[Lxl$a;	a	$values
	m	()V	<clinit>	<clinit>
c	xl$a$a	net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector
	m	(Lxo;Lxk$a;)Lxo;	select	select
c	xm	net/minecraft/network/chat/ClickEvent
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()Lxm$a;	a	action
	m	(Lxm$a;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$a	net/minecraft/network/chat/ClickEvent$Action
	f	Lxm$a;	a	OPEN_URL
	f	Lxm$a;	b	OPEN_FILE
	f	Lxm$a;	c	RUN_COMMAND
	f	Lxm$a;	d	SUGGEST_COMMAND
	f	Lxm$a;	e	SHOW_DIALOG
	f	Lxm$a;	f	CHANGE_PAGE
	f	Lxm$a;	g	COPY_TO_CLIPBOARD
	f	Lxm$a;	h	CUSTOM
	f	Lcom/mojang/serialization/Codec;	i	UNSAFE_CODEC
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Z	k	allowFromServer
	f	Ljava/lang/String;	l	name
	f	Lcom/mojang/serialization/MapCodec;	m	codec
	f	[Lxm$a;	n	$VALUES
	m	()[Lxm$a;	values	values
	m	(Ljava/lang/String;)Lxm$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ZLcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Z	a	isAllowedFromServer
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcom/mojang/serialization/MapCodec;	b	valueCodec
	m	(Lxm$a;)Lcom/mojang/serialization/DataResult;	a	filterForSerialization
	m	(Lxm$a;)Ljava/lang/String;	b	lambda$filterForSerialization$0
	m	()[Lxm$a;	d	$values
	m	()V	<clinit>	<clinit>
c	xm$b	net/minecraft/network/chat/ClickEvent$ChangePage
	f	I	c	page
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(I)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	page
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$c	net/minecraft/network/chat/ClickEvent$CopyToClipboard
	f	Ljava/lang/String;	c	value
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$d	net/minecraft/network/chat/ClickEvent$Custom
	f	Lame;	c	id
	f	Ljava/util/Optional;	d	payload
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lame;Ljava/util/Optional;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	()Ljava/util/Optional;	c	payload
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$e	net/minecraft/network/chat/ClickEvent$OpenFile
	f	Ljava/lang/String;	c	path
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/io/File;	b	file
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	c	path
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$f	net/minecraft/network/chat/ClickEvent$OpenUrl
	f	Ljava/net/URI;	c	uri
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/net/URI;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/net/URI;	b	uri
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$g	net/minecraft/network/chat/ClickEvent$RunCommand
	f	Ljava/lang/String;	c	command
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	command
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$h	net/minecraft/network/chat/ClickEvent$ShowDialog
	f	Ljl;	c	dialog
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljl;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	dialog
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xm$i	net/minecraft/network/chat/ClickEvent$SuggestCommand
	f	Ljava/lang/String;	c	command
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Lxm$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	command
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xn	net/minecraft/network/chat/CommonComponents
	f	Lxo;	a	EMPTY
	f	Lxo;	b	OPTION_ON
	f	Lxo;	c	OPTION_OFF
	f	Lxo;	d	GUI_DONE
	f	Lxo;	e	GUI_CANCEL
	f	Lxo;	f	GUI_YES
	f	Lxo;	g	GUI_NO
	f	Lxo;	h	GUI_OK
	f	Lxo;	i	GUI_PROCEED
	f	Lxo;	j	GUI_CONTINUE
	f	Lxo;	k	GUI_BACK
	f	Lxo;	l	GUI_TO_TITLE
	f	Lxo;	m	GUI_ACKNOWLEDGE
	f	Lxo;	n	GUI_OPEN_IN_BROWSER
	f	Lxo;	o	GUI_COPY_LINK_TO_CLIPBOARD
	f	Lxo;	p	GUI_DISCONNECT
	f	Lxo;	q	GUI_RETURN_TO_MENU
	f	Lxo;	r	TRANSFER_CONNECT_FAILED
	f	Lxo;	s	CONNECT_FAILED
	f	Lxo;	t	NEW_LINE
	f	Lxo;	u	NARRATION_SEPARATOR
	f	Lxo;	v	ELLIPSIS
	f	Lxo;	w	SPACE
	m	()V	<init>	<init>
	m	()Lyc;	a	space
	m	(J)Lyc;	a	days
	m	(J)Lyc;	b	hours
	m	(J)Lyc;	c	minutes
	m	(Z)Lxo;	a	optionStatus
	m	(Z)Lxo;	b	disconnectButtonLabel
	m	(Lxo;Z)Lyc;	a	optionStatus
	m	(Lxo;Lxo;)Lyc;	a	optionNameValue
	m	([Lxo;)Lyc;	a	joinForNarration
	m	([Lxo;)Lxo;	b	joinLines
	m	(Ljava/util/Collection;)Lxo;	a	joinLines
	m	()V	<clinit>	<clinit>
c	xo	net/minecraft/network/chat/Component
	m	()Lyl;	a	getStyle
	m	()Lxp;	b	getContents
	m	()Ljava/lang/String;	getString	getString
	m	(I)Ljava/lang/String;	a	getString
	m	()Ljava/util/List;	c	getSiblings
	m	()Ljava/lang/String;	d	tryCollapseToString
	m	()Lyc;	e	plainCopy
	m	()Lyc;	f	copy
	m	()Lbbm;	g	getVisualOrderText
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	()Ljava/util/List;	h	toFlatList
	m	(Lyl;)Ljava/util/List;	a	toFlatList
	m	(Lxo;)Z	a	contains
	m	(Ljava/lang/String;)Lxo;	a	nullToEmpty
	m	(Ljava/lang/String;)Lyc;	b	literal
	m	(Ljava/lang/String;)Lyc;	c	translatable
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lyc;	a	translatable
	m	(Ljava/lang/String;[Ljava/lang/Object;)Lyc;	b	translatableEscape
	m	(Ljava/lang/String;Ljava/lang/String;)Lyc;	a	translatableWithFallback
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lyc;	a	translatableWithFallback
	m	()Lyc;	i	empty
	m	(Ljava/lang/String;)Lyc;	d	keybind
	m	(Ljava/lang/String;ZLjava/util/Optional;Lyq;)Lyc;	a	nbt
	m	(Lhf;Ljava/lang/String;)Lyc;	a	score
	m	(Ljava/lang/String;Ljava/lang/String;)Lyc;	b	score
	m	(Lhf;Ljava/util/Optional;)Lyc;	a	selector
	m	(Ljava/util/Date;)Lxo;	a	translationArg
	m	(Lcom/mojang/brigadier/Message;)Lxo;	a	translationArg
	m	(Ljava/util/UUID;)Lxo;	a	translationArg
	m	(Lame;)Lxo;	a	translationArg
	m	(Ldlz;)Lxo;	a	translationArg
	m	(Ljava/net/URI;)Lxo;	a	translationArg
	m	(Ljava/util/List;Lyl;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$toFlatList$1
	m	(ILjava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
c	xp	net/minecraft/network/chat/ComponentContents
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lek;Lbzm;I)Lyc;	a	resolve
	m	()Lxp$a;	a	type
c	xp$a	net/minecraft/network/chat/ComponentContents$Type
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/lang/String;	b	id
	m	(Lcom/mojang/serialization/MapCodec;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	b	id
c	xq	net/minecraft/network/chat/ComponentSerialization
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lzm;	c	OPTIONAL_STREAM_CODEC
	f	Lzm;	d	TRUSTED_STREAM_CODEC
	f	Lzm;	e	TRUSTED_OPTIONAL_STREAM_CODEC
	f	Lzm;	f	TRUSTED_CONTEXT_FREE_STREAM_CODEC
	m	()V	<init>	<init>
	m	(I)Lcom/mojang/serialization/Codec;	a	flatRestrictedCodec
	m	(Ljava/util/List;)Lyc;	a	createFromList
	m	([Lbda;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	createLegacyComponentMatcher
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	createCodec
	m	(Lxo;)Lcom/mojang/datafixers/util/Either;	a	lambda$createCodec$6
	m	(Lcom/mojang/datafixers/util/Either;)Lxo;	a	lambda$createCodec$5
	m	(Lxo;)Lxo;	b	lambda$createCodec$4
	m	(Lcom/mojang/datafixers/util/Either;)Lxo;	b	lambda$createCodec$3
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$2
	m	([Lbda;)[Lbda;	a	lambda$createLegacyComponentMatcher$1
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/MapEncoder;	a	lambda$createLegacyComponentMatcher$0
	m	()V	<clinit>	<clinit>
c	xq$1	net/minecraft/network/chat/ComponentSerialization$1
	f	I	a	val$maxFlatSize
	m	(I)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lxo;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Lxo;)Z	a	isTooLarge
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DynamicOps;	a	asJsonOps
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;ILcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(I)Ljava/lang/String;	a	lambda$decode$0
c	xq$a	net/minecraft/network/chat/ComponentSerialization$FuzzyCodec
	f	Ljava/util/List;	a	codecs
	f	Ljava/util/function/Function;	b	encoderGetter
	m	(Ljava/util/List;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapCodec;)Ljava/util/stream/Stream;	a	lambda$keys$1
	m	()Ljava/lang/String;	a	lambda$decode$0
c	xq$b	net/minecraft/network/chat/ComponentSerialization$StrictEither
	f	Ljava/lang/String;	a	typeFieldName
	f	Lcom/mojang/serialization/MapCodec;	b	typed
	f	Lcom/mojang/serialization/MapCodec;	c	fuzzy
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
c	xr	net/minecraft/network/chat/ComponentUtils
	f	Ljava/lang/String;	a	DEFAULT_SEPARATOR_TEXT
	f	Lxo;	b	DEFAULT_SEPARATOR
	f	Lxo;	c	DEFAULT_NO_STYLE_SEPARATOR
	m	()V	<init>	<init>
	m	(Lyc;Lyl;)Lyc;	a	mergeStyles
	m	(Lek;Ljava/util/Optional;Lbzm;I)Ljava/util/Optional;	a	updateForEntity
	m	(Lek;Lxo;Lbzm;I)Lyc;	a	updateForEntity
	m	(Lek;Lyl;Lbzm;I)Lyl;	a	resolveStyle
	m	(Ljava/util/Collection;)Lxo;	a	formatList
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lxo;	a	formatAndSortList
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lxo;	b	formatList
	m	(Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lyc;	a	formatList
	m	(Ljava/util/Collection;Lxo;)Lxo;	a	formatList
	m	(Ljava/util/Collection;Lxo;Ljava/util/function/Function;)Lyc;	a	formatList
	m	(Lxo;)Lyc;	a	wrapInSquareBrackets
	m	(Lcom/mojang/brigadier/Message;)Lxo;	a	fromMessage
	m	(Lxo;)Z	b	isTranslationResolvable
	m	(Ljava/lang/String;)Lyc;	a	copyOnClickText
	m	(Ljava/lang/String;Lyl;)Lyl;	a	lambda$copyOnClickText$1
	m	(Ljava/lang/String;)Lxo;	b	lambda$formatList$0
	m	()V	<clinit>	<clinit>
c	xs	net/minecraft/network/chat/FilterMask
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lxs;	b	FULLY_FILTERED
	f	Lxs;	c	PASS_THROUGH
	f	Lyl;	d	FILTERED_STYLE
	f	Lcom/mojang/serialization/MapCodec;	e	PASS_THROUGH_CODEC
	f	Lcom/mojang/serialization/MapCodec;	f	FULLY_FILTERED_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	PARTIALLY_FILTERED_CODEC
	f	C	h	HASH
	f	Ljava/util/BitSet;	i	mask
	f	Lxs$a;	j	type
	m	(Ljava/util/BitSet;Lxs$a;)V	<init>	<init>
	m	(Ljava/util/BitSet;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	()Lxs$a;	c	type
	m	()Ljava/util/BitSet;	d	mask
	m	(Lwg;)Lxs;	a	read
	m	(Lwg;Lxs;)V	a	write
	m	(I)V	a	setFiltered
	m	(Ljava/lang/String;)Ljava/lang/String;	a	apply
	m	(Ljava/lang/String;)Lxo;	b	applyWithFormatting
	m	()Z	a	isEmpty
	m	()Z	b	isFullyFiltered
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	xs$a	net/minecraft/network/chat/FilterMask$Type
	f	Lxs$a;	a	PASS_THROUGH
	f	Lxs$a;	b	FULLY_FILTERED
	f	Lxs$a;	c	PARTIALLY_FILTERED
	f	Ljava/lang/String;	d	serializedName
	f	Ljava/util/function/Supplier;	e	codec
	f	[Lxs$a;	f	$VALUES
	m	()[Lxs$a;	values	values
	m	(Ljava/lang/String;)Lxs$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lcom/mojang/serialization/MapCodec;	b	lambda$static$2
	m	()Lcom/mojang/serialization/MapCodec;	d	lambda$static$1
	m	()Lcom/mojang/serialization/MapCodec;	e	lambda$static$0
	m	()[Lxs$a;	f	$values
	m	()V	<clinit>	<clinit>
c	xt	net/minecraft/network/chat/FormattedText
	f	Ljava/util/Optional;	a	STOP_ITERATION
	f	Lxt;	b	EMPTY
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Ljava/lang/String;)Lxt;	e	of
	m	(Ljava/lang/String;Lyl;)Lxt;	a	of
	m	([Lxt;)Lxt;	a	composite
	m	(Ljava/util/List;)Lxt;	a	composite
	m	()Ljava/lang/String;	getString	getString
	m	(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$getString$0
	m	()V	<clinit>	<clinit>
c	xt$1	net/minecraft/network/chat/FormattedText$1
	m	()V	<init>	<init>
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
c	xt$2	net/minecraft/network/chat/FormattedText$2
	f	Ljava/lang/String;	c	val$text
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
c	xt$3	net/minecraft/network/chat/FormattedText$3
	f	Ljava/lang/String;	c	val$text
	f	Lyl;	d	val$style
	m	(Ljava/lang/String;Lyl;)V	<init>	<init>
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
c	xt$4	net/minecraft/network/chat/FormattedText$4
	f	Ljava/util/List;	c	val$parts
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
c	xt$a	net/minecraft/network/chat/FormattedText$ContentConsumer
	m	(Ljava/lang/String;)Ljava/util/Optional;	accept	accept
c	xt$b	net/minecraft/network/chat/FormattedText$StyledContentConsumer
	m	(Lyl;Ljava/lang/String;)Ljava/util/Optional;	accept	accept
c	xu	net/minecraft/network/chat/HoverEvent
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()Lxu$a;	a	action
	m	(Lxu$a;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xu$a	net/minecraft/network/chat/HoverEvent$Action
	f	Lxu$a;	a	SHOW_TEXT
	f	Lxu$a;	b	SHOW_ITEM
	f	Lxu$a;	c	SHOW_ENTITY
	f	Lcom/mojang/serialization/Codec;	d	UNSAFE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Z	g	allowFromServer
	f	Lcom/mojang/serialization/MapCodec;	h	codec
	f	[Lxu$a;	i	$VALUES
	m	()[Lxu$a;	values	values
	m	(Ljava/lang/String;)Lxu$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ZLcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Z	a	isAllowedFromServer
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ljava/lang/String;	toString	toString
	m	(Lxu$a;)Lcom/mojang/serialization/DataResult;	a	filterForSerialization
	m	(Lxu$a;)Ljava/lang/String;	b	lambda$filterForSerialization$0
	m	()[Lxu$a;	b	$values
	m	()V	<clinit>	<clinit>
c	xu$b	net/minecraft/network/chat/HoverEvent$EntityTooltipInfo
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbzv;	b	type
	f	Ljava/util/UUID;	c	uuid
	f	Ljava/util/Optional;	d	name
	f	Ljava/util/List;	e	linesCache
	m	(Lbzv;Ljava/util/UUID;Lxo;)V	<init>	<init>
	m	(Lbzv;Ljava/util/UUID;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/util/List;	a	getTooltipLines
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lxu$b;)Ljava/util/Optional;	a	lambda$static$2
	m	(Lxu$b;)Ljava/util/UUID;	b	lambda$static$1
	m	(Lxu$b;)Lbzv;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xu$c	net/minecraft/network/chat/HoverEvent$ShowEntity
	f	Lxu$b;	c	entity
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lxu$b;)V	<init>	<init>
	m	()Lxu$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxu$b;	b	entity
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xu$d	net/minecraft/network/chat/HoverEvent$ShowItem
	f	Ldcv;	c	item
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ldcv;)V	<init>	<init>
	m	()Lxu$a;	a	action
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ldcv;	b	item
	m	()V	<clinit>	<clinit>
c	xu$e	net/minecraft/network/chat/HoverEvent$ShowText
	f	Lxo;	c	value
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lxu$a;	a	action
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	xv	net/minecraft/network/chat/LastSeenMessages
	f	Ljava/util/List;	d	entries
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lxv;	b	EMPTY
	f	I	c	LAST_SEEN_MESSAGES_MAX_LENGTH
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lbcp$a;)V	a	updateSignature
	m	(Lyb;)Lxv$a;	a	pack
	m	()B	a	computeChecksum
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	entries
	m	(Lyb;Lya;)Lya$a;	a	lambda$pack$0
	m	()V	<clinit>	<clinit>
c	xv$a	net/minecraft/network/chat/LastSeenMessages$Packed
	f	Ljava/util/List;	b	entries
	f	Lxv$a;	a	EMPTY
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lyb;)Ljava/util/Optional;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	entries
	m	()V	<clinit>	<clinit>
c	xv$b	net/minecraft/network/chat/LastSeenMessages$Update
	f	I	b	offset
	f	Ljava/util/BitSet;	c	acknowledged
	f	B	d	checksum
	f	B	a	IGNORE_CHECKSUM
	m	(Lwg;)V	<init>	<init>
	m	(ILjava/util/BitSet;B)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lxv;)Z	a	verifyChecksum
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	offset
	m	()Ljava/util/BitSet;	b	acknowledged
	m	()B	c	checksum
c	xw	net/minecraft/network/chat/LastSeenMessagesTracker
	f	[Lxy;	a	trackedMessages
	f	I	b	tail
	f	I	c	offset
	f	Lya;	d	lastTrackedMessage
	m	(I)V	<init>	<init>
	m	(Lya;Z)Z	a	addPending
	m	(Lxy;)V	a	addEntry
	m	(Lya;)V	a	ignorePending
	m	()I	a	getAndClearOffset
	m	()Lxw$a;	b	generateAndApplyUpdate
	m	()I	c	offset
c	xw$a	net/minecraft/network/chat/LastSeenMessagesTracker$Update
	f	Lxv;	a	lastSeen
	f	Lxv$b;	b	update
	m	(Lxv;Lxv$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxv;	a	lastSeen
	m	()Lxv$b;	b	update
c	xx	net/minecraft/network/chat/LastSeenMessagesValidator
	f	I	a	lastSeenCount
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	b	trackedMessages
	f	Lya;	c	lastPendingMessage
	m	(I)V	<init>	<init>
	m	(Lya;)V	a	addPending
	m	()I	a	trackedMessagesCount
	m	(I)V	a	applyOffset
	m	(Lxv$b;)Lxv;	a	applyUpdate
c	xx$a	net/minecraft/network/chat/LastSeenMessagesValidator$ValidationException
	m	(Ljava/lang/String;)V	<init>	<init>
c	xy	net/minecraft/network/chat/LastSeenTrackedEntry
	f	Lya;	a	signature
	f	Z	b	pending
	m	(Lya;Z)V	<init>	<init>
	m	()Lxy;	a	acknowledge
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lya;	b	signature
	m	()Z	c	pending
c	xz	net/minecraft/network/chat/LocalChatSession
	f	Ljava/util/UUID;	a	sessionId
	f	Lcuw;	b	keyPair
	m	(Ljava/util/UUID;Lcuw;)V	<init>	<init>
	m	(Lcuw;)Lxz;	a	create
	m	(Ljava/util/UUID;)Lyi$c;	a	createMessageEncoder
	m	()Lyf;	a	asRemote
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	sessionId
	m	()Lcuw;	c	keyPair
c	ya	net/minecraft/network/chat/MessageSignature
	f	[B	c	bytes
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	BYTES
	m	([B)V	<init>	<init>
	m	(Lwg;)Lya;	a	read
	m	(Lwg;Lya;)V	a	write
	m	(Lbcq;Lbcp;)Z	a	verify
	m	()Ljava/nio/ByteBuffer;	a	asByteBuffer
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lya;)Ljava/lang/String;	a	describe
	m	(Lyb;)Lya$a;	a	pack
	m	()I	b	checksum
	m	()[B	c	bytes
	m	()V	<clinit>	<clinit>
c	ya$a	net/minecraft/network/chat/MessageSignature$Packed
	f	I	b	id
	f	Lya;	c	fullSignature
	f	I	a	FULL_SIGNATURE
	m	(Lya;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(ILya;)V	<init>	<init>
	m	(Lwg;)Lya$a;	a	read
	m	(Lwg;Lya$a;)V	a	write
	m	(Lyb;)Ljava/util/Optional;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	id
	m	()Lya;	b	fullSignature
c	yb	net/minecraft/network/chat/MessageSignatureCache
	f	I	a	NOT_FOUND
	f	I	b	DEFAULT_CAPACITY
	f	[Lya;	c	entries
	m	(I)V	<init>	<init>
	m	()Lyb;	a	createDefault
	m	(Lya;)I	a	pack
	m	(I)Lya;	a	unpack
	m	(Lyh;Lya;)V	a	push
	m	(Ljava/util/List;)V	a	push
	m	(Ljava/util/ArrayDeque;)V	a	push
c	yc	net/minecraft/network/chat/MutableComponent
	f	Lxp;	c	contents
	f	Ljava/util/List;	d	siblings
	f	Lyl;	e	style
	f	Lbbm;	f	visualOrderText
	f	Lud;	g	decomposedWith
	m	(Lxp;Ljava/util/List;Lyl;)V	<init>	<init>
	m	(Lxp;)Lyc;	a	create
	m	()Lxp;	b	getContents
	m	()Ljava/util/List;	c	getSiblings
	m	(Lyl;)Lyc;	b	setStyle
	m	()Lyl;	a	getStyle
	m	(Ljava/lang/String;)Lyc;	f	append
	m	(Lxo;)Lyc;	b	append
	m	(Ljava/util/function/UnaryOperator;)Lyc;	a	withStyle
	m	(Lyl;)Lyc;	c	withStyle
	m	([Lo;)Lyc;	a	withStyle
	m	(Lo;)Lyc;	a	withStyle
	m	(I)Lyc;	b	withColor
	m	()Lbbm;	g	getVisualOrderText
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
c	yd	net/minecraft/network/chat/OutgoingChatMessage
	m	()Lxo;	a	content
	m	(Lauc;ZLxk$a;)V	a	sendToPlayer
	m	(Lye;)Lyd;	a	create
c	yd$a	net/minecraft/network/chat/OutgoingChatMessage$Disguised
	f	Lxo;	a	content
	m	(Lxo;)V	<init>	<init>
	m	()Lxo;	a	content
	m	(Lauc;ZLxk$a;)V	a	sendToPlayer
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
c	yd$b	net/minecraft/network/chat/OutgoingChatMessage$Player
	f	Lye;	a	message
	m	(Lye;)V	<init>	<init>
	m	()Lxo;	a	content
	m	(Lauc;ZLxk$a;)V	a	sendToPlayer
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lye;	b	message
c	ye	net/minecraft/network/chat/PlayerChatMessage
	f	Lyj;	d	link
	f	Lya;	e	signature
	f	Lyh;	f	signedBody
	f	Lxo;	g	unsignedContent
	f	Lxs;	h	filterMask
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ljava/util/UUID;	i	SYSTEM_SENDER
	f	Ljava/time/Duration;	b	MESSAGE_EXPIRES_AFTER_SERVER
	f	Ljava/time/Duration;	c	MESSAGE_EXPIRES_AFTER_CLIENT
	m	(Lyj;Lya;Lyh;Lxo;Lxs;)V	<init>	<init>
	m	(Ljava/lang/String;)Lye;	a	system
	m	(Ljava/util/UUID;Ljava/lang/String;)Lye;	a	unsigned
	m	(Lxo;)Lye;	a	withUnsignedContent
	m	()Lye;	a	removeUnsignedContent
	m	(Lxs;)Lye;	a	filter
	m	(Z)Lye;	a	filter
	m	()Lye;	b	removeSignature
	m	(Lbcp$a;Lyj;Lyh;)V	a	updateSignature
	m	(Lbcq;)Z	a	verify
	m	()Ljava/lang/String;	c	signedContent
	m	()Lxo;	d	decoratedContent
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	(Ljava/time/Instant;)Z	a	hasExpiredServer
	m	(Ljava/time/Instant;)Z	b	hasExpiredClient
	m	()Ljava/util/UUID;	g	sender
	m	()Z	h	isSystem
	m	()Z	i	hasSignature
	m	(Ljava/util/UUID;)Z	a	hasSignatureFrom
	m	()Z	j	isFullyFiltered
	m	(Lye;)Ljava/lang/String;	a	describeSigned
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lyj;	k	link
	m	()Lya;	l	signature
	m	()Lyh;	m	signedBody
	m	()Lxo;	n	unsignedContent
	m	()Lxs;	o	filterMask
	m	(Lya;)Ljava/lang/String;	a	lambda$describeSigned$6
	m	()Lxo;	p	lambda$decoratedContent$5
	m	(Lbcp$a;)V	a	lambda$verify$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lyj;Ljava/util/Optional;Lyh;Ljava/util/Optional;Lxs;)Lye;	a	lambda$static$2
	m	(Lye;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lye;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yf	net/minecraft/network/chat/RemoteChatSession
	f	Ljava/util/UUID;	a	sessionId
	f	Lcux;	b	profilePublicKey
	m	(Ljava/util/UUID;Lcux;)V	<init>	<init>
	m	(Ljava/time/Duration;)Lyk;	a	createMessageValidator
	m	(Ljava/util/UUID;)Lyi$b;	a	createMessageDecoder
	m	()Lyf$a;	a	asData
	m	()Z	b	hasExpired
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	c	sessionId
	m	()Lcux;	d	profilePublicKey
	m	(Ljava/time/Duration;)Z	b	lambda$createMessageValidator$0
c	yf$a	net/minecraft/network/chat/RemoteChatSession$Data
	f	Ljava/util/UUID;	a	sessionId
	f	Lcux$a;	b	profilePublicKey
	m	(Ljava/util/UUID;Lcux$a;)V	<init>	<init>
	m	(Lwg;)Lyf$a;	a	read
	m	(Lwg;Lyf$a;)V	a	write
	m	(Lcom/mojang/authlib/GameProfile;Lbcq;)Lyf;	a	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	sessionId
	m	()Lcux$a;	b	profilePublicKey
c	yg	net/minecraft/network/chat/SignableCommand
	f	Ljava/util/List;	a	arguments
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/ParseResults;)Z	a	hasSignableArguments
	m	(Lcom/mojang/brigadier/ParseResults;)Lyg;	b	of
	m	(Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List;	a	collectArguments
	m	(Ljava/lang/String;)Lyg$a;	a	getArgument
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	arguments
c	yg$a	net/minecraft/network/chat/SignableCommand$Argument
	f	Lcom/mojang/brigadier/tree/ArgumentCommandNode;	a	node
	f	Ljava/lang/String;	b	value
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	name
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/brigadier/tree/ArgumentCommandNode;	b	node
	m	()Ljava/lang/String;	c	value
c	yh	net/minecraft/network/chat/SignedMessageBody
	f	Ljava/lang/String;	b	content
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Lxv;	e	lastSeen
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Ljava/lang/String;Ljava/time/Instant;JLxv;)V	<init>	<init>
	m	(Ljava/lang/String;)Lyh;	a	unsigned
	m	(Lbcp$a;)V	a	updateSignature
	m	(Lyb;)Lyh$a;	a	pack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	content
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Lxv;	d	lastSeen
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yh$a	net/minecraft/network/chat/SignedMessageBody$Packed
	f	Ljava/lang/String;	a	content
	f	Ljava/time/Instant;	b	timeStamp
	f	J	c	salt
	f	Lxv$a;	d	lastSeen
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/time/Instant;JLxv$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lyb;)Ljava/util/Optional;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	content
	m	()Ljava/time/Instant;	b	timeStamp
	m	()J	c	salt
	m	()Lxv$a;	d	lastSeen
	m	(Lxv;)Lyh;	a	lambda$unpack$0
c	yi	net/minecraft/network/chat/SignedMessageChain
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lyj;	b	nextLink
	f	Ljava/time/Instant;	c	lastTimeStamp
	m	(Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
	m	(Lbcr;)Lyi$c;	a	encoder
	m	(Lcux;)Lyi$b;	a	decoder
	m	(Lbcr;Lyh;)Lya;	a	lambda$encoder$1
	m	(Lyj;Lyh;Lbcp$a;)V	a	lambda$encoder$0
	m	()V	<clinit>	<clinit>
c	yi$1	net/minecraft/network/chat/SignedMessageChain$1
	f	Lcux;	a	val$profilePublicKey
	f	Lbcq;	b	val$signatureValidator
	f	Lyi;	c	this$0
	m	(Lyi;Lcux;Lbcq;)V	<init>	<init>
	m	(Lya;Lyh;)Lye;	unpack	unpack
	m	()V	setChainBroken	setChainBroken
c	yi$a	net/minecraft/network/chat/SignedMessageChain$DecodeException
	f	Lxo;	a	MISSING_PROFILE_KEY
	f	Lxo;	b	CHAIN_BROKEN
	f	Lxo;	c	EXPIRED_PROFILE_KEY
	f	Lxo;	d	INVALID_SIGNATURE
	f	Lxo;	e	OUT_OF_ORDER_CHAT
	m	(Lxo;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	yi$b	net/minecraft/network/chat/SignedMessageChain$Decoder
	m	(Ljava/util/UUID;Ljava/util/function/BooleanSupplier;)Lyi$b;	unsigned	unsigned
	m	(Lya;Lyh;)Lye;	unpack	unpack
	m	()V	setChainBroken	setChainBroken
	m	(Ljava/util/function/BooleanSupplier;Ljava/util/UUID;Lya;Lyh;)Lye;	a	lambda$unsigned$0
c	yi$c	net/minecraft/network/chat/SignedMessageChain$Encoder
	f	Lyi$c;	a	UNSIGNED
	m	(Lyh;)Lya;	pack	pack
	m	(Lyh;)Lya;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yj	net/minecraft/network/chat/SignedMessageLink
	f	I	b	index
	f	Ljava/util/UUID;	c	sender
	f	Ljava/util/UUID;	d	sessionId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ILjava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
	m	(Ljava/util/UUID;)Lyj;	a	unsigned
	m	(Ljava/util/UUID;Ljava/util/UUID;)Lyj;	a	root
	m	(Lbcp$a;)V	a	updateSignature
	m	(Lyj;)Z	a	isDescendantOf
	m	()Lyj;	a	advance
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	index
	m	()Ljava/util/UUID;	c	sender
	m	()Ljava/util/UUID;	d	sessionId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yk	net/minecraft/network/chat/SignedMessageValidator
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lyk;	b	ACCEPT_UNSIGNED
	f	Lyk;	c	REJECT_ALL
	m	(Lye;)Lye;	updateAndValidate	updateAndValidate
	m	(Lye;)Lye;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yk$a	net/minecraft/network/chat/SignedMessageValidator$KeyBased
	f	Lbcq;	d	validator
	f	Ljava/util/function/BooleanSupplier;	e	expired
	f	Lye;	f	lastMessage
	f	Z	g	isChainValid
	m	(Lbcq;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
	m	(Lye;)Z	a	validateChain
	m	(Lye;)Z	b	validate
	m	(Lye;)Lye;	updateAndValidate	updateAndValidate
c	yl	net/minecraft/network/chat/Style
	f	Lyl;	a	EMPTY
	f	Lame;	b	DEFAULT_FONT
	f	Lyn;	c	color
	f	Ljava/lang/Integer;	d	shadowColor
	f	Ljava/lang/Boolean;	e	bold
	f	Ljava/lang/Boolean;	f	italic
	f	Ljava/lang/Boolean;	g	underlined
	f	Ljava/lang/Boolean;	h	strikethrough
	f	Ljava/lang/Boolean;	i	obfuscated
	f	Lxm;	j	clickEvent
	f	Lxu;	k	hoverEvent
	f	Ljava/lang/String;	l	insertion
	f	Lame;	m	font
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lyl;	a	create
	m	(Lyn;Ljava/lang/Integer;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Lxm;Lxu;Ljava/lang/String;Lame;)V	<init>	<init>
	m	()Lyn;	a	getColor
	m	()Ljava/lang/Integer;	b	getShadowColor
	m	()Z	c	isBold
	m	()Z	d	isItalic
	m	()Z	e	isStrikethrough
	m	()Z	f	isUnderlined
	m	()Z	g	isObfuscated
	m	()Z	h	isEmpty
	m	()Lxm;	i	getClickEvent
	m	()Lxu;	j	getHoverEvent
	m	()Ljava/lang/String;	k	getInsertion
	m	()Lame;	l	getFont
	m	(Lyl;Ljava/lang/Object;Ljava/lang/Object;)Lyl;	a	checkEmptyAfterChange
	m	(Lyn;)Lyl;	a	withColor
	m	(Lo;)Lyl;	a	withColor
	m	(I)Lyl;	a	withColor
	m	(I)Lyl;	b	withShadowColor
	m	(Ljava/lang/Boolean;)Lyl;	a	withBold
	m	(Ljava/lang/Boolean;)Lyl;	b	withItalic
	m	(Ljava/lang/Boolean;)Lyl;	c	withUnderlined
	m	(Ljava/lang/Boolean;)Lyl;	d	withStrikethrough
	m	(Ljava/lang/Boolean;)Lyl;	e	withObfuscated
	m	(Lxm;)Lyl;	a	withClickEvent
	m	(Lxu;)Lyl;	a	withHoverEvent
	m	(Ljava/lang/String;)Lyl;	a	withInsertion
	m	(Lame;)Lyl;	a	withFont
	m	(Lo;)Lyl;	b	applyFormat
	m	(Lo;)Lyl;	c	applyLegacyFormat
	m	([Lo;)Lyl;	a	applyFormats
	m	(Lyl;)Lyl;	a	applyTo
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	yl$1	net/minecraft/network/chat/Style$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
	m	()V	<clinit>	<clinit>
c	yl$a	net/minecraft/network/chat/Style$1Collector
	f	Z	b	isNotFirst
	f	Ljava/lang/StringBuilder;	a	val$result
	m	(Lyl;Ljava/lang/StringBuilder;)V	<init>	<init>
	m	()V	a	prependSeparator
	m	(Ljava/lang/String;Ljava/lang/Boolean;)V	a	addFlagString
	m	(Ljava/lang/String;Ljava/lang/Object;)V	a	addValueString
c	yl$b	net/minecraft/network/chat/Style$Serializer
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	TRUSTED_STREAM_CODEC
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
	m	(Lyl;)Ljava/util/Optional;	a	lambda$static$10
	m	(Lyl;)Ljava/util/Optional;	b	lambda$static$9
	m	(Lyl;)Ljava/util/Optional;	c	lambda$static$8
	m	(Lyl;)Ljava/util/Optional;	d	lambda$static$7
	m	(Lyl;)Ljava/util/Optional;	e	lambda$static$6
	m	(Lyl;)Ljava/util/Optional;	f	lambda$static$5
	m	(Lyl;)Ljava/util/Optional;	g	lambda$static$4
	m	(Lyl;)Ljava/util/Optional;	h	lambda$static$3
	m	(Lyl;)Ljava/util/Optional;	i	lambda$static$2
	m	(Lyl;)Ljava/util/Optional;	j	lambda$static$1
	m	(Lyl;)Ljava/util/Optional;	k	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ym	net/minecraft/network/chat/SubStringSource
	f	Ljava/lang/String;	a	plainText
	f	Ljava/util/List;	b	charStyles
	f	Lit/unimi/dsi/fastutil/ints/Int2IntFunction;	c	reverseCharModifier
	m	(Ljava/lang/String;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getPlainText
	m	(IIZ)Ljava/util/List;	a	substring
	m	(Lxt;)Lym;	a	create
	m	(Lxt;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lym;	a	create
	m	(Ljava/lang/StringBuilder;Ljava/util/List;Lyl;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$create$3
	m	(Ljava/lang/StringBuilder;Ljava/util/List;ILyl;I)Z	a	lambda$create$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$create$1
	m	(I)I	a	lambda$create$0
c	yn	net/minecraft/network/chat/TextColor
	f	Ljava/lang/String;	b	CUSTOM_COLOR_PREFIX
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	c	LEGACY_FORMAT_TO_COLOR
	f	Ljava/util/Map;	d	NAMED_COLORS
	f	I	e	value
	f	Ljava/lang/String;	f	name
	m	(ILjava/lang/String;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	()I	a	getValue
	m	()Ljava/lang/String;	b	serialize
	m	()Ljava/lang/String;	c	formatValue
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lo;)Lyn;	a	fromLegacyFormat
	m	(I)Lyn;	a	fromRgb
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	parseColor
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$parseColor$4
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$parseColor$3
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$parseColor$2
	m	(Lyn;)Ljava/lang/String;	a	lambda$static$1
	m	(Lo;)Lyn;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yo	net/minecraft/network/chat/ThrowingComponent
	f	Lxo;	a	component
	m	(Lxo;)V	<init>	<init>
	m	(Lxo;Ljava/lang/Throwable;)V	<init>	<init>
	m	()Lxo;	a	getComponent
c	yp	net/minecraft/network/chat/contents/BlockDataSource
	f	Ljava/lang/String;	d	posPattern
	f	Lgm;	e	compiledPos
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyq$a;	b	TYPE
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Lgm;)V	<init>	<init>
	m	(Ljava/lang/String;)Lgm;	a	compilePos
	m	(Lek;)Ljava/util/stream/Stream;	a	getData
	m	()Lyq$a;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	b	posPattern
	m	()Lgm;	c	compiledPos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yq	net/minecraft/network/chat/contents/DataSource
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Lek;)Ljava/util/stream/Stream;	a	getData
	m	()Lyq$a;	a	type
	m	()V	<clinit>	<clinit>
c	yq$a	net/minecraft/network/chat/contents/DataSource$Type
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Ljava/lang/String;	b	id
	m	(Lcom/mojang/serialization/MapCodec;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	b	id
c	yr	net/minecraft/network/chat/contents/EntityDataSource
	f	Ljava/lang/String;	d	selectorPattern
	f	Lhd;	e	compiledSelector
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyq$a;	b	TYPE
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Lhd;)V	<init>	<init>
	m	(Ljava/lang/String;)Lhd;	a	compileSelector
	m	(Lek;)Ljava/util/stream/Stream;	a	getData
	m	()Lyq$a;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	b	selectorPattern
	m	()Lhd;	c	compiledSelector
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ys	net/minecraft/network/chat/contents/KeybindContents
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxp$a;	b	TYPE
	f	Ljava/lang/String;	c	name
	f	Ljava/util/function/Supplier;	d	nameResolver
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Lxo;	c	getNestedComponent
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	b	getName
	m	()Lxp$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lys;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yt	net/minecraft/network/chat/contents/KeybindResolver
	f	Ljava/util/function/Function;	a	keyResolver
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;)V	a	setKeyResolver
	m	(Ljava/lang/String;)Ljava/util/function/Supplier;	a	lambda$static$1
	m	(Ljava/lang/String;)Lxo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yu	net/minecraft/network/chat/contents/NbtContents
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxp$a;	b	TYPE
	f	Z	e	interpreting
	f	Ljava/util/Optional;	f	separator
	f	Ljava/lang/String;	g	nbtPathPattern
	f	Lyq;	h	dataSource
	f	Lfe$g;	c	compiledNbtPath
	m	(Ljava/lang/String;ZLjava/util/Optional;Lyq;)V	<init>	<init>
	m	(Ljava/lang/String;Lfe$g;ZLjava/util/Optional;Lyq;)V	<init>	<init>
	m	(Ljava/lang/String;)Lfe$g;	a	compileNbtPath
	m	()Ljava/lang/String;	b	getNbtPath
	m	()Z	c	isInterpreting
	m	()Ljava/util/Optional;	d	getSeparator
	m	()Lyq;	e	getDataSource
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lek;Lbzm;I)Lyc;	a	resolve
	m	(Lvi;)Ljava/lang/String;	a	asString
	m	()Lxp$a;	a	type
	m	(Ljava/util/stream/Stream;)Lyc;	a	lambda$resolve$6
	m	(Ljava/util/stream/Stream;Lyc;)Lyc;	a	lambda$resolve$5
	m	(Lyc;Lyc;Lyc;)Lyc;	a	lambda$resolve$4
	m	(Lxo;Lyc;Lyc;)Lyc;	a	lambda$resolve$3
	m	(Lamc;Lek;Lbzm;ILvi;)Ljava/util/stream/Stream;	a	lambda$resolve$2
	m	(Lui;)Ljava/util/stream/Stream;	a	lambda$resolve$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yv	net/minecraft/network/chat/contents/PlainTextContents
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxp$a;	b	TYPE
	f	Lyv;	c	EMPTY
	m	(Ljava/lang/String;)Lyv;	a	create
	m	()Ljava/lang/String;	b	text
	m	()Lxp$a;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yv$1	net/minecraft/network/chat/contents/PlainTextContents$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	b	text
c	yv$a	net/minecraft/network/chat/contents/PlainTextContents$LiteralContents
	f	Ljava/lang/String;	d	text
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	text
c	yw	net/minecraft/network/chat/contents/ScoreContents
	f	Lcom/mojang/datafixers/util/Either;	d	name
	f	Ljava/lang/String;	e	objective
	f	Lcom/mojang/serialization/MapCodec;	a	INNER_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lxp$a;	c	TYPE
	m	(Lcom/mojang/datafixers/util/Either;Ljava/lang/String;)V	<init>	<init>
	m	()Lxp$a;	a	type
	m	(Lek;)Lfjw;	a	findTargetName
	m	(Lfjw;Lek;)Lyc;	a	getScore
	m	(Lek;Lbzm;I)Lyc;	a	resolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/datafixers/util/Either;	b	name
	m	()Ljava/lang/String;	c	objective
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yx	net/minecraft/network/chat/contents/SelectorContents
	f	Lhf;	c	selector
	f	Ljava/util/Optional;	d	separator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxp$a;	b	TYPE
	m	(Lhf;Ljava/util/Optional;)V	<init>	<init>
	m	()Lxp$a;	a	type
	m	(Lek;Lbzm;I)Lyc;	a	resolve
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lhf;	b	selector
	m	()Ljava/util/Optional;	c	separator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yy	net/minecraft/network/chat/contents/StorageDataSource
	f	Lame;	d	id
	f	Lcom/mojang/serialization/MapCodec;	a	SUB_CODEC
	f	Lyq$a;	b	TYPE
	m	(Lame;)V	<init>	<init>
	m	(Lek;)Ljava/util/stream/Stream;	a	getData
	m	()Lyq$a;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	yz	net/minecraft/network/chat/contents/TranslatableContents
	f	[Ljava/lang/Object;	a	NO_ARGS
	f	Lcom/mojang/serialization/Codec;	d	PRIMITIVE_ARG_CODEC
	f	Lcom/mojang/serialization/Codec;	e	ARG_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lxp$a;	c	TYPE
	f	Lxt;	f	TEXT_PERCENT
	f	Lxt;	g	TEXT_NULL
	f	Ljava/lang/String;	h	key
	f	Ljava/lang/String;	i	fallback
	f	[Ljava/lang/Object;	j	args
	f	Lud;	k	decomposedWith
	f	Ljava/util/List;	l	decomposedParts
	f	Ljava/util/regex/Pattern;	m	FORMAT_PATTERN
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	filterAllowedArguments
	m	(Ljava/lang/Object;)Z	a	isAllowedPrimitiveArgument
	m	([Ljava/lang/Object;)Ljava/util/Optional;	a	adjustArgs
	m	(Ljava/util/Optional;)[Ljava/lang/Object;	a	adjustArgs
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)Lyz;	a	create
	m	(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V	<init>	<init>
	m	()Lxp$a;	a	type
	m	()V	e	decompose
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)V	a	decomposeTemplate
	m	(I)Lxt;	a	getArgument
	m	(Lxt$b;Lyl;)Ljava/util/Optional;	a	visit
	m	(Lxt$a;)Ljava/util/Optional;	a	visit
	m	(Lek;Lbzm;I)Lyc;	a	resolve
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	b	getKey
	m	()Ljava/lang/String;	c	getFallback
	m	()[Ljava/lang/Object;	d	getArgs
	m	(Ljava/util/List;)[Ljava/lang/Object;	a	lambda$adjustArgs$9
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
	m	(Lyz;)Ljava/util/Optional;	a	lambda$static$7
	m	(Lyz;)Ljava/util/Optional;	b	lambda$static$6
	m	(Lyz;)Ljava/lang/String;	c	lambda$static$5
	m	(Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	c	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Object;	a	lambda$static$3
	m	(Lxo;)Ljava/lang/Object;	a	lambda$static$2
	m	(Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$static$1
	m	()Ljava/lang/String;	f	lambda$filterAllowedArguments$0
	m	()V	<clinit>	<clinit>
c	za	net/minecraft/network/chat/contents/TranslatableFormatException
	m	(Lyz;Ljava/lang/String;)V	<init>	<init>
	m	(Lyz;I)V	<init>	<init>
	m	(Lyz;Ljava/lang/Throwable;)V	<init>	<init>
c	zb	net/minecraft/network/chat/contents/package-info
c	zc	net/minecraft/network/chat/numbers/BlankFormat
	f	Lzc;	a	INSTANCE
	f	Lzf;	b	TYPE
	m	()V	<init>	<init>
	m	(I)Lyc;	a	format
	m	()Lzf;	a	type
	m	()V	<clinit>	<clinit>
c	zc$1	net/minecraft/network/chat/numbers/BlankFormat$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lzm;	b	streamCodec
	m	()V	<clinit>	<clinit>
c	zd	net/minecraft/network/chat/numbers/FixedFormat
	f	Lzf;	a	TYPE
	f	Lxo;	b	value
	m	(Lxo;)V	<init>	<init>
	m	(I)Lyc;	a	format
	m	()Lzf;	a	type
	m	()V	<clinit>	<clinit>
c	zd$1	net/minecraft/network/chat/numbers/FixedFormat$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lzm;	b	streamCodec
	m	(Lzd;)Lxo;	a	lambda$$1
	m	(Lzd;)Lxo;	b	lambda$$0
	m	()V	<clinit>	<clinit>
c	ze	net/minecraft/network/chat/numbers/NumberFormat
	m	(I)Lyc;	a	format
	m	()Lzf;	a	type
c	zf	net/minecraft/network/chat/numbers/NumberFormatType
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lzm;	b	streamCodec
c	zg	net/minecraft/network/chat/numbers/NumberFormatTypes
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lzm;	d	OPTIONAL_STREAM_CODEC
	m	()V	<init>	<init>
	m	(Ljy;)Lzf;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	zh	net/minecraft/network/chat/numbers/StyledFormat
	f	Lzf;	a	TYPE
	f	Lzh;	b	NO_STYLE
	f	Lzh;	c	SIDEBAR_DEFAULT
	f	Lzh;	d	PLAYER_LIST_DEFAULT
	f	Lyl;	e	style
	m	(Lyl;)V	<init>	<init>
	m	(I)Lyc;	a	format
	m	()Lzf;	a	type
	m	()V	<clinit>	<clinit>
c	zh$1	net/minecraft/network/chat/numbers/StyledFormat$1
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Lzm;	b	streamCodec
	m	(Lzh;)Lyl;	a	lambda$$1
	m	(Lzh;)Lyl;	b	lambda$$0
	m	()V	<clinit>	<clinit>
c	zi	net/minecraft/network/chat/numbers/package-info
c	zj	net/minecraft/network/chat/package-info
c	zk	net/minecraft/network/codec/ByteBufCodecs
	f	I	a	MAX_INITIAL_COLLECTION_SIZE
	f	Lzm;	b	BOOL
	f	Lzm;	c	BYTE
	f	Lzm;	d	ROTATION_BYTE
	f	Lzm;	e	SHORT
	f	Lzm;	f	UNSIGNED_SHORT
	f	Lzm;	g	INT
	f	Lzm;	h	VAR_INT
	f	Lzm;	i	OPTIONAL_VAR_INT
	f	Lzm;	j	LONG
	f	Lzm;	k	VAR_LONG
	f	Lzm;	l	FLOAT
	f	Lzm;	m	DOUBLE
	f	Lzm;	n	BYTE_ARRAY
	f	Lzm;	o	LONG_ARRAY
	f	Lzm;	p	STRING_UTF8
	f	Lzm;	q	TAG
	f	Lzm;	r	TRUSTED_TAG
	f	Lzm;	s	COMPOUND_TAG
	f	Lzm;	t	TRUSTED_COMPOUND_TAG
	f	Lzm;	u	OPTIONAL_COMPOUND_TAG
	f	Lzm;	v	VECTOR3F
	f	Lzm;	w	QUATERNIONF
	f	Lzm;	x	CONTAINER_ID
	f	Lzm;	y	GAME_PROFILE_PROPERTIES
	f	Lzm;	z	GAME_PROFILE
	f	Lzm;	A	RGB_COLOR
	m	(I)Lzm;	a	byteArray
	m	(I)Lzm;	b	stringUtf8
	m	(Ljava/util/function/Supplier;)Lzm;	a	optionalTagCodec
	m	(Ljava/util/function/Supplier;)Lzm;	b	tagCodec
	m	(Ljava/util/function/Supplier;)Lzm;	c	compoundTagCodec
	m	(Lcom/mojang/serialization/Codec;)Lzm;	a	fromCodecTrusted
	m	(Lcom/mojang/serialization/Codec;)Lzm;	b	fromCodec
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Lzm$a;	a	fromCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)Lzm;	a	fromCodec
	m	(Lcom/mojang/serialization/Codec;)Lzm;	c	fromCodecWithRegistriesTrusted
	m	(Lcom/mojang/serialization/Codec;)Lzm;	d	fromCodecWithRegistries
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Supplier;)Lzm;	b	fromCodecWithRegistries
	m	(Lzm;)Lzm;	a	optional
	m	(Lio/netty/buffer/ByteBuf;I)I	a	readCount
	m	(Lio/netty/buffer/ByteBuf;II)V	a	writeCount
	m	(Ljava/util/function/IntFunction;Lzm;)Lzm;	a	collection
	m	(Ljava/util/function/IntFunction;Lzm;I)Lzm;	a	collection
	m	(Ljava/util/function/IntFunction;)Lzm$a;	a	collection
	m	()Lzm$a;	a	list
	m	(I)Lzm$a;	c	list
	m	(Ljava/util/function/IntFunction;Lzm;Lzm;)Lzm;	a	map
	m	(Ljava/util/function/IntFunction;Lzm;Lzm;I)Lzm;	a	map
	m	(Lzm;Lzm;)Lzm;	a	either
	m	(ILjava/util/function/BiFunction;)Lzm$a;	a	lengthPrefixed
	m	(I)Lzm$a;	d	lengthPrefixed
	m	(I)Lzm$a;	e	registryFriendlyLengthPrefixed
	m	(Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lzm;	a	idMapper
	m	(Ljq;)Lzm;	a	idMapper
	m	(Lamd;Ljava/util/function/Function;)Lzm;	a	registry
	m	(Lamd;)Lzm;	a	registry
	m	(Lamd;)Lzm;	b	holderRegistry
	m	(Lamd;Lzm;)Lzm;	a	holder
	m	(Lamd;)Lzm;	c	holderSet
	m	(I)Lzm;	f	lenientJson
	m	(Ljy;)Ljq;	a	lambda$registry$15
	m	(Lwx;Lio/netty/buffer/ByteBuf;)Lwx;	a	lambda$registryFriendlyLengthPrefixed$14
	m	(Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	lambda$lengthPrefixed$13
	m	(ILjava/util/function/BiFunction;Lzm;)Lzm;	a	lambda$lengthPrefixed$12
	m	(ILzm;)Lzm;	a	lambda$list$11
	m	(Lzm;)Lzm;	b	lambda$list$10
	m	(Ljava/util/function/IntFunction;Lzm;)Lzm;	b	lambda$collection$9
	m	()Lur;	b	lambda$fromCodecWithRegistries$8
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Lzm;)Lzm;	a	lambda$fromCodec$7
	m	()Lur;	c	lambda$fromCodec$6
	m	()Lur;	d	lambda$static$5
	m	(Lui;)Lvi;	a	lambda$compoundTagCodec$4
	m	(Lvi;)Lui;	a	lambda$compoundTagCodec$3
	m	()Lur;	e	lambda$static$2
	m	(Ljava/util/OptionalInt;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ljava/lang/Integer;)Ljava/util/OptionalInt;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	zk$1	net/minecraft/network/codec/ByteBufCodecs$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Boolean;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Boolean;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$2	net/minecraft/network/codec/ByteBufCodecs$10
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Double;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Double;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$3	net/minecraft/network/codec/ByteBufCodecs$11
	f	I	a	val$maxSize
	m	(I)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)[B	a	decode
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$4	net/minecraft/network/codec/ByteBufCodecs$12
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)[B	a	decode
	m	(Lio/netty/buffer/ByteBuf;[B)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$5	net/minecraft/network/codec/ByteBufCodecs$13
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)[J	a	decode
	m	(Lio/netty/buffer/ByteBuf;[J)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$6	net/minecraft/network/codec/ByteBufCodecs$14
	f	I	a	val$maxStringLength
	m	(I)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$7	net/minecraft/network/codec/ByteBufCodecs$15
	f	Ljava/util/function/Supplier;	a	val$accounter
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$8	net/minecraft/network/codec/ByteBufCodecs$16
	f	Ljava/util/function/Supplier;	a	val$accounter
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lvi;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lvi;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$9	net/minecraft/network/codec/ByteBufCodecs$17
	f	Lzm;	a	val$original
	f	Lcom/mojang/serialization/Codec;	b	val$codec
	f	Lcom/mojang/serialization/DynamicOps;	c	val$ops
	m	(Lzm;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$encode$1
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	b	lambda$decode$0
c	zk$10	net/minecraft/network/codec/ByteBufCodecs$18
	f	Lzm;	a	val$tagCodec
	f	Lcom/mojang/serialization/Codec;	b	val$codec
	m	(Lzm;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lwx;)Ljava/lang/Object;	a	decode
	m	(Lwx;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/String;)Lio/netty/handler/codec/EncoderException;	a	lambda$encode$1
	m	(Lvi;Ljava/lang/String;)Lio/netty/handler/codec/DecoderException;	a	lambda$decode$0
c	zk$11	net/minecraft/network/codec/ByteBufCodecs$19
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$12	net/minecraft/network/codec/ByteBufCodecs$2
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Byte;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Byte;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$13	net/minecraft/network/codec/ByteBufCodecs$20
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Vector3f;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Vector3f;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$14	net/minecraft/network/codec/ByteBufCodecs$21
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lorg/joml/Quaternionf;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lorg/joml/Quaternionf;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$15	net/minecraft/network/codec/ByteBufCodecs$22
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$16	net/minecraft/network/codec/ByteBufCodecs$23
	f	Lzm;	a	val$original
	m	(Lzm;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$17	net/minecraft/network/codec/ByteBufCodecs$24
	f	I	a	val$maxSize
	f	Ljava/util/function/IntFunction;	b	val$constructor
	f	Lzm;	c	val$elementCodec
	m	(ILjava/util/function/IntFunction;Lzm;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Collection;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Collection;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$18	net/minecraft/network/codec/ByteBufCodecs$25
	f	I	a	val$maxSize
	f	Lzm;	b	val$keyCodec
	f	Lzm;	c	val$valueCodec
	f	Ljava/util/function/IntFunction;	d	val$constructor
	m	(ILzm;Lzm;Ljava/util/function/IntFunction;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Map;)V	a	encode
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Map;	a	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Lzm;Lio/netty/buffer/ByteBuf;Lzm;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$encode$0
c	zk$19	net/minecraft/network/codec/ByteBufCodecs$26
	f	Lzm;	a	val$leftCodec
	f	Lzm;	b	val$rightCodec
	m	(Lzm;Lzm;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/datafixers/util/Either;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/datafixers/util/Either;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Lio/netty/buffer/ByteBuf;Lzm;Ljava/lang/Object;)V	a	lambda$encode$1
	m	(Lio/netty/buffer/ByteBuf;Lzm;Ljava/lang/Object;)V	b	lambda$encode$0
c	zk$20	net/minecraft/network/codec/ByteBufCodecs$27
	f	I	a	val$maxSize
	f	Ljava/util/function/BiFunction;	b	val$decorator
	f	Lzm;	c	val$original
	m	(ILjava/util/function/BiFunction;Lzm;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$21	net/minecraft/network/codec/ByteBufCodecs$28
	f	Ljava/util/function/IntFunction;	a	val$byId
	f	Ljava/util/function/ToIntFunction;	b	val$toId
	m	(Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$22	net/minecraft/network/codec/ByteBufCodecs$29
	f	Ljava/util/function/Function;	a	val$mapExtractor
	f	Lamd;	b	val$registryKey
	m	(Ljava/util/function/Function;Lamd;)V	<init>	<init>
	m	(Lwx;)Ljq;	b	getRegistryOrThrow
	m	(Lwx;)Ljava/lang/Object;	a	decode
	m	(Lwx;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$23	net/minecraft/network/codec/ByteBufCodecs$3
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Short;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Short;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$24	net/minecraft/network/codec/ByteBufCodecs$30
	f	I	c	DIRECT_HOLDER_ID
	f	Lamd;	a	val$registryKey
	f	Lzm;	b	val$directCodec
	m	(Lamd;Lzm;)V	<init>	<init>
	m	(Lwx;)Ljq;	b	getRegistryOrThrow
	m	(Lwx;)Ljl;	a	decode
	m	(Lwx;Ljl;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$25	net/minecraft/network/codec/ByteBufCodecs$31
	f	I	b	NAMED_SET
	f	Lzm;	c	holderCodec
	f	Lamd;	a	val$registryKey
	m	(Lamd;)V	<init>	<init>
	m	(Lwx;)Ljp;	a	decode
	m	(Lwx;Ljp;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$26	net/minecraft/network/codec/ByteBufCodecs$32
	f	I	a	MAX_PROPERTY_NAME_LENGTH
	f	I	b	MAX_PROPERTY_VALUE_LENGTH
	f	I	c	MAX_PROPERTY_SIGNATURE_LENGTH
	f	I	d	MAX_PROPERTIES
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/authlib/properties/PropertyMap;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/authlib/properties/PropertyMap;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	lambda$encode$1
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	b	lambda$decode$0
c	zk$27	net/minecraft/network/codec/ByteBufCodecs$33
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lcom/mojang/authlib/GameProfile;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/mojang/authlib/GameProfile;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$28	net/minecraft/network/codec/ByteBufCodecs$34
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$29	net/minecraft/network/codec/ByteBufCodecs$35
	f	Lcom/google/gson/Gson;	b	GSON
	f	I	a	val$maxStringLength
	m	(I)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lcom/google/gson/JsonElement;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lcom/google/gson/JsonElement;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	()V	<clinit>	<clinit>
c	zk$30	net/minecraft/network/codec/ByteBufCodecs$36
	f	[I	a	$SwitchMap$net$minecraft$core$Holder$Kind
	m	()V	<clinit>	<clinit>
c	zk$31	net/minecraft/network/codec/ByteBufCodecs$4
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$32	net/minecraft/network/codec/ByteBufCodecs$5
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$33	net/minecraft/network/codec/ByteBufCodecs$6
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Integer;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Integer;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$34	net/minecraft/network/codec/ByteBufCodecs$7
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Long;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Long;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$35	net/minecraft/network/codec/ByteBufCodecs$8
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Long;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Long;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zk$36	net/minecraft/network/codec/ByteBufCodecs$9
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Float;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Float;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zl	net/minecraft/network/codec/IdDispatchCodec
	f	I	a	UNKNOWN_TYPE
	f	Ljava/util/function/Function;	b	typeGetter
	f	Ljava/util/List;	c	byId
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	toId
	m	(Ljava/util/function/Function;Ljava/util/List;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/util/function/Function;)Lzl$a;	a	builder
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zl$a	net/minecraft/network/codec/IdDispatchCodec$Builder
	f	Ljava/util/List;	a	entries
	f	Ljava/util/function/Function;	b	typeGetter
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;Lzm;)Lzl$a;	a	add
	m	()Lzl;	a	build
c	zl$b	net/minecraft/network/codec/IdDispatchCodec$DontDecorateException
c	zl$c	net/minecraft/network/codec/IdDispatchCodec$Entry
	f	Lzm;	a	serializer
	f	Ljava/lang/Object;	b	type
	m	(Lzm;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lzm;	a	serializer
	m	()Ljava/lang/Object;	b	type
c	zm	net/minecraft/network/codec/StreamCodec
	m	(Lzo;Lzn;)Lzm;	a	of
	m	(Lzp;Lzn;)Lzm;	a	ofMember
	m	(Ljava/lang/Object;)Lzm;	a	unit
	m	(Lzm$a;)Lzm;	a	apply
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lzm;	a	map
	m	(Ljava/util/function/Function;)Lzm;	b	mapStream
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lzm;	b	dispatch
	m	(Lzm;Ljava/util/function/Function;Ljava/util/function/Function;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function3;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function5;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function6;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function7;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function8;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function9;)Lzm;	a	composite
	m	(Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lzm;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function11;)Lzm;	a	composite
	m	(Ljava/util/function/UnaryOperator;)Lzm;	a	recursive
	m	()Lzm;	a	cast
c	zm$1	net/minecraft/network/codec/StreamCodec$1
	f	Lzn;	a	val$decoder
	f	Lzo;	b	val$encoder
	m	(Lzn;Lzo;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$2	net/minecraft/network/codec/StreamCodec$10
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lcom/mojang/datafixers/util/Function4;	e	val$constructor
	f	Ljava/util/function/Function;	f	val$getter1
	f	Ljava/util/function/Function;	g	val$getter2
	f	Ljava/util/function/Function;	h	val$getter3
	f	Ljava/util/function/Function;	i	val$getter4
	m	(Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function4;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$3	net/minecraft/network/codec/StreamCodec$11
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lcom/mojang/datafixers/util/Function5;	f	val$constructor
	f	Ljava/util/function/Function;	g	val$getter1
	f	Ljava/util/function/Function;	h	val$getter2
	f	Ljava/util/function/Function;	i	val$getter3
	f	Ljava/util/function/Function;	j	val$getter4
	f	Ljava/util/function/Function;	k	val$getter5
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function5;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$4	net/minecraft/network/codec/StreamCodec$12
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lzm;	f	val$codec6
	f	Lcom/mojang/datafixers/util/Function6;	g	val$constructor
	f	Ljava/util/function/Function;	h	val$getter1
	f	Ljava/util/function/Function;	i	val$getter2
	f	Ljava/util/function/Function;	j	val$getter3
	f	Ljava/util/function/Function;	k	val$getter4
	f	Ljava/util/function/Function;	l	val$getter5
	f	Ljava/util/function/Function;	m	val$getter6
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function6;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$5	net/minecraft/network/codec/StreamCodec$13
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lzm;	f	val$codec6
	f	Lzm;	g	val$codec7
	f	Lcom/mojang/datafixers/util/Function7;	h	val$constructor
	f	Ljava/util/function/Function;	i	val$getter1
	f	Ljava/util/function/Function;	j	val$getter2
	f	Ljava/util/function/Function;	k	val$getter3
	f	Ljava/util/function/Function;	l	val$getter4
	f	Ljava/util/function/Function;	m	val$getter5
	f	Ljava/util/function/Function;	n	val$getter6
	f	Ljava/util/function/Function;	o	val$getter7
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function7;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$6	net/minecraft/network/codec/StreamCodec$14
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lzm;	f	val$codec6
	f	Lzm;	g	val$codec7
	f	Lzm;	h	val$codec8
	f	Lcom/mojang/datafixers/util/Function8;	i	val$constructor
	f	Ljava/util/function/Function;	j	val$getter1
	f	Ljava/util/function/Function;	k	val$getter2
	f	Ljava/util/function/Function;	l	val$getter3
	f	Ljava/util/function/Function;	m	val$getter4
	f	Ljava/util/function/Function;	n	val$getter5
	f	Ljava/util/function/Function;	o	val$getter6
	f	Ljava/util/function/Function;	p	val$getter7
	f	Ljava/util/function/Function;	q	val$getter8
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function8;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$7	net/minecraft/network/codec/StreamCodec$15
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lzm;	f	val$codec6
	f	Lzm;	g	val$codec7
	f	Lzm;	h	val$codec8
	f	Lzm;	i	val$codec9
	f	Lcom/mojang/datafixers/util/Function9;	j	val$constructor
	f	Ljava/util/function/Function;	k	val$getter1
	f	Ljava/util/function/Function;	l	val$getter2
	f	Ljava/util/function/Function;	m	val$getter3
	f	Ljava/util/function/Function;	n	val$getter4
	f	Ljava/util/function/Function;	o	val$getter5
	f	Ljava/util/function/Function;	p	val$getter6
	f	Ljava/util/function/Function;	q	val$getter7
	f	Ljava/util/function/Function;	r	val$getter8
	f	Ljava/util/function/Function;	s	val$getter9
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function9;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$8	net/minecraft/network/codec/StreamCodec$16
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lzm;	d	val$codec4
	f	Lzm;	e	val$codec5
	f	Lzm;	f	val$codec6
	f	Lzm;	g	val$codec7
	f	Lzm;	h	val$codec8
	f	Lzm;	i	val$codec9
	f	Lzm;	j	val$codec10
	f	Lzm;	k	val$codec11
	f	Lcom/mojang/datafixers/util/Function11;	l	val$constructor
	f	Ljava/util/function/Function;	m	val$getter1
	f	Ljava/util/function/Function;	n	val$getter2
	f	Ljava/util/function/Function;	o	val$getter3
	f	Ljava/util/function/Function;	p	val$getter4
	f	Ljava/util/function/Function;	q	val$getter5
	f	Ljava/util/function/Function;	r	val$getter6
	f	Ljava/util/function/Function;	s	val$getter7
	f	Ljava/util/function/Function;	t	val$getter8
	f	Ljava/util/function/Function;	u	val$getter9
	f	Ljava/util/function/Function;	v	val$getter10
	f	Ljava/util/function/Function;	w	val$getter11
	m	(Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function11;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$9	net/minecraft/network/codec/StreamCodec$17
	f	Ljava/util/function/Supplier;	b	inner
	f	Ljava/util/function/UnaryOperator;	a	val$factory
	m	(Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/util/function/UnaryOperator;)Lzm;	b	lambda$$0
c	zm$10	net/minecraft/network/codec/StreamCodec$2
	f	Lzn;	a	val$decoder
	f	Lzp;	b	val$encoder
	m	(Lzn;Lzp;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$11	net/minecraft/network/codec/StreamCodec$3
	f	Ljava/lang/Object;	a	val$instance
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$12	net/minecraft/network/codec/StreamCodec$4
	f	Ljava/util/function/Function;	a	val$to
	f	Ljava/util/function/Function;	b	val$from
	f	Lzm;	c	this$0
	m	(Lzm;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$13	net/minecraft/network/codec/StreamCodec$5
	f	Ljava/util/function/Function;	a	val$operation
	f	Lzm;	b	this$0
	m	(Lzm;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/Object;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/Object;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zm$14	net/minecraft/network/codec/StreamCodec$6
	f	Ljava/util/function/Function;	a	val$codec
	f	Ljava/util/function/Function;	b	val$type
	f	Lzm;	c	this$0
	m	(Lzm;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$15	net/minecraft/network/codec/StreamCodec$7
	f	Lzm;	a	val$codec1
	f	Ljava/util/function/Function;	b	val$constructor
	f	Ljava/util/function/Function;	c	val$getter1
	m	(Lzm;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$16	net/minecraft/network/codec/StreamCodec$8
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Ljava/util/function/BiFunction;	c	val$constructor
	f	Ljava/util/function/Function;	d	val$getter1
	f	Ljava/util/function/Function;	e	val$getter2
	m	(Lzm;Lzm;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$17	net/minecraft/network/codec/StreamCodec$9
	f	Lzm;	a	val$codec1
	f	Lzm;	b	val$codec2
	f	Lzm;	c	val$codec3
	f	Lcom/mojang/datafixers/util/Function3;	d	val$constructor
	f	Ljava/util/function/Function;	e	val$getter1
	f	Ljava/util/function/Function;	f	val$getter2
	f	Ljava/util/function/Function;	g	val$getter3
	m	(Lzm;Lzm;Lzm;Lcom/mojang/datafixers/util/Function3;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zm$a	net/minecraft/network/codec/StreamCodec$CodecOperation
	m	(Lzm;)Lzm;	apply	apply
c	zn	net/minecraft/network/codec/StreamDecoder
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	zo	net/minecraft/network/codec/StreamEncoder
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zp	net/minecraft/network/codec/StreamMemberEncoder
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
c	zq	net/minecraft/network/codec/package-info
c	zr	net/minecraft/network/package-info
c	zs	net/minecraft/network/protocol/BundleDelimiterPacket
	m	()V	<init>	<init>
	m	(Lws;)V	a	handle
	m	()Lzy;	a	type
c	zt	net/minecraft/network/protocol/BundlePacket
	f	Ljava/lang/Iterable;	a	packets
	m	(Ljava/lang/Iterable;)V	<init>	<init>
	m	()Ljava/lang/Iterable;	b	subPackets
	m	()Lzy;	a	type
c	zu	net/minecraft/network/protocol/BundlerInfo
	f	I	a	BUNDLE_SIZE_LIMIT
	m	(Lzy;Ljava/util/function/Function;Lzs;)Lzu;	a	createForPacket
	m	(Lzw;Ljava/util/function/Consumer;)V	a	unbundlePacket
	m	(Lzw;)Lzu$a;	a	startPacketBundling
c	zu$1	net/minecraft/network/protocol/BundlerInfo$1
	f	Lzy;	b	val$bundlePacketType
	f	Lzs;	c	val$delimiterPacket
	f	Ljava/util/function/Function;	d	val$constructor
	m	(Lzy;Lzs;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lzw;Ljava/util/function/Consumer;)V	a	unbundlePacket
	m	(Lzw;)Lzu$a;	a	startPacketBundling
c	zu$1$1	net/minecraft/network/protocol/BundlerInfo$1$1
	f	Ljava/util/List;	b	bundlePackets
	f	Lzu$1;	a	this$0
	m	(Lzu$1;)V	<init>	<init>
	m	(Lzw;)Lzw;	a	addPacket
c	zu$a	net/minecraft/network/protocol/BundlerInfo$Bundler
	m	(Lzw;)Lzw;	a	addPacket
c	zv	net/minecraft/network/protocol/CodecModifier
	m	(Lzm;Ljava/lang/Object;)Lzm;	apply	apply
c	zw	net/minecraft/network/protocol/Packet
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()Z	c	isSkippable
	m	()Z	d	isTerminal
	m	(Lzp;Lzn;)Lzm;	a	codec
c	zx	net/minecraft/network/protocol/PacketFlow
	f	Lzx;	a	SERVERBOUND
	f	Lzx;	b	CLIENTBOUND
	f	Ljava/lang/String;	c	id
	f	[Lzx;	d	$VALUES
	m	()[Lzx;	values	values
	m	(Ljava/lang/String;)Lzx;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Lzx;	a	getOpposite
	m	()Ljava/lang/String;	b	id
	m	()[Lzx;	c	$values
	m	()V	<clinit>	<clinit>
c	zy	net/minecraft/network/protocol/PacketType
	f	Lzx;	a	flow
	f	Lame;	b	id
	m	(Lzx;Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lzx;	a	flow
	m	()Lame;	b	id
c	zz	net/minecraft/network/protocol/PacketUtils
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Lzw;Lws;Laub;)V	a	ensureRunningOnSameThread
	m	(Lzw;Lws;Lbvx;)V	a	ensureRunningOnSameThread
	m	(Ljava/lang/Exception;Lzw;Lws;)Laa;	a	makeReportedException
	m	(Lp;Lws;Lzw;)V	a	fillCrashReport
	m	(Lzw;)Ljava/lang/String;	a	lambda$fillCrashReport$3
	m	(Lzw;)Ljava/lang/String;	b	lambda$fillCrashReport$2
	m	(Lzw;)Ljava/lang/String;	c	lambda$fillCrashReport$1
	m	(Lws;Lzw;)V	a	lambda$ensureRunningOnSameThread$0
	m	()V	<clinit>	<clinit>
c	aaa	net/minecraft/network/protocol/ProtocolCodecBuilder
	f	Lzl$a;	a	dispatchBuilder
	f	Lzx;	b	flow
	m	(Lzx;)V	<init>	<init>
	m	(Lzy;Lzm;)Laaa;	a	add
	m	()Lzm;	a	build
c	aab	net/minecraft/network/protocol/ProtocolInfoBuilder
	f	Lwe;	a	protocol
	f	Lzx;	b	flow
	f	Ljava/util/List;	c	codecs
	f	Lzu;	d	bundlerInfo
	m	(Lwe;Lzx;)V	<init>	<init>
	m	(Lzy;Lzm;)Laab;	a	addPacket
	m	(Lzy;Lzm;Lzv;)Laab;	a	addPacket
	m	(Lzy;Ljava/util/function/Function;Lzs;)Laab;	a	withBundlePacket
	m	(Ljava/util/function/Function;Ljava/util/List;Ljava/lang/Object;)Lzm;	a	buildPacketCodec
	m	(Lwe;Lzx;Ljava/util/List;)Lwu$a;	a	buildDetails
	m	(Ljava/lang/Object;)Laac;	a	buildUnbound
	m	()Laad;	a	buildUnbound
	m	(Lwe;Lzx;Ljava/util/function/Consumer;)Laac;	a	protocol
	m	(Lwe;Ljava/util/function/Consumer;)Laac;	a	serverboundProtocol
	m	(Lwe;Ljava/util/function/Consumer;)Laac;	b	clientboundProtocol
	m	(Lwe;Lzx;Ljava/util/function/Consumer;)Laad;	b	contextProtocol
	m	(Lwe;Ljava/util/function/Consumer;)Laad;	c	contextServerboundProtocol
	m	(Lwe;Ljava/util/function/Consumer;)Laad;	d	contextClientboundProtocol
c	aab$1	net/minecraft/network/protocol/ProtocolInfoBuilder$1
	f	Lwe;	a	val$protocol
	f	Lzx;	b	val$flow
	f	Ljava/util/List;	c	val$codecs
	m	(Lwe;Lzx;Ljava/util/List;)V	<init>	<init>
	m	()Lwe;	a	id
	m	()Lzx;	b	flow
	m	(Lwu$a$a;)V	a	listPackets
c	aab$2	net/minecraft/network/protocol/ProtocolInfoBuilder$2
	f	Ljava/util/List;	a	val$codecs
	f	Ljava/lang/Object;	b	val$context
	f	Lzu;	c	val$bundlerInfo
	f	Lwu$a;	d	val$details
	f	Laab;	e	this$0
	m	(Laab;Ljava/util/List;Ljava/lang/Object;Lzu;Lwu$a;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Lwu;	a	bind
	m	()Lwu$a;	a	details
c	aab$3	net/minecraft/network/protocol/ProtocolInfoBuilder$3
	f	Ljava/util/List;	a	val$codecs
	f	Lzu;	b	val$bundlerInfo
	f	Lwu$a;	c	val$details
	f	Laab;	d	this$0
	m	(Laab;Ljava/util/List;Lzu;Lwu$a;)V	<init>	<init>
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lwu;	a	bind
	m	()Lwu$a;	a	details
c	aab$a	net/minecraft/network/protocol/ProtocolInfoBuilder$CodecEntry
	f	Lzy;	a	type
	f	Lzm;	b	serializer
	f	Lzv;	c	modifier
	m	(Lzy;Lzm;Lzv;)V	<init>	<init>
	m	(Laaa;Ljava/util/function/Function;Ljava/lang/Object;)V	a	addToBuilder
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lzy;	a	type
	m	()Lzm;	b	serializer
	m	()Lzv;	c	modifier
c	aab$b	net/minecraft/network/protocol/ProtocolInfoBuilder$Implementation
	f	Lwe;	a	id
	f	Lzx;	b	flow
	f	Lzm;	c	codec
	f	Lzu;	d	bundlerInfo
	m	(Lwe;Lzx;Lzm;Lzu;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lwe;	a	id
	m	()Lzx;	b	flow
	m	()Lzm;	c	codec
	m	()Lzu;	d	bundlerInfo
c	aac	net/minecraft/network/protocol/SimpleUnboundProtocol
	m	(Ljava/util/function/Function;)Lwu;	a	bind
c	aad	net/minecraft/network/protocol/UnboundProtocol
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lwu;	a	bind
c	aae	net/minecraft/network/protocol/common/ClientCommonPacketListener
	m	(Laaj;)V	a	handleKeepAlive
	m	(Laak;)V	a	handlePing
	m	(Laag;)V	a	handleCustomPayload
	m	(Laai;)V	a	handleDisconnect
	m	(Laam;)V	a	handleResourcePackPush
	m	(Laal;)V	a	handleResourcePackPop
	m	(Laar;)V	a	handleUpdateTags
	m	(Laap;)V	a	handleStoreCookie
	m	(Laaq;)V	a	handleTransfer
	m	(Laah;)V	a	handleCustomReportDetails
	m	(Laan;)V	a	handleServerLinks
	m	(Laaf;)V	a	handleClearDialog
	m	(Laao;)V	a	handleShowDialog
c	aaf	net/minecraft/network/protocol/common/ClientboundClearDialogPacket
	f	Laaf;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aag	net/minecraft/network/protocol/common/ClientboundCustomPayloadPacket
	f	Labe;	c	payload
	f	I	d	MAX_PAYLOAD_SIZE
	f	Lzm;	a	GAMEPLAY_STREAM_CODEC
	f	Lzm;	b	CONFIG_STREAM_CODEC
	m	(Labe;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labe;	b	payload
	m	(Lws;)V	a	handle
	m	(Lame;)Lzm;	a	lambda$static$2
	m	(Ljava/util/ArrayList;)V	a	lambda$static$1
	m	(Lame;)Lzm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aah	net/minecraft/network/protocol/common/ClientboundCustomReportDetailsPacket
	f	Ljava/util/Map;	b	details
	f	I	c	MAX_DETAIL_KEY_LENGTH
	f	I	d	MAX_DETAIL_VALUE_LENGTH
	f	I	e	MAX_DETAIL_COUNT
	f	Lzm;	f	DETAILS_STREAM_CODEC
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	b	details
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aai	net/minecraft/network/protocol/common/ClientboundDisconnectPacket
	f	Lxo;	b	reason
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	reason
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aaj	net/minecraft/network/protocol/common/ClientboundKeepAlivePacket
	f	Lzm;	a	STREAM_CODEC
	f	J	b	id
	m	(J)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()J	b	getId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aak	net/minecraft/network/protocol/common/ClientboundPingPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()I	b	getId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aal	net/minecraft/network/protocol/common/ClientboundResourcePackPopPacket
	f	Ljava/util/Optional;	b	id
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	id
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aam	net/minecraft/network/protocol/common/ClientboundResourcePackPushPacket
	f	Ljava/util/UUID;	c	id
	f	Ljava/lang/String;	d	url
	f	Ljava/lang/String;	e	hash
	f	Z	f	required
	f	Ljava/util/Optional;	g	prompt
	f	I	a	MAX_HASH_LENGTH
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	id
	m	()Ljava/lang/String;	e	url
	m	()Ljava/lang/String;	f	hash
	m	()Z	g	required
	m	()Ljava/util/Optional;	h	prompt
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aan	net/minecraft/network/protocol/common/ClientboundServerLinksPacket
	f	Ljava/util/List;	b	links
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	links
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aao	net/minecraft/network/protocol/common/ClientboundShowDialogPacket
	f	Ljl;	c	dialog
	f	Lzm;	a	STREAM_CODEC
	f	Lzm;	b	CONTEXT_FREE_STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	dialog
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aap	net/minecraft/network/protocol/common/ClientboundStoreCookiePacket
	f	Lame;	c	key
	f	[B	d	payload
	f	Lzm;	a	STREAM_CODEC
	f	I	e	MAX_PAYLOAD_SIZE
	f	Lzm;	b	PAYLOAD_STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lame;[B)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	key
	m	()[B	e	payload
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aaq	net/minecraft/network/protocol/common/ClientboundTransferPacket
	f	Ljava/lang/String;	b	host
	f	I	c	port
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	host
	m	()I	e	port
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aar	net/minecraft/network/protocol/common/ClientboundUpdateTagsPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/util/Map;	b	tags
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laae;)V	a	handle
	m	()Ljava/util/Map;	b	getTags
	m	(Lws;)V	a	handle
	m	(Lwg;Lbag$a;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	aas	net/minecraft/network/protocol/common/CommonPacketTypes
	f	Lzy;	a	CLIENTBOUND_CLEAR_DIALOG
	f	Lzy;	b	CLIENTBOUND_CUSTOM_PAYLOAD
	f	Lzy;	c	CLIENTBOUND_CUSTOM_REPORT_DETAILS
	f	Lzy;	d	CLIENTBOUND_DISCONNECT
	f	Lzy;	e	CLIENTBOUND_KEEP_ALIVE
	f	Lzy;	f	CLIENTBOUND_PING
	f	Lzy;	g	CLIENTBOUND_RESOURCE_PACK_POP
	f	Lzy;	h	CLIENTBOUND_RESOURCE_PACK_PUSH
	f	Lzy;	i	CLIENTBOUND_SERVER_LINKS
	f	Lzy;	j	CLIENTBOUND_SHOW_DIALOG
	f	Lzy;	k	CLIENTBOUND_STORE_COOKIE
	f	Lzy;	l	CLIENTBOUND_TRANSFER
	f	Lzy;	m	CLIENTBOUND_UPDATE_TAGS
	f	Lzy;	n	SERVERBOUND_CLIENT_INFORMATION
	f	Lzy;	o	SERVERBOUND_CUSTOM_PAYLOAD
	f	Lzy;	p	SERVERBOUND_KEEP_ALIVE
	f	Lzy;	q	SERVERBOUND_PONG
	f	Lzy;	r	SERVERBOUND_RESOURCE_PACK
	f	Lzy;	s	SERVERBOUND_CUSTOM_CLICK_ACTION
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	aat	net/minecraft/network/protocol/common/ServerCommonPacketListener
	m	(Laax;)V	a	handleKeepAlive
	m	(Laay;)V	a	handlePong
	m	(Laaw;)V	a	handleCustomPayload
	m	(Laaz;)V	a	handleResourcePackResponse
	m	(Laau;)V	a	handleClientInformation
	m	(Laav;)V	a	handleCustomClickAction
c	aau	net/minecraft/network/protocol/common/ServerboundClientInformationPacket
	f	Latl;	b	information
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Latl;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Latl;	b	information
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aav	net/minecraft/network/protocol/common/ServerboundCustomClickActionPacket
	f	Lame;	b	id
	f	Ljava/util/Optional;	c	payload
	f	Lzm;	d	UNTRUSTED_TAG_CODEC
	f	Lzm;	a	STREAM_CODEC
	m	(Lame;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	()Ljava/util/Optional;	e	payload
	m	(Lws;)V	a	handle
	m	()Lur;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aaw	net/minecraft/network/protocol/common/ServerboundCustomPayloadPacket
	f	Labe;	b	payload
	f	I	c	MAX_PAYLOAD_SIZE
	f	Lzm;	a	STREAM_CODEC
	m	(Labe;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labe;	b	payload
	m	(Lws;)V	a	handle
	m	(Ljava/util/ArrayList;)V	a	lambda$static$1
	m	(Lame;)Lzm;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aax	net/minecraft/network/protocol/common/ServerboundKeepAlivePacket
	f	Lzm;	a	STREAM_CODEC
	f	J	b	id
	m	(J)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()J	b	getId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aay	net/minecraft/network/protocol/common/ServerboundPongPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()I	b	getId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aaz	net/minecraft/network/protocol/common/ServerboundResourcePackPacket
	f	Ljava/util/UUID;	b	id
	f	Laaz$a;	c	action
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/UUID;Laaz$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laat;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	id
	m	()Laaz$a;	e	action
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aaz$a	net/minecraft/network/protocol/common/ServerboundResourcePackPacket$Action
	f	Laaz$a;	a	SUCCESSFULLY_LOADED
	f	Laaz$a;	b	DECLINED
	f	Laaz$a;	c	FAILED_DOWNLOAD
	f	Laaz$a;	d	ACCEPTED
	f	Laaz$a;	e	DOWNLOADED
	f	Laaz$a;	f	INVALID_URL
	f	Laaz$a;	g	FAILED_RELOAD
	f	Laaz$a;	h	DISCARDED
	f	[Laaz$a;	i	$VALUES
	m	()[Laaz$a;	values	values
	m	(Ljava/lang/String;)Laaz$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Z	a	isTerminal
	m	()[Laaz$a;	b	$values
	m	()V	<clinit>	<clinit>
c	aba	net/minecraft/network/protocol/common/custom/BeeDebugPayload
	f	Laba$a;	c	beeInfo
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Laba$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laba$a;	b	beeInfo
	m	()V	<clinit>	<clinit>
c	aba$a	net/minecraft/network/protocol/common/custom/BeeDebugPayload$BeeInfo
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Lfis;	c	pos
	f	Lfaz;	d	path
	f	Ljb;	e	hivePos
	f	Ljb;	f	flowerPos
	f	I	g	travelTicks
	f	Ljava/util/Set;	h	goals
	f	Ljava/util/List;	i	blacklistedHives
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/UUID;ILfis;Lfaz;Ljb;Ljb;ILjava/util/Set;Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Ljb;)Z	a	hasHive
	m	()Ljava/lang/String;	a	generateName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	uuid
	m	()I	c	id
	m	()Lfis;	d	pos
	m	()Lfaz;	e	path
	m	()Ljb;	f	hivePos
	m	()Ljb;	g	flowerPos
	m	()I	h	travelTicks
	m	()Ljava/util/Set;	i	goals
	m	()Ljava/util/List;	j	blacklistedHives
	m	(Lwg;Lfaz;)V	a	lambda$write$0
c	abb	net/minecraft/network/protocol/common/custom/BrainDebugPayload
	f	Labb$a;	c	brainDump
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Labb$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labb$a;	b	brainDump
	m	()V	<clinit>	<clinit>
c	abb$a	net/minecraft/network/protocol/common/custom/BrainDebugPayload$BrainDump
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	d	profession
	f	I	e	xp
	f	F	f	health
	f	F	g	maxHealth
	f	Lfis;	h	pos
	f	Ljava/lang/String;	i	inventory
	f	Lfaz;	j	path
	f	Z	k	wantsGolem
	f	I	l	angerLevel
	f	Ljava/util/List;	m	activities
	f	Ljava/util/List;	n	behaviors
	f	Ljava/util/List;	o	memories
	f	Ljava/util/List;	p	gossips
	f	Ljava/util/Set;	q	pois
	f	Ljava/util/Set;	r	potentialPois
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/UUID;ILjava/lang/String;Ljava/lang/String;IFFLfis;Ljava/lang/String;Lfaz;ZILjava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Ljb;)Z	a	hasPoi
	m	(Ljb;)Z	b	hasPotentialPoi
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	uuid
	m	()I	b	id
	m	()Ljava/lang/String;	c	name
	m	()Ljava/lang/String;	d	profession
	m	()I	e	xp
	m	()F	f	health
	m	()F	g	maxHealth
	m	()Lfis;	h	pos
	m	()Ljava/lang/String;	i	inventory
	m	()Lfaz;	j	path
	m	()Z	k	wantsGolem
	m	()I	l	angerLevel
	m	()Ljava/util/List;	m	activities
	m	()Ljava/util/List;	n	behaviors
	m	()Ljava/util/List;	o	memories
	m	()Ljava/util/List;	p	gossips
	m	()Ljava/util/Set;	q	pois
	m	()Ljava/util/Set;	r	potentialPois
	m	(Lwg;Lfaz;)V	a	lambda$write$0
c	abc	net/minecraft/network/protocol/common/custom/BrandPayload
	f	Ljava/lang/String;	c	brand
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	brand
	m	()V	<clinit>	<clinit>
c	abd	net/minecraft/network/protocol/common/custom/BreezeDebugPayload
	f	Labd$a;	c	breezeInfo
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Labd$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labd$a;	b	breezeInfo
	m	()V	<clinit>	<clinit>
c	abd$a	net/minecraft/network/protocol/common/custom/BreezeDebugPayload$BreezeInfo
	f	Ljava/util/UUID;	a	uuid
	f	I	b	id
	f	Ljava/lang/Integer;	c	attackTarget
	f	Ljb;	d	jumpTarget
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/UUID;ILjava/lang/Integer;Ljb;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	a	generateName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	uuid
	m	()I	c	id
	m	()Ljava/lang/Integer;	d	attackTarget
	m	()Ljb;	e	jumpTarget
c	abe	net/minecraft/network/protocol/common/custom/CustomPacketPayload
	m	()Labe$b;	a	type
	m	(Lzp;Lzn;)Lzm;	a	codec
	m	(Ljava/lang/String;)Labe$b;	a	createType
	m	(Labe$a;Ljava/util/List;)Lzm;	a	codec
	m	(Labe$c;)Lame;	a	lambda$codec$0
c	abe$1	net/minecraft/network/protocol/common/custom/CustomPacketPayload$1
	f	Ljava/util/Map;	a	val$idToType
	f	Labe$a;	b	val$fallback
	m	(Ljava/util/Map;Labe$a;)V	<init>	<init>
	m	(Lame;)Lzm;	a	findCodec
	m	(Lwg;Labe$b;Labe;)V	a	writeCap
	m	(Lwg;Labe;)V	a	encode
	m	(Lwg;)Labe;	a	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	abe$a	net/minecraft/network/protocol/common/custom/CustomPacketPayload$FallbackProvider
	m	(Lame;)Lzm;	create	create
c	abe$b	net/minecraft/network/protocol/common/custom/CustomPacketPayload$Type
	f	Lame;	a	id
	m	(Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
c	abe$c	net/minecraft/network/protocol/common/custom/CustomPacketPayload$TypeAndCodec
	f	Labe$b;	a	type
	f	Lzm;	b	codec
	m	(Labe$b;Lzm;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labe$b;	a	type
	m	()Lzm;	b	codec
c	abf	net/minecraft/network/protocol/common/custom/DiscardedPayload
	f	Lame;	a	id
	m	(Lame;)V	<init>	<init>
	m	(Lame;I)Lzm;	a	codec
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	(ILame;Lwg;)Labf;	a	lambda$codec$1
	m	(Labf;Lwg;)V	a	lambda$codec$0
c	abg	net/minecraft/network/protocol/common/custom/GameEventDebugPayload
	f	Lamd;	c	gameEventType
	f	Lfis;	d	pos
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Lamd;Lfis;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	gameEventType
	m	()Lfis;	c	pos
	m	()V	<clinit>	<clinit>
c	abh	net/minecraft/network/protocol/common/custom/GameEventListenerDebugPayload
	f	Lejf;	c	listenerPos
	f	I	d	listenerRange
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lejf;I)V	<init>	<init>
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejf;	b	listenerPos
	m	()I	c	listenerRange
	m	()V	<clinit>	<clinit>
c	abi	net/minecraft/network/protocol/common/custom/GameTestAddMarkerDebugPayload
	f	Ljb;	c	pos
	f	I	d	color
	f	Ljava/lang/String;	e	text
	f	I	f	durationMs
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;ILjava/lang/String;I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()I	c	color
	m	()Ljava/lang/String;	d	text
	m	()I	e	durationMs
	m	()V	<clinit>	<clinit>
c	abj	net/minecraft/network/protocol/common/custom/GameTestClearMarkersDebugPayload
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	abk	net/minecraft/network/protocol/common/custom/GoalDebugPayload
	f	I	c	entityId
	f	Ljb;	d	pos
	f	Ljava/util/List;	e	goals
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(ILjb;Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	entityId
	m	()Ljb;	c	pos
	m	()Ljava/util/List;	d	goals
	m	(Lwg;Labk$a;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	abk$a	net/minecraft/network/protocol/common/custom/GoalDebugPayload$DebugGoal
	f	I	a	priority
	f	Z	b	isRunning
	f	Ljava/lang/String;	c	name
	m	(Lwg;)V	<init>	<init>
	m	(IZLjava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	priority
	m	()Z	b	isRunning
	m	()Ljava/lang/String;	c	name
c	abl	net/minecraft/network/protocol/common/custom/HiveDebugPayload
	f	Labl$a;	c	hiveInfo
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Labl$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Labl$a;	b	hiveInfo
	m	()V	<clinit>	<clinit>
c	abl$a	net/minecraft/network/protocol/common/custom/HiveDebugPayload$HiveInfo
	f	Ljb;	a	pos
	f	Ljava/lang/String;	b	hiveType
	f	I	c	occupantCount
	f	I	d	honeyLevel
	f	Z	e	sedated
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;Ljava/lang/String;IIZ)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ljava/lang/String;	b	hiveType
	m	()I	c	occupantCount
	m	()I	d	honeyLevel
	m	()Z	e	sedated
c	abm	net/minecraft/network/protocol/common/custom/NeighborUpdatesDebugPayload
	f	J	c	time
	f	Ljb;	d	pos
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(JLjb;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	time
	m	()Ljb;	c	pos
	m	()V	<clinit>	<clinit>
c	abn	net/minecraft/network/protocol/common/custom/PathfindingDebugPayload
	f	I	c	entityId
	f	Lfaz;	d	path
	f	F	e	maxNodeDistance
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(ILfaz;F)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	entityId
	m	()Lfaz;	c	path
	m	()F	d	maxNodeDistance
	m	()V	<clinit>	<clinit>
c	abo	net/minecraft/network/protocol/common/custom/PoiAddedDebugPayload
	f	Ljb;	c	pos
	f	Ljava/lang/String;	d	poiType
	f	I	e	freeTicketCount
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;Ljava/lang/String;I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()Ljava/lang/String;	c	poiType
	m	()I	d	freeTicketCount
	m	()V	<clinit>	<clinit>
c	abp	net/minecraft/network/protocol/common/custom/PoiRemovedDebugPayload
	f	Ljb;	c	pos
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()V	<clinit>	<clinit>
c	abq	net/minecraft/network/protocol/common/custom/PoiTicketCountDebugPayload
	f	Ljb;	c	pos
	f	I	d	freeTicketCount
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()I	c	freeTicketCount
	m	()V	<clinit>	<clinit>
c	abr	net/minecraft/network/protocol/common/custom/RaidsDebugPayload
	f	Ljava/util/List;	c	raidCenters
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	raidCenters
	m	()V	<clinit>	<clinit>
c	abs	net/minecraft/network/protocol/common/custom/RedstoneWireOrientationsDebugPayload
	f	J	c	time
	f	Ljava/util/List;	d	wires
	f	Labe$b;	a	TYPE
	f	Lzm;	b	STREAM_CODEC
	m	(JLjava/util/List;)V	<init>	<init>
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	time
	m	()Ljava/util/List;	c	wires
	m	()V	<clinit>	<clinit>
c	abs$a	net/minecraft/network/protocol/common/custom/RedstoneWireOrientationsDebugPayload$Wire
	f	Ljb;	b	pos
	f	Lfbt;	c	orientation
	f	Lzm;	a	STREAM_CODEC
	m	(Ljb;Lfbt;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Lfbt;	b	orientation
	m	()V	<clinit>	<clinit>
c	abt	net/minecraft/network/protocol/common/custom/StructuresDebugPayload
	f	Lamd;	c	dimension
	f	Leuq;	d	mainBB
	f	Ljava/util/List;	e	pieces
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Lamd;Leuq;Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	(Lwg;)Leuq;	b	readBoundingBox
	m	(Lwg;Leuq;)V	a	writeBoundingBox
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	dimension
	m	()Leuq;	c	mainBB
	m	()Ljava/util/List;	d	pieces
	m	(Lwg;Lwg;Labt$a;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	abt$a	net/minecraft/network/protocol/common/custom/StructuresDebugPayload$PieceInfo
	f	Leuq;	a	boundingBox
	f	Z	b	isStart
	m	(Lwg;)V	<init>	<init>
	m	(Leuq;Z)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leuq;	a	boundingBox
	m	()Z	b	isStart
c	abu	net/minecraft/network/protocol/common/custom/VillageSectionsDebugPayload
	f	Ljava/util/Set;	c	villageChunks
	f	Ljava/util/Set;	d	notVillageChunks
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Set;	b	villageChunks
	m	()Ljava/util/Set;	c	notVillageChunks
	m	()V	<clinit>	<clinit>
c	abv	net/minecraft/network/protocol/common/custom/WorldGenAttemptDebugPayload
	f	Ljb;	c	pos
	f	F	d	scale
	f	F	e	red
	f	F	f	green
	f	F	g	blue
	f	F	h	alpha
	f	Lzm;	a	STREAM_CODEC
	f	Labe$b;	b	TYPE
	m	(Lwg;)V	<init>	<init>
	m	(Ljb;FFFFF)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Labe$b;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()F	c	scale
	m	()F	d	red
	m	()F	e	green
	m	()F	f	blue
	m	()F	g	alpha
	m	()V	<clinit>	<clinit>
c	abw	net/minecraft/network/protocol/common/custom/package-info
c	abx	net/minecraft/network/protocol/common/package-info
c	aby	net/minecraft/network/protocol/configuration/ClientConfigurationPacketListener
	m	()Lwe;	b	protocol
	m	(Labz;)V	a	handleConfigurationFinished
	m	(Laca;)V	a	handleRegistryData
	m	(Lacd;)V	a	handleEnabledFeatures
	m	(Lacc;)V	a	handleSelectKnownPacks
	m	(Lacb;)V	a	handleResetChat
c	abz	net/minecraft/network/protocol/configuration/ClientboundFinishConfigurationPacket
	f	Labz;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laby;)V	a	handle
	m	()Z	d	isTerminal
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aca	net/minecraft/network/protocol/configuration/ClientboundRegistryDataPacket
	f	Lamd;	b	registry
	f	Ljava/util/List;	c	entries
	f	Lzm;	d	REGISTRY_KEY_STREAM_CODEC
	f	Lzm;	a	STREAM_CODEC
	m	(Lamd;Ljava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laby;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	registry
	m	()Ljava/util/List;	e	entries
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acb	net/minecraft/network/protocol/configuration/ClientboundResetChatPacket
	f	Lacb;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laby;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acc	net/minecraft/network/protocol/configuration/ClientboundSelectKnownPacks
	f	Ljava/util/List;	b	knownPacks
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Laby;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	knownPacks
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acd	net/minecraft/network/protocol/configuration/ClientboundUpdateEnabledFeaturesPacket
	f	Ljava/util/Set;	b	features
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/Set;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Laby;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Set;	b	features
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ace	net/minecraft/network/protocol/configuration/ConfigurationPacketTypes
	f	Lzy;	a	CLIENTBOUND_FINISH_CONFIGURATION
	f	Lzy;	b	CLIENTBOUND_REGISTRY_DATA
	f	Lzy;	c	CLIENTBOUND_UPDATE_ENABLED_FEATURES
	f	Lzy;	d	CLIENTBOUND_SELECT_KNOWN_PACKS
	f	Lzy;	e	CLIENTBOUND_RESET_CHAT
	f	Lzy;	f	SERVERBOUND_FINISH_CONFIGURATION
	f	Lzy;	g	SERVERBOUND_SELECT_KNOWN_PACKS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	acf	net/minecraft/network/protocol/configuration/ConfigurationProtocols
	f	Laac;	a	SERVERBOUND_TEMPLATE
	f	Lwu;	b	SERVERBOUND
	f	Laac;	c	CLIENTBOUND_TEMPLATE
	f	Lwu;	d	CLIENTBOUND
	m	()V	<init>	<init>
	m	(Laab;)V	a	lambda$static$1
	m	(Laab;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	acg	net/minecraft/network/protocol/configuration/ServerConfigurationPacketListener
	m	()Lwe;	b	protocol
	m	(Lach;)V	a	handleConfigurationFinished
	m	(Laci;)V	a	handleSelectKnownPacks
c	ach	net/minecraft/network/protocol/configuration/ServerboundFinishConfigurationPacket
	f	Lach;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacg;)V	a	handle
	m	()Z	d	isTerminal
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aci	net/minecraft/network/protocol/configuration/ServerboundSelectKnownPacks
	f	Ljava/util/List;	b	knownPacks
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacg;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	knownPacks
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acj	net/minecraft/network/protocol/configuration/package-info
c	ack	net/minecraft/network/protocol/cookie/ClientCookiePacketListener
	m	(Lacl;)V	a	handleRequestCookie
c	acl	net/minecraft/network/protocol/cookie/ClientboundCookieRequestPacket
	f	Lame;	b	key
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lame;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lack;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	key
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acm	net/minecraft/network/protocol/cookie/CookiePacketTypes
	f	Lzy;	a	CLIENTBOUND_COOKIE_REQUEST
	f	Lzy;	b	SERVERBOUND_COOKIE_RESPONSE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	acn	net/minecraft/network/protocol/cookie/ServerCookiePacketListener
	m	(Laco;)V	a	handleCookieResponse
c	aco	net/minecraft/network/protocol/cookie/ServerboundCookieResponsePacket
	f	Lame;	b	key
	f	[B	c	payload
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lame;[B)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacn;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	key
	m	()[B	e	payload
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acp	net/minecraft/network/protocol/cookie/package-info
c	acq	net/minecraft/network/protocol/game/ClientGamePacketListener
	m	()Lwe;	b	protocol
	m	(Lacr;)V	a	handleAddEntity
	m	(Lagg;)V	a	handleAddObjective
	m	(Lacs;)V	a	handleAnimate
	m	(Ladz;)V	a	handleHurtAnimation
	m	(Lact;)V	a	handleAwardStats
	m	(Lafc;)V	a	handleRecipeBookAdd
	m	(Lafd;)V	a	handleRecipeBookRemove
	m	(Lafe;)V	a	handleRecipeBookSettings
	m	(Lacv;)V	a	handleBlockDestruction
	m	(Laep;)V	a	handleOpenSignEditor
	m	(Lacw;)V	a	handleBlockEntityData
	m	(Lacx;)V	a	handleBlockEvent
	m	(Lacy;)V	a	handleBlockUpdate
	m	(Lagu;)V	a	handleSystemChat
	m	(Laes;)V	a	handlePlayerChat
	m	(Lads;)V	a	handleDisguisedChat
	m	(Ladr;)V	a	handleDeleteChat
	m	(Lafk;)V	a	handleChunkBlocksUpdate
	m	(Laei;)V	a	handleMapItemData
	m	(Ladj;)V	a	handleContainerClose
	m	(Ladk;)V	a	handleContainerContent
	m	(Lady;)V	a	handleHorseScreenOpen
	m	(Ladl;)V	a	handleContainerSetData
	m	(Ladm;)V	a	handleContainerSetSlot
	m	(Ladt;)V	a	handleEntityEvent
	m	(Laga;)V	a	handleEntityLinkPacket
	m	(Lagh;)V	a	handleSetEntityPassengersPacket
	m	(Ladv;)V	a	handleExplosion
	m	(Ladx;)V	a	handleGameEvent
	m	(Laec;)V	a	handleLevelChunkWithLight
	m	(Ladf;)V	a	handleChunksBiomes
	m	(Ladw;)V	a	handleForgetLevelChunk
	m	(Laed;)V	a	handleLevelEvent
	m	(Laeh;)V	a	handleLogin
	m	(Laek;)V	a	handleMoveEntity
	m	(Lael;)V	a	handleMinecartAlongTrack
	m	(Laez;)V	a	handleMovePlayer
	m	(Lafa;)V	a	handleRotatePlayer
	m	(Laee;)V	a	handleParticleEvent
	m	(Laer;)V	a	handlePlayerAbilities
	m	(Laew;)V	a	handlePlayerInfoRemove
	m	(Laex;)V	a	handlePlayerInfoUpdate
	m	(Laff;)V	a	handleRemoveEntities
	m	(Lafg;)V	a	handleRemoveMobEffect
	m	(Lafi;)V	a	handleRespawn
	m	(Lafj;)V	a	handleRotateMob
	m	(Lagf;)V	a	handleSetHeldSlot
	m	(Lafy;)V	a	handleSetDisplayObjective
	m	(Lafz;)V	a	handleSetEntityData
	m	(Lagb;)V	a	handleSetEntityMotion
	m	(Lagc;)V	a	handleSetEquipment
	m	(Lagd;)V	a	handleSetExperience
	m	(Lage;)V	a	handleSetHealth
	m	(Lagj;)V	a	handleSetPlayerTeamPacket
	m	(Lagk;)V	a	handleSetScore
	m	(Lafh;)V	a	handleResetScore
	m	(Lafx;)V	a	handleSetSpawn
	m	(Lagn;)V	a	handleSetTime
	m	(Lagr;)V	a	handleSoundEvent
	m	(Lagq;)V	a	handleSoundEntityEvent
	m	(Lagx;)V	a	handleTakeItemEntity
	m	(Ladu;)V	a	handleEntityPositionSync
	m	(Lagy;)V	a	handleTeleportEntity
	m	(Laha;)V	a	handleTickingState
	m	(Lahb;)V	a	handleTickingStep
	m	(Lahe;)V	a	handleUpdateAttributes
	m	(Lahf;)V	a	handleUpdateMobEffect
	m	(Laet;)V	a	handlePlayerCombatEnd
	m	(Laeu;)V	a	handlePlayerCombatEnter
	m	(Laev;)V	a	handlePlayerCombatKill
	m	(Ladc;)V	a	handleChangeDifficulty
	m	(Laft;)V	a	handleSetCamera
	m	(Laea;)V	a	handleInitializeBorder
	m	(Lafp;)V	a	handleSetBorderLerpSize
	m	(Lafq;)V	a	handleSetBorderSize
	m	(Lafr;)V	a	handleSetBorderWarningDelay
	m	(Lafs;)V	a	handleSetBorderWarningDistance
	m	(Lafo;)V	a	handleSetBorderCenter
	m	(Lagv;)V	a	handleTabListCustomisation
	m	(Lacz;)V	a	handleBossUpdate
	m	(Ladn;)V	a	handleItemCooldown
	m	(Laem;)V	a	handleMoveVehicle
	m	(Lahd;)V	a	handleUpdateAdvancementsPacket
	m	(Lafl;)V	a	handleSelectAdvancementsTab
	m	(Laeq;)V	a	handlePlaceRecipe
	m	(Ladi;)V	a	handleCommands
	m	(Lagt;)V	a	handleStopSoundEvent
	m	(Ladh;)V	a	handleCommandSuggestions
	m	(Lahg;)V	a	handleUpdateRecipes
	m	(Laey;)V	a	handleLookAt
	m	(Lagw;)V	a	handleTagQueryPacket
	m	(Laef;)V	a	handleLightUpdatePacket
	m	(Laen;)V	a	handleOpenBook
	m	(Laeo;)V	a	handleOpenScreen
	m	(Laej;)V	a	handleMerchantOffers
	m	(Lafv;)V	a	handleSetChunkCacheRadius
	m	(Lagl;)V	a	handleSetSimulationDistance
	m	(Lafu;)V	a	handleSetChunkCacheCenter
	m	(Lacu;)V	a	handleBlockChangedAck
	m	(Lafn;)V	a	setActionBarText
	m	(Lagm;)V	a	setSubtitleText
	m	(Lago;)V	a	setTitleText
	m	(Lagp;)V	a	setTitlesAnimation
	m	(Ladg;)V	a	handleTitlesClear
	m	(Lafm;)V	a	handleServerData
	m	(Lado;)V	a	handleCustomChatCompletions
	m	(Ladb;)V	a	handleBundlePacket
	m	(Ladp;)V	a	handleDamageEvent
	m	(Lags;)V	a	handleConfigurationStart
	m	(Lade;)V	a	handleChunkBatchStart
	m	(Ladd;)V	a	handleChunkBatchFinished
	m	(Ladq;)V	a	handleDebugSample
	m	(Lafb;)V	a	handleProjectilePowerPacket
	m	(Lafw;)V	a	handleSetCursorItem
	m	(Lagi;)V	a	handleSetPlayerInventory
	m	(Lagz;)V	a	handleTestInstanceBlockStatus
	m	(Lahc;)V	a	handleWaypoint
c	acr	net/minecraft/network/protocol/game/ClientboundAddEntityPacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	MAGICAL_QUANTIZATION
	f	D	c	LIMIT
	f	I	d	id
	f	Ljava/util/UUID;	e	uuid
	f	Lbzv;	f	type
	f	D	g	x
	f	D	h	y
	f	D	i	z
	f	I	j	xa
	f	I	k	ya
	f	I	l	za
	f	B	m	xRot
	f	B	n	yRot
	f	B	o	yHeadRot
	f	I	p	data
	m	(Lbzm;Latz;)V	<init>	<init>
	m	(Lbzm;Latz;I)V	<init>	<init>
	m	(Lbzm;ILjb;)V	<init>	<init>
	m	(ILjava/util/UUID;DDDFFLbzv;ILfis;D)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getId
	m	()Ljava/util/UUID;	e	getUUID
	m	()Lbzv;	f	getType
	m	()D	g	getX
	m	()D	h	getY
	m	()D	i	getZ
	m	()D	j	getXa
	m	()D	k	getYa
	m	()D	l	getZa
	m	()F	m	getXRot
	m	()F	n	getYRot
	m	()F	o	getYHeadRot
	m	()I	p	getData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acs	net/minecraft/network/protocol/game/ClientboundAnimatePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	SWING_MAIN_HAND
	f	I	c	WAKE_UP
	f	I	d	SWING_OFF_HAND
	f	I	e	CRITICAL_HIT
	f	I	f	MAGIC_CRITICAL_HIT
	f	I	g	id
	f	I	h	action
	m	(Lbzm;I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getId
	m	()I	e	getAction
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	act	net/minecraft/network/protocol/game/ClientboundAwardStatsPacket
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	stats
	f	Lzm;	c	STAT_VALUES_STREAM_CODEC
	f	Lzm;	a	STREAM_CODEC
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	stats
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acu	net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket
	f	I	b	sequence
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	sequence
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acv	net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	f	Ljb;	c	pos
	f	I	d	progress
	m	(ILjb;I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getId
	m	()Ljb;	e	getPos
	m	()I	f	getProgress
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acw	net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	Lebb;	c	type
	f	Lui;	d	tag
	m	(Leaz;Ljava/util/function/BiFunction;)Lacw;	a	create
	m	(Leaz;)Lacw;	a	create
	m	(Ljb;Lebb;Lui;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Lebb;	e	getType
	m	()Lui;	f	getTag
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acx	net/minecraft/network/protocol/game/ClientboundBlockEventPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	I	c	b0
	f	I	d	b1
	f	Ldpz;	e	block
	m	(Ljb;Ldpz;II)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljb;	b	getPos
	m	()I	e	getB0
	m	()I	f	getB1
	m	()Ldpz;	g	getBlock
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acy	net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	Leeb;	c	blockState
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldly;Ljb;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Leeb;	b	getBlockState
	m	()Ljb;	e	getPos
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acz	net/minecraft/network/protocol/game/ClientboundBossEventPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_DARKEN
	f	I	c	FLAG_MUSIC
	f	I	d	FLAG_FOG
	f	Ljava/util/UUID;	e	id
	f	Lacz$c;	f	operation
	f	Lacz$c;	g	REMOVE_OPERATION
	m	(Ljava/util/UUID;Lacz$c;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lbwz;)Lacz;	a	createAddPacket
	m	(Ljava/util/UUID;)Lacz;	a	createRemovePacket
	m	(Lbwz;)Lacz;	b	createUpdateProgressPacket
	m	(Lbwz;)Lacz;	c	createUpdateNamePacket
	m	(Lbwz;)Lacz;	d	createUpdateStylePacket
	m	(Lbwz;)Lacz;	e	createUpdatePropertiesPacket
	m	(Lwx;)V	a	write
	m	(ZZZ)I	a	encodeProperties
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lacz$b;)V	a	dispatch
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	acz$1	net/minecraft/network/protocol/game/ClientboundBossEventPacket$1
	m	()V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
c	acz$a	net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation
	f	Lxo;	a	name
	f	F	b	progress
	f	Lbwz$a;	c	color
	f	Lbwz$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playMusic
	f	Z	g	createWorldFog
	m	(Lbwz;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
c	acz$b	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler
	m	(Ljava/util/UUID;Lxo;FLbwz$a;Lbwz$b;ZZZ)V	a	add
	m	(Ljava/util/UUID;)V	a	remove
	m	(Ljava/util/UUID;F)V	a	updateProgress
	m	(Ljava/util/UUID;Lxo;)V	a	updateName
	m	(Ljava/util/UUID;Lbwz$a;Lbwz$b;)V	a	updateStyle
	m	(Ljava/util/UUID;ZZZ)V	a	updateProperties
c	acz$c	net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
c	acz$d	net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType
	f	Lacz$d;	a	ADD
	f	Lacz$d;	b	REMOVE
	f	Lacz$d;	c	UPDATE_PROGRESS
	f	Lacz$d;	d	UPDATE_NAME
	f	Lacz$d;	e	UPDATE_STYLE
	f	Lacz$d;	f	UPDATE_PROPERTIES
	f	Lzn;	g	reader
	f	[Lacz$d;	h	$VALUES
	m	()[Lacz$d;	values	values
	m	(Ljava/lang/String;)Lacz$d;	valueOf	valueOf
	m	(Ljava/lang/String;ILzn;)V	<init>	<init>
	m	(Lwx;)Lacz$c;	a	lambda$static$0
	m	()[Lacz$d;	a	$values
	m	()V	<clinit>	<clinit>
c	acz$e	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation
	f	Lxo;	a	name
	m	(Lwx;)V	<init>	<init>
	m	(Lxo;)V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	name
c	acz$f	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation
	f	F	a	progress
	m	(Lwx;)V	<init>	<init>
	m	(F)V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	progress
c	acz$g	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation
	f	Z	a	darkenScreen
	f	Z	b	playMusic
	f	Z	c	createWorldFog
	m	(ZZZ)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
c	acz$h	net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation
	f	Lbwz$a;	a	color
	f	Lbwz$b;	b	overlay
	m	(Lbwz$a;Lbwz$b;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	()Lacz$d;	a	getType
	m	(Ljava/util/UUID;Lacz$b;)V	a	dispatch
	m	(Lwx;)V	a	write
c	ada	net/minecraft/network/protocol/game/ClientboundBundleDelimiterPacket
	m	()V	<init>	<init>
	m	()Lzy;	a	type
c	adb	net/minecraft/network/protocol/game/ClientboundBundlePacket
	m	(Ljava/lang/Iterable;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lws;)V	a	handle
c	adc	net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket
	f	Lbxg;	b	difficulty
	f	Z	c	locked
	f	Lzm;	a	STREAM_CODEC
	m	(Lbxg;Z)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbxg;	b	difficulty
	m	()Z	e	locked
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	add	net/minecraft/network/protocol/game/ClientboundChunkBatchFinishedPacket
	f	I	b	batchSize
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	batchSize
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ade	net/minecraft/network/protocol/game/ClientboundChunkBatchStartPacket
	f	Lade;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adf	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket
	f	Ljava/util/List;	b	chunkBiomeData
	f	Lzm;	a	STREAM_CODEC
	f	I	c	TWO_MEGABYTES
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Ladf;	a	forChunks
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	chunkBiomeData
	m	(Lws;)V	a	handle
	m	(Lwg;Ladf$a;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	adf$a	net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData
	f	Ldlz;	a	pos
	f	[B	b	buffer
	m	(Legi;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Ldlz;[B)V	<init>	<init>
	m	(Legi;)I	a	calculateChunkSize
	m	()Lwg;	a	getReadBuffer
	m	()Lio/netty/buffer/ByteBuf;	d	getWriteBuffer
	m	(Lwg;Legi;)V	a	extractChunkData
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlz;	b	pos
	m	()[B	c	buffer
c	adg	net/minecraft/network/protocol/game/ClientboundClearTitlesPacket
	f	Lzm;	a	STREAM_CODEC
	f	Z	b	resetTimes
	m	(Z)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	b	shouldResetTimes
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adh	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket
	f	I	b	id
	f	I	c	start
	f	I	d	length
	f	Ljava/util/List;	e	suggestions
	f	Lzm;	a	STREAM_CODEC
	m	(ILcom/mojang/brigadier/suggestion/Suggestions;)V	<init>	<init>
	m	(IIILjava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lcom/mojang/brigadier/suggestion/Suggestions;	b	toSuggestions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	e	id
	m	()I	f	start
	m	()I	g	length
	m	()Ljava/util/List;	h	suggestions
	m	(Lws;)V	a	handle
	m	(Lcom/mojang/brigadier/context/StringRange;Ladh$a;)Lcom/mojang/brigadier/suggestion/Suggestion;	a	lambda$toSuggestions$1
	m	(Lcom/mojang/brigadier/suggestion/Suggestion;)Ladh$a;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	adh$a	net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket$Entry
	f	Ljava/lang/String;	b	text
	f	Ljava/util/Optional;	c	tooltip
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	text
	m	()Ljava/util/Optional;	b	tooltip
	m	()V	<clinit>	<clinit>
c	adi	net/minecraft/network/protocol/game/ClientboundCommandsPacket
	f	Lzm;	a	STREAM_CODEC
	f	B	b	MASK_TYPE
	f	B	c	FLAG_EXECUTABLE
	f	B	d	FLAG_REDIRECT
	f	B	e	FLAG_CUSTOM_SUGGESTIONS
	f	B	f	FLAG_RESTRICTED
	f	B	g	TYPE_ROOT
	f	B	h	TYPE_LITERAL
	f	B	i	TYPE_ARGUMENT
	f	I	j	rootIndex
	f	Ljava/util/List;	k	entries
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;Ladi$e;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Ljava/util/List;Ljava/util/function/BiPredicate;)V	a	validateEntries
	m	(Ljava/util/List;)V	a	validateEntries
	m	(Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	enumerateNodes
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ladi$e;)Ljava/util/List;	a	createEntries
	m	(Lwg;)Ladi$b;	b	readNode
	m	(Lwg;B)Ladi$g;	a	read
	m	(Lcom/mojang/brigadier/tree/CommandNode;Ladi$e;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ladi$b;	a	createEntry
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Leg;Ladi$d;)Lcom/mojang/brigadier/tree/RootCommandNode;	a	getRoot
	m	(Lws;)V	a	handle
	m	(Ljava/util/function/BiPredicate;Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntSet;I)Z	a	lambda$validateEntries$1
	m	(Lwg;Ladi$b;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	adi$a	net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub
	f	Ljava/lang/String;	a	id
	f	Lik$a;	b	argumentType
	f	Lame;	c	suggestionId
	m	(Ljava/lang/String;Lik$a;Lame;)V	<init>	<init>
	m	(Leg;Ladi$d;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
	m	(Lwg;)V	a	write
	m	(Lwg;Lik$a;)V	a	serializeCap
	m	(Lwg;Lik;Lik$a;)V	a	serializeCap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	id
	m	()Lik$a;	b	argumentType
	m	()Lame;	c	suggestionId
c	adi$b	net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry
	f	Ladi$g;	a	stub
	f	I	b	flags
	f	I	c	redirect
	f	[I	d	children
	m	(Ladi$g;II[I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	a	canBuild
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;)Z	b	canResolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ladi$g;	a	stub
	m	()I	b	flags
	m	()I	c	redirect
	m	()[I	d	children
c	adi$c	net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub
	f	Ljava/lang/String;	a	id
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Leg;Ladi$d;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	id
c	adi$d	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeBuilder
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	createLiteral
	m	(Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;Lame;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	createArgument
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	configure
c	adi$e	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeInspector
	m	(Lcom/mojang/brigadier/tree/ArgumentCommandNode;)Lame;	a	suggestionId
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Z	a	isExecutable
	m	(Lcom/mojang/brigadier/tree/CommandNode;)Z	b	isRestricted
c	adi$f	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver
	f	Leg;	a	context
	f	Ladi$d;	b	builder
	f	Ljava/util/List;	c	entries
	f	Ljava/util/List;	d	nodes
	m	(Leg;Ladi$d;Ljava/util/List;)V	<init>	<init>
	m	(I)Lcom/mojang/brigadier/tree/CommandNode;	a	resolve
c	adi$g	net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub
	m	(Leg;Ladi$d;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	build
	m	(Lwg;)V	a	write
c	adj	net/minecraft/network/protocol/game/ClientboundContainerClosePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adk	net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket
	f	I	b	containerId
	f	I	c	stateId
	f	Ljava/util/List;	d	items
	f	Ldcv;	e	carriedItem
	f	Lzm;	a	STREAM_CODEC
	m	(IILjava/util/List;Ldcv;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	containerId
	m	()I	e	stateId
	m	()Ljava/util/List;	f	items
	m	()Ldcv;	g	carriedItem
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adl	net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	id
	f	I	d	value
	m	(III)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	()I	e	getId
	m	()I	f	getValue
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adm	net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	stateId
	f	I	d	slot
	f	Ldcv;	e	itemStack
	m	(IIILdcv;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	()I	e	getSlot
	m	()Ldcv;	f	getItem
	m	()I	g	getStateId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adn	net/minecraft/network/protocol/game/ClientboundCooldownPacket
	f	Lame;	b	cooldownGroup
	f	I	c	duration
	f	Lzm;	a	STREAM_CODEC
	m	(Lame;I)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	cooldownGroup
	m	()I	e	duration
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ado	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket
	f	Lado$a;	b	action
	f	Ljava/util/List;	c	entries
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lado$a;Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lado$a;	b	action
	m	()Ljava/util/List;	e	entries
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ado$a	net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action
	f	Lado$a;	a	ADD
	f	Lado$a;	b	REMOVE
	f	Lado$a;	c	SET
	f	[Lado$a;	d	$VALUES
	m	()[Lado$a;	values	values
	m	(Ljava/lang/String;)Lado$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lado$a;	a	$values
	m	()V	<clinit>	<clinit>
c	adp	net/minecraft/network/protocol/game/ClientboundDamageEventPacket
	f	I	b	entityId
	f	Ljl;	c	sourceType
	f	I	d	sourceCauseId
	f	I	e	sourceDirectId
	f	Ljava/util/Optional;	f	sourcePosition
	f	Lzm;	a	STREAM_CODEC
	m	(Lbzm;Lbyb;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(ILjl;IILjava/util/Optional;)V	<init>	<init>
	m	(Lwg;I)V	a	writeOptionalEntityId
	m	(Lwg;)I	a	readOptionalEntityId
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbyb;	a	getSource
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	entityId
	m	()Ljl;	e	sourceType
	m	()I	f	sourceCauseId
	m	()I	g	sourceDirectId
	m	()Ljava/util/Optional;	h	sourcePosition
	m	(Lws;)V	a	handle
	m	(Lwg;Lfis;)V	a	lambda$write$1
	m	(Lwg;)Lfis;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	adq	net/minecraft/network/protocol/game/ClientboundDebugSamplePacket
	f	[J	b	sample
	f	Lbrv;	c	debugSampleType
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	([JLbrv;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[J	b	sample
	m	()Lbrv;	e	debugSampleType
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adr	net/minecraft/network/protocol/game/ClientboundDeleteChatPacket
	f	Lya$a;	b	messageSignature
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lya$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lya$a;	b	messageSignature
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ads	net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket
	f	Lxo;	b	message
	f	Lxk$a;	c	chatType
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;Lxk$a;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	c	isSkippable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	message
	m	()Lxk$a;	e	chatType
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adt	net/minecraft/network/protocol/game/ClientboundEntityEventPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	entityId
	f	B	c	eventId
	m	(Lbzm;B)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbzm;	a	getEntity
	m	()B	b	getEventId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adu	net/minecraft/network/protocol/game/ClientboundEntityPositionSyncPacket
	f	I	b	id
	f	Lcaz;	c	values
	f	Z	d	onGround
	f	Lzm;	a	STREAM_CODEC
	m	(ILcaz;Z)V	<init>	<init>
	m	(Lbzm;)Ladu;	a	of
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()Lcaz;	e	values
	m	()Z	f	onGround
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adv	net/minecraft/network/protocol/game/ClientboundExplodePacket
	f	Lfis;	b	center
	f	Ljava/util/Optional;	c	playerKnockback
	f	Lmc;	d	explosionParticle
	f	Ljl;	e	explosionSound
	f	Lzm;	a	STREAM_CODEC
	m	(Lfis;Ljava/util/Optional;Lmc;Ljl;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	b	center
	m	()Ljava/util/Optional;	e	playerKnockback
	m	()Lmc;	f	explosionParticle
	m	()Ljl;	g	explosionSound
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adw	net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket
	f	Ldlz;	b	pos
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ldlz;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlz;	b	pos
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adx	net/minecraft/network/protocol/game/ClientboundGameEventPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ladx$a;	b	NO_RESPAWN_BLOCK_AVAILABLE
	f	Ladx$a;	c	START_RAINING
	f	Ladx$a;	d	STOP_RAINING
	f	Ladx$a;	e	CHANGE_GAME_MODE
	f	Ladx$a;	f	WIN_GAME
	f	Ladx$a;	g	DEMO_EVENT
	f	Ladx$a;	h	PLAY_ARROW_HIT_SOUND
	f	Ladx$a;	i	RAIN_LEVEL_CHANGE
	f	Ladx$a;	j	THUNDER_LEVEL_CHANGE
	f	Ladx$a;	k	PUFFER_FISH_STING
	f	Ladx$a;	l	GUARDIAN_ELDER_EFFECT
	f	Ladx$a;	m	IMMEDIATE_RESPAWN
	f	Ladx$a;	n	LIMITED_CRAFTING
	f	Ladx$a;	o	LEVEL_CHUNKS_LOAD_START
	f	I	p	DEMO_PARAM_INTRO
	f	I	q	DEMO_PARAM_HINT_1
	f	I	r	DEMO_PARAM_HINT_2
	f	I	s	DEMO_PARAM_HINT_3
	f	I	t	DEMO_PARAM_HINT_4
	f	Ladx$a;	u	event
	f	F	v	param
	m	(Ladx$a;F)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ladx$a;	b	getEvent
	m	()F	e	getParam
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adx$a	net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	TYPES
	f	I	b	id
	m	(I)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	ady	net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	f	I	c	inventoryColumns
	f	I	d	entityId
	m	(III)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	()I	e	getInventoryColumns
	m	()I	f	getEntityId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	adz	net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket
	f	I	b	id
	f	F	c	yaw
	f	Lzm;	a	STREAM_CODEC
	m	(Lcam;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(IF)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()F	e	yaw
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aea	net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	newCenterX
	f	D	c	newCenterZ
	f	D	d	oldSize
	f	D	e	newSize
	f	J	f	lerpTime
	f	I	g	newAbsoluteMaxSize
	f	I	h	warningBlocks
	f	I	i	warningTime
	m	(Lwg;)V	<init>	<init>
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()D	b	getNewCenterX
	m	()D	e	getNewCenterZ
	m	()D	f	getNewSize
	m	()D	g	getOldSize
	m	()J	h	getLerpTime
	m	()I	i	getNewAbsoluteMaxSize
	m	()I	j	getWarningTime
	m	()I	k	getWarningBlocks
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aeb	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData
	f	Lzm;	a	HEIGHTMAPS_STREAM_CODEC
	f	I	b	TWO_MEGABYTES
	f	Ljava/util/Map;	c	heightmaps
	f	[B	d	buffer
	f	Ljava/util/List;	e	blockEntitiesData
	m	(Legi;)V	<init>	<init>
	m	(Lwx;II)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	(Legi;)I	a	calculateChunkSize
	m	()Lio/netty/buffer/ByteBuf;	c	getWriteBuffer
	m	(Lwg;Legi;)V	a	extractChunkData
	m	(II)Ljava/util/function/Consumer;	a	getBlockEntitiesTagsConsumer
	m	(Laeb$b;II)V	a	getBlockEntitiesTags
	m	()Lwg;	a	getReadBuffer
	m	()Ljava/util/Map;	b	getHeightmaps
	m	(IILaeb$b;)V	a	lambda$getBlockEntitiesTagsConsumer$3
	m	(Ljava/util/Map$Entry;)[J	a	lambda$new$2
	m	(Ljava/util/Map$Entry;)Z	b	lambda$new$1
	m	(I)Ljava/util/Map;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aeb$a	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo
	f	Lzm;	a	STREAM_CODEC
	f	Lzm;	b	LIST_STREAM_CODEC
	f	I	c	packedXZ
	f	I	d	y
	f	Lebb;	e	type
	f	Lui;	f	tag
	m	(IILebb;Lui;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	(Leaz;)Laeb$a;	a	create
	m	()V	<clinit>	<clinit>
c	aeb$b	net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput
	m	(Ljb;Lebb;Lui;)V	accept	accept
c	aec	net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
	f	Laeb;	d	chunkData
	f	Laeg;	e	lightData
	m	(Legi;Lfaa;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getX
	m	()I	e	getZ
	m	()Laeb;	f	getChunkData
	m	()Laeg;	g	getLightData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aed	net/minecraft/network/protocol/game/ClientboundLevelEventPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	type
	f	Ljb;	c	pos
	f	I	d	data
	f	Z	e	globalEvent
	m	(ILjb;IZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	b	isGlobalEvent
	m	()I	e	getType
	m	()I	f	getData
	m	()Ljb;	g	getPos
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aee	net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	xDist
	f	F	f	yDist
	f	F	g	zDist
	f	F	h	maxSpeed
	f	I	i	count
	f	Z	j	overrideLimiter
	f	Z	k	alwaysShow
	f	Lmc;	l	particle
	m	(Lmc;ZZDDDFFFFI)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	b	isOverrideLimiter
	m	()Z	e	alwaysShow
	m	()D	f	getX
	m	()D	g	getY
	m	()D	h	getZ
	m	()F	i	getXDist
	m	()F	j	getYDist
	m	()F	k	getZDist
	m	()F	l	getMaxSpeed
	m	()I	m	getCount
	m	()Lmc;	n	getParticle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aef	net/minecraft/network/protocol/game/ClientboundLightUpdatePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
	f	Laeg;	d	lightData
	m	(Ldlz;Lfaa;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getX
	m	()I	e	getZ
	m	()Laeg;	f	getLightData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aeg	net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData
	f	Lzm;	a	DATA_LAYER_STREAM_CODEC
	f	Ljava/util/BitSet;	b	skyYMask
	f	Ljava/util/BitSet;	c	blockYMask
	f	Ljava/util/BitSet;	d	emptySkyYMask
	f	Ljava/util/BitSet;	e	emptyBlockYMask
	f	Ljava/util/List;	f	skyUpdates
	f	Ljava/util/List;	g	blockUpdates
	m	(Ldlz;Lfaa;Ljava/util/BitSet;Ljava/util/BitSet;)V	<init>	<init>
	m	(Lwg;II)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Ldlz;Lfaa;Ldnd;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V	a	prepareSectionData
	m	()Ljava/util/BitSet;	a	getSkyYMask
	m	()Ljava/util/BitSet;	b	getEmptySkyYMask
	m	()Ljava/util/List;	c	getSkyUpdates
	m	()Ljava/util/BitSet;	d	getBlockYMask
	m	()Ljava/util/BitSet;	e	getEmptyBlockYMask
	m	()Ljava/util/List;	f	getBlockUpdates
	m	()V	<clinit>	<clinit>
c	aeh	net/minecraft/network/protocol/game/ClientboundLoginPacket
	f	I	b	playerId
	f	Z	c	hardcore
	f	Ljava/util/Set;	d	levels
	f	I	e	maxPlayers
	f	I	f	chunkRadius
	f	I	g	simulationDistance
	f	Z	h	reducedDebugInfo
	f	Z	i	showDeathScreen
	f	Z	j	doLimitedCrafting
	f	Lahh;	k	commonPlayerSpawnInfo
	f	Z	l	enforcesSecureChat
	f	Lzm;	a	STREAM_CODEC
	m	(Lwx;)V	<init>	<init>
	m	(IZLjava/util/Set;IIIZZZLahh;Z)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	playerId
	m	()Z	e	hardcore
	m	()Ljava/util/Set;	f	levels
	m	()I	g	maxPlayers
	m	()I	h	chunkRadius
	m	()I	i	simulationDistance
	m	()Z	j	reducedDebugInfo
	m	()Z	k	showDeathScreen
	m	()Z	l	doLimitedCrafting
	m	()Lahh;	m	commonPlayerSpawnInfo
	m	()Z	n	enforcesSecureChat
	m	(Lws;)V	a	handle
	m	(Lwg;)Lamd;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	aei	net/minecraft/network/protocol/game/ClientboundMapItemDataPacket
	f	Lfce;	b	mapId
	f	B	c	scale
	f	Z	d	locked
	f	Ljava/util/Optional;	e	decorations
	f	Ljava/util/Optional;	f	colorPatch
	f	Lzm;	a	STREAM_CODEC
	m	(Lfce;BZLjava/util/Collection;Lfcg$c;)V	<init>	<init>
	m	(Lfce;BZLjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lfcg;)V	a	applyToMap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfce;	b	mapId
	m	()B	e	scale
	m	()Z	f	locked
	m	()Ljava/util/Optional;	g	decorations
	m	()Ljava/util/Optional;	h	colorPatch
	m	(Lws;)V	a	handle
	m	(Lfcg;Lfcg$c;)V	a	lambda$applyToMap$0
	m	()V	<clinit>	<clinit>
c	aej	net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	f	Ldlr;	c	offers
	f	I	d	villagerLevel
	f	I	e	villagerXp
	f	Z	f	showProgress
	f	Z	g	canRestock
	m	(ILdlr;IIZZ)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	()Ldlr;	e	getOffers
	m	()I	f	getVillagerLevel
	m	()I	g	getVillagerXp
	m	()Z	h	showProgress
	m	()Z	i	canRestock
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aek	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket
	f	I	a	entityId
	f	S	b	xa
	f	S	c	ya
	f	S	d	za
	f	B	e	yRot
	f	B	f	xRot
	f	Z	g	onGround
	f	Z	h	hasRot
	f	Z	i	hasPos
	m	(ISSSBBZZZ)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	(Ldmu;)Lbzm;	a	getEntity
	m	()S	b	getXa
	m	()S	e	getYa
	m	()S	f	getZa
	m	()F	g	getYRot
	m	()F	h	getXRot
	m	()Z	i	hasRotation
	m	()Z	j	hasPosition
	m	()Z	k	isOnGround
	m	(Lws;)V	a	handle
c	aek$a	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos
	f	Lzm;	j	STREAM_CODEC
	m	(ISSSZ)V	<init>	<init>
	m	(Lwg;)Laek$a;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aek$b	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot
	f	Lzm;	j	STREAM_CODEC
	m	(ISSSBBZ)V	<init>	<init>
	m	(Lwg;)Laek$b;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aek$c	net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot
	f	Lzm;	j	STREAM_CODEC
	m	(IBBZ)V	<init>	<init>
	m	(Lwg;)Laek$c;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ael	net/minecraft/network/protocol/game/ClientboundMoveMinecartPacket
	f	I	b	entityId
	f	Ljava/util/List;	c	lerpSteps
	f	Lzm;	a	STREAM_CODEC
	m	(ILjava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbzm;	a	getEntity
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	entityId
	m	()Ljava/util/List;	e	lerpSteps
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aem	net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket
	f	Lfis;	b	position
	f	F	c	yRot
	f	F	d	xRot
	f	Lzm;	a	STREAM_CODEC
	m	(Lfis;FF)V	<init>	<init>
	m	(Lbzm;)Laem;	a	fromEntity
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	b	position
	m	()F	e	yRot
	m	()F	f	xRot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aen	net/minecraft/network/protocol/game/ClientboundOpenBookPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lbxi;	b	hand
	m	(Lbxi;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lbxi;	b	getHand
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aeo	net/minecraft/network/protocol/game/ClientboundOpenScreenPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	f	Lczv;	c	type
	f	Lxo;	d	title
	m	(ILczv;Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getContainerId
	m	()Lczv;	e	getType
	m	()Lxo;	f	getTitle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aep	net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	Z	c	isFrontText
	m	(Ljb;Z)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Z	e	isFrontText
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aeq	net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket
	f	I	b	containerId
	f	Ldis;	c	recipeDisplay
	f	Lzm;	a	STREAM_CODEC
	m	(ILdis;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	containerId
	m	()Ldis;	e	recipeDisplay
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aer	net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_INVULNERABLE
	f	I	c	FLAG_FLYING
	f	I	d	FLAG_CAN_FLY
	f	I	e	FLAG_INSTABUILD
	f	Z	f	invulnerable
	f	Z	g	isFlying
	f	Z	h	canFly
	f	Z	i	instabuild
	f	F	j	flyingSpeed
	f	F	k	walkingSpeed
	m	(Lcup;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	b	isInvulnerable
	m	()Z	e	isFlying
	m	()Z	f	canFly
	m	()Z	g	canInstabuild
	m	()F	h	getFlyingSpeed
	m	()F	i	getWalkingSpeed
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aes	net/minecraft/network/protocol/game/ClientboundPlayerChatPacket
	f	I	b	globalIndex
	f	Ljava/util/UUID;	c	sender
	f	I	d	index
	f	Lya;	e	signature
	f	Lyh$a;	f	body
	f	Lxo;	g	unsignedContent
	f	Lxs;	h	filterMask
	f	Lxk$a;	i	chatType
	f	Lzm;	a	STREAM_CODEC
	m	(Lwx;)V	<init>	<init>
	m	(ILjava/util/UUID;ILya;Lyh$a;Lxo;Lxs;Lxk$a;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	c	isSkippable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	globalIndex
	m	()Ljava/util/UUID;	e	sender
	m	()I	f	index
	m	()Lya;	g	signature
	m	()Lyh$a;	h	body
	m	()Lxo;	i	unsignedContent
	m	()Lxs;	j	filterMask
	m	()Lxk$a;	k	chatType
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aet	net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	duration
	m	(Lbxy;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aeu	net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket
	f	Laeu;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aev	net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket
	f	I	b	playerId
	f	Lxo;	c	message
	f	Lzm;	a	STREAM_CODEC
	m	(ILxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	c	isSkippable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	playerId
	m	()Lxo;	e	message
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aew	net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket
	f	Ljava/util/List;	b	profileIds
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	profileIds
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aex	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/util/EnumSet;	b	actions
	f	Ljava/util/List;	c	entries
	m	(Ljava/util/EnumSet;Ljava/util/Collection;)V	<init>	<init>
	m	(Laex$a;Lauc;)V	<init>	<init>
	m	(Ljava/util/Collection;)Laex;	a	createPlayerInitializing
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/util/EnumSet;	b	actions
	m	()Ljava/util/List;	e	entries
	m	()Ljava/util/List;	f	newEntries
	m	()Ljava/lang/String;	toString	toString
	m	(Lws;)V	a	handle
	m	(Lwg;Laex$b;)V	a	lambda$write$1
	m	(Lwg;)Laex$b;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	aex$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action
	f	Laex$a;	a	ADD_PLAYER
	f	Laex$a;	b	INITIALIZE_CHAT
	f	Laex$a;	c	UPDATE_GAME_MODE
	f	Laex$a;	d	UPDATE_LISTED
	f	Laex$a;	e	UPDATE_LATENCY
	f	Laex$a;	f	UPDATE_DISPLAY_NAME
	f	Laex$a;	g	UPDATE_LIST_ORDER
	f	Laex$a;	h	UPDATE_HAT
	f	Laex$a$a;	i	reader
	f	Laex$a$b;	j	writer
	f	[Laex$a;	k	$VALUES
	m	()[Laex$a;	values	values
	m	(Ljava/lang/String;)Laex$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILaex$a$a;Laex$a$b;)V	<init>	<init>
	m	(Lwx;Laex$b;)V	a	lambda$static$15
	m	(Laex$c;Lwx;)V	a	lambda$static$14
	m	(Lwx;Laex$b;)V	b	lambda$static$13
	m	(Laex$c;Lwx;)V	b	lambda$static$12
	m	(Lwx;Laex$b;)V	c	lambda$static$11
	m	(Laex$c;Lwx;)V	c	lambda$static$10
	m	(Lwx;Laex$b;)V	d	lambda$static$9
	m	(Laex$c;Lwx;)V	d	lambda$static$8
	m	(Lwx;Laex$b;)V	e	lambda$static$7
	m	(Laex$c;Lwx;)V	e	lambda$static$6
	m	(Lwx;Laex$b;)V	f	lambda$static$5
	m	(Laex$c;Lwx;)V	f	lambda$static$4
	m	(Lwx;Laex$b;)V	g	lambda$static$3
	m	(Laex$c;Lwx;)V	g	lambda$static$2
	m	(Lwx;Laex$b;)V	h	lambda$static$1
	m	(Laex$c;Lwx;)V	h	lambda$static$0
	m	()[Laex$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aex$a$a	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader
	m	(Laex$c;Lwx;)V	read	read
c	aex$a$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer
	m	(Lwx;Laex$b;)V	write	write
c	aex$b	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Ldmr;	e	gameMode
	f	Lxo;	f	displayName
	f	Z	g	showHat
	f	I	h	listOrder
	f	Lyf$a;	i	chatSession
	m	(Lauc;)V	<init>	<init>
	m	(Ljava/util/UUID;Lcom/mojang/authlib/GameProfile;ZILdmr;Lxo;ZILyf$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	profileId
	m	()Lcom/mojang/authlib/GameProfile;	b	profile
	m	()Z	c	listed
	m	()I	d	latency
	m	()Ldmr;	e	gameMode
	m	()Lxo;	f	displayName
	m	()Z	g	showHat
	m	()I	h	listOrder
	m	()Lyf$a;	i	chatSession
c	aex$c	net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder
	f	Ljava/util/UUID;	a	profileId
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Z	c	listed
	f	I	d	latency
	f	Ldmr;	e	gameMode
	f	Lxo;	f	displayName
	f	Z	g	showHat
	f	I	h	listOrder
	f	Lyf$a;	i	chatSession
	m	(Ljava/util/UUID;)V	<init>	<init>
	m	()Laex$b;	a	build
c	aey	net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	I	e	entity
	f	Lex$a;	f	fromAnchor
	f	Lex$a;	g	toAnchor
	f	Z	h	atEntity
	m	(Lex$a;DDD)V	<init>	<init>
	m	(Lex$a;Lbzm;Lex$a;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lex$a;	b	getFromAnchor
	m	(Ldmu;)Lfis;	a	getPosition
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aez	net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket
	f	I	b	id
	f	Lcaz;	c	change
	f	Ljava/util/Set;	d	relatives
	f	Lzm;	a	STREAM_CODEC
	m	(ILcaz;Ljava/util/Set;)V	<init>	<init>
	m	(ILcaz;Ljava/util/Set;)Laez;	a	of
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()Lcaz;	e	change
	m	()Ljava/util/Set;	f	relatives
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afa	net/minecraft/network/protocol/game/ClientboundPlayerRotationPacket
	f	F	b	yRot
	f	F	c	xRot
	f	Lzm;	a	STREAM_CODEC
	m	(FF)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	yRot
	m	()F	e	xRot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afb	net/minecraft/network/protocol/game/ClientboundProjectilePowerPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	f	D	c	accelerationPower
	m	(ID)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getId
	m	()D	e	getAccelerationPower
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afc	net/minecraft/network/protocol/game/ClientboundRecipeBookAddPacket
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/List;Z)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	entries
	m	()Z	e	replace
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afc$a	net/minecraft/network/protocol/game/ClientboundRecipeBookAddPacket$Entry
	f	Ldit;	d	contents
	f	B	e	flags
	f	B	a	FLAG_NOTIFICATION
	f	B	b	FLAG_HIGHLIGHT
	f	Lzm;	c	STREAM_CODEC
	m	(Ldit;ZZ)V	<init>	<init>
	m	(Ldit;B)V	<init>	<init>
	m	()Z	a	notification
	m	()Z	b	highlight
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldit;	c	contents
	m	()B	d	flags
	m	()V	<clinit>	<clinit>
c	afd	net/minecraft/network/protocol/game/ClientboundRecipeBookRemovePacket
	f	Ljava/util/List;	b	recipes
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	recipes
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afe	net/minecraft/network/protocol/game/ClientboundRecipeBookSettingsPacket
	f	Lazd;	b	bookSettings
	f	Lzm;	a	STREAM_CODEC
	m	(Lazd;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lazd;	b	bookSettings
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aff	net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lit/unimi/dsi/fastutil/ints/IntList;	b	entityIds
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
	m	([I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	getEntityIds
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afg	net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket
	f	I	b	entityId
	f	Ljl;	c	effect
	f	Lzm;	a	STREAM_CODEC
	m	(ILjl;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbzm;	a	getEntity
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	entityId
	m	()Ljl;	e	effect
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afh	net/minecraft/network/protocol/game/ClientboundResetScorePacket
	f	Ljava/lang/String;	b	owner
	f	Ljava/lang/String;	c	objectiveName
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	owner
	m	()Ljava/lang/String;	e	objectiveName
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afi	net/minecraft/network/protocol/game/ClientboundRespawnPacket
	f	Lahh;	e	commonPlayerSpawnInfo
	f	B	f	dataToKeep
	f	Lzm;	a	STREAM_CODEC
	f	B	b	KEEP_ATTRIBUTE_MODIFIERS
	f	B	c	KEEP_ENTITY_DATA
	f	B	d	KEEP_ALL_DATA
	m	(Lwx;)V	<init>	<init>
	m	(Lahh;B)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(B)Z	a	shouldKeep
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lahh;	b	commonPlayerSpawnInfo
	m	()B	e	dataToKeep
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afj	net/minecraft/network/protocol/game/ClientboundRotateHeadPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	entityId
	f	B	c	yHeadRot
	m	(Lbzm;B)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbzm;	a	getEntity
	m	()F	b	getYHeadRot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afk	net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	POS_IN_SECTION_BITS
	f	Lke;	c	sectionPos
	f	[S	d	positions
	f	[Leeb;	e	states
	m	(Lke;Lit/unimi/dsi/fastutil/shorts/ShortSet;Legj;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ljava/util/function/BiConsumer;)V	a	runUpdates
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afl	net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lame;	b	tab
	m	(Lame;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lame;	b	getTab
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afm	net/minecraft/network/protocol/game/ClientboundServerDataPacket
	f	Lxo;	b	motd
	f	Ljava/util/Optional;	c	iconBytes
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	motd
	m	()Ljava/util/Optional;	e	iconBytes
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afn	net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket
	f	Lxo;	b	text
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	text
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afo	net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	newCenterX
	f	D	c	newCenterZ
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()D	b	getNewCenterZ
	m	()D	e	getNewCenterX
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afp	net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	oldSize
	f	D	c	newSize
	f	J	d	lerpTime
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()D	b	getOldSize
	m	()D	e	getNewSize
	m	()J	f	getLerpTime
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afq	net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket
	f	Lzm;	a	STREAM_CODEC
	f	D	b	size
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()D	b	getSize
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afr	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	warningDelay
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getWarningDelay
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afs	net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	warningBlocks
	m	(Left;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getWarningBlocks
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aft	net/minecraft/network/protocol/game/ClientboundSetCameraPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	cameraId
	m	(Lbzm;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Ldmu;)Lbzm;	a	getEntity
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afu	net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	x
	f	I	c	z
	m	(II)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getX
	m	()I	e	getZ
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afv	net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	radius
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getRadius
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afw	net/minecraft/network/protocol/game/ClientboundSetCursorItemPacket
	f	Ldcv;	b	contents
	f	Lzm;	a	STREAM_CODEC
	m	(Ldcv;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	b	contents
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afx	net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	F	c	angle
	m	(Ljb;F)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljb;	b	getPos
	m	()F	e	getAngle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afy	net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket
	f	Lzm;	a	STREAM_CODEC
	f	Lfjo;	b	slot
	f	Ljava/lang/String;	c	objectiveName
	m	(Lfjo;Lfjp;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lfjo;	b	getSlot
	m	()Ljava/lang/String;	e	getObjectiveName
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	afz	net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket
	f	I	c	id
	f	Ljava/util/List;	d	packedItems
	f	Lzm;	a	STREAM_CODEC
	f	I	b	EOF_MARKER
	m	(Lwx;)V	<init>	<init>
	m	(ILjava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Lwx;)V	a	pack
	m	(Lwx;)Ljava/util/List;	a	unpack
	m	(Lwx;)V	b	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()Ljava/util/List;	e	packedItems
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aga	net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	sourceId
	f	I	c	destId
	m	(Lbzm;Lbzm;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getSourceId
	m	()I	e	getDestId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agb	net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	f	I	c	xa
	f	I	d	ya
	f	I	e	za
	m	(Lbzm;)V	<init>	<init>
	m	(ILfis;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getId
	m	()D	e	getXa
	m	()D	f	getYa
	m	()D	g	getZa
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agc	net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket
	f	Lzm;	a	STREAM_CODEC
	f	B	b	CONTINUE_MASK
	f	I	c	entity
	f	Ljava/util/List;	d	slots
	m	(ILjava/util/List;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getEntity
	m	()Ljava/util/List;	e	getSlots
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agd	net/minecraft/network/protocol/game/ClientboundSetExperiencePacket
	f	Lzm;	a	STREAM_CODEC
	f	F	b	experienceProgress
	f	I	c	totalExperience
	f	I	d	experienceLevel
	m	(FII)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()F	b	getExperienceProgress
	m	()I	e	getTotalExperience
	m	()I	f	getExperienceLevel
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	age	net/minecraft/network/protocol/game/ClientboundSetHealthPacket
	f	Lzm;	a	STREAM_CODEC
	f	F	b	health
	f	I	c	food
	f	F	d	saturation
	m	(FIF)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()F	b	getHealth
	m	()I	e	getFood
	m	()F	f	getSaturation
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agf	net/minecraft/network/protocol/game/ClientboundSetHeldSlotPacket
	f	I	b	slot
	f	Lzm;	a	STREAM_CODEC
	m	(I)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	slot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agg	net/minecraft/network/protocol/game/ClientboundSetObjectivePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	METHOD_ADD
	f	I	c	METHOD_REMOVE
	f	I	d	METHOD_CHANGE
	f	Ljava/lang/String;	e	objectiveName
	f	Lxo;	f	displayName
	f	Lfka$a;	g	renderType
	f	Ljava/util/Optional;	h	numberFormat
	f	I	i	method
	m	(Lfjp;I)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	b	getObjectiveName
	m	()Lxo;	e	getDisplayName
	m	()I	f	getMethod
	m	()Lfka$a;	g	getRenderType
	m	()Ljava/util/Optional;	h	getNumberFormat
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agh	net/minecraft/network/protocol/game/ClientboundSetPassengersPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	vehicle
	f	[I	c	passengers
	m	(Lbzm;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()[I	b	getPassengers
	m	()I	e	getVehicle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agi	net/minecraft/network/protocol/game/ClientboundSetPlayerInventoryPacket
	f	I	b	slot
	f	Ldcv;	c	contents
	f	Lzm;	a	STREAM_CODEC
	m	(ILdcv;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	slot
	m	()Ldcv;	e	contents
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agj	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	METHOD_ADD
	f	I	c	METHOD_REMOVE
	f	I	d	METHOD_CHANGE
	f	I	e	METHOD_JOIN
	f	I	f	METHOD_LEAVE
	f	I	g	MAX_VISIBILITY_LENGTH
	f	I	h	MAX_COLLISION_LENGTH
	f	I	i	method
	f	Ljava/lang/String;	j	name
	f	Ljava/util/Collection;	k	players
	f	Ljava/util/Optional;	l	parameters
	m	(Ljava/lang/String;ILjava/util/Optional;Ljava/util/Collection;)V	<init>	<init>
	m	(Lfjs;Z)Lagj;	a	createAddOrModifyPacket
	m	(Lfjs;)Lagj;	a	createRemovePacket
	m	(Lfjs;Ljava/lang/String;Lagj$a;)Lagj;	a	createPlayerPacket
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	(I)Z	a	shouldHavePlayerList
	m	(I)Z	b	shouldHaveParameters
	m	()Lagj$a;	b	getPlayerAction
	m	()Lagj$a;	e	getTeamAction
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/util/Collection;	g	getPlayers
	m	()Ljava/util/Optional;	h	getParameters
	m	(Lws;)V	a	handle
	m	()Ljava/lang/IllegalStateException;	i	lambda$write$0
	m	()V	<clinit>	<clinit>
c	agj$a	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action
	f	Lagj$a;	a	ADD
	f	Lagj$a;	b	REMOVE
	f	[Lagj$a;	c	$VALUES
	m	()[Lagj$a;	values	values
	m	(Ljava/lang/String;)Lagj$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lagj$a;	a	$values
	m	()V	<clinit>	<clinit>
c	agj$b	net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters
	f	Lxo;	a	displayName
	f	Lxo;	b	playerPrefix
	f	Lxo;	c	playerSuffix
	f	Lfjz$b;	d	nametagVisibility
	f	Lfjz$a;	e	collisionRule
	f	Lo;	f	color
	f	I	g	options
	m	(Lfjs;)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	()Lxo;	a	getDisplayName
	m	()I	b	getOptions
	m	()Lo;	c	getColor
	m	()Lfjz$b;	d	getNametagVisibility
	m	()Lfjz$a;	e	getCollisionRule
	m	()Lxo;	f	getPlayerPrefix
	m	()Lxo;	g	getPlayerSuffix
	m	(Lwx;)V	a	write
c	agk	net/minecraft/network/protocol/game/ClientboundSetScorePacket
	f	Ljava/lang/String;	b	owner
	f	Ljava/lang/String;	c	objectiveName
	f	I	d	score
	f	Ljava/util/Optional;	e	display
	f	Ljava/util/Optional;	f	numberFormat
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/lang/String;Ljava/lang/String;ILjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	owner
	m	()Ljava/lang/String;	e	objectiveName
	m	()I	f	score
	m	()Ljava/util/Optional;	g	display
	m	()Ljava/util/Optional;	h	numberFormat
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agl	net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket
	f	I	b	simulationDistance
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	simulationDistance
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agm	net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket
	f	Lxo;	b	text
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	text
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agn	net/minecraft/network/protocol/game/ClientboundSetTimePacket
	f	J	b	gameTime
	f	J	c	dayTime
	f	Z	d	tickDayTime
	f	Lzm;	a	STREAM_CODEC
	m	(JJZ)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	gameTime
	m	()J	e	dayTime
	m	()Z	f	tickDayTime
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ago	net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket
	f	Lxo;	b	text
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	text
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agp	net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	fadeIn
	f	I	c	stay
	f	I	d	fadeOut
	m	(III)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getFadeIn
	m	()I	e	getStay
	m	()I	f	getFadeOut
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agq	net/minecraft/network/protocol/game/ClientboundSoundEntityPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljl;	b	sound
	f	Laza;	c	source
	f	I	d	id
	f	F	e	volume
	f	F	f	pitch
	f	J	g	seed
	m	(Ljl;Laza;Lbzm;FFJ)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljl;	b	getSound
	m	()Laza;	e	getSource
	m	()I	f	getId
	m	()F	g	getVolume
	m	()F	h	getPitch
	m	()J	i	getSeed
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agr	net/minecraft/network/protocol/game/ClientboundSoundPacket
	f	Lzm;	a	STREAM_CODEC
	f	F	b	LOCATION_ACCURACY
	f	Ljl;	c	sound
	f	Laza;	d	source
	f	I	e	x
	f	I	f	y
	f	I	g	z
	f	F	h	volume
	f	F	i	pitch
	f	J	j	seed
	m	(Ljl;Laza;DDDFFJ)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljl;	b	getSound
	m	()Laza;	e	getSource
	m	()D	f	getX
	m	()D	g	getY
	m	()D	h	getZ
	m	()F	i	getVolume
	m	()F	j	getPitch
	m	()J	k	getSeed
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ags	net/minecraft/network/protocol/game/ClientboundStartConfigurationPacket
	f	Lags;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	d	isTerminal
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agt	net/minecraft/network/protocol/game/ClientboundStopSoundPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	HAS_SOURCE
	f	I	c	HAS_SOUND
	f	Lame;	d	name
	f	Laza;	e	source
	m	(Lame;Laza;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Lame;	b	getName
	m	()Laza;	e	getSource
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agu	net/minecraft/network/protocol/game/ClientboundSystemChatPacket
	f	Lxo;	b	content
	f	Z	c	overlay
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;Z)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Z	c	isSkippable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	content
	m	()Z	e	overlay
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agv	net/minecraft/network/protocol/game/ClientboundTabListPacket
	f	Lxo;	b	header
	f	Lxo;	c	footer
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	header
	m	()Lxo;	e	footer
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agw	net/minecraft/network/protocol/game/ClientboundTagQueryPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Lui;	c	tag
	m	(ILui;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getTransactionId
	m	()Lui;	e	getTag
	m	()Z	c	isSkippable
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agx	net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	itemId
	f	I	c	playerId
	f	I	d	amount
	m	(III)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getItemId
	m	()I	e	getPlayerId
	m	()I	f	getAmount
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agy	net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket
	f	I	b	id
	f	Lcaz;	c	change
	f	Ljava/util/Set;	d	relatives
	f	Z	e	onGround
	f	Lzm;	a	STREAM_CODEC
	m	(ILcaz;Ljava/util/Set;Z)V	<init>	<init>
	m	(ILcaz;Ljava/util/Set;Z)Lagy;	a	teleport
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()Lcaz;	e	change
	m	()Ljava/util/Set;	f	relatives
	m	()Z	g	onGround
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	agz	net/minecraft/network/protocol/game/ClientboundTestInstanceBlockStatus
	f	Lxo;	b	status
	f	Ljava/util/Optional;	c	size
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	status
	m	()Ljava/util/Optional;	e	size
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aha	net/minecraft/network/protocol/game/ClientboundTickingStatePacket
	f	F	b	tickRate
	f	Z	c	isFrozen
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(FZ)V	<init>	<init>
	m	(Lbxt;)Laha;	a	from
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	tickRate
	m	()Z	e	isFrozen
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahb	net/minecraft/network/protocol/game/ClientboundTickingStepPacket
	f	I	b	tickSteps
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lbxt;)Lahb;	a	from
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	tickSteps
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahc	net/minecraft/network/protocol/game/ClientboundTrackedWaypointPacket
	f	Lahc$a;	b	operation
	f	Lfkr;	c	waypoint
	f	Lzm;	a	STREAM_CODEC
	m	(Lahc$a;Lfkr;)V	<init>	<init>
	m	(Ljava/util/UUID;)Lahc;	a	removeWaypoint
	m	(Ljava/util/UUID;Lfkt$a;Lkg;)Lahc;	a	addWaypointPosition
	m	(Ljava/util/UUID;Lfkt$a;Lkg;)Lahc;	b	updateWaypointPosition
	m	(Ljava/util/UUID;Lfkt$a;Ldlz;)Lahc;	a	addWaypointChunk
	m	(Ljava/util/UUID;Lfkt$a;Ldlz;)Lahc;	b	updateWaypointChunk
	m	(Ljava/util/UUID;Lfkt$a;F)Lahc;	a	addWaypointAzimuth
	m	(Ljava/util/UUID;Lfkt$a;F)Lahc;	b	updateWaypointAzimuth
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	(Lfks;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lahc$a;	b	operation
	m	()Lfkr;	e	waypoint
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahc$a	net/minecraft/network/protocol/game/ClientboundTrackedWaypointPacket$Operation
	f	Lahc$a;	a	TRACK
	f	Lahc$a;	b	UNTRACK
	f	Lahc$a;	c	UPDATE
	f	Ljava/util/function/BiConsumer;	f	action
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Lzm;	e	STREAM_CODEC
	f	[Lahc$a;	g	$VALUES
	m	()[Lahc$a;	values	values
	m	(Ljava/lang/String;)Lahc$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/BiConsumer;)V	<init>	<init>
	m	()[Lahc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ahd	net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket
	f	Lzm;	a	STREAM_CODEC
	f	Z	b	reset
	f	Ljava/util/List;	c	added
	f	Ljava/util/Set;	d	removed
	f	Ljava/util/Map;	e	progress
	f	Z	f	showAdvancements
	m	(ZLjava/util/Collection;Ljava/util/Set;Ljava/util/Map;Z)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/util/List;	b	getAdded
	m	()Ljava/util/Set;	e	getRemoved
	m	()Ljava/util/Map;	f	getProgress
	m	()Z	g	shouldReset
	m	()Z	h	shouldShowAdvancements
	m	(Lws;)V	a	handle
	m	(Lwg;Lal;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	ahe	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	entityId
	f	Ljava/util/List;	c	attributes
	m	(ILjava/util/Collection;)V	<init>	<init>
	m	(ILjava/util/List;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getEntityId
	m	()Ljava/util/List;	e	getValues
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahe$a	net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot
	f	Ljl;	c	attribute
	f	D	d	base
	f	Ljava/util/Collection;	e	modifiers
	f	Lzm;	a	MODIFIER_STREAM_CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;DLjava/util/Collection;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	attribute
	m	()D	b	base
	m	()Ljava/util/Collection;	c	modifiers
	m	()V	<clinit>	<clinit>
c	ahf	net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_AMBIENT
	f	I	c	FLAG_VISIBLE
	f	I	d	FLAG_SHOW_ICON
	f	I	e	FLAG_BLEND
	f	I	f	entityId
	f	Ljl;	g	effect
	f	I	h	effectAmplifier
	f	I	i	effectDurationTicks
	f	B	j	flags
	m	(ILbyq;Z)V	<init>	<init>
	m	(Lwx;)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()I	b	getEntityId
	m	()Ljl;	e	getEffect
	m	()I	f	getEffectAmplifier
	m	()I	g	getEffectDurationTicks
	m	()Z	h	isEffectVisible
	m	()Z	i	isEffectAmbient
	m	()Z	j	effectShowsIcon
	m	()Z	k	shouldBlend
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahg	net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket
	f	Ljava/util/Map;	b	itemSets
	f	Ldhz$b;	c	stonecutterRecipes
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/Map;Ldhz$b;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lacq;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	b	itemSets
	m	()Ldhz$b;	e	stonecutterRecipes
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahh	net/minecraft/network/protocol/game/CommonPlayerSpawnInfo
	f	Ljl;	a	dimensionType
	f	Lamd;	b	dimension
	f	J	c	seed
	f	Ldmr;	d	gameType
	f	Ldmr;	e	previousGameType
	f	Z	f	isDebug
	f	Z	g	isFlat
	f	Ljava/util/Optional;	h	lastDeathLocation
	f	I	i	portalCooldown
	f	I	j	seaLevel
	m	(Lwx;)V	<init>	<init>
	m	(Ljl;Lamd;JLdmr;Ldmr;ZZLjava/util/Optional;II)V	<init>	<init>
	m	(Lwx;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	dimensionType
	m	()Lamd;	b	dimension
	m	()J	c	seed
	m	()Ldmr;	d	gameType
	m	()Ldmr;	e	previousGameType
	m	()Z	f	isDebug
	m	()Z	g	isFlat
	m	()Ljava/util/Optional;	h	lastDeathLocation
	m	()I	i	portalCooldown
	m	()I	j	seaLevel
c	ahi	net/minecraft/network/protocol/game/DebugEntityNameGenerator
	f	[Ljava/lang/String;	a	NAMES_FIRST_PART
	f	[Ljava/lang/String;	b	NAMES_SECOND_PART
	m	()V	<init>	<init>
	m	(Lbzm;)Ljava/lang/String;	a	getEntityName
	m	(Ljava/util/UUID;)Ljava/lang/String;	a	getEntityName
	m	(Lbck;[Ljava/lang/String;)Ljava/lang/String;	a	getRandomString
	m	(Ljava/util/UUID;)Lbck;	b	getRandom
	m	()V	<clinit>	<clinit>
c	ahj	net/minecraft/network/protocol/game/DebugPackets
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Laub;Ljb;Ljava/lang/String;II)V	a	sendGameTestAddMarker
	m	(Laub;)V	a	sendGameTestClearPacket
	m	(Laub;Ldlz;)V	a	sendPoiPacketsForChunk
	m	(Laub;Ljb;)V	a	sendPoiAddedPacket
	m	(Laub;Ljb;)V	b	sendPoiRemovedPacket
	m	(Laub;Ljb;)V	c	sendPoiTicketCountPacket
	m	(Laub;Ljb;)V	d	sendVillageSectionsPacket
	m	(Ldmu;Lcao;Lfaz;F)V	a	sendPathFindingPacket
	m	(Ldmu;Ljb;)V	a	sendNeighborsUpdatePacket
	m	(Ldmu;Labs;)V	a	sendWireUpdates
	m	(Ldnt;Levg;)V	a	sendStructurePacket
	m	(Ldmu;Lcao;Lchj;)V	a	sendGoalSelector
	m	(Laub;Ljava/util/Collection;)V	a	sendRaids
	m	(Lcam;)V	a	sendEntityBrain
	m	(Lcme;)V	a	sendBeeInfo
	m	(Lcsr;)V	a	sendBreezeInfo
	m	(Ldmu;Ljl;Lfis;)V	a	sendGameEventInfo
	m	(Ldmu;Lejd;)V	a	sendGameEventListenerInfo
	m	(Ldmu;Ljb;Leeb;Leaw;)V	a	sendHiveInfo
	m	(Lcam;J)Ljava/util/List;	a	getMemoryDescriptions
	m	(Laub;Ljava/lang/Object;)Ljava/lang/String;	a	getShortDescription
	m	(Laub;Labe;)V	a	sendPacketToAllPlayers
	m	(Laub;Lfis;Lamd;)V	a	lambda$sendGameEventInfo$7
	m	(Ljava/util/List;Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	lambda$sendEntityBrain$6
	m	(Ljava/util/List;Ljava/lang/String;Lcjl;Ljava/lang/Integer;)V	a	lambda$sendEntityBrain$5
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$sendEntityBrain$4
	m	(Ljava/util/List;Lciw;)V	a	lambda$sendGoalSelector$3
	m	(Lamd;)Ljava/lang/String;	a	lambda$sendPoiAddedPacket$2
	m	(Laub;Lclq;)V	a	lambda$sendPoiPacketsForChunk$1
	m	(Ljl;)Z	a	lambda$sendPoiPacketsForChunk$0
	m	()V	<clinit>	<clinit>
c	ahk	net/minecraft/network/protocol/game/GamePacketTypes
	f	Lzy;	a	CLIENTBOUND_BUNDLE
	f	Lzy;	b	CLIENTBOUND_BUNDLE_DELIMITER
	f	Lzy;	c	CLIENTBOUND_ADD_ENTITY
	f	Lzy;	d	CLIENTBOUND_ANIMATE
	f	Lzy;	e	CLIENTBOUND_AWARD_STATS
	f	Lzy;	f	CLIENTBOUND_BLOCK_CHANGED_ACK
	f	Lzy;	g	CLIENTBOUND_BLOCK_DESTRUCTION
	f	Lzy;	h	CLIENTBOUND_BLOCK_ENTITY_DATA
	f	Lzy;	i	CLIENTBOUND_BLOCK_EVENT
	f	Lzy;	j	CLIENTBOUND_BLOCK_UPDATE
	f	Lzy;	k	CLIENTBOUND_BOSS_EVENT
	f	Lzy;	l	CLIENTBOUND_CHANGE_DIFFICULTY
	f	Lzy;	m	CLIENTBOUND_CHUNK_BATCH_FINISHED
	f	Lzy;	n	CLIENTBOUND_CHUNK_BATCH_START
	f	Lzy;	o	CLIENTBOUND_CHUNKS_BIOMES
	f	Lzy;	p	CLIENTBOUND_CLEAR_TITLES
	f	Lzy;	q	CLIENTBOUND_COMMAND_SUGGESTIONS
	f	Lzy;	r	CLIENTBOUND_COMMANDS
	f	Lzy;	s	CLIENTBOUND_CONTAINER_CLOSE
	f	Lzy;	t	CLIENTBOUND_CONTAINER_SET_CONTENT
	f	Lzy;	u	CLIENTBOUND_CONTAINER_SET_DATA
	f	Lzy;	v	CLIENTBOUND_CONTAINER_SET_SLOT
	f	Lzy;	w	CLIENTBOUND_COOLDOWN
	f	Lzy;	x	CLIENTBOUND_CUSTOM_CHAT_COMPLETIONS
	f	Lzy;	y	CLIENTBOUND_DAMAGE_EVENT
	f	Lzy;	z	CLIENTBOUND_DEBUG_SAMPLE
	f	Lzy;	A	CLIENTBOUND_DELETE_CHAT
	f	Lzy;	B	CLIENTBOUND_DISGUISED_CHAT
	f	Lzy;	C	CLIENTBOUND_ENTITY_EVENT
	f	Lzy;	D	CLIENTBOUND_ENTITY_POSITION_SYNC
	f	Lzy;	E	CLIENTBOUND_EXPLODE
	f	Lzy;	F	CLIENTBOUND_FORGET_LEVEL_CHUNK
	f	Lzy;	G	CLIENTBOUND_GAME_EVENT
	f	Lzy;	H	CLIENTBOUND_HORSE_SCREEN_OPEN
	f	Lzy;	I	CLIENTBOUND_HURT_ANIMATION
	f	Lzy;	J	CLIENTBOUND_INITIALIZE_BORDER
	f	Lzy;	K	CLIENTBOUND_LEVEL_CHUNK_WITH_LIGHT
	f	Lzy;	L	CLIENTBOUND_LEVEL_EVENT
	f	Lzy;	M	CLIENTBOUND_LEVEL_PARTICLES
	f	Lzy;	N	CLIENTBOUND_LIGHT_UPDATE
	f	Lzy;	O	CLIENTBOUND_LOGIN
	f	Lzy;	P	CLIENTBOUND_MAP_ITEM_DATA
	f	Lzy;	Q	CLIENTBOUND_MERCHANT_OFFERS
	f	Lzy;	R	CLIENTBOUND_MOVE_ENTITY_POS
	f	Lzy;	S	CLIENTBOUND_MOVE_ENTITY_POS_ROT
	f	Lzy;	T	CLIENTBOUND_MOVE_MINECART_ALONG_TRACK
	f	Lzy;	U	CLIENTBOUND_MOVE_ENTITY_ROT
	f	Lzy;	V	CLIENTBOUND_MOVE_VEHICLE
	f	Lzy;	W	CLIENTBOUND_OPEN_BOOK
	f	Lzy;	X	CLIENTBOUND_OPEN_SCREEN
	f	Lzy;	Y	CLIENTBOUND_OPEN_SIGN_EDITOR
	f	Lzy;	Z	CLIENTBOUND_PLACE_GHOST_RECIPE
	f	Lzy;	aa	CLIENTBOUND_PLAYER_ABILITIES
	f	Lzy;	ab	CLIENTBOUND_PLAYER_CHAT
	f	Lzy;	ac	CLIENTBOUND_PLAYER_COMBAT_END
	f	Lzy;	ad	CLIENTBOUND_PLAYER_COMBAT_ENTER
	f	Lzy;	ae	CLIENTBOUND_PLAYER_COMBAT_KILL
	f	Lzy;	af	CLIENTBOUND_PLAYER_INFO_REMOVE
	f	Lzy;	ag	CLIENTBOUND_PLAYER_INFO_UPDATE
	f	Lzy;	ah	CLIENTBOUND_PLAYER_LOOK_AT
	f	Lzy;	ai	CLIENTBOUND_PLAYER_POSITION
	f	Lzy;	aj	CLIENTBOUND_PLAYER_ROTATION
	f	Lzy;	ak	CLIENTBOUND_RECIPE_BOOK_ADD
	f	Lzy;	al	CLIENTBOUND_RECIPE_BOOK_REMOVE
	f	Lzy;	am	CLIENTBOUND_RECIPE_BOOK_SETTINGS
	f	Lzy;	an	CLIENTBOUND_REMOVE_ENTITIES
	f	Lzy;	ao	CLIENTBOUND_REMOVE_MOB_EFFECT
	f	Lzy;	ap	CLIENTBOUND_RESPAWN
	f	Lzy;	aq	CLIENTBOUND_ROTATE_HEAD
	f	Lzy;	ar	CLIENTBOUND_SECTION_BLOCKS_UPDATE
	f	Lzy;	as	CLIENTBOUND_SELECT_ADVANCEMENTS_TAB
	f	Lzy;	at	CLIENTBOUND_SERVER_DATA
	f	Lzy;	au	CLIENTBOUND_SET_ACTION_BAR_TEXT
	f	Lzy;	av	CLIENTBOUND_SET_BORDER_CENTER
	f	Lzy;	aw	CLIENTBOUND_SET_BORDER_LERP_SIZE
	f	Lzy;	ax	CLIENTBOUND_SET_BORDER_SIZE
	f	Lzy;	ay	CLIENTBOUND_SET_BORDER_WARNING_DELAY
	f	Lzy;	az	CLIENTBOUND_SET_BORDER_WARNING_DISTANCE
	f	Lzy;	aA	CLIENTBOUND_SET_CAMERA
	f	Lzy;	aB	CLIENTBOUND_SET_CHUNK_CACHE_CENTER
	f	Lzy;	aC	CLIENTBOUND_SET_CHUNK_CACHE_RADIUS
	f	Lzy;	aD	CLIENTBOUND_SET_DEFAULT_SPAWN_POSITION
	f	Lzy;	aE	CLIENTBOUND_SET_DISPLAY_OBJECTIVE
	f	Lzy;	aF	CLIENTBOUND_SET_ENTITY_DATA
	f	Lzy;	aG	CLIENTBOUND_SET_ENTITY_LINK
	f	Lzy;	aH	CLIENTBOUND_SET_ENTITY_MOTION
	f	Lzy;	aI	CLIENTBOUND_SET_EQUIPMENT
	f	Lzy;	aJ	CLIENTBOUND_SET_EXPERIENCE
	f	Lzy;	aK	CLIENTBOUND_SET_HEALTH
	f	Lzy;	aL	CLIENTBOUND_SET_HELD_SLOT
	f	Lzy;	aM	CLIENTBOUND_SET_OBJECTIVE
	f	Lzy;	aN	CLIENTBOUND_SET_PASSENGERS
	f	Lzy;	aO	CLIENTBOUND_SET_PLAYER_TEAM
	f	Lzy;	aP	CLIENTBOUND_SET_SCORE
	f	Lzy;	aQ	CLIENTBOUND_SET_SIMULATION_DISTANCE
	f	Lzy;	aR	CLIENTBOUND_SET_SUBTITLE_TEXT
	f	Lzy;	aS	CLIENTBOUND_SET_TIME
	f	Lzy;	aT	CLIENTBOUND_SET_TITLE_TEXT
	f	Lzy;	aU	CLIENTBOUND_SET_TITLES_ANIMATION
	f	Lzy;	aV	CLIENTBOUND_SOUND_ENTITY
	f	Lzy;	aW	CLIENTBOUND_SOUND
	f	Lzy;	aX	CLIENTBOUND_START_CONFIGURATION
	f	Lzy;	aY	CLIENTBOUND_STOP_SOUND
	f	Lzy;	aZ	CLIENTBOUND_SYSTEM_CHAT
	f	Lzy;	ba	CLIENTBOUND_TAB_LIST
	f	Lzy;	bb	CLIENTBOUND_TAG_QUERY
	f	Lzy;	bc	CLIENTBOUND_TAKE_ITEM_ENTITY
	f	Lzy;	bd	CLIENTBOUND_TELEPORT_ENTITY
	f	Lzy;	be	CLIENTBOUND_TEST_INSTANCE_BLOCK_STATUS
	f	Lzy;	bf	CLIENTBOUND_UPDATE_ADVANCEMENTS
	f	Lzy;	bg	CLIENTBOUND_UPDATE_ATTRIBUTES
	f	Lzy;	bh	CLIENTBOUND_UPDATE_MOB_EFFECT
	f	Lzy;	bi	CLIENTBOUND_UPDATE_RECIPES
	f	Lzy;	bj	CLIENTBOUND_PROJECTILE_POWER
	f	Lzy;	bk	CLIENTBOUND_WAYPOINT
	f	Lzy;	bl	SERVERBOUND_ACCEPT_TELEPORTATION
	f	Lzy;	bm	SERVERBOUND_BLOCK_ENTITY_TAG_QUERY
	f	Lzy;	bn	SERVERBOUND_BUNDLE_ITEM_SELECTED
	f	Lzy;	bo	SERVERBOUND_CHANGE_DIFFICULTY
	f	Lzy;	bp	SERVERBOUND_CHANGE_GAME_MODE
	f	Lzy;	bq	SERVERBOUND_CHAT_ACK
	f	Lzy;	br	SERVERBOUND_CHAT_COMMAND
	f	Lzy;	bs	SERVERBOUND_CHAT_COMMAND_SIGNED
	f	Lzy;	bt	SERVERBOUND_CHAT
	f	Lzy;	bu	SERVERBOUND_CHAT_SESSION_UPDATE
	f	Lzy;	bv	SERVERBOUND_CHUNK_BATCH_RECEIVED
	f	Lzy;	bw	SERVERBOUND_CLIENT_COMMAND
	f	Lzy;	bx	SERVERBOUND_CLIENT_TICK_END
	f	Lzy;	by	SERVERBOUND_COMMAND_SUGGESTION
	f	Lzy;	bz	SERVERBOUND_CONFIGURATION_ACKNOWLEDGED
	f	Lzy;	bA	SERVERBOUND_CONTAINER_BUTTON_CLICK
	f	Lzy;	bB	SERVERBOUND_CONTAINER_CLICK
	f	Lzy;	bC	SERVERBOUND_CONTAINER_CLOSE
	f	Lzy;	bD	SERVERBOUND_CONTAINER_SLOT_STATE_CHANGED
	f	Lzy;	bE	SERVERBOUND_DEBUG_SAMPLE_SUBSCRIPTION
	f	Lzy;	bF	SERVERBOUND_EDIT_BOOK
	f	Lzy;	bG	SERVERBOUND_ENTITY_TAG_QUERY
	f	Lzy;	bH	SERVERBOUND_INTERACT
	f	Lzy;	bI	SERVERBOUND_JIGSAW_GENERATE
	f	Lzy;	bJ	SERVERBOUND_LOCK_DIFFICULTY
	f	Lzy;	bK	SERVERBOUND_MOVE_PLAYER_POS
	f	Lzy;	bL	SERVERBOUND_MOVE_PLAYER_POS_ROT
	f	Lzy;	bM	SERVERBOUND_MOVE_PLAYER_ROT
	f	Lzy;	bN	SERVERBOUND_MOVE_PLAYER_STATUS_ONLY
	f	Lzy;	bO	SERVERBOUND_MOVE_VEHICLE
	f	Lzy;	bP	SERVERBOUND_PADDLE_BOAT
	f	Lzy;	bQ	SERVERBOUND_PICK_ITEM_FROM_BLOCK
	f	Lzy;	bR	SERVERBOUND_PICK_ITEM_FROM_ENTITY
	f	Lzy;	bS	SERVERBOUND_PLACE_RECIPE
	f	Lzy;	bT	SERVERBOUND_PLAYER_ABILITIES
	f	Lzy;	bU	SERVERBOUND_PLAYER_ACTION
	f	Lzy;	bV	SERVERBOUND_PLAYER_COMMAND
	f	Lzy;	bW	SERVERBOUND_PLAYER_INPUT
	f	Lzy;	bX	SERVERBOUND_PLAYER_LOADED
	f	Lzy;	bY	SERVERBOUND_RECIPE_BOOK_CHANGE_SETTINGS
	f	Lzy;	bZ	SERVERBOUND_RECIPE_BOOK_SEEN_RECIPE
	f	Lzy;	ca	SERVERBOUND_RENAME_ITEM
	f	Lzy;	cb	SERVERBOUND_SEEN_ADVANCEMENTS
	f	Lzy;	cc	SERVERBOUND_SELECT_TRADE
	f	Lzy;	cd	SERVERBOUND_SET_BEACON
	f	Lzy;	ce	SERVERBOUND_SET_CARRIED_ITEM
	f	Lzy;	cf	SERVERBOUND_SET_COMMAND_BLOCK
	f	Lzy;	cg	SERVERBOUND_SET_COMMAND_MINECART
	f	Lzy;	ch	SERVERBOUND_SET_CREATIVE_MODE_SLOT
	f	Lzy;	ci	SERVERBOUND_SET_JIGSAW_BLOCK
	f	Lzy;	cj	SERVERBOUND_SET_STRUCTURE_BLOCK
	f	Lzy;	ck	SERVERBOUND_SET_TEST_BLOCK
	f	Lzy;	cl	SERVERBOUND_TEST_INSTANCE_BLOCK_ACTION
	f	Lzy;	cm	SERVERBOUND_SIGN_UPDATE
	f	Lzy;	cn	SERVERBOUND_SWING
	f	Lzy;	co	SERVERBOUND_TELEPORT_TO_ENTITY
	f	Lzy;	cp	SERVERBOUND_USE_ITEM_ON
	f	Lzy;	cq	SERVERBOUND_USE_ITEM
	f	Lzy;	cr	CLIENTBOUND_RESET_SCORE
	f	Lzy;	cs	CLIENTBOUND_TICKING_STATE
	f	Lzy;	ct	CLIENTBOUND_TICKING_STEP
	f	Lzy;	cu	CLIENTBOUND_SET_CURSOR_ITEM
	f	Lzy;	cv	CLIENTBOUND_SET_PLAYER_INVENTORY
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	ahl	net/minecraft/network/protocol/game/GameProtocols
	f	Lzv;	a	HAS_INFINITE_MATERIALS
	f	Laad;	b	SERVERBOUND_TEMPLATE
	f	Laac;	c	CLIENTBOUND_TEMPLATE
	m	()V	<init>	<init>
	m	(Laab;)V	a	lambda$static$2
	m	(Laab;)V	b	lambda$static$1
	m	(Lzm;Lahl$a;)Lzm;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ahl$1	net/minecraft/network/protocol/game/GameProtocols$1
	f	Lahl$a;	a	val$context
	f	Lzm;	b	val$original
	m	(Lahl$a;Lzm;)V	<init>	<init>
	m	(Lwx;)Lajh;	a	decode
	m	(Lwx;Lajh;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	ahl$a	net/minecraft/network/protocol/game/GameProtocols$Context
	m	()Z	a	hasInfiniteMaterials
c	ahm	net/minecraft/network/protocol/game/ServerGamePacketListener
	m	()Lwe;	b	protocol
	m	(Lajm;)V	a	handleAnimate
	m	(Lahv;)V	a	handleChat
	m	(Laht;)V	a	handleChatCommand
	m	(Lahu;)V	a	handleSignedChatCommand
	m	(Lahs;)V	a	handleChatAck
	m	(Lahy;)V	a	handleClientCommand
	m	(Laic;)V	a	handleContainerButtonClick
	m	(Laid;)V	a	handleContainerClick
	m	(Lair;)V	a	handlePlaceRecipe
	m	(Laie;)V	a	handleContainerClose
	m	(Laij;)V	a	handleInteract
	m	(Laim;)V	a	handleMovePlayer
	m	(Lais;)V	a	handlePlayerAbilities
	m	(Lait;)V	a	handlePlayerAction
	m	(Laiu;)V	a	handlePlayerCommand
	m	(Laiv;)V	a	handlePlayerInput
	m	(Laje;)V	a	handleSetCarriedItem
	m	(Lajh;)V	a	handleSetCreativeModeSlot
	m	(Lajl;)V	a	handleSignUpdate
	m	(Lajp;)V	a	handleUseItemOn
	m	(Lajq;)V	a	handleUseItem
	m	(Lajn;)V	a	handleTeleportToEntityPacket
	m	(Laio;)V	a	handlePaddleBoat
	m	(Lain;)V	a	handleMoveVehicle
	m	(Laho;)V	a	handleAcceptTeleportPacket
	m	(Laiw;)V	a	handleAcceptPlayerLoad
	m	(Laiy;)V	a	handleRecipeBookSeenRecipePacket
	m	(Lajb;)V	a	handleBundleItemSelectedPacket
	m	(Laix;)V	a	handleRecipeBookChangeSettingsPacket
	m	(Laja;)V	a	handleSeenAdvancements
	m	(Laia;)V	a	handleCustomCommandSuggestions
	m	(Lajf;)V	a	handleSetCommandBlock
	m	(Lajg;)V	a	handleSetCommandMinecart
	m	(Laip;)V	a	handlePickItemFromBlock
	m	(Laiq;)V	a	handlePickItemFromEntity
	m	(Laiz;)V	a	handleRenameItem
	m	(Lajd;)V	a	handleSetBeaconPacket
	m	(Lajj;)V	a	handleSetStructureBlock
	m	(Lajk;)V	a	handleSetTestBlock
	m	(Lajo;)V	a	handleTestInstanceBlockAction
	m	(Lajc;)V	a	handleSelectTrade
	m	(Laih;)V	a	handleEditBook
	m	(Laii;)V	a	handleEntityTagQuery
	m	(Laif;)V	a	handleContainerSlotStateChanged
	m	(Lahp;)V	a	handleBlockEntityTagQuery
	m	(Laji;)V	a	handleSetJigsawBlock
	m	(Laik;)V	a	handleJigsawGenerate
	m	(Lahq;)V	a	handleChangeDifficulty
	m	(Lahr;)V	a	handleChangeGameMode
	m	(Lail;)V	a	handleLockDifficulty
	m	(Lahw;)V	a	handleChatSessionUpdate
	m	(Laib;)V	a	handleConfigurationAcknowledged
	m	(Lahx;)V	a	handleChunkBatchReceived
	m	(Laig;)V	a	handleDebugSampleSubscription
	m	(Lahz;)V	a	handleClientTickEnd
c	ahn	net/minecraft/network/protocol/game/ServerPacketListener
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Lzw;Ljava/lang/Exception;)V	a	onPacketError
	m	()V	<clinit>	<clinit>
c	aho	net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahp	net/minecraft/network/protocol/game/ServerboundBlockEntityTagQueryPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	transactionId
	f	Ljb;	c	pos
	m	(ILjb;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getTransactionId
	m	()Ljb;	e	getPos
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahq	net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket
	f	Lbxg;	b	difficulty
	f	Lzm;	a	STREAM_CODEC
	m	(Lbxg;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbxg;	b	difficulty
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahr	net/minecraft/network/protocol/game/ServerboundChangeGameModePacket
	f	Ldmr;	b	mode
	f	Lzm;	a	STREAM_CODEC
	m	(Ldmr;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldmr;	b	mode
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahs	net/minecraft/network/protocol/game/ServerboundChatAckPacket
	f	I	b	offset
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	offset
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aht	net/minecraft/network/protocol/game/ServerboundChatCommandPacket
	f	Ljava/lang/String;	b	command
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	command
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahu	net/minecraft/network/protocol/game/ServerboundChatCommandSignedPacket
	f	Ljava/lang/String;	b	command
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Les;	e	argumentSignatures
	f	Lxv$b;	f	lastSeenMessages
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/time/Instant;JLes;Lxv$b;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	command
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	()Les;	g	argumentSignatures
	m	()Lxv$b;	h	lastSeenMessages
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahv	net/minecraft/network/protocol/game/ServerboundChatPacket
	f	Ljava/lang/String;	b	message
	f	Ljava/time/Instant;	c	timeStamp
	f	J	d	salt
	f	Lya;	e	signature
	f	Lxv$b;	f	lastSeenMessages
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/time/Instant;JLya;Lxv$b;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	message
	m	()Ljava/time/Instant;	e	timeStamp
	m	()J	f	salt
	m	()Lya;	g	signature
	m	()Lxv$b;	h	lastSeenMessages
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahw	net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket
	f	Lyf$a;	b	chatSession
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lyf$a;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lyf$a;	b	chatSession
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahx	net/minecraft/network/protocol/game/ServerboundChunkBatchReceivedPacket
	f	F	b	desiredChunksPerTick
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(F)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	desiredChunksPerTick
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahy	net/minecraft/network/protocol/game/ServerboundClientCommandPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lahy$a;	b	action
	m	(Lahy$a;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Lahy$a;	b	getAction
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ahy$a	net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action
	f	Lahy$a;	a	PERFORM_RESPAWN
	f	Lahy$a;	b	REQUEST_STATS
	f	[Lahy$a;	c	$VALUES
	m	()[Lahy$a;	values	values
	m	(Ljava/lang/String;)Lahy$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lahy$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ahz	net/minecraft/network/protocol/game/ServerboundClientTickEndPacket
	f	Lahz;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aia	net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	f	Ljava/lang/String;	c	command
	m	(ILjava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getId
	m	()Ljava/lang/String;	e	getCommand
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aib	net/minecraft/network/protocol/game/ServerboundConfigurationAcknowledgedPacket
	f	Laib;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Z	d	isTerminal
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aic	net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket
	f	I	b	containerId
	f	I	c	buttonId
	f	Lzm;	a	STREAM_CODEC
	m	(II)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	containerId
	m	()I	e	buttonId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aid	net/minecraft/network/protocol/game/ServerboundContainerClickPacket
	f	I	b	containerId
	f	I	c	stateId
	f	S	d	slotNum
	f	B	e	buttonNum
	f	Lcyx;	f	clickType
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	g	changedSlots
	f	Lwj;	h	carriedItem
	f	I	i	MAX_SLOT_COUNT
	f	Lzm;	j	SLOTS_STREAM_CODEC
	f	Lzm;	a	STREAM_CODEC
	m	(IISBLcyx;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lwj;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	containerId
	m	()I	e	stateId
	m	()S	f	slotNum
	m	()B	g	buttonNum
	m	()Lcyx;	h	clickType
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	changedSlots
	m	()Lwj;	j	carriedItem
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aie	net/minecraft/network/protocol/game/ServerboundContainerClosePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	containerId
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getContainerId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aif	net/minecraft/network/protocol/game/ServerboundContainerSlotStateChangedPacket
	f	I	b	slotId
	f	I	c	containerId
	f	Z	d	newState
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(IIZ)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	slotId
	m	()I	e	containerId
	m	()Z	f	newState
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aig	net/minecraft/network/protocol/game/ServerboundDebugSampleSubscriptionPacket
	f	Lbrv;	b	sampleType
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Lbrv;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbrv;	b	sampleType
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aih	net/minecraft/network/protocol/game/ServerboundEditBookPacket
	f	I	b	slot
	f	Ljava/util/List;	c	pages
	f	Ljava/util/Optional;	d	title
	f	Lzm;	a	STREAM_CODEC
	m	(ILjava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	slot
	m	()Ljava/util/List;	e	pages
	m	()Ljava/util/Optional;	f	title
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aii	net/minecraft/network/protocol/game/ServerboundEntityTagQueryPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	transactionId
	f	I	c	entityId
	m	(II)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getTransactionId
	m	()I	e	getEntityId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aij	net/minecraft/network/protocol/game/ServerboundInteractPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	entityId
	f	Laij$a;	c	action
	f	Z	d	usingSecondaryAction
	f	Laij$a;	e	ATTACK_ACTION
	m	(IZLaij$a;)V	<init>	<init>
	m	(Lbzm;Z)Laij;	a	createAttackPacket
	m	(Lbzm;ZLbxi;)Laij;	a	createInteractionPacket
	m	(Lbzm;ZLbxi;Lfis;)Laij;	a	createInteractionPacket
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	(Laub;)Lbzm;	a	getTarget
	m	()Z	b	isUsingSecondaryAction
	m	(Laij$c;)V	a	dispatch
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aij$1	net/minecraft/network/protocol/game/ServerboundInteractPacket$1
	m	()V	<init>	<init>
	m	()Laij$b;	a	getType
	m	(Laij$c;)V	a	dispatch
	m	(Lwg;)V	a	write
c	aij$a	net/minecraft/network/protocol/game/ServerboundInteractPacket$Action
	m	()Laij$b;	a	getType
	m	(Laij$c;)V	a	dispatch
	m	(Lwg;)V	a	write
c	aij$b	net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType
	f	Laij$b;	a	INTERACT
	f	Laij$b;	b	ATTACK
	f	Laij$b;	c	INTERACT_AT
	f	Ljava/util/function/Function;	d	reader
	f	[Laij$b;	e	$VALUES
	m	()[Laij$b;	values	values
	m	(Ljava/lang/String;)Laij$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/Function;)V	<init>	<init>
	m	(Lwg;)Laij$a;	a	lambda$static$0
	m	()[Laij$b;	a	$values
	m	()V	<clinit>	<clinit>
c	aij$c	net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler
	m	(Lbxi;)V	a	onInteraction
	m	(Lbxi;Lfis;)V	a	onInteraction
	m	()V	a	onAttack
c	aij$d	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction
	f	Lbxi;	a	hand
	m	(Lbxi;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	()Laij$b;	a	getType
	m	(Laij$c;)V	a	dispatch
	m	(Lwg;)V	a	write
c	aij$e	net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction
	f	Lbxi;	a	hand
	f	Lfis;	b	location
	m	(Lbxi;Lfis;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	()Laij$b;	a	getType
	m	(Laij$c;)V	a	dispatch
	m	(Lwg;)V	a	write
c	aik	net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	I	c	levels
	f	Z	d	keepJigsaws
	m	(Ljb;IZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()I	e	levels
	m	()Z	f	keepJigsaws
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ail	net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket
	f	Lzm;	a	STREAM_CODEC
	f	Z	b	locked
	m	(Z)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Z	b	isLocked
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aim	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket
	f	I	j	FLAG_ON_GROUND
	f	I	k	FLAG_HORIZONTAL_COLLISION
	f	D	a	x
	f	D	b	y
	f	D	c	z
	f	F	d	yRot
	f	F	e	xRot
	f	Z	f	onGround
	f	Z	g	horizontalCollision
	f	Z	h	hasPos
	f	Z	i	hasRot
	m	(ZZ)I	a	packFlags
	m	(I)Z	a	unpackOnGround
	m	(I)Z	b	unpackHorizontalCollision
	m	(DDDFFZZZZ)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	(D)D	a	getX
	m	(D)D	b	getY
	m	(D)D	c	getZ
	m	(F)F	a	getYRot
	m	(F)F	b	getXRot
	m	()Z	b	isOnGround
	m	()Z	e	horizontalCollision
	m	()Z	f	hasPosition
	m	()Z	g	hasRotation
	m	(Lws;)V	a	handle
c	aim$a	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos
	f	Lzm;	j	STREAM_CODEC
	m	(Lfis;ZZ)V	<init>	<init>
	m	(DDDZZ)V	<init>	<init>
	m	(Lwg;)Laim$a;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aim$b	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot
	f	Lzm;	j	STREAM_CODEC
	m	(Lfis;FFZZ)V	<init>	<init>
	m	(DDDFFZZ)V	<init>	<init>
	m	(Lwg;)Laim$b;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aim$c	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot
	f	Lzm;	j	STREAM_CODEC
	m	(FFZZ)V	<init>	<init>
	m	(Lwg;)Laim$c;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aim$d	net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly
	f	Lzm;	j	STREAM_CODEC
	m	(ZZ)V	<init>	<init>
	m	(Lwg;)Laim$d;	a	read
	m	(Lwg;)V	b	write
	m	()Lzy;	a	type
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ain	net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket
	f	Lfis;	b	position
	f	F	c	yRot
	f	F	d	xRot
	f	Z	e	onGround
	f	Lzm;	a	STREAM_CODEC
	m	(Lfis;FFZ)V	<init>	<init>
	m	(Lbzm;)Lain;	a	fromEntity
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	b	position
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Z	g	onGround
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aio	net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket
	f	Lzm;	a	STREAM_CODEC
	f	Z	b	left
	f	Z	c	right
	m	(ZZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lahm;)V	a	handle
	m	()Lzy;	a	type
	m	()Z	b	getLeft
	m	()Z	e	getRight
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aip	net/minecraft/network/protocol/game/ServerboundPickItemFromBlockPacket
	f	Ljb;	b	pos
	f	Z	c	includeData
	f	Lzm;	a	STREAM_CODEC
	m	(Ljb;Z)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()Z	e	includeData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aiq	net/minecraft/network/protocol/game/ServerboundPickItemFromEntityPacket
	f	I	b	id
	f	Z	c	includeData
	f	Lzm;	a	STREAM_CODEC
	m	(IZ)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()Z	e	includeData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	air	net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket
	f	I	b	containerId
	f	Ldiu;	c	recipe
	f	Z	d	useMaxItems
	f	Lzm;	a	STREAM_CODEC
	m	(ILdiu;Z)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	containerId
	m	()Ldiu;	e	recipe
	m	()Z	f	useMaxItems
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ais	net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_FLYING
	f	Z	c	isFlying
	m	(Lcup;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Z	b	isFlying
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ait	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	Ljh;	c	direction
	f	Lait$a;	d	action
	f	I	e	sequence
	m	(Lait$a;Ljb;Ljh;I)V	<init>	<init>
	m	(Lait$a;Ljb;Ljh;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Ljh;	e	getDirection
	m	()Lait$a;	f	getAction
	m	()I	g	getSequence
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ait$a	net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action
	f	Lait$a;	a	START_DESTROY_BLOCK
	f	Lait$a;	b	ABORT_DESTROY_BLOCK
	f	Lait$a;	c	STOP_DESTROY_BLOCK
	f	Lait$a;	d	DROP_ALL_ITEMS
	f	Lait$a;	e	DROP_ITEM
	f	Lait$a;	f	RELEASE_USE_ITEM
	f	Lait$a;	g	SWAP_ITEM_WITH_OFFHAND
	f	[Lait$a;	h	$VALUES
	m	()[Lait$a;	values	values
	m	(Ljava/lang/String;)Lait$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lait$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aiu	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	id
	f	Laiu$a;	c	action
	f	I	d	data
	m	(Lbzm;Laiu$a;)V	<init>	<init>
	m	(Lbzm;Laiu$a;I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getId
	m	()Laiu$a;	e	getAction
	m	()I	f	getData
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aiu$a	net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action
	f	Laiu$a;	a	STOP_SLEEPING
	f	Laiu$a;	b	START_SPRINTING
	f	Laiu$a;	c	STOP_SPRINTING
	f	Laiu$a;	d	START_RIDING_JUMP
	f	Laiu$a;	e	STOP_RIDING_JUMP
	f	Laiu$a;	f	OPEN_INVENTORY
	f	Laiu$a;	g	START_FALL_FLYING
	f	[Laiu$a;	h	$VALUES
	m	()[Laiu$a;	values	values
	m	(Ljava/lang/String;)Laiu$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Laiu$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aiv	net/minecraft/network/protocol/game/ServerboundPlayerInputPacket
	f	Lcur;	b	input
	f	Lzm;	a	STREAM_CODEC
	m	(Lcur;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcur;	b	input
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aiw	net/minecraft/network/protocol/game/ServerboundPlayerLoadedPacket
	f	Lzm;	a	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aix	net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ldac;	b	bookType
	f	Z	c	isOpen
	f	Z	d	isFiltering
	m	(Ldac;ZZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ldac;	b	getBookType
	m	()Z	e	isOpen
	m	()Z	f	isFiltering
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aiy	net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket
	f	Ldiu;	b	recipe
	f	Lzm;	a	STREAM_CODEC
	m	(Ldiu;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiu;	b	recipe
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aiz	net/minecraft/network/protocol/game/ServerboundRenameItemPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	b	getName
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aja	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket
	f	Lzm;	a	STREAM_CODEC
	f	Laja$a;	b	action
	f	Lame;	c	tab
	m	(Laja$a;Lame;)V	<init>	<init>
	m	(Laj;)Laja;	a	openedTab
	m	()Laja;	b	closedScreen
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Laja$a;	e	getAction
	m	()Lame;	f	getTab
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aja$a	net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action
	f	Laja$a;	a	OPENED_TAB
	f	Laja$a;	b	CLOSED_SCREEN
	f	[Laja$a;	c	$VALUES
	m	()[Laja$a;	values	values
	m	(Ljava/lang/String;)Laja$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Laja$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ajb	net/minecraft/network/protocol/game/ServerboundSelectBundleItemPacket
	f	I	b	slotId
	f	I	c	selectedItemIndex
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(II)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	slotId
	m	()I	e	selectedItemIndex
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajc	net/minecraft/network/protocol/game/ServerboundSelectTradePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	item
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getItem
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajd	net/minecraft/network/protocol/game/ServerboundSetBeaconPacket
	f	Ljava/util/Optional;	b	primary
	f	Ljava/util/Optional;	c	secondary
	f	Lzm;	a	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	primary
	m	()Ljava/util/Optional;	e	secondary
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aje	net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	slot
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()I	b	getSlot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajf	net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_TRACK_OUTPUT
	f	I	c	FLAG_CONDITIONAL
	f	I	d	FLAG_AUTOMATIC
	f	Ljb;	e	pos
	f	Ljava/lang/String;	f	command
	f	Z	g	trackOutput
	f	Z	h	conditional
	f	Z	i	automatic
	f	Lebk$a;	j	mode
	m	(Ljb;Ljava/lang/String;Lebk$a;ZZZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Ljava/lang/String;	e	getCommand
	m	()Z	f	isTrackOutput
	m	()Z	g	isConditional
	m	()Z	h	isAutomatic
	m	()Lebk$a;	i	getMode
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajg	net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	entity
	f	Ljava/lang/String;	c	command
	f	Z	d	trackOutput
	m	(ILjava/lang/String;Z)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	(Ldmu;)Ldlt;	a	getCommandBlock
	m	()Ljava/lang/String;	b	getCommand
	m	()Z	e	isTrackOutput
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajh	net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket
	f	S	b	slotNum
	f	Ldcv;	c	itemStack
	f	Lzm;	a	STREAM_CODEC
	m	(ILdcv;)V	<init>	<init>
	m	(SLdcv;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()S	b	slotNum
	m	()Ldcv;	e	itemStack
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aji	net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljb;	b	pos
	f	Lame;	c	name
	f	Lame;	d	target
	f	Lame;	e	pool
	f	Ljava/lang/String;	f	finalState
	f	Lecd$a;	g	joint
	f	I	h	selectionPriority
	f	I	i	placementPriority
	m	(Ljb;Lame;Lame;Lame;Ljava/lang/String;Lecd$a;II)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Lame;	e	getName
	m	()Lame;	f	getTarget
	m	()Lame;	g	getPool
	m	()Ljava/lang/String;	h	getFinalState
	m	()Lecd$a;	i	getJoint
	m	()I	j	getSelectionPriority
	m	()I	k	getPlacementPriority
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajj	net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	FLAG_IGNORE_ENTITIES
	f	I	c	FLAG_SHOW_AIR
	f	I	d	FLAG_SHOW_BOUNDING_BOX
	f	I	e	FLAG_STRICT
	f	Ljb;	f	pos
	f	Lecs$a;	g	updateType
	f	Lefl;	h	mode
	f	Ljava/lang/String;	i	name
	f	Ljb;	j	offset
	f	Lkg;	k	size
	f	Ldvd;	l	mirror
	f	Ldwu;	m	rotation
	f	Ljava/lang/String;	n	data
	f	Z	o	ignoreEntities
	f	Z	p	strict
	f	Z	q	showAir
	f	Z	r	showBoundingBox
	f	F	s	integrity
	f	J	t	seed
	m	(Ljb;Lecs$a;Lefl;Ljava/lang/String;Ljb;Lkg;Ldvd;Ldwu;Ljava/lang/String;ZZZZFJ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Lecs$a;	e	getUpdateType
	m	()Lefl;	f	getMode
	m	()Ljava/lang/String;	g	getName
	m	()Ljb;	h	getOffset
	m	()Lkg;	i	getSize
	m	()Ldvd;	j	getMirror
	m	()Ldwu;	k	getRotation
	m	()Ljava/lang/String;	l	getData
	m	()Z	m	isIgnoreEntities
	m	()Z	n	isStrict
	m	()Z	o	isShowAir
	m	()Z	p	isShowBoundingBox
	m	()F	q	getIntegrity
	m	()J	r	getSeed
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajk	net/minecraft/network/protocol/game/ServerboundSetTestBlockPacket
	f	Ljb;	b	position
	f	Lefm;	c	mode
	f	Ljava/lang/String;	d	message
	f	Lzm;	a	STREAM_CODEC
	m	(Ljb;Lefm;Ljava/lang/String;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	position
	m	()Lefm;	e	mode
	m	()Ljava/lang/String;	f	message
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajl	net/minecraft/network/protocol/game/ServerboundSignUpdatePacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	MAX_STRING_LENGTH
	f	Ljb;	c	pos
	f	[Ljava/lang/String;	d	lines
	f	Z	e	isFrontText
	m	(Ljb;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljb;	b	getPos
	m	()Z	e	isFrontText
	m	()[Ljava/lang/String;	f	getLines
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajm	net/minecraft/network/protocol/game/ServerboundSwingPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lbxi;	b	hand
	m	(Lbxi;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Lbxi;	b	getHand
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajn	net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/util/UUID;	b	uuid
	m	(Ljava/util/UUID;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	(Laub;)Lbzm;	a	getEntity
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajo	net/minecraft/network/protocol/game/ServerboundTestInstanceBlockActionPacket
	f	Ljb;	b	pos
	f	Lajo$a;	c	action
	f	Lecu$a;	d	data
	f	Lzm;	a	STREAM_CODEC
	m	(Ljb;Lajo$a;Ljava/util/Optional;Lkg;Ldwu;Z)V	<init>	<init>
	m	(Ljb;Lajo$a;Lecu$a;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()Lajo$a;	e	action
	m	()Lecu$a;	f	data
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajo$a	net/minecraft/network/protocol/game/ServerboundTestInstanceBlockActionPacket$Action
	f	Lajo$a;	a	INIT
	f	Lajo$a;	b	QUERY
	f	Lajo$a;	c	SET
	f	Lajo$a;	d	RESET
	f	Lajo$a;	e	SAVE
	f	Lajo$a;	f	EXPORT
	f	Lajo$a;	g	RUN
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	h	STREAM_CODEC
	f	I	j	id
	f	[Lajo$a;	k	$VALUES
	m	()[Lajo$a;	values	values
	m	(Ljava/lang/String;)Lajo$a;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	(Lajo$a;)I	a	lambda$static$1
	m	(Lajo$a;)I	b	lambda$static$0
	m	()[Lajo$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ajp	net/minecraft/network/protocol/game/ServerboundUseItemOnPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lfio;	b	blockHit
	f	Lbxi;	c	hand
	f	I	d	sequence
	m	(Lbxi;Lfio;I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Lbxi;	b	getHand
	m	()Lfio;	e	getHitResult
	m	()I	f	getSequence
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajq	net/minecraft/network/protocol/game/ServerboundUseItemPacket
	f	Lzm;	a	STREAM_CODEC
	f	Lbxi;	b	hand
	f	I	c	sequence
	f	F	d	yRot
	f	F	e	xRot
	m	(Lbxi;IFF)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lahm;)V	a	handle
	m	()Lbxi;	b	getHand
	m	()I	e	getSequence
	m	()F	f	getYRot
	m	()F	g	getXRot
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajr	net/minecraft/network/protocol/game/VecDeltaCodec
	f	D	a	TRUNCATION_STEPS
	f	Lfis;	b	base
	m	()V	<init>	<init>
	m	(D)J	a	encode
	m	(J)D	a	decode
	m	(JJJ)Lfis;	a	decode
	m	(Lfis;)J	a	encodeX
	m	(Lfis;)J	b	encodeY
	m	(Lfis;)J	c	encodeZ
	m	(Lfis;)Lfis;	d	delta
	m	(Lfis;)V	e	setBase
	m	()Lfis;	a	getBase
c	ajs	net/minecraft/network/protocol/game/package-info
c	ajt	net/minecraft/network/protocol/handshake/ClientIntent
	f	Lajt;	a	STATUS
	f	Lajt;	b	LOGIN
	f	Lajt;	c	TRANSFER
	f	I	d	STATUS_ID
	f	I	e	LOGIN_ID
	f	I	f	TRANSFER_ID
	f	[Lajt;	g	$VALUES
	m	()[Lajt;	values	values
	m	(Ljava/lang/String;)Lajt;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(I)Lajt;	a	byId
	m	()I	a	id
	m	()[Lajt;	b	$values
	m	()V	<clinit>	<clinit>
c	aju	net/minecraft/network/protocol/handshake/ClientIntentionPacket
	f	I	b	protocolVersion
	f	Ljava/lang/String;	c	hostName
	f	I	d	port
	f	Lajt;	e	intention
	f	Lzm;	a	STREAM_CODEC
	f	I	f	MAX_HOST_LENGTH
	m	(ILjava/lang/String;ILajt;)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lajx;)V	a	handle
	m	()Z	d	isTerminal
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	protocolVersion
	m	()Ljava/lang/String;	e	hostName
	m	()I	f	port
	m	()Lajt;	g	intention
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ajv	net/minecraft/network/protocol/handshake/HandshakePacketTypes
	f	Lzy;	a	CLIENT_INTENTION
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createServerbound
	m	()V	<clinit>	<clinit>
c	ajw	net/minecraft/network/protocol/handshake/HandshakeProtocols
	f	Laac;	a	SERVERBOUND_TEMPLATE
	f	Lwu;	b	SERVERBOUND
	m	()V	<init>	<init>
	m	(Laab;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ajx	net/minecraft/network/protocol/handshake/ServerHandshakePacketListener
	m	()Lwe;	b	protocol
	m	(Laju;)V	a	handleIntention
c	ajy	net/minecraft/network/protocol/handshake/package-info
c	ajz	net/minecraft/network/protocol/login/ClientLoginPacketListener
	m	()Lwe;	b	protocol
	m	(Lakb;)V	a	handleHello
	m	(Lake;)V	a	handleLoginFinished
	m	(Lakd;)V	a	handleDisconnect
	m	(Lakc;)V	a	handleCompression
	m	(Laka;)V	a	handleCustomQuery
c	aka	net/minecraft/network/protocol/login/ClientboundCustomQueryPacket
	f	I	b	transactionId
	f	Lakn;	c	payload
	f	Lzm;	a	STREAM_CODEC
	f	I	d	MAX_PAYLOAD_SIZE
	m	(Lwg;)V	<init>	<init>
	m	(ILakn;)V	<init>	<init>
	m	(Lame;Lwg;)Lakn;	a	readPayload
	m	(Lame;Lwg;)Lakp;	b	readUnknownPayload
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lajz;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	transactionId
	m	()Lakn;	e	payload
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akb	net/minecraft/network/protocol/login/ClientboundHelloPacket
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	serverId
	f	[B	c	publicKey
	f	[B	d	challenge
	f	Z	e	shouldAuthenticate
	m	(Ljava/lang/String;[B[BZ)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lajz;)V	a	handle
	m	()Ljava/lang/String;	b	getServerId
	m	()Ljava/security/PublicKey;	e	getPublicKey
	m	()[B	f	getChallenge
	m	()Z	g	shouldAuthenticate
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akc	net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket
	f	Lzm;	a	STREAM_CODEC
	f	I	b	compressionThreshold
	m	(I)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lajz;)V	a	handle
	m	()I	b	getCompressionThreshold
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akd	net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket
	f	Lxo;	b	reason
	f	Lamc;	c	OPS
	f	Lzm;	a	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lajz;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	reason
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ake	net/minecraft/network/protocol/login/ClientboundLoginFinishedPacket
	f	Lcom/mojang/authlib/GameProfile;	b	gameProfile
	f	Lzm;	a	STREAM_CODEC
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lajz;)V	a	handle
	m	()Z	d	isTerminal
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/authlib/GameProfile;	b	gameProfile
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akf	net/minecraft/network/protocol/login/LoginPacketTypes
	f	Lzy;	a	CLIENTBOUND_CUSTOM_QUERY
	f	Lzy;	b	CLIENTBOUND_LOGIN_FINISHED
	f	Lzy;	c	CLIENTBOUND_HELLO
	f	Lzy;	d	CLIENTBOUND_LOGIN_COMPRESSION
	f	Lzy;	e	CLIENTBOUND_LOGIN_DISCONNECT
	f	Lzy;	f	SERVERBOUND_CUSTOM_QUERY_ANSWER
	f	Lzy;	g	SERVERBOUND_HELLO
	f	Lzy;	h	SERVERBOUND_KEY
	f	Lzy;	i	SERVERBOUND_LOGIN_ACKNOWLEDGED
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	akg	net/minecraft/network/protocol/login/LoginProtocols
	f	Laac;	a	SERVERBOUND_TEMPLATE
	f	Lwu;	b	SERVERBOUND
	f	Laac;	c	CLIENTBOUND_TEMPLATE
	f	Lwu;	d	CLIENTBOUND
	m	()V	<init>	<init>
	m	(Laab;)V	a	lambda$static$1
	m	(Laab;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	akh	net/minecraft/network/protocol/login/ServerLoginPacketListener
	m	()Lwe;	b	protocol
	m	(Lakj;)V	a	handleHello
	m	(Lakk;)V	a	handleKey
	m	(Laki;)V	a	handleCustomQueryPacket
	m	(Lakl;)V	a	handleLoginAcknowledgement
c	aki	net/minecraft/network/protocol/login/ServerboundCustomQueryAnswerPacket
	f	I	b	transactionId
	f	Lakm;	c	payload
	f	Lzm;	a	STREAM_CODEC
	f	I	d	MAX_PAYLOAD_SIZE
	m	(ILakm;)V	<init>	<init>
	m	(Lwg;)Laki;	a	read
	m	(ILwg;)Lakm;	a	readPayload
	m	(Lwg;)Lakm;	b	readUnknownPayload
	m	(Lwg;)V	c	write
	m	()Lzy;	a	type
	m	(Lakh;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	transactionId
	m	()Lakm;	e	payload
	m	(Lws;)V	a	handle
	m	(Lwg;Lakm;)V	a	lambda$write$0
	m	()V	<clinit>	<clinit>
c	akj	net/minecraft/network/protocol/login/ServerboundHelloPacket
	f	Ljava/lang/String;	b	name
	f	Ljava/util/UUID;	c	profileId
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/UUID;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lakh;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Ljava/util/UUID;	e	profileId
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akk	net/minecraft/network/protocol/login/ServerboundKeyPacket
	f	Lzm;	a	STREAM_CODEC
	f	[B	b	keybytes
	f	[B	c	encryptedChallenge
	m	(Ljavax/crypto/SecretKey;Ljava/security/PublicKey;[B)V	<init>	<init>
	m	(Lwg;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lakh;)V	a	handle
	m	(Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey;	a	getSecretKey
	m	([BLjava/security/PrivateKey;)Z	a	isChallengeValid
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akl	net/minecraft/network/protocol/login/ServerboundLoginAcknowledgedPacket
	f	Lakl;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lakh;)V	a	handle
	m	()Z	d	isTerminal
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akm	net/minecraft/network/protocol/login/custom/CustomQueryAnswerPayload
	m	(Lwg;)V	a	write
c	akn	net/minecraft/network/protocol/login/custom/CustomQueryPayload
	m	()Lame;	a	id
	m	(Lwg;)V	a	write
c	ako	net/minecraft/network/protocol/login/custom/DiscardedQueryAnswerPayload
	f	Lako;	a	INSTANCE
	m	()V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	akp	net/minecraft/network/protocol/login/custom/DiscardedQueryPayload
	f	Lame;	a	id
	m	(Lame;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
c	akq	net/minecraft/network/protocol/login/custom/package-info
c	akr	net/minecraft/network/protocol/login/package-info
c	aks	net/minecraft/network/protocol/package-info
c	akt	net/minecraft/network/protocol/ping/ClientPongPacketListener
	m	(Laku;)V	a	handlePongResponse
c	aku	net/minecraft/network/protocol/ping/ClientboundPongResponsePacket
	f	J	b	time
	f	Lzm;	a	STREAM_CODEC
	m	(Lwg;)V	<init>	<init>
	m	(J)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Lzy;	a	type
	m	(Lakt;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	time
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	akv	net/minecraft/network/protocol/ping/PingPacketTypes
	f	Lzy;	a	CLIENTBOUND_PONG_RESPONSE
	f	Lzy;	b	SERVERBOUND_PING_REQUEST
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	akw	net/minecraft/network/protocol/ping/ServerPingPacketListener
	m	(Lakx;)V	a	handlePingRequest
c	akx	net/minecraft/network/protocol/ping/ServerboundPingRequestPacket
	f	Lzm;	a	STREAM_CODEC
	f	J	b	time
	m	(J)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)V	a	write
	m	()Lzy;	a	type
	m	(Lakw;)V	a	handle
	m	()J	b	getTime
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	aky	net/minecraft/network/protocol/ping/package-info
c	akz	net/minecraft/network/protocol/status/ClientStatusPacketListener
	m	()Lwe;	b	protocol
	m	(Lala;)V	a	handleStatusResponse
c	ala	net/minecraft/network/protocol/status/ClientboundStatusResponsePacket
	f	Lalb;	b	status
	f	Lamc;	c	OPS
	f	Lzm;	a	STREAM_CODEC
	m	(Lalb;)V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lakz;)V	a	handle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lalb;	b	status
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	alb	net/minecraft/network/protocol/status/ServerStatus
	f	Lxo;	b	description
	f	Ljava/util/Optional;	c	players
	f	Ljava/util/Optional;	d	version
	f	Ljava/util/Optional;	e	favicon
	f	Z	f	enforcesSecureChat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lxo;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	description
	m	()Ljava/util/Optional;	b	players
	m	()Ljava/util/Optional;	c	version
	m	()Ljava/util/Optional;	d	favicon
	m	()Z	e	enforcesSecureChat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alb$a	net/minecraft/network/protocol/status/ServerStatus$Favicon
	f	[B	b	iconBytes
	f	Ljava/lang/String;	c	PREFIX
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	([B)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[B	a	iconBytes
	m	(Lalb$a;)Ljava/lang/String;	a	lambda$static$3
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	b	lambda$static$1
	m	()Ljava/lang/String;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alb$b	net/minecraft/network/protocol/status/ServerStatus$Players
	f	I	b	max
	f	I	c	online
	f	Ljava/util/List;	d	sample
	f	Lcom/mojang/serialization/Codec;	e	PROFILE_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(IILjava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	max
	m	()I	b	online
	m	()Ljava/util/List;	c	sample
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alb$c	net/minecraft/network/protocol/status/ServerStatus$Version
	f	Ljava/lang/String;	b	name
	f	I	c	protocol
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lalb$c;	a	current
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()I	c	protocol
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alc	net/minecraft/network/protocol/status/ServerStatusPacketListener
	m	()Lwe;	b	protocol
	m	(Lald;)V	a	handleStatusRequest
c	ald	net/minecraft/network/protocol/status/ServerboundStatusRequestPacket
	f	Lald;	a	INSTANCE
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lzy;	a	type
	m	(Lalc;)V	a	handle
	m	(Lws;)V	a	handle
	m	()V	<clinit>	<clinit>
c	ale	net/minecraft/network/protocol/status/StatusPacketTypes
	f	Lzy;	a	CLIENTBOUND_STATUS_RESPONSE
	f	Lzy;	b	SERVERBOUND_STATUS_REQUEST
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lzy;	a	createClientbound
	m	(Ljava/lang/String;)Lzy;	b	createServerbound
	m	()V	<clinit>	<clinit>
c	alf	net/minecraft/network/protocol/status/StatusProtocols
	f	Laac;	a	SERVERBOUND_TEMPLATE
	f	Lwu;	b	SERVERBOUND
	f	Laac;	c	CLIENTBOUND_TEMPLATE
	f	Lwu;	d	CLIENTBOUND
	m	()V	<init>	<init>
	m	(Laab;)V	a	lambda$static$2
	m	(Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf;	a	lambda$static$1
	m	(Laab;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alg	net/minecraft/network/protocol/status/package-info
c	alh	net/minecraft/network/syncher/EntityDataAccessor
	f	I	a	id
	f	Lali;	b	serializer
	m	(ILali;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()I	a	id
	m	()Lali;	b	serializer
c	ali	net/minecraft/network/syncher/EntityDataSerializer
	m	()Lzm;	codec	codec
	m	(I)Lalh;	a	createAccessor
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
	m	(Lzm;)Lali;	a	forValueType
	m	(Lzm;)Lzm;	b	lambda$forValueType$0
c	ali$a	net/minecraft/network/syncher/EntityDataSerializer$ForValueType
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
c	alj	net/minecraft/network/syncher/EntityDataSerializers
	f	Lbaw;	J	SERIALIZERS
	f	Lali;	a	BYTE
	f	Lali;	b	INT
	f	Lali;	c	LONG
	f	Lali;	d	FLOAT
	f	Lali;	e	STRING
	f	Lali;	f	COMPONENT
	f	Lali;	g	OPTIONAL_COMPONENT
	f	Lali;	h	ITEM_STACK
	f	Lali;	i	BLOCK_STATE
	f	Lzm;	K	OPTIONAL_BLOCK_STATE_CODEC
	f	Lali;	j	OPTIONAL_BLOCK_STATE
	f	Lali;	k	BOOLEAN
	f	Lali;	l	PARTICLE
	f	Lali;	m	PARTICLES
	f	Lali;	n	ROTATIONS
	f	Lali;	o	BLOCK_POS
	f	Lali;	p	OPTIONAL_BLOCK_POS
	f	Lali;	q	DIRECTION
	f	Lali;	r	OPTIONAL_LIVING_ENTITY_REFERENCE
	f	Lali;	s	OPTIONAL_GLOBAL_POS
	f	Lali;	t	COMPOUND_TAG
	f	Lali;	u	VILLAGER_DATA
	f	Lzm;	L	OPTIONAL_UNSIGNED_INT_CODEC
	f	Lali;	v	OPTIONAL_UNSIGNED_INT
	f	Lali;	w	POSE
	f	Lali;	x	CAT_VARIANT
	f	Lali;	y	CHICKEN_VARIANT
	f	Lali;	z	COW_VARIANT
	f	Lali;	A	WOLF_VARIANT
	f	Lali;	B	WOLF_SOUND_VARIANT
	f	Lali;	C	FROG_VARIANT
	f	Lali;	D	PIG_VARIANT
	f	Lali;	E	PAINTING_VARIANT
	f	Lali;	F	ARMADILLO_STATE
	f	Lali;	G	SNIFFER_STATE
	f	Lali;	H	VECTOR3
	f	Lali;	I	QUATERNION
	m	(Lali;)V	a	registerSerializer
	m	(I)Lali;	a	getSerializer
	m	(Lali;)I	b	getSerializedId
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	alj$1	net/minecraft/network/syncher/EntityDataSerializers$1
	m	()V	<init>	<init>
	m	()Lzm;	codec	codec
	m	(Ldcv;)Ldcv;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
c	alj$2	net/minecraft/network/syncher/EntityDataSerializers$2
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	encode
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	alj$3	net/minecraft/network/syncher/EntityDataSerializers$3
	m	()V	<init>	<init>
	m	()Lzm;	codec	codec
	m	(Lui;)Lui;	a	copy
	m	(Ljava/lang/Object;)Ljava/lang/Object;	copy	copy
c	alj$4	net/minecraft/network/syncher/EntityDataSerializers$4
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/OptionalInt;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/OptionalInt;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	alk	net/minecraft/network/syncher/SyncedDataHolder
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
c	all	net/minecraft/network/syncher/SynchedEntityData
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_ID_VALUE
	f	Lbas;	c	ID_REGISTRY
	f	Lalk;	d	entity
	f	[Lall$b;	e	itemsById
	f	Z	f	isDirty
	m	(Lalk;[Lall$b;)V	<init>	<init>
	m	(Ljava/lang/Class;Lali;)Lalh;	a	defineId
	m	(Lalh;)Lall$b;	b	getItem
	m	(Lalh;)Ljava/lang/Object;	a	get
	m	(Lalh;Ljava/lang/Object;)V	a	set
	m	(Lalh;Ljava/lang/Object;Z)V	a	set
	m	()Z	a	isDirty
	m	()Ljava/util/List;	b	packDirty
	m	()Ljava/util/List;	c	getNonDefaultValues
	m	(Ljava/util/List;)V	a	assignValues
	m	(Lall$b;Lall$c;)V	a	assignValue
	m	()V	<clinit>	<clinit>
c	all$a	net/minecraft/network/syncher/SynchedEntityData$Builder
	f	Lalk;	a	entity
	f	[Lall$b;	b	itemsById
	m	(Lalk;)V	<init>	<init>
	m	(Lalh;Ljava/lang/Object;)Lall$a;	a	define
	m	()Lall;	a	build
c	all$b	net/minecraft/network/syncher/SynchedEntityData$DataItem
	f	Lalh;	a	accessor
	f	Ljava/lang/Object;	b	value
	f	Ljava/lang/Object;	c	initialValue
	f	Z	d	dirty
	m	(Lalh;Ljava/lang/Object;)V	<init>	<init>
	m	()Lalh;	a	getAccessor
	m	(Ljava/lang/Object;)V	a	setValue
	m	()Ljava/lang/Object;	b	getValue
	m	()Z	c	isDirty
	m	(Z)V	a	setDirty
	m	()Z	d	isSetToDefault
	m	()Lall$c;	e	value
c	all$c	net/minecraft/network/syncher/SynchedEntityData$DataValue
	f	I	a	id
	f	Lali;	b	serializer
	f	Ljava/lang/Object;	c	value
	m	(ILali;Ljava/lang/Object;)V	<init>	<init>
	m	(Lalh;Ljava/lang/Object;)Lall$c;	a	create
	m	(Lwx;)V	a	write
	m	(Lwx;I)Lall$c;	a	read
	m	(Lwx;ILali;)Lall$c;	a	read
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	id
	m	()Lali;	b	serializer
	m	()Ljava/lang/Object;	c	value
c	alm	net/minecraft/network/syncher/package-info
c	net/minecraft/obfuscate/DontObfuscate	net/minecraft/obfuscate/DontObfuscate
c	aln	net/minecraft/obfuscate/package-info
c	alo	net/minecraft/package-info
c	alp	net/minecraft/recipebook/PlaceRecipeHelper
	m	(IILdhm;Ljava/lang/Iterable;Lalp$a;)V	a	placeRecipe
	m	(IIIILjava/lang/Iterable;Lalp$a;)V	a	placeRecipe
c	alp$a	net/minecraft/recipebook/PlaceRecipeHelper$Output
	m	(Ljava/lang/Object;III)V	addItemToSlot	addItemToSlot
c	alq	net/minecraft/recipebook/ServerPlaceRecipe
	f	I	a	ITEM_NOT_FOUND
	f	Lcus;	b	inventory
	f	Lalq$a;	c	menu
	f	Z	d	useMaxItems
	f	I	e	gridWidth
	f	I	f	gridHeight
	f	Ljava/util/List;	g	inputGridSlots
	f	Ljava/util/List;	h	slotsToClear
	m	(Lalq$a;IILjava/util/List;Ljava/util/List;Lcus;Ldhr;ZZ)Ldab$a;	a	placeRecipe
	m	(Lalq$a;Lcus;ZIILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Ldhr;Lcuz;)Ldab$a;	a	tryPlaceRecipe
	m	()V	a	clearGrid
	m	(Ldhr;Lcuz;)V	b	placeRecipe
	m	(ILjava/util/List;)I	a	clampToMaxStackSize
	m	(IZ)I	a	calculateAmountToCraft
	m	(Ldak;Ljl;I)I	a	moveItemToGrid
	m	()Z	b	testClearGrid
	m	()I	c	getAmountOfFreeSlotsInInventory
	m	(Ljava/util/List;ILjava/lang/Integer;III)V	a	lambda$placeRecipe$0
c	alq$a	net/minecraft/recipebook/ServerPlaceRecipe$CraftingMenuAccess
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
	m	()V	a	clearCraftingContent
	m	(Ldhr;)Z	a	recipeMatches
c	alr	net/minecraft/recipebook/package-info
c	als	net/minecraft/references/Blocks
	f	Lamd;	a	PUMPKIN
	f	Lamd;	b	PUMPKIN_STEM
	f	Lamd;	c	ATTACHED_PUMPKIN_STEM
	f	Lamd;	d	MELON
	f	Lamd;	e	MELON_STEM
	f	Lamd;	f	ATTACHED_MELON_STEM
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	()V	<clinit>	<clinit>
c	alt	net/minecraft/references/Items
	f	Lamd;	a	PUMPKIN_SEEDS
	f	Lamd;	b	MELON_SEEDS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	()V	<clinit>	<clinit>
c	alu	net/minecraft/references/package-info
c	alv	net/minecraft/resources/DelegatingOps
	f	Lcom/mojang/serialization/DynamicOps;	a	delegate
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Ljava/lang/Object;	empty	empty
	m	()Ljava/lang/Object;	emptyMap	emptyMap
	m	()Ljava/lang/Object;	emptyList	emptyList
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	convertTo	convertTo
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getNumberValue	getNumberValue
	m	(Ljava/lang/Number;)Ljava/lang/Object;	createNumeric	createNumeric
	m	(B)Ljava/lang/Object;	createByte	createByte
	m	(S)Ljava/lang/Object;	createShort	createShort
	m	(I)Ljava/lang/Object;	createInt	createInt
	m	(J)Ljava/lang/Object;	createLong	createLong
	m	(F)Ljava/lang/Object;	createFloat	createFloat
	m	(D)Ljava/lang/Object;	createDouble	createDouble
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getBooleanValue	getBooleanValue
	m	(Z)Ljava/lang/Object;	createBoolean	createBoolean
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStringValue	getStringValue
	m	(Ljava/lang/String;)Ljava/lang/Object;	createString	createString
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToPrimitive	mergeToPrimitive
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapValues	getMapValues
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapEntries	getMapEntries
	m	(Ljava/util/Map;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMap	getMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStream	getStream
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getList	getList
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createList	createList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getByteBuffer	getByteBuffer
	m	(Ljava/nio/ByteBuffer;)Ljava/lang/Object;	createByteList	createByteList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getIntStream	getIntStream
	m	(Ljava/util/stream/IntStream;)Ljava/lang/Object;	createIntList	createIntList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getLongStream	getLongStream
	m	(Ljava/util/stream/LongStream;)Ljava/lang/Object;	createLongList	createLongList
	m	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;	remove	remove
	m	()Z	compressMaps	compressMaps
	m	()Lcom/mojang/serialization/ListBuilder;	listBuilder	listBuilder
	m	()Lcom/mojang/serialization/RecordBuilder;	mapBuilder	mapBuilder
c	alv$a	net/minecraft/resources/DelegatingOps$DelegateListBuilder
	f	Lcom/mojang/serialization/ListBuilder;	b	original
	f	Lalv;	a	this$0
	m	(Lalv;Lcom/mojang/serialization/ListBuilder;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DynamicOps;	ops	ops
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/ListBuilder;	add	add
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/ListBuilder;	add	add
	m	(Ljava/lang/Object;Lcom/mojang/serialization/Encoder;)Lcom/mojang/serialization/ListBuilder;	add	add
	m	(Ljava/lang/Iterable;Lcom/mojang/serialization/Encoder;)Lcom/mojang/serialization/ListBuilder;	addAll	addAll
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/ListBuilder;	withErrorsFrom	withErrorsFrom
	m	(Ljava/util/function/UnaryOperator;)Lcom/mojang/serialization/ListBuilder;	mapError	mapError
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	build	build
	m	(Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)V	a	lambda$addAll$0
c	alv$b	net/minecraft/resources/DelegatingOps$DelegateRecordBuilder
	f	Lcom/mojang/serialization/RecordBuilder;	b	original
	f	Lalv;	a	this$0
	m	(Lalv;Lcom/mojang/serialization/RecordBuilder;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DynamicOps;	ops	ops
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Lcom/mojang/serialization/DataResult;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Ljava/lang/String;Ljava/lang/Object;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Ljava/lang/String;Ljava/lang/Object;Lcom/mojang/serialization/Encoder;)Lcom/mojang/serialization/RecordBuilder;	add	add
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/RecordBuilder;	withErrorsFrom	withErrorsFrom
	m	(Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/serialization/RecordBuilder;	setLifecycle	setLifecycle
	m	(Ljava/util/function/UnaryOperator;)Lcom/mojang/serialization/RecordBuilder;	mapError	mapError
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	build	build
c	alw	net/minecraft/resources/DependantName
	m	(Lamd;)Ljava/lang/Object;	get	get
	m	(Ljava/lang/Object;)Lalw;	fixed	fixed
	m	(Ljava/lang/Object;Lamd;)Ljava/lang/Object;	a	lambda$fixed$0
c	alx	net/minecraft/resources/FileToIdConverter
	f	Ljava/lang/String;	a	prefix
	f	Ljava/lang/String;	b	extension
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lalx;	a	json
	m	(Lamd;)Lalx;	a	registry
	m	(Lame;)Lame;	a	idToFile
	m	(Lame;)Lame;	b	fileToId
	m	(Laxo;)Ljava/util/Map;	a	listMatchingResources
	m	(Laxo;)Ljava/util/Map;	b	listMatchingResourceStacks
	m	(Lame;)Z	c	lambda$listMatchingResourceStacks$1
	m	(Lame;)Z	d	lambda$listMatchingResources$0
c	aly	net/minecraft/resources/HolderSetCodec
	f	Lamd;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Lcom/mojang/serialization/Codec;	c	homogenousListCodec
	f	Lcom/mojang/serialization/Codec;	d	registryAwareCodec
	m	(Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	homogenousList
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec;	a	create
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljm;Lbae;)Lcom/mojang/serialization/DataResult;	a	lookupTag
	m	(Ljp;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	decodeWithoutRegistry
	m	(Ljp;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	encodeWithoutRegistry
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decodeWithoutRegistry$8
	m	(Ljl;)Ljava/lang/String;	a	lambda$decodeWithoutRegistry$7
	m	(Ljp;)Ljava/lang/String;	a	lambda$encode$6
	m	(Lbae;)Lcom/mojang/serialization/DataResult;	a	lambda$lookupTag$5
	m	(Lbae;)Ljava/lang/String;	b	lambda$lookupTag$4
	m	(Ljm;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
	m	(Lcom/mojang/datafixers/util/Pair;Ljp;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(Ljm;Lbae;)Lcom/mojang/serialization/DataResult;	b	lambda$decode$0
c	alz	net/minecraft/resources/RegistryDataLoader
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/Comparator;	e	ERROR_KEY_COMPARATOR
	f	Ljx;	f	NETWORK_REGISTRATION_INFO
	f	Ljava/util/function/Function;	g	REGISTRATION_INFO_CACHE
	f	Ljava/util/List;	a	WORLDGEN_REGISTRIES
	f	Ljava/util/List;	b	DIMENSION_REGISTRIES
	f	Ljava/util/List;	c	SYNCHRONIZED_REGISTRIES
	m	()V	<init>	<init>
	m	(Laxo;Ljava/util/List;Ljava/util/List;)Ljz$b;	a	load
	m	(Ljava/util/Map;Laxr;Ljava/util/List;Ljava/util/List;)Ljz$b;	a	load
	m	(Lalz$b;Ljava/util/List;Ljava/util/List;)Ljz$b;	a	load
	m	(Ljava/util/List;Ljava/util/List;)Lamc$c;	a	createContext
	m	(Lkh;)Lamc$b;	a	createInfoForNewRegistry
	m	(Ljn$b;)Lamc$b;	a	createInfoForContextRegistry
	m	(Ljava/util/Map;)Laa;	a	logErrors
	m	(Ljava/util/Map;)V	b	printFullDetailsToLog
	m	(Ljava/util/Map;)Laa;	c	createReportWithBriefInfo
	m	(Lkh;Lcom/mojang/serialization/Decoder;Lamc;Lamd;Laxm;Ljx;)V	a	loadElementFromResource
	m	(Laxo;Lamc$c;Lkh;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadContentsFromManager
	m	(Ljava/util/Map;Laxr;Lamc$c;Lkh;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V	a	loadContentsFromNetwork
	m	(Ljava/util/Map;)Ljava/lang/String;	d	lambda$createReportWithBriefInfo$14
	m	(Ljava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$createReportWithBriefInfo$13
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	a	lambda$printFullDetailsToLog$12
	m	(Ljava/io/PrintWriter;Ljava/util/Map$Entry;)V	b	lambda$printFullDetailsToLog$11
	m	(Ljava/util/Map$Entry;)Lame;	a	lambda$printFullDetailsToLog$10
	m	(Ljava/util/Map$Entry;)Lame;	b	lambda$printFullDetailsToLog$9
	m	(Ljava/util/Map;Lalz$a;)V	a	lambda$createContext$8
	m	(Ljava/util/Map;Ljn$b;)V	a	lambda$createContext$7
	m	(Ljava/util/Map;Lalz$a;)V	b	lambda$load$6
	m	(Lalz$b;Lamc$c;Lalz$a;)V	a	lambda$load$5
	m	(Ljava/util/Map;Lalz$d;)Lalz$a;	a	lambda$load$4
	m	(Ljava/util/Map;Laxr;Lalz$a;Lamc$c;)V	a	lambda$load$3
	m	(Laxo;Lalz$a;Lamc$c;)V	a	lambda$load$2
	m	(Ljava/util/Optional;)Ljx;	a	lambda$static$1
	m	(Ljava/lang/Boolean;)Lcom/mojang/serialization/Lifecycle;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	alz$1	net/minecraft/resources/RegistryDataLoader$1
	f	Ljava/util/Map;	a	val$result
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
c	alz$a	net/minecraft/resources/RegistryDataLoader$Loader
	f	Lalz$d;	a	data
	f	Lkh;	b	registry
	f	Ljava/util/Map;	c	loadingErrors
	m	(Lalz$d;Lkh;Ljava/util/Map;)V	<init>	<init>
	m	(Laxo;Lamc$c;)V	a	loadFromResources
	m	(Ljava/util/Map;Laxr;Lamc$c;)V	a	loadFromNetwork
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lalz$d;	a	data
	m	()Lkh;	b	registry
	m	()Ljava/util/Map;	c	loadingErrors
c	alz$b	net/minecraft/resources/RegistryDataLoader$LoadingFunction
	m	(Lalz$a;Lamc$c;)V	apply	apply
c	alz$c	net/minecraft/resources/RegistryDataLoader$NetworkedRegistryData
	f	Ljava/util/List;	a	elements
	f	Lbag$a;	b	tags
	m	(Ljava/util/List;Lbag$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	elements
	m	()Lbag$a;	b	tags
c	alz$d	net/minecraft/resources/RegistryDataLoader$RegistryData
	f	Lamd;	a	key
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	requiredNonEmpty
	m	(Lamd;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lalz$a;	a	create
	m	(Ljava/util/function/BiConsumer;)V	a	runWithArguments
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Lcom/mojang/serialization/Codec;	b	elementCodec
	m	()Z	c	requiredNonEmpty
c	ama	net/minecraft/resources/RegistryFileCodec
	f	Lamd;	a	registryKey
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	f	Z	c	allowInline
	m	(Lamd;Lcom/mojang/serialization/Codec;)Lama;	a	create
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)Lama;	a	create
	m	(Lamd;Lcom/mojang/serialization/Codec;Z)V	<init>	<init>
	m	(Ljl;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$9
	m	(Lcom/mojang/datafixers/util/Pair;Ljl$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$8
	m	(Lamd;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$7
	m	(Lamd;)Ljava/lang/String;	b	lambda$decode$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$decode$5
	m	()Ljava/lang/String;	a	lambda$decode$4
	m	()Ljava/lang/String;	b	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lamd;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
	m	(Ljl;)Ljava/lang/String;	a	lambda$encode$0
c	amb	net/minecraft/resources/RegistryFixedCodec
	f	Lamd;	a	registryKey
	m	(Lamd;)Lamb;	a	create
	m	(Lamd;)V	<init>	<init>
	m	(Ljl;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	()Ljava/lang/String;	a	lambda$decode$9
	m	(Ljava/util/Optional;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$8
	m	(Lcom/mojang/datafixers/util/Pair;Ljl$c;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$7
	m	(Lame;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$6
	m	(Lame;)Ljava/lang/String;	b	lambda$decode$5
	m	()Ljava/lang/String;	b	lambda$encode$4
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$3
	m	()Ljava/lang/String;	c	lambda$encode$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lamd;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$1
	m	(Ljl;)Ljava/lang/String;	a	lambda$encode$0
c	amc	net/minecraft/resources/RegistryOps
	f	Lamc$c;	b	lookupProvider
	m	(Lcom/mojang/serialization/DynamicOps;Ljn$a;)Lamc;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;Lamc$c;)Lamc;	a	create
	m	(Lcom/mojang/serialization/Dynamic;Ljn$a;)Lcom/mojang/serialization/Dynamic;	a	injectRegistryContext
	m	(Lcom/mojang/serialization/DynamicOps;Lamc$c;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Lamc;	a	withParent
	m	(Lamd;)Ljava/util/Optional;	a	owner
	m	(Lamd;)Ljava/util/Optional;	b	getter
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lamd;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	retrieveGetter
	m	(Lamd;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	retrieveElement
	m	(Ljava/lang/Object;)Ljl$c;	a	lambda$retrieveElement$11
	m	(Lamd;Lamd;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveElement$10
	m	()Ljava/lang/String;	a	lambda$retrieveElement$9
	m	(Lamd;)Lcom/mojang/serialization/DataResult;	e	lambda$retrieveElement$8
	m	(Lamd;)Ljava/lang/String;	f	lambda$retrieveElement$7
	m	(Lamd;Lamc$b;)Ljava/util/Optional;	a	lambda$retrieveElement$6
	m	(Ljava/lang/Object;)Ljm;	b	lambda$retrieveGetter$5
	m	(Lamd;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$4
	m	()Ljava/lang/String;	b	lambda$retrieveGetter$3
	m	(Lamd;)Lcom/mojang/serialization/DataResult;	g	lambda$retrieveGetter$2
	m	(Lamd;)Ljava/lang/String;	h	lambda$retrieveGetter$1
	m	(Lamc$b;)Lcom/mojang/serialization/DataResult;	a	lambda$retrieveGetter$0
c	amc$a	net/minecraft/resources/RegistryOps$HolderLookupAdapter
	f	Ljn$a;	a	lookupProvider
	f	Ljava/util/Map;	b	lookups
	m	(Ljn$a;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lamd;)Ljava/util/Optional;	b	createLookup
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
c	amc$b	net/minecraft/resources/RegistryOps$RegistryInfo
	f	Ljo;	a	owner
	f	Ljm;	b	getter
	f	Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
	m	(Ljo;Ljm;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	(Ljn$b;)Lamc$b;	a	fromRegistryLookup
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljo;	a	owner
	m	()Ljm;	b	getter
	m	()Lcom/mojang/serialization/Lifecycle;	c	elementsLifecycle
c	amc$c	net/minecraft/resources/RegistryOps$RegistryInfoLookup
	m	(Lamd;)Ljava/util/Optional;	a	lookup
c	amd	net/minecraft/resources/ResourceKey
	f	Ljava/util/concurrent/ConcurrentMap;	a	VALUES
	f	Lame;	b	registryName
	f	Lame;	c	location
	m	(Lamd;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lamd;)Lzm;	b	streamCodec
	m	(Lamd;Lame;)Lamd;	a	create
	m	(Lame;)Lamd;	a	createRegistryKey
	m	(Lame;Lame;)Lamd;	a	create
	m	(Lame;Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Lamd;)Z	c	isFor
	m	(Lamd;)Ljava/util/Optional;	d	cast
	m	()Lame;	a	location
	m	()Lame;	b	registry
	m	()Lamd;	c	registryKey
	m	(Lamd$a;)Lamd;	a	lambda$create$2
	m	(Lamd;Lame;)Lamd;	b	lambda$streamCodec$1
	m	(Lamd;Lame;)Lamd;	c	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	amd$a	net/minecraft/resources/ResourceKey$InternKey
	f	Lame;	a	registry
	f	Lame;	b	location
	m	(Lame;Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	registry
	m	()Lame;	b	location
c	ame	net/minecraft/resources/ResourceLocation
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_INVALID
	f	C	d	NAMESPACE_SEPARATOR
	f	Ljava/lang/String;	e	DEFAULT_NAMESPACE
	f	Ljava/lang/String;	f	REALMS_NAMESPACE
	f	Ljava/lang/String;	h	namespace
	f	Ljava/lang/String;	i	path
	f	Z	g	$assertionsDisabled
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;)Lame;	d	createUntrusted
	m	(Ljava/lang/String;Ljava/lang/String;)Lame;	a	fromNamespaceAndPath
	m	(Ljava/lang/String;)Lame;	a	parse
	m	(Ljava/lang/String;)Lame;	b	withDefaultNamespace
	m	(Ljava/lang/String;)Lame;	c	tryParse
	m	(Ljava/lang/String;Ljava/lang/String;)Lame;	b	tryBuild
	m	(Ljava/lang/String;C)Lame;	a	bySeparator
	m	(Ljava/lang/String;C)Lame;	b	tryBySeparator
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	read
	m	()Ljava/lang/String;	a	getPath
	m	()Ljava/lang/String;	b	getNamespace
	m	(Ljava/lang/String;)Lame;	e	withPath
	m	(Ljava/util/function/UnaryOperator;)Lame;	a	withPath
	m	(Ljava/lang/String;)Lame;	f	withPrefix
	m	(Ljava/lang/String;)Lame;	g	withSuffix
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lame;)I	a	compareTo
	m	()Ljava/lang/String;	c	toDebugFileName
	m	()Ljava/lang/String;	d	toLanguageKey
	m	()Ljava/lang/String;	e	toShortLanguageKey
	m	(Ljava/lang/String;)Ljava/lang/String;	h	toLanguageKey
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	c	toLanguageKey
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/String;	c	readGreedy
	m	(Lcom/mojang/brigadier/StringReader;)Lame;	a	read
	m	(Lcom/mojang/brigadier/StringReader;)Lame;	b	readNonEmpty
	m	(C)Z	a	isAllowedInResourceLocation
	m	(Ljava/lang/String;)Z	i	isValidPath
	m	(Ljava/lang/String;)Z	j	isValidNamespace
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	e	assertValidNamespace
	m	(C)Z	b	validPathChar
	m	(C)Z	c	validNamespaceChar
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	f	assertValidPath
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(Ljava/lang/String;Lab;)Ljava/lang/String;	a	lambda$read$0
	m	()V	<clinit>	<clinit>
c	amf	net/minecraft/resources/package-info
c	amg	net/minecraft/server/Bootstrap
	f	Ljava/io/PrintStream;	a	STDOUT
	f	Z	c	isBootstrapped
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicLong;	b	bootstrapDuration
	m	()V	<init>	<init>
	m	()V	a	bootStrap
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V	a	checkTranslations
	m	(Ljava/util/Set;)V	a	checkGameruleTranslations
	m	()Ljava/util/Set;	b	getMissingTranslations
	m	(Ljava/util/function/Supplier;)V	a	checkBootstrapCalled
	m	(Ljava/util/function/Supplier;)Ljava/lang/RuntimeException;	b	createBootstrapException
	m	()V	c	validate
	m	()V	d	wrapStreams
	m	(Ljava/lang/String;)V	a	realStdoutPrintln
	m	(Ljava/lang/String;)V	b	lambda$validate$3
	m	()Ljava/lang/String;	e	lambda$validate$2
	m	(Lame;)Ljava/lang/String;	a	lambda$getMissingTranslations$1
	m	(Ljava/util/function/Function;Lud;Ljava/util/Set;Ljava/lang/Object;)V	a	lambda$checkTranslations$0
	m	()V	<clinit>	<clinit>
c	amg$1	net/minecraft/server/Bootstrap$1
	f	Lud;	a	val$language
	f	Ljava/util/Set;	b	val$missing
	m	(Lud;Ljava/util/Set;)V	<init>	<init>
	m	(Ldmq$e;Ldmq$f;)V	a	visit
c	amh	net/minecraft/server/ChainedJsonException
	f	Ljava/util/List;	a	entries
	f	Ljava/lang/String;	b	message
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
	m	(Ljava/lang/String;)V	a	prependJsonKey
	m	(Ljava/lang/String;)V	b	setFilenameAndFlush
	m	()Ljava/lang/String;	getMessage	getMessage
	m	(Ljava/lang/Exception;)Lamh;	a	forException
c	amh$a	net/minecraft/server/ChainedJsonException$Entry
	f	Ljava/lang/String;	a	filename
	f	Ljava/util/List;	b	jsonKeys
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)V	a	addJsonKey
	m	()Ljava/lang/String;	a	getFilename
	m	()Ljava/lang/String;	b	getJsonKeys
	m	()Ljava/lang/String;	toString	toString
c	ami	net/minecraft/server/ConsoleInput
	f	Ljava/lang/String;	a	msg
	f	Lek;	b	source
	m	(Ljava/lang/String;Lek;)V	<init>	<init>
c	amj	net/minecraft/server/DebugLoggedPrintStream
	f	Lorg/slf4j/Logger;	b	LOGGER
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
	m	(Ljava/lang/String;)V	a	logLine
	m	()V	<clinit>	<clinit>
c	amk	net/minecraft/server/Eula
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	file
	f	Z	c	agreed
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Z	b	readFile
	m	()Z	a	hasAgreedToEULA
	m	()V	c	saveDefaults
	m	()V	<clinit>	<clinit>
c	aml	net/minecraft/server/LoggedPrintStream
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Ljava/io/OutputStream;)V	<init>	<init>
	m	(Ljava/lang/String;)V	println	println
	m	(Ljava/lang/Object;)V	println	println
	m	(Ljava/lang/String;)V	a	logLine
	m	()V	<clinit>	<clinit>
c	net/minecraft/server/Main	net/minecraft/server/Main
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	([Ljava/lang/String;)V	main	main
	m	(Ljava/nio/file/Path;)V	a	writePidFile
	m	(Larj;Lcom/mojang/serialization/Dynamic;ZLawz;)Lanc$c;	a	loadOrCreateConfig
	m	(Lfcs$c;Lfdd;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Ljz;Z)V	a	forceUpgrade
	m	(Lfcs$c;Lawz;Land;Lark;Lamz;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljoptsimple/OptionSpec;Ljava/lang/Thread;)Lari;	a	lambda$main$3
	m	()Z	a	lambda$main$2
	m	(Lanc$c;Lcom/mojang/serialization/Dynamic;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lark;Ljoptsimple/OptionSpec;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$main$1
	m	(Lcom/mojang/serialization/Dynamic;Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;Lark;Ljoptsimple/OptionSpec;Lanc$a;)Lanc$b;	a	lambda$main$0
	m	()V	<clinit>	<clinit>
c	net/minecraft/server/Main$1	net/minecraft/server/Main$1
	f	Lari;	a	val$dedicatedServer
	m	(Ljava/lang/String;Lari;)V	<init>	<init>
	m	()V	run	run
c	net/minecraft/server/MinecraftServer	net/minecraft/server/MinecraftServer
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Ljava/lang/String;	b	VANILLA_BRAND
	f	F	m	AVERAGE_TICK_TIME_SMOOTHING
	f	I	n	TICK_STATS_SPAN
	f	J	o	OVERLOADED_THRESHOLD_NANOS
	f	I	p	OVERLOADED_TICKS_THRESHOLD
	f	J	q	OVERLOADED_WARNING_INTERVAL_NANOS
	f	I	r	OVERLOADED_TICKS_WARNING_INTERVAL
	f	J	s	STATUS_EXPIRE_TIME_NANOS
	f	J	t	PREPARE_LEVELS_DEFAULT_DELAY_NANOS
	f	I	u	MAX_STATUS_PLAYER_SAMPLE
	f	I	v	SPAWN_POSITION_SEARCH_RADIUS
	f	I	w	AUTOSAVE_INTERVAL
	f	I	x	MIMINUM_AUTOSAVE_TICKS
	f	I	y	MAX_TICK_LATENCY
	f	I	c	ABSOLUTE_MAX_WORLD_SIZE
	f	Ldmy;	d	DEMO_SETTINGS
	f	Lcom/mojang/authlib/GameProfile;	e	ANONYMOUS_PLAYER_PROFILE
	f	Lfcs$c;	f	storageSource
	f	Lfcv;	g	playerDataStorage
	f	Ljava/util/List;	z	tickables
	f	Lbvk;	A	metricsRecorder
	f	Ljava/util/function/Consumer;	B	onMetricsRecordingStopped
	f	Ljava/util/function/Consumer;	C	onMetricsRecordingFinished
	f	Z	D	willStartRecordingMetrics
	f	Lnet/minecraft/server/MinecraftServer$c;	E	debugCommandProfiler
	f	Z	F	debugCommandProfilerDelayStart
	f	Lave;	G	connection
	f	Laum;	H	progressListenerFactory
	f	Lalb;	I	status
	f	Lalb$a;	J	statusIcon
	f	Lbck;	K	random
	f	Lcom/mojang/datafixers/DataFixer;	L	fixerUpper
	f	Ljava/lang/String;	M	localIp
	f	I	N	port
	f	Ljs;	O	registries
	f	Ljava/util/Map;	P	levels
	f	Layb;	Q	playerList
	f	Z	R	running
	f	Z	S	stopped
	f	I	T	tickCount
	f	I	U	ticksUntilAutosave
	f	Ljava/net/Proxy;	h	proxy
	f	Z	V	onlineMode
	f	Z	W	preventProxyConnections
	f	Z	X	pvp
	f	Z	Y	allowFlight
	f	Ljava/lang/String;	Z	motd
	f	I	aa	playerIdleTimeout
	f	[J	ab	tickTimesNanos
	f	J	ac	aggregatedTickTimesNanos
	f	Ljava/security/KeyPair;	ad	keyPair
	f	Lcom/mojang/authlib/GameProfile;	ae	singleplayerProfile
	f	Z	af	isDemo
	f	Z	ag	isReady
	f	J	ah	lastOverloadWarningNanos
	f	Lamz;	i	services
	f	J	ai	lastServerStatus
	f	Ljava/lang/Thread;	aj	serverThread
	f	J	ak	lastTickNanos
	f	J	al	taskExecutionStartNanos
	f	J	am	idleTimeNanos
	f	J	an	nextTickTimeNanos
	f	Z	ao	waitingForNextTick
	f	J	ap	delayedTasksMaxNextTickTimeNanos
	f	Z	aq	mayHaveDelayedTasks
	f	Lawz;	ar	packRepository
	f	Lamx;	as	scoreboard
	f	Lfcj;	at	commandStorage
	f	Lanh;	au	customBossEvents
	f	Lamt;	av	functionManager
	f	Z	aw	enforceWhitelist
	f	F	ax	smoothedTickTimeMillis
	f	Ljava/util/concurrent/Executor;	ay	executor
	f	Ljava/lang/String;	az	serverId
	f	Lnet/minecraft/server/MinecraftServer$a;	aA	resources
	f	Lezb;	aB	structureTemplateManager
	f	Lamy;	aC	tickRateManager
	f	Lfdd;	j	worldData
	f	Ldeq;	aD	potionBrewing
	f	Leby;	aE	fuelValues
	f	I	aF	emptyTicks
	f	Z	aG	isSaving
	f	Ljava/util/concurrent/atomic/AtomicReference;	aH	fatalException
	f	Lana;	aI	suppressedExceptions
	f	Lcom/mojang/jtracy/DiscontinuousFrame;	aJ	tickFrame
	m	(Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer;	a	spin
	m	(Ljava/lang/Thread;Lfcs$c;Lawz;Land;Ljava/net/Proxy;Lcom/mojang/datafixers/DataFixer;Lamz;Laum;)V	<init>	<init>
	m	(Lfcm;)V	a	readScoreboard
	m	()Z	e	initServer
	m	()V	u_	loadLevel
	m	()V	t	forceDifficulty
	m	(Laul;)V	a	createLevels
	m	(Laub;Lfcx;ZZ)V	a	setInitialSpawn
	m	(Lfdd;)V	a	setupDebugLevel
	m	(Laul;)V	b	prepareLevels
	m	()Ldmr;	u	getDefaultGameType
	m	()Z	v_	isHardcore
	m	()I	k	getOperatorUserPermissionLevel
	m	()I	l	getFunctionCompilationLevel
	m	()Z	m	shouldRconBroadcast
	m	(ZZZ)Z	a	saveAllChunks
	m	(ZZZ)Z	b	saveEverything
	m	()V	close	close
	m	()V	v	stopServer
	m	()Ljava/lang/String;	w	getLocalIp
	m	(Ljava/lang/String;)V	a_	setLocalIp
	m	()Z	x	isRunning
	m	(Z)V	a	halt
	m	()V	y	runServer
	m	()V	br	logFullTickTime
	m	()V	bs	startMeasuringTaskExecutionTime
	m	()V	bt	finishMeasuringTaskExecutionTime
	m	(Ljava/lang/Throwable;)Lp;	b	constructOrExtractCrashReport
	m	()Z	bu	haveTime
	m	()Z	z	throwIfFatalException
	m	(Ljava/lang/RuntimeException;)V	a	setFatalException
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
	m	()V	w_	waitUntilNextTick
	m	()V	A	waitForTasks
	m	(Ljava/lang/Runnable;)Lanb;	a	wrapRunnable
	m	(Lanb;)Z	a	shouldRun
	m	()Z	B	pollTask
	m	()Z	bv	pollTaskInternal
	m	(Lanb;)V	b	doRunTask
	m	()Ljava/util/Optional;	bC	loadStatusIcon
	m	()Ljava/util/Optional;	C	getWorldScreenshotFile
	m	()Ljava/nio/file/Path;	D	getServerDirectory
	m	(Lp;)V	a	onServerCrash
	m	()V	i	onServerExit
	m	()Z	E	isPaused
	m	(Ljava/util/function/BooleanSupplier;)V	a	tickServer
	m	()V	bD	autoSave
	m	(J)V	a	logTickMethodTime
	m	()I	bE	computeNextAutosaveInterval
	m	()V	F	onTickRateChanged
	m	()Lbrx;	f	getTickTimeLogger
	m	()Z	g	isTickTimeLoggingEnabled
	m	()Lalb;	bF	buildServerStatus
	m	()Lalb$b;	bG	buildPlayerStatus
	m	(Ljava/util/function/BooleanSupplier;)V	c	tickChildren
	m	()V	G	tickConnection
	m	(Laub;)V	b	synchronizeTime
	m	()V	H	forceTimeSynchronization
	m	(Ldmu;)Z	a	isLevelEnabled
	m	(Ljava/lang/Runnable;)V	b	addTickable
	m	(Ljava/lang/String;)V	b	setId
	m	()Z	I	isShutdown
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	c	getFile
	m	()Laub;	J	overworld
	m	(Lamd;)Laub;	a	getLevel
	m	()Ljava/util/Set;	K	levelKeys
	m	()Ljava/lang/Iterable;	L	getAllLevels
	m	()Ljava/lang/String;	M	getServerVersion
	m	()I	N	getPlayerCount
	m	()I	O	getMaxPlayers
	m	()[Ljava/lang/String;	P	getPlayerNames
	m	()Ljava/lang/String;	getServerModName	getServerModName
	m	(Lae;)Lae;	b	fillSystemReport
	m	(Lae;)Lae;	a	fillServerSystemReport
	m	()Lbca;	Q	getModdedStatus
	m	(Lxo;)V	a	sendSystemMessage
	m	()Ljava/security/KeyPair;	R	getKeyPair
	m	()I	S	getPort
	m	(I)V	a	setPort
	m	()Lcom/mojang/authlib/GameProfile;	T	getSingleplayerProfile
	m	(Lcom/mojang/authlib/GameProfile;)V	b	setSingleplayerProfile
	m	()Z	U	isSingleplayer
	m	()V	V	initializeKeyPair
	m	(Lbxg;Z)V	a	setDifficulty
	m	(I)I	b	getScaledTrackingDistance
	m	()V	bH	updateMobSpawningFlags
	m	(Z)V	b	setDifficultyLocked
	m	(Lauc;)V	c	sendDifficultyUpdate
	m	()Z	W	isSpawningMonsters
	m	()Z	X	isDemo
	m	(Z)V	c	setDemo
	m	()Ljava/util/Optional;	Y	getServerResourcePack
	m	()Z	Z	isResourcePackRequired
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	aa	usesAuthentication
	m	(Z)V	d	setUsesAuthentication
	m	()Z	ab	getPreventProxyConnections
	m	(Z)V	e	setPreventProxyConnections
	m	()Z	p	isEpollEnabled
	m	()Z	ac	isPvpAllowed
	m	(Z)V	f	setPvpAllowed
	m	()Z	ad	isFlightAllowed
	m	(Z)V	g	setFlightAllowed
	m	()Z	q	isCommandBlockEnabled
	m	()Ljava/lang/String;	ae	getMotd
	m	(Ljava/lang/String;)V	d	setMotd
	m	()Z	af	isStopped
	m	()Layb;	ag	getPlayerList
	m	(Layb;)V	a	setPlayerList
	m	()Z	r	isPublished
	m	(Ldmr;)V	a	setDefaultGameType
	m	()Lave;	ah	getConnection
	m	()Z	ai	isReady
	m	()Z	aj	hasGui
	m	(Ldmr;ZI)Z	a	publishServer
	m	()I	ak	getTickCount
	m	()I	al	getSpawnProtectionRadius
	m	(Laub;Ljb;Lcut;)Z	a	isUnderSpawnProtection
	m	()Z	am	repliesToStatus
	m	()Z	an	hidesOnlinePlayers
	m	()Ljava/net/Proxy;	ao	getProxy
	m	()I	ap	getPlayerIdleTimeout
	m	(I)V	c	setPlayerIdleTimeout
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	aq	getSessionService
	m	()Lbcq;	ar	getProfileKeySignatureValidator
	m	()Lcom/mojang/authlib/GameProfileRepository;	as	getProfileRepository
	m	()Laxx;	at	getProfileCache
	m	()Lalb;	au	getStatus
	m	()V	av	invalidateStatus
	m	()I	aw	getAbsoluteMaxWorldSize
	m	()Z	ax	scheduleExecutables
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
	m	()Ljava/lang/Thread;	ay	getRunningThread
	m	()I	az	getCompressionThreshold
	m	()Z	aA	enforceSecureProfile
	m	()J	aB	getNextTickTime
	m	()Lcom/mojang/datafixers/DataFixer;	aC	getFixerUpper
	m	(Laub;)I	a	getSpawnRadius
	m	()Lamr;	aD	getAdvancements
	m	()Lamt;	aE	getFunctions
	m	(Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture;	a	reloadResources
	m	(Lawz;Ldns;ZZ)Ldns;	a	configurePackRepository
	m	(Lawz;Ljava/util/Collection;Lcyd;Z)Ldns;	a	configureRepositoryWithSelection
	m	(Lawz;Lcyd;)V	a	enableForcedFeaturePacks
	m	(Lawz;Z)Ldmh;	a	getSelectedPacks
	m	(Lek;)V	a	kickUnlistedPlayers
	m	()Lawz;	aF	getPackRepository
	m	()Lel;	aG	getCommands
	m	()Lek;	aH	createCommandSourceStack
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	()Ldht;	aI	getRecipeManager
	m	()Lamx;	aJ	getScoreboard
	m	()Lfcj;	aK	getCommandStorage
	m	()Ldmq;	aL	getGameRules
	m	()Lanh;	aM	getCustomBossEvents
	m	()Z	aN	isEnforceWhitelist
	m	(Z)V	h	setEnforceWhitelist
	m	()F	aO	getCurrentSmoothedTickTime
	m	()Lamy;	aP	tickRateManager
	m	()J	aQ	getAverageTickTimeNanos
	m	()[J	aR	getTickTimesNanos
	m	(Lcom/mojang/authlib/GameProfile;)I	c	getProfilePermissions
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
	m	(Ljava/nio/file/Path;)V	b	saveDebugReport
	m	(Ljava/nio/file/Path;)V	c	dumpMiscStats
	m	(Ljava/nio/file/Path;)V	d	dumpGameRules
	m	(Ljava/nio/file/Path;)V	e	dumpClasspath
	m	(Ljava/nio/file/Path;)V	f	dumpThreads
	m	(Ljava/nio/file/Path;)V	g	dumpNativeModules
	m	()Lbtt;	bI	createProfiler
	m	()V	aS	endMetricsRecordingTick
	m	()Z	aT	isRecordingMetrics
	m	(Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	startRecordingMetrics
	m	()V	aU	stopRecordingMetrics
	m	()V	aV	finishRecordingMetrics
	m	()V	aW	cancelRecordingMetrics
	m	(Lfcq;)Ljava/nio/file/Path;	a	getWorldPath
	m	()Z	aX	forceSynchronousWrites
	m	()Lezb;	aY	getStructureManager
	m	()Lfdd;	aZ	getWorldData
	m	()Ljz$b;	ba	registryAccess
	m	()Ljs;	bb	registries
	m	()Lamo$a;	bc	reloadableRegistries
	m	(Lauc;)Lavl;	a	createTextFilterForPlayer
	m	(Lauc;)Laud;	b	createGameModeForPlayer
	m	()Ldmr;	bd	getForcedGameType
	m	()Laxo;	be	getResourceManager
	m	()Z	bf	isCurrentlySaving
	m	()Z	bg	isTimeProfilerRunning
	m	()V	bh	startTimeProfiler
	m	()Lbtr;	bi	stopTimeProfiler
	m	()I	bj	getMaxChainedNeighborUpdates
	m	(Lxo;Lxk$a;Ljava/lang/String;)V	a	logChatMessage
	m	()Lxj;	bk	getChatDecorator
	m	()Z	bl	logIPs
	m	(Lauc;Lbrv;)V	a	subscribeToDebugSample
	m	(Lame;Ljava/util/Optional;)V	a	handleCustomClickAction
	m	()Z	bm	acceptsTransfers
	m	(Lp;Ldlz;Lehr;)V	a	storeChunkIoError
	m	(Ljava/lang/Throwable;Lehr;Ldlz;)V	a	reportChunkLoadFailure
	m	(Ljava/lang/Throwable;Lehr;Ldlz;)V	b	reportChunkSaveFailure
	m	(Ljava/lang/Throwable;Lzy;)V	a	reportPacketHandlingException
	m	()Ldeq;	bn	potionBrewing
	m	()Leby;	bo	fuelValues
	m	()Lamw;	bp	serverLinks
	m	()I	bq	pauseWhileEmptySeconds
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Lehr;Lp;Ldlz;)V	a	lambda$storeChunkIoError$36
	m	(Lehr;)Ljava/lang/String;	a	lambda$storeChunkIoError$35
	m	(Ljava/util/function/Consumer;Lbtr;)V	a	lambda$startRecordingMetrics$34
	m	(Ljava/nio/file/Path;)V	h	lambda$createProfiler$33
	m	(Ljava/nio/file/Path;)V	i	lambda$createProfiler$32
	m	(Lbcc$a;)Ljava/lang/String;	a	lambda$dumpNativeModules$31
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$getSelectedPacks$30
	m	(Ljava/util/Collection;Lnet/minecraft/server/MinecraftServer$a;)V	a	lambda$reloadResources$29
	m	(Lcom/google/common/collect/ImmutableList;)Ljava/util/concurrent/CompletionStage;	a	lambda$reloadResources$28
	m	(Laxe;Lamp;)Lnet/minecraft/server/MinecraftServer$a;	a	lambda$reloadResources$27
	m	(Laxe;Lamp;Ljava/lang/Throwable;)V	a	lambda$reloadResources$26
	m	(Ljava/util/Collection;)Lcom/google/common/collect/ImmutableList;	b	lambda$reloadResources$25
	m	()Ljava/lang/String;	bJ	lambda$fillSystemReport$24
	m	()Ljava/lang/String;	bK	lambda$fillSystemReport$23
	m	()Ljava/lang/String;	bL	lambda$fillSystemReport$22
	m	()Ljava/lang/String;	bM	lambda$fillSystemReport$21
	m	()Ljava/lang/String;	bN	lambda$fillSystemReport$20
	m	()Ljava/lang/String;	bO	lambda$fillSystemReport$19
	m	()Ljava/lang/String;	bP	lambda$fillSystemReport$18
	m	()Ljava/lang/String;	bQ	lambda$fillSystemReport$17
	m	(Laub;)Ljava/lang/String;	c	lambda$tickChildren$16
	m	(Lauc;)V	d	lambda$tickChildren$15
	m	(Ljava/nio/file/Path;)Ljava/util/Optional;	j	lambda$loadStatusIcon$14
	m	()Ljava/util/Optional;	bR	lambda$loadStatusIcon$13
	m	(Ljava/nio/file/Path;)Z	k	lambda$loadStatusIcon$12
	m	(Ljava/nio/file/Path;)Z	l	lambda$loadStatusIcon$11
	m	()Z	bS	lambda$waitUntilNextTick$10
	m	(Ljava/util/function/BooleanSupplier;)Z	d	lambda$managedBlock$9
	m	()Z	bT	lambda$runServer$8
	m	()Z	bU	lambda$stopServer$7
	m	(Laub;)Z	d	lambda$stopServer$6
	m	(Laub;Laty;Lfcx;Ljl$c;)V	a	lambda$setInitialSpawn$5
	m	(Ljy;)Ljava/util/Optional;	a	lambda$setInitialSpawn$4
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$spin$3
	m	(Ljava/util/concurrent/atomic/AtomicReference;)V	a	lambda$spin$2
	m	(Ljava/nio/file/Path;)V	m	lambda$new$1
	m	(Lbtr;)V	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	net/minecraft/server/MinecraftServer$1	net/minecraft/server/MinecraftServer$1
	f	Ljava/util/List;	a	val$entries
	f	Ldmq;	b	val$gameRules
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/List;Ldmq;)V	<init>	<init>
	m	(Ldmq$e;Ldmq$f;)V	a	visit
c	net/minecraft/server/MinecraftServer$a	net/minecraft/server/MinecraftServer$ReloadableResources
	f	Laxe;	a	resourceManager
	f	Lamp;	b	managers
	m	(Laxe;Lamp;)V	<init>	<init>
	m	()V	close	close
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laxe;	a	resourceManager
	m	()Lamp;	b	managers
c	net/minecraft/server/MinecraftServer$b	net/minecraft/server/MinecraftServer$ServerResourcePackInfo
	f	Ljava/util/UUID;	a	id
	f	Ljava/lang/String;	b	url
	f	Ljava/lang/String;	c	hash
	f	Z	d	isRequired
	f	Lxo;	e	prompt
	m	(Ljava/util/UUID;Ljava/lang/String;Ljava/lang/String;ZLxo;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	id
	m	()Ljava/lang/String;	b	url
	m	()Ljava/lang/String;	c	hash
	m	()Z	d	isRequired
	m	()Lxo;	e	prompt
c	net/minecraft/server/MinecraftServer$c	net/minecraft/server/MinecraftServer$TimeProfiler
	f	J	a	startNanos
	f	I	b	startTick
	m	(JI)V	<init>	<init>
	m	(JI)Lbtr;	a	stop
c	net/minecraft/server/MinecraftServer$c$1	net/minecraft/server/MinecraftServer$TimeProfiler$1
	f	J	a	val$stopNanos
	f	I	b	val$stopTick
	f	Lnet/minecraft/server/MinecraftServer$c;	c	this$0
	m	(Lnet/minecraft/server/MinecraftServer$c;JI)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()J	a	getStartTimeNano
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
c	amm	net/minecraft/server/PlayerAdvancements
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Layb;	c	playerList
	f	Ljava/nio/file/Path;	d	playerSavePath
	f	Lao;	e	tree
	f	Ljava/util/Map;	f	progress
	f	Ljava/util/Set;	g	visible
	f	Ljava/util/Set;	h	progressChanged
	f	Ljava/util/Set;	i	rootsToUpdate
	f	Lauc;	j	player
	f	Laj;	k	lastSelectedTab
	f	Z	l	isFirstPacket
	f	Lcom/mojang/serialization/Codec;	m	codec
	m	(Lcom/mojang/datafixers/DataFixer;Layb;Lamr;Ljava/nio/file/Path;Lauc;)V	<init>	<init>
	m	(Lauc;)V	a	setPlayer
	m	()V	a	stopListening
	m	(Lamr;)V	a	reload
	m	(Lamr;)V	b	registerListeners
	m	(Lamr;)V	c	checkForAutomaticTriggers
	m	(Lamr;)V	d	load
	m	()V	b	save
	m	(Lamr;Lamm$a;)V	a	applyFrom
	m	()Lamm$a;	c	asData
	m	(Laj;Ljava/lang/String;)Z	a	award
	m	(Laj;Ljava/lang/String;)Z	b	revoke
	m	(Laj;)V	c	markForVisibilityUpdate
	m	(Laj;)V	d	registerListeners
	m	(Laj;Ljava/lang/String;Lar;)V	a	registerListener
	m	(Laj;)V	e	unregisterListeners
	m	(Laj;Ljava/lang/String;Lar;)V	b	removeListener
	m	(Lauc;Z)V	a	flushDirty
	m	(Laj;)V	a	setSelectedTab
	m	(Laj;)Lal;	b	getOrStartProgress
	m	(Laj;Lal;)V	a	startProgress
	m	(Lak;Ljava/util/Set;Ljava/util/Set;)V	a	updateTreeVisibility
	m	(Ljava/util/Set;Ljava/util/Set;Lak;Z)V	a	lambda$updateTreeVisibility$4
	m	(Lak;)Z	a	lambda$updateTreeVisibility$3
	m	(Laj;Lav;)V	a	lambda$award$2
	m	(Ljava/util/Map;Laj;Lal;)V	a	lambda$asData$1
	m	(Lamr;Lame;Lal;)V	a	lambda$applyFrom$0
	m	()V	<clinit>	<clinit>
c	amm$a	net/minecraft/server/PlayerAdvancements$Data
	f	Ljava/util/Map;	b	map
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	map
	m	(Ljava/util/function/BiConsumer;Ljava/util/Map$Entry;)V	a	lambda$forEach$0
	m	()V	<clinit>	<clinit>
c	amn	net/minecraft/server/RegistryLayer
	f	Lamn;	a	STATIC
	f	Lamn;	b	WORLDGEN
	f	Lamn;	c	DIMENSIONS
	f	Lamn;	d	RELOADABLE
	f	Ljava/util/List;	e	VALUES
	f	Ljz$b;	f	STATIC_ACCESS
	f	[Lamn;	g	$VALUES
	m	()[Lamn;	values	values
	m	(Ljava/lang/String;)Lamn;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Ljs;	a	createRegistryAccess
	m	()[Lamn;	b	$values
	m	()V	<clinit>	<clinit>
c	amo	net/minecraft/server/ReloadableServerRegistries
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljx;	b	DEFAULT_REGISTRATION_INFO
	m	()V	<init>	<init>
	m	(Ljs;Ljava/util/List;Laxo;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	reload
	m	(Lfdl;Lamc;Laxo;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleRegistryLoad
	m	(Ljs;Ljn$a;Ljava/util/List;)Lamo$b;	a	createAndValidateFullContext
	m	(Ljn$a;Ljn$a;)Ljn$a;	a	concatenateLookups
	m	(Ljn$a;)V	a	validateLootRegistries
	m	(Ljs;Ljava/util/List;)Ljs;	a	createUpdatedRegistries
	m	(Lfdp;Lfdl;Ljn$a;)V	a	validateRegistry
	m	(Lfdl;Lfdp;Ljl$c;)V	a	lambda$validateRegistry$6
	m	(Ljava/lang/String;Lbci$g;)V	a	lambda$validateLootRegistries$5
	m	(Lfdp;Ljn$a;Lfdl;)V	a	lambda$validateLootRegistries$4
	m	(Lfdl;Laxo;Lamc;)Lkh;	a	lambda$scheduleRegistryLoad$3
	m	(Lkh;Lfdl;Lame;Ljava/lang/Object;)V	a	lambda$scheduleRegistryLoad$2
	m	(Ljs;Ljn$a;Ljava/util/List;)Lamo$b;	b	lambda$reload$1
	m	(Lamc;Laxo;Ljava/util/concurrent/Executor;Lfdl;)Ljava/util/concurrent/CompletableFuture;	a	lambda$reload$0
	m	()V	<clinit>	<clinit>
c	amo$a	net/minecraft/server/ReloadableServerRegistries$Holder
	f	Ljn$a;	a	registries
	m	(Ljn$a;)V	<init>	<init>
	m	()Ljn$a;	a	lookup
	m	(Lamd;)Lfdo;	a	getLootTable
	m	(Lamd;Ljn$b;)Ljava/util/Optional;	a	lambda$getLootTable$0
c	amo$b	net/minecraft/server/ReloadableServerRegistries$LoadResult
	f	Ljs;	a	layers
	f	Ljn$a;	b	lookupWithUpdatedTags
	m	(Ljs;Ljn$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljs;	a	layers
	m	()Ljn$a;	b	lookupWithUpdatedTags
c	amp	net/minecraft/server/ReloadableServerResources
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	b	DATA_RELOAD_INITIAL_TASK
	f	Lamo$a;	c	fullRegistryHolder
	f	Lel;	d	commands
	f	Ldht;	e	recipes
	f	Lamr;	f	advancements
	f	Lams;	g	functionLibrary
	f	Ljava/util/List;	h	postponedTags
	m	(Ljs;Ljn$a;Lcyd;Lel$a;Ljava/util/List;I)V	<init>	<init>
	m	()Lams;	a	getFunctionLibrary
	m	()Lamo$a;	b	fullRegistries
	m	()Ldht;	c	getRecipeManager
	m	()Lel;	d	getCommands
	m	()Lamr;	e	getAdvancements
	m	()Ljava/util/List;	f	listeners
	m	(Laxo;Ljs;Ljava/util/List;Lcyd;Lel$a;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	loadResources
	m	()V	g	updateStaticRegistryTags
	m	(Lcyd;Lel$a;Ljava/util/List;ILaxo;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lamo$b;)Ljava/util/concurrent/CompletionStage;	a	lambda$loadResources$1
	m	(Lamp;Ljava/lang/Object;)Lamp;	a	lambda$loadResources$0
	m	()V	<clinit>	<clinit>
c	amq	net/minecraft/server/RunningOnDifferentThreadException
	f	Lamq;	a	RUNNING_ON_DIFFERENT_THREAD
	m	()V	<init>	<init>
	m	()Ljava/lang/Throwable;	fillInStackTrace	fillInStackTrace
	m	()V	<clinit>	<clinit>
c	amr	net/minecraft/server/ServerAdvancementManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	advancements
	f	Lao;	c	tree
	f	Ljn$a;	d	registries
	m	(Ljn$a;)V	<init>	<init>
	m	(Ljava/util/Map;Laxo;Lbtt;)V	a	apply
	m	(Lame;Lai;)V	a	validate
	m	(Lame;)Laj;	a	get
	m	()Lao;	a	tree
	m	()Ljava/util/Collection;	b	getAllAdvancements
	m	(Ljava/lang/Object;Laxo;Lbtt;)V	a	apply
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lame;Lai;)V	a	lambda$apply$0
	m	()V	<clinit>	<clinit>
c	ams	net/minecraft/server/ServerFunctionLibrary
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lamd;	a	TYPE_KEY
	f	Lalx;	c	LISTER
	f	Ljava/util/Map;	d	functions
	f	Lbaf;	e	tagsLoader
	f	Ljava/util/Map;	f	tags
	f	I	g	functionCompilationLevel
	f	Lcom/mojang/brigadier/CommandDispatcher;	h	dispatcher
	m	(Lame;)Ljava/util/Optional;	a	getFunction
	m	()Ljava/util/Map;	a	getFunctions
	m	(Lame;)Ljava/util/List;	b	getTag
	m	()Ljava/lang/Iterable;	b	getAvailableTags
	m	(ILcom/mojang/brigadier/CommandDispatcher;)V	<init>	<init>
	m	(Laxi$a;Laxo;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	reload	reload
	m	(Laxm;)Ljava/util/List;	a	readLines
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$reload$8
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lame;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$reload$7
	m	(Lame;Lcom/google/common/collect/ImmutableMap$Builder;Lib;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reload$6
	m	(Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletionStage;	a	lambda$reload$5
	m	(Ljava/util/Map;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/util/Map;	a	lambda$reload$4
	m	(Ljava/util/Map$Entry;Lame;Lek;)Lib;	a	lambda$reload$3
	m	(Laxo;)Ljava/util/Map;	a	lambda$reload$2
	m	(Laxo;)Ljava/util/Map;	b	lambda$reload$1
	m	(Lame;Z)Ljava/util/Optional;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	amt	net/minecraft/server/ServerFunctionManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lame;	b	TICK_FUNCTION_TAG
	f	Lame;	c	LOAD_FUNCTION_TAG
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ljava/util/List;	e	ticking
	f	Z	f	postReload
	f	Lams;	g	library
	m	(Lnet/minecraft/server/MinecraftServer;Lams;)V	<init>	<init>
	m	()Lcom/mojang/brigadier/CommandDispatcher;	a	getDispatcher
	m	()V	b	tick
	m	(Ljava/util/Collection;Lame;)V	a	executeTagFunctions
	m	(Lib;Lek;)V	a	execute
	m	(Lams;)V	a	replaceLibrary
	m	(Lams;)V	b	postReload
	m	()Lek;	c	getGameLoopSender
	m	(Lame;)Ljava/util/Optional;	a	get
	m	(Lame;)Ljava/util/List;	b	getTag
	m	()Ljava/lang/Iterable;	d	getFunctionNames
	m	()Ljava/lang/Iterable;	e	getTagNames
	m	(Lid;Lek;Lho;)V	a	lambda$execute$1
	m	(Lib;)Ljava/lang/String;	a	lambda$execute$0
	m	()V	<clinit>	<clinit>
c	amu	net/minecraft/server/ServerInfo
	m	()Ljava/lang/String;	ae	getMotd
	m	()Ljava/lang/String;	M	getServerVersion
	m	()I	N	getPlayerCount
	m	()I	O	getMaxPlayers
c	amv	net/minecraft/server/ServerInterface
	m	()Larj;	a	getProperties
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	h	getServerName
	m	()[Ljava/lang/String;	P	getPlayerNames
	m	()Ljava/lang/String;	j	getLevelIdName
	m	()Ljava/lang/String;	s	getPluginNames
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
c	amw	net/minecraft/server/ServerLinks
	f	Ljava/util/List;	d	entries
	f	Lamw;	a	EMPTY
	f	Lzm;	b	TYPE_STREAM_CODEC
	f	Lzm;	c	UNTRUSTED_LINKS_STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	(Lamw$b;)Ljava/util/Optional;	a	findKnownType
	m	()Ljava/util/List;	b	untrust
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	c	entries
	m	(Lamw$a;)Lamw$c;	a	lambda$untrust$3
	m	(Lamw$b;Lamw$a;)Z	a	lambda$findKnownType$2
	m	(Lxo;)Ljava/lang/Boolean;	a	lambda$findKnownType$1
	m	(Lamw$b;Lamw$b;)Ljava/lang/Boolean;	a	lambda$findKnownType$0
	m	()V	<clinit>	<clinit>
c	amw$a	net/minecraft/server/ServerLinks$Entry
	f	Lcom/mojang/datafixers/util/Either;	a	type
	f	Ljava/net/URI;	b	link
	m	(Lcom/mojang/datafixers/util/Either;Ljava/net/URI;)V	<init>	<init>
	m	(Lamw$b;Ljava/net/URI;)Lamw$a;	a	knownType
	m	(Lxo;Ljava/net/URI;)Lamw$a;	a	custom
	m	()Lxo;	a	displayName
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/datafixers/util/Either;	b	type
	m	()Ljava/net/URI;	c	link
	m	(Lxo;)Lxo;	a	lambda$displayName$0
c	amw$b	net/minecraft/server/ServerLinks$KnownLinkType
	f	Lamw$b;	a	BUG_REPORT
	f	Lamw$b;	b	COMMUNITY_GUIDELINES
	f	Lamw$b;	c	SUPPORT
	f	Lamw$b;	d	STATUS
	f	Lamw$b;	e	FEEDBACK
	f	Lamw$b;	f	COMMUNITY
	f	Lamw$b;	g	WEBSITE
	f	Lamw$b;	h	FORUMS
	f	Lamw$b;	i	NEWS
	f	Lamw$b;	j	ANNOUNCEMENTS
	f	Ljava/util/function/IntFunction;	l	BY_ID
	f	Lzm;	k	STREAM_CODEC
	f	I	m	id
	f	Ljava/lang/String;	n	name
	f	[Lamw$b;	o	$VALUES
	m	()[Lamw$b;	values	values
	m	(Ljava/lang/String;)Lamw$b;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Lxo;	a	displayName
	m	(Ljava/net/URI;)Lamw$a;	a	create
	m	(Lamw$b;)I	a	lambda$static$1
	m	(Lamw$b;)I	b	lambda$static$0
	m	()[Lamw$b;	b	$values
	m	()V	<clinit>	<clinit>
c	amw$c	net/minecraft/server/ServerLinks$UntrustedEntry
	f	Lcom/mojang/datafixers/util/Either;	b	type
	f	Ljava/lang/String;	c	link
	f	Lzm;	a	STREAM_CODEC
	m	(Lcom/mojang/datafixers/util/Either;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/datafixers/util/Either;	a	type
	m	()Ljava/lang/String;	b	link
	m	()V	<clinit>	<clinit>
c	amx	net/minecraft/server/ServerScoreboard
	f	Lfby;	a	TYPE
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Ljava/util/Set;	d	trackedObjectives
	f	Ljava/util/List;	e	dirtyListeners
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	(Lfjw;Lfjp;Lfju;)V	a	onScoreChanged
	m	(Lfjw;Lfjp;)V	a	onScoreLockChanged
	m	(Lfjw;)V	a	onPlayerRemoved
	m	(Lfjw;Lfjp;)V	b	onPlayerScoreRemoved
	m	(Lfjo;Lfjp;)V	a	setDisplayObjective
	m	(Ljava/lang/String;Lfjs;)Z	a	addPlayerToTeam
	m	(Ljava/lang/String;Lfjs;)V	b	removePlayerFromTeam
	m	(Lfjp;)V	a	onObjectiveAdded
	m	(Lfjp;)V	b	onObjectiveChanged
	m	(Lfjp;)V	c	onObjectiveRemoved
	m	(Lfjs;)V	a	onTeamAdded
	m	(Lfjs;)V	b	onTeamChanged
	m	(Lfjs;)V	c	onTeamRemoved
	m	(Ljava/lang/Runnable;)V	a	addDirtyListener
	m	()V	a	setDirty
	m	(Lfjp;)Ljava/util/List;	d	getStartTrackingPackets
	m	(Lfjp;)V	e	startTrackingObjective
	m	(Lfjp;)Ljava/util/List;	f	getStopTrackingPackets
	m	(Lfjp;)V	g	stopTrackingObjective
	m	(Lfjp;)I	h	getObjectiveDisplaySlotCount
	m	()Lfjy;	h	createData
	m	(Lfjy$a;)Lfjy;	a	createData
	m	(Ljava/lang/String;)V	f	updatePlayerWaypoint
	m	(Lfjs;)V	e	updateTeamWaypoints
	m	(Laub;Lauc;)V	a	lambda$updateTeamWaypoints$3
	m	(Ljava/lang/String;)Lauc;	g	lambda$updateTeamWaypoints$2
	m	(Lfbx$a;)Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lfbx$a;)Lfjy;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	amy	net/minecraft/server/ServerTickRateManager
	f	J	g	remainingSprintTicks
	f	J	h	sprintTickStartTime
	f	J	i	sprintTimeSpend
	f	J	j	scheduledCurrentSprintTicks
	f	Z	k	previousIsFrozen
	f	Lnet/minecraft/server/MinecraftServer;	l	server
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	()Z	a	isSprinting
	m	(Z)V	a	setFrozen
	m	()V	n	updateStateToClients
	m	()V	o	updateStepTicks
	m	(I)Z	a	stepGameIfPaused
	m	()Z	b	stopStepping
	m	()Z	c	stopSprinting
	m	(I)Z	b	requestGameToSprint
	m	()V	p	finishTickSprint
	m	()Z	d	checkShouldSprintThisTick
	m	()V	e	endTickWork
	m	(F)V	a	setTickRate
	m	(Lauc;)V	a	updateJoiningPlayer
	m	(ILjava/lang/String;)Lxo;	a	lambda$finishTickSprint$0
c	amz	net/minecraft/server/Services
	f	Lcom/mojang/authlib/minecraft/MinecraftSessionService;	a	sessionService
	f	Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	b	servicesKeySet
	f	Lcom/mojang/authlib/GameProfileRepository;	c	profileRepository
	f	Laxx;	d	profileCache
	f	Ljava/lang/String;	e	USERID_CACHE_FILE
	m	(Lcom/mojang/authlib/minecraft/MinecraftSessionService;Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/GameProfileRepository;Laxx;)V	<init>	<init>
	m	(Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lamz;	a	create
	m	()Lbcq;	a	profileKeySignatureValidator
	m	()Z	b	canValidateProfileKeys
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/authlib/minecraft/MinecraftSessionService;	c	sessionService
	m	()Lcom/mojang/authlib/yggdrasil/ServicesKeySet;	d	servicesKeySet
	m	()Lcom/mojang/authlib/GameProfileRepository;	e	profileRepository
	m	()Laxx;	f	profileCache
c	ana	net/minecraft/server/SuppressedExceptionCollector
	f	I	a	LATEST_ENTRY_COUNT
	f	Ljava/util/Queue;	b	latestEntries
	f	Lit/unimi/dsi/fastutil/objects/Object2IntLinkedOpenHashMap;	c	entryCounts
	m	()V	<init>	<init>
	m	()J	b	currentTimeMs
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	a	addEntry
	m	()Ljava/lang/String;	a	dump
c	ana$a	net/minecraft/server/SuppressedExceptionCollector$LongEntry
	f	J	a	timestampMs
	f	Ljava/lang/String;	b	location
	f	Ljava/lang/Class;	c	cls
	f	Ljava/lang/String;	d	message
	m	(JLjava/lang/String;Ljava/lang/Class;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	a	timestampMs
	m	()Ljava/lang/String;	b	location
	m	()Ljava/lang/Class;	c	cls
	m	()Ljava/lang/String;	d	message
c	ana$b	net/minecraft/server/SuppressedExceptionCollector$ShortEntry
	f	Ljava/lang/String;	a	location
	f	Ljava/lang/Class;	b	cls
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	location
	m	()Ljava/lang/Class;	b	cls
c	anb	net/minecraft/server/TickTask
	f	I	a	tick
	f	Ljava/lang/Runnable;	b	runnable
	m	(ILjava/lang/Runnable;)V	<init>	<init>
	m	()I	a	getTick
	m	()V	run	run
c	anc	net/minecraft/server/WorldLoader
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Lanc$c;Lanc$f;Lanc$e;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	load
	m	(Lanc$e;Laxe;Ljs;Lanc$b;Lamp;)Ljava/lang/Object;	a	lambda$load$1
	m	(Laxe;Lamp;Ljava/lang/Throwable;)V	a	lambda$load$0
	m	()V	<clinit>	<clinit>
c	anc$a	net/minecraft/server/WorldLoader$DataLoadContext
	f	Laxo;	a	resources
	f	Ldns;	b	dataConfiguration
	f	Ljn$a;	c	datapackWorldgen
	f	Ljz$b;	d	datapackDimensions
	m	(Laxo;Ldns;Ljn$a;Ljz$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laxo;	a	resources
	m	()Ldns;	b	dataConfiguration
	m	()Ljn$a;	c	datapackWorldgen
	m	()Ljz$b;	d	datapackDimensions
c	anc$b	net/minecraft/server/WorldLoader$DataLoadOutput
	f	Ljava/lang/Object;	a	cookie
	f	Ljz$b;	b	finalDimensions
	m	(Ljava/lang/Object;Ljz$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	cookie
	m	()Ljz$b;	b	finalDimensions
c	anc$c	net/minecraft/server/WorldLoader$InitConfig
	f	Lanc$d;	a	packConfig
	f	Lel$a;	b	commandSelection
	f	I	c	functionCompilationLevel
	m	(Lanc$d;Lel$a;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lanc$d;	a	packConfig
	m	()Lel$a;	b	commandSelection
	m	()I	c	functionCompilationLevel
c	anc$d	net/minecraft/server/WorldLoader$PackConfig
	f	Lawz;	a	packRepository
	f	Ldns;	b	initialDataConfig
	f	Z	c	safeMode
	f	Z	d	initMode
	m	(Lawz;Ldns;ZZ)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Pair;	a	createResourceManager
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lawz;	b	packRepository
	m	()Ldns;	c	initialDataConfig
	m	()Z	d	safeMode
	m	()Z	e	initMode
c	anc$e	net/minecraft/server/WorldLoader$ResultFactory
	m	(Laxe;Lamp;Ljs;Ljava/lang/Object;)Ljava/lang/Object;	create	create
c	anc$f	net/minecraft/server/WorldLoader$WorldDataSupplier
	m	(Lanc$a;)Lanc$b;	get	get
c	and	net/minecraft/server/WorldStem
	f	Laxe;	a	resourceManager
	f	Lamp;	b	dataPackResources
	f	Ljs;	c	registries
	f	Lfdd;	d	worldData
	m	(Laxe;Lamp;Ljs;Lfdd;)V	<init>	<init>
	m	()V	close	close
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laxe;	a	resourceManager
	m	()Lamp;	b	dataPackResources
	m	()Ljs;	c	registries
	m	()Lfdd;	d	worldData
c	ane	net/minecraft/server/advancements/AdvancementVisibilityEvaluator
	f	I	a	VISIBILITY_DEPTH
	m	()V	<init>	<init>
	m	(Lai;Z)Lane$b;	a	evaluateVisibilityRule
	m	(Lit/unimi/dsi/fastutil/Stack;)Z	a	evaluateVisiblityForUnfinishedNode
	m	(Lak;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lane$a;)Z	a	evaluateVisibility
	m	(Lak;Ljava/util/function/Predicate;Lane$a;)V	a	evaluateVisibility
c	ane$a	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output
	m	(Lak;Z)V	accept	accept
c	ane$b	net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule
	f	Lane$b;	a	SHOW
	f	Lane$b;	b	HIDE
	f	Lane$b;	c	NO_CHANGE
	f	[Lane$b;	d	$VALUES
	m	()[Lane$b;	values	values
	m	(Ljava/lang/String;)Lane$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lane$b;	a	$values
	m	()V	<clinit>	<clinit>
c	anf	net/minecraft/server/advancements/package-info
c	ang	net/minecraft/server/bossevents/CustomBossEvent
	f	I	h	DEFAULT_MAX
	f	Lame;	i	id
	f	Ljava/util/Set;	j	players
	f	I	k	value
	f	I	l	max
	m	(Lame;Lxo;)V	<init>	<init>
	m	()Lame;	a	getTextId
	m	(Lauc;)V	a	addPlayer
	m	(Ljava/util/UUID;)V	a	addOfflinePlayer
	m	(Lauc;)V	b	removePlayer
	m	()V	b	removeAllPlayers
	m	()I	c	getValue
	m	()I	d	getMax
	m	(I)V	a	setValue
	m	(I)V	b	setMax
	m	()Lxo;	e	getDisplayName
	m	(Ljava/util/Collection;)Z	a	setPlayers
	m	(Lame;Lang$a;)Lang;	a	load
	m	()Lang$a;	f	pack
	m	(Lauc;)V	c	onPlayerConnect
	m	(Lauc;)V	d	onPlayerDisconnect
	m	(Lyl;)Lyl;	a	lambda$getDisplayName$0
c	ang$a	net/minecraft/server/bossevents/CustomBossEvent$Packed
	f	Lxo;	b	name
	f	Z	c	visible
	f	I	d	value
	f	I	e	max
	f	Lbwz$a;	f	color
	f	Lbwz$b;	g	overlay
	f	Z	h	darkenScreen
	f	Z	i	playBossMusic
	f	Z	j	createWorldFog
	f	Ljava/util/Set;	k	players
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lxo;ZIILbwz$a;Lbwz$b;ZZZLjava/util/Set;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	name
	m	()Z	b	visible
	m	()I	c	value
	m	()I	d	max
	m	()Lbwz$a;	e	color
	m	()Lbwz$b;	f	overlay
	m	()Z	g	darkenScreen
	m	()Z	h	playBossMusic
	m	()Z	i	createWorldFog
	m	()Ljava/util/Set;	j	players
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	anh	net/minecraft/server/bossevents/CustomBossEvents
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/serialization/Codec;	b	EVENTS_CODEC
	f	Ljava/util/Map;	c	events
	m	()V	<init>	<init>
	m	(Lame;)Lang;	a	get
	m	(Lame;Lxo;)Lang;	a	create
	m	(Lang;)V	a	remove
	m	()Ljava/util/Collection;	a	getIds
	m	()Ljava/util/Collection;	b	getEvents
	m	(Ljn$a;)Lui;	a	save
	m	(Lui;Ljn$a;)V	a	load
	m	(Lauc;)V	a	onPlayerConnect
	m	(Lauc;)V	b	onPlayerDisconnect
	m	(Lame;Lang$a;)V	a	lambda$load$1
	m	(Ljava/lang/String;)V	a	lambda$load$0
	m	()V	<clinit>	<clinit>
c	ani	net/minecraft/server/bossevents/package-info
c	anj	net/minecraft/server/chase/ChaseClient
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	RECONNECT_INTERVAL_SECONDS
	f	Ljava/lang/String;	c	serverHost
	f	I	d	serverPort
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	f	wantsToRun
	f	Ljava/net/Socket;	g	socket
	f	Ljava/lang/Thread;	h	thread
	m	(Ljava/lang/String;ILnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	()V	a	start
	m	()V	b	stop
	m	()V	c	run
	m	(Ljava/lang/String;)V	a	handleMessage
	m	(Ljava/util/Scanner;)V	a	handleTeleport
	m	(Ljava/util/Scanner;)Ljava/util/Optional;	b	parseTarget
	m	(Ljava/lang/String;)V	b	executeCommand
	m	(Ljava/lang/String;)V	c	lambda$executeCommand$1
	m	(Lanj$a;)V	a	lambda$handleTeleport$0
	m	()V	<clinit>	<clinit>
c	anj$a	net/minecraft/server/chase/ChaseClient$TeleportTarget
	f	Lamd;	a	level
	f	Lfis;	b	pos
	f	Lfir;	c	rot
	m	(Lamd;Lfis;Lfir;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	level
	m	()Lfis;	b	pos
	m	()Lfir;	c	rot
c	ank	net/minecraft/server/chase/ChaseServer
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	serverBindAddress
	f	I	c	serverPort
	f	Layb;	d	playerList
	f	I	e	broadcastIntervalMs
	f	Z	f	wantsToRun
	f	Ljava/net/ServerSocket;	g	serverSocket
	f	Ljava/util/concurrent/CopyOnWriteArrayList;	h	clientSockets
	m	(Ljava/lang/String;ILayb;I)V	<init>	<init>
	m	()V	a	start
	m	()V	c	runSender
	m	()V	b	stop
	m	()V	d	runAcceptor
	m	()Lank$a;	e	getPlayerPosition
	m	(Ljava/net/Socket;[B)V	a	lambda$runSender$0
	m	()V	<clinit>	<clinit>
c	ank$a	net/minecraft/server/chase/ChaseServer$PlayerPosition
	f	Ljava/lang/String;	a	dimensionName
	f	D	b	x
	f	D	c	y
	f	D	d	z
	f	F	e	yRot
	f	F	f	xRot
	m	(Ljava/lang/String;DDDFF)V	<init>	<init>
	m	()Ljava/lang/String;	g	format
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	dimensionName
	m	()D	b	x
	m	()D	c	y
	m	()D	d	z
	m	()F	e	yRot
	m	()F	f	xRot
c	anl	net/minecraft/server/chase/package-info
c	anm	net/minecraft/server/commands/AdvancementCommands
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NO_ACTION_PERFORMED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_CRITERION_NOT_FOUND
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Lanm$a;Ljava/util/Collection;)I	a	perform
	m	(Lek;Ljava/util/Collection;Lanm$a;Ljava/util/Collection;Z)I	a	perform
	m	(Lek;Ljava/util/Collection;Lanm$a;Laj;Ljava/lang/String;)I	a	performCriterion
	m	(Lcom/mojang/brigadier/context/CommandContext;Laj;Lanm$b;)Ljava/util/List;	a	getAdvancements
	m	(Lak;Ljava/util/List;)V	a	addChildren
	m	(Lanm$a;Ljava/lang/String;Laj;Ljava/util/Collection;)Lxo;	a	lambda$performCriterion$21
	m	(Lanm$a;Ljava/lang/String;Laj;Ljava/util/Collection;)Lxo;	b	lambda$performCriterion$20
	m	(Lanm$a;Ljava/util/Collection;Ljava/util/Collection;)Lxo;	a	lambda$perform$19
	m	(Lanm$a;Ljava/util/Collection;Ljava/util/Collection;)Lxo;	b	lambda$perform$18
	m	(Lanm$a;Ljava/util/Collection;Ljava/util/Collection;)Lxo;	c	lambda$perform$17
	m	(Lanm$a;Ljava/util/Collection;Ljava/util/Collection;)Lxo;	d	lambda$perform$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	anm$a	net/minecraft/server/commands/AdvancementCommands$Action
	f	Lanm$a;	a	GRANT
	f	Lanm$a;	b	REVOKE
	f	Ljava/lang/String;	c	key
	f	[Lanm$a;	d	$VALUES
	m	()[Lanm$a;	values	values
	m	(Ljava/lang/String;)Lanm$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lauc;Ljava/lang/Iterable;Z)I	a	perform
	m	(Lauc;Laj;)Z	a	perform
	m	(Lauc;Laj;Ljava/lang/String;)Z	a	performCriterion
	m	()Ljava/lang/String;	a	getKey
	m	()[Lanm$a;	b	$values
	m	()V	<clinit>	<clinit>
c	anm$a$1	net/minecraft/server/commands/AdvancementCommands$Action$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lauc;Laj;)Z	a	perform
	m	(Lauc;Laj;Ljava/lang/String;)Z	a	performCriterion
c	anm$a$2	net/minecraft/server/commands/AdvancementCommands$Action$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lauc;Laj;)Z	a	perform
	m	(Lauc;Laj;Ljava/lang/String;)Z	a	performCriterion
c	anm$b	net/minecraft/server/commands/AdvancementCommands$Mode
	f	Lanm$b;	a	ONLY
	f	Lanm$b;	b	THROUGH
	f	Lanm$b;	c	FROM
	f	Lanm$b;	d	UNTIL
	f	Lanm$b;	e	EVERYTHING
	f	Z	f	parents
	f	Z	g	children
	f	[Lanm$b;	h	$VALUES
	m	()[Lanm$b;	values	values
	m	(Ljava/lang/String;)Lanm$b;	valueOf	valueOf
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
	m	()[Lanm$b;	a	$values
	m	()V	<clinit>	<clinit>
c	ann	net/minecraft/server/commands/AttributeCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_NO_SUCH_ATTRIBUTE
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	c	ERROR_NO_SUCH_MODIFIER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	d	ERROR_MODIFIER_ALREADY_PRESENT
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lbzm;Ljl;)Lcbo;	a	getAttributeInstance
	m	(Lbzm;)Lcam;	a	getLivingEntity
	m	(Lbzm;Ljl;)Lcam;	b	getEntityWithAttribute
	m	(Lek;Lbzm;Ljl;D)I	a	getAttributeValue
	m	(Lek;Lbzm;Ljl;D)I	b	getAttributeBase
	m	(Lek;Lbzm;Ljl;Lame;D)I	a	getAttributeModifier
	m	(Lbzm;Ljl;)Ljava/util/stream/Stream;	c	getAttributeModifiers
	m	(Lek;Lbzm;Ljl;D)I	c	setAttributeBase
	m	(Lek;Lbzm;Ljl;)I	a	resetAttributeBase
	m	(Lek;Lbzm;Ljl;Lame;DLcbq$a;)I	a	addModifier
	m	(Lek;Lbzm;Ljl;Lame;)I	a	removeModifier
	m	(Ljl;)Lxo;	a	getAttributeDescription
	m	(Lame;Ljl;Lbzm;)Lxo;	a	lambda$removeModifier$24
	m	(Lame;Ljl;Lbzm;)Lxo;	b	lambda$addModifier$23
	m	(Ljl;Lbzm;D)Lxo;	a	lambda$resetAttributeBase$22
	m	(Ljl;Lbzm;D)Lxo;	b	lambda$setAttributeBase$21
	m	(Lame;Ljl;Lbzm;D)Lxo;	a	lambda$getAttributeModifier$20
	m	(Ljl;Lbzm;D)Lxo;	c	lambda$getAttributeBase$19
	m	(Ljl;Lbzm;D)Lxo;	d	lambda$getAttributeValue$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$4
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ano	net/minecraft/server/commands/BanIpCommands
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID_IP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_BANNED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/lang/String;Lxo;)I	a	banIpOrName
	m	(Lek;Ljava/lang/String;Lxo;)I	b	banIp
	m	(Ljava/util/List;)Lxo;	a	lambda$banIp$3
	m	(Ljava/lang/String;Laxz;)Lxo;	a	lambda$banIp$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	anp	net/minecraft/server/commands/BanListCommands
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	showList
	m	(Laxw;)Lxo;	a	lambda$showList$5
	m	(Ljava/util/Collection;)Lxo;	a	lambda$showList$4
	m	()Lxo;	a	lambda$showList$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
c	anq	net/minecraft/server/commands/BanPlayerCommands
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_BANNED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Lxo;)I	a	banPlayers
	m	(Lcom/mojang/authlib/GameProfile;Layi;)Lxo;	a	lambda$banPlayers$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	anr	net/minecraft/server/commands/BossBarCommands
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_DOESNT_EXIST
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NO_PLAYER_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NO_NAME_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_NO_COLOR_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_NO_STYLE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_NO_VALUE_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_NO_MAX_CHANGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_ALREADY_HIDDEN
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_ALREADY_VISIBLE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	a	SUGGEST_BOSS_BAR
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Lang;)I	a	getValue
	m	(Lek;Lang;)I	b	getMax
	m	(Lek;Lang;)I	c	getVisible
	m	(Lek;Lang;)I	d	getPlayers
	m	(Lek;Lang;Z)I	a	setVisible
	m	(Lek;Lang;I)I	a	setValue
	m	(Lek;Lang;I)I	b	setMax
	m	(Lek;Lang;Lbwz$a;)I	a	setColor
	m	(Lek;Lang;Lbwz$b;)I	a	setStyle
	m	(Lek;Lang;Lxo;)I	a	setName
	m	(Lek;Lang;Ljava/util/Collection;)I	a	setPlayers
	m	(Lek;)I	a	listBars
	m	(Lek;Lame;Lxo;)I	a	createBar
	m	(Lek;Lang;)I	e	removeBar
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lang;	a	getBossBar
	m	(Lang;)Lxo;	a	lambda$removeBar$46
	m	(Lang;)Lxo;	b	lambda$createBar$45
	m	(Ljava/util/Collection;)Lxo;	a	lambda$listBars$44
	m	()Lxo;	a	lambda$listBars$43
	m	(Lang;Ljava/util/Collection;)Lxo;	a	lambda$setPlayers$42
	m	(Lang;)Lxo;	c	lambda$setPlayers$41
	m	(Lang;)Lxo;	d	lambda$setName$40
	m	(Lang;)Lxo;	e	lambda$setStyle$39
	m	(Lang;)Lxo;	f	lambda$setColor$38
	m	(Lang;I)Lxo;	a	lambda$setMax$37
	m	(Lang;I)Lxo;	b	lambda$setValue$36
	m	(Lang;)Lxo;	g	lambda$setVisible$35
	m	(Lang;)Lxo;	h	lambda$setVisible$34
	m	(Lang;)Lxo;	i	lambda$getPlayers$33
	m	(Lang;)Lxo;	j	lambda$getPlayers$32
	m	(Lang;)Lxo;	k	lambda$getVisible$31
	m	(Lang;)Lxo;	l	lambda$getVisible$30
	m	(Lang;)Lxo;	m	lambda$getMax$29
	m	(Lang;)Lxo;	n	lambda$getValue$28
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$25
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ans	net/minecraft/server/commands/ChaseCommand
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	DEFAULT_CONNECT_HOST
	f	Ljava/lang/String;	d	DEFAULT_BIND_ADDRESS
	f	I	e	DEFAULT_PORT
	f	I	f	BROADCAST_INTERVAL_MS
	f	Lcom/google/common/collect/BiMap;	a	DIMENSION_NAMES
	f	Lank;	g	chaseServer
	f	Lanj;	h	chaseClient
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	stop
	m	(Lek;)Z	b	alreadyRunning
	m	(Lek;Ljava/lang/String;I)I	a	lead
	m	(Lek;Ljava/lang/String;I)I	b	follow
	m	(Ljava/lang/String;I)Lxo;	a	lambda$follow$10
	m	(I)Lxo;	a	lambda$lead$9
	m	()Lxo;	a	lambda$stop$8
	m	()Lxo;	b	lambda$stop$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
	m	()V	<clinit>	<clinit>
c	ant	net/minecraft/server/commands/ClearInventoryCommands
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_SINGLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_MULTIPLE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljava/util/function/Predicate;)I	a	clearUnlimited
	m	(Lek;Ljava/util/Collection;Ljava/util/function/Predicate;I)I	a	clearInventory
	m	(ILjava/util/Collection;)Lxo;	a	lambda$clearInventory$11
	m	(ILjava/util/Collection;)Lxo;	b	lambda$clearInventory$10
	m	(ILjava/util/Collection;)Lxo;	c	lambda$clearInventory$9
	m	(ILjava/util/Collection;)Lxo;	d	lambda$clearInventory$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Ldcv;)Z	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Ldcv;)Z	b	lambda$register$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	anu	net/minecraft/server/commands/CloneCommands
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_OVERLAP
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_FAILED
	f	Ljava/util/function/Predicate;	a	FILTER_AIR
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Leg;Laos;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	beginEndDestinationAndModeSuffix
	m	(Lcom/mojang/brigadier/context/CommandContext;Laub;Ljava/lang/String;)Lanu$c;	a	getLoadedDimensionAndPosition
	m	(Leg;Laos;Laos;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	destinationAndStrictSuffix
	m	(Leg;Laos;Laos;Laos;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	modeSuffix
	m	(Laos;Laos;Laos;Laos;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapWithCloneMode
	m	(Lek;Lanu$c;Lanu$c;Lanu$c;Ljava/util/function/Predicate;Lanu$d;Z)I	a	clone
	m	(I)Lxo;	a	lambda$clone$19
	m	(Laos;Laos;Laos;Laos;ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$wrapWithCloneMode$18
	m	(Laos;Laos;Laos;Laos;ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$wrapWithCloneMode$17
	m	(Laos;Laos;Laos;Laos;ZLcom/mojang/brigadier/context/CommandContext;)I	c	lambda$wrapWithCloneMode$16
	m	(Laos;Laos;Laos;Laos;ZLcom/mojang/brigadier/context/CommandContext;)I	d	lambda$wrapWithCloneMode$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	a	lambda$modeSuffix$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	b	lambda$modeSuffix$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	c	lambda$modeSuffix$12
	m	(Leef;)Z	a	lambda$modeSuffix$11
	m	(Laos;Laos;Laos;ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$modeSuffix$10
	m	(Leef;)Z	b	lambda$modeSuffix$9
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)Lanu$c;	a	lambda$destinationAndStrictSuffix$8
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)Lanu$c;	b	lambda$destinationAndStrictSuffix$7
	m	(Laos;Lcom/mojang/brigadier/context/CommandContext;)Lanu$c;	c	lambda$destinationAndStrictSuffix$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laub;	d	lambda$beginEndDestinationAndModeSuffix$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laub;	e	lambda$beginEndDestinationAndModeSuffix$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laub;	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)Laub;	g	lambda$register$2
	m	(Leef;)Z	c	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	anu$a	net/minecraft/server/commands/CloneCommands$CloneBlockEntityInfo
	f	Lui;	a	tag
	f	Lkn;	b	components
	m	(Lui;Lkn;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lui;	a	tag
	m	()Lkn;	b	components
c	anu$b	net/minecraft/server/commands/CloneCommands$CloneBlockInfo
	f	Ljb;	a	pos
	f	Leeb;	b	state
	f	Lanu$a;	c	blockEntityInfo
	f	Leeb;	d	previousStateAtDestination
	m	(Ljb;Leeb;Lanu$a;Leeb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Leeb;	b	state
	m	()Lanu$a;	c	blockEntityInfo
	m	()Leeb;	d	previousStateAtDestination
c	anu$c	net/minecraft/server/commands/CloneCommands$DimensionAndPosition
	f	Laub;	a	dimension
	f	Ljb;	b	position
	m	(Laub;Ljb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laub;	a	dimension
	m	()Ljb;	b	position
c	anu$d	net/minecraft/server/commands/CloneCommands$Mode
	f	Lanu$d;	a	FORCE
	f	Lanu$d;	b	MOVE
	f	Lanu$d;	c	NORMAL
	f	Z	d	canOverlap
	f	[Lanu$d;	e	$VALUES
	m	()[Lanu$d;	values	values
	m	(Ljava/lang/String;)Lanu$d;	valueOf	valueOf
	m	(Ljava/lang/String;IZ)V	<init>	<init>
	m	()Z	a	canOverlap
	m	()[Lanu$d;	b	$values
	m	()V	<clinit>	<clinit>
c	anv	net/minecraft/server/commands/DamageCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVULNERABLE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Lbzm;FLbyb;)I	a	damage
	m	(FLbzm;)Lxo;	a	lambda$damage$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$0
	m	()V	<clinit>	<clinit>
c	anw	net/minecraft/server/commands/DataPackCommand
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_UNKNOWN_PACK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_PACK_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_PACK_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_CANNOT_DISABLE_FEATURE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_PACK_FEATURES_NOT_ENABLED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	g	ERROR_PACK_INVALID_NAME
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_PACK_INVALID_FULL_NAME
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_PACK_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	j	ERROR_PACK_METADATA_ENCODE_FAILURE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	k	ERROR_PACK_IO_FAILURE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	l	SELECTED_PACKS
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	m	UNSELECTED_PACKS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/lang/String;Lxo;)I	a	createPack
	m	(Lek;Laww;Lanw$a;)I	a	enablePack
	m	(Lek;Laww;)I	a	disablePack
	m	(Lek;)I	a	listPacks
	m	(Lek;)I	b	listAvailablePacks
	m	(Lek;)I	c	listEnabledPacks
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Laww;	a	getPack
	m	(Ljava/util/Collection;)Lxo;	a	lambda$listEnabledPacks$37
	m	(Laww;)Lxo;	a	lambda$listEnabledPacks$36
	m	()Lxo;	a	lambda$listEnabledPacks$35
	m	(Ljava/util/List;)Lxo;	a	lambda$listAvailablePacks$34
	m	(Laww;)Lxo;	b	lambda$listAvailablePacks$33
	m	()Lxo;	b	lambda$listAvailablePacks$32
	m	(Ljava/util/Collection;Lcyd;Laww;)Z	a	lambda$listAvailablePacks$31
	m	(Laww;)Lxo;	c	lambda$disablePack$30
	m	(Laww;)Lxo;	d	lambda$enablePack$29
	m	(Ljava/lang/String;)Lxo;	a	lambda$createPack$28
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$25
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$22
	m	(Ljava/util/List;Laww;)V	a	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laww;)V	a	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Laww;)V	b	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$15
	m	(Ljava/util/List;Laww;)V	b	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$13
	m	(Ljava/util/Collection;Ljava/lang/String;)Z	a	lambda$static$12
	m	(Lcyd;Laww;)Z	a	lambda$static$11
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$static$10
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$9
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$8
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$7
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$6
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$5
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	e	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	f	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	g	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	anw$a	net/minecraft/server/commands/DataPackCommand$Inserter
	m	(Ljava/util/List;Laww;)V	apply	apply
c	anx	net/minecraft/server/commands/DeOpCommands
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_OP
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	deopPlayers
	m	(Ljava/util/Collection;)Lxo;	a	lambda$deopPlayers$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	any	net/minecraft/server/commands/DebugCommand
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	NO_RECURSIVE_TRACES
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	NO_RETURN_RUN
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	start
	m	(Lek;)I	b	stop
	m	(DLbtr;D)Lxo;	a	lambda$stop$3
	m	()Lxo;	a	lambda$start$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	any$a	net/minecraft/server/commands/DebugCommand$TraceCustomExecutor
	m	()V	<init>	<init>
	m	(Lek;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	runGuarded
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	b	runGuarded
	m	(Ljava/util/Collection;Lek;ILjava/lang/String;Lho;Lhq;)V	a	lambda$runGuarded$2
	m	(ILjava/util/Collection;Ljava/lang/String;)Lxo;	a	lambda$runGuarded$1
	m	(ILjava/util/Collection;Ljava/lang/String;)Lxo;	b	lambda$runGuarded$0
c	any$a$1	net/minecraft/server/commands/DebugCommand$TraceCustomExecutor$1
	f	Ljava/io/PrintWriter;	a	val$output
	f	Lib;	b	val$function
	m	(Lany$a;Lid;Leh;ZLjava/io/PrintWriter;Lib;)V	<init>	<init>
	m	(Lek;Lho;Lhq;)V	a	execute
	m	(Lem;Lho;Lhq;)V	a	execute
	m	(Ljava/lang/Object;Lho;Lhq;)V	execute	execute
c	any$b	net/minecraft/server/commands/DebugCommand$Tracer
	f	I	b	INDENT_OFFSET
	f	Ljava/io/PrintWriter;	c	output
	f	I	d	lastIndent
	f	Z	e	waitingForResult
	m	(Ljava/io/PrintWriter;)V	<init>	<init>
	m	(I)V	a	indentAndSave
	m	(I)V	b	printIndent
	m	()V	e	newLine
	m	(ILjava/lang/String;)V	a	onCommand
	m	(ILjava/lang/String;I)V	a	onReturn
	m	(ILame;I)V	a	onCall
	m	(Ljava/lang/String;)V	a	onError
	m	(Lxo;)V	a	sendSystemMessage
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	()Z	o_	alwaysAccepts
	m	()V	close	close
c	anz	net/minecraft/server/commands/DebugConfigCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/lang/Iterable;	a	getUuidsInConfig
	m	(Lek;Lauc;)I	a	config
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/UUID;)Lavd;	a	findConfigPlayer
	m	(Lek;Ljava/util/UUID;)I	a	unconfig
	m	(Lek;Ljava/util/UUID;Ljl;)I	a	showDialog
	m	(Lcom/mojang/authlib/GameProfile;)Lxo;	a	lambda$config$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
c	aoa	net/minecraft/server/commands/DebugMobSpawningCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lcap;Ljb;)I	a	spawnMobs
	m	(Lcap;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
c	aob	net/minecraft/server/commands/DebugPathCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_MOB
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NO_PATH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_COMPLETE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljb;)I	a	fillBlocks
	m	()Lxo;	a	lambda$fillBlocks$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aoc	net/minecraft/server/commands/DefaultGameModeCommands
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ldmr;)I	a	setMode
	m	(Ldmr;)Lxo;	a	lambda$setMode$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
c	aod	net/minecraft/server/commands/DialogCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljl;)I	a	showDialog
	m	(Lek;Ljava/util/Collection;)I	a	clearDialog
	m	(Ljava/util/Collection;)Lxo;	a	lambda$clearDialog$5
	m	(Ljava/util/Collection;)Lxo;	b	lambda$clearDialog$4
	m	(Ljava/util/Collection;)Lxo;	c	lambda$showDialog$3
	m	(Ljava/util/Collection;)Lxo;	d	lambda$showDialog$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aoe	net/minecraft/server/commands/DifficultyCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_ALREADY_DIFFICULT
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lbxg;)I	a	setDifficulty
	m	(Lbxg;)Lxo;	a	lambda$setDifficulty$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lbxg;)Lxo;	b	lambda$register$2
	m	(Lbxg;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aof	net/minecraft/server/commands/EffectCommands
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_CLEAR_EVERYTHING_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_CLEAR_SPECIFIC_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljl;Ljava/lang/Integer;IZ)I	a	giveEffect
	m	(Lek;Ljava/util/Collection;)I	a	clearEffects
	m	(Lek;Ljava/util/Collection;Ljl;)I	a	clearEffect
	m	(Lbyo;Ljava/util/Collection;)Lxo;	a	lambda$clearEffect$15
	m	(Lbyo;Ljava/util/Collection;)Lxo;	b	lambda$clearEffect$14
	m	(Ljava/util/Collection;)Lxo;	a	lambda$clearEffects$13
	m	(Ljava/util/Collection;)Lxo;	b	lambda$clearEffects$12
	m	(Lbyo;Ljava/util/Collection;I)Lxo;	a	lambda$giveEffect$11
	m	(Lbyo;Ljava/util/Collection;I)Lxo;	b	lambda$giveEffect$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aog	net/minecraft/server/commands/EmoteCommands
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lye;)V	a	lambda$register$0
c	aoh	net/minecraft/server/commands/EnchantCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_LIVING_ENTITY
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ITEM
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_INCOMPATIBLE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_LEVEL_TOO_HIGH
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOTHING_HAPPENED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljl;I)I	a	enchant
	m	(Ljl;ILjava/util/Collection;)Lxo;	a	lambda$enchant$7
	m	(Ljl;ILjava/util/Collection;)Lxo;	b	lambda$enchant$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aoi	net/minecraft/server/commands/ExecuteCommand
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	MAX_TEST_AREA
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_AREA_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_CONDITIONAL_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_CONDITIONAL_FAILED_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_FUNCTION_CONDITION_INSTANTATION_FAILURE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapStores
	m	(Lek;Ljava/util/Collection;Lfjp;Z)Lek;	a	storeValue
	m	(Lek;Lang;ZZ)Lek;	a	storeValue
	m	(Lek;Larb;Lfe$g;Ljava/util/function/IntFunction;Z)Lek;	a	storeData
	m	(Laub;Ljb;)Z	a	isChunkLoaded
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLeg;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditionals
	m	(Ljava/lang/Iterable;Ldal;Ljava/util/function/Predicate;)I	a	countItems
	m	(Lek;Ljb;Ldal;Ljava/util/function/Predicate;)I	a	countItems
	m	(ZLaoi$a;)Lcom/mojang/brigadier/Command;	a	createNumericConditionalHandler
	m	(Larb;Lfe$g;)I	a	checkMatchingData
	m	(Lcom/mojang/brigadier/context/CommandContext;Laoi$d;)Z	a	checkScore
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcx$d;)Z	a	checkScore
	m	(Lek;Ljl;)Z	a	checkCustomPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection;	a	expect
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLaoi$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addConditional
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addIfBlocksConditional
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	a	checkIfRegions
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)I	b	checkUnlessRegions
	m	(Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt;	c	checkRegions
	m	(Laub;Ljb;Ljb;Ljb;Z)Ljava/util/OptionalInt;	a	checkRegions
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	a	expandOneToOneEntityRelation
	m	(Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier;	b	expandOneToManyEntityRelation
	m	(Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRelationOperations
	m	(Lek;Ljl$c;)Lek;	a	spawnEntityAndRedirect
	m	(Lem;Ljava/util/List;Ljava/util/function/Function;Ljava/util/function/IntPredicate;Lcom/mojang/brigadier/context/ContextChain;Lui;Lhp;Laos;Lhj;)V	a	scheduleFunctionConditionsAndTest
	m	(Ljava/util/List;Lem;Lhp;)V	a	lambda$scheduleFunctionConditionsAndTest$86
	m	(Ljava/util/function/IntPredicate;Ljava/util/List;Lem;ZI)V	a	lambda$scheduleFunctionConditionsAndTest$85
	m	(Lbzm;)Ljava/util/stream/Stream;	a	lambda$createRelationOperations$84
	m	(Lbzm;)Ljava/util/Optional;	b	lambda$createRelationOperations$83
	m	(Lbzm;)Ljava/util/Optional;	c	lambda$createRelationOperations$82
	m	(Lbzm;)Ljava/util/Optional;	d	lambda$createRelationOperations$81
	m	(Lbzm;)Ljava/util/Optional;	e	lambda$createRelationOperations$80
	m	(Lbzm;)Ljava/util/Optional;	f	lambda$createRelationOperations$79
	m	(Lbzm;)Ljava/util/Optional;	g	lambda$createRelationOperations$78
	m	(Lbzm;)Ljava/util/Optional;	h	lambda$createRelationOperations$77
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$expandOneToManyEntityRelation$76
	m	(Lbzm;)Z	i	lambda$expandOneToManyEntityRelation$75
	m	(Ljava/util/function/Function;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$expandOneToOneEntityRelation$74
	m	(Lek;Lbzm;)Ljava/util/List;	a	lambda$expandOneToOneEntityRelation$73
	m	(Lbzm;)Z	j	lambda$expandOneToOneEntityRelation$72
	m	()Lxo;	a	lambda$checkUnlessRegions$71
	m	(Ljava/util/OptionalInt;)Lxo;	a	lambda$checkIfRegions$70
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addIfBlocksConditional$69
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addIfBlocksConditional$68
	m	(ZZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addIfBlocksConditional$67
	m	(ZLaoi$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditional$66
	m	()Lxo;	b	lambda$addConditional$65
	m	(ZLaoi$b;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	b	lambda$addConditional$64
	m	(Laoi$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createNumericConditionalHandler$63
	m	()Lxo;	c	lambda$createNumericConditionalHandler$62
	m	(Laoi$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$createNumericConditionalHandler$61
	m	(I)Lxo;	a	lambda$createNumericConditionalHandler$60
	m	(Lcom/mojang/brigadier/tree/CommandNode;ZLarc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$addConditionals$59
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$58
	m	(ZLarc$c;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$addConditionals$57
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addConditionals$56
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	c	lambda$addConditionals$55
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addConditionals$54
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	d	lambda$addConditionals$53
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	c	lambda$addConditionals$52
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$addConditionals$51
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	e	lambda$addConditionals$50
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	e	lambda$addConditionals$49
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	f	lambda$addConditionals$48
	m	(II)Z	a	lambda$addConditionals$47
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	g	lambda$addConditionals$46
	m	(II)Z	b	lambda$addConditionals$45
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	h	lambda$addConditionals$44
	m	(II)Z	c	lambda$addConditionals$43
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	i	lambda$addConditionals$42
	m	(II)Z	d	lambda$addConditionals$41
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	j	lambda$addConditionals$40
	m	(II)Z	e	lambda$addConditionals$39
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	k	lambda$addConditionals$38
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	l	lambda$addConditionals$37
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	m	lambda$addConditionals$36
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	n	lambda$addConditionals$35
	m	(Larb;ZLfe$g;Ljava/util/function/IntFunction;ZI)V	a	lambda$storeData$34
	m	(ZZLang;ZI)V	a	lambda$storeValue$33
	m	(Ljava/util/Collection;Lfjx;Lfjp;ZZI)V	a	lambda$storeValue$32
	m	(Lcom/mojang/brigadier/tree/LiteralCommandNode;Larc$c;ZLcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$wrapStores$31
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	a	lambda$wrapStores$30
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	a	lambda$wrapStores$29
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	b	lambda$wrapStores$28
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	b	lambda$wrapStores$27
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	c	lambda$wrapStores$26
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	c	lambda$wrapStores$25
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	d	lambda$wrapStores$24
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	d	lambda$wrapStores$23
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	e	lambda$wrapStores$22
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	e	lambda$wrapStores$21
	m	(Larc$c;ZLcom/mojang/brigadier/context/CommandContext;)Lek;	f	lambda$wrapStores$20
	m	(Lcom/mojang/brigadier/context/CommandContext;I)Lvi;	f	lambda$wrapStores$19
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Lek;	f	lambda$wrapStores$18
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Lek;	g	lambda$wrapStores$17
	m	(ZLcom/mojang/brigadier/context/CommandContext;)Lek;	h	lambda$wrapStores$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	o	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	p	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	q	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	r	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	s	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	t	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	u	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	v	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	w	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	x	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lek;	y	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	z	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	A	lambda$register$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aoi$a	net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	test	test
c	aoi$b	net/minecraft/server/commands/ExecuteCommand$CommandPredicate
	m	(Lcom/mojang/brigadier/context/CommandContext;)Z	test	test
c	aoi$c	net/minecraft/server/commands/ExecuteCommand$ExecuteIfFunctionCustomModifier
	f	Ljava/util/function/IntPredicate;	a	check
	m	(Z)V	<init>	<init>
	m	(Lek;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	apply
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	apply
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection;	a	lambda$apply$2
	m	(I)Z	a	lambda$new$1
	m	(I)Z	b	lambda$new$0
c	aoi$d	net/minecraft/server/commands/ExecuteCommand$IntBiPredicate
	m	(II)Z	test	test
c	aoj	net/minecraft/server/commands/ExperienceCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SET_POINTS_INVALID
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lauc;Laoj$a;)I	a	queryExperience
	m	(Lek;Ljava/util/Collection;ILaoj$a;)I	a	addExperience
	m	(Lek;Ljava/util/Collection;ILaoj$a;)I	b	setExperience
	m	(Laoj$a;ILjava/util/Collection;)Lxo;	a	lambda$setExperience$12
	m	(Laoj$a;ILjava/util/Collection;)Lxo;	b	lambda$setExperience$11
	m	(Laoj$a;ILjava/util/Collection;)Lxo;	c	lambda$addExperience$10
	m	(Laoj$a;ILjava/util/Collection;)Lxo;	d	lambda$addExperience$9
	m	(Laoj$a;Lauc;I)Lxo;	a	lambda$queryExperience$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aoj$a	net/minecraft/server/commands/ExperienceCommand$Type
	f	Laoj$a;	a	POINTS
	f	Laoj$a;	b	LEVELS
	f	Ljava/util/function/BiConsumer;	c	add
	f	Ljava/util/function/BiPredicate;	d	set
	f	Ljava/lang/String;	e	name
	f	Ljava/util/function/ToIntFunction;	f	query
	f	[Laoj$a;	g	$VALUES
	m	()[Laoj$a;	values	values
	m	(Ljava/lang/String;)Laoj$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/util/function/BiConsumer;Ljava/util/function/BiPredicate;Ljava/util/function/ToIntFunction;)V	<init>	<init>
	m	(Lauc;)I	a	lambda$static$3
	m	(Lauc;Ljava/lang/Integer;)Z	a	lambda$static$2
	m	(Lauc;)I	b	lambda$static$1
	m	(Lauc;Ljava/lang/Integer;)Z	b	lambda$static$0
	m	()[Laoj$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aok	net/minecraft/server/commands/FillBiomeCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_LOADED
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_VOLUME_TOO_LARGE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(I)I	a	quantize
	m	(Ljb;)Ljb;	a	quantize
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Lefy;Leuq;Ljl;Ljava/util/function/Predicate;)Ldoa;	a	makeResolver
	m	(Laub;Ljb;Ljb;Ljl;)Lcom/mojang/datafixers/util/Either;	a	fill
	m	(Laub;Ljb;Ljb;Ljl;Ljava/util/function/Predicate;Ljava/util/function/Consumer;)Lcom/mojang/datafixers/util/Either;	a	fill
	m	(Lek;Ljb;Ljb;Ljl$c;Ljava/util/function/Predicate;)I	a	fill
	m	(Lek;Ljava/util/function/Supplier;)V	a	lambda$fill$8
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Leuq;)Lxo;	a	lambda$fill$7
	m	(Ljava/util/function/Supplier;)V	a	lambda$fill$6
	m	(Ljl;)Z	a	lambda$fill$5
	m	(Lefy;Leuq;Ljava/util/function/Predicate;Lorg/apache/commons/lang3/mutable/MutableInt;Ljl;IIILdog$f;)Ljl;	a	lambda$makeResolver$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Ljl;)Z	b	lambda$register$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aol	net/minecraft/server/commands/FillCommand
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_AREA_TOO_LARGE
	f	Lgf;	b	HOLLOW_CORE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Leg;Lcom/mojang/brigadier/builder/ArgumentBuilder;Laos;Laos;Laos;Laol$e;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrapWithMode
	m	(Lek;Leuq;Lgf;Laol$d;Ljava/util/function/Predicate;Z)I	a	fillBlocks
	m	(I)Lxo;	a	lambda$fillBlocks$17
	m	(Laos;Laos;Laos;Laol$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$wrapWithMode$16
	m	(Laos;Laos;Laos;Laol$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$wrapWithMode$15
	m	(Laos;Laos;Laos;Laol$e;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$wrapWithMode$14
	m	(Laos;Laos;Laos;Laol$e;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$wrapWithMode$13
	m	(Laos;Laos;Laos;Laol$e;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$wrapWithMode$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$11
	m	(Leef;)Z	a	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	b	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lgf;	c	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljb;	d	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljb;	e	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/function/Predicate;	g	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lgf;	h	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljb;	i	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)Ljb;	j	lambda$register$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aol$a	net/minecraft/server/commands/FillCommand$1UpdatedPosition
	f	Ljb;	a	pos
	f	Leeb;	b	oldState
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Leeb;	b	oldState
c	aol$b	net/minecraft/server/commands/FillCommand$Affector
	f	Laol$b;	a	NOOP
	m	(Laub;Ljb;)Z	affect	affect
	m	(Laub;Ljb;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aol$c	net/minecraft/server/commands/FillCommand$Filter
	f	Laol$c;	a	NOOP
	m	(Leuq;Ljb;Lgf;Laub;)Lgf;	filter	filter
	m	(Leuq;Ljb;Lgf;Laub;)Lgf;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aol$d	net/minecraft/server/commands/FillCommand$Mode
	f	Laol$d;	a	REPLACE
	f	Laol$d;	b	OUTLINE
	f	Laol$d;	c	HOLLOW
	f	Laol$d;	d	DESTROY
	f	Laol$c;	e	filter
	f	Laol$b;	f	affector
	f	[Laol$d;	g	$VALUES
	m	()[Laol$d;	values	values
	m	(Ljava/lang/String;)Laol$d;	valueOf	valueOf
	m	(Ljava/lang/String;ILaol$b;Laol$c;)V	<init>	<init>
	m	(Laub;Ljb;)Z	a	lambda$static$2
	m	(Leuq;Ljb;Lgf;Laub;)Lgf;	a	lambda$static$1
	m	(Leuq;Ljb;Lgf;Laub;)Lgf;	b	lambda$static$0
	m	()[Laol$d;	a	$values
	m	()V	<clinit>	<clinit>
c	aol$e	net/minecraft/server/commands/FillCommand$NullableCommandFunction
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	aom	net/minecraft/server/commands/ForceLoadCommand
	f	I	a	MAX_CHUNK_LIMIT
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_TOO_MANY_CHUNKS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_NOT_TICKING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_ALL_ADDED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NONE_REMOVED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Latm;)I	a	queryForceLoad
	m	(Lek;)I	a	listForceLoad
	m	(Lek;)I	b	removeAll
	m	(Lek;Latm;Latm;Z)I	a	changeForceLoad
	m	(ZILamd;Ldlz;Ldlz;)Lxo;	a	lambda$changeForceLoad$15
	m	(ZLdlz;Lamd;)Lxo;	a	lambda$changeForceLoad$14
	m	(Lamd;)Lxo;	a	lambda$removeAll$13
	m	(Laub;J)V	a	lambda$removeAll$12
	m	(ILamd;Ljava/lang/String;)Lxo;	a	lambda$listForceLoad$11
	m	(Lamd;Ljava/lang/String;)Lxo;	a	lambda$listForceLoad$10
	m	(Ldlz;Lamd;)Lxo;	a	lambda$queryForceLoad$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aon	net/minecraft/server/commands/FunctionCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_ARGUMENT_NOT_COMPOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_NO_FUNCTIONS
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	a	ERROR_FUNCTION_INSTANTATION_FAILURE
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_FUNCTION
	f	Laon$b;	e	FULL_CONTEXT_CALLBACKS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lfe$g;Larb;)Lui;	a	getArgumentTag
	m	(Lek;)Lek;	a	modifySenderForExecution
	m	(Ljava/util/Collection;Lui;Lem;Lem;Lhp;Laon$b;Lhj;)V	a	queueFunctions
	m	(Lui;Lhp;Lcom/mojang/brigadier/CommandDispatcher;Lem;Lib;Lame;Leh;Z)V	a	instantiateAndQueueFunctions
	m	(Lem;Laon$b;Lame;Leh;)Leh;	a	decorateOutputIfNeeded
	m	(Ljava/util/Collection;Lui;Lem;Lem;Lhp;Laon$b;)V	a	queueFunctionsAsReturn
	m	(Ljava/util/Collection;Lui;Lem;Lem;Lhp;Laon$b;)V	b	queueFunctionsNoReturn
	m	(Laon$a;Leh;Lho;Lhq;)V	a	lambda$queueFunctionsNoReturn$7
	m	(Laon$a;ZI)V	a	lambda$queueFunctionsNoReturn$6
	m	(Laon$b;Lem;Lame;Leh;ZI)V	a	lambda$decorateOutputIfNeeded$5
	m	(Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aon$1	net/minecraft/server/commands/FunctionCommand$1
	f	Larc$c;	a	val$provider
	m	(Larc$c;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lui;	a	arguments
c	aon$a	net/minecraft/server/commands/FunctionCommand$1Accumulator
	f	Z	a	anyResult
	f	I	b	sum
	m	()V	<init>	<init>
	m	(I)V	a	add
c	aon$2	net/minecraft/server/commands/FunctionCommand$2
	f	Larc$c;	a	val$provider
	m	(Larc$c;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lui;	a	arguments
c	aon$3	net/minecraft/server/commands/FunctionCommand$3
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lui;	a	arguments
c	aon$4	net/minecraft/server/commands/FunctionCommand$4
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lui;	a	arguments
c	aon$5	net/minecraft/server/commands/FunctionCommand$5
	m	()V	<init>	<init>
	m	(Lek;Lame;I)V	a	signalResult
	m	(Ljava/lang/Object;Lame;I)V	a	signalResult
	m	(Lame;I)Lxo;	a	lambda$signalResult$0
c	aon$b	net/minecraft/server/commands/FunctionCommand$Callbacks
	m	(Ljava/lang/Object;Lame;I)V	a	signalResult
c	aon$c	net/minecraft/server/commands/FunctionCommand$FunctionCustomExecutor
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lui;	a	arguments
	m	(Lek;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	runGuarded
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	b	runGuarded
	m	(Ljava/util/Collection;)Lxo;	a	lambda$runGuarded$1
	m	(Ljava/util/Collection;)Lxo;	b	lambda$runGuarded$0
c	aoo	net/minecraft/server/commands/GameModeCommand
	f	I	a	PERMISSION_LEVEL
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lauc;Ldmr;)V	a	logGamemodeChange
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Ldmr;)I	a	setMode
	m	(Lauc;Ldmr;)V	a	setGameMode
	m	(Lek;Lauc;Ldmr;)Z	b	setGameMode
	m	(Lauc;Lxo;)Lxo;	a	lambda$logGamemodeChange$3
	m	(Lxo;)Lxo;	a	lambda$logGamemodeChange$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aop	net/minecraft/server/commands/GameRuleCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;Ldmq$e;)I	a	setRule
	m	(Lek;Ldmq$e;)I	a	queryRule
	m	(Ldmq$e;Ldmq$g;)Lxo;	a	lambda$queryRule$1
	m	(Ldmq$e;Ldmq$g;)Lxo;	b	lambda$setRule$0
c	aop$1	net/minecraft/server/commands/GameRuleCommand$1
	f	Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	val$base
	m	(Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)V	<init>	<init>
	m	(Ldmq$e;Ldmq$f;)V	a	visit
	m	(Ldmq$e;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$visit$1
	m	(Ldmq$e;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$visit$0
c	aoq	net/minecraft/server/commands/GiveCommand
	f	I	a	MAX_ALLOWED_ITEMSTACKS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Lgy;Ljava/util/Collection;I)I	a	giveItem
	m	(ILdcv;Ljava/util/Collection;)Lxo;	a	lambda$giveItem$3
	m	(ILdcv;Ljava/util/Collection;)Lxo;	b	lambda$giveItem$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aor	net/minecraft/server/commands/HelpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)Lxo;	a	lambda$register$2
	m	(Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Ljava/lang/String;)Lxo;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aos	net/minecraft/server/commands/InCommandFunction
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	aot	net/minecraft/server/commands/ItemCommands
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	a	ERROR_TARGET_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;	b	ERROR_SOURCE_NOT_A_CONTAINER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_TARGET_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_SOURCE_INAPPLICABLE_SLOT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_TARGET_NO_CHANGES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljb;ILjl;)I	a	modifyBlockItem
	m	(Lek;Ljava/util/Collection;ILjl;)I	a	modifyEntityItem
	m	(Lek;Ljb;ILdcv;)I	a	setBlockItem
	m	(Lek;Ljb;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lbxc;	a	getContainer
	m	(Lek;Ljava/util/Collection;ILdcv;)I	a	setEntityItem
	m	(Lek;Ljb;ILjava/util/Collection;I)I	a	blockToEntities
	m	(Lek;Ljb;ILjava/util/Collection;ILjl;)I	a	blockToEntities
	m	(Lek;Ljb;ILjb;I)I	a	blockToBlock
	m	(Lek;Ljb;ILjb;ILjl;)I	a	blockToBlock
	m	(Lek;Lbzm;ILjb;I)I	a	entityToBlock
	m	(Lek;Lbzm;ILjb;ILjl;)I	a	entityToBlock
	m	(Lek;Lbzm;ILjava/util/Collection;I)I	a	entityToEntities
	m	(Lek;Lbzm;ILjava/util/Collection;ILjl;)I	a	entityToEntities
	m	(Lek;Ljl;Ldcv;)Ldcv;	a	applyModifier
	m	(Lbzm;I)Ldcv;	a	getEntityItem
	m	(Lek;Ljb;I)Ldcv;	a	getBlockItem
	m	(Ljava/util/List;Ldcv;)Lxo;	a	lambda$setEntityItem$25
	m	(Ljava/util/List;Ldcv;)Lxo;	b	lambda$setEntityItem$24
	m	(Ljb;Ldcv;)Lxo;	a	lambda$setBlockItem$23
	m	(Ljava/util/Map;)Lxo;	a	lambda$modifyEntityItem$22
	m	(Ljava/util/Map$Entry;)Lxo;	a	lambda$modifyEntityItem$21
	m	(Ljb;Ldcv;)Lxo;	b	lambda$modifyBlockItem$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$6
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$5
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aou	net/minecraft/server/commands/JfrCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	START_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	DUMP_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	startJfr
	m	(Lek;)I	b	stopJfr
	m	(Lxo;)Lxo;	a	lambda$stopJfr$5
	m	(Ljava/nio/file/Path;Lyl;)Lyl;	a	lambda$stopJfr$4
	m	()Lxo;	a	lambda$startJfr$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aov	net/minecraft/server/commands/KickCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_KICKING_OWNER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SINGLEPLAYER
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Lxo;)I	a	kickPlayers
	m	(Lauc;Lxo;)Lxo;	a	lambda$kickPlayers$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aow	net/minecraft/server/commands/KillCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	kill
	m	(Ljava/util/Collection;)Lxo;	a	lambda$kill$3
	m	(Ljava/util/Collection;)Lxo;	b	lambda$kill$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aox	net/minecraft/server/commands/ListPlayersCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	listPlayers
	m	(Lek;)I	b	listPlayersWithUuids
	m	(Lek;Ljava/util/function/Function;)I	a	format
	m	(Ljava/util/List;Layb;Lxo;)Lxo;	a	lambda$format$3
	m	(Lauc;)Lxo;	a	lambda$listPlayersWithUuids$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aoy	net/minecraft/server/commands/LocateCommand
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_STRUCTURE_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_STRUCTURE_INVALID
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_BIOME_NOT_FOUND
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_POI_NOT_FOUND
	f	I	f	MAX_STRUCTURE_SEARCH_RADIUS
	f	I	g	MAX_BIOME_SEARCH_RADIUS
	f	I	h	BIOME_SAMPLE_RESOLUTION_HORIZONTAL
	f	I	i	BIOME_SAMPLE_RESOLUTION_VERTICAL
	f	I	j	POI_SEARCH_RADIUS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lfq$c;Ljy;)Ljava/util/Optional;	a	getHolders
	m	(Lek;Lfq$c;)I	a	locateStructure
	m	(Lek;Lfp$c;)I	a	locateBiome
	m	(Lek;Lfp$c;)I	b	locatePoi
	m	(Lek;Lfp$c;Ljb;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
	m	(Lek;Lfq$c;Ljb;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I	a	showLocateResult
	m	(Lek;Ljb;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I	a	showLocateResult
	m	(IIII)F	a	dist
	m	(Ljava/lang/String;Ljava/lang/String;Lxo;I)Lxo;	a	lambda$showLocateResult$15
	m	(Ljb;Ljava/lang/String;Lyl;)Lyl;	a	lambda$showLocateResult$14
	m	(Lcom/mojang/datafixers/util/Pair;Lbae;)Ljava/lang/String;	a	lambda$showLocateResult$13
	m	(Lamd;)Ljava/lang/String;	a	lambda$showLocateResult$12
	m	(Lfp$c;Lcom/mojang/datafixers/util/Pair;Ljp$c;)Ljava/lang/String;	a	lambda$showLocateResult$11
	m	(Lfp$c;Ljl$c;)Ljava/lang/String;	a	lambda$showLocateResult$10
	m	(Lfq$c;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$locateStructure$9
	m	(Ljy;Lamd;)Ljava/util/Optional;	a	lambda$getHolders$8
	m	(Ljl;)Ljp$a;	a	lambda$getHolders$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aoz	net/minecraft/server/commands/LookAt
	m	(Lek;Lbzm;)V	perform	perform
c	aoz$a	net/minecraft/server/commands/LookAt$LookAtEntity
	f	Lbzm;	a	entity
	f	Lex$a;	b	anchor
	m	(Lbzm;Lex$a;)V	<init>	<init>
	m	(Lek;Lbzm;)V	perform	perform
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzm;	a	entity
	m	()Lex$a;	b	anchor
c	aoz$b	net/minecraft/server/commands/LookAt$LookAtPosition
	f	Lfis;	a	position
	m	(Lfis;)V	<init>	<init>
	m	(Lek;Lbzm;)V	perform	perform
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	position
c	apa	net/minecraft/server/commands/LootCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NO_HELD_ITEMS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NO_ENTITY_LOOT_TABLE
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	c	ERROR_NO_BLOCK_LOOT_TABLE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lapa$c;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addTargets
	m	(Lek;Ljb;)Lbxc;	a	getContainer
	m	(Lek;Ljb;Ljava/util/List;Lapa$a;)I	a	blockDistribute
	m	(Lbxc;Ldcv;)Z	a	distributeToContainer
	m	(Lek;Ljb;IILjava/util/List;Lapa$a;)I	a	blockReplace
	m	(Ldcv;Ldcv;)Z	a	canMergeItems
	m	(Ljava/util/Collection;Ljava/util/List;Lapa$a;)I	a	playerGive
	m	(Lbzm;Ljava/util/List;IILjava/util/List;)V	a	setSlots
	m	(Ljava/util/Collection;IILjava/util/List;Lapa$a;)I	a	entityReplace
	m	(Lek;Lfis;Ljava/util/List;Lapa$a;)I	a	dropInWorld
	m	(Lek;Ljava/util/List;)V	a	callback
	m	(Lek;Ljava/util/List;Lamd;)V	a	callback
	m	(Lek;Lbzw;)Ldcv;	a	getSourceHandItem
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljb;Ldcv;Lapa$b;)I	a	dropBlockLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Lbzm;Lapa$b;)I	a	dropKillLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljl;Lapa$b;)I	a	dropChestLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljl;Ljb;Ldcv;Lapa$b;)I	a	dropFishingLoot
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljl;Lfdm;Lapa$b;)I	a	drop
	m	(Lek;Ljava/util/List;)V	b	lambda$drop$28
	m	(Lek;Ljava/util/Optional;Ljava/util/List;)V	a	lambda$dropKillLoot$27
	m	(Lek;Ljava/util/Optional;Ljava/util/List;)V	b	lambda$dropBlockLoot$26
	m	(Ljava/util/List;Lamd;)Lxo;	a	lambda$callback$25
	m	(Ldcv;Lamd;)Lxo;	a	lambda$callback$24
	m	(Ljava/util/List;)Lxo;	a	lambda$callback$23
	m	(Ldcv;)Lxo;	a	lambda$callback$22
	m	(Laub;Lfis;Ldcv;)V	a	lambda$dropInWorld$21
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	a	lambda$addTargets$20
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	b	lambda$addTargets$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	c	lambda$addTargets$18
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	d	lambda$addTargets$17
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	e	lambda$addTargets$16
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	f	lambda$addTargets$15
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	g	lambda$addTargets$14
	m	(Leg;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lapa$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$13
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$12
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$11
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$10
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$9
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$8
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$7
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$6
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$5
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$4
	m	(Lapa$b;Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apa$a	net/minecraft/server/commands/LootCommand$Callback
	m	(Ljava/util/List;)V	accept	accept
c	apa$b	net/minecraft/server/commands/LootCommand$DropConsumer
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/List;Lapa$a;)I	accept	accept
c	apa$c	net/minecraft/server/commands/LootCommand$TailProvider
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Lapa$b;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	construct	construct
c	apb	net/minecraft/server/commands/MsgCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Lye;)V	a	sendMessage
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lye;)V	a	lambda$register$0
c	apc	net/minecraft/server/commands/OpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OP
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	opPlayers
	m	(Lcom/mojang/authlib/GameProfile;)Lxo;	a	lambda$opPlayers$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$2
	m	(Lauc;)Ljava/lang/String;	a	lambda$register$1
	m	(Layb;Lauc;)Z	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apd	net/minecraft/server/commands/PardonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_BANNED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	pardonPlayers
	m	(Lcom/mojang/authlib/GameProfile;)Lxo;	a	lambda$pardonPlayers$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	ape	net/minecraft/server/commands/PardonIpCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_BANNED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/lang/String;)I	a	unban
	m	(Ljava/lang/String;)Lxo;	a	lambda$unban$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apf	net/minecraft/server/commands/ParticleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Lmc;Lfis;Lfis;FIZLjava/util/Collection;)I	a	sendParticles
	m	(Lmc;)Lxo;	a	lambda$sendParticles$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apg	net/minecraft/server/commands/PerfCommand
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_RUNNING
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_RUNNING
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	startProfilingDedicatedServer
	m	(Lek;)I	b	stopProfilingDedicatedServer
	m	(Lek;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V	a	saveResults
	m	(Lek;Lbtr;)V	a	whenStopped
	m	(DI)Lxo;	a	lambda$whenStopped$6
	m	(Ljava/lang/String;)Lxo;	a	lambda$saveResults$5
	m	()Lxo;	a	lambda$startProfilingDedicatedServer$4
	m	(Lek;Lnet/minecraft/server/MinecraftServer;Ljava/nio/file/Path;)V	a	lambda$startProfilingDedicatedServer$3
	m	(Lek;Lbtr;)V	b	lambda$startProfilingDedicatedServer$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aph	net/minecraft/server/commands/PermissionCheck
	m	()I	a	requiredLevel
c	api	net/minecraft/server/commands/PlaceCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FEATURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_JIGSAW_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_STRUCTURE_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	ERROR_TEMPLATE_INVALID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEMPLATE_FAILED
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	f	SUGGEST_TEMPLATES
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljl$c;Ljb;)I	a	placeFeature
	m	(Lek;Ljl;Lame;ILjb;)I	a	placeJigsaw
	m	(Lek;Ljl$c;Ljb;)I	b	placeStructure
	m	(Lek;Lame;Ljb;Ldwu;Ldvd;FIZ)I	a	placeTemplate
	m	(Laub;Ldlz;Ldlz;)V	a	checkLoaded
	m	(Laub;Ldlz;)Z	a	lambda$checkLoaded$21
	m	(Lame;Ljb;)Lxo;	a	lambda$placeTemplate$20
	m	(Ljava/lang/String;Ljb;)Lxo;	a	lambda$placeStructure$19
	m	(Levg;Laub;Lefz;Ldlz;)V	a	lambda$placeStructure$18
	m	(Ljl;)Z	a	lambda$placeStructure$17
	m	(Ljb;)Lxo;	a	lambda$placeJigsaw$16
	m	(Ljava/lang/String;Ljb;)Lxo;	b	lambda$placeFeature$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apj	net/minecraft/server/commands/PlaySoundCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TOO_FAR
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Laza;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	source
	m	(Lauc;)Ljava/util/Collection;	a	getCallingPlayerAsCollection
	m	(Lek;Ljava/util/Collection;Lame;Laza;Lfis;FFF)I	a	playSound
	m	(Lame;I)Lxo;	a	lambda$playSound$8
	m	(Lame;Ljava/util/List;)Lxo;	a	lambda$playSound$7
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$source$6
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$source$5
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$source$4
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$source$3
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$source$2
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$source$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apk	net/minecraft/server/commands/PublishCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_ALREADY_PUBLISHED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;IZLdmr;)I	a	publish
	m	(I)Lyc;	a	getSuccessMessage
	m	(I)Lxo;	b	lambda$publish$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apl	net/minecraft/server/commands/RaidCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;)I	a	glow
	m	(Lek;I)I	a	setRaidOmenLevel
	m	(Lek;)I	b	spawnLeader
	m	(Lek;Lxo;)I	a	playSound
	m	(Lek;I)I	b	start
	m	(Lek;)I	c	stop
	m	(Lek;)I	d	check
	m	(Lauc;)Lcwj;	a	getRaid
	m	(Ljava/lang/StringBuilder;)Lxo;	a	lambda$check$12
	m	(Ljava/lang/StringBuilder;)Lxo;	b	lambda$check$11
	m	()Lxo;	a	lambda$stop$10
	m	()Lxo;	b	lambda$start$9
	m	()Lxo;	c	lambda$spawnLeader$8
	m	(II)Lxo;	a	lambda$setRaidOmenLevel$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$0
c	apm	net/minecraft/server/commands/RandomCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_RANGE_TOO_LARGE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_RANGE_TOO_SMALL
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Ljava/lang/String;Z)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	drawRandomValueTree
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestRandomSequence
	m	(Lek;Lcx$d;Lame;Z)I	a	randomSample
	m	(Lek;Lame;)I	a	resetSequence
	m	(Lek;Lame;IZZ)I	a	resetSequence
	m	(Lek;)I	a	resetAllSequences
	m	(Lek;IZZ)I	a	resetAllSequencesAndSetNewDefaults
	m	(I)Lxo;	a	lambda$resetAllSequencesAndSetNewDefaults$15
	m	(I)Lxo;	b	lambda$resetAllSequences$14
	m	(Lame;)Lxo;	a	lambda$resetSequence$13
	m	(Lame;)Lxo;	b	lambda$resetSequence$12
	m	(I)Lxo;	c	lambda$randomSample$11
	m	(Ljava/util/List;Lame;Lbxo;)V	a	lambda$suggestRandomSequence$10
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	a	lambda$drawRandomValueTree$9
	m	(ZLcom/mojang/brigadier/context/CommandContext;)I	b	lambda$drawRandomValueTree$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apn	net/minecraft/server/commands/RecipeCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_GIVE_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TAKE_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljava/util/Collection;)I	a	giveRecipes
	m	(Lek;Ljava/util/Collection;Ljava/util/Collection;)I	b	takeRecipes
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lxo;	a	lambda$takeRecipes$7
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lxo;	b	lambda$takeRecipes$6
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lxo;	c	lambda$giveRecipes$5
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lxo;	d	lambda$giveRecipes$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apo	net/minecraft/server/commands/ReloadCommand
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Ljava/util/Collection;Lek;)V	a	reloadPacks
	m	(Lawz;Lfdd;Ljava/util/Collection;)Ljava/util/Collection;	a	discoverNewPacks
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	()Lxo;	a	lambda$register$1
	m	(Lek;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$reloadPacks$0
	m	()V	<clinit>	<clinit>
c	app	net/minecraft/server/commands/ReturnCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
c	app$a	net/minecraft/server/commands/ReturnCommand$ReturnFailCustomExecutor
	m	()V	<init>	<init>
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
c	app$b	net/minecraft/server/commands/ReturnCommand$ReturnFromCommandCustomModifier
	m	()V	<init>	<init>
	m	(Lem;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	apply
	m	(Ljava/lang/Object;Ljava/util/List;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	apply
c	app$c	net/minecraft/server/commands/ReturnCommand$ReturnValueCustomExecutor
	m	()V	<init>	<init>
	m	(Lem;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
	m	(Ljava/lang/Object;Lcom/mojang/brigadier/context/ContextChain;Lhj;Lhp;)V	a	run
c	apq	net/minecraft/server/commands/RideCommand
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	a	ERROR_NOT_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	b	ERROR_ALREADY_RIDING
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	c	ERROR_MOUNT_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MOUNTING_PLAYER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_MOUNTING_LOOP
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_WRONG_DIMENSION
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lbzm;Lbzm;)I	a	mount
	m	(Lek;Lbzm;)I	a	dismount
	m	(Lbzm;Lbzm;)Lxo;	a	lambda$dismount$7
	m	(Lbzm;Lbzm;)Lxo;	b	lambda$mount$6
	m	(Lbzm;Lbzm;)Z	c	lambda$mount$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apr	net/minecraft/server/commands/RotateCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lbzm;Lgm;)I	a	rotate
	m	(Lek;Lbzm;Laoz;)I	a	rotate
	m	(Lbzm;)Lxo;	a	lambda$rotate$5
	m	(Lbzm;)Lxo;	b	lambda$rotate$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$0
c	aps	net/minecraft/server/commands/SaveAllCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Z)I	a	saveAll
	m	()Lxo;	a	lambda$saveAll$3
	m	()Lxo;	b	lambda$saveAll$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apt	net/minecraft/server/commands/SaveOffCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_OFF
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	()Lxo;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apu	net/minecraft/server/commands/SaveOnCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ON
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	()Lxo;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	apv	net/minecraft/server/commands/SayCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lye;)V	a	lambda$register$0
c	apw	net/minecraft/server/commands/ScheduleCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_TICK
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_CANT_REMOVE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_MACRO
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	d	SUGGEST_SCHEDULE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lcom/mojang/datafixers/util/Pair;IZ)I	a	schedule
	m	(Lek;Ljava/lang/String;)I	a	remove
	m	(ILjava/lang/String;)Lxo;	a	lambda$remove$8
	m	(Lame;IJ)Lxo;	a	lambda$schedule$7
	m	(Lame;IJ)Lxo;	b	lambda$schedule$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apx	net/minecraft/server/commands/ScoreboardCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_OBJECTIVE_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DISPLAY_SLOT_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_DISPLAY_SLOT_ALREADY_SET
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TRIGGER_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_NOT_TRIGGER
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	f	ERROR_NO_VALUE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Leg;Lcom/mojang/brigadier/builder/ArgumentBuilder;Lapx$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	addNumberFormats
	m	()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;	a	createRenderTypeModify
	m	(Lek;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestTriggers
	m	(Lek;Lfjw;Lfjp;)I	a	getScore
	m	(Ljava/util/Collection;)Lxo;	a	getFirstTargetName
	m	(Lek;Ljava/util/Collection;Lfjp;Lfi$a;Ljava/util/Collection;Lfjp;)I	a	performOperation
	m	(Lek;Ljava/util/Collection;Lfjp;)I	a	enableTrigger
	m	(Lek;Ljava/util/Collection;)I	a	resetScores
	m	(Lek;Ljava/util/Collection;Lfjp;)I	b	resetScore
	m	(Lek;Ljava/util/Collection;Lfjp;I)I	a	setScore
	m	(Lek;Ljava/util/Collection;Lfjp;Lxo;)I	a	setScoreDisplay
	m	(Lek;Ljava/util/Collection;Lfjp;Lze;)I	a	setScoreNumberFormat
	m	(Lek;Ljava/util/Collection;Lfjp;I)I	b	addScore
	m	(Lek;Ljava/util/Collection;Lfjp;I)I	c	removeScore
	m	(Lek;)I	a	listTrackedPlayers
	m	(Lek;Lfjw;)I	a	listTrackedPlayerScores
	m	(Lek;Lfjo;)I	a	clearDisplaySlot
	m	(Lek;Lfjo;Lfjp;)I	a	setDisplaySlot
	m	(Lek;Lfjp;Lxo;)I	a	setDisplayName
	m	(Lek;Lfjp;Z)I	a	setDisplayAutoUpdate
	m	(Lek;Lfjp;Lze;)I	a	setObjectiveFormat
	m	(Lek;Lfjp;Lfka$a;)I	a	setRenderType
	m	(Lek;Lfjp;)I	a	removeObjective
	m	(Lek;Ljava/lang/String;Lfka;Lxo;)I	a	addObjective
	m	(Lek;)I	b	listObjectives
	m	(Ljava/util/Collection;)Lxo;	b	lambda$listObjectives$69
	m	()Lxo;	b	lambda$listObjectives$68
	m	(Lfjp;)Lxo;	a	lambda$addObjective$67
	m	(Lfjp;)Lxo;	b	lambda$removeObjective$66
	m	(Lfjp;)Lxo;	c	lambda$setRenderType$65
	m	(Lfjp;)Lxo;	d	lambda$setObjectiveFormat$64
	m	(Lfjp;)Lxo;	e	lambda$setObjectiveFormat$63
	m	(Lfjp;)Lxo;	f	lambda$setDisplayAutoUpdate$62
	m	(Lfjp;)Lxo;	g	lambda$setDisplayAutoUpdate$61
	m	(Lfjp;)Lxo;	h	lambda$setDisplayName$60
	m	(Lfjo;Lfjp;)Lxo;	a	lambda$setDisplaySlot$59
	m	(Lfjo;)Lxo;	a	lambda$clearDisplaySlot$58
	m	(Lek;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)V	a	lambda$listTrackedPlayerScores$57
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lxo;	a	lambda$listTrackedPlayerScores$56
	m	(Lfjw;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lxo;	a	lambda$listTrackedPlayerScores$55
	m	(Lfjw;)Lxo;	a	lambda$listTrackedPlayerScores$54
	m	(Ljava/util/Collection;)Lxo;	c	lambda$listTrackedPlayers$53
	m	()Lxo;	c	lambda$listTrackedPlayers$52
	m	(ILfjp;Ljava/util/Collection;)Lxo;	a	lambda$removeScore$51
	m	(ILfjp;Ljava/util/Collection;I)Lxo;	a	lambda$removeScore$50
	m	(ILfjp;Ljava/util/Collection;)Lxo;	b	lambda$addScore$49
	m	(ILfjp;Ljava/util/Collection;I)Lxo;	b	lambda$addScore$48
	m	(Ljava/util/Collection;Lfjp;)Lxo;	a	lambda$setScoreNumberFormat$47
	m	(Ljava/util/Collection;Lfjp;)Lxo;	b	lambda$setScoreNumberFormat$46
	m	(Ljava/util/Collection;Lfjp;)Lxo;	c	lambda$setScoreNumberFormat$45
	m	(Ljava/util/Collection;Lfjp;)Lxo;	d	lambda$setScoreNumberFormat$44
	m	(Lxo;Ljava/util/Collection;Lfjp;)Lxo;	a	lambda$setScoreDisplay$43
	m	(Lxo;Ljava/util/Collection;Lfjp;)Lxo;	b	lambda$setScoreDisplay$42
	m	(Ljava/util/Collection;Lfjp;)Lxo;	e	lambda$setScoreDisplay$41
	m	(Ljava/util/Collection;Lfjp;)Lxo;	f	lambda$setScoreDisplay$40
	m	(Lfjp;Ljava/util/Collection;I)Lxo;	a	lambda$setScore$39
	m	(Lfjp;Ljava/util/Collection;I)Lxo;	b	lambda$setScore$38
	m	(Lfjp;Ljava/util/Collection;)Lxo;	a	lambda$resetScore$37
	m	(Lfjp;Ljava/util/Collection;)Lxo;	b	lambda$resetScore$36
	m	(Ljava/util/Collection;)Lxo;	d	lambda$resetScores$35
	m	(Ljava/util/Collection;)Lxo;	e	lambda$resetScores$34
	m	(Lfjp;Ljava/util/Collection;)Lxo;	c	lambda$enableTrigger$33
	m	(Lfjp;Ljava/util/Collection;)Lxo;	d	lambda$enableTrigger$32
	m	(Lfjp;Ljava/util/Collection;)Lxo;	e	lambda$performOperation$31
	m	(Lfjp;Ljava/util/Collection;I)Lxo;	c	lambda$performOperation$30
	m	(Lfjw;Lfjt;Lfjp;)Lxo;	a	lambda$getScore$29
	m	(Lfka$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$createRenderTypeModify$28
	m	(Lapx$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$addNumberFormats$27
	m	(Lapx$a;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$addNumberFormats$26
	m	(Lapx$a;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$addNumberFormats$25
	m	(Lapx$a;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$addNumberFormats$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;Lze;)I	a	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;Lze;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	apx$a	net/minecraft/server/commands/ScoreboardCommand$NumberFormatCommandExecutor
	m	(Lcom/mojang/brigadier/context/CommandContext;Lze;)I	run	run
c	apy	net/minecraft/server/commands/SeedCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lxo;)Lxo;	a	lambda$register$0
c	apz	net/minecraft/server/commands/ServerPackCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lzw;)V	a	sendToAllConnections
	m	(Lek;Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;)I	a	pushPack
	m	(Lek;Ljava/util/UUID;)I	a	popPack
	m	(Ljava/lang/String;)Ljava/util/UUID;	a	lambda$pushPack$5
	m	(Lzw;Lwd;)V	a	lambda$sendToAllConnections$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$0
c	aqa	net/minecraft/server/commands/SetBlockCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljb;Lgf;Laqa$a;Ljava/util/function/Predicate;Z)I	a	setBlock
	m	(Ljb;)Lxo;	a	lambda$setBlock$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Ljava/util/function/Predicate;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$1
	m	(Leef;)Z	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqa$a	net/minecraft/server/commands/SetBlockCommand$Mode
	f	Laqa$a;	a	REPLACE
	f	Laqa$a;	b	DESTROY
	f	[Laqa$a;	c	$VALUES
	m	()[Laqa$a;	values	values
	m	(Ljava/lang/String;)Laqa$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Laqa$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aqb	net/minecraft/server/commands/SetPlayerIdleTimeoutCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;I)I	a	setIdleTimeout
	m	()Lxo;	a	lambda$setIdleTimeout$2
	m	(I)Lxo;	a	lambda$setIdleTimeout$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
c	aqc	net/minecraft/server/commands/SetSpawnCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Ljb;F)I	a	setSpawn
	m	(Ljb;FLjava/lang/String;Ljava/util/Collection;)Lxo;	a	lambda$setSpawn$5
	m	(Ljb;FLjava/lang/String;Ljava/util/Collection;)Lxo;	b	lambda$setSpawn$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$0
c	aqd	net/minecraft/server/commands/SetWorldSpawnCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljb;F)I	a	setSpawn
	m	(Ljb;F)Lxo;	a	lambda$setSpawn$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
c	aqe	net/minecraft/server/commands/SpawnArmorTrimsCommand
	f	Ljava/util/List;	a	VANILLA_TRIM_PATTERNS
	f	Ljava/util/List;	b	VANILLA_TRIM_MATERIALS
	f	Ljava/util/function/ToIntFunction;	c	TRIM_PATTERN_ORDER
	f	Ljava/util/function/ToIntFunction;	d	TRIM_MATERIAL_ORDER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_INVALID_PATTERN
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lcut;)I	a	spawnAllArmorTrims
	m	(Lek;Lcut;Lamd;)I	a	spawnArmorTrim
	m	(Lek;Lcut;Ljava/util/stream/Stream;)I	a	spawnArmorTrims
	m	(Ljn;)Ljava/util/List;	a	findEquippableItemsWithAssets
	m	(Ljava/util/List;Ljl$c;)V	a	lambda$findEquippableItemsWithAssets$6
	m	()Lxo;	a	lambda$spawnArmorTrims$5
	m	(Ljl$c;)Ljava/lang/Integer;	a	lambda$spawnArmorTrims$4
	m	(Ljl$c;)Ljava/lang/Integer;	b	lambda$spawnArmorTrims$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aqf	net/minecraft/server/commands/SpectateCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SELF
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	b	ERROR_NOT_SPECTATOR
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lbzm;Lauc;)I	a	spectate
	m	()Lxo;	a	lambda$spectate$5
	m	(Lbzm;)Lxo;	a	lambda$spectate$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aqg	net/minecraft/server/commands/SpreadPlayersCommand
	f	I	a	MAX_ITERATION_COUNT
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	b	ERROR_FAILED_TO_SPREAD_TEAMS
	f	Lcom/mojang/brigadier/exceptions/Dynamic4CommandExceptionType;	c	ERROR_FAILED_TO_SPREAD_ENTITIES
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	d	ERROR_INVALID_MAX_HEIGHT
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lfir;FFIZLjava/util/Collection;)I	a	spreadPlayers
	m	(Ljava/util/Collection;)I	a	getNumberOfTeams
	m	(Lfir;DLaub;Lbck;DDDDI[Laqg$a;Z)V	a	spreadPositions
	m	(Ljava/util/Collection;Laub;[Laqg$a;IZ)D	a	setPlayerPositions
	m	(Lbck;IDDDD)[Laqg$a;	a	createInitialPositions
	m	(Z[Laqg$a;Lfir;D)Lxo;	a	lambda$spreadPlayers$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$2
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$1
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aqg$a	net/minecraft/server/commands/SpreadPlayersCommand$Position
	f	D	a	x
	f	D	b	z
	m	()V	<init>	<init>
	m	(Laqg$a;)D	a	dist
	m	()V	a	normalize
	m	()D	b	getLength
	m	(Laqg$a;)V	b	moveAway
	m	(DDDD)Z	a	clamp
	m	(Ldly;I)I	a	getSpawnY
	m	(Ldly;I)Z	b	isSafe
	m	(Lbck;DDDD)V	a	randomize
c	aqh	net/minecraft/server/commands/StopCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	()Lxo;	a	lambda$register$0
c	aqi	net/minecraft/server/commands/StopSoundCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Laza;Lame;)I	a	stopSound
	m	()Lxo;	a	lambda$stopSound$7
	m	(Lame;)Lxo;	a	lambda$stopSound$6
	m	(Laza;)Lxo;	a	lambda$stopSound$5
	m	(Lame;Laza;)Lxo;	a	lambda$stopSound$4
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Laza;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aqj	net/minecraft/server/commands/SummonCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_DUPLICATE_UUID
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	INVALID_POSITION
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljl$c;Lfis;Lui;Z)Lbzm;	a	createEntity
	m	(Lek;Ljl$c;Lfis;Lui;Z)I	b	spawnEntity
	m	(Lbzm;)Lxo;	a	lambda$spawnEntity$4
	m	(Lfis;Lbzm;)Lbzm;	a	lambda$createEntity$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqk	net/minecraft/server/commands/TagCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ADD_FAILED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_REMOVE_FAILED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Ljava/util/Collection;)Ljava/util/Collection;	a	getTags
	m	(Lek;Ljava/util/Collection;Ljava/lang/String;)I	a	addTag
	m	(Lek;Ljava/util/Collection;Ljava/lang/String;)I	b	removeTag
	m	(Lek;Ljava/util/Collection;)I	a	listTags
	m	(Ljava/util/Collection;Ljava/util/Set;)Lxo;	a	lambda$listTags$11
	m	(Ljava/util/Collection;)Lxo;	b	lambda$listTags$10
	m	(Lbzm;Ljava/util/Set;)Lxo;	a	lambda$listTags$9
	m	(Lbzm;)Lxo;	a	lambda$listTags$8
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	a	lambda$removeTag$7
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	b	lambda$removeTag$6
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	c	lambda$addTag$5
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	d	lambda$addTag$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aql	net/minecraft/server/commands/TeamCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_TEAM_ALREADY_EXISTS
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_TEAM_ALREADY_EMPTY
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TEAM_ALREADY_NAME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TEAM_ALREADY_COLOR
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	j	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	k	ERROR_TEAM_COLLISION_UNCHANGED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Ljava/util/Collection;)Lxo;	a	getFirstMemberName
	m	(Lek;Ljava/util/Collection;)I	a	leaveTeam
	m	(Lek;Lfjs;Ljava/util/Collection;)I	a	joinTeam
	m	(Lek;Lfjs;Lfjz$b;)I	a	setNametagVisibility
	m	(Lek;Lfjs;Lfjz$b;)I	b	setDeathMessageVisibility
	m	(Lek;Lfjs;Lfjz$a;)I	a	setCollision
	m	(Lek;Lfjs;Z)I	a	setFriendlySight
	m	(Lek;Lfjs;Z)I	b	setFriendlyFire
	m	(Lek;Lfjs;Lxo;)I	a	setDisplayName
	m	(Lek;Lfjs;Lo;)I	a	setColor
	m	(Lek;Lfjs;)I	a	emptyTeam
	m	(Lek;Lfjs;)I	b	deleteTeam
	m	(Lek;Ljava/lang/String;)I	a	createTeam
	m	(Lek;Ljava/lang/String;Lxo;)I	a	createTeam
	m	(Lek;Lfjs;)I	c	listMembers
	m	(Lek;)I	a	listTeams
	m	(Lek;Lfjs;Lxo;)I	b	setPrefix
	m	(Lek;Lfjs;Lxo;)I	c	setSuffix
	m	(Lxo;)Lxo;	a	lambda$setSuffix$46
	m	(Lxo;)Lxo;	b	lambda$setPrefix$45
	m	(Ljava/util/Collection;)Lxo;	b	lambda$listTeams$44
	m	()Lxo;	a	lambda$listTeams$43
	m	(Lfjs;Ljava/util/Collection;)Lxo;	a	lambda$listMembers$42
	m	(Lfjs;)Lxo;	a	lambda$listMembers$41
	m	(Lfjs;)Lxo;	b	lambda$createTeam$40
	m	(Lfjs;)Lxo;	c	lambda$deleteTeam$39
	m	(Ljava/util/Collection;Lfjs;)Lxo;	a	lambda$emptyTeam$38
	m	(Lfjs;Lo;)Lxo;	a	lambda$setColor$37
	m	(Lfjs;)Lxo;	d	lambda$setDisplayName$36
	m	(ZLfjs;)Lxo;	a	lambda$setFriendlyFire$35
	m	(ZLfjs;)Lxo;	b	lambda$setFriendlySight$34
	m	(Lfjs;Lfjz$a;)Lxo;	a	lambda$setCollision$33
	m	(Lfjs;Lfjz$b;)Lxo;	a	lambda$setDeathMessageVisibility$32
	m	(Lfjs;Lfjz$b;)Lxo;	b	lambda$setNametagVisibility$31
	m	(Ljava/util/Collection;Lfjs;)Lxo;	b	lambda$joinTeam$30
	m	(Ljava/util/Collection;Lfjs;)Lxo;	c	lambda$joinTeam$29
	m	(Ljava/util/Collection;)Lxo;	c	lambda$leaveTeam$28
	m	(Ljava/util/Collection;)Lxo;	d	lambda$leaveTeam$27
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$26
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$25
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$24
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$23
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$22
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$21
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	k	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	l	lambda$register$15
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	m	lambda$register$14
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	n	lambda$register$13
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	o	lambda$register$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	p	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	q	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	r	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	s	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	t	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	u	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	v	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	w	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	x	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	y	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	z	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	A	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqm	net/minecraft/server/commands/TeamMsgCommand
	f	Lyl;	a	SUGGEST_STYLE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_NOT_ON_TEAM
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lbzm;Lfjs;Ljava/util/List;Lye;)V	a	sendMessage
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lek;Lbzm;Lfjs;Ljava/util/List;Lye;)V	b	lambda$register$1
	m	(Lbzm;Lfjs;Lauc;)Z	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqn	net/minecraft/server/commands/TeleportCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	INVALID_POSITION
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;Lbzm;)I	a	teleportToEntity
	m	(Lek;Ljava/util/Collection;Laub;Lgm;Lgm;Laoz;)I	a	teleportToPos
	m	(Lgm;Lgm;Z)Ljava/util/Set;	a	getRelatives
	m	(D)Ljava/lang/String;	a	formatDouble
	m	(Lek;Lbzm;Laub;DDDLjava/util/Set;FFLaoz;)V	a	performTeleport
	m	(Ljava/util/Collection;Lfis;)Lxo;	a	lambda$teleportToPos$11
	m	(Ljava/util/Collection;Lfis;)Lxo;	b	lambda$teleportToPos$10
	m	(Ljava/util/Collection;Lbzm;)Lxo;	a	lambda$teleportToEntity$9
	m	(Ljava/util/Collection;Lbzm;)Lxo;	b	lambda$teleportToEntity$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqo	net/minecraft/server/commands/TellRawCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
c	aqp	net/minecraft/server/commands/TickCommand
	f	F	a	MAX_TICKRATE
	f	Ljava/lang/String;	b	DEFAULT_TICKRATE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(J)Ljava/lang/String;	a	nanosToMilisString
	m	(Lek;F)I	a	setTickingRate
	m	(Lek;)I	a	tickQuery
	m	(Lek;I)I	a	sprint
	m	(Lek;Z)I	a	setFreeze
	m	(Lek;I)I	b	step
	m	(Lek;)I	b	stopStepping
	m	(Lek;)I	c	stopSprinting
	m	()Lxo;	a	lambda$stopSprinting$26
	m	()Lxo;	b	lambda$stopStepping$25
	m	(I)Lxo;	a	lambda$step$24
	m	()Lxo;	c	lambda$setFreeze$23
	m	()Lxo;	d	lambda$setFreeze$22
	m	()Lxo;	e	lambda$sprint$21
	m	()Lxo;	f	lambda$sprint$20
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[J)Lxo;	a	lambda$tickQuery$19
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lxo;	a	lambda$tickQuery$18
	m	()Lxo;	g	lambda$tickQuery$17
	m	()Lxo;	h	lambda$tickQuery$16
	m	()Lxo;	i	lambda$tickQuery$15
	m	(Ljava/lang/String;Ljava/lang/String;)Lxo;	a	lambda$tickQuery$14
	m	()Lxo;	j	lambda$tickQuery$13
	m	(Ljava/lang/String;)Lxo;	a	lambda$setTickingRate$12
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$11
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqq	net/minecraft/server/commands/TimeCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Laub;)I	a	getDayTime
	m	(Lek;I)I	c	queryTime
	m	(Lek;I)I	a	setTime
	m	(Lek;I)I	b	addTime
	m	(I)Lxo;	a	lambda$addTime$11
	m	(I)Lxo;	b	lambda$setTime$10
	m	(I)Lxo;	c	lambda$queryTime$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$0
c	aqr	net/minecraft/server/commands/TitleCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Ljava/util/Collection;)I	a	clearTitle
	m	(Lek;Ljava/util/Collection;)I	b	resetTitle
	m	(Lek;Ljava/util/Collection;Lxo;Ljava/lang/String;Ljava/util/function/Function;)I	a	showTitle
	m	(Lek;Ljava/util/Collection;III)I	a	setTimes
	m	(Ljava/util/Collection;)Lxo;	a	lambda$setTimes$13
	m	(Ljava/util/Collection;)Lxo;	b	lambda$setTimes$12
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	a	lambda$showTitle$11
	m	(Ljava/lang/String;Ljava/util/Collection;)Lxo;	b	lambda$showTitle$10
	m	(Ljava/util/Collection;)Lxo;	c	lambda$resetTitle$9
	m	(Ljava/util/Collection;)Lxo;	d	lambda$resetTitle$8
	m	(Ljava/util/Collection;)Lxo;	e	lambda$clearTitle$7
	m	(Ljava/util/Collection;)Lxo;	f	lambda$clearTitle$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$0
c	aqs	net/minecraft/server/commands/TransferCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NO_PLAYERS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/lang/String;ILjava/util/Collection;)I	a	transfer
	m	(Ljava/util/Collection;Ljava/lang/String;I)Lxo;	a	lambda$transfer$4
	m	(Ljava/util/Collection;Ljava/lang/String;I)Lxo;	b	lambda$transfer$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqt	net/minecraft/server/commands/TriggerCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_NOT_PRIMED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_INVALID_OBJECTIVE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	suggestObjectives
	m	(Lek;Lauc;Lfjp;I)I	a	addValue
	m	(Lek;Lauc;Lfjp;I)I	b	setValue
	m	(Lek;Lauc;Lfjp;)I	a	simpleTrigger
	m	(Lfjx;Lfjw;Lfjp;)Lfjv;	a	getScore
	m	(Lfjp;)Lxo;	a	lambda$simpleTrigger$6
	m	(Lfjp;I)Lxo;	a	lambda$setValue$5
	m	(Lfjp;I)Lxo;	b	lambda$addValue$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqu	net/minecraft/server/commands/VersionCommand
	f	Lxo;	a	HEADER
	f	Lxo;	b	STABLE
	f	Lxo;	c	UNSTABLE
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Z)V	a	register
	m	(Ljava/util/function/Consumer;)V	a	dumpVersion
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqv	net/minecraft/server/commands/WardenSpawnTrackerCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;Ljava/util/Collection;I)I	a	setWarningLevel
	m	(Lek;Ljava/util/Collection;)I	a	resetTracker
	m	(Ljava/util/Collection;)Lxo;	a	lambda$resetTracker$6
	m	(Ljava/util/Collection;)Lxo;	b	lambda$resetTracker$5
	m	(Ljava/util/Collection;)Lxo;	c	lambda$setWarningLevel$4
	m	(Ljava/util/Collection;)Lxo;	d	lambda$setWarningLevel$3
	m	(ILcty;)V	a	lambda$setWarningLevel$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$0
c	aqw	net/minecraft/server/commands/WaypointCommand
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;Leg;)V	a	register
	m	(Lek;Lfkx;Lamd;)I	a	setWaypointStyle
	m	(Lek;Lfkx;Lo;)I	a	setWaypointColor
	m	(Lek;Lfkx;Ljava/lang/Integer;)I	a	setWaypointColor
	m	(Lek;Lfkx;)I	a	resetWaypointColor
	m	(Lek;)I	a	listWaypoints
	m	(Lek;Lfkx;Ljava/util/function/Consumer;)V	a	mutateIcon
	m	(Ljava/util/Set;Ljava/lang/String;Lxo;)Lxo;	a	lambda$listWaypoints$17
	m	(Ljava/lang/String;Lfkx;)Lyc;	a	lambda$listWaypoints$16
	m	(Ljava/lang/String;Ljb;Lfkx;Lyl;)Lyl;	a	lambda$listWaypoints$15
	m	(Ljava/lang/String;)Lxo;	a	lambda$listWaypoints$14
	m	()Lxo;	a	lambda$resetWaypointColor$13
	m	(Lfkt$a;)V	a	lambda$resetWaypointColor$12
	m	(Ljava/lang/Integer;)Lxo;	a	lambda$setWaypointColor$11
	m	(Ljava/lang/Integer;Lfkt$a;)V	a	lambda$setWaypointColor$10
	m	(Lo;)Lxo;	a	lambda$setWaypointColor$9
	m	(Lo;Lfkt$a;)V	a	lambda$setWaypointColor$8
	m	()Lxo;	b	lambda$setWaypointStyle$7
	m	(Lamd;Lfkt$a;)V	a	lambda$setWaypointStyle$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$0
c	aqx	net/minecraft/server/commands/WeatherCommand
	f	I	a	DEFAULT_TIME
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;ILbwo;)I	a	getDuration
	m	(Lek;I)I	a	setClear
	m	(Lek;I)I	b	setRain
	m	(Lek;I)I	c	setThunder
	m	()Lxo;	a	lambda$setThunder$8
	m	()Lxo;	b	lambda$setRain$7
	m	()Lxo;	c	lambda$setClear$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$0
c	aqy	net/minecraft/server/commands/WhitelistCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_ALREADY_ENABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_ALREADY_DISABLED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_ALREADY_WHITELISTED
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_NOT_WHITELISTED
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;)I	a	reload
	m	(Lek;Ljava/util/Collection;)I	a	addPlayers
	m	(Lek;Ljava/util/Collection;)I	b	removePlayers
	m	(Lek;)I	b	enableWhitelist
	m	(Lek;)I	c	disableWhitelist
	m	(Lek;)I	d	showList
	m	([Ljava/lang/String;)Lxo;	a	lambda$showList$16
	m	()Lxo;	a	lambda$showList$15
	m	()Lxo;	b	lambda$disableWhitelist$14
	m	()Lxo;	c	lambda$enableWhitelist$13
	m	(Lcom/mojang/authlib/GameProfile;)Lxo;	a	lambda$removePlayers$12
	m	(Lcom/mojang/authlib/GameProfile;)Lxo;	b	lambda$addPlayers$11
	m	()Lxo;	d	lambda$reload$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	b	lambda$register$5
	m	(Lauc;)Ljava/lang/String;	a	lambda$register$4
	m	(Layb;Lauc;)Z	a	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$0
	m	()V	<clinit>	<clinit>
c	aqz	net/minecraft/server/commands/WorldBorderCommand
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	a	ERROR_SAME_CENTER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	b	ERROR_SAME_SIZE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_TOO_SMALL
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_TOO_BIG
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	e	ERROR_TOO_FAR_OUT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	f	ERROR_SAME_WARNING_TIME
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_SAME_WARNING_DISTANCE
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	h	ERROR_SAME_DAMAGE_BUFFER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	i	ERROR_SAME_DAMAGE_AMOUNT
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lek;F)I	a	setDamageBuffer
	m	(Lek;F)I	b	setDamageAmount
	m	(Lek;I)I	a	setWarningTime
	m	(Lek;I)I	b	setWarningDistance
	m	(Lek;)I	a	getSize
	m	(Lek;Lfir;)I	a	setCenter
	m	(Lek;DJ)I	a	setSize
	m	(D)Lxo;	a	lambda$setSize$18
	m	(DJ)Lxo;	a	lambda$setSize$17
	m	(DJ)Lxo;	b	lambda$setSize$16
	m	(Lfir;)Lxo;	a	lambda$setCenter$15
	m	(D)Lxo;	b	lambda$getSize$14
	m	(I)Lxo;	a	lambda$setWarningDistance$13
	m	(I)Lxo;	b	lambda$setWarningTime$12
	m	(F)Lxo;	a	lambda$setDamageAmount$11
	m	(F)Lxo;	b	lambda$setDamageBuffer$10
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$9
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$8
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$7
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$6
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$5
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$register$4
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	g	lambda$register$3
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	h	lambda$register$2
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	i	lambda$register$1
	m	(Lcom/mojang/brigadier/context/CommandContext;)I	j	lambda$register$0
	m	()V	<clinit>	<clinit>
c	ara	net/minecraft/server/commands/data/BlockDataAccessor
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NOT_A_BLOCK_ENTITY
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Leaz;	d	entity
	f	Ljb;	e	pos
	m	(Leaz;Ljb;)V	<init>	<init>
	m	(Lui;)V	a	setData
	m	()Lui;	a	getData
	m	()Lxo;	b	getModifiedSuccess
	m	(Lvi;)Lxo;	a	getPrintSuccess
	m	(Lfe$g;DI)Lxo;	a	getPrintSuccess
	m	(Ljava/lang/String;)Larc$c;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ara$1	net/minecraft/server/commands/data/BlockDataAccessor$1
	f	Ljava/lang/String;	a	val$argPrefix
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Larb;	a	access
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
c	arb	net/minecraft/server/commands/data/DataAccessor
	m	(Lui;)V	a	setData
	m	()Lui;	a	getData
	m	()Lxo;	b	getModifiedSuccess
	m	(Lvi;)Lxo;	a	getPrintSuccess
	m	(Lfe$g;DI)Lxo;	a	getPrintSuccess
c	arc	net/minecraft/server/commands/data/DataCommands
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	d	ERROR_MERGE_UNCHANGED
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	e	ERROR_GET_NOT_NUMBER
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	f	ERROR_GET_NON_EXISTENT
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	g	ERROR_MULTIPLE_TAGS
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	h	ERROR_EXPECTED_OBJECT
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	i	ERROR_EXPECTED_VALUE
	f	Lcom/mojang/brigadier/exceptions/Dynamic2CommandExceptionType;	j	ERROR_INVALID_SUBSTRING
	f	Ljava/util/List;	a	ALL_PROVIDERS
	f	Ljava/util/List;	b	TARGET_PROVIDERS
	f	Ljava/util/List;	c	SOURCE_PROVIDERS
	m	()V	<init>	<init>
	m	(Lcom/mojang/brigadier/CommandDispatcher;)V	a	register
	m	(Lvi;)Ljava/lang/String;	a	getAsText
	m	(Ljava/util/List;Larc$d;)Ljava/util/List;	a	stringifyTagList
	m	(Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	decorateModification
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	validatedSubstring
	m	(Ljava/lang/String;II)Ljava/lang/String;	b	substring
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	substring
	m	(II)I	a	getOffset
	m	(Lcom/mojang/brigadier/context/CommandContext;Larc$c;)Ljava/util/List;	a	getSingletonSource
	m	(Lcom/mojang/brigadier/context/CommandContext;Larc$c;)Ljava/util/List;	b	resolveSourcePath
	m	(Lcom/mojang/brigadier/context/CommandContext;Larc$c;Larc$a;Ljava/util/List;)I	a	manipulateData
	m	(Lek;Larb;Lfe$g;)I	a	removeData
	m	(Lfe$g;Larb;)Lvi;	a	getSingleTag
	m	(Lek;Larb;Lfe$g;)I	b	getData
	m	(Lek;Larb;Lfe$g;D)I	a	getNumeric
	m	(Lek;Larb;)I	a	getData
	m	(Lek;Larb;Lui;)I	a	mergeData
	m	(Larb;)Lxo;	a	lambda$mergeData$43
	m	(Larb;Lui;)Lxo;	a	lambda$getData$42
	m	(Larb;Lfe$g;DI)Lxo;	a	lambda$getNumeric$41
	m	(Larb;Lvi;)Lxo;	a	lambda$getData$40
	m	(Larb;)Lxo;	b	lambda$removeData$39
	m	(Larb;)Lxo;	c	lambda$manipulateData$38
	m	(Ljava/util/function/BiConsumer;Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$37
	m	(Larc$c;Larc$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$36
	m	(Larc$c;Larc$a;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$35
	m	(Larc$c;Larc$c;Larc$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$34
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$decorateModification$33
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$decorateModification$32
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$31
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$decorateModification$30
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$29
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$decorateModification$28
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$decorateModification$27
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$decorateModification$26
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$decorateModification$25
	m	(Larc$c;Larc$c;Larc$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$24
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$decorateModification$23
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$decorateModification$22
	m	(Larc$c;Larc$a;Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	f	lambda$decorateModification$21
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Larc$b;)V	a	lambda$register$20
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	a	lambda$register$19
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	b	lambda$register$18
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	c	lambda$register$17
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	d	lambda$register$16
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	e	lambda$register$15
	m	(Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	lambda$register$14
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	a	lambda$register$13
	m	(Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	b	lambda$register$12
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	b	lambda$register$11
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	c	lambda$register$10
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	d	lambda$register$9
	m	(Larc$c;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	c	lambda$register$8
	m	(Larc$c;Lcom/mojang/brigadier/context/CommandContext;)I	e	lambda$register$7
	m	(Ljava/util/function/Function;)Larc$c;	a	lambda$static$6
	m	(Ljava/util/function/Function;)Larc$c;	b	lambda$static$5
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$4
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	a	lambda$static$3
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	b	lambda$static$2
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	c	lambda$static$1
	m	(Ljava/lang/Object;)Lcom/mojang/brigadier/Message;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	arc$a	net/minecraft/server/commands/data/DataCommands$DataManipulator
	m	(Lcom/mojang/brigadier/context/CommandContext;Lui;Lfe$g;Ljava/util/List;)I	modify	modify
c	arc$b	net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator
	m	(Larc$a;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	create	create
c	arc$c	net/minecraft/server/commands/data/DataCommands$DataProvider
	m	(Lcom/mojang/brigadier/context/CommandContext;)Larb;	a	access
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
c	arc$d	net/minecraft/server/commands/data/DataCommands$StringProcessor
	m	(Ljava/lang/String;)Ljava/lang/String;	process	process
c	ard	net/minecraft/server/commands/data/EntityDataAccessor
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;	c	ERROR_NO_PLAYERS
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lbzm;	d	entity
	m	(Lbzm;)V	<init>	<init>
	m	(Lui;)V	a	setData
	m	()Lui;	a	getData
	m	()Lxo;	b	getModifiedSuccess
	m	(Lvi;)Lxo;	a	getPrintSuccess
	m	(Lfe$g;DI)Lxo;	a	getPrintSuccess
	m	(Ljava/lang/String;)Larc$c;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ard$1	net/minecraft/server/commands/data/EntityDataAccessor$1
	f	Ljava/lang/String;	a	val$arg
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Larb;	a	access
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
c	are	net/minecraft/server/commands/data/StorageDataAccessor
	f	Lcom/mojang/brigadier/suggestion/SuggestionProvider;	b	SUGGEST_STORAGE
	f	Ljava/util/function/Function;	a	PROVIDER
	f	Lfcj;	c	storage
	f	Lame;	d	id
	m	(Lcom/mojang/brigadier/context/CommandContext;)Lfcj;	a	getGlobalTags
	m	(Lfcj;Lame;)V	<init>	<init>
	m	(Lui;)V	a	setData
	m	()Lui;	a	getData
	m	()Lxo;	b	getModifiedSuccess
	m	(Lvi;)Lxo;	a	getPrintSuccess
	m	(Lfe$g;DI)Lxo;	a	getPrintSuccess
	m	(Ljava/lang/String;)Larc$c;	a	lambda$static$1
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	are$1	net/minecraft/server/commands/data/StorageDataAccessor$1
	f	Ljava/lang/String;	a	val$arg
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;)Larb;	a	access
	m	(Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder;	a	wrap
c	arf	net/minecraft/server/commands/data/package-info
c	arg	net/minecraft/server/commands/package-info
c	arh	net/minecraft/server/dedicated/DedicatedPlayerList
	f	Lorg/slf4j/Logger;	h	LOGGER
	m	(Lari;Ljs;Lfcv;)V	<init>	<init>
	m	(Z)V	a	setUsingWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
	m	()V	a	reloadWhiteList
	m	()V	w	saveIpBanList
	m	()V	x	saveUserBanList
	m	()V	y	loadIpBanList
	m	()V	z	loadUserBanList
	m	()V	A	loadOps
	m	()V	B	saveOps
	m	()V	C	loadWhiteList
	m	()V	D	saveWhiteList
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
	m	()Lari;	b	getServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	()V	<clinit>	<clinit>
c	ari	net/minecraft/server/dedicated/DedicatedServer
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	I	m	CONVERSION_RETRY_DELAY_MS
	f	I	n	CONVERSION_RETRIES
	f	Ljava/util/List;	o	consoleInput
	f	Layr;	p	queryThreadGs4
	f	Layo;	q	rconConsoleSource
	f	Layt;	r	rconThread
	f	Lark;	s	settings
	f	Lasx;	t	gui
	f	Lavk;	u	serverTextFilter
	f	Lbrw;	v	tickTimeLogger
	f	Lbrt;	w	debugSampleSubscriptionTracker
	f	Lamw;	x	serverLinks
	m	(Ljava/lang/Thread;Lfcs$c;Lawz;Land;Lark;Lcom/mojang/datafixers/DataFixer;Lamz;Laum;)V	<init>	<init>
	m	()Z	e	initServer
	m	()Z	W	isSpawningMonsters
	m	()Larj;	a	getProperties
	m	()V	t	forceDifficulty
	m	(Lae;)Lae;	a	fillServerSystemReport
	m	(Ljava/nio/file/Path;)V	a	dumpServerProperties
	m	()V	i	onServerExit
	m	()V	G	tickConnection
	m	(Ldmu;)Z	a	isLevelEnabled
	m	(Ljava/lang/String;Lek;)V	a	handleConsoleInput
	m	()V	br	handleConsoleInputs
	m	()Z	n	isDedicatedServer
	m	()I	o	getRateLimitPacketsPerSecond
	m	()Z	p	isEpollEnabled
	m	()Larh;	bs	getPlayerList
	m	()Z	r	isPublished
	m	()Ljava/lang/String;	b	getServerIp
	m	()I	d	getServerPort
	m	()Ljava/lang/String;	h	getServerName
	m	()V	bt	showGui
	m	()Z	aj	hasGui
	m	()Z	q	isCommandBlockEnabled
	m	()I	al	getSpawnProtectionRadius
	m	(Laub;Ljb;Lcut;)Z	a	isUnderSpawnProtection
	m	()Z	am	repliesToStatus
	m	()Z	an	hidesOnlinePlayers
	m	()I	k	getOperatorUserPermissionLevel
	m	()I	l	getFunctionCompilationLevel
	m	(I)V	c	setPlayerIdleTimeout
	m	()Z	m	shouldRconBroadcast
	m	()Z	c	shouldInformAdmins
	m	()I	aw	getAbsoluteMaxWorldSize
	m	()I	az	getCompressionThreshold
	m	()Z	aA	enforceSecureProfile
	m	()Z	bl	logIPs
	m	()Z	bu	convertOldUsers
	m	()V	bC	waitForRetry
	m	()J	bv	getMaxTickLength
	m	()I	bj	getMaxChainedNeighborUpdates
	m	()Ljava/lang/String;	s	getPluginNames
	m	(Ljava/lang/String;)Ljava/lang/String;	a	runCommand
	m	(Z)V	i	storeUsingWhiteList
	m	()V	v	stopServer
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isSingleplayerOwner
	m	(I)I	b	getScaledTrackingDistance
	m	()Ljava/lang/String;	j	getLevelIdName
	m	()Z	aX	forceSynchronousWrites
	m	(Lauc;)Lavl;	a	createTextFilterForPlayer
	m	()Ldmr;	bd	getForcedGameType
	m	()Ljava/util/Optional;	Y	getServerResourcePack
	m	()V	aS	endMetricsRecordingTick
	m	()Lbrx;	f	getTickTimeLogger
	m	()Z	g	isTickTimeLoggingEnabled
	m	(Lauc;Lbrv;)V	a	subscribeToDebugSample
	m	()Z	bm	acceptsTransfers
	m	()Lamw;	bp	serverLinks
	m	()I	bq	pauseWhileEmptySeconds
	m	(Lark;)Lamw;	a	createServerLinks
	m	(Larj;)Ljava/util/Optional;	a	parseBugReportLink
	m	()Layb;	ag	getPlayerList
	m	(Ljava/net/URI;)Lamw;	a	lambda$createServerLinks$5
	m	(ZLarj;)Larj;	a	lambda$storeUsingWhiteList$4
	m	(Ljava/lang/String;)V	e	lambda$runCommand$3
	m	(ILarj;)Larj;	a	lambda$setPlayerIdleTimeout$2
	m	()Ljava/lang/String;	bD	lambda$fillServerSystemReport$1
	m	()Ljava/lang/String;	bE	lambda$fillServerSystemReport$0
	m	()V	<clinit>	<clinit>
c	ari$1	net/minecraft/server/dedicated/DedicatedServer$1
	f	Lari;	a	this$0
	m	(Lari;Ljava/lang/String;)V	<init>	<init>
	m	()V	run	run
c	arj	net/minecraft/server/dedicated/DedicatedServerProperties
	f	Lorg/slf4j/Logger;	ad	LOGGER
	f	Ljava/util/regex/Pattern;	ae	SHA1
	f	Lcom/google/common/base/Splitter;	af	COMMA_SPLITTER
	f	Z	a	onlineMode
	f	Z	b	preventProxyConnections
	f	Ljava/lang/String;	c	serverIp
	f	Z	d	pvp
	f	Z	e	allowFlight
	f	Ljava/lang/String;	f	motd
	f	Ljava/lang/String;	g	bugReportLink
	f	Z	h	forceGameMode
	f	Z	i	enforceWhitelist
	f	Lbxg;	j	difficulty
	f	Ldmr;	k	gamemode
	f	Ljava/lang/String;	l	levelName
	f	I	m	serverPort
	f	Ljava/lang/Boolean;	n	announcePlayerAchievements
	f	Z	o	enableQuery
	f	I	p	queryPort
	f	Z	q	enableRcon
	f	I	r	rconPort
	f	Ljava/lang/String;	s	rconPassword
	f	Z	t	hardcore
	f	Z	u	allowNether
	f	Z	v	spawnMonsters
	f	Z	w	useNativeTransport
	f	Z	x	enableCommandBlock
	f	I	y	spawnProtection
	f	I	z	opPermissionLevel
	f	I	A	functionPermissionLevel
	f	J	B	maxTickTime
	f	I	C	maxChainedNeighborUpdates
	f	I	D	rateLimitPacketsPerSecond
	f	I	E	viewDistance
	f	I	F	simulationDistance
	f	I	G	maxPlayers
	f	I	H	networkCompressionThreshold
	f	Z	I	broadcastRconToOps
	f	Z	J	broadcastConsoleToOps
	f	I	K	maxWorldSize
	f	Z	L	syncChunkWrites
	f	Ljava/lang/String;	M	regionFileComression
	f	Z	N	enableJmxMonitoring
	f	Z	O	enableStatus
	f	Z	P	hideOnlinePlayers
	f	I	Q	entityBroadcastRangePercentage
	f	Ljava/lang/String;	R	textFilteringConfig
	f	I	S	textFilteringVersion
	f	Ljava/util/Optional;	T	serverResourcePackInfo
	f	Ldmh;	U	initialDataPackConfiguration
	f	Larm$a;	V	playerIdleTimeout
	f	Larm$a;	W	whiteList
	f	Z	X	enforceSecureProfile
	f	Z	Y	logIPs
	f	I	Z	pauseWhenEmptySeconds
	f	Larj$a;	ag	worldDimensionData
	f	Leky;	aa	worldOptions
	f	Z	ab	acceptsTransfers
	m	(Ljava/util/Properties;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Larj;	a	fromFile
	m	(Ljz;Ljava/util/Properties;)Larj;	a	reload
	m	(Ljava/lang/String;)Lxo;	c	parseResourcePackPrompt
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional;	a	getServerPackInfo
	m	(Ljava/lang/String;Ljava/lang/String;)Ldmh;	b	getDatapackConfig
	m	(Ljn$a;)Lekv;	a	createDimensions
	m	(Ljz;Ljava/util/Properties;)Larm;	b	reload
	m	(Ljava/lang/String;Ljava/lang/String;)V	c	lambda$parseResourcePackPrompt$4
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$3
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	e	lambda$new$2
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$new$1
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	arj$a	net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData
	f	Lcom/google/gson/JsonObject;	a	generatorSettings
	f	Ljava/lang/String;	b	levelType
	f	Ljava/util/Map;	c	LEGACY_PRESET_NAMES
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)V	<init>	<init>
	m	(Ljn$a;)Lekv;	a	create
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/google/gson/JsonObject;	a	generatorSettings
	m	()Ljava/lang/String;	b	levelType
	m	(Ljl$c;)Ljl$c;	a	lambda$create$4
	m	()Ljava/util/Optional;	c	lambda$create$3
	m	(Lame;)Lamd;	a	lambda$create$2
	m	()Ljava/lang/IllegalStateException;	d	lambda$create$1
	m	(Ljn;)Ljava/util/Optional;	a	lambda$create$0
	m	()V	<clinit>	<clinit>
c	ark	net/minecraft/server/dedicated/DedicatedServerSettings
	f	Ljava/nio/file/Path;	a	source
	f	Larj;	b	properties
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Larj;	a	getProperties
	m	()V	b	forceSave
	m	(Ljava/util/function/UnaryOperator;)Lark;	a	update
c	arl	net/minecraft/server/dedicated/ServerWatchdog
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	J	b	MAX_SHUTDOWN_TIME
	f	I	c	SHUTDOWN_STATUS
	f	Lari;	d	server
	f	J	e	maxTickTimeNanos
	m	(Lari;)V	<init>	<init>
	m	()V	run	run
	m	(Ljava/lang/String;J)Lp;	a	createWatchdogCrashReport
	m	()V	a	exit
	m	()Ljava/lang/String;	b	lambda$run$2
	m	(Laub;)Ljava/lang/String;	a	lambda$run$1
	m	()Ljava/lang/String;	c	lambda$run$0
	m	()V	<clinit>	<clinit>
c	arl$1	net/minecraft/server/dedicated/ServerWatchdog$1
	m	(Larl;)V	<init>	<init>
	m	()V	run	run
c	arm	net/minecraft/server/dedicated/Settings
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Properties;	ac	properties
	m	(Ljava/util/Properties;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Ljava/util/Properties;	b	loadFromFile
	m	(Ljava/nio/file/Path;)V	c	store
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	wrapNumberDeserializer
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function;	a	dispatchNumberOrString
	m	(Ljava/lang/String;)Ljava/lang/String;	c	getStringRaw
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	a	getLegacy
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Larm$a;	b	getMutable
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	get
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Larm$a;	b	getMutable
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	get
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getLegacyString
	m	(Ljava/lang/String;I)I	a	get
	m	(Ljava/lang/String;I)Larm$a;	b	getMutable
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I	a	get
	m	(Ljava/lang/String;J)J	a	get
	m	(Ljava/lang/String;Z)Z	a	get
	m	(Ljava/lang/String;Z)Larm$a;	b	getMutable
	m	(Ljava/lang/String;)Ljava/lang/Boolean;	b	getLegacyBoolean
	m	()Ljava/util/Properties;	a	cloneProperties
	m	(Ljz;Ljava/util/Properties;)Larm;	b	reload
	m	(Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$get$2
	m	(Ljava/util/function/IntFunction;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Object;	a	lambda$dispatchNumberOrString$1
	m	(Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/Number;	a	lambda$wrapNumberDeserializer$0
	m	()V	<clinit>	<clinit>
c	arm$a	net/minecraft/server/dedicated/Settings$MutableValue
	f	Ljava/lang/String;	b	key
	f	Ljava/lang/Object;	c	value
	f	Ljava/util/function/Function;	d	serializer
	f	Larm;	a	this$0
	m	(Larm;Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;)V	<init>	<init>
	m	()Ljava/lang/Object;	get	get
	m	(Ljz;Ljava/lang/Object;)Larm;	a	update
c	arn	net/minecraft/server/dedicated/package-info
c	aro	net/minecraft/server/dialog/ActionButton
	f	Larq;	b	button
	f	Ljava/util/Optional;	c	action
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Larq;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larq;	a	button
	m	()Ljava/util/Optional;	b	action
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	arp	net/minecraft/server/dialog/ButtonListDialog
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()I	b	columns
	m	()Ljava/util/Optional;	c	exitAction
	m	()Ljava/util/Optional;	d	onCancel
c	arq	net/minecraft/server/dialog/CommonButtonData
	f	Lxo;	c	label
	f	Ljava/util/Optional;	d	tooltip
	f	I	e	width
	f	I	a	DEFAULT_WIDTH
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	(Lxo;I)V	<init>	<init>
	m	(Lxo;Ljava/util/Optional;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	label
	m	()Ljava/util/Optional;	b	tooltip
	m	()I	c	width
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	arr	net/minecraft/server/dialog/CommonDialogData
	f	Lxo;	b	title
	f	Ljava/util/Optional;	c	externalTitle
	f	Z	d	canCloseWithEscape
	f	Z	e	pause
	f	Laru;	f	afterAction
	f	Ljava/util/List;	g	body
	f	Ljava/util/List;	h	inputs
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Lxo;Ljava/util/Optional;ZZLaru;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lxo;	a	computeExternalTitle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	title
	m	()Ljava/util/Optional;	c	externalTitle
	m	()Z	d	canCloseWithEscape
	m	()Z	e	pause
	m	()Laru;	f	afterAction
	m	()Ljava/util/List;	g	body
	m	()Ljava/util/List;	h	inputs
	m	(Larr;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	i	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ars	net/minecraft/server/dialog/ConfirmationDialog
	f	Larr;	h	common
	f	Laro;	i	yesButton
	f	Laro;	j	noButton
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Larr;Laro;Laro;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/util/Optional;	d	onCancel
	m	()Ljava/util/List;	b	mainActions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larr;	A_	common
	m	()Laro;	e	yesButton
	m	()Laro;	f	noButton
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	art	net/minecraft/server/dialog/Dialog
	f	Lcom/mojang/serialization/Codec;	b	WIDTH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lcom/mojang/serialization/Codec;	e	LIST_CODEC
	f	Lzm;	f	STREAM_CODEC
	f	Lzm;	g	CONTEXT_FREE_STREAM_CODEC
	m	()Larr;	A_	common
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/util/Optional;	d	onCancel
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aru	net/minecraft/server/dialog/DialogAction
	f	Laru;	a	CLOSE
	f	Laru;	b	NONE
	f	Laru;	c	WAIT_FOR_RESPONSE
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Lbda$a;	e	CODEC
	f	Lzm;	f	STREAM_CODEC
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Laru;	i	$VALUES
	m	()[Laru;	values	values
	m	(Ljava/lang/String;)Laru;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	a	willUnpause
	m	(Laru;)I	a	lambda$static$1
	m	(Laru;)I	b	lambda$static$0
	m	()[Laru;	b	$values
	m	()V	<clinit>	<clinit>
c	arv	net/minecraft/server/dialog/DialogListDialog
	f	Larr;	h	common
	f	Ljp;	i	dialogs
	f	Ljava/util/Optional;	j	exitAction
	f	I	k	columns
	f	I	l	buttonWidth
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Larr;Ljp;Ljava/util/Optional;II)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larr;	A_	common
	m	()Ljp;	e	dialogs
	m	()Ljava/util/Optional;	c	exitAction
	m	()I	b	columns
	m	()I	f	buttonWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	arw	net/minecraft/server/dialog/DialogTypes
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	arx	net/minecraft/server/dialog/Dialogs
	f	Lamd;	a	SERVER_LINKS
	f	Lamd;	b	CUSTOM_OPTIONS
	f	Lamd;	c	QUICK_ACTIONS
	f	I	d	BIG_BUTTON_WIDTH
	f	Laro;	e	DEFAULT_BACK_BUTTON
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	ary	net/minecraft/server/dialog/Input
	f	Ljava/lang/String;	b	key
	f	Lasq;	c	control
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;Lasq;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	key
	m	()Lasq;	b	control
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	arz	net/minecraft/server/dialog/MultiActionDialog
	f	Larr;	h	common
	f	Ljava/util/List;	i	actions
	f	Ljava/util/Optional;	j	exitAction
	f	I	k	columns
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Larr;Ljava/util/List;Ljava/util/Optional;I)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larr;	A_	common
	m	()Ljava/util/List;	e	actions
	m	()Ljava/util/Optional;	c	exitAction
	m	()I	b	columns
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asa	net/minecraft/server/dialog/NoticeDialog
	f	Larr;	i	common
	f	Laro;	j	action
	f	Laro;	a	DEFAULT_ACTION
	f	Lcom/mojang/serialization/MapCodec;	h	MAP_CODEC
	m	(Larr;Laro;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/util/Optional;	d	onCancel
	m	()Ljava/util/List;	b	mainActions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larr;	A_	common
	m	()Laro;	e	action
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asb	net/minecraft/server/dialog/ServerLinksDialog
	f	Larr;	h	common
	f	Ljava/util/Optional;	i	exitAction
	f	I	j	columns
	f	I	k	buttonWidth
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Larr;Ljava/util/Optional;II)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Larr;	A_	common
	m	()Ljava/util/Optional;	c	exitAction
	m	()I	b	columns
	m	()I	e	buttonWidth
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asc	net/minecraft/server/dialog/SimpleDialog
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/util/List;	b	mainActions
c	asd	net/minecraft/server/dialog/action/Action
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/Map;)Ljava/util/Optional;	a	createAction
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asd$a	net/minecraft/server/dialog/action/Action$ValueGetter
	m	()Ljava/lang/String;	a	asTemplateSubstitution
	m	()Lvi;	b	asTag
	m	(Ljava/util/Map;)Ljava/util/Map;	a	getAsTemplateSubstitutions
	m	(Ljava/lang/String;)Lasd$a;	a	of
	m	(Ljava/util/function/Supplier;)Lasd$a;	a	of
c	asd$a$1	net/minecraft/server/dialog/action/Action$ValueGetter$1
	f	Ljava/lang/String;	a	val$value
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	asTemplateSubstitution
	m	()Lvi;	b	asTag
c	asd$a$2	net/minecraft/server/dialog/action/Action$ValueGetter$2
	f	Ljava/util/function/Supplier;	a	val$value
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Ljava/lang/String;	a	asTemplateSubstitution
	m	()Lvi;	b	asTag
c	ase	net/minecraft/server/dialog/action/ActionTypes
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Ljy;Lxm$a;Lcom/mojang/serialization/MapCodec;)V	a	lambda$bootstrap$0
c	asf	net/minecraft/server/dialog/action/CommandTemplate
	f	Lash;	c	template
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	(Lash;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/Map;)Ljava/util/Optional;	a	createAction
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lash;	b	template
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asg	net/minecraft/server/dialog/action/CustomAll
	f	Lame;	c	id
	f	Ljava/util/Optional;	d	additions
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	(Lame;Ljava/util/Optional;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/Map;)Ljava/util/Optional;	a	createAction
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	()Ljava/util/Optional;	c	additions
	m	(Lui;Ljava/lang/String;Lasd$a;)V	a	lambda$createAction$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ash	net/minecraft/server/dialog/action/ParsedTemplate
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	VARIABLE_CODEC
	f	Ljava/lang/String;	c	raw
	f	Lih;	d	parsed
	m	(Ljava/lang/String;Lih;)V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	parse
	m	(Ljava/util/Map;)Ljava/lang/String;	a	instantiate
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$instantiate$4
	m	(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$parse$3
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$static$1
	m	(Lash;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asi	net/minecraft/server/dialog/action/StaticAction
	f	Lxm;	c	value
	f	Ljava/util/Map;	b	WRAPPED_CODECS
	m	(Lxm;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/Map;)Ljava/util/Optional;	a	createAction
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxm;	b	value
	m	()Ljava/util/Map;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asj	net/minecraft/server/dialog/action/package-info
c	ask	net/minecraft/server/dialog/body/DialogBody
	f	Lcom/mojang/serialization/Codec;	a	DIALOG_BODY_CODEC
	f	Lcom/mojang/serialization/Codec;	b	COMPACT_LIST_CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asl	net/minecraft/server/dialog/body/DialogBodyTypes
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	asm	net/minecraft/server/dialog/body/ItemBody
	f	Ldcv;	d	item
	f	Ljava/util/Optional;	e	description
	f	Z	f	showDecorations
	f	Z	g	showTooltip
	f	I	h	width
	f	I	i	height
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	m	(Ldcv;Ljava/util/Optional;ZZII)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	b	item
	m	()Ljava/util/Optional;	c	description
	m	()Z	d	showDecorations
	m	()Z	e	showTooltip
	m	()I	f	width
	m	()I	g	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asn	net/minecraft/server/dialog/body/PlainMessage
	f	Lxo;	f	contents
	f	I	g	width
	f	I	c	DEFAULT_WIDTH
	f	Lcom/mojang/serialization/MapCodec;	d	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	m	(Lxo;I)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	contents
	m	()I	c	width
	m	(Lxo;)Lasn;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aso	net/minecraft/server/dialog/body/package-info
c	asp	net/minecraft/server/dialog/input/BooleanInput
	f	Lxo;	c	label
	f	Z	d	initial
	f	Ljava/lang/String;	e	onTrue
	f	Ljava/lang/String;	f	onFalse
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Lxo;ZLjava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	b	label
	m	()Z	c	initial
	m	()Ljava/lang/String;	d	onTrue
	m	()Ljava/lang/String;	e	onFalse
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asq	net/minecraft/server/dialog/input/InputControl
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asr	net/minecraft/server/dialog/input/InputControlTypes
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	ass	net/minecraft/server/dialog/input/NumberRangeInput
	f	I	c	width
	f	Lxo;	d	label
	f	Ljava/lang/String;	e	labelFormat
	f	Lass$a;	f	rangeInfo
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(ILxo;Ljava/lang/String;Lass$a;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	(Ljava/lang/String;)Lxo;	a	computeLabel
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	width
	m	()Lxo;	c	label
	m	()Ljava/lang/String;	d	labelFormat
	m	()Lass$a;	e	rangeInfo
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ass$a	net/minecraft/server/dialog/input/NumberRangeInput$RangeInfo
	f	F	b	start
	f	F	c	end
	f	Ljava/util/Optional;	d	initial
	f	Ljava/util/Optional;	e	step
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(FFLjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(F)F	a	computeScaledValue
	m	(F)Z	b	isOutOfRange
	m	()F	f	initialScaledValue
	m	()F	a	initialSliderValue
	m	(F)F	c	scaledValueToSlider
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	start
	m	()F	c	end
	m	()Ljava/util/Optional;	d	initial
	m	()Ljava/util/Optional;	e	step
	m	(Lass$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(DDD)Ljava/lang/String;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ast	net/minecraft/server/dialog/input/SingleOptionInput
	f	I	c	width
	f	Ljava/util/List;	d	entries
	f	Lxo;	e	label
	f	Z	f	labelVisible
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(ILjava/util/List;Lxo;Z)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/util/Optional;	b	initial
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	width
	m	()Ljava/util/List;	d	entries
	m	()Lxo;	e	label
	m	()Z	f	labelVisible
	m	(Last;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	g	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ast$a	net/minecraft/server/dialog/input/SingleOptionInput$Entry
	f	Ljava/lang/String;	c	id
	f	Ljava/util/Optional;	d	display
	f	Z	e	initial
	f	Lcom/mojang/serialization/Codec;	a	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/lang/String;Ljava/util/Optional;Z)V	<init>	<init>
	m	()Lxo;	a	displayOrDefault
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	id
	m	()Ljava/util/Optional;	c	display
	m	()Z	d	initial
	m	()Lxo;	e	lambda$displayOrDefault$2
	m	(Ljava/lang/String;)Last$a;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asu	net/minecraft/server/dialog/input/TextInput
	f	I	c	width
	f	Lxo;	d	label
	f	Z	e	labelVisible
	f	Ljava/lang/String;	f	initial
	f	I	g	maxLength
	f	Ljava/util/Optional;	h	multiline
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(ILxo;ZLjava/lang/String;ILjava/util/Optional;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	width
	m	()Lxo;	c	label
	m	()Z	d	labelVisible
	m	()Ljava/lang/String;	e	initial
	m	()I	f	maxLength
	m	()Ljava/util/Optional;	g	multiline
	m	(Lasu;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	h	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asu$a	net/minecraft/server/dialog/input/TextInput$MultilineOptions
	f	Ljava/util/Optional;	c	maxLines
	f	Ljava/util/Optional;	d	height
	f	I	a	MAX_HEIGHT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	maxLines
	m	()Ljava/util/Optional;	b	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	asv	net/minecraft/server/dialog/input/package-info
c	asw	net/minecraft/server/dialog/package-info
c	asx	net/minecraft/server/gui/MinecraftServerGui
	f	Ljava/awt/Font;	a	MONOSPACED
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	c	TITLE
	f	Ljava/lang/String;	d	SHUTDOWN_TITLE
	f	Lari;	e	server
	f	Ljava/lang/Thread;	f	logAppenderThread
	f	Ljava/util/Collection;	g	finalizers
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	h	isClosing
	m	(Lari;)Lasx;	a	showFrameFor
	m	(Lari;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)V	a	addFinalizer
	m	()Ljavax/swing/JComponent;	c	buildInfoPanel
	m	()Ljavax/swing/JComponent;	d	buildPlayerPanel
	m	()Ljavax/swing/JComponent;	e	buildChatPanel
	m	()V	a	start
	m	()V	b	close
	m	()V	f	runFinalizers
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	a	print
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V	b	lambda$print$2
	m	(Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;)V	a	lambda$buildChatPanel$1
	m	(Ljavax/swing/JTextField;Ljava/awt/event/ActionEvent;)V	a	lambda$buildChatPanel$0
	m	()V	<clinit>	<clinit>
c	asx$1	net/minecraft/server/gui/MinecraftServerGui$1
	f	Lasx;	a	val$gui
	f	Ljavax/swing/JFrame;	b	val$frame
	f	Lari;	c	val$server
	m	(Lasx;Ljavax/swing/JFrame;Lari;)V	<init>	<init>
	m	(Ljava/awt/event/WindowEvent;)V	windowClosing	windowClosing
c	asx$2	net/minecraft/server/gui/MinecraftServerGui$2
	m	(Lasx;)V	<init>	<init>
	m	(Ljava/awt/event/FocusEvent;)V	focusGained	focusGained
c	asy	net/minecraft/server/gui/PlayerListComponent
	f	Lnet/minecraft/server/MinecraftServer;	a	server
	f	I	b	tickCount
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	()V	a	tick
c	asz	net/minecraft/server/gui/StatsComponent
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	[I	b	values
	f	I	c	vp
	f	[Ljava/lang/String;	d	msgs
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Ljavax/swing/Timer;	f	timer
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	()V	b	tick
	m	(Ljava/awt/Graphics;)V	paint	paint
	m	()V	a	close
	m	(Ljava/awt/event/ActionEvent;)V	a	lambda$new$1
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ata	net/minecraft/server/gui/package-info
c	atb	net/minecraft/server/level/BlockDestructionProgress
	f	I	a	id
	f	Ljb;	b	pos
	f	I	c	progress
	f	I	d	updatedRenderTick
	m	(ILjb;)V	<init>	<init>
	m	()I	a	getId
	m	()Ljb;	b	getPos
	m	(I)V	a	setProgress
	m	()I	c	getProgress
	m	(I)V	b	updateTick
	m	()I	d	getUpdatedRenderTick
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Latb;)I	a	compareTo
	m	(Ljava/lang/Object;)I	compareTo	compareTo
c	atc	net/minecraft/server/level/ChunkGenerationTask
	f	Latq;	b	chunkMap
	f	Ldlz;	c	pos
	f	Legz;	d	scheduledStatus
	f	Legz;	a	targetStatus
	f	Z	e	markedForCancellation
	f	Ljava/util/List;	f	scheduledLayer
	f	Lbcx;	g	cache
	f	Z	h	needsGeneration
	m	(Latq;Legz;Ldlz;Lbcx;)V	<init>	<init>
	m	(Latq;Legz;Ldlz;)Latc;	a	create
	m	()Ljava/util/concurrent/CompletableFuture;	a	runUntilWait
	m	()V	d	scheduleNextLayer
	m	()V	b	markForCancellation
	m	()V	e	releaseClaim
	m	()Z	f	canLoadWithoutGeneration
	m	()Latr;	c	getCenter
	m	(Legz;Z)V	a	scheduleLayer
	m	(Legz;Z)I	b	getRadiusForLayer
	m	(Legz;ZLatr;)Z	a	scheduleChunkInLayer
	m	()Ljava/util/concurrent/CompletableFuture;	g	waitForScheduledLayer
	m	(Latq;II)Latr;	a	lambda$create$0
c	atd	net/minecraft/server/level/ChunkHolder
	f	Latg;	a	UNLOADED_LEVEL_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	e	UNLOADED_LEVEL_CHUNK_FUTURE
	f	Ldmw;	f	levelHeightAccessor
	f	Ljava/util/concurrent/CompletableFuture;	g	fullChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	h	tickingChunkFuture
	f	Ljava/util/concurrent/CompletableFuture;	i	entityTickingChunkFuture
	f	I	j	oldTicketLevel
	f	I	k	ticketLevel
	f	I	l	queueLevel
	f	Z	m	hasChangedSections
	f	[Lit/unimi/dsi/fastutil/shorts/ShortSet;	n	changedBlocksPerSection
	f	Ljava/util/BitSet;	o	blockChangedLightSectionFilter
	f	Ljava/util/BitSet;	p	skyChangedLightSectionFilter
	f	Lfaa;	q	lightEngine
	f	Latd$a;	r	onLevelChange
	f	Latd$b;	s	playerProvider
	f	Z	t	wasAccessibleSinceLastSave
	f	Ljava/util/concurrent/CompletableFuture;	u	pendingFullStateConfirmation
	f	Ljava/util/concurrent/CompletableFuture;	v	sendSync
	f	Ljava/util/concurrent/CompletableFuture;	w	saveSync
	m	(Ldlz;ILdmw;Lfaa;Latd$a;Latd$b;)V	<init>	<init>
	m	()Ljava/util/concurrent/CompletableFuture;	a	getTickingChunkFuture
	m	()Ljava/util/concurrent/CompletableFuture;	b	getEntityTickingChunkFuture
	m	()Ljava/util/concurrent/CompletableFuture;	c	getFullChunkFuture
	m	()Legi;	d	getTickingChunk
	m	()Legi;	e	getChunkToSend
	m	()Ljava/util/concurrent/CompletableFuture;	f	getSendSyncFuture
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	addSendDependency
	m	()Ljava/util/concurrent/CompletableFuture;	g	getSaveSyncFuture
	m	()Z	h	isReadyForSaving
	m	(Ljava/util/concurrent/CompletableFuture;)V	b	addSaveDependency
	m	(Ljb;)Z	a	blockChanged
	m	(Ldnd;I)Z	a	sectionLightChanged
	m	()Z	i	hasChangesToBroadcast
	m	(Legi;)V	a	broadcastChanges
	m	(Ljava/util/List;Ldmu;Ljb;Leeb;)V	a	broadcastBlockEntityIfNeeded
	m	(Ljava/util/List;Ldmu;Ljb;)V	a	broadcastBlockEntity
	m	(Ljava/util/List;Lzw;)V	a	broadcast
	m	()I	j	getTicketLevel
	m	()I	k	getQueueLevel
	m	(I)V	b	setQueueLevel
	m	(I)V	a	setTicketLevel
	m	(Latf;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Latp;)V	a	scheduleFullChunkPromotion
	m	(Latf;Latp;)V	a	demoteFullChunk
	m	(Latf;Ljava/util/concurrent/Executor;)V	a	updateFutures
	m	()Z	l	wasAccessibleSinceLastSave
	m	()V	m	refreshAccessibility
	m	(Ljava/util/concurrent/CompletableFuture;Latg;)V	a	lambda$scheduleFullChunkPromotion$6
	m	(Ljava/util/concurrent/CompletableFuture;Legi;)V	a	lambda$scheduleFullChunkPromotion$5
	m	(Latf;Latp;)V	b	lambda$scheduleFullChunkPromotion$4
	m	(Lzw;Lauc;)V	a	lambda$broadcast$3
	m	(Ljava/util/List;Ldmu;Ljb;Leeb;)V	b	lambda$broadcastChanges$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$addSaveDependency$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	b	lambda$addSendDependency$0
	m	()V	<clinit>	<clinit>
c	atd$a	net/minecraft/server/level/ChunkHolder$LevelChangeListener
	m	(Ldlz;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
c	atd$b	net/minecraft/server/level/ChunkHolder$PlayerProvider
	m	(Ldlz;Z)Ljava/util/List;	a	getPlayers
c	ate	net/minecraft/server/level/ChunkLevel
	f	I	c	FULL_CHUNK_LEVEL
	f	I	d	BLOCK_TICKING_LEVEL
	f	I	e	ENTITY_TICKING_LEVEL
	f	Lehc;	f	FULL_CHUNK_STEP
	f	I	a	RADIUS_AROUND_FULL_CHUNK
	f	I	b	MAX_LEVEL
	m	()V	<init>	<init>
	m	(I)Legz;	a	generationStatus
	m	(ILegz;)Legz;	a	getStatusAroundFullChunk
	m	(I)Legz;	b	getStatusAroundFullChunk
	m	(Legz;)I	a	byStatus
	m	(I)Latp;	c	fullStatus
	m	(Latp;)I	a	byStatus
	m	(I)Z	d	isEntityTicking
	m	(I)Z	e	isBlockTicking
	m	(I)Z	f	isLoaded
	m	()V	<clinit>	<clinit>
c	ate$1	net/minecraft/server/level/ChunkLevel$1
	f	[I	a	$SwitchMap$net$minecraft$server$level$FullChunkStatus
	m	()V	<clinit>	<clinit>
c	atf	net/minecraft/server/level/ChunkMap
	f	Latg;	f	UNLOADED_CHUNK_LIST_RESULT
	f	Ljava/util/concurrent/CompletableFuture;	g	UNLOADED_CHUNK_LIST_FUTURE
	f	B	h	CHUNK_TYPE_REPLACEABLE
	f	B	i	CHUNK_TYPE_UNKNOWN
	f	B	j	CHUNK_TYPE_FULL
	f	Lorg/slf4j/Logger;	k	LOGGER
	f	I	l	CHUNK_SAVED_PER_TICK
	f	I	m	CHUNK_SAVED_EAGERLY_PER_TICK
	f	I	n	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS
	f	I	o	MAX_ACTIVE_CHUNK_WRITES
	f	I	a	MIN_VIEW_DISTANCE
	f	I	b	MAX_VIEW_DISTANCE
	f	I	c	FORCED_TICKET_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	p	updatingChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	q	visibleChunkMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	r	pendingUnloads
	f	Ljava/util/List;	s	pendingGenerationTasks
	f	Laub;	t	level
	f	Lauf;	u	lightEngine
	f	Lbvx;	v	mainThreadExecutor
	f	Leko;	w	randomState
	f	Lega;	x	chunkGeneratorState
	f	Ljava/util/function/Supplier;	y	overworldDataStorage
	f	Ldnr;	z	ticketStorage
	f	Lclp;	A	poiManager
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	B	toDrop
	f	Z	C	modified
	f	Lath;	D	worldgenTaskDispatcher
	f	Lath;	E	lightTaskDispatcher
	f	Laul;	F	progressListener
	f	Leif;	G	chunkStatusListener
	f	Latf$a;	H	distanceManager
	f	Ljava/util/concurrent/atomic/AtomicInteger;	I	tickingGenerated
	f	Ljava/lang/String;	J	storageName
	f	Latu;	K	playerMap
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	L	entityMap
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	M	chunkTypeCache
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	N	nextChunkSaveTime
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	O	chunksToEagerlySave
	f	Ljava/util/Queue;	P	unloadQueue
	f	Ljava/util/concurrent/atomic/AtomicInteger;	Q	activeChunkWrites
	f	I	R	serverViewDistance
	f	Lehe;	S	worldGenContext
	m	(Laub;Lfcs$c;Lcom/mojang/datafixers/DataFixer;Lezb;Ljava/util/concurrent/Executor;Lbvx;Legl;Lefz;Laul;Leif;Ljava/util/function/Supplier;Ldnr;IZ)V	<init>	<init>
	m	(Ldlz;)V	f	setChunkUnsaved
	m	()Lefz;	a	generator
	m	()Lega;	b	generatorState
	m	()Leko;	c	randomState
	m	(Lauc;II)Z	a	isChunkTracked
	m	(Lauc;II)Z	b	isChunkOnTrackedBorder
	m	()Lauf;	d	getLightEngine
	m	(J)Latd;	a	getUpdatingChunkIfPresent
	m	(J)Latd;	b	getVisibleChunkIfPresent
	m	(J)Ljava/util/function/IntSupplier;	c	getChunkQueueLevel
	m	(Ldlz;)Ljava/lang/String;	a	getChunkDebugData
	m	(Latd;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture;	a	getChunkRangeFuture
	m	(Ljava/lang/IllegalStateException;Ljava/lang/String;)Laa;	a	debugFuturesAndCreateReportedException
	m	(Latd;)Ljava/util/concurrent/CompletableFuture;	a	prepareEntityTickingChunk
	m	(JILatd;I)Latd;	a	updateChunkScheduling
	m	(Ldlz;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	a	onLevelChange
	m	()V	close	close
	m	(Z)V	a	saveAllChunks
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	()Z	e	hasWork
	m	(Ljava/util/function/BooleanSupplier;)V	b	processUnloads
	m	(Ljava/util/function/BooleanSupplier;)V	c	saveChunksEagerly
	m	(JLatd;)V	a	scheduleUnload
	m	()Z	f	promoteChunkMap
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	g	scheduleChunkLoad
	m	(Ljava/lang/Throwable;Ldlz;)Lefy;	a	handleChunkLoadFailure
	m	(Ldlz;)Lefy;	h	createEmptyChunk
	m	(Ldlz;)V	i	markPositionReplaceable
	m	(Ldlz;Lehd;)B	a	markPosition
	m	(J)Latr;	d	acquireGeneration
	m	(Latr;)V	a	releaseGeneration
	m	(Latr;Lehc;Lbcx;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
	m	(Legz;Ldlz;)Latc;	a	scheduleGenerationTask
	m	(Latc;)V	a	runGenerationTask
	m	()V	g	runGenerationTasks
	m	(Latd;)Ljava/util/concurrent/CompletableFuture;	b	prepareTickingChunk
	m	(Latd;Legi;)V	a	onChunkReadyToSend
	m	(Latd;)Ljava/util/concurrent/CompletableFuture;	c	prepareAccessibleChunk
	m	()I	h	getTickingGenerated
	m	(Latd;J)Z	a	saveChunkIfNeeded
	m	(Lefy;)Z	a	save
	m	(Ldlz;)Z	j	isExistingChunkFull
	m	(I)V	a	setServerViewDistance
	m	(Lauc;)I	b	getPlayerViewDistance
	m	(Lauc;Ldlz;)V	a	markChunkPendingToSend
	m	(Lauc;Legi;)V	a	markChunkPendingToSend
	m	(Lauc;Ldlz;)V	b	dropChunk
	m	(J)Legi;	e	getChunkToSend
	m	()I	i	size
	m	()Lato;	j	getDistanceManager
	m	()Ljava/lang/Iterable;	k	getChunks
	m	(Ljava/io/Writer;)V	a	dumpChunks
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String;	a	printFuture
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	k	readChunk
	m	(Lui;)Lui;	b	upgradeChunkTag
	m	(Ljava/util/List;)V	a	collectSpawningChunks
	m	(Ljava/util/function/Consumer;)V	a	forEachBlockTickingChunk
	m	(Ldlz;)Z	b	anyPlayerCloseEnoughForSpawning
	m	(Ldlz;)Z	l	anyPlayerCloseEnoughForSpawningInternal
	m	(Ldlz;)Ljava/util/List;	c	getPlayersCloseForSpawning
	m	(Lauc;Ldlz;)Z	c	playerIsCloseEnoughForSpawning
	m	(Ldlz;Lfis;)D	a	euclideanDistanceSquared
	m	(Lauc;)Z	c	skipPlayer
	m	(Lauc;Z)V	a	updatePlayerStatus
	m	(Lauc;)V	d	updatePlayerPos
	m	(Lauc;)V	a	move
	m	(Lauc;)V	e	updateChunkTracking
	m	(Lauc;Latk;)V	a	applyChunkTrackingView
	m	(Ldlz;Z)Ljava/util/List;	a	getPlayers
	m	(Lbzm;)V	a	addEntity
	m	(Lbzm;)V	b	removeEntity
	m	()V	l	tick
	m	(Lbzm;Lzw;)V	a	broadcast
	m	(Lbzm;Lzw;)V	b	broadcastAndSend
	m	(Ljava/util/List;)V	b	resendBiomesForChunks
	m	()Lclp;	m	getPoiManager
	m	()Ljava/lang/String;	n	getStorageName
	m	(Ldlz;Latp;)V	a	onFullChunkStatusChange
	m	(Ldlz;I)V	a	waitForLightBeforeSending
	m	(Ldlz;)V	m	lambda$waitForLightBeforeSending$41
	m	(Lauc;Ljava/util/List;)V	a	lambda$resendBiomesForChunks$40
	m	(Lauc;)Ljava/util/List;	f	lambda$resendBiomesForChunks$39
	m	(Lauc;Ldlz;)V	d	lambda$applyChunkTrackingView$38
	m	(Lauc;Ldlz;)V	e	lambda$applyChunkTrackingView$37
	m	(Ljava/util/function/Consumer;J)V	a	lambda$forEachBlockTickingChunk$36
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$readChunk$35
	m	(Legi;)Ljava/lang/Integer;	a	lambda$dumpChunks$34
	m	(Legi;)Ljava/lang/Integer;	b	lambda$dumpChunks$33
	m	(Legi;)Ljava/lang/Integer;	c	lambda$dumpChunks$32
	m	(Lefy;)Ljava/util/Optional;	b	lambda$dumpChunks$31
	m	(Ldlz;Ljava/lang/Void;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$save$30
	m	(Latg;)Latg;	a	lambda$prepareAccessibleChunk$29
	m	(Ljava/util/List;)Legi;	c	lambda$prepareAccessibleChunk$28
	m	(Latg;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$prepareTickingChunk$27
	m	(Latd;Latg;)Latg;	a	lambda$prepareTickingChunk$26
	m	(Latd;Ljava/util/List;)Legi;	a	lambda$prepareTickingChunk$25
	m	(Latd;Legi;Ljava/lang/Object;)V	a	lambda$prepareTickingChunk$24
	m	(I)Legz;	b	lambda$prepareTickingChunk$23
	m	(Latc;)V	b	lambda$runGenerationTask$22
	m	(Latc;)V	c	lambda$runGenerationTask$21
	m	(Lp;)V	a	lambda$applyStep$20
	m	(Lehc;)Ljava/lang/String;	a	lambda$applyStep$19
	m	(Ldlz;Ljava/lang/Throwable;)Lefy;	a	lambda$scheduleChunkLoad$18
	m	(Ldlz;Ljava/util/Optional;)Lefy;	a	lambda$scheduleChunkLoad$17
	m	(Ljava/util/Optional;Ljava/lang/Object;)Ljava/util/Optional;	a	lambda$scheduleChunkLoad$16
	m	(Ldlz;Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$scheduleChunkLoad$15
	m	(Ldlz;Lui;)Leht;	a	lambda$scheduleChunkLoad$14
	m	(Latd;Ljava/lang/Void;Ljava/lang/Throwable;)V	a	lambda$scheduleUnload$13
	m	(Latd;Ljava/util/concurrent/CompletableFuture;J)V	a	lambda$scheduleUnload$12
	m	()Z	r	lambda$saveAllChunks$11
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lefy;)V	a	lambda$saveAllChunks$10
	m	(Lefy;)Z	c	lambda$saveAllChunks$9
	m	(Latd;)Lefy;	d	lambda$saveAllChunks$8
	m	(Latg;)Latg;	b	lambda$prepareEntityTickingChunk$7
	m	(Ljava/util/List;)Legi;	d	lambda$prepareEntityTickingChunk$6
	m	(I)Legz;	c	lambda$prepareEntityTickingChunk$5
	m	(Ljava/lang/StringBuilder;Latd;)V	a	lambda$debugFuturesAndCreateReportedException$4
	m	(Ljava/lang/StringBuilder;Latd;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$debugFuturesAndCreateReportedException$3
	m	(Ljava/util/List;)Latg;	e	lambda$getChunkRangeFuture$2
	m	(Latg;)Latg;	c	lambda$getChunkRangeFuture$1
	m	(J)I	f	lambda$getChunkQueueLevel$0
	m	()V	<clinit>	<clinit>
c	atf$a	net/minecraft/server/level/ChunkMap$DistanceManager
	f	Latf;	a	this$0
	m	(Latf;Ldnr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(J)Z	a	isChunkToRemove
	m	(J)Latd;	b	getChunk
	m	(JILatd;I)Latd;	a	updateChunkScheduling
c	atf$b	net/minecraft/server/level/ChunkMap$TrackedEntity
	f	Latz;	b	serverEntity
	f	Lbzm;	c	entity
	f	I	d	range
	f	Lke;	e	lastSectionPos
	f	Ljava/util/Set;	f	seenBy
	f	Latf;	a	this$0
	m	(Latf;Lbzm;IIZ)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lzw;)V	a	broadcast
	m	(Lzw;Ljava/util/List;)V	a	broadcastIgnorePlayers
	m	(Lzw;)V	b	broadcastAndSend
	m	()V	a	broadcastRemoved
	m	(Lauc;)V	a	removePlayer
	m	(Lauc;)V	b	updatePlayer
	m	(I)I	a	scaledRange
	m	()I	b	getEffectiveRange
	m	(Ljava/util/List;)V	a	updatePlayers
c	atg	net/minecraft/server/level/ChunkResult
	m	(Ljava/lang/Object;)Latg;	a	of
	m	(Ljava/lang/String;)Latg;	a	error
	m	(Ljava/util/function/Supplier;)Latg;	a	error
	m	()Z	a	isSuccess
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
	m	(Latg;Ljava/lang/Object;)Ljava/lang/Object;	a	orElse
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/util/function/Consumer;)Latg;	a	ifSuccess
	m	(Ljava/util/function/Function;)Latg;	a	map
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$error$0
c	atg$a	net/minecraft/server/level/ChunkResult$Fail
	f	Ljava/util/function/Supplier;	a	error
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Z	a	isSuccess
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/util/function/Consumer;)Latg;	a	ifSuccess
	m	(Ljava/util/function/Function;)Latg;	a	map
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/Supplier;	c	error
c	atg$b	net/minecraft/server/level/ChunkResult$Success
	f	Ljava/lang/Object;	a	value
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	()Z	a	isSuccess
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	orElse
	m	()Ljava/lang/String;	b	getError
	m	(Ljava/util/function/Consumer;)Latg;	a	ifSuccess
	m	(Ljava/util/function/Function;)Latg;	a	map
	m	(Ljava/util/function/Supplier;)Ljava/lang/Object;	b	orElseThrow
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	c	value
c	ath	net/minecraft/server/level/ChunkTaskDispatcher
	f	I	a	DISPATCHER_PRIORITY_COUNT
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lati;	d	queue
	f	Lbwe;	e	executor
	f	Lbwb;	f	dispatcher
	f	Z	b	sleeping
	m	(Lbwe;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	()Z	a	hasWork
	m	(Ldlz;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V	onLevelChange	onLevelChange
	m	(JLjava/lang/Runnable;Z)V	a	release
	m	(Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)V	a	submit
	m	()V	b	pollTask
	m	(Lati$a;)V	a	scheduleForExecution
	m	(J)V	a	onRelease
	m	()Lati$a;	c	popTasks
	m	()V	close	close
	m	(Ljava/lang/Void;)V	a	lambda$scheduleForExecution$7
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleForExecution$6
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleForExecution$5
	m	(Ljava/lang/Runnable;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$scheduleForExecution$4
	m	()V	d	lambda$pollTask$3
	m	(Ljava/util/function/IntSupplier;JLjava/lang/Runnable;)V	a	lambda$submit$2
	m	(JZLjava/lang/Runnable;)V	a	lambda$release$1
	m	(Ljava/util/function/IntSupplier;Ldlz;ILjava/util/function/IntConsumer;)V	a	lambda$onLevelChange$0
	m	()V	<clinit>	<clinit>
c	ati	net/minecraft/server/level/ChunkTaskPriorityQueue
	f	I	a	PRIORITY_LEVEL_COUNT
	f	Ljava/util/List;	b	queuesPerPriority
	f	I	c	topPriorityQueueIndex
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(ILdlz;I)V	a	resortChunkTasks
	m	(Ljava/lang/Runnable;JI)V	a	submit
	m	(JZ)V	a	release
	m	()Lati$a;	a	pop
	m	()Z	b	hasWork
	m	()Ljava/lang/String;	toString	toString
	m	(J)Ljava/util/List;	a	lambda$submit$2
	m	(J)Ljava/util/List;	b	lambda$resortChunkTasks$1
	m	(I)Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	ati$a	net/minecraft/server/level/ChunkTaskPriorityQueue$TasksForChunk
	f	J	a	chunkPos
	f	Ljava/util/List;	b	tasks
	m	(JLjava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	a	chunkPos
	m	()Ljava/util/List;	b	tasks
c	atj	net/minecraft/server/level/ChunkTracker
	m	(III)V	<init>	<init>
	m	(J)Z	a	isSource
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(J)I	b	getLevelFromSource
	m	(JIZ)V	b	update
c	atk	net/minecraft/server/level/ChunkTrackingView
	f	Latk;	a	EMPTY
	m	(Ldlz;I)Latk;	a	of
	m	(Latk;Latk;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	a	difference
	m	(Ldlz;)Z	a	contains
	m	(II)Z	a	contains
	m	(IIZ)Z	a	contains
	m	(Ljava/util/function/Consumer;)V	a	forEach
	m	(II)Z	b	isInViewDistance
	m	(IIIII)Z	a	isInViewDistance
	m	(IIIIIZ)Z	a	isWithinDistance
	m	()V	<clinit>	<clinit>
c	atk$1	net/minecraft/server/level/ChunkTrackingView$1
	m	()V	<init>	<init>
	m	(IIZ)Z	a	contains
	m	(Ljava/util/function/Consumer;)V	a	forEach
c	atk$a	net/minecraft/server/level/ChunkTrackingView$Positioned
	f	Ldlz;	b	center
	f	I	c	viewDistance
	m	(Ldlz;I)V	<init>	<init>
	m	()I	c	minX
	m	()I	d	minZ
	m	()I	e	maxX
	m	()I	f	maxZ
	m	(Latk$a;)Z	a	squareIntersects
	m	(IIZ)Z	a	contains
	m	(Ljava/util/function/Consumer;)V	a	forEach
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlz;	a	center
	m	()I	b	viewDistance
c	atl	net/minecraft/server/level/ClientInformation
	f	Ljava/lang/String;	b	language
	f	I	c	viewDistance
	f	Lcuq;	d	chatVisibility
	f	Z	e	chatColors
	f	I	f	modelCustomisation
	f	Lcad;	g	mainHand
	f	Z	h	textFilteringEnabled
	f	Z	i	allowsListing
	f	Latt;	j	particleStatus
	f	I	a	MAX_LANGUAGE_LENGTH
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/lang/String;ILcuq;ZILcad;ZZLatt;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	()Latl;	a	createDefault
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	language
	m	()I	c	viewDistance
	m	()Lcuq;	d	chatVisibility
	m	()Z	e	chatColors
	m	()I	f	modelCustomisation
	m	()Lcad;	g	mainHand
	m	()Z	h	textFilteringEnabled
	m	()Z	i	allowsListing
	m	()Latt;	j	particleStatus
c	atm	net/minecraft/server/level/ColumnPos
	f	I	a	x
	f	I	b	z
	f	J	c	COORD_BITS
	f	J	d	COORD_MASK
	m	(II)V	<init>	<init>
	m	()Ldlz;	a	toChunkPos
	m	()J	b	toLong
	m	(II)J	a	asLong
	m	(J)I	a	getX
	m	(J)I	b	getZ
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	x
	m	()I	d	z
c	atn	net/minecraft/server/level/DemoMode
	f	I	a	DEMO_DAYS
	f	I	b	TOTAL_PLAY_TICKS
	f	Z	e	displayedIntro
	f	Z	f	demoHasEnded
	f	I	g	demoEndedReminder
	f	I	h	gameModeTicks
	m	(Lauc;)V	<init>	<init>
	m	()V	a	tick
	m	()V	f	outputDemoReminder
	m	(Ljb;Lait$a;Ljh;II)V	a	handleBlockBreakAction
	m	(Lauc;Ldmu;Ldcv;Lbxi;)Lbxj;	a	useItem
	m	(Lauc;Ldmu;Ldcv;Lbxi;Lfio;)Lbxj;	a	useItemOn
c	ato	net/minecraft/server/level/DistanceManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	c	PLAYER_TICKET_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	d	playersPerChunk
	f	Lats;	e	loadingChunkTracker
	f	Laue;	f	simulationChunkTracker
	f	Ldnr;	g	ticketStorage
	f	Lato$a;	h	naturalSpawnChunkCounter
	f	Lato$b;	i	playerTicketManager
	f	Ljava/util/Set;	b	chunksToUpdateFutures
	f	Laug;	j	ticketDispatcher
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	ticketsToRelease
	f	Ljava/util/concurrent/Executor;	l	mainThreadExecutor
	f	I	m	simulationDistance
	m	(Ldnr;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(J)Z	a	isChunkToRemove
	m	(J)Latd;	b	getChunk
	m	(JILatd;I)Latd;	a	updateChunkScheduling
	m	(Latf;)Z	a	runAllUpdates
	m	(Lke;Lauc;)V	a	addPlayer
	m	(Lke;Lauc;)V	b	removePlayer
	m	()I	e	getPlayerTicketLevel
	m	(J)Z	c	inEntityTickingRange
	m	(J)Z	d	inBlockTickingRange
	m	(JZ)I	a	getChunkLevel
	m	(I)V	a	updatePlayerTickets
	m	(I)V	b	updateSimulationDistance
	m	()I	a	getNaturalSpawnChunkCount
	m	(J)Lbdi;	e	hasPlayersNearby
	m	(Lit/unimi/dsi/fastutil/longs/LongConsumer;)V	a	forEachEntityTickingChunk
	m	()Lit/unimi/dsi/fastutil/longs/LongIterator;	b	getSpawnCandidateChunks
	m	()Ljava/lang/String;	c	getDebugStatus
	m	()Z	d	hasTickets
	m	(J)Lit/unimi/dsi/fastutil/objects/ObjectSet;	f	lambda$addPlayer$4
	m	(JLatg;)V	a	lambda$runAllUpdates$3
	m	(J)V	g	lambda$runAllUpdates$2
	m	()V	f	lambda$runAllUpdates$1
	m	(Lauh;)Z	a	lambda$runAllUpdates$0
	m	()V	<clinit>	<clinit>
c	ato$a	net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	a	chunks
	f	I	b	maxDistance
	f	Lato;	c	this$0
	m	(Lato;I)V	<init>	<init>
	m	(J)I	c	getLevel
	m	(JI)V	a	setLevel
	m	(JII)V	a	onLevelChange
	m	(J)I	b	getLevelFromSource
	m	(J)Z	f	havePlayer
	m	()V	a	runAllUpdates
c	ato$b	net/minecraft/server/level/DistanceManager$PlayerTicketTracker
	f	I	g	viewDistance
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	h	queueLevels
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	i	toUpdate
	f	Lato;	d	this$0
	m	(Lato;I)V	<init>	<init>
	m	(JII)V	a	onLevelChange
	m	(I)V	a	updateViewDistance
	m	(JIZZ)V	a	onLevelChange
	m	()V	a	runAllUpdates
	m	(I)Z	c	haveTicketFor
	m	(JI)V	b	lambda$runAllUpdates$7
	m	(J)I	f	lambda$runAllUpdates$6
	m	(JLauh;)V	a	lambda$onLevelChange$5
	m	(JLauh;)V	b	lambda$onLevelChange$4
	m	(I)I	d	lambda$onLevelChange$3
	m	(JLauh;)V	c	lambda$onLevelChange$2
	m	(JLauh;)V	d	lambda$onLevelChange$1
	m	()V	d	lambda$onLevelChange$0
c	atp	net/minecraft/server/level/FullChunkStatus
	f	Latp;	a	INACCESSIBLE
	f	Latp;	b	FULL
	f	Latp;	c	BLOCK_TICKING
	f	Latp;	d	ENTITY_TICKING
	f	[Latp;	e	$VALUES
	m	()[Latp;	values	values
	m	(Ljava/lang/String;)Latp;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Latp;)Z	a	isOrAfter
	m	()[Latp;	a	$values
	m	()V	<clinit>	<clinit>
c	atq	net/minecraft/server/level/GeneratingChunkMap
	m	(J)Latr;	d	acquireGeneration
	m	(Latr;)V	a	releaseGeneration
	m	(Latr;Lehc;Lbcx;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
	m	(Legz;Ldlz;)Latc;	a	scheduleGenerationTask
	m	()V	g	runGenerationTasks
c	atr	net/minecraft/server/level/GenerationChunkHolder
	f	Ljava/util/List;	a	CHUNK_STATUSES
	f	Latg;	e	NOT_DONE_YET
	f	Latg;	b	UNLOADED_CHUNK
	f	Ljava/util/concurrent/CompletableFuture;	c	UNLOADED_CHUNK_FUTURE
	f	Ldlz;	d	pos
	f	Legz;	f	highestAllowedStatus
	f	Ljava/util/concurrent/atomic/AtomicReference;	g	startedWork
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	h	futures
	f	Ljava/util/concurrent/atomic/AtomicReference;	i	task
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	generationRefCount
	f	Ljava/util/concurrent/CompletableFuture;	k	generationSaveSyncFuture
	m	(Ldlz;)V	<init>	<init>
	m	(Legz;Latf;)Ljava/util/concurrent/CompletableFuture;	a	scheduleChunkGenerationTask
	m	(Lehc;Latq;Lbcx;)Ljava/util/concurrent/CompletableFuture;	a	applyStep
	m	(Latf;)V	a	updateHighestAllowedStatus
	m	(Legh;)V	a	replaceProtoChunk
	m	(Latc;)V	a	removeTask
	m	(Latf;Legz;)V	a	rescheduleChunkTask
	m	(Legz;)Ljava/util/concurrent/CompletableFuture;	c	getOrCreateFuture
	m	(Legz;Legz;)V	a	failAndClearPendingFuturesBetween
	m	(ILjava/util/concurrent/CompletableFuture;)V	a	failAndClearPendingFuture
	m	(Legz;Lefy;)V	a	completeFuture
	m	(Legz;)Legz;	d	findHighestStatusWithPendingFuture
	m	(Legz;)Z	e	acquireStatusBump
	m	(Legz;)Z	f	isStatusDisallowed
	m	(Ljava/util/concurrent/CompletableFuture;)V	b	addSaveDependency
	m	()V	n	increaseGenerationRefCount
	m	()V	o	decreaseGenerationRefCount
	m	(Legz;)Lefy;	a	getChunkIfPresentUnchecked
	m	(Legz;)Lefy;	b	getChunkIfPresent
	m	()Lefy;	p	getLatestChunk
	m	()Legz;	q	getPersistedStatus
	m	()Ldlz;	r	getPos
	m	()Latp;	s	getFullStatus
	m	()I	j	getTicketLevel
	m	()I	k	getQueueLevel
	m	()Ljava/util/List;	t	getAllFutures
	m	()Legz;	u	getLatestStatus
	m	(Lehc;Lefy;Ljava/lang/Throwable;)Latg;	a	lambda$applyStep$0
	m	()V	<clinit>	<clinit>
c	ats	net/minecraft/server/level/LoadingChunkTracker
	f	I	a	MAX_LEVEL
	f	Lato;	b	distanceManager
	f	Ldnr;	c	ticketStorage
	m	(Lato;Ldnr;)V	<init>	<init>
	m	(J)I	b	getLevelFromSource
	m	(J)I	c	getLevel
	m	(JI)V	a	setLevel
	m	(I)I	a	runDistanceUpdates
	m	()V	<clinit>	<clinit>
c	att	net/minecraft/server/level/ParticleStatus
	f	Latt;	a	ALL
	f	Latt;	b	DECREASED
	f	Latt;	c	MINIMAL
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Latt;	g	$VALUES
	m	()[Latt;	values	values
	m	(Ljava/lang/String;)Latt;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getKey
	m	()I	b	getId
	m	(I)Latt;	a	byId
	m	()[Latt;	c	$values
	m	()V	<clinit>	<clinit>
c	atu	net/minecraft/server/level/PlayerMap
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	a	players
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	getAllPlayers
	m	(Lauc;Z)V	a	addPlayer
	m	(Lauc;)V	a	removePlayer
	m	(Lauc;)V	b	ignorePlayer
	m	(Lauc;)V	c	unIgnorePlayer
	m	(Lauc;)Z	d	ignoredOrUnknown
	m	(Lauc;)Z	e	ignored
c	atv	net/minecraft/server/level/PlayerRespawnLogic
	m	()V	<init>	<init>
	m	(Laub;II)Ljb;	a	getOverworldRespawnPos
	m	(Laub;Ldlz;)Ljb;	a	getSpawnPosInChunk
c	atw	net/minecraft/server/level/SectionTracker
	m	(III)V	<init>	<init>
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(JJI)I	a	getComputedLevel
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(J)I	b	getLevelFromSource
	m	(JIZ)V	b	update
c	atx	net/minecraft/server/level/ServerBossEvent
	f	Ljava/util/Set;	h	players
	f	Ljava/util/Set;	i	unmodifiablePlayers
	f	Z	j	visible
	m	(Lxo;Lbwz$a;Lbwz$b;)V	<init>	<init>
	m	(F)V	a	setProgress
	m	(Lbwz$a;)V	a	setColor
	m	(Lbwz$b;)V	a	setOverlay
	m	(Z)Lbwz;	a	setDarkenScreen
	m	(Z)Lbwz;	b	setPlayBossMusic
	m	(Z)Lbwz;	c	setCreateWorldFog
	m	(Lxo;)V	a	setName
	m	(Ljava/util/function/Function;)V	a	broadcast
	m	(Lauc;)V	a	addPlayer
	m	(Lauc;)V	b	removePlayer
	m	()V	b	removeAllPlayers
	m	()Z	g	isVisible
	m	(Z)V	d	setVisible
	m	()Ljava/util/Collection;	h	getPlayers
c	aty	net/minecraft/server/level/ServerChunkCache
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lato;	c	distanceManager
	f	Laub;	d	level
	f	Ljava/lang/Thread;	e	mainThread
	f	Lauf;	f	lightEngine
	f	Laty$a;	g	mainThreadProcessor
	f	Latf;	a	chunkMap
	f	Lfcm;	h	dataStorage
	f	Ldnr;	i	ticketStorage
	f	J	j	lastInhabitedUpdate
	f	Z	k	spawnEnemies
	f	Z	l	spawnFriendlies
	f	I	m	CACHE_SIZE
	f	[J	n	lastChunkPos
	f	[Legz;	o	lastChunkStatus
	f	[Lefy;	p	lastChunk
	f	Ljava/util/List;	q	spawningChunks
	f	Ljava/util/Set;	r	chunkHoldersToBroadcast
	f	Ldnf$d;	s	lastSpawnState
	m	(Laub;Lfcs$c;Lcom/mojang/datafixers/DataFixer;Lezb;Ljava/util/concurrent/Executor;Lefz;IIZLaul;Leif;Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Lauf;	a	getLightEngine
	m	(J)Latd;	b	getVisibleChunkIfPresent
	m	()I	b	getTickingGenerated
	m	(JLefy;Legz;)V	a	storeInCache
	m	(IILegz;Z)Lefy;	a	getChunk
	m	(II)Legi;	a	getChunkNow
	m	()V	s	clearCache
	m	(IILegz;Z)Ljava/util/concurrent/CompletableFuture;	b	getChunkFuture
	m	(IILegz;Z)Ljava/util/concurrent/CompletableFuture;	c	getChunkFutureMainThread
	m	(Latd;I)Z	a	chunkAbsent
	m	(II)Z	b	hasChunk
	m	(II)Legk;	c	getChunkForLighting
	m	()Ldmu;	c	getLevel
	m	()Z	d	pollTask
	m	()Z	t	runDistanceManagerUpdates
	m	(J)Z	a	isPositionTicking
	m	(Z)V	a	save
	m	()V	close	close
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
	m	()V	u	tickChunks
	m	(Lbtt;)V	a	broadcastChangedChunks
	m	(Lbtt;J)V	a	tickChunks
	m	(Legi;JLjava/util/List;Ldnf$d;)V	a	tickSpawningChunk
	m	(JLjava/util/function/Consumer;)V	a	getFullChunk
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	f	getPendingTasksCount
	m	()Lefz;	g	getGenerator
	m	()Lega;	h	getGeneratorState
	m	()Leko;	i	randomState
	m	()I	j	getLoadedChunksCount
	m	(Ljb;)V	a	blockChanged
	m	(Ldnd;Lke;)V	a	onLightUpdate
	m	(Lauh;Ldlz;)V	a	addTicket
	m	(Laui;Ldlz;I)V	a	addTicketWithRadius
	m	(Laui;Ldlz;I)V	b	removeTicketWithRadius
	m	(Ldlz;Z)Z	a	updateChunkForced
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	k	getForceLoadedChunks
	m	(Lauc;)V	a	move
	m	(Lbzm;)V	a	removeEntity
	m	(Lbzm;)V	b	addEntity
	m	(Lbzm;Lzw;)V	a	broadcastAndSend
	m	(Lbzm;Lzw;)V	b	broadcast
	m	(I)V	a	setViewDistance
	m	(I)V	b	setSimulationDistance
	m	(Z)V	b	setSpawnSettings
	m	(Ldlz;)Ljava/lang/String;	a	getChunkDebugData
	m	()Lfcm;	l	getDataStorage
	m	()Lclp;	m	getPoiManager
	m	()Lehh;	n	chunkScanner
	m	()Ldnf$d;	o	getLastSpawnState
	m	()V	p	deactivateTicketsOnClosing
	m	(Latd;)V	a	onChunkReadyToSend
	m	()Lfaa;	q	getLightEngine
	m	()Ldly;	r	getLevel
	m	(Lke;Ldnd;)V	a	lambda$onLightUpdate$4
	m	(ILegi;)V	a	lambda$tickChunks$3
	m	(Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletionStage;	a	lambda$getChunkFuture$2
	m	(IILegz;Z)Ljava/util/concurrent/CompletableFuture;	d	lambda$getChunkFuture$1
	m	(IILegz;Z)Lefy;	e	lambda$getChunk$0
	m	()V	<clinit>	<clinit>
c	aty$a	net/minecraft/server/level/ServerChunkCache$MainThreadExecutor
	f	Laty;	a	this$0
	m	(Laty;Ldmu;)V	<init>	<init>
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	()Z	ax	scheduleExecutables
	m	()Ljava/lang/Thread;	ay	getRunningThread
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	()Z	B	pollTask
	m	(Ljava/util/function/BooleanSupplier;)Z	a	lambda$managedBlock$0
c	atz	net/minecraft/server/level/ServerEntity
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	TOLERANCE_LEVEL_ROTATION
	f	D	d	TOLERANCE_LEVEL_POSITION
	f	I	a	FORCED_POS_UPDATE_PERIOD
	f	I	e	FORCED_TELEPORT_PERIOD
	f	Laub;	f	level
	f	Lbzm;	g	entity
	f	I	h	updateInterval
	f	Z	i	trackDelta
	f	Ljava/util/function/Consumer;	j	broadcast
	f	Ljava/util/function/BiConsumer;	k	broadcastWithIgnore
	f	Lajr;	l	positionCodec
	f	B	m	lastSentYRot
	f	B	n	lastSentXRot
	f	B	o	lastSentYHeadRot
	f	Lfis;	p	lastSentMovement
	f	I	q	tickCount
	f	I	r	teleportDelay
	f	Ljava/util/List;	s	lastPassengers
	f	Z	t	wasRiding
	f	Z	u	wasOnGround
	f	Ljava/util/List;	v	trackedDataValues
	m	(Laub;Lbzm;IZLjava/util/function/Consumer;Ljava/util/function/BiConsumer;)V	<init>	<init>
	m	()V	a	sendChanges
	m	(Ljava/util/List;)Ljava/util/stream/Stream;	a	mountedOrDismounted
	m	(Lcxv;BBZ)V	a	handleMinecartPosRot
	m	(Lauc;)V	a	removePairing
	m	(Lauc;)V	b	addPairing
	m	(Lauc;Ljava/util/function/Consumer;)V	a	sendPairingData
	m	()Lfis;	b	getPositionBase
	m	()Lfis;	c	getLastSentMovement
	m	()F	d	getLastSentXRot
	m	()F	e	getLastSentYRot
	m	()F	f	getLastSentYHeadRot
	m	()V	g	sendDirtyEntityData
	m	(Lzw;)V	a	broadcastAndSend
	m	(Lbzm;)Z	a	lambda$mountedOrDismounted$1
	m	(Ljava/util/List;Lbzm;)Z	a	lambda$mountedOrDismounted$0
	m	()V	<clinit>	<clinit>
c	aua	net/minecraft/server/level/ServerEntityGetter
	m	()Laub;	a	getLevel
	m	(Lclc;Lcam;)Lcut;	a	getNearestPlayer
	m	(Lclc;Lcam;DDD)Lcut;	a	getNearestPlayer
	m	(Lclc;DDD)Lcut;	a	getNearestPlayer
	m	(Ljava/lang/Class;Lclc;Lcam;DDDLfin;)Lcam;	a	getNearestEntity
	m	(Ljava/util/List;Lclc;Lcam;DDD)Lcam;	a	getNearestEntity
	m	(Lclc;Lcam;Lfin;)Ljava/util/List;	a	getNearbyPlayers
	m	(Ljava/lang/Class;Lclc;Lcam;Lfin;)Ljava/util/List;	a	getNearbyEntities
	m	(Lcam;)Z	a	lambda$getNearbyEntities$1
	m	(Lcam;)Z	b	lambda$getNearestEntity$0
c	aub	net/minecraft/server/level/ServerLevel
	f	Ljb;	a	END_SPAWN_POINT
	f	Lbwo;	b	RAIN_DELAY
	f	Lbwo;	c	RAIN_DURATION
	f	Lbwo;	E	THUNDER_DELAY
	f	Lbwo;	d	THUNDER_DURATION
	f	Lorg/slf4j/Logger;	F	LOGGER
	f	I	G	EMPTY_TIME_NO_TICK
	f	I	H	MAX_SCHEDULED_TICKS_PER_TICK
	f	Ljava/util/List;	I	players
	f	Laty;	J	chunkSource
	f	Lnet/minecraft/server/MinecraftServer;	K	server
	f	Lfcx;	L	serverLevelData
	f	I	M	lastSpawnChunkRadius
	f	Leim;	N	entityTickList
	f	Layv;	O	waypointManager
	f	Leir;	P	entityManager
	f	Lejc;	Q	gameEventDispatcher
	f	Z	e	noSave
	f	Laye;	R	sleepStatus
	f	I	S	emptyTime
	f	Lfbj;	T	portalForcer
	f	Lfkh;	U	blockTicks
	f	Lfkh;	V	fluidTicks
	f	Lfbd;	W	pathTypesByPosCache
	f	Ljava/util/Set;	X	navigatingMobs
	f	Z	Y	isUpdatingNavigations
	f	Lcwl;	f	raids
	f	Lit/unimi/dsi/fastutil/objects/ObjectLinkedOpenHashSet;	Z	blockEvents
	f	Ljava/util/List;	aa	blockEventsToReschedule
	f	Z	ab	handlingTick
	f	Ljava/util/List;	ac	customSpawners
	f	Leib;	ad	dragonFight
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	ae	dragonParts
	f	Ldnq;	af	structureManager
	f	Leuz;	ag	structureCheck
	f	Z	ah	tickTime
	f	Lbxp;	ai	randomSequences
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/concurrent/Executor;Lfcs$c;Lfcx;Lamd;Lehz;Laul;ZJLjava/util/List;ZLbxp;)V	<init>	<init>
	m	(Leib;)V	a	setDragonFight
	m	(IIZZ)V	a	setWeatherParameters
	m	(III)Ljl;	a	getUncachedNoiseBiome
	m	()Ldnq;	b	structureManager
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(J)Z	a	shouldTickBlocksAt
	m	()V	c	tickTime
	m	(J)V	b	setDayTime
	m	(ZZ)V	a	tickCustomSpawners
	m	()V	au	wakeUpAllPlayers
	m	(Legi;I)V	a	tickChunk
	m	(Legi;)V	a	tickThunder
	m	(Ljb;)V	a	tickPrecipitation
	m	(Ljb;)Ljava/util/Optional;	G	findLightningRod
	m	(Ljb;)Ljb;	b	findLightningTargetAround
	m	()Z	d	isHandlingTick
	m	()Z	e	canSleepThroughNights
	m	()V	av	announceSleepStatus
	m	()V	f	updateSleepingPlayerList
	m	()Lamx;	g	getScoreboard
	m	()Layv;	h	getWaypointManager
	m	()V	aw	advanceWeatherCycle
	m	()V	i	resetWeatherCycle
	m	()V	j	resetEmptyTime
	m	(Ljb;Lfak;)V	a	tickFluid
	m	(Ljb;Ldpz;)V	c	tickBlock
	m	(Lbzm;)V	a	tickNonPassenger
	m	(Lbzm;Lbzm;)V	a	tickPassenger
	m	(Ljb;Leeb;)V	a	updateNeighboursOnBlockSet
	m	(Lbzm;Ljb;)Z	a	mayInteract
	m	(Lbcj;ZZ)V	a	save
	m	(Z)V	b	saveLevelData
	m	(Lein;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lein;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
	m	(Lein;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
	m	()Ljava/util/List;	k	getDragons
	m	(Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
	m	(Ljava/util/function/Predicate;I)Ljava/util/List;	a	getPlayers
	m	()Lauc;	l	getRandomPlayer
	m	(Lbzm;)Z	b	addFreshEntity
	m	(Lbzm;)Z	c	addWithUUID
	m	(Lbzm;)V	d	addDuringTeleport
	m	(Lauc;)V	a	addNewPlayer
	m	(Lauc;)V	b	addRespawnedPlayer
	m	(Lauc;)V	c	addPlayer
	m	(Lbzm;)Z	i	addEntity
	m	(Lbzm;)Z	e	tryAddFreshEntityWithPassengers
	m	(Legi;)V	b	unload
	m	(Lauc;Lbzm$e;)V	a	removePlayerImmediately
	m	(ILjb;I)V	a	destroyBlockProgress
	m	(Lbzm;DDDLjl;Laza;FFJ)V	a	playSeededSound
	m	(Lbzm;Lbzm;Ljl;Laza;FFJ)V	a	playSeededSound
	m	(ILjb;I)V	b	globalLevelEvent
	m	(Lbzm;ILjb;I)V	a	levelEvent
	m	()I	m	getLogicalHeight
	m	(Ljl;Lfis;Lejb$a;)V	a	gameEvent
	m	(Ljb;Leeb;Leeb;I)V	a	sendBlockUpdated
	m	(Ljb;Ldpz;)V	a	updateNeighborsAt
	m	(Ljb;Ldpz;Lfbt;)V	a	updateNeighborsAt
	m	(Ljb;Ldpz;Ljh;Lfbt;)V	a	updateNeighborsAtExceptFromFacing
	m	(Ljb;Ldpz;Lfbt;)V	b	neighborChanged
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Lbzm;B)V	a	broadcastEntityEvent
	m	(Lbzm;Lbyb;)V	a	broadcastDamageEvent
	m	()Laty;	n	getChunkSource
	m	(Lbzm;Lbyb;Ldmo;DDDFZLdmu$a;Lmc;Lmc;Ljl;)V	a	explode
	m	(Ldmq$e;)Ldmn$a;	a	getDestroyType
	m	(Ljb;Ldpz;II)V	a	blockEvent
	m	()V	ax	runBlockEvents
	m	(Ldlx;)Z	a	doBlockEvent
	m	()Lfkh;	o	getBlockTicks
	m	()Lfkh;	p	getFluidTicks
	m	()Lnet/minecraft/server/MinecraftServer;	q	getServer
	m	()Lfbj;	r	getPortalForcer
	m	()Lezb;	s	getStructureManager
	m	(Lmc;DDDIDDDD)I	a	sendParticles
	m	(Lmc;ZZDDDIDDDD)I	a	sendParticles
	m	(Lauc;Lmc;ZZDDDIDDDD)Z	a	sendParticles
	m	(Lauc;ZDDDLzw;)Z	a	sendParticles
	m	(I)Lbzm;	a	getEntity
	m	(I)Lbzm;	b	getEntityOrPart
	m	()Ljava/util/Collection;	t	dragonParts
	m	(Lbae;Ljb;IZ)Ljb;	a	findNearestMapStructure
	m	(Ljava/util/function/Predicate;Ljb;III)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
	m	()Ldht;	u	recipeAccess
	m	()Lbxt;	v	tickRateManager
	m	()Z	w	noSave
	m	()Lfcm;	x	getDataStorage
	m	(Lfce;)Lfcg;	a	getMapData
	m	(Lfce;Lfcg;)V	a	setMapData
	m	()Lfce;	y	getFreeMapId
	m	(Ljb;F)V	a	setDefaultSpawnPos
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	z	getForceLoadedChunks
	m	(IIZ)Z	a	setChunkForced
	m	()Ljava/util/List;	A	players
	m	(Ljb;Leeb;Leeb;)V	a	updatePOIOnBlockStateChange
	m	()Lclp;	B	getPoiManager
	m	(Ljb;)Z	c	isVillage
	m	(Lke;)Z	a	isVillage
	m	(Ljb;I)Z	a	isCloseToVillage
	m	(Lke;)I	b	sectionsToVillage
	m	()Lcwl;	C	getRaids
	m	(Ljb;)Lcwj;	d	getRaidAt
	m	(Ljb;)Z	e	isRaided
	m	(Lclm;Lbzm;Lcbb;)V	a	onReputationEvent
	m	(Ljava/nio/file/Path;)V	a	saveDebugReport
	m	(Ljava/io/Writer;Ljava/lang/Iterable;)V	a	dumpEntities
	m	(Ljava/io/Writer;)V	a	dumpBlockEntityTickers
	m	(Leuq;)V	a	clearBlockEvents
	m	(Ljh;Z)F	a	getShade
	m	()Ljava/lang/Iterable;	D	getAllEntities
	m	()Ljava/lang/String;	toString	toString
	m	()Z	E	isFlat
	m	()J	F	getSeed
	m	()Leib;	G	getDragonFight
	m	()Laub;	a	getLevel
	m	()Ljava/lang/String;	H	getWatchdogStats
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String;	a	getTypeCount
	m	()Leip;	I	getEntities
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
	m	(Legi;)V	c	startTickingChunk
	m	(Lefy;)V	a	onStructureStartsAvailable
	m	()Lfbd;	J	getPathTypeCache
	m	(Ldlz;I)V	a	waitForChunkAndEntities
	m	()V	close	close
	m	()Ljava/lang/String;	K	gatherChunkSourceStats
	m	(J)Z	c	areEntitiesLoaded
	m	(J)Z	d	isPositionTickingWithEntitiesLoaded
	m	(Ljb;)Z	f	isPositionEntityTicking
	m	(Ldlz;)Z	a	areEntitiesActuallyLoadedAndTicking
	m	(Ljb;)Z	g	anyPlayerCloseEnoughForSpawning
	m	(Ldlz;)Z	b	anyPlayerCloseEnoughForSpawning
	m	(Ldlz;)Z	c	canSpawnEntitiesInChunk
	m	()Lcyd;	L	enabledFeatures
	m	()Ldeq;	M	potionBrewing
	m	()Leby;	N	fuelValues
	m	(Lame;)Lbck;	a	getRandomSequence
	m	()Lbxp;	O	getRandomSequences
	m	()Ldmq;	P	getGameRules
	m	(Lp;)Lq;	a	fillReportDetails
	m	()I	Q	getSeaLevel
	m	()Ldhn;	R	recipeAccess
	m	()Lfjx;	S	getScoreboard
	m	()Legc;	T	getChunkSource
	m	()Lfkg;	U	getFluidTicks
	m	()Lfkg;	V	getBlockTicks
	m	()Ljava/lang/String;	ay	lambda$fillReportDetails$22
	m	(Ljava/util/List;)Z	a	lambda$waitForChunkAndEntities$21
	m	(Ldlz;)V	d	lambda$waitForChunkAndEntities$20
	m	(Lefy;)V	b	lambda$onStructureStartsAvailable$19
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Ljava/lang/String;	a	lambda$getTypeCount$18
	m	(Lbzm;)Ljava/lang/String;	j	lambda$getWatchdogStats$17
	m	(Leuq;Ldlx;)Z	a	lambda$clearBlockEvents$16
	m	(Ljb;Ljl;)V	a	lambda$updatePOIOnBlockStateChange$15
	m	(Ljb;Ljl;)V	b	lambda$updatePOIOnBlockStateChange$14
	m	(Ljb;Ljl;)V	c	lambda$updatePOIOnBlockStateChange$13
	m	(Ljb;)V	H	lambda$updatePOIOnBlockStateChange$12
	m	(Ljb;IILauc;)V	a	lambda$globalLevelEvent$11
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILbzm;)Lbak$a;	a	lambda$getEntities$10
	m	(Lbzm;)Ljava/lang/String;	k	lambda$tickPassenger$9
	m	(Lbzm;)Ljava/lang/String;	l	lambda$tickNonPassenger$8
	m	(Lcam;)Z	a	lambda$findLightningTargetAround$7
	m	(Ljb;)Ljb;	I	lambda$findLightningRod$6
	m	(Ljb;)Z	J	lambda$findLightningRod$5
	m	(Ljl;)Z	a	lambda$findLightningRod$4
	m	(Lauc;)V	d	lambda$wakeUpAllPlayers$3
	m	(Lbxt;Lbtt;Lbzm;)V	a	lambda$tick$2
	m	()Lbxp;	az	lambda$new$1
	m	(Lnet/minecraft/server/MinecraftServer;)Lfcm;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	aub$1	net/minecraft/server/level/ServerLevel$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$Level$ExplosionInteraction
	m	()V	<clinit>	<clinit>
c	aub$a	net/minecraft/server/level/ServerLevel$EntityCallbacks
	f	Laub;	a	this$0
	m	(Laub;)V	<init>	<init>
	m	(Lbzm;)V	a	onCreated
	m	(Lbzm;)V	b	onDestroyed
	m	(Lbzm;)V	c	onTickingStart
	m	(Lbzm;)V	d	onTickingEnd
	m	(Lbzm;)V	e	onTrackingStart
	m	(Lbzm;)V	f	onTrackingEnd
	m	(Lbzm;)V	g	onSectionChange
	m	(Ljava/lang/Object;)V	a	onSectionChange
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
	m	(Ljava/lang/Object;)V	c	onTrackingStart
	m	(Ljava/lang/Object;)V	d	onTickingEnd
	m	(Ljava/lang/Object;)V	e	onTickingStart
	m	(Ljava/lang/Object;)V	f	onDestroyed
	m	(Ljava/lang/Object;)V	g	onCreated
c	auc	net/minecraft/server/level/ServerPlayer
	f	Lorg/slf4j/Logger;	cM	LOGGER
	f	I	cN	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ
	f	I	cO	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y
	f	I	cP	FLY_STAT_RECORDING_SPEED
	f	D	a	BLOCK_INTERACTION_DISTANCE_VERIFICATION_BUFFER
	f	D	b	ENTITY_INTERACTION_DISTANCE_VERIFICATION_BUFFER
	f	I	c	ENDER_PEARL_TICKET_RADIUS
	f	Ljava/lang/String;	d	ENDER_PEARLS_TAG
	f	Ljava/lang/String;	e	ENDER_PEARL_DIMENSION_TAG
	f	Ljava/lang/String;	f	TAG_DIMENSION
	f	Lcbq;	cQ	CREATIVE_BLOCK_INTERACTION_RANGE_MODIFIER
	f	Lcbq;	cR	CREATIVE_ENTITY_INTERACTION_RANGE_MODIFIER
	f	Lxo;	cS	SPAWN_SET_MESSAGE
	f	Lcbq;	cT	WAYPOINT_TRANSMIT_RANGE_CROUCH_MODIFIER
	f	Z	cU	DEFAULT_SEEN_CREDITS
	f	Z	cV	DEFAULT_SPAWN_EXTRA_PARTICLES_ON_FALL
	f	Lavf;	g	connection
	f	Lnet/minecraft/server/MinecraftServer;	cW	server
	f	Laud;	h	gameMode
	f	Lamm;	cX	advancements
	f	Lazf;	cY	stats
	f	F	cZ	lastRecordedHealthAndAbsorption
	f	I	da	lastRecordedFoodLevel
	f	I	db	lastRecordedAirLevel
	f	I	dc	lastRecordedArmor
	f	I	dd	lastRecordedLevel
	f	I	de	lastRecordedExperience
	f	F	df	lastSentHealth
	f	I	dg	lastSentFood
	f	Z	dh	lastFoodSaturationZero
	f	I	di	lastSentExp
	f	Lcuq;	dj	chatVisibility
	f	Latt;	dk	particleStatus
	f	Z	dl	canChatColor
	f	J	dm	lastActionTime
	f	Lbzm;	dn	camera
	f	Z	do	isChangingDimension
	f	Z	i	seenCredits
	f	Laze;	dp	recipeBook
	f	Lfis;	dq	levitationStartPos
	f	I	dr	levitationStartTime
	f	Z	ds	disconnected
	f	I	dt	requestedViewDistance
	f	Ljava/lang/String;	du	language
	f	Lfis;	dv	startingToFallPosition
	f	Lfis;	dw	enteredNetherPosition
	f	Lfis;	dx	enteredLavaOnVehiclePosition
	f	Lke;	dy	lastSectionPos
	f	Latk;	dz	chunkTrackingView
	f	Lauc$a;	dA	respawnConfig
	f	Lavl;	dB	textFilter
	f	Z	dC	textFilteringEnabled
	f	Z	dD	allowsListing
	f	Z	dE	spawnExtraParticlesOnFall
	f	Lcty;	dF	wardenSpawnTracker
	f	Ljb;	dG	raidOmenPosition
	f	Lfis;	dH	lastKnownClientMovement
	f	Lcur;	dI	lastClientInput
	f	Ljava/util/Set;	dJ	enderPearls
	f	Lczb;	dK	containerSynchronizer
	f	Lcza;	dL	containerListener
	f	Lyf;	dM	chatSession
	f	Ljava/lang/Object;	j	object
	f	Lej;	dN	commandSource
	f	I	dO	containerCounter
	f	Z	k	wonGame
	m	(Lnet/minecraft/server/MinecraftServer;Laub;Lcom/mojang/authlib/GameProfile;Latl;)V	<init>	<init>
	m	(Laub;Ljb;)Ljb;	a	adjustSpawnLocation
	m	(Laub;Lfin;)Z	a	noCollisionNoLiquid
	m	(I)I	t	getCoprime
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfdc;)V	e	saveParentVehicle
	m	(Lfda;)V	b	loadAndSpawnParentVehicle
	m	(Lfdc;)V	f	saveEnderPearls
	m	(Lfda;)V	c	loadAndSpawnEnderPearls
	m	(Lfda;)V	f	loadAndSpawnEnderPearl
	m	(I)V	a	setExperiencePoints
	m	(I)V	b	setExperienceLevels
	m	(I)V	c	giveExperienceLevels
	m	(Ldcv;I)V	a	onEnchantmentPerformed
	m	(Lcym;)V	a	initMenu
	m	()V	c	initInventoryMenu
	m	()V	h_	onEnterCombat
	m	()V	P_	onLeaveCombat
	m	(Leeb;)V	a	onInsideBlock
	m	()Ldcs;	f	createItemCooldowns
	m	()V	g	tick
	m	()V	hc	updatePlayerAttributes
	m	()V	h	doTick
	m	(Ldcv;)V	i	synchronizeSpecialItemUpdates
	m	()V	i	tickRegeneration
	m	()V	j	resetFallDistance
	m	()V	k	trackStartFallingPosition
	m	()V	l	trackEnteredOrExitedLavaOnVehicle
	m	(Lfka;I)V	a	updateScoreForCriteria
	m	(Lbyb;)V	a	die
	m	()V	hd	tellNeutralMobsThatIDied
	m	(Lbzm;Lbyb;)V	a	awardKillScore
	m	(Lfjw;Lfjw;[Lfka;)V	a	handleTeamKill
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lcut;)Z	a	canHarmPlayer
	m	()Z	he	isPvpAllowed
	m	(ZLfbl$a;)Lfbl;	a	findRespawnPositionAndUseSpawnBlock
	m	()Z	m	isReceivingWaypoints
	m	(Ljl;)V	a	onAttributeUpdated
	m	(Laub;Lauc$a;Z)Ljava/util/Optional;	a	findRespawnAndUseSpawnBlock
	m	()V	n	showEndCredits
	m	(Lfbl;)Lauc;	a	teleport
	m	(FF)V	a	forceSetRotation
	m	(Laub;)V	g	triggerDimensionChangeTriggers
	m	(Lauc;)Z	a	broadcastToPlayer
	m	(Lbzm;I)V	a	take
	m	(Ljb;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
	m	(Ljb;)V	b	startSleeping
	m	(Ljb;Ljh;)Z	a	bedInRange
	m	(Ljb;)Z	i	isReachableBedBlock
	m	(Ljb;Ljh;)Z	b	bedBlocked
	m	(ZZ)V	a	stopSleepInBed
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	(Laub;Ljb;)V	b	onChangedBlock
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	(Lbzm;)V	a	onExplosionHit
	m	()V	o	pushEntities
	m	(Lecn;Z)V	a	openTextEdit
	m	(Ljl;)V	b	openDialog
	m	()V	hf	nextContainerCounter
	m	(Lbxm;)Ljava/util/OptionalInt;	a	openMenu
	m	(ILdlr;IIZZ)V	a	sendMerchantOffers
	m	(Lcoq;Lbxc;)V	a	openHorseInventory
	m	(Ldcv;Lbxi;)V	a	openItemGui
	m	(Lebk;)V	a	openCommandBlock
	m	()V	p	closeContainer
	m	()V	q	doCloseContainer
	m	()V	r	rideTick
	m	(DDD)V	a	checkMovementStatistics
	m	(DDD)V	q	checkRidingStatistics
	m	(DDD)Z	r	didNotMove
	m	(Lazg;I)V	a	awardStat
	m	(Lazg;)V	a	resetStat
	m	(Ljava/util/Collection;)I	a	awardRecipes
	m	(Ldhr;Ljava/util/List;)V	a	triggerRecipeCrafted
	m	(Ljava/util/List;)V	b	awardRecipesByKey
	m	(Ljava/util/Collection;)I	b	resetRecipes
	m	()V	s	jumpFromGround
	m	(I)V	d	giveExperiencePoints
	m	()V	t	disconnect
	m	()Z	u	hasDisconnected
	m	()V	v	resetSentInfo
	m	(Lxo;Z)V	a	displayClientMessage
	m	()V	w	completeUsingItem
	m	(Lex$a;Lfis;)V	a	lookAt
	m	(Lex$a;Lbzm;Lex$a;)V	a	lookAt
	m	(Lauc;Z)V	a	restoreFrom
	m	(Lbyq;Lbzm;)V	a	onEffectAdded
	m	(Lbyq;ZLbzm;)V	a	onEffectUpdated
	m	(Ljava/util/Collection;)V	c	onEffectsRemoved
	m	(DDD)V	b	teleportTo
	m	(DDD)V	c	teleportRelative
	m	(Laub;DDDLjava/util/Set;FFZ)Z	a	teleportTo
	m	(DDD)V	d	snapTo
	m	(Lbzm;)V	b	crit
	m	(Lbzm;)V	c	magicCrit
	m	()V	x	onUpdateAbilities
	m	()Laub;	y	level
	m	(Ldmr;)Z	a	setGameMode
	m	()Ldmr;	a	gameMode
	m	()Lej;	z	commandSource
	m	()Lek;	A	createCommandSourceStack
	m	(Lxo;)V	a	sendSystemMessage
	m	(Lxo;Z)V	b	sendSystemMessage
	m	(Lyd;ZLxk$a;)V	a	sendChatMessage
	m	()Ljava/lang/String;	B	getIpAddress
	m	(Latl;)V	a	updateOptions
	m	()Latl;	C	clientInformation
	m	()Z	D	canChatInColor
	m	()Lcuq;	E	getChatVisibility
	m	(Z)Z	y	acceptsSystemMessages
	m	()Z	hg	acceptsChatMessages
	m	()I	F	requestedViewDistance
	m	(Lalb;)V	a	sendServerStatus
	m	()I	G	getPermissionLevel
	m	()V	H	resetLastActionTime
	m	()Lazf;	I	getStats
	m	()Laze;	J	getRecipeBook
	m	()V	K	updateInvisibilityStatus
	m	()Lbzm;	L	getCamera
	m	(Lbzm;)V	d	setCamera
	m	()V	M	processPortalCooldown
	m	(Lbzm;)V	e	attack
	m	()J	N	getLastActionTime
	m	()Lxo;	O	getTabListDisplayName
	m	()I	P	getTabListOrder
	m	(Lbxi;)V	a	swing
	m	()Z	Q	isChangingDimension
	m	()V	R	hasChangedDimension
	m	()Lamm;	S	getAdvancements
	m	()Lauc$a;	T	getRespawnConfig
	m	(Lauc;)V	b	copyRespawnPosition
	m	(Lauc$a;Z)V	a	setRespawnPosition
	m	()Lke;	U	getLastSectionPos
	m	(Lke;)V	a	setLastSectionPos
	m	()Latk;	V	getChunkTrackingView
	m	(Latk;)V	a	setChunkTrackingView
	m	(Layy;Laza;FF)V	a	playNotifySound
	m	(Ldcv;ZZ)Lcqz;	a	drop
	m	()Lavl;	W	getTextFilter
	m	(Laub;)V	a	setServerLevel
	m	(Lfda;Ljava/lang/String;)Ldmr;	a	readPlayerMode
	m	(Ldmr;)Ldmr;	b	calculateGameModeForNewPlayer
	m	(Lfda;)V	d	loadGameTypes
	m	(Lfdc;)V	g	storeGameTypes
	m	()Z	X	isTextFilteringEnabled
	m	(Lauc;)Z	c	shouldFilterMessageTo
	m	(Laub;Ljb;)Z	c	mayInteract
	m	(Ldcv;)V	a	updateUsingItem
	m	(Z)Z	a	drop
	m	(Ldcv;)V	b	handleExtraItemsCreatedOnUse
	m	()Z	Y	allowsListing
	m	()Ljava/util/Optional;	Z	getWardenSpawnTracker
	m	(Z)V	b	setSpawnExtraParticlesOnFall
	m	(Lcqz;)V	a	onItemPickup
	m	(Lyf;)V	a	setChatSession
	m	()Lyf;	aa	getChatSession
	m	(DD)V	a	indicateDamage
	m	(Lbzm;Z)Z	a	startRiding
	m	()V	ab	removeVehicle
	m	(Laub;)Lahh;	b	createCommonSpawnInfo
	m	(Ljb;)V	c	setRaidOmenPosition
	m	()V	ac	clearRaidOmenPosition
	m	()Ljb;	ad	getRaidOmenPosition
	m	()Lfis;	ae	getKnownMovement
	m	(Lfis;)V	a	setKnownMovement
	m	(Lbzm;FLbyb;)F	a	getEnchantedDamage
	m	(Ldcr;Lbzw;)V	a	onEquippedItemBroken
	m	()Lcur;	af	getLastClientInput
	m	(Lcur;)V	a	setLastClientInput
	m	()Lfis;	ag	getLastClientMoveIntent
	m	(Lcvy;)V	a	registerEnderPearl
	m	(Lcvy;)V	b	deregisterEnderPearl
	m	()Ljava/util/Set;	ah	getEnderPearls
	m	(Lcvy;)J	c	registerAndUpdateEnderPearlTicket
	m	(Laub;Ldlz;)J	a	placeEnderPearlTicket
	m	()Ldmu;	ai	level
	m	(Lfbl;)Lbzm;	b	teleport
	m	(Lcus;I)V	a	lambda$drop$20
	m	(Lxo;)Lzw;	c	lambda$sendSystemMessage$19
	m	(Lamd;)Ljava/util/stream/Stream;	a	lambda$awardRecipesByKey$18
	m	(ILfjv;)V	a	lambda$awardStat$17
	m	(Lbdk;)V	a	lambda$startSleepInBed$16
	m	(Lcrv;)Z	a	lambda$startSleepInBed$15
	m	(Ljb;Lfis;)Lauc$b;	a	lambda$findRespawnAndUseSpawnBlock$14
	m	(Ljb;Lfis;)Lauc$b;	b	lambda$findRespawnAndUseSpawnBlock$13
	m	(Lcao;)V	a	lambda$tellNeutralMobsThatIDied$12
	m	(Lcao;)Z	b	lambda$tellNeutralMobsThatIDied$11
	m	(Lxo;)Lzw;	d	lambda$die$10
	m	(Lxo;Lyl;)Lyl;	a	lambda$die$9
	m	(ILfjv;)V	b	lambda$updateScoreForCriteria$8
	m	(Laub;Lbzm;)Lbzm;	d	lambda$loadAndSpawnEnderPearl$7
	m	(Laub;Lbzm;)Lbzm;	e	lambda$loadAndSpawnParentVehicle$6
	m	(Laze$b;)V	a	lambda$readAdditionalSaveData$5
	m	(Lamd;)Z	b	lambda$readAdditionalSaveData$4
	m	(II)Ljava/lang/String;	a	lambda$adjustSpawnLocation$3
	m	(II)Ljava/lang/String;	b	lambda$adjustSpawnLocation$2
	m	(I)Ljava/lang/String;	u	lambda$adjustSpawnLocation$1
	m	(Lnet/minecraft/server/MinecraftServer;Lamd;Ljava/util/function/Consumer;)V	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	auc$1	net/minecraft/server/level/ServerPlayer$1
	f	Lcom/google/common/cache/LoadingCache;	b	cache
	f	Lauc;	a	this$0
	m	(Lauc;)V	<init>	<init>
	m	(Lcym;Ljava/util/List;Ldcv;[I)V	a	sendInitialData
	m	(Lcym;ILdcv;)V	a	sendSlotChange
	m	(Lcym;Ldcv;)V	a	sendCarriedChange
	m	(Lcym;II)V	a	sendDataChange
	m	(Lcym;II)V	b	broadcastDataValue
	m	()Ldae;	a	createSlot
c	auc$1$1	net/minecraft/server/level/ServerPlayer$1$1
	f	Lcom/mojang/serialization/DynamicOps;	b	registryHashOps
	f	Lauc$1;	a	this$1
	m	(Lauc$1;)V	<init>	<init>
	m	(Lks;)Ljava/lang/Integer;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
	m	(Lks;Ljava/lang/String;)Ljava/lang/IllegalArgumentException;	a	lambda$load$0
c	auc$2	net/minecraft/server/level/ServerPlayer$2
	f	Lauc;	a	this$0
	m	(Lauc;)V	<init>	<init>
	m	(Lcym;ILdcv;)V	a	slotChanged
	m	(Lcym;II)V	a	dataChanged
c	auc$3	net/minecraft/server/level/ServerPlayer$3
	f	Lauc;	b	this$0
	m	(Lauc;)V	<init>	<init>
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	(Lxo;)V	a	sendSystemMessage
c	auc$a	net/minecraft/server/level/ServerPlayer$RespawnConfig
	f	Lamd;	b	dimension
	f	Ljb;	c	pos
	f	F	d	angle
	f	Z	e	forced
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lamd;Ljb;FZ)V	<init>	<init>
	m	(Lauc$a;)Lamd;	b	getDimensionOrDefault
	m	(Lauc$a;)Z	a	isSamePosition
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	dimension
	m	()Ljb;	b	pos
	m	()F	c	angle
	m	()Z	d	forced
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	auc$b	net/minecraft/server/level/ServerPlayer$RespawnPosAngle
	f	Lfis;	a	position
	f	F	b	yaw
	m	(Lfis;F)V	<init>	<init>
	m	(Lfis;Ljb;)Lauc$b;	a	of
	m	(Lfis;Ljb;)F	b	calculateLookAtYaw
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	position
	m	()F	b	yaw
c	aud	net/minecraft/server/level/ServerPlayerGameMode
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laub;	c	level
	f	Lauc;	d	player
	f	Ldmr;	b	gameModeForPlayer
	f	Ldmr;	e	previousGameModeForPlayer
	f	Z	f	isDestroyingBlock
	f	I	g	destroyProgressStart
	f	Ljb;	h	destroyPos
	f	I	i	gameTicks
	f	Z	j	hasDelayedDestroy
	f	Ljb;	k	delayedDestroyPos
	f	I	l	delayedTickStart
	f	I	m	lastSentState
	m	(Lauc;)V	<init>	<init>
	m	(Ldmr;)Z	a	changeGameModeForPlayer
	m	(Ldmr;Ldmr;)V	a	setGameModeForPlayer
	m	()Ldmr;	b	getGameModeForPlayer
	m	()Ldmr;	c	getPreviousGameModeForPlayer
	m	()Z	d	isSurvival
	m	()Z	e	isCreative
	m	()V	a	tick
	m	(Leeb;Ljb;I)F	a	incrementDestroyProgress
	m	(Ljb;ZILjava/lang/String;)V	a	debugLogging
	m	(Ljb;Lait$a;Ljh;II)V	a	handleBlockBreakAction
	m	(Ljb;ILjava/lang/String;)V	a	destroyAndAck
	m	(Ljb;)Z	a	destroyBlock
	m	(Lauc;Ldmu;Ldcv;Lbxi;)Lbxj;	a	useItem
	m	(Lauc;Ldmu;Ldcv;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Laub;)V	a	setLevel
	m	(Ldcr;)V	a	lambda$handleBlockBreakAction$0
	m	()V	<clinit>	<clinit>
c	aue	net/minecraft/server/level/SimulationChunkTracker
	f	I	a	MAX_LEVEL
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	chunks
	f	Ldnr;	c	ticketStorage
	m	(Ldnr;)V	<init>	<init>
	m	(J)I	b	getLevelFromSource
	m	(Ldlz;)I	a	getLevel
	m	(J)I	c	getLevel
	m	(JI)V	a	setLevel
	m	()V	a	runAllUpdates
c	auf	net/minecraft/server/level/ThreadedLevelLightEngine
	f	I	a	DEFAULT_BATCH_SIZE
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lbvy;	f	consecutiveExecutor
	f	Lit/unimi/dsi/fastutil/objects/ObjectList;	g	lightTasks
	f	Latf;	h	chunkMap
	f	Lath;	i	taskDispatcher
	f	I	j	taskPerBatch
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	k	scheduled
	m	(Legl;Latf;ZLbvy;Lath;)V	<init>	<init>
	m	()V	close	close
	m	()I	a	runLightUpdates
	m	(Ljb;)V	a	checkBlock
	m	(Ldlz;)V	a	updateChunkStatus
	m	(Lke;Z)V	a	updateSectionStatus
	m	(Ldlz;)V	b	propagateLightSources
	m	(Ldlz;Z)V	a	setLightEnabled
	m	(Ldnd;Lke;Legd;)V	a	queueSectionData
	m	(IILauf$a;Ljava/lang/Runnable;)V	a	addTask
	m	(IILjava/util/function/IntSupplier;Lauf$a;Ljava/lang/Runnable;)V	a	addTask
	m	(Ldlz;Z)V	b	retainData
	m	(Lefy;Z)Ljava/util/concurrent/CompletableFuture;	a	initializeLight
	m	(Lefy;Z)Ljava/util/concurrent/CompletableFuture;	b	lightChunk
	m	()V	b	tryScheduleUpdate
	m	()V	f	runUpdate
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	waitForPendingTasks
	m	(IILjava/lang/Runnable;)V	a	lambda$waitForPendingTasks$29
	m	()V	g	lambda$waitForPendingTasks$28
	m	()V	h	lambda$tryScheduleUpdate$27
	m	(Ldlz;Ljava/lang/Runnable;)V	a	lambda$lightChunk$26
	m	(Lefy;)Lefy;	a	lambda$lightChunk$25
	m	(Ldlz;Z)Ljava/lang/String;	c	lambda$lightChunk$24
	m	(ZLdlz;)V	a	lambda$lightChunk$23
	m	(Ldlz;Ljava/lang/Runnable;)V	b	lambda$initializeLight$22
	m	(Ldlz;ZLefy;)Lefy;	a	lambda$initializeLight$21
	m	(Ldlz;)Ljava/lang/String;	c	lambda$initializeLight$20
	m	(Lefy;Ldlz;)V	a	lambda$initializeLight$19
	m	(Ldlz;)Ljava/lang/String;	d	lambda$retainData$18
	m	(Ldlz;Z)V	d	lambda$retainData$17
	m	()I	i	lambda$retainData$16
	m	(Lauf$a;Ljava/lang/Runnable;)V	a	lambda$addTask$15
	m	(Lke;)Ljava/lang/String;	a	lambda$queueSectionData$14
	m	(Ldnd;Lke;Legd;)V	b	lambda$queueSectionData$13
	m	()I	j	lambda$queueSectionData$12
	m	(Ldlz;Z)Ljava/lang/String;	e	lambda$setLightEnabled$11
	m	(Ldlz;Z)V	f	lambda$setLightEnabled$10
	m	(Ldlz;)Ljava/lang/String;	e	lambda$propagateLightSources$9
	m	(Ldlz;)V	f	lambda$propagateLightSources$8
	m	(Lke;Z)Ljava/lang/String;	b	lambda$updateSectionStatus$7
	m	(Lke;Z)V	c	lambda$updateSectionStatus$6
	m	()I	k	lambda$updateSectionStatus$5
	m	(Ldlz;)Ljava/lang/String;	g	lambda$updateChunkStatus$4
	m	(Ldlz;)V	h	lambda$updateChunkStatus$3
	m	()I	l	lambda$updateChunkStatus$2
	m	(Ljb;)Ljava/lang/String;	b	lambda$checkBlock$1
	m	(Ljb;)V	c	lambda$checkBlock$0
	m	()V	<clinit>	<clinit>
c	auf$a	net/minecraft/server/level/ThreadedLevelLightEngine$TaskType
	f	Lauf$a;	a	PRE_UPDATE
	f	Lauf$a;	b	POST_UPDATE
	f	[Lauf$a;	c	$VALUES
	m	()[Lauf$a;	values	values
	m	(Ljava/lang/String;)Lauf$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lauf$a;	a	$values
	m	()V	<clinit>	<clinit>
c	aug	net/minecraft/server/level/ThrottlingChunkTaskDispatcher
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	chunkPositionsInExecution
	f	I	d	maxChunksInExecution
	f	Ljava/lang/String;	e	executorSchedulerName
	m	(Lbwe;Ljava/util/concurrent/Executor;I)V	<init>	<init>
	m	(J)V	a	onRelease
	m	()Lati$a;	c	popTasks
	m	(Lati$a;)V	a	scheduleForExecution
	m	()Ljava/lang/String;	d	getDebugStatus
	m	(J)Ljava/lang/String;	b	lambda$getDebugStatus$0
c	auh	net/minecraft/server/level/Ticket
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Laui;	b	type
	f	I	c	ticketLevel
	f	J	d	ticksLeft
	m	(Laui;I)V	<init>	<init>
	m	(Laui;IJ)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Laui;	a	getType
	m	()I	b	getTicketLevel
	m	()V	c	resetTicksLeft
	m	()V	d	decreaseTicksLeft
	m	()Z	e	isTimedOut
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lauh;)Ljava/lang/Long;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	aui	net/minecraft/server/level/TicketType
	f	J	j	timeout
	f	Z	k	persist
	f	Laui$a;	l	use
	f	J	a	NO_TIMEOUT
	f	Laui;	b	START
	f	Laui;	c	DRAGON
	f	Laui;	d	PLAYER_LOADING
	f	Laui;	e	PLAYER_SIMULATION
	f	Laui;	f	FORCED
	f	Laui;	g	PORTAL
	f	Laui;	h	ENDER_PEARL
	f	Laui;	i	UNKNOWN
	m	(JZLaui$a;)V	<init>	<init>
	m	(Ljava/lang/String;JZLaui$a;)Laui;	a	register
	m	()Z	a	doesLoad
	m	()Z	b	doesSimulate
	m	()Z	c	hasTimeout
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	d	timeout
	m	()Z	e	persist
	m	()Laui$a;	f	use
	m	()V	<clinit>	<clinit>
c	aui$a	net/minecraft/server/level/TicketType$TicketUse
	f	Laui$a;	a	LOADING
	f	Laui$a;	b	SIMULATION
	f	Laui$a;	c	LOADING_AND_SIMULATION
	f	[Laui$a;	d	$VALUES
	m	()[Laui$a;	values	values
	m	(Ljava/lang/String;)Laui$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Laui$a;	a	$values
	m	()V	<clinit>	<clinit>
c	auj	net/minecraft/server/level/WorldGenRegion
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbcx;	b	cache
	f	Lefy;	c	center
	f	Laub;	d	level
	f	J	e	seed
	f	Lfco;	f	levelData
	f	Lbck;	h	random
	f	Lehy;	i	dimensionType
	f	Lfkp;	j	blockTicks
	f	Lfkp;	k	fluidTicks
	f	Ldnz;	l	biomeManager
	f	Lehc;	m	generatingStep
	f	Ljava/util/function/Supplier;	n	currentlyGenerating
	f	Ljava/util/concurrent/atomic/AtomicLong;	o	subTickCount
	f	Lame;	p	WORLDGEN_REGION_RANDOM
	m	(Laub;Lbcx;Lehc;Lefy;)V	<init>	<init>
	m	(Ldlz;I)Z	a	isOldChunkAround
	m	()Ldlz;	b	getCenter
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
	m	(II)Lefy;	a	getChunk
	m	(IILegz;Z)Lefy;	a	getChunk
	m	(II)Z	b	hasChunk
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(DDDDLjava/util/function/Predicate;)Lcut;	a	getNearestPlayer
	m	()I	E_	getSkyDarken
	m	()Ldnz;	I_	getBiomeManager
	m	(III)Ljl;	a	getUncachedNoiseBiome
	m	(Ljh;Z)F	a	getShade
	m	()Lfaa;	C_	getLightEngine
	m	(Ljb;ZLbzm;I)Z	a	destroyBlock
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;)Z	f_	ensureCanWrite
	m	(Ljb;Leeb;II)Z	a	setBlock
	m	(Ljb;)V	f	markPosForPostprocessing
	m	(Lbzm;)Z	b	addFreshEntity
	m	(Ljb;Z)Z	a	removeBlock
	m	()Left;	F_	getWorldBorder
	m	()Z	B_	isClientSide
	m	()Laub;	a	getLevel
	m	()Ljz;	K_	registryAccess
	m	()Lcyd;	L	enabledFeatures
	m	()Lfco;	D_	getLevelData
	m	(Ljb;)Lbxh;	d_	getCurrentDifficultyAt
	m	()Lnet/minecraft/server/MinecraftServer;	q	getServer
	m	()Legc;	T	getChunkSource
	m	()J	F	getSeed
	m	()Lfkg;	V	getBlockTicks
	m	()Lfkg;	U	getFluidTicks
	m	()I	Q	getSeaLevel
	m	()Lbck;	H_	getRandom
	m	(Leka$a;II)I	a	getHeight
	m	(Lbzm;Ljb;Layy;Laza;FF)V	a	playSound
	m	(Lmc;DDDDDD)V	a	addParticle
	m	(Lbzm;ILjb;I)V	a	levelEvent
	m	(Ljl;Lfis;Lejb$a;)V	a	gameEvent
	m	()Lehy;	G_	dimensionType
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Ljb;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
	m	(Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lbzm;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	()Ljava/util/List;	A	players
	m	()I	L_	getMinY
	m	()I	M_	getHeight
	m	()J	J_	nextSubTickCount
	m	(Legz;)Ljava/lang/String;	a	lambda$getChunk$4
	m	(Latr;)Ljava/lang/String;	a	lambda$getChunk$3
	m	()Ljava/lang/String;	o	lambda$getChunk$2
	m	(Ljb;)Lfkn;	g	lambda$new$1
	m	(Ljb;)Lfkn;	k	lambda$new$0
	m	()V	<clinit>	<clinit>
c	auk	net/minecraft/server/level/package-info
c	aul	net/minecraft/server/level/progress/ChunkProgressListener
	m	(Ldlz;)V	a	updateSpawnPos
	m	(Ldlz;Legz;)V	a	onStatusChange
	m	()V	a	start
	m	()V	b	stop
	m	(I)I	a	calculateDiameter
c	aum	net/minecraft/server/level/progress/ChunkProgressListenerFactory
	m	(I)Laul;	create	create
c	aun	net/minecraft/server/level/progress/LoggerChunkProgressListener
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	maxCount
	f	I	c	count
	f	J	d	startTime
	f	J	e	nextTickTime
	m	(I)V	<init>	<init>
	m	(I)Laun;	b	createFromGameruleRadius
	m	(I)Laun;	c	create
	m	()Laun;	c	createCompleted
	m	(Ldlz;)V	a	updateSpawnPos
	m	(Ldlz;Legz;)V	a	onStatusChange
	m	()V	a	start
	m	()V	b	stop
	m	()I	d	getProgress
	m	()V	<clinit>	<clinit>
c	auo	net/minecraft/server/level/progress/ProcessorChunkProgressListener
	f	Laul;	a	delegate
	f	Lbvy;	b	consecutiveExecutor
	f	Z	c	started
	m	(Laul;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(Laul;Ljava/util/concurrent/Executor;)Lauo;	a	createStarted
	m	(Ldlz;)V	a	updateSpawnPos
	m	(Ldlz;Legz;)V	a	onStatusChange
	m	()V	a	start
	m	()V	b	stop
	m	(Ldlz;Legz;)V	b	lambda$onStatusChange$1
	m	(Ldlz;)V	b	lambda$updateSpawnPos$0
c	aup	net/minecraft/server/level/progress/StoringChunkProgressListener
	f	Laun;	a	delegate
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	b	statuses
	f	Ldlz;	c	spawnPos
	f	I	d	fullDiameter
	f	I	e	radius
	f	I	f	diameter
	f	Z	g	started
	m	(Laun;III)V	<init>	<init>
	m	(I)Laup;	b	createFromGameruleRadius
	m	(I)Laup;	c	create
	m	()Laup;	c	createCompleted
	m	(Ldlz;)V	a	updateSpawnPos
	m	(Ldlz;Legz;)V	a	onStatusChange
	m	()V	a	start
	m	()V	b	stop
	m	()I	d	getFullDiameter
	m	()I	e	getDiameter
	m	()I	f	getProgress
	m	(II)Legz;	a	getStatus
c	auq	net/minecraft/server/level/progress/package-info
c	aur	net/minecraft/server/network/CommonListenerCookie
	f	Lcom/mojang/authlib/GameProfile;	a	gameProfile
	f	I	b	latency
	f	Latl;	c	clientInformation
	f	Z	d	transferred
	m	(Lcom/mojang/authlib/GameProfile;ILatl;Z)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;Z)Laur;	a	createInitial
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/authlib/GameProfile;	a	gameProfile
	m	()I	b	latency
	m	()Latl;	c	clientInformation
	m	()Z	d	transferred
c	aus	net/minecraft/server/network/ConfigurationTask
	m	(Ljava/util/function/Consumer;)V	a	start
	m	()Laus$a;	a	type
c	aus$a	net/minecraft/server/network/ConfigurationTask$Type
	f	Ljava/lang/String;	a	id
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	id
c	aut	net/minecraft/server/network/Filterable
	f	Ljava/lang/Object;	a	raw
	f	Ljava/util/Optional;	b	filtered
	m	(Ljava/lang/Object;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lzm;)Lzm;	a	streamCodec
	m	(Ljava/lang/Object;)Laut;	a	passThrough
	m	(Lauu;)Laut;	a	from
	m	(Z)Ljava/lang/Object;	a	get
	m	(Ljava/util/function/Function;)Laut;	a	map
	m	(Ljava/util/function/Function;)Ljava/util/Optional;	b	resolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	raw
	m	()Ljava/util/Optional;	b	filtered
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	auu	net/minecraft/server/network/FilteredText
	f	Ljava/lang/String;	b	raw
	f	Lxs;	c	mask
	f	Lauu;	a	EMPTY
	m	(Ljava/lang/String;Lxs;)V	<init>	<init>
	m	(Ljava/lang/String;)Lauu;	a	passThrough
	m	(Ljava/lang/String;)Lauu;	b	fullyFiltered
	m	()Ljava/lang/String;	a	filtered
	m	()Ljava/lang/String;	b	filteredOrEmpty
	m	()Z	c	isFiltered
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	d	raw
	m	()Lxs;	e	mask
	m	()V	<clinit>	<clinit>
c	auv	net/minecraft/server/network/LegacyProtocolUtils
	f	I	a	CUSTOM_PAYLOAD_PACKET_ID
	f	Ljava/lang/String;	b	CUSTOM_PAYLOAD_PACKET_PING_CHANNEL
	f	I	c	GET_INFO_PACKET_ID
	f	I	d	GET_INFO_PACKET_VERSION_1
	f	I	e	DISCONNECT_PACKET_ID
	f	I	f	FAKE_PROTOCOL_VERSION
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;Ljava/lang/String;)V	a	writeLegacyString
	m	(Lio/netty/buffer/ByteBuf;)Ljava/lang/String;	a	readLegacyString
c	auw	net/minecraft/server/network/LegacyQueryHandler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lamu;	b	server
	m	(Lamu;)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead	channelRead
	m	(Lio/netty/buffer/ByteBuf;)Z	a	readCustomPayloadPacket
	m	(Lamu;)Ljava/lang/String;	a	createVersion0Response
	m	(Lamu;)Ljava/lang/String;	b	createVersion1Response
	m	(Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V	a	sendFlushAndClose
	m	(Lio/netty/buffer/ByteBufAllocator;Ljava/lang/String;)Lio/netty/buffer/ByteBuf;	a	createLegacyDisconnectPacket
	m	()V	<clinit>	<clinit>
c	auy	net/minecraft/server/network/LegacyTextFilter
	f	Ljava/lang/String;	b	ENDPOINT
	f	Ljava/net/URL;	c	joinEndpoint
	f	Lauy$a;	d	joinEncoder
	f	Ljava/net/URL;	e	leaveEndpoint
	f	Lauy$a;	f	leaveEncoder
	f	Ljava/lang/String;	g	authKey
	m	(Ljava/net/URL;Lavk$b;Ljava/net/URL;Lauy$a;Ljava/net/URL;Lauy$a;Ljava/lang/String;Lavk$a;Ljava/util/concurrent/ExecutorService;)V	<init>	<init>
	m	(Ljava/lang/String;)Lavk;	a	createTextFilterFromConfig
	m	(Lcom/mojang/authlib/GameProfile;)Lavl;	a	createContext
	m	(Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lauy$a;Ljava/util/concurrent/Executor;)V	a	processJoinOrLeave
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)V	b	processRequest
	m	(Ljava/net/HttpURLConnection;)V	a	setAuthorizationProperty
	m	(Ljava/lang/String;Lavk$a;Lcom/google/gson/JsonObject;)Lauu;	a	filterText
	m	(Lauy$a;Lcom/mojang/authlib/GameProfile;Ljava/net/URL;)V	a	lambda$processJoinOrLeave$3
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createTextFilterFromConfig$2
	m	(ILjava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createTextFilterFromConfig$1
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	a	lambda$createTextFilterFromConfig$0
c	auy$1	net/minecraft/server/network/LegacyTextFilter$1
	f	Lauy;	a	this$0
	m	(Lauy;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	()V	a	join
	m	()V	b	leave
c	auy$a	net/minecraft/server/network/LegacyTextFilter$JoinOrLeaveEncoder
	m	(Lcom/mojang/authlib/GameProfile;)Lcom/google/gson/JsonObject;	encode	encode
c	auz	net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Lwd;	c	connection
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;)V	<init>	<init>
	m	(Laju;)V	a	handleIntention
	m	(Lwf;)V	a	onDisconnect
	m	()Z	c	isAcceptingMessages
c	ava	net/minecraft/server/network/PlayerChunkSender
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	F	a	MIN_CHUNKS_PER_TICK
	f	F	b	MAX_CHUNKS_PER_TICK
	f	F	d	START_CHUNKS_PER_TICK
	f	I	e	MAX_UNACKNOWLEDGED_BATCHES
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	pendingChunks
	f	Z	g	memoryConnection
	f	F	h	desiredChunksPerTick
	f	F	i	batchQuota
	f	I	j	unacknowledgedBatches
	f	I	k	maxUnacknowledgedBatches
	m	(Z)V	<init>	<init>
	m	(Legi;)V	a	markChunkPendingToSend
	m	(Lauc;Ldlz;)V	a	dropChunk
	m	(Lauc;)V	a	sendNextChunks
	m	(Lavf;Laub;Legi;)V	a	sendChunk
	m	(Latf;Ldlz;)Ljava/util/List;	a	collectChunksToSend
	m	(F)V	a	onChunkBatchReceivedByClient
	m	(J)Z	a	isPending
	m	(Ldlz;Legi;)I	a	lambda$collectChunksToSend$0
	m	()V	<clinit>	<clinit>
c	avb	net/minecraft/server/network/PlayerSafetyServiceTextFilter
	f	Lcom/microsoft/aad/msal4j/ConfidentialClientApplication;	b	client
	f	Lcom/microsoft/aad/msal4j/ClientCredentialParameters;	c	clientParameters
	f	Ljava/util/Set;	d	fullyFilteredEvents
	f	I	e	connectionReadTimeoutMs
	m	(Ljava/net/URL;Lavk$b;Lavk$a;Ljava/util/concurrent/ExecutorService;Lcom/microsoft/aad/msal4j/ConfidentialClientApplication;Lcom/microsoft/aad/msal4j/ClientCredentialParameters;Ljava/util/Set;I)V	<init>	<init>
	m	(Ljava/lang/String;)Lavk;	a	createTextFilterFromConfig
	m	()Lcom/microsoft/aad/msal4j/IAuthenticationResult;	b	aquireIAuthenticationResult
	m	(Ljava/net/HttpURLConnection;)V	a	setAuthorizationProperty
	m	(Ljava/lang/String;Lavk$a;Lcom/google/gson/JsonObject;)Lauu;	a	filterText
	m	()I	a	connectionReadTimeout
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	lambda$createTextFilterFromConfig$1
	m	(Ljava/util/Set;Lcom/google/gson/JsonElement;)V	a	lambda$createTextFilterFromConfig$0
c	avc	net/minecraft/server/network/ServerCommonPacketListenerImpl
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	I	b	LATENCY_CHECK_INTERVAL
	f	I	g	CLOSED_LISTENER_TIMEOUT
	f	Lxo;	h	TIMEOUT_DISCONNECTION_MESSAGE
	f	Lxo;	c	DISCONNECT_UNEXPECTED_QUERY
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Lwd;	e	connection
	f	Z	i	transferred
	f	J	j	keepAliveTime
	f	Z	k	keepAlivePending
	f	J	l	keepAliveChallenge
	f	J	m	closedListenerTime
	f	Z	n	closed
	f	I	o	latency
	f	Z	p	suspendFlushingOnServerThread
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;Laur;)V	<init>	<init>
	m	()V	l	close
	m	(Lwf;)V	a	onDisconnect
	m	(Lzw;Ljava/lang/Exception;)V	a	onPacketError
	m	(Laax;)V	a	handleKeepAlive
	m	(Laay;)V	a	handlePong
	m	(Laaw;)V	a	handleCustomPayload
	m	(Laav;)V	a	handleCustomClickAction
	m	(Laaz;)V	a	handleResourcePackResponse
	m	(Laco;)V	a	handleCookieResponse
	m	()V	e	keepConnectionAlive
	m	(J)Z	a	checkIfClosed
	m	()V	f	suspendFlushing
	m	()V	g	resumeFlushing
	m	(Lzw;)V	b	send
	m	(Lzw;Lio/netty/channel/ChannelFutureListener;)V	a	send
	m	(Lxo;)V	a	disconnect
	m	(Lwf;)V	b	disconnect
	m	()Z	h	isSingleplayerOwner
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	()Lcom/mojang/authlib/GameProfile;	j	getOwner
	m	()I	k	latency
	m	(Latl;)Laur;	a	createCookie
	m	(Lwf;)V	c	lambda$disconnect$1
	m	(Lzw;)Ljava/lang/String;	c	lambda$send$0
	m	()V	<clinit>	<clinit>
c	avd	net/minecraft/server/network/ServerConfigurationPacketListenerImpl
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lxo;	g	DISCONNECT_REASON_INVALID_DATA
	f	Lcom/mojang/authlib/GameProfile;	h	gameProfile
	f	Ljava/util/Queue;	i	configurationTasks
	f	Laus;	j	currentTask
	f	Latl;	k	clientInformation
	f	Lavo;	l	synchronizeRegistriesTask
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;Laur;)V	<init>	<init>
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	(Lwf;)V	a	onDisconnect
	m	()Z	c	isAcceptingMessages
	m	()V	l	startConfiguration
	m	()V	m	returnToWorld
	m	()V	n	addOptionalTasks
	m	(Laau;)V	a	handleClientInformation
	m	(Laaz;)V	a	handleResourcePackResponse
	m	(Laci;)V	a	handleSelectKnownPacks
	m	(Lach;)V	a	handleConfigurationFinished
	m	()V	d	tick
	m	()V	o	startNextTask
	m	(Laus$a;)V	a	finishCurrentTask
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	a	lambda$addOptionalTasks$1
	m	(Lawb;)Ljava/util/stream/Stream;	a	lambda$startConfiguration$0
	m	()V	<clinit>	<clinit>
c	ave	net/minecraft/server/network/ServerConnectionListener
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/function/Supplier;	a	SERVER_EVENT_GROUP
	f	Ljava/util/function/Supplier;	b	SERVER_EPOLL_EVENT_GROUP
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	f	Z	c	running
	f	Ljava/util/List;	f	channels
	f	Ljava/util/List;	g	connections
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	(Ljava/net/InetAddress;I)V	a	startTcpServerListener
	m	()Ljava/net/SocketAddress;	a	startMemoryChannel
	m	()V	b	stop
	m	()V	c	tick
	m	()Lnet/minecraft/server/MinecraftServer;	d	getServer
	m	()Ljava/util/List;	e	getConnections
	m	(Lwd;Lxo;)V	a	lambda$tick$2
	m	()Lio/netty/channel/epoll/EpollEventLoopGroup;	f	lambda$static$1
	m	()Lio/netty/channel/nio/NioEventLoopGroup;	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ave$1	net/minecraft/server/network/ServerConnectionListener$1
	f	Lave;	a	this$0
	m	(Lave;)V	<init>	<init>
	m	(Lio/netty/channel/Channel;)V	initChannel	initChannel
c	ave$2	net/minecraft/server/network/ServerConnectionListener$2
	f	Lave;	a	this$0
	m	(Lave;)V	<init>	<init>
	m	(Lio/netty/channel/Channel;)V	initChannel	initChannel
c	ave$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator
	f	Lio/netty/util/Timer;	a	TIMER
	f	I	b	delay
	f	I	c	jitter
	f	Ljava/util/List;	d	queuedMessages
	m	(II)V	<init>	<init>
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	channelRead	channelRead
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	a	delayDownstream
	m	(Lio/netty/util/Timeout;)V	a	onTimeout
	m	()V	<clinit>	<clinit>
c	ave$a$a	net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage
	f	Lio/netty/channel/ChannelHandlerContext;	a	ctx
	f	Ljava/lang/Object;	b	msg
	m	(Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V	<init>	<init>
c	avf	net/minecraft/server/network/ServerGamePacketListenerImpl
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	I	i	NO_BLOCK_UPDATES_TO_ACK
	f	I	j	TRACKED_MESSAGE_DISCONNECT_THRESHOLD
	f	I	k	MAXIMUM_FLYING_TICKS
	f	Lxo;	l	CHAT_VALIDATION_FAILED
	f	Lxo;	m	INVALID_COMMAND_SIGNATURE
	f	I	n	MAX_COMMAND_SUGGESTIONS
	f	Lauc;	f	player
	f	Lava;	g	chunkSender
	f	I	o	tickCount
	f	I	p	ackBlockChangesUpTo
	f	Lbde;	q	chatSpamThrottler
	f	Lbde;	r	dropSpamThrottler
	f	D	s	firstGoodX
	f	D	t	firstGoodY
	f	D	u	firstGoodZ
	f	D	v	lastGoodX
	f	D	w	lastGoodY
	f	D	x	lastGoodZ
	f	Lbzm;	y	lastVehicle
	f	D	z	vehicleFirstGoodX
	f	D	A	vehicleFirstGoodY
	f	D	B	vehicleFirstGoodZ
	f	D	C	vehicleLastGoodX
	f	D	D	vehicleLastGoodY
	f	D	E	vehicleLastGoodZ
	f	Lfis;	F	awaitingPositionFromClient
	f	I	G	awaitingTeleport
	f	I	H	awaitingTeleportTime
	f	Z	I	clientIsFloating
	f	I	J	aboveGroundTickCount
	f	Z	K	clientVehicleIsFloating
	f	I	L	aboveGroundVehicleTickCount
	f	I	M	receivedMovePacketCount
	f	I	N	knownMovePacketCount
	f	Z	O	receivedMovementThisTick
	f	Lyf;	P	chatSession
	f	Lyi$b;	Q	signedMessageDecoder
	f	Lxx;	R	lastSeenMessages
	f	I	S	nextChatIndex
	f	Lyb;	T	messageSignatureCache
	f	Lbbo;	U	chatMessageChain
	f	Z	V	waitingForSwitchToConfig
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;Lauc;Laur;)V	<init>	<init>
	m	()V	d	tick
	m	(Lbzm;)I	a	getMaximumFlyingTicks
	m	()V	l	resetPosition
	m	()Z	c	isAcceptingMessages
	m	(Lzw;)Z	a	shouldHandleMessage
	m	()Lcom/mojang/authlib/GameProfile;	i	playerProfile
	m	(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	filterTextPacket
	m	(Laiv;)V	a	handlePlayerInput
	m	(DDDFF)Z	b	containsInvalidValues
	m	(D)D	a	clampHorizontal
	m	(D)D	b	clampVertical
	m	(Lain;)V	a	handleMoveVehicle
	m	(Lbzm;)Z	b	noBlocksAround
	m	(Laho;)V	a	handleAcceptTeleportPacket
	m	(Laiw;)V	a	handleAcceptPlayerLoad
	m	(Laiy;)V	a	handleRecipeBookSeenRecipePacket
	m	(Lajb;)V	a	handleBundleItemSelectedPacket
	m	(Laix;)V	a	handleRecipeBookChangeSettingsPacket
	m	(Laja;)V	a	handleSeenAdvancements
	m	(Laia;)V	a	handleCustomCommandSuggestions
	m	(Lajf;)V	a	handleSetCommandBlock
	m	(Lajg;)V	a	handleSetCommandMinecart
	m	(Laip;)V	a	handlePickItemFromBlock
	m	(Leeb;Laub;Ljb;Ldcv;)V	a	addBlockDataToItem
	m	(Laiq;)V	a	handlePickItemFromEntity
	m	(Ldcv;)V	a	tryPickItem
	m	(Laiz;)V	a	handleRenameItem
	m	(Lajd;)V	a	handleSetBeaconPacket
	m	(Lajj;)V	a	handleSetStructureBlock
	m	(Lajk;)V	a	handleSetTestBlock
	m	(Lajo;)V	a	handleTestInstanceBlockAction
	m	(Laji;)V	a	handleSetJigsawBlock
	m	(Laik;)V	a	handleJigsawGenerate
	m	(Lajc;)V	a	handleSelectTrade
	m	(Laih;)V	a	handleEditBook
	m	(Ljava/util/List;I)V	a	updateBookContents
	m	(Lauu;Ljava/util/List;I)V	a	signBook
	m	(Lauu;)Laut;	a	filterableFromOutgoing
	m	(Laii;)V	a	handleEntityTagQuery
	m	(Laif;)V	a	handleContainerSlotStateChanged
	m	(Lahp;)V	a	handleBlockEntityTagQuery
	m	(Laim;)V	a	handleMovePlayer
	m	(Z)Z	a	shouldCheckPlayerMovement
	m	()Z	p	updateAwaitingTeleport
	m	(Ldmx;Lbzm;Lfin;DDD)Z	a	isEntityCollidingWithAnythingNew
	m	(DDDFF)V	a	teleport
	m	(Lcaz;Ljava/util/Set;)V	a	teleport
	m	(Lait;)V	a	handlePlayerAction
	m	(Lauc;Ldcv;)Z	a	wasBlockPlacementAttempt
	m	(Lajp;)V	a	handleUseItemOn
	m	(Lajq;)V	a	handleUseItem
	m	(Lajn;)V	a	handleTeleportToEntityPacket
	m	(Laio;)V	a	handlePaddleBoat
	m	(Lwf;)V	a	onDisconnect
	m	()V	q	removePlayerFromWorld
	m	(I)V	a	ackBlockChangesUpTo
	m	(Laje;)V	a	handleSetCarriedItem
	m	(Lahv;)V	a	handleChat
	m	(Laht;)V	a	handleChatCommand
	m	(Ljava/lang/String;)V	b	performUnsignedChatCommand
	m	(Lahu;)V	a	handleSignedChatCommand
	m	(Lahu;Lxv;)V	a	performSignedChatCommand
	m	(Lyi$a;)V	a	handleMessageDecodeFailure
	m	(Lahu;Lyg;Lxv;)Ljava/util/Map;	a	collectSignedArguments
	m	(Ljava/util/List;)Ljava/util/Map;	b	collectUnsignedArguments
	m	(Ljava/lang/String;Ljava/util/List;Ljava/util/List;)Lyi$a;	a	createSignedArgumentMismatchException
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults;	c	parseCommand
	m	(Ljava/lang/String;Ljava/lang/Runnable;)V	a	tryHandleChat
	m	(Lxv$b;)Ljava/util/Optional;	a	unpackAndApplyLastSeen
	m	(Ljava/lang/String;)Z	d	isChatMessageIllegal
	m	(Lahv;Lxv;)Lye;	a	getSignedMessage
	m	(Lye;)V	a	broadcastChatMessage
	m	()V	r	detectRateSpam
	m	(Lahs;)V	a	handleChatAck
	m	(Lajm;)V	a	handleAnimate
	m	(Laiu;)V	a	handlePlayerCommand
	m	(Lye;Lxk$a;)V	a	sendPlayerChatMessage
	m	(Lxo;Lxk$a;)V	a	sendDisguisedChatMessage
	m	()Ljava/net/SocketAddress;	m	getRemoteAddress
	m	()V	n	switchToConfig
	m	(Lakx;)V	a	handlePingRequest
	m	(Laij;)V	a	handleInteract
	m	(Lahy;)V	a	handleClientCommand
	m	(Laie;)V	a	handleContainerClose
	m	(Laid;)V	a	handleContainerClick
	m	(Lair;)V	a	handlePlaceRecipe
	m	(Laic;)V	a	handleContainerButtonClick
	m	(Lajh;)V	a	handleSetCreativeModeSlot
	m	(Lajl;)V	a	handleSignUpdate
	m	(Lajl;Ljava/util/List;)V	a	updateSignText
	m	(Lais;)V	a	handlePlayerAbilities
	m	(Laau;)V	a	handleClientInformation
	m	(Lahq;)V	a	handleChangeDifficulty
	m	(Lahr;)V	a	handleChangeGameMode
	m	(Lail;)V	a	handleLockDifficulty
	m	(Lahw;)V	a	handleChatSessionUpdate
	m	(Laib;)V	a	handleConfigurationAcknowledged
	m	(Lahx;)V	a	handleChunkBatchReceived
	m	(Laig;)V	a	handleDebugSampleSubscription
	m	(Lyf;)V	a	resetPlayerChatState
	m	(Laaw;)V	a	handleCustomPayload
	m	(Lahz;)V	a	handleClientTickEnd
	m	(Lfis;)V	a	handlePlayerKnownMovement
	m	()Z	a	hasInfiniteMaterials
	m	()Lauc;	o	getPlayer
	m	(Lyf;)V	b	lambda$resetPlayerChatState$12
	m	(Lajl;Ljava/util/List;)V	b	lambda$handleSignUpdate$11
	m	(Lei;Lek;)Lek;	a	lambda$performSignedChatCommand$10
	m	(Lahu;Ljava/util/Optional;)V	a	lambda$handleSignedChatCommand$9
	m	(Laht;)V	b	lambda$handleChatCommand$8
	m	(Lahv;Ljava/util/Optional;)V	a	lambda$handleChat$7
	m	(Lye;Lxo;Lauu;)V	a	lambda$handleChat$6
	m	(Lauu;)Laut;	b	lambda$signBook$5
	m	(ILjava/util/List;)V	a	lambda$handleEditBook$4
	m	(ILjava/util/List;)V	b	lambda$handleEditBook$3
	m	(Lamd;)Ljava/util/Optional;	a	lambda$handleTestInstanceBlockAction$2
	m	(Laia;Lcom/mojang/brigadier/suggestion/Suggestions;)V	a	lambda$handleCustomCommandSuggestions$1
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$filterTextPacket$0
	m	()V	<clinit>	<clinit>
c	avf$1	net/minecraft/server/network/ServerGamePacketListenerImpl$1
	f	Laub;	a	val$level
	f	Lbzm;	b	val$target
	f	Lavf;	c	this$0
	m	(Lavf;Laub;Lbzm;)V	<init>	<init>
	m	(Lbxi;Lavf$a;)V	a	performInteraction
	m	(Lbxi;)V	a	onInteraction
	m	(Lbxi;Lfis;)V	a	onInteraction
	m	()V	a	onAttack
	m	(Lfis;Lauc;Lbzm;Lbxi;)Lbxj;	a	lambda$onInteraction$0
c	avf$2	net/minecraft/server/network/ServerGamePacketListenerImpl$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$entity$CommandBlockEntity$Mode
	f	[I	b	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerActionPacket$Action
	f	[I	c	$SwitchMap$net$minecraft$network$protocol$game$ServerboundPlayerCommandPacket$Action
	f	[I	d	$SwitchMap$net$minecraft$network$protocol$game$ServerboundClientCommandPacket$Action
	m	()V	<clinit>	<clinit>
c	avf$a	net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction
	m	(Lauc;Lbzm;Lbxi;)Lbxj;	run	run
c	avg	net/minecraft/server/network/ServerHandshakePacketListenerImpl
	f	Lxo;	b	IGNORE_STATUS_REASON
	f	Lnet/minecraft/server/MinecraftServer;	c	server
	f	Lwd;	d	connection
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;)V	<init>	<init>
	m	(Laju;)V	a	handleIntention
	m	(Laju;Z)V	a	beginLogin
	m	(Lwf;)V	a	onDisconnect
	m	()Z	c	isAcceptingMessages
	m	()V	<clinit>	<clinit>
c	avg$1	net/minecraft/server/network/ServerHandshakePacketListenerImpl$1
	f	[I	a	$SwitchMap$net$minecraft$network$protocol$handshake$ClientIntent
	m	()V	<clinit>	<clinit>
c	avh	net/minecraft/server/network/ServerLoginPacketListenerImpl
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	UNIQUE_THREAD_ID
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_TICKS_BEFORE_LOGIN
	f	[B	e	challenge
	f	Lnet/minecraft/server/MinecraftServer;	f	server
	f	Lwd;	g	connection
	f	Lavh$a;	h	state
	f	I	i	tick
	f	Ljava/lang/String;	j	requestedUsername
	f	Lcom/mojang/authlib/GameProfile;	k	authenticatedProfile
	f	Ljava/lang/String;	l	serverId
	f	Z	m	transferred
	m	(Lnet/minecraft/server/MinecraftServer;Lwd;Z)V	<init>	<init>
	m	()V	d	tick
	m	()Z	c	isAcceptingMessages
	m	(Lxo;)V	a	disconnect
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isPlayerAlreadyInWorld
	m	(Lwf;)V	a	onDisconnect
	m	()Ljava/lang/String;	e	getUserName
	m	(Lakj;)V	a	handleHello
	m	(Lcom/mojang/authlib/GameProfile;)V	b	startClientVerification
	m	(Lcom/mojang/authlib/GameProfile;)V	c	verifyLoginAndFinishConnectionSetup
	m	(Lcom/mojang/authlib/GameProfile;)V	d	finishLoginAndWaitForClient
	m	(Lakk;)V	a	handleKey
	m	(Laki;)V	a	handleCustomQueryPacket
	m	(Lakl;)V	a	handleLoginAcknowledgement
	m	(Lp;Lq;)V	a	fillListenerSpecificCrashDetails
	m	(Laco;)V	a	handleCookieResponse
	m	()Ljava/lang/String;	f	lambda$fillListenerSpecificCrashDetails$1
	m	()V	g	lambda$verifyLoginAndFinishConnectionSetup$0
	m	()V	<clinit>	<clinit>
c	avh$1	net/minecraft/server/network/ServerLoginPacketListenerImpl$1
	f	Ljava/lang/String;	a	val$digest
	f	Lavh;	b	this$0
	m	(Lavh;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()V	run	run
	m	()Ljava/net/InetAddress;	a	getAddress
c	avh$a	net/minecraft/server/network/ServerLoginPacketListenerImpl$State
	f	Lavh$a;	a	HELLO
	f	Lavh$a;	b	KEY
	f	Lavh$a;	c	AUTHENTICATING
	f	Lavh$a;	d	NEGOTIATING
	f	Lavh$a;	e	VERIFYING
	f	Lavh$a;	f	WAITING_FOR_DUPE_DISCONNECT
	f	Lavh$a;	g	PROTOCOL_SWITCHING
	f	Lavh$a;	h	ACCEPTED
	f	[Lavh$a;	i	$VALUES
	m	()[Lavh$a;	values	values
	m	(Ljava/lang/String;)Lavh$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lavh$a;	a	$values
	m	()V	<clinit>	<clinit>
c	avi	net/minecraft/server/network/ServerPlayerConnection
	m	()Lauc;	o	getPlayer
	m	(Lzw;)V	b	send
c	avj	net/minecraft/server/network/ServerStatusPacketListenerImpl
	f	Lxo;	b	DISCONNECT_REASON
	f	Lalb;	c	status
	f	Lwd;	d	connection
	f	Z	e	hasRequestedStatus
	m	(Lalb;Lwd;)V	<init>	<init>
	m	(Lwf;)V	a	onDisconnect
	m	()Z	c	isAcceptingMessages
	m	(Lald;)V	a	handleStatusRequest
	m	(Lakx;)V	a	handlePingRequest
	m	()V	<clinit>	<clinit>
c	avk	net/minecraft/server/network/ServerTextFilter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	WORKER_COUNT
	f	Ljava/util/concurrent/ThreadFactory;	c	THREAD_FACTORY
	f	Ljava/net/URL;	d	chatEndpoint
	f	Lavk$b;	e	chatEncoder
	f	Lavk$a;	f	chatIgnoreStrategy
	f	Ljava/util/concurrent/ExecutorService;	g	workerPool
	m	(I)Ljava/util/concurrent/ExecutorService;	a	createWorkerPool
	m	(Ljava/net/URL;Lavk$b;Lavk$a;Ljava/util/concurrent/ExecutorService;)V	<init>	<init>
	m	(Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL;	a	getEndpoint
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getEndpointFromConfig
	m	(Larj;)Lavk;	a	createFromConfig
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lavk$a;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	requestMessageProcessing
	m	(Ljava/lang/String;Lavk$a;Lcom/google/gson/JsonObject;)Lauu;	a	filterText
	m	(Ljava/lang/String;Lcom/google/gson/JsonArray;Lavk$a;)Lxs;	a	parseMask
	m	()V	close	close
	m	(Ljava/io/InputStream;)V	a	drainStream
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject;	b	processRequestResponse
	m	(Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection;	a	makeRequest
	m	(Ljava/net/HttpURLConnection;)V	a	setAuthorizationProperty
	m	()I	a	connectionReadTimeout
	m	(Ljava/net/URL;)Ljava/net/HttpURLConnection;	a	getURLConnection
	m	(Lcom/mojang/authlib/GameProfile;)Lavl;	a	createContext
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lavk$a;)Lauu;	a	lambda$requestMessageProcessing$1
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	avk$a	net/minecraft/server/network/ServerTextFilter$IgnoreStrategy
	f	Lavk$a;	a	NEVER_IGNORE
	f	Lavk$a;	b	IGNORE_FULLY_FILTERED
	m	(I)Lavk$a;	ignoreOverThreshold	ignoreOverThreshold
	m	(I)Lavk$a;	select	select
	m	(Ljava/lang/String;I)Z	shouldIgnore	shouldIgnore
	m	(ILjava/lang/String;I)Z	a	lambda$ignoreOverThreshold$2
	m	(Ljava/lang/String;I)Z	a	lambda$static$1
	m	(Ljava/lang/String;I)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	avk$b	net/minecraft/server/network/ServerTextFilter$MessageEncoder
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;)Lcom/google/gson/JsonObject;	encode	encode
c	avk$c	net/minecraft/server/network/ServerTextFilter$PlayerContext
	f	Lcom/mojang/authlib/GameProfile;	b	profile
	f	Ljava/util/concurrent/Executor;	c	streamExecutor
	f	Lavk;	d	this$0
	m	(Lavk;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/lang/Throwable;)Ljava/util/List;	a	lambda$processMessageBundle$1
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	lambda$processMessageBundle$0
c	avk$d	net/minecraft/server/network/ServerTextFilter$RequestFailedException
	m	(Ljava/lang/String;)V	<init>	<init>
c	avl	net/minecraft/server/network/TextFilter
	f	Lavl;	e	DUMMY
	m	()V	a	join
	m	()V	b	leave
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
	m	()V	<clinit>	<clinit>
c	avl$1	net/minecraft/server/network/TextFilter$1
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	processStreamMessage
	m	(Ljava/util/List;)Ljava/util/concurrent/CompletableFuture;	a	processMessageBundle
c	avm	net/minecraft/server/network/config/JoinWorldTask
	f	Laus$a;	a	TYPE
	m	()V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	a	start
	m	()Laus$a;	a	type
	m	()V	<clinit>	<clinit>
c	avn	net/minecraft/server/network/config/ServerResourcePackConfigurationTask
	f	Laus$a;	a	TYPE
	f	Lnet/minecraft/server/MinecraftServer$b;	b	info
	m	(Lnet/minecraft/server/MinecraftServer$b;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	a	start
	m	()Laus$a;	a	type
	m	()V	<clinit>	<clinit>
c	avo	net/minecraft/server/network/config/SynchronizeRegistriesTask
	f	Laus$a;	a	TYPE
	f	Ljava/util/List;	b	requestedPacks
	f	Ljs;	c	registries
	m	(Ljava/util/List;Ljs;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	a	start
	m	(Ljava/util/function/Consumer;Ljava/util/Set;)V	a	sendRegistries
	m	(Ljava/util/List;Ljava/util/function/Consumer;)V	a	handleResponse
	m	()Laus$a;	a	type
	m	(Ljava/util/function/Consumer;Lamd;Ljava/util/List;)V	a	lambda$sendRegistries$0
	m	()V	<clinit>	<clinit>
c	avp	net/minecraft/server/network/config/package-info
c	avq	net/minecraft/server/network/package-info
c	avr	net/minecraft/server/package-info
c	avs	net/minecraft/server/packs/AbstractPackResources
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lawa;	d	location
	m	(Lawa;)V	<init>	<init>
	m	(Lawo;)Ljava/lang/Object;	a	getMetadataSection
	m	(Lawo;Ljava/io/InputStream;)Ljava/lang/Object;	a	getMetadataFromStream
	m	()Lawa;	a	location
	m	(Lawo;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$getMetadataFromStream$0
	m	()V	<clinit>	<clinit>
c	avt	net/minecraft/server/packs/BuiltInMetadata
	f	Lavt;	a	EMPTY
	f	Ljava/util/Map;	b	values
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lawo;)Ljava/lang/Object;	a	get
	m	()Lavt;	a	of
	m	(Lawo;Ljava/lang/Object;)Lavt;	a	of
	m	(Lawo;Ljava/lang/Object;Lawo;Ljava/lang/Object;)Lavt;	a	of
	m	()V	<clinit>	<clinit>
c	avu	net/minecraft/server/packs/CompositePackResources
	f	Lawb;	c	primaryPackResources
	f	Ljava/util/List;	d	packResourcesStack
	m	(Lawb;Ljava/util/List;)V	<init>	<init>
	m	([Ljava/lang/String;)Laxg;	a	getRootResource
	m	(Lawd;Lame;)Laxg;	a	getResource
	m	(Lawd;Ljava/lang/String;Ljava/lang/String;Lawb$a;)V	a	listResources
	m	(Lawd;)Ljava/util/Set;	a	getNamespaces
	m	(Lawo;)Ljava/lang/Object;	a	getMetadataSection
	m	()Lawa;	a	location
	m	()V	close	close
c	avv	net/minecraft/server/packs/DownloadCacheCleaner
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Ljava/nio/file/Path;I)V	a	vacuumCacheDir
	m	(Ljava/nio/file/Path;)Ljava/util/List;	a	listFilesWithModificationTimes
	m	(Ljava/util/List;)Ljava/util/List;	a	prioritizeFilesInDirs
	m	()V	<clinit>	<clinit>
c	avv$1	net/minecraft/server/packs/DownloadCacheCleaner$1
	f	Ljava/nio/file/Path;	a	val$cacheDir
	f	Ljava/util/List;	b	val$unsortedFiles
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	visitFile	visitFile
c	avv$a	net/minecraft/server/packs/DownloadCacheCleaner$PathAndPriority
	f	Ljava/nio/file/Path;	b	path
	f	I	c	removalPriority
	f	Ljava/util/Comparator;	a	HIGHEST_PRIORITY_FIRST
	m	(Ljava/nio/file/Path;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	a	path
	m	()I	b	removalPriority
	m	()V	<clinit>	<clinit>
c	avv$b	net/minecraft/server/packs/DownloadCacheCleaner$PathAndTime
	f	Ljava/nio/file/Path;	b	path
	f	Ljava/nio/file/attribute/FileTime;	c	modifiedTime
	f	Ljava/util/Comparator;	a	NEWEST_FIRST
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	a	path
	m	()Ljava/nio/file/attribute/FileTime;	b	modifiedTime
	m	()V	<clinit>	<clinit>
c	avw	net/minecraft/server/packs/DownloadQueue
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_KEPT_PACKS
	f	Ljava/nio/file/Path;	c	cacheDir
	f	Lbsc;	d	eventLog
	f	Lbvy;	e	tasks
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	(Lavw$a;Ljava/util/Map;)Lavw$b;	b	runDownload
	m	(Ljava/nio/file/Path;)Lcom/mojang/datafixers/util/Either;	a	getFileInfo
	m	(Lavw$a;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture;	a	downloadBatch
	m	()V	close	close
	m	(Lavw$a;Ljava/util/Map;)Lavw$b;	c	lambda$downloadBatch$1
	m	(Lavw$a;Lavw$b;Ljava/util/UUID;Lavw$c;)V	a	lambda$runDownload$0
	m	()V	<clinit>	<clinit>
c	avw$a	net/minecraft/server/packs/DownloadQueue$BatchConfig
	f	Lcom/google/common/hash/HashFunction;	a	hashFunction
	f	I	b	maxSize
	f	Ljava/util/Map;	c	headers
	f	Ljava/net/Proxy;	d	proxy
	f	Lbbs$a;	e	listener
	m	(Lcom/google/common/hash/HashFunction;ILjava/util/Map;Ljava/net/Proxy;Lbbs$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/google/common/hash/HashFunction;	a	hashFunction
	m	()I	b	maxSize
	m	()Ljava/util/Map;	c	headers
	m	()Ljava/net/Proxy;	d	proxy
	m	()Lbbs$a;	e	listener
c	avw$b	net/minecraft/server/packs/DownloadQueue$BatchResult
	f	Ljava/util/Map;	a	downloaded
	f	Ljava/util/Set;	b	failed
	m	()V	<init>	<init>
	m	(Ljava/util/Map;Ljava/util/Set;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	downloaded
	m	()Ljava/util/Set;	b	failed
c	avw$c	net/minecraft/server/packs/DownloadQueue$DownloadRequest
	f	Ljava/net/URL;	a	url
	f	Lcom/google/common/hash/HashCode;	b	hash
	m	(Ljava/net/URL;Lcom/google/common/hash/HashCode;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/net/URL;	a	url
	m	()Lcom/google/common/hash/HashCode;	b	hash
c	avw$d	net/minecraft/server/packs/DownloadQueue$FileInfoEntry
	f	Ljava/lang/String;	b	name
	f	J	c	size
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;J)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()J	b	size
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	avw$e	net/minecraft/server/packs/DownloadQueue$LogEntry
	f	Ljava/util/UUID;	b	id
	f	Ljava/lang/String;	c	url
	f	Ljava/time/Instant;	d	time
	f	Ljava/util/Optional;	e	hash
	f	Lcom/mojang/datafixers/util/Either;	f	errorOrFileInfo
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/UUID;Ljava/lang/String;Ljava/time/Instant;Ljava/util/Optional;Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	id
	m	()Ljava/lang/String;	b	url
	m	()Ljava/time/Instant;	c	time
	m	()Ljava/util/Optional;	d	hash
	m	()Lcom/mojang/datafixers/util/Either;	e	errorOrFileInfo
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	avx	net/minecraft/server/packs/FeatureFlagsMetadataSection
	f	Lcyd;	b	flags
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lawo;	a	TYPE
	m	(Lcyd;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcyd;	a	flags
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	avy	net/minecraft/server/packs/FilePackResources
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lavy$b;	d	zipFileAccess
	f	Ljava/lang/String;	e	prefix
	m	(Lawa;Lavy$b;Ljava/lang/String;)V	<init>	<init>
	m	(Lawd;Lame;)Ljava/lang/String;	b	getPathFromLocation
	m	([Ljava/lang/String;)Laxg;	a	getRootResource
	m	(Lawd;Lame;)Laxg;	a	getResource
	m	(Ljava/lang/String;)Ljava/lang/String;	a	addPrefix
	m	(Ljava/lang/String;)Laxg;	b	getResource
	m	(Lawd;)Ljava/util/Set;	a	getNamespaces
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	extractNamespace
	m	()V	close	close
	m	(Lawd;Ljava/lang/String;Ljava/lang/String;Lawb$a;)V	a	listResources
	m	()V	<clinit>	<clinit>
c	avy$a	net/minecraft/server/packs/FilePackResources$FileResourcesSupplier
	f	Ljava/io/File;	a	content
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lawa;)Lawb;	a	openPrimary
	m	(Lawa;Laww$a;)Lawb;	a	openFull
c	avy$b	net/minecraft/server/packs/FilePackResources$SharedZipFileAccess
	f	Ljava/io/File;	a	file
	f	Ljava/util/zip/ZipFile;	b	zipFile
	f	Z	c	failedToLoad
	m	(Ljava/io/File;)V	<init>	<init>
	m	()Ljava/util/zip/ZipFile;	a	getOrCreateZipFile
	m	()V	close	close
	m	()V	finalize	finalize
c	avz	net/minecraft/server/packs/OverlayMetadataSection
	f	Ljava/util/List;	b	overlays
	f	Ljava/util/regex/Pattern;	c	DIR_VALIDATOR
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lawo;	a	TYPE
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	validateOverlayDir
	m	(I)Ljava/util/List;	a	overlaysForVersion
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	overlays
	m	(ILavz$a;)Z	a	lambda$overlaysForVersion$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$validateOverlayDir$0
	m	()V	<clinit>	<clinit>
c	avz$a	net/minecraft/server/packs/OverlayMetadataSection$OverlayEntry
	f	Lbbt;	a	format
	f	Ljava/lang/String;	b	overlay
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(Lbbt;Ljava/lang/String;)V	<init>	<init>
	m	(I)Z	a	isApplicable
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbbt;	a	format
	m	()Ljava/lang/String;	b	overlay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	awa	net/minecraft/server/packs/PackLocationInfo
	f	Ljava/lang/String;	a	id
	f	Lxo;	b	title
	f	Laxa;	c	source
	f	Ljava/util/Optional;	d	knownPackInfo
	m	(Ljava/lang/String;Lxo;Laxa;Ljava/util/Optional;)V	<init>	<init>
	m	(ZLxo;)Lxo;	a	createChatLink
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	id
	m	()Lxo;	b	title
	m	()Laxa;	c	source
	m	()Ljava/util/Optional;	d	knownPackInfo
	m	(ZLxo;Lyl;)Lyl;	a	lambda$createChatLink$0
c	awb	net/minecraft/server/packs/PackResources
	f	Ljava/lang/String;	a	METADATA_EXTENSION
	f	Ljava/lang/String;	b	PACK_META
	m	([Ljava/lang/String;)Laxg;	a	getRootResource
	m	(Lawd;Lame;)Laxg;	a	getResource
	m	(Lawd;Ljava/lang/String;Ljava/lang/String;Lawb$a;)V	a	listResources
	m	(Lawd;)Ljava/util/Set;	a	getNamespaces
	m	(Lawo;)Ljava/lang/Object;	a	getMetadataSection
	m	()Lawa;	a	location
	m	()Ljava/lang/String;	b	packId
	m	()Ljava/util/Optional;	c	knownPackInfo
	m	()V	close	close
c	awb$a	net/minecraft/server/packs/PackResources$ResourceOutput
c	awc	net/minecraft/server/packs/PackSelectionConfig
	f	Z	a	required
	f	Laww$b;	b	defaultPosition
	f	Z	c	fixedPosition
	m	(ZLaww$b;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	required
	m	()Laww$b;	b	defaultPosition
	m	()Z	c	fixedPosition
c	awd	net/minecraft/server/packs/PackType
	f	Lawd;	a	CLIENT_RESOURCES
	f	Lawd;	b	SERVER_DATA
	f	Ljava/lang/String;	c	directory
	f	[Lawd;	d	$VALUES
	m	()[Lawd;	values	values
	m	(Ljava/lang/String;)Lawd;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getDirectory
	m	()[Lawd;	b	$values
	m	()V	<clinit>	<clinit>
c	awe	net/minecraft/server/packs/PathPackResources
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/google/common/base/Joiner;	d	PATH_JOINER
	f	Ljava/nio/file/Path;	e	root
	m	(Lawa;Ljava/nio/file/Path;)V	<init>	<init>
	m	([Ljava/lang/String;)Laxg;	a	getRootResource
	m	(Ljava/nio/file/Path;)Z	a	validatePath
	m	(Lawd;Lame;)Laxg;	a	getResource
	m	(Lame;Ljava/nio/file/Path;)Laxg;	a	getResource
	m	(Ljava/nio/file/Path;)Laxg;	b	returnFileIfExists
	m	(Lawd;Ljava/lang/String;Ljava/lang/String;Lawb$a;)V	a	listResources
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lawb$a;)V	a	listPath
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	isRegularFile
	m	(Lawd;)Ljava/util/Set;	a	getNamespaces
	m	()V	close	close
	m	(Ljava/nio/file/Path;Ljava/lang/String;Lawb$a;Ljava/nio/file/Path;)V	a	lambda$listPath$4
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$listResources$3
	m	(Lawd;Ljava/lang/String;Lawb$a;Ljava/util/List;)V	a	lambda$listResources$2
	m	(Lame;Lcom/mojang/serialization/DataResult$Error;)Laxg;	a	lambda$getResource$1
	m	(Ljava/nio/file/Path;Ljava/util/List;)Laxg;	a	lambda$getResource$0
	m	()V	<clinit>	<clinit>
c	awe$a	net/minecraft/server/packs/PathPackResources$PathResourcesSupplier
	f	Ljava/nio/file/Path;	a	content
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	(Lawa;)Lawb;	a	openPrimary
	m	(Lawa;Laww$a;)Lawb;	a	openFull
c	awf	net/minecraft/server/packs/VanillaPackResources
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lawa;	d	location
	f	Lavt;	e	metadata
	f	Ljava/util/Set;	f	namespaces
	f	Ljava/util/List;	g	rootPaths
	f	Ljava/util/Map;	h	pathsForType
	m	(Lawa;Lavt;Ljava/util/Set;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
	m	([Ljava/lang/String;)Laxg;	a	getRootResource
	m	(Lawd;Lame;Ljava/util/function/Consumer;)V	a	listRawPaths
	m	(Lawd;Ljava/lang/String;Ljava/lang/String;Lawb$a;)V	a	listResources
	m	(Lawb$a;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V	a	getResources
	m	(Lawd;Lame;)Laxg;	a	getResource
	m	(Lawd;)Ljava/util/Set;	a	getNamespaces
	m	(Lawo;)Ljava/lang/Object;	a	getMetadataSection
	m	()Lawa;	a	location
	m	()V	close	close
	m	()Laxr;	d	asProvider
	m	(Lame;)Ljava/util/Optional;	a	lambda$asProvider$7
	m	(Laxg;)Laxm;	a	lambda$asProvider$6
	m	(Lame;Lcom/mojang/serialization/DataResult$Error;)Laxg;	a	lambda$getResource$5
	m	(Lame;Lawd;Ljava/util/List;)Laxg;	a	lambda$getResource$4
	m	(Ljava/lang/String;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$listResources$3
	m	(Lawd;Lawb$a;Ljava/lang/String;Ljava/util/List;)V	a	lambda$listResources$2
	m	(Lame;Lcom/mojang/serialization/DataResult$Error;)V	b	lambda$listRawPaths$1
	m	(Lame;Lawd;Ljava/util/function/Consumer;Ljava/util/List;)V	a	lambda$listRawPaths$0
	m	()V	<clinit>	<clinit>
c	awg	net/minecraft/server/packs/VanillaPackResourcesBuilder
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/function/Consumer;	a	developmentConfig
	f	Ljava/util/Map;	c	ROOT_DIR_BY_TYPE
	f	Ljava/util/Set;	d	rootPaths
	f	Ljava/util/Map;	e	pathsForType
	f	Lavt;	f	metadata
	f	Ljava/util/Set;	g	namespaces
	m	()V	<init>	<init>
	m	(Ljava/nio/file/Path;)Z	b	validateDirPath
	m	(Ljava/nio/file/Path;)V	c	pushRootPath
	m	(Lawd;Ljava/nio/file/Path;)V	b	pushPathForType
	m	()Lawg;	a	pushJarResources
	m	(Lawd;Ljava/lang/Class;)Lawg;	a	pushClasspathResources
	m	()Lawg;	b	applyDevelopmentConfig
	m	(Ljava/nio/file/Path;)Lawg;	a	pushUniversalPath
	m	(Lawd;Ljava/nio/file/Path;)Lawg;	a	pushAssetPath
	m	(Lavt;)Lawg;	a	setMetadata
	m	([Ljava/lang/String;)Lawg;	a	exposeNamespace
	m	(Lawa;)Lawf;	a	build
	m	(Ljava/util/Collection;)Ljava/util/List;	a	copyAndReverse
	m	(Lawd;)Ljava/util/List;	a	lambda$build$4
	m	(Lawd;Ljava/nio/file/Path;)V	c	lambda$pushJarResources$3
	m	(Lawd;)Ljava/util/Set;	b	lambda$pushPathForType$2
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$static$1
	m	(Lawg;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	awh	net/minecraft/server/packs/linkfs/DummyFileAttributes
	f	Ljava/nio/file/attribute/FileTime;	a	EPOCH
	m	()V	<init>	<init>
	m	()Ljava/nio/file/attribute/FileTime;	lastModifiedTime	lastModifiedTime
	m	()Ljava/nio/file/attribute/FileTime;	lastAccessTime	lastAccessTime
	m	()Ljava/nio/file/attribute/FileTime;	creationTime	creationTime
	m	()Z	isSymbolicLink	isSymbolicLink
	m	()Z	isOther	isOther
	m	()J	size	size
	m	()Ljava/lang/Object;	fileKey	fileKey
	m	()V	<clinit>	<clinit>
c	awi	net/minecraft/server/packs/linkfs/LinkFSFileStore
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	name	name
	m	()Ljava/lang/String;	type	type
	m	()Z	isReadOnly	isReadOnly
	m	()J	getTotalSpace	getTotalSpace
	m	()J	getUsableSpace	getUsableSpace
	m	()J	getUnallocatedSpace	getUnallocatedSpace
	m	(Ljava/lang/Class;)Z	supportsFileAttributeView	supportsFileAttributeView
	m	(Ljava/lang/String;)Z	supportsFileAttributeView	supportsFileAttributeView
	m	(Ljava/lang/Class;)Ljava/nio/file/attribute/FileStoreAttributeView;	getFileStoreAttributeView	getFileStoreAttributeView
	m	(Ljava/lang/String;)Ljava/lang/Object;	getAttribute	getAttribute
c	awj	net/minecraft/server/packs/linkfs/LinkFSPath
	f	Ljava/nio/file/attribute/BasicFileAttributes;	a	DIRECTORY_ATTRIBUTES
	f	Ljava/nio/file/attribute/BasicFileAttributes;	b	FILE_ATTRIBUTES
	f	Ljava/util/Comparator;	c	PATH_COMPARATOR
	f	Ljava/lang/String;	d	name
	f	Lawl;	e	fileSystem
	f	Lawj;	f	parent
	f	Ljava/util/List;	g	pathToRoot
	f	Ljava/lang/String;	h	pathString
	f	Lawm;	i	pathContents
	m	(Lawl;Ljava/lang/String;Lawj;Lawm;)V	<init>	<init>
	m	(Lawj;Ljava/lang/String;)Lawj;	a	createRelativePath
	m	()Lawl;	a	getFileSystem
	m	()Z	isAbsolute	isAbsolute
	m	()Ljava/io/File;	toFile	toFile
	m	()Lawj;	b	getRoot
	m	()Lawj;	c	getFileName
	m	()Lawj;	d	getParent
	m	()I	getNameCount	getNameCount
	m	()Ljava/util/List;	l	pathToRoot
	m	(I)Lawj;	a	getName
	m	(II)Lawj;	a	subpath
	m	(Ljava/nio/file/Path;)Z	startsWith	startsWith
	m	(Ljava/nio/file/Path;)Z	endsWith	endsWith
	m	()Lawj;	e	normalize
	m	(Ljava/nio/file/Path;)Lawj;	a	resolve
	m	(Ljava/util/List;)Lawj;	a	resolve
	m	(Ljava/lang/String;)Lawj;	a	resolveName
	m	(Lawm;)Z	a	isRelativeOrMissing
	m	(Ljava/nio/file/Path;)Lawj;	b	relativize
	m	()Ljava/net/URI;	toUri	toUri
	m	()Lawj;	f	toAbsolutePath
	m	([Ljava/nio/file/LinkOption;)Lawj;	a	toRealPath
	m	(Ljava/nio/file/WatchService;[Ljava/nio/file/WatchEvent$Kind;[Ljava/nio/file/WatchEvent$Modifier;)Ljava/nio/file/WatchKey;	register	register
	m	(Ljava/nio/file/Path;)I	compareTo	compareTo
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	m	hasRealContents
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	n	pathToString
	m	(Ljava/nio/file/Path;)Lawj;	c	toLinkPath
	m	()Z	g	exists
	m	()Ljava/nio/file/Path;	h	getTargetPath
	m	()Lawm$a;	i	getDirectoryContents
	m	()Ljava/nio/file/attribute/BasicFileAttributeView;	j	getBasicAttributeView
	m	()Ljava/nio/file/attribute/BasicFileAttributes;	k	getBasicAttributes
	m	([Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;	toRealPath	toRealPath
	m	()Ljava/nio/file/Path;	toAbsolutePath	toAbsolutePath
	m	(Ljava/nio/file/Path;)Ljava/nio/file/Path;	relativize	relativize
	m	(Ljava/nio/file/Path;)Ljava/nio/file/Path;	resolve	resolve
	m	()Ljava/nio/file/Path;	normalize	normalize
	m	(II)Ljava/nio/file/Path;	subpath	subpath
	m	(I)Ljava/nio/file/Path;	getName	getName
	m	()Ljava/nio/file/Path;	getParent	getParent
	m	()Ljava/nio/file/Path;	getFileName	getFileName
	m	()Ljava/nio/file/Path;	getRoot	getRoot
	m	()Ljava/nio/file/FileSystem;	getFileSystem	getFileSystem
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	()V	<clinit>	<clinit>
c	awj$1	net/minecraft/server/packs/linkfs/LinkFSPath$1
	m	()V	<init>	<init>
	m	()Z	isRegularFile	isRegularFile
	m	()Z	isDirectory	isDirectory
c	awj$2	net/minecraft/server/packs/linkfs/LinkFSPath$2
	m	()V	<init>	<init>
	m	()Z	isRegularFile	isRegularFile
	m	()Z	isDirectory	isDirectory
c	awj$3	net/minecraft/server/packs/linkfs/LinkFSPath$3
	f	Lawj;	a	this$0
	m	(Lawj;)V	<init>	<init>
	m	()Ljava/lang/String;	name	name
	m	()Ljava/nio/file/attribute/BasicFileAttributes;	readAttributes	readAttributes
	m	(Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;Ljava/nio/file/attribute/FileTime;)V	setTimes	setTimes
c	awk	net/minecraft/server/packs/linkfs/LinkFSProvider
	f	Ljava/lang/String;	a	SCHEME
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	getScheme	getScheme
	m	(Ljava/net/URI;Ljava/util/Map;)Ljava/nio/file/FileSystem;	newFileSystem	newFileSystem
	m	(Ljava/net/URI;)Ljava/nio/file/FileSystem;	getFileSystem	getFileSystem
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	getPath	getPath
	m	(Ljava/nio/file/Path;Ljava/util/Set;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/channels/SeekableByteChannel;	newByteChannel	newByteChannel
	m	(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;	newDirectoryStream	newDirectoryStream
	m	(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)V	createDirectory	createDirectory
	m	(Ljava/nio/file/Path;)V	delete	delete
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V	copy	copy
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V	move	move
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z	isSameFile	isSameFile
	m	(Ljava/nio/file/Path;)Z	isHidden	isHidden
	m	(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;	getFileStore	getFileStore
	m	(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V	checkAccess	checkAccess
	m	(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;	getFileAttributeView	getFileAttributeView
	m	(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;	readAttributes	readAttributes
	m	(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/util/Map;	readAttributes	readAttributes
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)V	setAttribute	setAttribute
	m	(Ljava/nio/file/Path;)Lawj;	a	toLinkPath
c	awk$1	net/minecraft/server/packs/linkfs/LinkFSProvider$1
	f	Lawm$a;	a	val$directoryContents
	f	Ljava/nio/file/DirectoryStream$Filter;	b	val$filter
	m	(Lawk;Lawm$a;Ljava/nio/file/DirectoryStream$Filter;)V	<init>	<init>
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()V	close	close
	m	(Lawj;)Ljava/nio/file/Path;	a	lambda$iterator$1
	m	(Ljava/nio/file/DirectoryStream$Filter;Lawj;)Z	a	lambda$iterator$0
c	awk$2	net/minecraft/server/packs/linkfs/LinkFSProvider$2
	f	[I	a	$SwitchMap$java$nio$file$AccessMode
	m	()V	<clinit>	<clinit>
c	awl	net/minecraft/server/packs/linkfs/LinkFileSystem
	f	Ljava/util/Set;	b	VIEWS
	f	Ljava/lang/String;	a	PATH_SEPARATOR
	f	Lcom/google/common/base/Splitter;	c	PATH_SPLITTER
	f	Ljava/nio/file/FileStore;	d	store
	f	Ljava/nio/file/spi/FileSystemProvider;	e	provider
	f	Lawj;	f	root
	m	(Ljava/lang/String;Lawl$b;)V	<init>	<init>
	m	(Lawl$b;Lawl;Ljava/lang/String;Lawj;)Lawj;	a	buildPath
	m	()Ljava/nio/file/spi/FileSystemProvider;	provider	provider
	m	()V	close	close
	m	()Z	isOpen	isOpen
	m	()Z	isReadOnly	isReadOnly
	m	()Ljava/lang/String;	getSeparator	getSeparator
	m	()Ljava/lang/Iterable;	getRootDirectories	getRootDirectories
	m	()Ljava/lang/Iterable;	getFileStores	getFileStores
	m	()Ljava/util/Set;	supportedFileAttributeViews	supportedFileAttributeViews
	m	(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;	getPath	getPath
	m	(Ljava/lang/String;)Ljava/nio/file/PathMatcher;	getPathMatcher	getPathMatcher
	m	()Ljava/nio/file/attribute/UserPrincipalLookupService;	getUserPrincipalLookupService	getUserPrincipalLookupService
	m	()Ljava/nio/file/WatchService;	newWatchService	newWatchService
	m	()Ljava/nio/file/FileStore;	a	store
	m	()Lawj;	b	rootPath
	m	()Lawl$a;	c	builder
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lawl;Lawj;Ljava/lang/String;Lawl$b;)V	a	lambda$buildPath$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap;Lawl;Lawj;Ljava/lang/String;Ljava/nio/file/Path;)V	a	lambda$buildPath$0
	m	()V	<clinit>	<clinit>
c	awl$a	net/minecraft/server/packs/linkfs/LinkFileSystem$Builder
	f	Lawl$b;	a	root
	m	()V	<init>	<init>
	m	(Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lawl$a;	a	put
	m	(Ljava/util/List;Ljava/nio/file/Path;)Lawl$a;	a	put
	m	(Ljava/lang/String;)Ljava/nio/file/FileSystem;	a	build
	m	(Ljava/lang/String;)Lawl$b;	b	lambda$put$0
c	awl$b	net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry
	f	Ljava/util/Map;	a	children
	f	Ljava/util/Map;	b	files
	m	()V	<init>	<init>
	m	(Ljava/util/Map;Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	children
	m	()Ljava/util/Map;	b	files
c	awm	net/minecraft/server/packs/linkfs/PathContents
	f	Lawm;	a	MISSING
	f	Lawm;	b	RELATIVE
	m	()V	<clinit>	<clinit>
c	awm$1	net/minecraft/server/packs/linkfs/PathContents$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	awm$2	net/minecraft/server/packs/linkfs/PathContents$2
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	awm$a	net/minecraft/server/packs/linkfs/PathContents$DirectoryContents
	f	Ljava/util/Map;	c	children
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	children
c	awm$b	net/minecraft/server/packs/linkfs/PathContents$FileContents
	f	Ljava/nio/file/Path;	c	contents
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	a	contents
c	awn	net/minecraft/server/packs/linkfs/package-info
c	awo	net/minecraft/server/packs/metadata/MetadataSectionType
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/serialization/Codec;	b	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Lcom/mojang/serialization/Codec;	b	codec
c	awp	net/minecraft/server/packs/metadata/pack/PackMetadataSection
	f	Lxo;	c	description
	f	I	d	packFormat
	f	Ljava/util/Optional;	e	supportedFormats
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lawo;	b	TYPE
	m	(Lxo;ILjava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	description
	m	()I	b	packFormat
	m	()Ljava/util/Optional;	c	supportedFormats
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	awq	net/minecraft/server/packs/metadata/pack/package-info
c	awr	net/minecraft/server/packs/metadata/package-info
c	aws	net/minecraft/server/packs/package-info
c	awt	net/minecraft/server/packs/repository/BuiltInPackSource
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	a	VANILLA_ID
	f	Ljava/lang/String;	b	TESTS_ID
	f	Lawv;	c	CORE_PACK_INFO
	f	Lawd;	e	packType
	f	Lawf;	f	vanillaPack
	f	Lame;	g	packDir
	f	Lfii;	h	validator
	m	(Lawd;Lawf;Lame;Lfii;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
	m	(Lawb;)Laww;	a	createVanillaPack
	m	(Ljava/lang/String;)Lxo;	a	getPackTitle
	m	()Lawf;	a	getVanillaPack
	m	(Ljava/util/function/Consumer;)V	a	listBundledPacks
	m	(Ljava/util/function/BiConsumer;)V	a	populatePackList
	m	(Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V	a	discoverPacksInPath
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	pathToId
	m	(Ljava/lang/String;Laww$c;Lxo;)Laww;	a	createBuiltinPack
	m	(Lawb;)Laww$c;	b	fixedResources
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;Laww$c;)V	a	lambda$discoverPacksInPath$3
	m	(Laww$c;Ljava/lang/String;)Laww;	a	lambda$discoverPacksInPath$2
	m	(Ljava/util/function/BiConsumer;Ljava/nio/file/Path;)V	a	lambda$populatePackList$1
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;)V	a	lambda$listBundledPacks$0
	m	()V	<clinit>	<clinit>
c	awt$1	net/minecraft/server/packs/repository/BuiltInPackSource$1
	f	Lawb;	a	val$instance
	m	(Lawb;)V	<init>	<init>
	m	(Lawa;)Lawb;	a	openPrimary
	m	(Lawa;Laww$a;)Lawb;	a	openFull
c	awu	net/minecraft/server/packs/repository/FolderRepositorySource
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lawc;	b	DISCOVERED_PACK_SELECTION_CONFIG
	f	Ljava/nio/file/Path;	c	folder
	f	Lawd;	d	packType
	f	Laxa;	e	packSource
	f	Lfii;	f	validator
	m	(Ljava/nio/file/Path;Lawd;Laxa;Lfii;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	a	nameFromPath
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
	m	(Ljava/nio/file/Path;)Lawa;	b	createDiscoveredFilePackInfo
	m	(Ljava/nio/file/Path;Lfii;Ljava/util/function/BiConsumer;)V	a	discoverPacks
	m	(Ljava/util/function/Consumer;Ljava/nio/file/Path;Laww$c;)V	a	lambda$loadPacks$0
	m	()V	<clinit>	<clinit>
c	awu$a	net/minecraft/server/packs/repository/FolderRepositorySource$FolderPackDetector
	m	(Lfii;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Laww$c;	a	createZipPack
	m	(Ljava/nio/file/Path;)Laww$c;	b	createDirectoryPack
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
c	awv	net/minecraft/server/packs/repository/KnownPack
	f	Ljava/lang/String;	c	namespace
	f	Ljava/lang/String;	d	id
	f	Ljava/lang/String;	e	version
	f	Lzm;	a	STREAM_CODEC
	f	Ljava/lang/String;	b	VANILLA_NAMESPACE
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lawv;	a	vanilla
	m	()Z	a	isVanilla
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	namespace
	m	()Ljava/lang/String;	c	id
	m	()Ljava/lang/String;	d	version
	m	()V	<clinit>	<clinit>
c	aww	net/minecraft/server/packs/repository/Pack
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lawa;	b	location
	f	Laww$c;	c	resources
	f	Laww$a;	d	metadata
	f	Lawc;	e	selectionConfig
	m	(Lawa;Laww$c;Lawd;Lawc;)Laww;	a	readMetaAndCreate
	m	(Lawa;Laww$c;Laww$a;Lawc;)V	<init>	<init>
	m	(Lawa;Laww$c;I)Laww$a;	a	readPackMetadata
	m	(Ljava/lang/String;Lawp;)Lbbt;	a	getDeclaredPackVersions
	m	()Lawa;	a	location
	m	()Lxo;	b	getTitle
	m	()Lxo;	c	getDescription
	m	(Z)Lxo;	a	getChatLink
	m	()Lawx;	d	getCompatibility
	m	()Lcyd;	e	getRequestedFeatures
	m	()Lawb;	f	open
	m	()Ljava/lang/String;	g	getId
	m	()Lawc;	h	selectionConfig
	m	()Z	i	isRequired
	m	()Z	j	isFixedPosition
	m	()Laww$b;	k	getDefaultPosition
	m	()Laxa;	l	getPackSource
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	aww$a	net/minecraft/server/packs/repository/Pack$Metadata
	f	Lxo;	a	description
	f	Lawx;	b	compatibility
	f	Lcyd;	c	requestedFeatures
	f	Ljava/util/List;	d	overlays
	m	(Lxo;Lawx;Lcyd;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	description
	m	()Lawx;	b	compatibility
	m	()Lcyd;	c	requestedFeatures
	m	()Ljava/util/List;	d	overlays
c	aww$b	net/minecraft/server/packs/repository/Pack$Position
	f	Laww$b;	a	TOP
	f	Laww$b;	b	BOTTOM
	f	[Laww$b;	c	$VALUES
	m	()[Laww$b;	values	values
	m	(Ljava/lang/String;)Laww$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I	a	insert
	m	()Laww$b;	a	opposite
	m	()[Laww$b;	b	$values
	m	()V	<clinit>	<clinit>
c	aww$c	net/minecraft/server/packs/repository/Pack$ResourcesSupplier
	m	(Lawa;)Lawb;	a	openPrimary
	m	(Lawa;Laww$a;)Lawb;	a	openFull
c	awx	net/minecraft/server/packs/repository/PackCompatibility
	f	Lawx;	a	TOO_OLD
	f	Lawx;	b	TOO_NEW
	f	Lawx;	c	COMPATIBLE
	f	Lxo;	d	description
	f	Lxo;	e	confirmation
	f	[Lawx;	f	$VALUES
	m	()[Lawx;	values	values
	m	(Ljava/lang/String;)Lawx;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Z	a	isCompatible
	m	(Lbbt;I)Lawx;	a	forVersion
	m	()Lxo;	b	getDescription
	m	()Lxo;	c	getConfirmation
	m	()[Lawx;	d	$values
	m	()V	<clinit>	<clinit>
c	awy	net/minecraft/server/packs/repository/PackDetector
	f	Lfii;	a	validator
	m	(Lfii;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/Object;	a	detectPackResources
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	d	createZipPack
	m	(Ljava/nio/file/Path;)Ljava/lang/Object;	c	createDirectoryPack
c	awz	net/minecraft/server/packs/repository/PackRepository
	f	Ljava/util/Set;	a	sources
	f	Ljava/util/Map;	b	available
	f	Ljava/util/List;	c	selected
	m	([Laxb;)V	<init>	<init>
	m	(Ljava/util/Collection;)Ljava/lang/String;	a	displayPackList
	m	()V	a	reload
	m	()Ljava/util/Map;	i	discoverAvailable
	m	()Z	b	isAbleToClearAnyPack
	m	(Ljava/util/Collection;)V	b	setSelected
	m	(Ljava/lang/String;)Z	a	addPack
	m	(Ljava/lang/String;)Z	b	removePack
	m	(Ljava/util/Collection;)Ljava/util/List;	c	rebuildSelected
	m	(Ljava/util/Collection;)Ljava/util/stream/Stream;	d	getAvailablePacks
	m	()Ljava/util/Collection;	c	getAvailableIds
	m	()Ljava/util/Collection;	d	getAvailablePacks
	m	()Ljava/util/Collection;	e	getSelectedIds
	m	()Lcyd;	f	getRequestedFeatureFlags
	m	()Ljava/util/Collection;	g	getSelectedPacks
	m	(Ljava/lang/String;)Laww;	c	getPack
	m	(Ljava/lang/String;)Z	d	isAvailable
	m	()Ljava/util/List;	h	openAllSelected
	m	(Ljava/util/Map;Laww;)V	a	lambda$discoverAvailable$1
	m	(Laww;)Ljava/lang/String;	a	lambda$displayPackList$0
c	axa	net/minecraft/server/packs/repository/PackSource
	f	Ljava/util/function/UnaryOperator;	a	NO_DECORATION
	f	Laxa;	b	DEFAULT
	f	Laxa;	c	BUILT_IN
	f	Laxa;	d	FEATURE
	f	Laxa;	e	WORLD
	f	Laxa;	f	SERVER
	m	(Lxo;)Lxo;	a	decorate
	m	()Z	a	shouldAddAutomatically
	m	(Ljava/util/function/UnaryOperator;Z)Laxa;	a	create
	m	(Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	decorateWithSource
	m	(Lxo;Lxo;)Lxo;	a	lambda$decorateWithSource$0
	m	()V	<clinit>	<clinit>
c	axa$1	net/minecraft/server/packs/repository/PackSource$1
	f	Ljava/util/function/UnaryOperator;	g	val$decorator
	f	Z	h	val$addAutomatically
	m	(Ljava/util/function/UnaryOperator;Z)V	<init>	<init>
	m	(Lxo;)Lxo;	a	decorate
	m	()Z	a	shouldAddAutomatically
c	axb	net/minecraft/server/packs/repository/RepositorySource
	m	(Ljava/util/function/Consumer;)V	loadPacks	loadPacks
c	axc	net/minecraft/server/packs/repository/ServerPacksSource
	f	Lawp;	d	VERSION_METADATA_SECTION
	f	Lavx;	e	FEATURE_FLAGS_METADATA_SECTION
	f	Lavt;	f	BUILT_IN_METADATA
	f	Lawa;	g	VANILLA_PACK_INFO
	f	Lawc;	h	VANILLA_SELECTION_CONFIG
	f	Lawc;	i	FEATURE_SELECTION_CONFIG
	f	Lame;	j	PACKS_DIR
	m	(Lfii;)V	<init>	<init>
	m	(Ljava/lang/String;Lxo;)Lawa;	a	createBuiltInPackLocation
	m	()Lawf;	b	createVanillaPackSource
	m	(Ljava/lang/String;)Lxo;	a	getPackTitle
	m	(Lawb;)Laww;	a	createVanillaPack
	m	(Ljava/lang/String;Laww$c;Lxo;)Laww;	a	createBuiltinPack
	m	(Ljava/nio/file/Path;Lfii;)Lawz;	a	createPackRepository
	m	()Lawz;	c	createVanillaTrustedRepository
	m	(Lfcs$c;)Lawz;	a	createPackRepository
	m	(Ljava/nio/file/Path;)Z	a	lambda$createVanillaTrustedRepository$0
	m	()V	<clinit>	<clinit>
c	axd	net/minecraft/server/packs/repository/package-info
c	axe	net/minecraft/server/packs/resources/CloseableResourceManager
	m	()V	close	close
c	axf	net/minecraft/server/packs/resources/FallbackResourceManager
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	a	fallbacks
	f	Lawd;	d	type
	f	Ljava/lang/String;	e	namespace
	m	(Lawd;Ljava/lang/String;)V	<init>	<init>
	m	(Lawb;)V	a	push
	m	(Lawb;Ljava/util/function/Predicate;)V	a	push
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)V	a	pushFilterOnly
	m	(Ljava/lang/String;Lawb;Ljava/util/function/Predicate;)V	a	pushInternal
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lame;)Ljava/util/Optional;	getResource	getResource
	m	(Lawb;Lame;Laxg;Laxg;)Laxm;	a	createResource
	m	(Lame;Lawb;Laxg;)Laxg;	a	wrapForDebug
	m	(Lame;)Ljava/util/List;	a	getResourceStack
	m	(Lame;)Z	b	isMetadata
	m	(Lame;)Lame;	c	getResourceLocationFromMetadata
	m	(Lame;)Lame;	d	getMetadataLocation
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
	m	(Lame;I)Laxg;	a	createStackMetadataFinder
	m	(Laxg;)Laxg;	a	convertToMetadata
	m	(Laxg;)Laxq;	b	parseMetadata
	m	(Laxf$d;Ljava/util/Map;)V	a	applyPackFiltersToExistingResources
	m	(Laxf$d;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V	a	listPackResources
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Laxf$d;)Lawb;	a	lambda$listPacks$7
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lawb;Lame;Laxg;)V	a	lambda$listPackResources$6
	m	(Laxg;)Laxq;	c	lambda$convertToMetadata$5
	m	(Lame;I)Laxq;	b	lambda$createStackMetadataFinder$4
	m	(Ljava/util/Map;Ljava/util/Map;Lame;Laxf$a;)V	a	lambda$listResources$3
	m	(Ljava/util/function/Predicate;Ljava/util/Map;Lawb;ILjava/util/Map;Lame;Laxg;)V	a	lambda$listResources$2
	m	(Lawb;Lame;)Laxq;	a	lambda$getResourceStack$1
	m	(Laxg;Lame;Lawb;)Ljava/io/InputStream;	a	lambda$wrapForDebug$0
	m	()V	<clinit>	<clinit>
c	axf$a	net/minecraft/server/packs/resources/FallbackResourceManager$1ResourceWithSourceAndIndex
	f	Lawb;	a	packResources
	f	Laxg;	b	resource
	f	I	c	packIndex
	m	(Lawb;Laxg;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lawb;	a	packResources
	m	()Laxg;	b	resource
	m	()I	c	packIndex
c	axf$b	net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack
	f	Lame;	a	fileLocation
	f	Lame;	b	metadataLocation
	f	Ljava/util/List;	c	fileSources
	f	Ljava/util/Map;	d	metaSources
	m	(Lame;)V	<init>	<init>
	m	(Lame;Lame;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	fileLocation
	m	()Lame;	b	metadataLocation
	m	()Ljava/util/List;	c	fileSources
	m	()Ljava/util/Map;	d	metaSources
c	axf$c	net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream
	f	Ljava/util/function/Supplier;	a	message
	f	Z	b	closed
	m	(Ljava/io/InputStream;Lame;Ljava/lang/String;)V	<init>	<init>
	m	()V	close	close
	m	()V	finalize	finalize
	m	(Ljava/lang/Exception;Lame;Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
c	axf$d	net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry
	f	Ljava/lang/String;	a	name
	f	Lawb;	b	resources
	f	Ljava/util/function/Predicate;	c	filter
	m	(Ljava/lang/String;Lawb;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljava/util/Collection;)V	a	filterAll
	m	(Lame;)Z	a	isFiltered
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Lawb;	b	resources
	m	()Ljava/util/function/Predicate;	c	filter
c	axf$e	net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource
	f	Lawb;	a	source
	f	Laxg;	b	resource
	m	(Lawb;Laxg;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lawb;	a	source
	m	()Laxg;	b	resource
c	axg	net/minecraft/server/packs/resources/IoSupplier
	m	(Ljava/nio/file/Path;)Laxg;	create	create
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Laxg;	create	create
	m	()Ljava/lang/Object;	get	get
	m	(Ljava/util/zip/ZipFile;Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;	a	lambda$create$1
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	a	lambda$create$0
c	axh	net/minecraft/server/packs/resources/MultiPackResourceManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	c	namespacedManagers
	f	Ljava/util/List;	d	packs
	m	(Lawd;Ljava/util/List;)V	<init>	<init>
	m	(Lawb;)Laxn;	a	getPackFilterSection
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lame;)Ljava/util/Optional;	getResource	getResource
	m	(Lame;)Ljava/util/List;	a	getResourceStack
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
	m	(Ljava/lang/String;)V	a	checkTrailingDirectoryPath
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	()V	close	close
	m	(Laxn;Lame;)Z	a	lambda$new$1
	m	(Lawd;Lawb;)Ljava/util/stream/Stream;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	axi	net/minecraft/server/packs/resources/PreparableReloadListener
	m	(Laxi$a;Laxo;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	reload	reload
	m	()Ljava/lang/String;	getName	getName
c	axi$a	net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	wait	wait
c	axj	net/minecraft/server/packs/resources/ProfiledReloadInstance
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/base/Stopwatch;	b	total
	m	(Laxo;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Laxk;	a	of
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Laxo;Ljava/util/List;Laxu$a;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	prepareTasks
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/String;)Ljava/util/concurrent/Executor;	a	profiledExecutor
	m	(Ljava/util/List;)Ljava/util/List;	a	finish
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Runnable;)V	a	lambda$profiledExecutor$3
	m	(Ljava/lang/String;Ljava/lang/Runnable;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	a	lambda$profiledExecutor$2
	m	(Ljava/util/concurrent/Executor;Laxi$a;Laxo;Laxi;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$of$1
	m	(Laxi;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/lang/Void;)Laxj$a;	a	lambda$of$0
	m	()V	<clinit>	<clinit>
c	axj$a	net/minecraft/server/packs/resources/ProfiledReloadInstance$State
	f	Ljava/lang/String;	a	name
	f	Ljava/util/concurrent/atomic/AtomicLong;	b	preparationNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	preparationCount
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	reloadNanos
	f	Ljava/util/concurrent/atomic/AtomicLong;	e	reloadCount
	m	(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;Ljava/util/concurrent/atomic/AtomicLong;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Ljava/util/concurrent/atomic/AtomicLong;	b	preparationNanos
	m	()Ljava/util/concurrent/atomic/AtomicLong;	c	preparationCount
	m	()Ljava/util/concurrent/atomic/AtomicLong;	d	reloadNanos
	m	()Ljava/util/concurrent/atomic/AtomicLong;	e	reloadCount
c	axk	net/minecraft/server/packs/resources/ReloadInstance
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	()Z	c	isDone
	m	()V	d	checkExceptions
c	axl	net/minecraft/server/packs/resources/ReloadableResourceManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Laxe;	c	resources
	f	Ljava/util/List;	d	listeners
	f	Lawd;	e	type
	m	(Lawd;)V	<init>	<init>
	m	()V	close	close
	m	(Laxi;)V	a	registerReloadListener
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Laxk;	a	createReload
	m	(Lame;)Ljava/util/Optional;	getResource	getResource
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lame;)Ljava/util/List;	a	getResourceStack
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	(Ljava/util/List;)Ljava/lang/Object;	a	lambda$createReload$0
	m	()V	<clinit>	<clinit>
c	axm	net/minecraft/server/packs/resources/Resource
	f	Lawb;	a	source
	f	Laxg;	b	streamSupplier
	f	Laxg;	c	metadataSupplier
	f	Laxq;	d	cachedMetadata
	m	(Lawb;Laxg;Laxg;)V	<init>	<init>
	m	(Lawb;Laxg;)V	<init>	<init>
	m	()Lawb;	a	source
	m	()Ljava/lang/String;	b	sourcePackId
	m	()Ljava/util/Optional;	c	knownPackInfo
	m	()Ljava/io/InputStream;	d	open
	m	()Ljava/io/BufferedReader;	e	openAsReader
	m	()Laxq;	f	metadata
c	axn	net/minecraft/server/packs/resources/ResourceFilterSection
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lawo;	a	TYPE
	f	Ljava/util/List;	c	blockList
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/lang/String;)Z	a	isNamespaceFiltered
	m	(Ljava/lang/String;)Z	b	isPathFiltered
	m	(Ljava/lang/String;Lbcm;)Z	a	lambda$isPathFiltered$3
	m	(Ljava/lang/String;Lbcm;)Z	b	lambda$isNamespaceFiltered$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Laxn;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	axo	net/minecraft/server/packs/resources/ResourceManager
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lame;)Ljava/util/List;	a	getResourceStack
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
	m	()Ljava/util/stream/Stream;	b	listPacks
c	axo$a	net/minecraft/server/packs/resources/ResourceManager$Empty
	f	Laxo$a;	a	INSTANCE
	f	[Laxo$a;	c	$VALUES
	m	()[Laxo$a;	values	values
	m	(Ljava/lang/String;)Laxo$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Ljava/util/Set;	a	getNamespaces
	m	(Lame;)Ljava/util/Optional;	getResource	getResource
	m	(Lame;)Ljava/util/List;	a	getResourceStack
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	b	listResources
	m	(Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map;	c	listResourceStacks
	m	()Ljava/util/stream/Stream;	b	listPacks
	m	()[Laxo$a;	c	$values
	m	()V	<clinit>	<clinit>
c	axp	net/minecraft/server/packs/resources/ResourceManagerReloadListener
	m	(Laxi$a;Laxo;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	reload	reload
	m	(Laxo;)V	a	onResourceManagerReload
	m	(Laxo;)V	b	lambda$reload$0
c	axq	net/minecraft/server/packs/resources/ResourceMetadata
	f	Laxq;	a	EMPTY
	f	Laxg;	b	EMPTY_SUPPLIER
	m	(Ljava/io/InputStream;)Laxq;	a	fromJsonStream
	m	(Lawo;)Ljava/util/Optional;	a	getSection
	m	(Ljava/util/Collection;)Laxq;	a	copySections
	m	(Laxq$a;Lawo;)V	a	copySection
	m	(Laxq$a;Lawo;Ljava/lang/Object;)V	a	lambda$copySection$1
	m	()Laxq;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	axq$1	net/minecraft/server/packs/resources/ResourceMetadata$1
	m	()V	<init>	<init>
	m	(Lawo;)Ljava/util/Optional;	a	getSection
c	axq$2	net/minecraft/server/packs/resources/ResourceMetadata$2
	f	Lcom/google/gson/JsonObject;	c	val$metadata
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	(Lawo;)Ljava/util/Optional;	a	getSection
c	axq$a	net/minecraft/server/packs/resources/ResourceMetadata$Builder
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	map
	m	()V	<init>	<init>
	m	(Lawo;Ljava/lang/Object;)Laxq$a;	a	put
	m	()Laxq;	a	build
c	axq$a$1	net/minecraft/server/packs/resources/ResourceMetadata$Builder$1
	f	Lcom/google/common/collect/ImmutableMap;	c	val$map
	m	(Laxq$a;Lcom/google/common/collect/ImmutableMap;)V	<init>	<init>
	m	(Lawo;)Ljava/util/Optional;	a	getSection
c	axr	net/minecraft/server/packs/resources/ResourceProvider
	f	Laxr;	b	EMPTY
	m	(Lame;)Ljava/util/Optional;	getResource	getResource
	m	(Lame;)Laxm;	getResourceOrThrow	getResourceOrThrow
	m	(Lame;)Ljava/io/InputStream;	open	open
	m	(Lame;)Ljava/io/BufferedReader;	openAsReader	openAsReader
	m	(Ljava/util/Map;)Laxr;	fromMap	fromMap
	m	(Ljava/util/Map;Lame;)Ljava/util/Optional;	a	lambda$fromMap$2
	m	(Lame;)Ljava/io/FileNotFoundException;	b	lambda$getResourceOrThrow$1
	m	(Lame;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	axs	net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/mojang/serialization/DynamicOps;	b	ops
	f	Lcom/mojang/serialization/Codec;	c	codec
	f	Lalx;	d	lister
	m	(Ljn$a;Lcom/mojang/serialization/Codec;Lamd;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Lalx;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lalx;)V	<init>	<init>
	m	(Laxo;Lbtt;)Ljava/util/Map;	a	prepare
	m	(Laxo;Lamd;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/util/Map;)V	a	scanDirectory
	m	(Laxo;Lalx;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/util/Map;)V	a	scanDirectory
	m	(Laxo;Lbtt;)Ljava/lang/Object;	b	prepare
	m	(Lame;Lame;Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$scanDirectory$1
	m	(Ljava/util/Map;Lame;Ljava/lang/Object;)V	a	lambda$scanDirectory$0
	m	()V	<clinit>	<clinit>
c	axt	net/minecraft/server/packs/resources/SimplePreparableReloadListener
	m	()V	<init>	<init>
	m	(Laxi$a;Laxo;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	reload	reload
	m	(Laxo;Lbtt;)Ljava/lang/Object;	b	prepare
	m	(Ljava/lang/Object;Laxo;Lbtt;)V	a	apply
	m	(Laxo;Ljava/lang/Object;)V	a	lambda$reload$1
	m	(Laxo;)Ljava/lang/Object;	a	lambda$reload$0
c	axu	net/minecraft/server/packs/resources/SimpleReloadInstance
	f	I	a	PREPARATION_PROGRESS_WEIGHT
	f	I	b	EXTRA_RELOAD_PROGRESS_WEIGHT
	f	I	c	LISTENER_PROGRESS_WEIGHT
	f	Ljava/util/concurrent/CompletableFuture;	d	allPreparations
	f	Ljava/util/concurrent/CompletableFuture;	e	allDone
	f	Ljava/util/Set;	f	preparingListeners
	f	I	g	listenerCount
	f	Ljava/util/concurrent/atomic/AtomicInteger;	h	startedTasks
	f	Ljava/util/concurrent/atomic/AtomicInteger;	i	finishedTasks
	f	Ljava/util/concurrent/atomic/AtomicInteger;	j	startedReloads
	f	Ljava/util/concurrent/atomic/AtomicInteger;	k	finishedReloads
	m	(Laxo;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Laxk;	b	of
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Laxo;Ljava/util/List;Laxu$a;Ljava/util/concurrent/CompletableFuture;)V	b	startTasks
	m	(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Laxo;Ljava/util/List;Laxu$a;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture;	a	prepareTasks
	m	(Laxi;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;)Laxi$a;	a	createBarrierForListener
	m	()Ljava/util/concurrent/CompletableFuture;	a	done
	m	()F	b	getActualProgress
	m	(III)I	a	weightProgress
	m	(Laxo;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Laxk;	a	create
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	a	lambda$prepareTasks$3
	m	(Ljava/lang/Runnable;)V	a	lambda$prepareTasks$2
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V	b	lambda$prepareTasks$1
	m	(Ljava/lang/Runnable;)V	b	lambda$prepareTasks$0
c	axu$1	net/minecraft/server/packs/resources/SimpleReloadInstance$1
	f	Ljava/util/concurrent/Executor;	a	val$mainThreadExecutor
	f	Laxi;	b	val$listener
	f	Ljava/util/concurrent/CompletableFuture;	c	val$previousBarrier
	f	Laxu;	d	this$0
	m	(Laxu;Ljava/util/concurrent/Executor;Laxi;Ljava/util/concurrent/CompletableFuture;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture;	wait	wait
	m	(Ljava/lang/Object;Lbdk;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$wait$1
	m	(Laxi;)V	a	lambda$wait$0
c	axu$a	net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory
	f	Laxu$a;	a	SIMPLE
	m	(Laxi$a;Laxo;Laxi;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	create	create
	m	(Laxi$a;Laxo;Laxi;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	axv	net/minecraft/server/packs/resources/package-info
c	axw	net/minecraft/server/players/BanListEntry
	f	Ljava/text/SimpleDateFormat;	a	DATE_FORMAT
	f	Ljava/lang/String;	b	EXPIRES_NEVER
	f	Ljava/util/Date;	c	created
	f	Ljava/lang/String;	d	source
	f	Ljava/util/Date;	e	expires
	f	Ljava/lang/String;	f	reason
	m	(Ljava/lang/Object;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Object;Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	()Ljava/util/Date;	a	getCreated
	m	()Ljava/lang/String;	b	getSource
	m	()Ljava/util/Date;	c	getExpires
	m	()Ljava/lang/String;	d	getReason
	m	()Lxo;	e	getDisplayName
	m	()Z	f	hasExpired
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()V	<clinit>	<clinit>
c	axx	net/minecraft/server/players/GameProfileCache
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	GAMEPROFILES_MRU_LIMIT
	f	I	c	GAMEPROFILES_EXPIRATION_MONTHS
	f	Z	d	usesAuthentication
	f	Ljava/util/Map;	e	profilesByName
	f	Ljava/util/Map;	f	profilesByUUID
	f	Ljava/util/Map;	g	requests
	f	Lcom/mojang/authlib/GameProfileRepository;	h	profileRepository
	f	Lcom/google/gson/Gson;	i	gson
	f	Ljava/io/File;	j	file
	f	Ljava/util/concurrent/atomic/AtomicLong;	k	operationCount
	f	Ljava/util/concurrent/Executor;	l	executor
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/io/File;)V	<init>	<init>
	m	(Laxx$a;)V	a	safeAdd
	m	(Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional;	a	lookupGameProfile
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	createUnknownProfile
	m	(Z)V	a	setUsesAuthentication
	m	()Z	d	usesAuthentication
	m	(Lcom/mojang/authlib/GameProfile;)V	a	add
	m	()J	e	getNextOperation
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	get
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	b	getAsync
	m	(Ljava/util/UUID;)Ljava/util/Optional;	a	get
	m	(Ljava/util/concurrent/Executor;)V	a	setExecutor
	m	()V	a	clearExecutor
	m	()Ljava/text/DateFormat;	f	createDateFormat
	m	()Ljava/util/List;	b	load
	m	()V	c	save
	m	(I)Ljava/util/stream/Stream;	a	getTopMRUProfiles
	m	(Laxx$a;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement;	a	writeGameProfile
	m	(Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional;	a	readGameProfile
	m	(Lcom/google/gson/JsonArray;Ljava/text/DateFormat;Laxx$a;)V	a	lambda$save$3
	m	(Ljava/text/DateFormat;Ljava/util/List;Lcom/google/gson/JsonElement;)V	a	lambda$load$2
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/lang/Throwable;)V	a	lambda$getAsync$1
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	lambda$getAsync$0
	m	()V	<clinit>	<clinit>
c	axx$a	net/minecraft/server/players/GameProfileCache$GameProfileInfo
	f	Lcom/mojang/authlib/GameProfile;	a	profile
	f	Ljava/util/Date;	b	expirationDate
	f	J	c	lastAccess
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V	<init>	<init>
	m	()Lcom/mojang/authlib/GameProfile;	a	getProfile
	m	()Ljava/util/Date;	b	getExpirationDate
	m	(J)V	a	setLastAccess
	m	()J	c	getLastAccess
c	axy	net/minecraft/server/players/IpBanList
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)Layf;	a	createEntry
	m	(Ljava/net/SocketAddress;)Z	a	isBanned
	m	(Ljava/lang/String;)Z	a	isBanned
	m	(Ljava/net/SocketAddress;)Laxz;	b	get
	m	(Ljava/net/SocketAddress;)Ljava/lang/String;	c	getIpFromAddress
c	axz	net/minecraft/server/players/IpBanListEntry
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
	m	()Lxo;	e	getDisplayName
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)Ljava/lang/String;	b	createIpInfo
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
c	aya	net/minecraft/server/players/OldUsersConverter
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/io/File;	a	OLD_IPBANLIST
	f	Ljava/io/File;	b	OLD_USERBANLIST
	f	Ljava/io/File;	c	OLD_OPLIST
	f	Ljava/io/File;	d	OLD_WHITELIST
	m	()V	<init>	<init>
	m	(Ljava/io/File;Ljava/util/Map;)Ljava/util/List;	a	readOldListFormat
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V	a	lookupPlayers
	m	(Lnet/minecraft/server/MinecraftServer;)Z	a	convertUserBanlist
	m	(Lnet/minecraft/server/MinecraftServer;)Z	b	convertIpBanlist
	m	(Lnet/minecraft/server/MinecraftServer;)Z	c	convertOpsList
	m	(Lnet/minecraft/server/MinecraftServer;)Z	d	convertWhiteList
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID;	a	convertMobOwnerIfNecessary
	m	(Lari;)Z	a	convertPlayers
	m	(Ljava/io/File;)V	a	ensureDirectoryExists
	m	(Lnet/minecraft/server/MinecraftServer;)Z	e	serverReadyAfterUserconversion
	m	()Z	a	areOldUserlistsRemoved
	m	(Lnet/minecraft/server/MinecraftServer;)Z	f	areOldPlayersConverted
	m	(Lnet/minecraft/server/MinecraftServer;)Ljava/io/File;	g	getWorldPlayersDirectory
	m	(Ljava/io/File;)V	b	renameOldFile
	m	(Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date;	a	parseDate
	m	(I)[Ljava/lang/String;	a	lambda$lookupPlayers$1
	m	(Ljava/lang/String;)Z	a	lambda$lookupPlayers$0
	m	()V	<clinit>	<clinit>
c	aya$1	net/minecraft/server/players/OldUsersConverter$1
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/Map;	b	val$userMap
	f	Layh;	c	val$bans
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/Map;Layh;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
c	aya$2	net/minecraft/server/players/OldUsersConverter$2
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Layc;	b	val$opsList
	m	(Lnet/minecraft/server/MinecraftServer;Layc;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
c	aya$3	net/minecraft/server/players/OldUsersConverter$3
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Layj;	b	val$whitelist
	m	(Lnet/minecraft/server/MinecraftServer;Layj;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
c	aya$4	net/minecraft/server/players/OldUsersConverter$4
	f	Lnet/minecraft/server/MinecraftServer;	a	val$server
	f	Ljava/util/List;	b	val$profiles
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
c	aya$5	net/minecraft/server/players/OldUsersConverter$5
	f	Lari;	a	val$server
	f	Ljava/io/File;	b	val$worldNewPlayerDirectory
	f	Ljava/io/File;	c	val$unknownPlayerDirectory
	f	Ljava/io/File;	d	val$worldPlayerDirectory
	f	[Ljava/lang/String;	e	val$names
	m	(Lari;Ljava/io/File;Ljava/io/File;Ljava/io/File;[Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	onProfileLookupSucceeded	onProfileLookupSucceeded
	m	(Ljava/lang/String;Ljava/lang/Exception;)V	onProfileLookupFailed	onProfileLookupFailed
	m	(Ljava/io/File;Ljava/lang/String;Ljava/lang/String;)V	a	movePlayerFile
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getFileNameForProfile
c	aya$a	net/minecraft/server/players/OldUsersConverter$ConversionError
	m	(Ljava/lang/String;Ljava/lang/Throwable;)V	<init>	<init>
	m	(Ljava/lang/String;)V	<init>	<init>
c	ayb	net/minecraft/server/players/PlayerList
	f	Ljava/io/File;	a	USERBANLIST_FILE
	f	Ljava/io/File;	b	IPBANLIST_FILE
	f	Ljava/io/File;	c	OPLIST_FILE
	f	Ljava/io/File;	d	WHITELIST_FILE
	f	Lxo;	e	CHAT_FILTERED_FULL
	f	Lxo;	f	DUPLICATE_LOGIN_DISCONNECT_MESSAGE
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	I	i	SEND_PLAYER_INFO_INTERVAL
	f	Ljava/text/SimpleDateFormat;	j	BAN_DATE_FORMAT
	f	Lnet/minecraft/server/MinecraftServer;	k	server
	f	Ljava/util/List;	l	players
	f	Ljava/util/Map;	m	playersByUUID
	f	Layh;	n	bans
	f	Laxy;	o	ipBans
	f	Layc;	p	ops
	f	Layj;	q	whitelist
	f	Ljava/util/Map;	r	stats
	f	Ljava/util/Map;	s	advancements
	f	Lfcv;	t	playerIo
	f	Z	u	doWhiteList
	f	Ljs;	v	registries
	f	I	g	maxPlayers
	f	I	w	viewDistance
	f	I	x	simulationDistance
	f	Z	y	allowCommandsForAllPlayers
	f	Z	z	ALLOW_LOGOUTIVATOR
	f	I	A	sendAllPlayerInfoIn
	m	(Lnet/minecraft/server/MinecraftServer;Ljs;Lfcv;I)V	<init>	<init>
	m	(Lwd;Lauc;Laur;)V	a	placeNewPlayer
	m	(Lamx;Lauc;)V	a	updateEntireScoreboard
	m	(Laub;)V	a	addWorldborderListener
	m	(Lauc;Lbci;)Ljava/util/Optional;	a	load
	m	(Lauc;)V	a	save
	m	(Lauc;)V	b	remove
	m	(Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lxo;	a	canPlayerLogin
	m	(Lcom/mojang/authlib/GameProfile;)Z	e	disconnectAllPlayersWithProfile
	m	(Lauc;ZLbzm$e;)Lauc;	a	respawn
	m	(Lauc;)V	c	sendActivePlayerEffects
	m	(Lcam;Lavf;)V	a	sendActiveEffects
	m	(Lauc;)V	d	sendPlayerPermissionLevel
	m	()V	d	tick
	m	(Lzw;)V	a	broadcastAll
	m	(Lzw;Lamd;)V	a	broadcastAll
	m	(Lcut;Lxo;)V	a	broadcastSystemToTeam
	m	(Lcut;Lxo;)V	b	broadcastSystemToAllExceptTeam
	m	()[Ljava/lang/String;	e	getPlayerNamesArray
	m	()Layh;	f	getBans
	m	()Laxy;	g	getIpBans
	m	(Lcom/mojang/authlib/GameProfile;)V	a	op
	m	(Lcom/mojang/authlib/GameProfile;)V	b	deop
	m	(Lauc;I)V	a	sendPlayerPermissionLevel
	m	(Lcom/mojang/authlib/GameProfile;)Z	c	isWhiteListed
	m	(Lcom/mojang/authlib/GameProfile;)Z	f	isOp
	m	(Ljava/lang/String;)Lauc;	a	getPlayerByName
	m	(Lcut;DDDDLamd;Lzw;)V	a	broadcast
	m	()V	h	saveAll
	m	()Layj;	i	getWhiteList
	m	()[Ljava/lang/String;	j	getWhiteListNames
	m	()Layc;	k	getOps
	m	()[Ljava/lang/String;	l	getOpNames
	m	()V	a	reloadWhiteList
	m	(Lauc;Laub;)V	a	sendLevelInfo
	m	(Lauc;)V	e	sendAllPlayerInfo
	m	()I	m	getPlayerCount
	m	()I	n	getMaxPlayers
	m	()Z	o	isUsingWhitelist
	m	(Z)V	a	setUsingWhiteList
	m	(Ljava/lang/String;)Ljava/util/List;	b	getPlayersWithAddress
	m	()I	p	getViewDistance
	m	()I	q	getSimulationDistance
	m	()Lnet/minecraft/server/MinecraftServer;	c	getServer
	m	()Lui;	r	getSingleplayerData
	m	(Z)V	b	setAllowCommandsForAllPlayers
	m	()V	s	removeAll
	m	(Lxo;Z)V	a	broadcastSystemMessage
	m	(Lxo;Ljava/util/function/Function;Z)V	a	broadcastSystemMessage
	m	(Lye;Lek;Lxk$a;)V	a	broadcastChatMessage
	m	(Lye;Lauc;Lxk$a;)V	a	broadcastChatMessage
	m	(Lye;Ljava/util/function/Predicate;Lauc;Lxk$a;)V	a	broadcastChatMessage
	m	(Lye;)Z	a	verifyChatTrusted
	m	(Lcut;)Lazf;	a	getPlayerStats
	m	(Lauc;)Lamm;	f	getPlayerAdvancements
	m	(I)V	a	setViewDistance
	m	(I)V	b	setSimulationDistance
	m	()Ljava/util/List;	t	getPlayers
	m	(Ljava/util/UUID;)Lauc;	a	getPlayer
	m	(Lcom/mojang/authlib/GameProfile;)Z	d	canBypassPlayerLimit
	m	()V	u	reloadResources
	m	()Z	v	isAllowCommandsForAllPlayers
	m	(Lxo;Lauc;)Lxo;	a	lambda$broadcastSystemMessage$3
	m	(Lbzm;)V	a	lambda$remove$2
	m	(Lauc;Lfda;)V	a	lambda$placeNewPlayer$1
	m	(Lfda;)Ljava/util/Optional;	a	lambda$placeNewPlayer$0
	m	()V	<clinit>	<clinit>
c	ayb$1	net/minecraft/server/players/PlayerList$1
	f	Layb;	a	this$0
	m	(Layb;)V	<init>	<init>
	m	(Left;D)V	a	onBorderSizeSet
	m	(Left;DDJ)V	a	onBorderSizeLerping
	m	(Left;DD)V	a	onBorderCenterSet
	m	(Left;I)V	a	onBorderSetWarningTime
	m	(Left;I)V	b	onBorderSetWarningBlocks
	m	(Left;D)V	b	onBorderSetDamagePerBlock
	m	(Left;D)V	c	onBorderSetDamageSafeZOne
c	ayc	net/minecraft/server/players/ServerOpList
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)Layf;	a	createEntry
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	canBypassPlayerLimit
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
c	ayd	net/minecraft/server/players/ServerOpListEntry
	f	I	a	level
	f	Z	b	bypassesPlayerLimit
	m	(Lcom/mojang/authlib/GameProfile;IZ)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	()I	a	getLevel
	m	()Z	b	getBypassesPlayerLimit
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
c	aye	net/minecraft/server/players/SleepStatus
	f	I	a	activePlayers
	f	I	b	sleepingPlayers
	m	()V	<init>	<init>
	m	(I)Z	a	areEnoughSleeping
	m	(ILjava/util/List;)Z	a	areEnoughDeepSleeping
	m	(I)I	b	sleepersNeeded
	m	()V	a	removeAllSleepers
	m	()I	b	amountSleeping
	m	(Ljava/util/List;)Z	a	update
c	ayf	net/minecraft/server/players/StoredUserEntry
	f	Ljava/lang/Object;	a	user
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/Object;	g	getUser
	m	()Z	f	hasExpired
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
c	ayg	net/minecraft/server/players/StoredUserList
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/gson/Gson;	b	GSON
	f	Ljava/io/File;	c	file
	f	Ljava/util/Map;	d	map
	m	(Ljava/io/File;)V	<init>	<init>
	m	()Ljava/io/File;	b	getFile
	m	(Layf;)V	a	add
	m	(Ljava/lang/Object;)Layf;	b	get
	m	(Ljava/lang/Object;)V	c	remove
	m	(Layf;)V	b	remove
	m	()[Ljava/lang/String;	a	getUserList
	m	()Z	c	isEmpty
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(Ljava/lang/Object;)Z	d	contains
	m	()V	g	removeExpired
	m	(Lcom/google/gson/JsonObject;)Layf;	a	createEntry
	m	()Ljava/util/Collection;	d	getEntries
	m	()V	e	save
	m	()V	f	load
	m	(Layf;)Lcom/google/gson/JsonObject;	c	lambda$save$0
	m	()V	<clinit>	<clinit>
c	ayh	net/minecraft/server/players/UserBanList
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)Layf;	a	createEntry
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isBanned
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
c	ayi	net/minecraft/server/players/UserBanListEntry
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;Ljava/util/Date;Ljava/lang/String;Ljava/util/Date;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	()Lxo;	e	getDisplayName
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
c	ayj	net/minecraft/server/players/UserWhiteList
	m	(Ljava/io/File;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)Layf;	a	createEntry
	m	(Lcom/mojang/authlib/GameProfile;)Z	a	isWhiteListed
	m	()[Ljava/lang/String;	a	getUserList
	m	(Lcom/mojang/authlib/GameProfile;)Ljava/lang/String;	b	getKeyForUser
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getKeyForUser
	m	(I)[Ljava/lang/String;	a	lambda$getUserList$0
c	ayk	net/minecraft/server/players/UserWhiteListEntry
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;)V	a	serialize
	m	(Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile;	b	createGameProfile
c	ayl	net/minecraft/server/players/package-info
c	aym	net/minecraft/server/rcon/NetworkDataOutputStream
	f	Ljava/io/ByteArrayOutputStream;	a	outputStream
	f	Ljava/io/DataOutputStream;	b	dataOutputStream
	m	(I)V	<init>	<init>
	m	([B)V	a	writeBytes
	m	(Ljava/lang/String;)V	a	writeString
	m	(I)V	a	write
	m	(S)V	a	writeShort
	m	(I)V	b	writeInt
	m	(F)V	a	writeFloat
	m	()[B	a	toByteArray
	m	()V	b	reset
c	ayn	net/minecraft/server/rcon/PktUtils
	f	I	a	MAX_PACKET_SIZE
	f	[C	b	HEX_CHAR
	m	()V	<init>	<init>
	m	([BII)Ljava/lang/String;	a	stringFromByteArray
	m	([BI)I	a	intFromByteArray
	m	([BII)I	b	intFromByteArray
	m	([BII)I	c	intFromNetworkByteArray
	m	(B)Ljava/lang/String;	a	toHexString
	m	()V	<clinit>	<clinit>
c	ayo	net/minecraft/server/rcon/RconConsoleSource
	f	Ljava/lang/String;	b	RCON
	f	Lxo;	c	RCON_COMPONENT
	f	Ljava/lang/StringBuffer;	d	buffer
	f	Lnet/minecraft/server/MinecraftServer;	e	server
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	()V	e	prepareForCommand
	m	()Ljava/lang/String;	f	getCommandResponse
	m	()Lek;	g	createCommandSourceStack
	m	(Lxo;)V	a	sendSystemMessage
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	()V	<clinit>	<clinit>
c	ayp	net/minecraft/server/rcon/package-info
c	ayq	net/minecraft/server/rcon/thread/GenericThread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicInteger;	e	UNIQUE_THREAD_ID
	f	I	f	MAX_STOP_WAIT
	f	Z	a	running
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Thread;	c	thread
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Z	a	start
	m	()V	b	stop
	m	()Z	c	isRunning
	m	()V	<clinit>	<clinit>
c	ayr	net/minecraft/server/rcon/thread/QueryThreadGs4
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/lang/String;	e	GAME_TYPE
	f	Ljava/lang/String;	f	GAME_ID
	f	J	g	CHALLENGE_CHECK_INTERVAL
	f	J	h	RESPONSE_CACHE_TIME
	f	J	i	lastChallengeCheck
	f	I	j	port
	f	I	k	serverPort
	f	I	l	maxPlayers
	f	Ljava/lang/String;	m	serverName
	f	Ljava/lang/String;	n	worldName
	f	Ljava/net/DatagramSocket;	o	socket
	f	[B	p	buffer
	f	Ljava/lang/String;	q	hostIp
	f	Ljava/lang/String;	r	serverIp
	f	Ljava/util/Map;	s	validChallenges
	f	Laym;	t	rulesResponse
	f	J	u	lastRulesResponse
	f	Lamv;	v	serverInterface
	m	(Lamv;I)V	<init>	<init>
	m	(Lamv;)Layr;	a	create
	m	([BLjava/net/DatagramPacket;)V	a	sendTo
	m	(Ljava/net/DatagramPacket;)Z	a	processPacket
	m	(Ljava/net/DatagramPacket;)[B	b	buildRuleResponse
	m	(Ljava/net/SocketAddress;)[B	a	getIdentBytes
	m	(Ljava/net/DatagramPacket;)Ljava/lang/Boolean;	c	validChallenge
	m	(Ljava/net/DatagramPacket;)V	d	sendChallenge
	m	()V	d	pruneChallenges
	m	()V	run	run
	m	()Z	a	start
	m	(Ljava/lang/Exception;)V	a	recoverSocketError
	m	()Z	e	initSocket
	m	(JLayr$a;)Z	a	lambda$pruneChallenges$0
	m	()V	<clinit>	<clinit>
c	ayr$a	net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge
	f	J	a	time
	f	I	b	challenge
	f	[B	c	identBytes
	f	[B	d	challengeBytes
	f	Ljava/lang/String;	e	ident
	m	(Ljava/net/DatagramPacket;)V	<init>	<init>
	m	(J)Ljava/lang/Boolean;	a	before
	m	()I	a	getChallenge
	m	()[B	b	getChallengeBytes
	m	()[B	c	getIdentBytes
	m	()Ljava/lang/String;	d	getIdent
c	ays	net/minecraft/server/rcon/thread/RconClient
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	SERVERDATA_AUTH
	f	I	f	SERVERDATA_EXECCOMMAND
	f	I	g	SERVERDATA_RESPONSE_VALUE
	f	I	h	SERVERDATA_AUTH_RESPONSE
	f	I	i	SERVERDATA_AUTH_FAILURE
	f	Z	j	authed
	f	Ljava/net/Socket;	k	client
	f	[B	l	buf
	f	Ljava/lang/String;	m	rconPassword
	f	Lamv;	n	serverInterface
	m	(Lamv;Ljava/lang/String;Ljava/net/Socket;)V	<init>	<init>
	m	()V	run	run
	m	(IILjava/lang/String;)V	a	send
	m	()V	d	sendAuthFailure
	m	(ILjava/lang/String;)V	a	sendCmdResponse
	m	()V	b	stop
	m	()V	e	closeSocket
	m	()V	<clinit>	<clinit>
c	ayt	net/minecraft/server/rcon/thread/RconThread
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Ljava/net/ServerSocket;	e	socket
	f	Ljava/lang/String;	f	rconPassword
	f	Ljava/util/List;	g	clients
	f	Lamv;	h	serverInterface
	m	(Lamv;Ljava/net/ServerSocket;Ljava/lang/String;)V	<init>	<init>
	m	()V	d	clearClients
	m	()V	run	run
	m	(Lamv;)Layt;	a	create
	m	()V	b	stop
	m	(Ljava/net/ServerSocket;)V	a	closeSocket
	m	(Lays;)Z	a	lambda$clearClients$0
	m	()V	<clinit>	<clinit>
c	ayu	net/minecraft/server/rcon/thread/package-info
c	ayv	net/minecraft/server/waypoints/ServerWaypointManager
	f	Ljava/util/Set;	a	waypoints
	f	Ljava/util/Set;	b	players
	f	Lcom/google/common/collect/Table;	c	connections
	m	()V	<init>	<init>
	m	(Lfkx;)V	a	trackWaypoint
	m	(Lfkx;)V	b	updateWaypoint
	m	(Lfkx;)V	c	untrackWaypoint
	m	(Lauc;)V	a	addPlayer
	m	(Lauc;)V	b	updatePlayer
	m	(Lauc;)V	c	removePlayer
	m	()V	a	breakAllConnections
	m	(Lfkx;)V	d	remakeConnections
	m	()Ljava/util/Set;	b	transmitters
	m	(Lauc;)Z	d	isLocatorBarEnabledFor
	m	(Lauc;Lfkx;)V	a	createConnection
	m	(Lauc;Lfkx;Lfkx$c;)V	a	updateConnection
	m	(Lfkt;)V	a	untrackWaypoint
	m	(Lfkt;)V	b	updateWaypoint
	m	(Lfkt;)V	c	trackWaypoint
	m	(Lfkx$c;Lauc;Lfkx;)V	a	lambda$updateConnection$5
	m	(Lauc;Lfkx;Lfkx$c;)V	b	lambda$updateConnection$4
	m	(Lauc;Lfkx;)V	b	lambda$createConnection$3
	m	(Lauc;Lfkx;Lfkx$c;)V	c	lambda$createConnection$2
	m	(Lfkx$c;)Z	a	lambda$removePlayer$1
	m	(Lauc;Lfkx$c;)V	a	lambda$untrackWaypoint$0
c	ayw	net/minecraft/sounds/Music
	f	Ljl;	b	event
	f	I	c	minDelay
	f	I	d	maxDelay
	f	Z	e	replaceCurrentMusic
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;IIZ)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	event
	m	()I	b	minDelay
	m	()I	c	maxDelay
	m	()Z	d	replaceCurrentMusic
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Layw;)Ljava/lang/Boolean;	a	lambda$static$3
	m	(Layw;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Layw;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Layw;)Ljl;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ayx	net/minecraft/sounds/Musics
	f	I	h	ONE_SECOND
	f	I	i	THIRTY_SECONDS
	f	I	j	TEN_MINUTES
	f	I	k	TWENTY_MINUTES
	f	I	l	FIVE_MINUTES
	f	Layw;	a	MENU
	f	Layw;	b	CREATIVE
	f	Layw;	c	CREDITS
	f	Layw;	d	END_BOSS
	f	Layw;	e	END
	f	Layw;	f	UNDER_WATER
	f	Layw;	g	GAME
	m	()V	<init>	<init>
	m	(Ljl;)Layw;	a	createGameMusic
	m	()V	<clinit>	<clinit>
c	ayy	net/minecraft/sounds/SoundEvent
	f	Lame;	e	location
	f	Ljava/util/Optional;	f	fixedRange
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	DIRECT_STREAM_CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lame;Ljava/util/Optional;)V	<init>	<init>
	m	(Lame;Ljava/util/Optional;)Layy;	a	create
	m	(Lame;)Layy;	a	createVariableRangeEvent
	m	(Lame;F)Layy;	a	createFixedRangeEvent
	m	(F)F	a	getRange
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	location
	m	()Ljava/util/Optional;	b	fixedRange
	m	(Lame;)Layy;	b	lambda$create$2
	m	(Lame;Ljava/lang/Float;)Layy;	a	lambda$create$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ayz	net/minecraft/sounds/SoundEvents
	f	Layy;	a	ALLAY_AMBIENT_WITH_ITEM
	f	Layy;	b	ALLAY_AMBIENT_WITHOUT_ITEM
	f	Layy;	c	ALLAY_DEATH
	f	Layy;	d	ALLAY_HURT
	f	Layy;	e	ALLAY_ITEM_GIVEN
	f	Layy;	f	ALLAY_ITEM_TAKEN
	f	Layy;	g	ALLAY_THROW
	f	Ljl$c;	h	AMBIENT_CAVE
	f	Ljl$c;	i	AMBIENT_BASALT_DELTAS_ADDITIONS
	f	Ljl$c;	j	AMBIENT_BASALT_DELTAS_LOOP
	f	Ljl$c;	k	AMBIENT_BASALT_DELTAS_MOOD
	f	Ljl$c;	l	AMBIENT_CRIMSON_FOREST_ADDITIONS
	f	Ljl$c;	m	AMBIENT_CRIMSON_FOREST_LOOP
	f	Ljl$c;	n	AMBIENT_CRIMSON_FOREST_MOOD
	f	Ljl$c;	o	AMBIENT_NETHER_WASTES_ADDITIONS
	f	Ljl$c;	p	AMBIENT_NETHER_WASTES_LOOP
	f	Ljl$c;	q	AMBIENT_NETHER_WASTES_MOOD
	f	Ljl$c;	r	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
	f	Ljl$c;	s	AMBIENT_SOUL_SAND_VALLEY_LOOP
	f	Ljl$c;	t	AMBIENT_SOUL_SAND_VALLEY_MOOD
	f	Ljl$c;	u	AMBIENT_WARPED_FOREST_ADDITIONS
	f	Ljl$c;	v	AMBIENT_WARPED_FOREST_LOOP
	f	Ljl$c;	w	AMBIENT_WARPED_FOREST_MOOD
	f	Layy;	x	AMBIENT_UNDERWATER_ENTER
	f	Layy;	y	AMBIENT_UNDERWATER_EXIT
	f	Layy;	z	AMBIENT_UNDERWATER_LOOP
	f	Layy;	A	AMBIENT_UNDERWATER_LOOP_ADDITIONS
	f	Layy;	B	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
	f	Layy;	C	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
	f	Layy;	D	AMETHYST_BLOCK_BREAK
	f	Layy;	E	AMETHYST_BLOCK_CHIME
	f	Layy;	F	AMETHYST_BLOCK_FALL
	f	Layy;	G	AMETHYST_BLOCK_HIT
	f	Layy;	H	AMETHYST_BLOCK_PLACE
	f	Layy;	I	AMETHYST_BLOCK_RESONATE
	f	Layy;	J	AMETHYST_BLOCK_STEP
	f	Layy;	K	AMETHYST_CLUSTER_BREAK
	f	Layy;	L	AMETHYST_CLUSTER_FALL
	f	Layy;	M	AMETHYST_CLUSTER_HIT
	f	Layy;	N	AMETHYST_CLUSTER_PLACE
	f	Layy;	O	AMETHYST_CLUSTER_STEP
	f	Layy;	P	ANCIENT_DEBRIS_BREAK
	f	Layy;	Q	ANCIENT_DEBRIS_STEP
	f	Layy;	R	ANCIENT_DEBRIS_PLACE
	f	Layy;	S	ANCIENT_DEBRIS_HIT
	f	Layy;	T	ANCIENT_DEBRIS_FALL
	f	Layy;	U	ANVIL_BREAK
	f	Layy;	V	ANVIL_DESTROY
	f	Layy;	W	ANVIL_FALL
	f	Layy;	X	ANVIL_HIT
	f	Layy;	Y	ANVIL_LAND
	f	Layy;	Z	ANVIL_PLACE
	f	Layy;	aa	ANVIL_STEP
	f	Layy;	ab	ANVIL_USE
	f	Layy;	ac	ARMADILLO_EAT
	f	Layy;	ad	ARMADILLO_HURT
	f	Layy;	ae	ARMADILLO_HURT_REDUCED
	f	Layy;	af	ARMADILLO_AMBIENT
	f	Layy;	ag	ARMADILLO_STEP
	f	Layy;	ah	ARMADILLO_DEATH
	f	Layy;	ai	ARMADILLO_ROLL
	f	Layy;	aj	ARMADILLO_LAND
	f	Layy;	ak	ARMADILLO_SCUTE_DROP
	f	Layy;	al	ARMADILLO_UNROLL_FINISH
	f	Layy;	am	ARMADILLO_PEEK
	f	Layy;	an	ARMADILLO_UNROLL_START
	f	Layy;	ao	ARMADILLO_BRUSH
	f	Ljl;	ap	ARMOR_EQUIP_CHAIN
	f	Ljl;	aq	ARMOR_EQUIP_DIAMOND
	f	Ljl;	ar	ARMOR_EQUIP_ELYTRA
	f	Ljl;	as	ARMOR_EQUIP_GENERIC
	f	Ljl;	at	ARMOR_EQUIP_GOLD
	f	Ljl;	au	ARMOR_EQUIP_IRON
	f	Ljl;	av	ARMOR_EQUIP_LEATHER
	f	Ljl;	aw	ARMOR_EQUIP_NETHERITE
	f	Ljl;	ax	ARMOR_EQUIP_TURTLE
	f	Ljl;	ay	ARMOR_EQUIP_WOLF
	f	Layy;	az	ARMOR_UNEQUIP_WOLF
	f	Layy;	aA	ARMOR_STAND_BREAK
	f	Layy;	aB	ARMOR_STAND_FALL
	f	Layy;	aC	ARMOR_STAND_HIT
	f	Layy;	aD	ARMOR_STAND_PLACE
	f	Layy;	aE	ARROW_HIT
	f	Layy;	aF	ARROW_HIT_PLAYER
	f	Layy;	aG	ARROW_SHOOT
	f	Layy;	aH	AXE_STRIP
	f	Layy;	aI	AXE_SCRAPE
	f	Layy;	aJ	AXE_WAX_OFF
	f	Layy;	aK	AXOLOTL_ATTACK
	f	Layy;	aL	AXOLOTL_DEATH
	f	Layy;	aM	AXOLOTL_HURT
	f	Layy;	aN	AXOLOTL_IDLE_AIR
	f	Layy;	aO	AXOLOTL_IDLE_WATER
	f	Layy;	aP	AXOLOTL_SPLASH
	f	Layy;	aQ	AXOLOTL_SWIM
	f	Layy;	aR	AZALEA_BREAK
	f	Layy;	aS	AZALEA_FALL
	f	Layy;	aT	AZALEA_HIT
	f	Layy;	aU	AZALEA_PLACE
	f	Layy;	aV	AZALEA_STEP
	f	Layy;	aW	AZALEA_LEAVES_BREAK
	f	Layy;	aX	AZALEA_LEAVES_FALL
	f	Layy;	aY	AZALEA_LEAVES_HIT
	f	Layy;	aZ	AZALEA_LEAVES_PLACE
	f	Layy;	ba	AZALEA_LEAVES_STEP
	f	Layy;	bb	BAMBOO_BREAK
	f	Layy;	bc	BAMBOO_FALL
	f	Layy;	bd	BAMBOO_HIT
	f	Layy;	be	BAMBOO_PLACE
	f	Layy;	bf	BAMBOO_STEP
	f	Layy;	bg	BAMBOO_SAPLING_BREAK
	f	Layy;	bh	BAMBOO_SAPLING_HIT
	f	Layy;	bi	BAMBOO_SAPLING_PLACE
	f	Layy;	bj	BAMBOO_WOOD_BREAK
	f	Layy;	bk	BAMBOO_WOOD_FALL
	f	Layy;	bl	BAMBOO_WOOD_HIT
	f	Layy;	bm	BAMBOO_WOOD_PLACE
	f	Layy;	bn	BAMBOO_WOOD_STEP
	f	Layy;	bo	BAMBOO_WOOD_DOOR_CLOSE
	f	Layy;	bp	BAMBOO_WOOD_DOOR_OPEN
	f	Layy;	bq	BAMBOO_WOOD_TRAPDOOR_CLOSE
	f	Layy;	br	BAMBOO_WOOD_TRAPDOOR_OPEN
	f	Layy;	bs	BAMBOO_WOOD_BUTTON_CLICK_OFF
	f	Layy;	bt	BAMBOO_WOOD_BUTTON_CLICK_ON
	f	Layy;	bu	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	bv	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Layy;	bw	BAMBOO_WOOD_FENCE_GATE_CLOSE
	f	Layy;	bx	BAMBOO_WOOD_FENCE_GATE_OPEN
	f	Layy;	by	BARREL_CLOSE
	f	Layy;	bz	BARREL_OPEN
	f	Layy;	bA	BASALT_BREAK
	f	Layy;	bB	BASALT_STEP
	f	Layy;	bC	BASALT_PLACE
	f	Layy;	bD	BASALT_HIT
	f	Layy;	bE	BASALT_FALL
	f	Layy;	bF	BAT_AMBIENT
	f	Layy;	bG	BAT_DEATH
	f	Layy;	bH	BAT_HURT
	f	Layy;	bI	BAT_LOOP
	f	Layy;	bJ	BAT_TAKEOFF
	f	Layy;	bK	BEACON_ACTIVATE
	f	Layy;	bL	BEACON_AMBIENT
	f	Layy;	bM	BEACON_DEACTIVATE
	f	Layy;	bN	BEACON_POWER_SELECT
	f	Layy;	bO	BEE_DEATH
	f	Layy;	bP	BEE_HURT
	f	Layy;	bQ	BEE_LOOP_AGGRESSIVE
	f	Layy;	bR	BEE_LOOP
	f	Layy;	bS	BEE_STING
	f	Layy;	bT	BEE_POLLINATE
	f	Layy;	bU	BEEHIVE_DRIP
	f	Layy;	bV	BEEHIVE_ENTER
	f	Layy;	bW	BEEHIVE_EXIT
	f	Layy;	bX	BEEHIVE_SHEAR
	f	Layy;	bY	BEEHIVE_WORK
	f	Layy;	bZ	BELL_BLOCK
	f	Layy;	ca	BELL_RESONATE
	f	Layy;	cb	BIG_DRIPLEAF_BREAK
	f	Layy;	cc	BIG_DRIPLEAF_FALL
	f	Layy;	cd	BIG_DRIPLEAF_HIT
	f	Layy;	ce	BIG_DRIPLEAF_PLACE
	f	Layy;	cf	BIG_DRIPLEAF_STEP
	f	Layy;	cg	BLAZE_AMBIENT
	f	Layy;	ch	BLAZE_BURN
	f	Layy;	ci	BLAZE_DEATH
	f	Layy;	cj	BLAZE_HURT
	f	Layy;	ck	BLAZE_SHOOT
	f	Layy;	cl	BOAT_PADDLE_LAND
	f	Layy;	cm	BOAT_PADDLE_WATER
	f	Layy;	cn	BOGGED_AMBIENT
	f	Layy;	co	BOGGED_DEATH
	f	Layy;	cp	BOGGED_HURT
	f	Layy;	cq	BOGGED_SHEAR
	f	Layy;	cr	BOGGED_STEP
	f	Layy;	cs	BONE_BLOCK_BREAK
	f	Layy;	ct	BONE_BLOCK_FALL
	f	Layy;	cu	BONE_BLOCK_HIT
	f	Layy;	cv	BONE_BLOCK_PLACE
	f	Layy;	cw	BONE_BLOCK_STEP
	f	Layy;	cx	BONE_MEAL_USE
	f	Layy;	cy	BOOK_PAGE_TURN
	f	Layy;	cz	BOOK_PUT
	f	Layy;	cA	BLASTFURNACE_FIRE_CRACKLE
	f	Layy;	cB	BOTTLE_EMPTY
	f	Layy;	cC	BOTTLE_FILL
	f	Layy;	cD	BOTTLE_FILL_DRAGONBREATH
	f	Layy;	cE	BREEZE_CHARGE
	f	Layy;	cF	BREEZE_DEFLECT
	f	Layy;	cG	BREEZE_INHALE
	f	Layy;	cH	BREEZE_IDLE_GROUND
	f	Layy;	cI	BREEZE_IDLE_AIR
	f	Layy;	cJ	BREEZE_SHOOT
	f	Layy;	cK	BREEZE_JUMP
	f	Layy;	cL	BREEZE_LAND
	f	Layy;	cM	BREEZE_SLIDE
	f	Layy;	cN	BREEZE_DEATH
	f	Layy;	cO	BREEZE_HURT
	f	Layy;	cP	BREEZE_WHIRL
	f	Ljl$c;	cQ	BREEZE_WIND_CHARGE_BURST
	f	Layy;	cR	BREWING_STAND_BREW
	f	Layy;	cS	BRUSH_GENERIC
	f	Layy;	cT	BRUSH_SAND
	f	Layy;	cU	BRUSH_GRAVEL
	f	Layy;	cV	BRUSH_SAND_COMPLETED
	f	Layy;	cW	BRUSH_GRAVEL_COMPLETED
	f	Layy;	cX	BUBBLE_COLUMN_BUBBLE_POP
	f	Layy;	cY	BUBBLE_COLUMN_UPWARDS_AMBIENT
	f	Layy;	cZ	BUBBLE_COLUMN_UPWARDS_INSIDE
	f	Layy;	da	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
	f	Layy;	db	BUBBLE_COLUMN_WHIRLPOOL_INSIDE
	f	Layy;	dc	BUBBLE_POP
	f	Layy;	dd	BUCKET_EMPTY
	f	Layy;	de	BUCKET_EMPTY_AXOLOTL
	f	Layy;	df	BUCKET_EMPTY_FISH
	f	Layy;	dg	BUCKET_EMPTY_LAVA
	f	Layy;	dh	BUCKET_EMPTY_POWDER_SNOW
	f	Layy;	di	BUCKET_EMPTY_TADPOLE
	f	Layy;	dj	BUCKET_FILL
	f	Layy;	dk	BUCKET_FILL_AXOLOTL
	f	Layy;	dl	BUCKET_FILL_FISH
	f	Layy;	dm	BUCKET_FILL_LAVA
	f	Layy;	dn	BUCKET_FILL_POWDER_SNOW
	f	Layy;	do	BUCKET_FILL_TADPOLE
	f	Layy;	dp	BUNDLE_DROP_CONTENTS
	f	Layy;	dq	BUNDLE_INSERT
	f	Layy;	dr	BUNDLE_INSERT_FAIL
	f	Layy;	ds	BUNDLE_REMOVE_ONE
	f	Layy;	dt	CACTUS_FLOWER_BREAK
	f	Layy;	du	CACTUS_FLOWER_PLACE
	f	Layy;	dv	CAKE_ADD_CANDLE
	f	Layy;	dw	CALCITE_BREAK
	f	Layy;	dx	CALCITE_STEP
	f	Layy;	dy	CALCITE_PLACE
	f	Layy;	dz	CALCITE_HIT
	f	Layy;	dA	CALCITE_FALL
	f	Layy;	dB	CAMEL_AMBIENT
	f	Layy;	dC	CAMEL_DASH
	f	Layy;	dD	CAMEL_DASH_READY
	f	Layy;	dE	CAMEL_DEATH
	f	Layy;	dF	CAMEL_EAT
	f	Layy;	dG	CAMEL_HURT
	f	Ljl$c;	dH	CAMEL_SADDLE
	f	Layy;	dI	CAMEL_SIT
	f	Layy;	dJ	CAMEL_STAND
	f	Layy;	dK	CAMEL_STEP
	f	Layy;	dL	CAMEL_STEP_SAND
	f	Layy;	dM	CAMPFIRE_CRACKLE
	f	Layy;	dN	CANDLE_AMBIENT
	f	Layy;	dO	CANDLE_BREAK
	f	Layy;	dP	CANDLE_EXTINGUISH
	f	Layy;	dQ	CANDLE_FALL
	f	Layy;	dR	CANDLE_HIT
	f	Layy;	dS	CANDLE_PLACE
	f	Layy;	dT	CANDLE_STEP
	f	Layy;	dU	CAT_AMBIENT
	f	Layy;	dV	CAT_STRAY_AMBIENT
	f	Layy;	dW	CAT_DEATH
	f	Layy;	dX	CAT_EAT
	f	Layy;	dY	CAT_HISS
	f	Layy;	dZ	CAT_BEG_FOR_FOOD
	f	Layy;	ea	CAT_HURT
	f	Layy;	eb	CAT_PURR
	f	Layy;	ec	CAT_PURREOW
	f	Layy;	ed	CAVE_VINES_BREAK
	f	Layy;	ee	CAVE_VINES_FALL
	f	Layy;	ef	CAVE_VINES_HIT
	f	Layy;	eg	CAVE_VINES_PLACE
	f	Layy;	eh	CAVE_VINES_STEP
	f	Layy;	ei	CAVE_VINES_PICK_BERRIES
	f	Layy;	ej	CHAIN_BREAK
	f	Layy;	ek	CHAIN_FALL
	f	Layy;	el	CHAIN_HIT
	f	Layy;	em	CHAIN_PLACE
	f	Layy;	en	CHAIN_STEP
	f	Layy;	eo	CHERRY_WOOD_BREAK
	f	Layy;	ep	CHERRY_WOOD_FALL
	f	Layy;	eq	CHERRY_WOOD_HIT
	f	Layy;	er	CHERRY_WOOD_PLACE
	f	Layy;	es	CHERRY_WOOD_STEP
	f	Layy;	et	CHERRY_SAPLING_BREAK
	f	Layy;	eu	CHERRY_SAPLING_FALL
	f	Layy;	ev	CHERRY_SAPLING_HIT
	f	Layy;	ew	CHERRY_SAPLING_PLACE
	f	Layy;	ex	CHERRY_SAPLING_STEP
	f	Layy;	ey	CHERRY_LEAVES_BREAK
	f	Layy;	ez	CHERRY_LEAVES_FALL
	f	Layy;	eA	CHERRY_LEAVES_HIT
	f	Layy;	eB	CHERRY_LEAVES_PLACE
	f	Layy;	eC	CHERRY_LEAVES_STEP
	f	Layy;	eD	CHERRY_WOOD_HANGING_SIGN_STEP
	f	Layy;	eE	CHERRY_WOOD_HANGING_SIGN_BREAK
	f	Layy;	eF	CHERRY_WOOD_HANGING_SIGN_FALL
	f	Layy;	eG	CHERRY_WOOD_HANGING_SIGN_HIT
	f	Layy;	eH	CHERRY_WOOD_HANGING_SIGN_PLACE
	f	Layy;	eI	CHERRY_WOOD_DOOR_CLOSE
	f	Layy;	eJ	CHERRY_WOOD_DOOR_OPEN
	f	Layy;	eK	CHERRY_WOOD_TRAPDOOR_CLOSE
	f	Layy;	eL	CHERRY_WOOD_TRAPDOOR_OPEN
	f	Layy;	eM	CHERRY_WOOD_BUTTON_CLICK_OFF
	f	Layy;	eN	CHERRY_WOOD_BUTTON_CLICK_ON
	f	Layy;	eO	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	eP	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Layy;	eQ	CHERRY_WOOD_FENCE_GATE_CLOSE
	f	Layy;	eR	CHERRY_WOOD_FENCE_GATE_OPEN
	f	Layy;	eS	CHEST_CLOSE
	f	Layy;	eT	CHEST_LOCKED
	f	Layy;	eU	CHEST_OPEN
	f	Layy;	eV	CHICKEN_AMBIENT
	f	Layy;	eW	CHICKEN_DEATH
	f	Layy;	eX	CHICKEN_EGG
	f	Layy;	eY	CHICKEN_HURT
	f	Layy;	eZ	CHICKEN_STEP
	f	Layy;	fa	CHISELED_BOOKSHELF_BREAK
	f	Layy;	fb	CHISELED_BOOKSHELF_FALL
	f	Layy;	fc	CHISELED_BOOKSHELF_HIT
	f	Layy;	fd	CHISELED_BOOKSHELF_INSERT
	f	Layy;	fe	CHISELED_BOOKSHELF_INSERT_ENCHANTED
	f	Layy;	ff	CHISELED_BOOKSHELF_STEP
	f	Layy;	fg	CHISELED_BOOKSHELF_PICKUP
	f	Layy;	fh	CHISELED_BOOKSHELF_PICKUP_ENCHANTED
	f	Layy;	fi	CHISELED_BOOKSHELF_PLACE
	f	Layy;	fj	CHORUS_FLOWER_DEATH
	f	Layy;	fk	CHORUS_FLOWER_GROW
	f	Layy;	fl	CHORUS_FRUIT_TELEPORT
	f	Layy;	fm	COBWEB_BREAK
	f	Layy;	fn	COBWEB_STEP
	f	Layy;	fo	COBWEB_PLACE
	f	Layy;	fp	COBWEB_HIT
	f	Layy;	fq	COBWEB_FALL
	f	Layy;	fr	COD_AMBIENT
	f	Layy;	fs	COD_DEATH
	f	Layy;	ft	COD_FLOP
	f	Layy;	fu	COD_HURT
	f	Layy;	fv	COMPARATOR_CLICK
	f	Layy;	fw	COMPOSTER_EMPTY
	f	Layy;	fx	COMPOSTER_FILL
	f	Layy;	fy	COMPOSTER_FILL_SUCCESS
	f	Layy;	fz	COMPOSTER_READY
	f	Layy;	fA	CONDUIT_ACTIVATE
	f	Layy;	fB	CONDUIT_AMBIENT
	f	Layy;	fC	CONDUIT_AMBIENT_SHORT
	f	Layy;	fD	CONDUIT_ATTACK_TARGET
	f	Layy;	fE	CONDUIT_DEACTIVATE
	f	Layy;	fF	COPPER_BULB_BREAK
	f	Layy;	fG	COPPER_BULB_STEP
	f	Layy;	fH	COPPER_BULB_PLACE
	f	Layy;	fI	COPPER_BULB_HIT
	f	Layy;	fJ	COPPER_BULB_FALL
	f	Layy;	fK	COPPER_BULB_TURN_ON
	f	Layy;	fL	COPPER_BULB_TURN_OFF
	f	Layy;	fM	COPPER_BREAK
	f	Layy;	fN	COPPER_STEP
	f	Layy;	fO	COPPER_PLACE
	f	Layy;	fP	COPPER_HIT
	f	Layy;	fQ	COPPER_FALL
	f	Layy;	fR	COPPER_DOOR_CLOSE
	f	Layy;	fS	COPPER_DOOR_OPEN
	f	Layy;	fT	COPPER_GRATE_BREAK
	f	Layy;	fU	COPPER_GRATE_STEP
	f	Layy;	fV	COPPER_GRATE_PLACE
	f	Layy;	fW	COPPER_GRATE_HIT
	f	Layy;	fX	COPPER_GRATE_FALL
	f	Layy;	fY	COPPER_TRAPDOOR_CLOSE
	f	Layy;	fZ	COPPER_TRAPDOOR_OPEN
	f	Layy;	ga	CORAL_BLOCK_BREAK
	f	Layy;	gb	CORAL_BLOCK_FALL
	f	Layy;	gc	CORAL_BLOCK_HIT
	f	Layy;	gd	CORAL_BLOCK_PLACE
	f	Layy;	ge	CORAL_BLOCK_STEP
	f	Layy;	gf	COW_AMBIENT
	f	Layy;	gg	COW_DEATH
	f	Layy;	gh	COW_HURT
	f	Layy;	gi	COW_MILK
	f	Layy;	gj	COW_STEP
	f	Layy;	gk	CRAFTER_CRAFT
	f	Layy;	gl	CRAFTER_FAIL
	f	Layy;	gm	CREAKING_AMBIENT
	f	Layy;	gn	CREAKING_ACTIVATE
	f	Layy;	go	CREAKING_DEACTIVATE
	f	Layy;	gp	CREAKING_ATTACK
	f	Layy;	gq	CREAKING_DEATH
	f	Layy;	gr	CREAKING_STEP
	f	Layy;	gs	CREAKING_FREEZE
	f	Layy;	gt	CREAKING_UNFREEZE
	f	Layy;	gu	CREAKING_SPAWN
	f	Layy;	gv	CREAKING_SWAY
	f	Layy;	gw	CREAKING_TWITCH
	f	Layy;	gx	CREAKING_HEART_BREAK
	f	Layy;	gy	CREAKING_HEART_FALL
	f	Layy;	gz	CREAKING_HEART_HIT
	f	Layy;	gA	CREAKING_HEART_HURT
	f	Layy;	gB	CREAKING_HEART_PLACE
	f	Layy;	gC	CREAKING_HEART_STEP
	f	Layy;	gD	CREAKING_HEART_IDLE
	f	Layy;	gE	CREAKING_HEART_SPAWN
	f	Layy;	gF	CREEPER_DEATH
	f	Layy;	gG	CREEPER_HURT
	f	Layy;	gH	CREEPER_PRIMED
	f	Layy;	gI	CROP_BREAK
	f	Layy;	gJ	CROP_PLANTED
	f	Layy;	gK	CROSSBOW_HIT
	f	Ljl;	gL	CROSSBOW_LOADING_END
	f	Ljl;	gM	CROSSBOW_LOADING_MIDDLE
	f	Ljl;	gN	CROSSBOW_LOADING_START
	f	Ljl;	gO	CROSSBOW_QUICK_CHARGE_1
	f	Ljl;	gP	CROSSBOW_QUICK_CHARGE_2
	f	Ljl;	gQ	CROSSBOW_QUICK_CHARGE_3
	f	Layy;	gR	CROSSBOW_SHOOT
	f	Layy;	gS	DEAD_BUSH_IDLE
	f	Layy;	gT	DECORATED_POT_BREAK
	f	Layy;	gU	DECORATED_POT_FALL
	f	Layy;	gV	DECORATED_POT_HIT
	f	Layy;	gW	DECORATED_POT_INSERT
	f	Layy;	gX	DECORATED_POT_INSERT_FAIL
	f	Layy;	gY	DECORATED_POT_STEP
	f	Layy;	gZ	DECORATED_POT_PLACE
	f	Layy;	ha	DECORATED_POT_SHATTER
	f	Layy;	hb	DEEPSLATE_BRICKS_BREAK
	f	Layy;	hc	DEEPSLATE_BRICKS_FALL
	f	Layy;	hd	DEEPSLATE_BRICKS_HIT
	f	Layy;	he	DEEPSLATE_BRICKS_PLACE
	f	Layy;	hf	DEEPSLATE_BRICKS_STEP
	f	Layy;	hg	DEEPSLATE_BREAK
	f	Layy;	hh	DEEPSLATE_FALL
	f	Layy;	hi	DEEPSLATE_HIT
	f	Layy;	hj	DEEPSLATE_PLACE
	f	Layy;	hk	DEEPSLATE_STEP
	f	Layy;	hl	DEEPSLATE_TILES_BREAK
	f	Layy;	hm	DEEPSLATE_TILES_FALL
	f	Layy;	hn	DEEPSLATE_TILES_HIT
	f	Layy;	ho	DEEPSLATE_TILES_PLACE
	f	Layy;	hp	DEEPSLATE_TILES_STEP
	f	Layy;	hq	DISPENSER_DISPENSE
	f	Layy;	hr	DISPENSER_FAIL
	f	Layy;	hs	DISPENSER_LAUNCH
	f	Layy;	ht	DOLPHIN_AMBIENT
	f	Layy;	hu	DOLPHIN_AMBIENT_WATER
	f	Layy;	hv	DOLPHIN_ATTACK
	f	Layy;	hw	DOLPHIN_DEATH
	f	Layy;	hx	DOLPHIN_EAT
	f	Layy;	hy	DOLPHIN_HURT
	f	Layy;	hz	DOLPHIN_JUMP
	f	Layy;	hA	DOLPHIN_PLAY
	f	Layy;	hB	DOLPHIN_SPLASH
	f	Layy;	hC	DOLPHIN_SWIM
	f	Layy;	hD	DONKEY_AMBIENT
	f	Layy;	hE	DONKEY_ANGRY
	f	Layy;	hF	DONKEY_CHEST
	f	Layy;	hG	DONKEY_DEATH
	f	Layy;	hH	DONKEY_EAT
	f	Layy;	hI	DONKEY_HURT
	f	Layy;	hJ	DONKEY_JUMP
	f	Layy;	hK	DRIED_GHAST_BREAK
	f	Layy;	hL	DRIED_GHAST_STEP
	f	Layy;	hM	DRIED_GHAST_FALL
	f	Layy;	hN	DRIED_GHAST_AMBIENT
	f	Layy;	hO	DRIED_GHAST_AMBIENT_WATER
	f	Layy;	hP	DRIED_GHAST_PLACE
	f	Layy;	hQ	DRIED_GHAST_PLACE_IN_WATER
	f	Layy;	hR	DRIED_GHAST_TRANSITION
	f	Layy;	hS	DRIPSTONE_BLOCK_BREAK
	f	Layy;	hT	DRIPSTONE_BLOCK_STEP
	f	Layy;	hU	DRIPSTONE_BLOCK_PLACE
	f	Layy;	hV	DRIPSTONE_BLOCK_HIT
	f	Layy;	hW	DRIPSTONE_BLOCK_FALL
	f	Layy;	hX	DRY_GRASS
	f	Layy;	hY	POINTED_DRIPSTONE_BREAK
	f	Layy;	hZ	POINTED_DRIPSTONE_STEP
	f	Layy;	ia	POINTED_DRIPSTONE_PLACE
	f	Layy;	ib	POINTED_DRIPSTONE_HIT
	f	Layy;	ic	POINTED_DRIPSTONE_FALL
	f	Layy;	id	POINTED_DRIPSTONE_LAND
	f	Layy;	ie	POINTED_DRIPSTONE_DRIP_LAVA
	f	Layy;	if	POINTED_DRIPSTONE_DRIP_WATER
	f	Layy;	ig	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON
	f	Layy;	ih	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON
	f	Layy;	ii	BIG_DRIPLEAF_TILT_DOWN
	f	Layy;	ij	BIG_DRIPLEAF_TILT_UP
	f	Layy;	ik	DROWNED_AMBIENT
	f	Layy;	il	DROWNED_AMBIENT_WATER
	f	Layy;	im	DROWNED_DEATH
	f	Layy;	in	DROWNED_DEATH_WATER
	f	Layy;	io	DROWNED_HURT
	f	Layy;	ip	DROWNED_HURT_WATER
	f	Layy;	iq	DROWNED_SHOOT
	f	Layy;	ir	DROWNED_STEP
	f	Layy;	is	DROWNED_SWIM
	f	Layy;	it	DYE_USE
	f	Layy;	iu	EGG_THROW
	f	Layy;	iv	ELDER_GUARDIAN_AMBIENT
	f	Layy;	iw	ELDER_GUARDIAN_AMBIENT_LAND
	f	Layy;	ix	ELDER_GUARDIAN_CURSE
	f	Layy;	iy	ELDER_GUARDIAN_DEATH
	f	Layy;	iz	ELDER_GUARDIAN_DEATH_LAND
	f	Layy;	iA	ELDER_GUARDIAN_FLOP
	f	Layy;	iB	ELDER_GUARDIAN_HURT
	f	Layy;	iC	ELDER_GUARDIAN_HURT_LAND
	f	Layy;	iD	ELYTRA_FLYING
	f	Layy;	iE	ENCHANTMENT_TABLE_USE
	f	Layy;	iF	ENDER_CHEST_CLOSE
	f	Layy;	iG	ENDER_CHEST_OPEN
	f	Layy;	iH	ENDER_DRAGON_AMBIENT
	f	Layy;	iI	ENDER_DRAGON_DEATH
	f	Layy;	iJ	DRAGON_FIREBALL_EXPLODE
	f	Layy;	iK	ENDER_DRAGON_FLAP
	f	Layy;	iL	ENDER_DRAGON_GROWL
	f	Layy;	iM	ENDER_DRAGON_HURT
	f	Layy;	iN	ENDER_DRAGON_SHOOT
	f	Layy;	iO	ENDER_EYE_DEATH
	f	Layy;	iP	ENDER_EYE_LAUNCH
	f	Layy;	iQ	ENDERMAN_AMBIENT
	f	Layy;	iR	ENDERMAN_DEATH
	f	Layy;	iS	ENDERMAN_HURT
	f	Layy;	iT	ENDERMAN_SCREAM
	f	Layy;	iU	ENDERMAN_STARE
	f	Layy;	iV	ENDERMAN_TELEPORT
	f	Layy;	iW	ENDERMITE_AMBIENT
	f	Layy;	iX	ENDERMITE_DEATH
	f	Layy;	iY	ENDERMITE_HURT
	f	Layy;	iZ	ENDERMITE_STEP
	f	Layy;	ja	ENDER_PEARL_THROW
	f	Layy;	jb	END_GATEWAY_SPAWN
	f	Layy;	jc	END_PORTAL_FRAME_FILL
	f	Layy;	jd	END_PORTAL_SPAWN
	f	Layy;	je	EVOKER_AMBIENT
	f	Layy;	jf	EVOKER_CAST_SPELL
	f	Layy;	jg	EVOKER_CELEBRATE
	f	Layy;	jh	EVOKER_DEATH
	f	Layy;	ji	EVOKER_FANGS_ATTACK
	f	Layy;	jj	EVOKER_HURT
	f	Layy;	jk	EVOKER_PREPARE_ATTACK
	f	Layy;	jl	EVOKER_PREPARE_SUMMON
	f	Layy;	jm	EVOKER_PREPARE_WOLOLO
	f	Layy;	jn	EXPERIENCE_BOTTLE_THROW
	f	Layy;	jo	EXPERIENCE_ORB_PICKUP
	f	Layy;	jp	EYEBLOSSOM_OPEN_LONG
	f	Layy;	jq	EYEBLOSSOM_OPEN
	f	Layy;	jr	EYEBLOSSOM_CLOSE_LONG
	f	Layy;	js	EYEBLOSSOM_CLOSE
	f	Layy;	jt	EYEBLOSSOM_IDLE
	f	Layy;	ju	FENCE_GATE_CLOSE
	f	Layy;	jv	FENCE_GATE_OPEN
	f	Layy;	jw	FIRECHARGE_USE
	f	Layy;	jx	FIREFLY_BUSH_IDLE
	f	Layy;	jy	FIREWORK_ROCKET_BLAST
	f	Layy;	jz	FIREWORK_ROCKET_BLAST_FAR
	f	Layy;	jA	FIREWORK_ROCKET_LARGE_BLAST
	f	Layy;	jB	FIREWORK_ROCKET_LARGE_BLAST_FAR
	f	Layy;	jC	FIREWORK_ROCKET_LAUNCH
	f	Layy;	jD	FIREWORK_ROCKET_SHOOT
	f	Layy;	jE	FIREWORK_ROCKET_TWINKLE
	f	Layy;	jF	FIREWORK_ROCKET_TWINKLE_FAR
	f	Layy;	jG	FIRE_AMBIENT
	f	Layy;	jH	FIRE_EXTINGUISH
	f	Layy;	jI	FISH_SWIM
	f	Layy;	jJ	FISHING_BOBBER_RETRIEVE
	f	Layy;	jK	FISHING_BOBBER_SPLASH
	f	Layy;	jL	FISHING_BOBBER_THROW
	f	Layy;	jM	FLINTANDSTEEL_USE
	f	Layy;	jN	FLOWERING_AZALEA_BREAK
	f	Layy;	jO	FLOWERING_AZALEA_FALL
	f	Layy;	jP	FLOWERING_AZALEA_HIT
	f	Layy;	jQ	FLOWERING_AZALEA_PLACE
	f	Layy;	jR	FLOWERING_AZALEA_STEP
	f	Layy;	jS	FOX_AGGRO
	f	Layy;	jT	FOX_AMBIENT
	f	Layy;	jU	FOX_BITE
	f	Layy;	jV	FOX_DEATH
	f	Layy;	jW	FOX_EAT
	f	Layy;	jX	FOX_HURT
	f	Layy;	jY	FOX_SCREECH
	f	Layy;	jZ	FOX_SLEEP
	f	Layy;	ka	FOX_SNIFF
	f	Layy;	kb	FOX_SPIT
	f	Layy;	kc	FOX_TELEPORT
	f	Layy;	kd	SUSPICIOUS_SAND_BREAK
	f	Layy;	ke	SUSPICIOUS_SAND_STEP
	f	Layy;	kf	SUSPICIOUS_SAND_PLACE
	f	Layy;	kg	SUSPICIOUS_SAND_HIT
	f	Layy;	kh	SUSPICIOUS_SAND_FALL
	f	Layy;	ki	SUSPICIOUS_GRAVEL_BREAK
	f	Layy;	kj	SUSPICIOUS_GRAVEL_STEP
	f	Layy;	kk	SUSPICIOUS_GRAVEL_PLACE
	f	Layy;	kl	SUSPICIOUS_GRAVEL_HIT
	f	Layy;	km	SUSPICIOUS_GRAVEL_FALL
	f	Layy;	kn	FROGLIGHT_BREAK
	f	Layy;	ko	FROGLIGHT_FALL
	f	Layy;	kp	FROGLIGHT_HIT
	f	Layy;	kq	FROGLIGHT_PLACE
	f	Layy;	kr	FROGLIGHT_STEP
	f	Layy;	ks	FROGSPAWNSTEP
	f	Layy;	kt	FROGSPAWN_BREAK
	f	Layy;	ku	FROGSPAWN_FALL
	f	Layy;	kv	FROGSPAWN_HATCH
	f	Layy;	kw	FROGSPAWN_HIT
	f	Layy;	kx	FROGSPAWN_PLACE
	f	Layy;	ky	FROG_AMBIENT
	f	Layy;	kz	FROG_DEATH
	f	Layy;	kA	FROG_EAT
	f	Layy;	kB	FROG_HURT
	f	Layy;	kC	FROG_LAY_SPAWN
	f	Layy;	kD	FROG_LONG_JUMP
	f	Layy;	kE	FROG_STEP
	f	Layy;	kF	FROG_TONGUE
	f	Layy;	kG	ROOTS_BREAK
	f	Layy;	kH	ROOTS_STEP
	f	Layy;	kI	ROOTS_PLACE
	f	Layy;	kJ	ROOTS_HIT
	f	Layy;	kK	ROOTS_FALL
	f	Layy;	kL	FURNACE_FIRE_CRACKLE
	f	Layy;	kM	GENERIC_BIG_FALL
	f	Layy;	kN	GENERIC_BURN
	f	Layy;	kO	GENERIC_DEATH
	f	Ljl$c;	kP	GENERIC_DRINK
	f	Ljl$c;	kQ	GENERIC_EAT
	f	Ljl$c;	kR	GENERIC_EXPLODE
	f	Layy;	kS	GENERIC_EXTINGUISH_FIRE
	f	Layy;	kT	GENERIC_HURT
	f	Layy;	kU	GENERIC_SMALL_FALL
	f	Layy;	kV	GENERIC_SPLASH
	f	Layy;	kW	GENERIC_SWIM
	f	Layy;	kX	GHAST_AMBIENT
	f	Layy;	kY	GHAST_DEATH
	f	Layy;	kZ	GHAST_HURT
	f	Layy;	la	GHAST_SCREAM
	f	Layy;	lb	GHAST_SHOOT
	f	Layy;	lc	GHAST_WARN
	f	Layy;	ld	GHASTLING_AMBIENT
	f	Layy;	le	GHASTLING_DEATH
	f	Layy;	lf	GHASTLING_HURT
	f	Layy;	lg	GHASTLING_SPAWN
	f	Layy;	lh	GILDED_BLACKSTONE_BREAK
	f	Layy;	li	GILDED_BLACKSTONE_FALL
	f	Layy;	lj	GILDED_BLACKSTONE_HIT
	f	Layy;	lk	GILDED_BLACKSTONE_PLACE
	f	Layy;	ll	GILDED_BLACKSTONE_STEP
	f	Layy;	lm	GLASS_BREAK
	f	Layy;	ln	GLASS_FALL
	f	Layy;	lo	GLASS_HIT
	f	Layy;	lp	GLASS_PLACE
	f	Layy;	lq	GLASS_STEP
	f	Layy;	lr	GLOW_INK_SAC_USE
	f	Layy;	ls	GLOW_ITEM_FRAME_ADD_ITEM
	f	Layy;	lt	GLOW_ITEM_FRAME_BREAK
	f	Layy;	lu	GLOW_ITEM_FRAME_PLACE
	f	Layy;	lv	GLOW_ITEM_FRAME_REMOVE_ITEM
	f	Layy;	lw	GLOW_ITEM_FRAME_ROTATE_ITEM
	f	Layy;	lx	GLOW_SQUID_AMBIENT
	f	Layy;	ly	GLOW_SQUID_DEATH
	f	Layy;	lz	GLOW_SQUID_HURT
	f	Layy;	lA	GLOW_SQUID_SQUIRT
	f	Layy;	lB	GOAT_AMBIENT
	f	Layy;	lC	GOAT_DEATH
	f	Layy;	lD	GOAT_EAT
	f	Layy;	lE	GOAT_HURT
	f	Layy;	lF	GOAT_LONG_JUMP
	f	Layy;	lG	GOAT_MILK
	f	Layy;	lH	GOAT_PREPARE_RAM
	f	Layy;	lI	GOAT_RAM_IMPACT
	f	Layy;	lJ	GOAT_HORN_BREAK
	f	Layy;	lK	GOAT_SCREAMING_AMBIENT
	f	Layy;	lL	GOAT_SCREAMING_DEATH
	f	Layy;	lM	GOAT_SCREAMING_EAT
	f	Layy;	lN	GOAT_SCREAMING_HURT
	f	Layy;	lO	GOAT_SCREAMING_LONG_JUMP
	f	Layy;	lP	GOAT_SCREAMING_MILK
	f	Layy;	lQ	GOAT_SCREAMING_PREPARE_RAM
	f	Layy;	lR	GOAT_SCREAMING_RAM_IMPACT
	f	Layy;	lS	GOAT_STEP
	f	Layy;	lT	GRASS_BREAK
	f	Layy;	lU	GRASS_FALL
	f	Layy;	lV	GRASS_HIT
	f	Layy;	lW	GRASS_PLACE
	f	Layy;	lX	GRASS_STEP
	f	Layy;	lY	GRAVEL_BREAK
	f	Layy;	lZ	GRAVEL_FALL
	f	Layy;	ma	GRAVEL_HIT
	f	Layy;	mb	GRAVEL_PLACE
	f	Layy;	mc	GRAVEL_STEP
	f	Layy;	md	GRINDSTONE_USE
	f	Layy;	me	GROWING_PLANT_CROP
	f	Layy;	mf	GUARDIAN_AMBIENT
	f	Layy;	mg	GUARDIAN_AMBIENT_LAND
	f	Layy;	mh	GUARDIAN_ATTACK
	f	Layy;	mi	GUARDIAN_DEATH
	f	Layy;	mj	GUARDIAN_DEATH_LAND
	f	Layy;	mk	GUARDIAN_FLOP
	f	Layy;	ml	GUARDIAN_HURT
	f	Layy;	mm	GUARDIAN_HURT_LAND
	f	Layy;	mn	HANGING_ROOTS_BREAK
	f	Layy;	mo	HANGING_ROOTS_FALL
	f	Layy;	mp	HANGING_ROOTS_HIT
	f	Layy;	mq	HANGING_ROOTS_PLACE
	f	Layy;	mr	HANGING_ROOTS_STEP
	f	Layy;	ms	HANGING_SIGN_STEP
	f	Layy;	mt	HANGING_SIGN_BREAK
	f	Layy;	mu	HANGING_SIGN_FALL
	f	Layy;	mv	HANGING_SIGN_HIT
	f	Layy;	mw	HANGING_SIGN_PLACE
	f	Layy;	mx	HAPPY_GHAST_AMBIENT
	f	Layy;	my	HAPPY_GHAST_DEATH
	f	Layy;	mz	HAPPY_GHAST_HURT
	f	Layy;	mA	HAPPY_GHAST_RIDING
	f	Layy;	mB	HEAVY_CORE_BREAK
	f	Layy;	mC	HEAVY_CORE_FALL
	f	Layy;	mD	HEAVY_CORE_HIT
	f	Layy;	mE	HEAVY_CORE_PLACE
	f	Layy;	mF	HEAVY_CORE_STEP
	f	Layy;	mG	NETHER_WOOD_HANGING_SIGN_STEP
	f	Layy;	mH	NETHER_WOOD_HANGING_SIGN_BREAK
	f	Layy;	mI	NETHER_WOOD_HANGING_SIGN_FALL
	f	Layy;	mJ	NETHER_WOOD_HANGING_SIGN_HIT
	f	Layy;	mK	NETHER_WOOD_HANGING_SIGN_PLACE
	f	Layy;	mL	BAMBOO_WOOD_HANGING_SIGN_STEP
	f	Layy;	mM	BAMBOO_WOOD_HANGING_SIGN_BREAK
	f	Layy;	mN	BAMBOO_WOOD_HANGING_SIGN_FALL
	f	Layy;	mO	BAMBOO_WOOD_HANGING_SIGN_HIT
	f	Layy;	mP	BAMBOO_WOOD_HANGING_SIGN_PLACE
	f	Layy;	mQ	TRIAL_SPAWNER_BREAK
	f	Layy;	mR	TRIAL_SPAWNER_STEP
	f	Layy;	mS	TRIAL_SPAWNER_PLACE
	f	Layy;	mT	TRIAL_SPAWNER_HIT
	f	Layy;	mU	TRIAL_SPAWNER_FALL
	f	Layy;	mV	TRIAL_SPAWNER_SPAWN_MOB
	f	Layy;	mW	TRIAL_SPAWNER_ABOUT_TO_SPAWN_ITEM
	f	Layy;	mX	TRIAL_SPAWNER_SPAWN_ITEM
	f	Layy;	mY	TRIAL_SPAWNER_SPAWN_ITEM_BEGIN
	f	Layy;	mZ	TRIAL_SPAWNER_DETECT_PLAYER
	f	Layy;	na	TRIAL_SPAWNER_OMINOUS_ACTIVATE
	f	Layy;	nb	TRIAL_SPAWNER_AMBIENT
	f	Layy;	nc	TRIAL_SPAWNER_AMBIENT_OMINOUS
	f	Layy;	nd	TRIAL_SPAWNER_OPEN_SHUTTER
	f	Layy;	ne	TRIAL_SPAWNER_CLOSE_SHUTTER
	f	Layy;	nf	TRIAL_SPAWNER_EJECT_ITEM
	f	Ljl$c;	ng	HARNESS_EQUIP
	f	Layy;	nh	HARNESS_UNEQUIP
	f	Layy;	ni	HARNESS_GOGGLES_UP
	f	Layy;	nj	HARNESS_GOGGLES_DOWN
	f	Layy;	nk	HOE_TILL
	f	Layy;	nl	HOGLIN_AMBIENT
	f	Layy;	nm	HOGLIN_ANGRY
	f	Layy;	nn	HOGLIN_ATTACK
	f	Layy;	no	HOGLIN_CONVERTED_TO_ZOMBIFIED
	f	Layy;	np	HOGLIN_DEATH
	f	Layy;	nq	HOGLIN_HURT
	f	Layy;	nr	HOGLIN_RETREAT
	f	Layy;	ns	HOGLIN_STEP
	f	Layy;	nt	HONEY_BLOCK_BREAK
	f	Layy;	nu	HONEY_BLOCK_FALL
	f	Layy;	nv	HONEY_BLOCK_HIT
	f	Layy;	nw	HONEY_BLOCK_PLACE
	f	Layy;	nx	HONEY_BLOCK_SLIDE
	f	Layy;	ny	HONEY_BLOCK_STEP
	f	Layy;	nz	HONEYCOMB_WAX_ON
	f	Ljl$c;	nA	HONEY_DRINK
	f	I	nB	GOAT_HORN_VARIANT_COUNT
	f	Lcom/google/common/collect/ImmutableList;	nC	GOAT_HORN_SOUND_VARIANTS
	f	Layy;	nD	HORSE_AMBIENT
	f	Layy;	nE	HORSE_ANGRY
	f	Ljl$c;	nF	HORSE_ARMOR
	f	Ljl$c;	nG	HORSE_ARMOR_UNEQUIP
	f	Layy;	nH	HORSE_BREATHE
	f	Layy;	nI	HORSE_DEATH
	f	Layy;	nJ	HORSE_EAT
	f	Layy;	nK	HORSE_GALLOP
	f	Layy;	nL	HORSE_HURT
	f	Layy;	nM	HORSE_JUMP
	f	Layy;	nN	HORSE_LAND
	f	Ljl$c;	nO	HORSE_SADDLE
	f	Layy;	nP	HORSE_STEP
	f	Layy;	nQ	HORSE_STEP_WOOD
	f	Layy;	nR	HOSTILE_BIG_FALL
	f	Layy;	nS	HOSTILE_DEATH
	f	Layy;	nT	HOSTILE_HURT
	f	Layy;	nU	HOSTILE_SMALL_FALL
	f	Layy;	nV	HOSTILE_SPLASH
	f	Layy;	nW	HOSTILE_SWIM
	f	Layy;	nX	HUSK_AMBIENT
	f	Layy;	nY	HUSK_CONVERTED_TO_ZOMBIE
	f	Layy;	nZ	HUSK_DEATH
	f	Layy;	oa	HUSK_HURT
	f	Layy;	ob	HUSK_STEP
	f	Layy;	oc	ILLUSIONER_AMBIENT
	f	Layy;	od	ILLUSIONER_CAST_SPELL
	f	Layy;	oe	ILLUSIONER_DEATH
	f	Layy;	of	ILLUSIONER_HURT
	f	Layy;	og	ILLUSIONER_MIRROR_MOVE
	f	Layy;	oh	ILLUSIONER_PREPARE_BLINDNESS
	f	Layy;	oi	ILLUSIONER_PREPARE_MIRROR
	f	Layy;	oj	INK_SAC_USE
	f	Layy;	ok	IRON_BREAK
	f	Layy;	ol	IRON_STEP
	f	Layy;	om	IRON_PLACE
	f	Layy;	on	IRON_HIT
	f	Layy;	oo	IRON_FALL
	f	Layy;	op	IRON_DOOR_CLOSE
	f	Layy;	oq	IRON_DOOR_OPEN
	f	Layy;	or	IRON_GOLEM_ATTACK
	f	Layy;	os	IRON_GOLEM_DAMAGE
	f	Layy;	ot	IRON_GOLEM_DEATH
	f	Layy;	ou	IRON_GOLEM_HURT
	f	Layy;	ov	IRON_GOLEM_REPAIR
	f	Layy;	ow	IRON_GOLEM_STEP
	f	Layy;	ox	IRON_TRAPDOOR_CLOSE
	f	Layy;	oy	IRON_TRAPDOOR_OPEN
	f	Layy;	oz	ITEM_FRAME_ADD_ITEM
	f	Layy;	oA	ITEM_FRAME_BREAK
	f	Layy;	oB	ITEM_FRAME_PLACE
	f	Layy;	oC	ITEM_FRAME_REMOVE_ITEM
	f	Layy;	oD	ITEM_FRAME_ROTATE_ITEM
	f	Ljl$c;	oE	ITEM_BREAK
	f	Layy;	oF	ITEM_PICKUP
	f	Layy;	oG	LADDER_BREAK
	f	Layy;	oH	LADDER_FALL
	f	Layy;	oI	LADDER_HIT
	f	Layy;	oJ	LADDER_PLACE
	f	Layy;	oK	LADDER_STEP
	f	Layy;	oL	LANTERN_BREAK
	f	Layy;	oM	LANTERN_FALL
	f	Layy;	oN	LANTERN_HIT
	f	Layy;	oO	LANTERN_PLACE
	f	Layy;	oP	LANTERN_STEP
	f	Layy;	oQ	LARGE_AMETHYST_BUD_BREAK
	f	Layy;	oR	LARGE_AMETHYST_BUD_PLACE
	f	Layy;	oS	LAVA_AMBIENT
	f	Layy;	oT	LAVA_EXTINGUISH
	f	Layy;	oU	LAVA_POP
	f	Layy;	oV	LEAF_LITTER_BREAK
	f	Layy;	oW	LEAF_LITTER_STEP
	f	Layy;	oX	LEAF_LITTER_PLACE
	f	Layy;	oY	LEAF_LITTER_HIT
	f	Layy;	oZ	LEAF_LITTER_FALL
	f	Layy;	pa	LEAD_UNTIED
	f	Layy;	pb	LEAD_TIED
	f	Layy;	pc	LEAD_BREAK
	f	Layy;	pd	LEVER_CLICK
	f	Layy;	pe	LIGHTNING_BOLT_IMPACT
	f	Layy;	pf	LIGHTNING_BOLT_THUNDER
	f	Layy;	pg	LINGERING_POTION_THROW
	f	Layy;	ph	LLAMA_AMBIENT
	f	Layy;	pi	LLAMA_ANGRY
	f	Layy;	pj	LLAMA_CHEST
	f	Layy;	pk	LLAMA_DEATH
	f	Layy;	pl	LLAMA_EAT
	f	Layy;	pm	LLAMA_HURT
	f	Layy;	pn	LLAMA_SPIT
	f	Layy;	po	LLAMA_STEP
	f	Ljl$c;	pp	LLAMA_SWAG
	f	Ljl$c;	pq	LLAMA_CARPET_UNEQUIP
	f	Layy;	pr	MAGMA_CUBE_DEATH_SMALL
	f	Layy;	ps	LODESTONE_BREAK
	f	Layy;	pt	LODESTONE_STEP
	f	Layy;	pu	LODESTONE_PLACE
	f	Layy;	pv	LODESTONE_HIT
	f	Layy;	pw	LODESTONE_FALL
	f	Layy;	px	LODESTONE_COMPASS_LOCK
	f	Layy;	py	MACE_SMASH_AIR
	f	Layy;	pz	MACE_SMASH_GROUND
	f	Layy;	pA	MACE_SMASH_GROUND_HEAVY
	f	Layy;	pB	MAGMA_CUBE_DEATH
	f	Layy;	pC	MAGMA_CUBE_HURT
	f	Layy;	pD	MAGMA_CUBE_HURT_SMALL
	f	Layy;	pE	MAGMA_CUBE_JUMP
	f	Layy;	pF	MAGMA_CUBE_SQUISH
	f	Layy;	pG	MAGMA_CUBE_SQUISH_SMALL
	f	Layy;	pH	MANGROVE_ROOTS_BREAK
	f	Layy;	pI	MANGROVE_ROOTS_FALL
	f	Layy;	pJ	MANGROVE_ROOTS_HIT
	f	Layy;	pK	MANGROVE_ROOTS_PLACE
	f	Layy;	pL	MANGROVE_ROOTS_STEP
	f	Layy;	pM	MEDIUM_AMETHYST_BUD_BREAK
	f	Layy;	pN	MEDIUM_AMETHYST_BUD_PLACE
	f	Layy;	pO	METAL_BREAK
	f	Layy;	pP	METAL_FALL
	f	Layy;	pQ	METAL_HIT
	f	Layy;	pR	METAL_PLACE
	f	Layy;	pS	METAL_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	pT	METAL_PRESSURE_PLATE_CLICK_ON
	f	Layy;	pU	METAL_STEP
	f	Layy;	pV	MINECART_INSIDE_UNDERWATER
	f	Layy;	pW	MINECART_INSIDE
	f	Layy;	pX	MINECART_RIDING
	f	Layy;	pY	MOOSHROOM_CONVERT
	f	Layy;	pZ	MOOSHROOM_EAT
	f	Layy;	qa	MOOSHROOM_MILK
	f	Layy;	qb	MOOSHROOM_MILK_SUSPICIOUSLY
	f	Layy;	qc	MOOSHROOM_SHEAR
	f	Layy;	qd	MOSS_CARPET_BREAK
	f	Layy;	qe	MOSS_CARPET_FALL
	f	Layy;	qf	MOSS_CARPET_HIT
	f	Layy;	qg	MOSS_CARPET_PLACE
	f	Layy;	qh	MOSS_CARPET_STEP
	f	Layy;	qi	PINK_PETALS_BREAK
	f	Layy;	qj	PINK_PETALS_FALL
	f	Layy;	qk	PINK_PETALS_HIT
	f	Layy;	ql	PINK_PETALS_PLACE
	f	Layy;	qm	PINK_PETALS_STEP
	f	Layy;	qn	MOSS_BREAK
	f	Layy;	qo	MOSS_FALL
	f	Layy;	qp	MOSS_HIT
	f	Layy;	qq	MOSS_PLACE
	f	Layy;	qr	MOSS_STEP
	f	Layy;	qs	MUD_BREAK
	f	Layy;	qt	MUD_FALL
	f	Layy;	qu	MUD_HIT
	f	Layy;	qv	MUD_PLACE
	f	Layy;	qw	MUD_STEP
	f	Layy;	qx	MUD_BRICKS_BREAK
	f	Layy;	qy	MUD_BRICKS_FALL
	f	Layy;	qz	MUD_BRICKS_HIT
	f	Layy;	qA	MUD_BRICKS_PLACE
	f	Layy;	qB	MUD_BRICKS_STEP
	f	Layy;	qC	MUDDY_MANGROVE_ROOTS_BREAK
	f	Layy;	qD	MUDDY_MANGROVE_ROOTS_FALL
	f	Layy;	qE	MUDDY_MANGROVE_ROOTS_HIT
	f	Layy;	qF	MUDDY_MANGROVE_ROOTS_PLACE
	f	Layy;	qG	MUDDY_MANGROVE_ROOTS_STEP
	f	Layy;	qH	MULE_AMBIENT
	f	Layy;	qI	MULE_ANGRY
	f	Layy;	qJ	MULE_CHEST
	f	Layy;	qK	MULE_DEATH
	f	Layy;	qL	MULE_EAT
	f	Layy;	qM	MULE_HURT
	f	Layy;	qN	MULE_JUMP
	f	Ljl$c;	qO	MUSIC_CREATIVE
	f	Ljl$c;	qP	MUSIC_CREDITS
	f	Ljl$c;	qQ	MUSIC_DISC_5
	f	Ljl$c;	qR	MUSIC_DISC_11
	f	Ljl$c;	qS	MUSIC_DISC_13
	f	Ljl$c;	qT	MUSIC_DISC_BLOCKS
	f	Ljl$c;	qU	MUSIC_DISC_CAT
	f	Ljl$c;	qV	MUSIC_DISC_CHIRP
	f	Ljl$c;	qW	MUSIC_DISC_FAR
	f	Ljl$c;	qX	MUSIC_DISC_MALL
	f	Ljl$c;	qY	MUSIC_DISC_MELLOHI
	f	Ljl$c;	qZ	MUSIC_DISC_PIGSTEP
	f	Ljl$c;	ra	MUSIC_DISC_STAL
	f	Ljl$c;	rb	MUSIC_DISC_STRAD
	f	Ljl$c;	rc	MUSIC_DISC_WAIT
	f	Ljl$c;	rd	MUSIC_DISC_WARD
	f	Ljl$c;	re	MUSIC_DISC_OTHERSIDE
	f	Ljl$c;	rf	MUSIC_DISC_RELIC
	f	Ljl$c;	rg	MUSIC_DISC_CREATOR
	f	Ljl$c;	rh	MUSIC_DISC_CREATOR_MUSIC_BOX
	f	Ljl$c;	ri	MUSIC_DISC_PRECIPICE
	f	Ljl$c;	rj	MUSIC_DISC_TEARS
	f	Ljl$c;	rk	MUSIC_DRAGON
	f	Ljl$c;	rl	MUSIC_END
	f	Ljl$c;	rm	MUSIC_GAME
	f	Ljl$c;	rn	MUSIC_MENU
	f	Ljl$c;	ro	MUSIC_BIOME_BASALT_DELTAS
	f	Ljl$c;	rp	MUSIC_BIOME_CRIMSON_FOREST
	f	Ljl$c;	rq	MUSIC_BIOME_DEEP_DARK
	f	Ljl$c;	rr	MUSIC_BIOME_DRIPSTONE_CAVES
	f	Ljl$c;	rs	MUSIC_BIOME_GROVE
	f	Ljl$c;	rt	MUSIC_BIOME_JAGGED_PEAKS
	f	Ljl$c;	ru	MUSIC_BIOME_LUSH_CAVES
	f	Ljl$c;	rv	MUSIC_BIOME_SWAMP
	f	Ljl$c;	rw	MUSIC_BIOME_FOREST
	f	Ljl$c;	rx	MUSIC_BIOME_OLD_GROWTH_TAIGA
	f	Ljl$c;	ry	MUSIC_BIOME_MEADOW
	f	Ljl$c;	rz	MUSIC_BIOME_CHERRY_GROVE
	f	Ljl$c;	rA	MUSIC_BIOME_NETHER_WASTES
	f	Ljl$c;	rB	MUSIC_BIOME_FROZEN_PEAKS
	f	Ljl$c;	rC	MUSIC_BIOME_SNOWY_SLOPES
	f	Ljl$c;	rD	MUSIC_BIOME_SOUL_SAND_VALLEY
	f	Ljl$c;	rE	MUSIC_BIOME_STONY_PEAKS
	f	Ljl$c;	rF	MUSIC_BIOME_WARPED_FOREST
	f	Ljl$c;	rG	MUSIC_BIOME_FLOWER_FOREST
	f	Ljl$c;	rH	MUSIC_BIOME_DESERT
	f	Ljl$c;	rI	MUSIC_BIOME_BADLANDS
	f	Ljl$c;	rJ	MUSIC_BIOME_JUNGLE
	f	Ljl$c;	rK	MUSIC_BIOME_SPARSE_JUNGLE
	f	Ljl$c;	rL	MUSIC_BIOME_BAMBOO_JUNGLE
	f	Ljl$c;	rM	MUSIC_UNDER_WATER
	f	Layy;	rN	NETHER_BRICKS_BREAK
	f	Layy;	rO	NETHER_BRICKS_STEP
	f	Layy;	rP	NETHER_BRICKS_PLACE
	f	Layy;	rQ	NETHER_BRICKS_HIT
	f	Layy;	rR	NETHER_BRICKS_FALL
	f	Layy;	rS	NETHER_WART_BREAK
	f	Layy;	rT	NETHER_WART_PLANTED
	f	Layy;	rU	NETHER_WOOD_BREAK
	f	Layy;	rV	NETHER_WOOD_FALL
	f	Layy;	rW	NETHER_WOOD_HIT
	f	Layy;	rX	NETHER_WOOD_PLACE
	f	Layy;	rY	NETHER_WOOD_STEP
	f	Layy;	rZ	NETHER_WOOD_DOOR_CLOSE
	f	Layy;	sa	NETHER_WOOD_DOOR_OPEN
	f	Layy;	sb	NETHER_WOOD_TRAPDOOR_CLOSE
	f	Layy;	sc	NETHER_WOOD_TRAPDOOR_OPEN
	f	Layy;	sd	NETHER_WOOD_BUTTON_CLICK_OFF
	f	Layy;	se	NETHER_WOOD_BUTTON_CLICK_ON
	f	Layy;	sf	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	sg	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON
	f	Layy;	sh	NETHER_WOOD_FENCE_GATE_CLOSE
	f	Layy;	si	NETHER_WOOD_FENCE_GATE_OPEN
	f	Layy;	sj	EMPTY
	f	Layy;	sk	PACKED_MUD_BREAK
	f	Layy;	sl	PACKED_MUD_FALL
	f	Layy;	sm	PACKED_MUD_HIT
	f	Layy;	sn	PACKED_MUD_PLACE
	f	Layy;	so	PACKED_MUD_STEP
	f	Layy;	sp	STEM_BREAK
	f	Layy;	sq	STEM_STEP
	f	Layy;	sr	STEM_PLACE
	f	Layy;	ss	STEM_HIT
	f	Layy;	st	STEM_FALL
	f	Layy;	su	NYLIUM_BREAK
	f	Layy;	sv	NYLIUM_STEP
	f	Layy;	sw	NYLIUM_PLACE
	f	Layy;	sx	NYLIUM_HIT
	f	Layy;	sy	NYLIUM_FALL
	f	Layy;	sz	NETHER_SPROUTS_BREAK
	f	Layy;	sA	NETHER_SPROUTS_STEP
	f	Layy;	sB	NETHER_SPROUTS_PLACE
	f	Layy;	sC	NETHER_SPROUTS_HIT
	f	Layy;	sD	NETHER_SPROUTS_FALL
	f	Layy;	sE	FUNGUS_BREAK
	f	Layy;	sF	FUNGUS_STEP
	f	Layy;	sG	FUNGUS_PLACE
	f	Layy;	sH	FUNGUS_HIT
	f	Layy;	sI	FUNGUS_FALL
	f	Layy;	sJ	WEEPING_VINES_BREAK
	f	Layy;	sK	WEEPING_VINES_STEP
	f	Layy;	sL	WEEPING_VINES_PLACE
	f	Layy;	sM	WEEPING_VINES_HIT
	f	Layy;	sN	WEEPING_VINES_FALL
	f	Layy;	sO	WART_BLOCK_BREAK
	f	Layy;	sP	WART_BLOCK_STEP
	f	Layy;	sQ	WART_BLOCK_PLACE
	f	Layy;	sR	WART_BLOCK_HIT
	f	Layy;	sS	WART_BLOCK_FALL
	f	Layy;	sT	NETHERITE_BLOCK_BREAK
	f	Layy;	sU	NETHERITE_BLOCK_STEP
	f	Layy;	sV	NETHERITE_BLOCK_PLACE
	f	Layy;	sW	NETHERITE_BLOCK_HIT
	f	Layy;	sX	NETHERITE_BLOCK_FALL
	f	Layy;	sY	NETHERRACK_BREAK
	f	Layy;	sZ	NETHERRACK_STEP
	f	Layy;	ta	NETHERRACK_PLACE
	f	Layy;	tb	NETHERRACK_HIT
	f	Layy;	tc	NETHERRACK_FALL
	f	Ljl$c;	td	NOTE_BLOCK_BASEDRUM
	f	Ljl$c;	te	NOTE_BLOCK_BASS
	f	Ljl$c;	tf	NOTE_BLOCK_BELL
	f	Ljl$c;	tg	NOTE_BLOCK_CHIME
	f	Ljl$c;	th	NOTE_BLOCK_FLUTE
	f	Ljl$c;	ti	NOTE_BLOCK_GUITAR
	f	Ljl$c;	tj	NOTE_BLOCK_HARP
	f	Ljl$c;	tk	NOTE_BLOCK_HAT
	f	Ljl$c;	tl	NOTE_BLOCK_PLING
	f	Ljl$c;	tm	NOTE_BLOCK_SNARE
	f	Ljl$c;	tn	NOTE_BLOCK_XYLOPHONE
	f	Ljl$c;	to	NOTE_BLOCK_IRON_XYLOPHONE
	f	Ljl$c;	tp	NOTE_BLOCK_COW_BELL
	f	Ljl$c;	tq	NOTE_BLOCK_DIDGERIDOO
	f	Ljl$c;	tr	NOTE_BLOCK_BIT
	f	Ljl$c;	ts	NOTE_BLOCK_BANJO
	f	Ljl$c;	tt	NOTE_BLOCK_IMITATE_ZOMBIE
	f	Ljl$c;	tu	NOTE_BLOCK_IMITATE_SKELETON
	f	Ljl$c;	tv	NOTE_BLOCK_IMITATE_CREEPER
	f	Ljl$c;	tw	NOTE_BLOCK_IMITATE_ENDER_DRAGON
	f	Ljl$c;	tx	NOTE_BLOCK_IMITATE_WITHER_SKELETON
	f	Ljl$c;	ty	NOTE_BLOCK_IMITATE_PIGLIN
	f	Layy;	tz	OCELOT_HURT
	f	Layy;	tA	OCELOT_AMBIENT
	f	Layy;	tB	OCELOT_DEATH
	f	Ljl$c;	tC	OMINOUS_BOTTLE_DISPOSE
	f	Layy;	tD	PAINTING_BREAK
	f	Layy;	tE	PAINTING_PLACE
	f	Layy;	tF	PALE_HANGING_MOSS_IDLE
	f	Layy;	tG	PANDA_PRE_SNEEZE
	f	Layy;	tH	PANDA_SNEEZE
	f	Layy;	tI	PANDA_AMBIENT
	f	Layy;	tJ	PANDA_DEATH
	f	Layy;	tK	PANDA_EAT
	f	Layy;	tL	PANDA_STEP
	f	Layy;	tM	PANDA_CANT_BREED
	f	Layy;	tN	PANDA_AGGRESSIVE_AMBIENT
	f	Layy;	tO	PANDA_WORRIED_AMBIENT
	f	Layy;	tP	PANDA_HURT
	f	Layy;	tQ	PANDA_BITE
	f	Layy;	tR	PARROT_AMBIENT
	f	Layy;	tS	PARROT_DEATH
	f	Layy;	tT	PARROT_EAT
	f	Layy;	tU	PARROT_FLY
	f	Layy;	tV	PARROT_HURT
	f	Layy;	tW	PARROT_IMITATE_BLAZE
	f	Layy;	tX	PARROT_IMITATE_BOGGED
	f	Layy;	tY	PARROT_IMITATE_BREEZE
	f	Layy;	tZ	PARROT_IMITATE_CREAKING
	f	Layy;	ua	PARROT_IMITATE_CREEPER
	f	Layy;	ub	PARROT_IMITATE_DROWNED
	f	Layy;	uc	PARROT_IMITATE_ELDER_GUARDIAN
	f	Layy;	ud	PARROT_IMITATE_ENDER_DRAGON
	f	Layy;	ue	PARROT_IMITATE_ENDERMITE
	f	Layy;	uf	PARROT_IMITATE_EVOKER
	f	Layy;	ug	PARROT_IMITATE_GHAST
	f	Layy;	uh	PARROT_IMITATE_GUARDIAN
	f	Layy;	ui	PARROT_IMITATE_HOGLIN
	f	Layy;	uj	PARROT_IMITATE_HUSK
	f	Layy;	uk	PARROT_IMITATE_ILLUSIONER
	f	Layy;	ul	PARROT_IMITATE_MAGMA_CUBE
	f	Layy;	um	PARROT_IMITATE_PHANTOM
	f	Layy;	un	PARROT_IMITATE_PIGLIN
	f	Layy;	uo	PARROT_IMITATE_PIGLIN_BRUTE
	f	Layy;	up	PARROT_IMITATE_PILLAGER
	f	Layy;	uq	PARROT_IMITATE_RAVAGER
	f	Layy;	ur	PARROT_IMITATE_SHULKER
	f	Layy;	us	PARROT_IMITATE_SILVERFISH
	f	Layy;	ut	PARROT_IMITATE_SKELETON
	f	Layy;	uu	PARROT_IMITATE_SLIME
	f	Layy;	uv	PARROT_IMITATE_SPIDER
	f	Layy;	uw	PARROT_IMITATE_STRAY
	f	Layy;	ux	PARROT_IMITATE_VEX
	f	Layy;	uy	PARROT_IMITATE_VINDICATOR
	f	Layy;	uz	PARROT_IMITATE_WARDEN
	f	Layy;	uA	PARROT_IMITATE_WITCH
	f	Layy;	uB	PARROT_IMITATE_WITHER
	f	Layy;	uC	PARROT_IMITATE_WITHER_SKELETON
	f	Layy;	uD	PARROT_IMITATE_ZOGLIN
	f	Layy;	uE	PARROT_IMITATE_ZOMBIE
	f	Layy;	uF	PARROT_IMITATE_ZOMBIE_VILLAGER
	f	Layy;	uG	PARROT_STEP
	f	Layy;	uH	PHANTOM_AMBIENT
	f	Layy;	uI	PHANTOM_BITE
	f	Layy;	uJ	PHANTOM_DEATH
	f	Layy;	uK	PHANTOM_FLAP
	f	Layy;	uL	PHANTOM_HURT
	f	Layy;	uM	PHANTOM_SWOOP
	f	Layy;	uN	PIG_AMBIENT
	f	Layy;	uO	PIG_DEATH
	f	Layy;	uP	PIG_HURT
	f	Ljl$c;	uQ	PIG_SADDLE
	f	Layy;	uR	PIG_STEP
	f	Layy;	uS	PIGLIN_ADMIRING_ITEM
	f	Layy;	uT	PIGLIN_AMBIENT
	f	Layy;	uU	PIGLIN_ANGRY
	f	Layy;	uV	PIGLIN_CELEBRATE
	f	Layy;	uW	PIGLIN_DEATH
	f	Layy;	uX	PIGLIN_JEALOUS
	f	Layy;	uY	PIGLIN_HURT
	f	Layy;	uZ	PIGLIN_RETREAT
	f	Layy;	va	PIGLIN_STEP
	f	Layy;	vb	PIGLIN_CONVERTED_TO_ZOMBIFIED
	f	Layy;	vc	PIGLIN_BRUTE_AMBIENT
	f	Layy;	vd	PIGLIN_BRUTE_ANGRY
	f	Layy;	ve	PIGLIN_BRUTE_DEATH
	f	Layy;	vf	PIGLIN_BRUTE_HURT
	f	Layy;	vg	PIGLIN_BRUTE_STEP
	f	Layy;	vh	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED
	f	Layy;	vi	PILLAGER_AMBIENT
	f	Layy;	vj	PILLAGER_CELEBRATE
	f	Layy;	vk	PILLAGER_DEATH
	f	Layy;	vl	PILLAGER_HURT
	f	Layy;	vm	PISTON_CONTRACT
	f	Layy;	vn	PISTON_EXTEND
	f	Layy;	vo	PLAYER_ATTACK_CRIT
	f	Layy;	vp	PLAYER_ATTACK_KNOCKBACK
	f	Layy;	vq	PLAYER_ATTACK_NODAMAGE
	f	Layy;	vr	PLAYER_ATTACK_STRONG
	f	Layy;	vs	PLAYER_ATTACK_SWEEP
	f	Layy;	vt	PLAYER_ATTACK_WEAK
	f	Layy;	vu	PLAYER_BIG_FALL
	f	Layy;	vv	PLAYER_BREATH
	f	Layy;	vw	PLAYER_BURP
	f	Layy;	vx	PLAYER_DEATH
	f	Layy;	vy	PLAYER_HURT
	f	Layy;	vz	PLAYER_HURT_DROWN
	f	Layy;	vA	PLAYER_HURT_FREEZE
	f	Layy;	vB	PLAYER_HURT_ON_FIRE
	f	Layy;	vC	PLAYER_HURT_SWEET_BERRY_BUSH
	f	Layy;	vD	PLAYER_LEVELUP
	f	Layy;	vE	PLAYER_SMALL_FALL
	f	Layy;	vF	PLAYER_SPLASH
	f	Layy;	vG	PLAYER_SPLASH_HIGH_SPEED
	f	Layy;	vH	PLAYER_SWIM
	f	Layy;	vI	PLAYER_TELEPORT
	f	Layy;	vJ	POLAR_BEAR_AMBIENT
	f	Layy;	vK	POLAR_BEAR_AMBIENT_BABY
	f	Layy;	vL	POLAR_BEAR_DEATH
	f	Layy;	vM	POLAR_BEAR_HURT
	f	Layy;	vN	POLAR_BEAR_STEP
	f	Layy;	vO	POLAR_BEAR_WARNING
	f	Layy;	vP	POLISHED_DEEPSLATE_BREAK
	f	Layy;	vQ	POLISHED_DEEPSLATE_FALL
	f	Layy;	vR	POLISHED_DEEPSLATE_HIT
	f	Layy;	vS	POLISHED_DEEPSLATE_PLACE
	f	Layy;	vT	POLISHED_DEEPSLATE_STEP
	f	Layy;	vU	PORTAL_AMBIENT
	f	Layy;	vV	PORTAL_TRAVEL
	f	Layy;	vW	PORTAL_TRIGGER
	f	Layy;	vX	POWDER_SNOW_BREAK
	f	Layy;	vY	POWDER_SNOW_FALL
	f	Layy;	vZ	POWDER_SNOW_HIT
	f	Layy;	wa	POWDER_SNOW_PLACE
	f	Layy;	wb	POWDER_SNOW_STEP
	f	Layy;	wc	PUFFER_FISH_BLOW_OUT
	f	Layy;	wd	PUFFER_FISH_BLOW_UP
	f	Layy;	we	PUFFER_FISH_DEATH
	f	Layy;	wf	PUFFER_FISH_FLOP
	f	Layy;	wg	PUFFER_FISH_HURT
	f	Layy;	wh	PUFFER_FISH_STING
	f	Layy;	wi	PUMPKIN_CARVE
	f	Layy;	wj	RABBIT_AMBIENT
	f	Layy;	wk	RABBIT_ATTACK
	f	Layy;	wl	RABBIT_DEATH
	f	Layy;	wm	RABBIT_HURT
	f	Layy;	wn	RABBIT_JUMP
	f	Ljl$c;	wo	RAID_HORN
	f	Layy;	wp	RAVAGER_AMBIENT
	f	Layy;	wq	RAVAGER_ATTACK
	f	Layy;	wr	RAVAGER_CELEBRATE
	f	Layy;	ws	RAVAGER_DEATH
	f	Layy;	wt	RAVAGER_HURT
	f	Layy;	wu	RAVAGER_STEP
	f	Layy;	wv	RAVAGER_STUNNED
	f	Layy;	ww	RAVAGER_ROAR
	f	Layy;	wx	NETHER_GOLD_ORE_BREAK
	f	Layy;	wy	NETHER_GOLD_ORE_FALL
	f	Layy;	wz	NETHER_GOLD_ORE_HIT
	f	Layy;	wA	NETHER_GOLD_ORE_PLACE
	f	Layy;	wB	NETHER_GOLD_ORE_STEP
	f	Layy;	wC	NETHER_ORE_BREAK
	f	Layy;	wD	NETHER_ORE_FALL
	f	Layy;	wE	NETHER_ORE_HIT
	f	Layy;	wF	NETHER_ORE_PLACE
	f	Layy;	wG	NETHER_ORE_STEP
	f	Layy;	wH	REDSTONE_TORCH_BURNOUT
	f	Layy;	wI	RESPAWN_ANCHOR_AMBIENT
	f	Layy;	wJ	RESPAWN_ANCHOR_CHARGE
	f	Ljl$c;	wK	RESPAWN_ANCHOR_DEPLETE
	f	Layy;	wL	RESPAWN_ANCHOR_SET_SPAWN
	f	Layy;	wM	ROOTED_DIRT_BREAK
	f	Layy;	wN	ROOTED_DIRT_FALL
	f	Layy;	wO	ROOTED_DIRT_HIT
	f	Layy;	wP	ROOTED_DIRT_PLACE
	f	Layy;	wQ	ROOTED_DIRT_STEP
	f	Layy;	wR	SALMON_AMBIENT
	f	Layy;	wS	SALMON_DEATH
	f	Layy;	wT	SALMON_FLOP
	f	Layy;	wU	SALMON_HURT
	f	Layy;	wV	SAND_BREAK
	f	Layy;	wW	SAND_FALL
	f	Layy;	wX	SAND_HIT
	f	Layy;	wY	SAND_PLACE
	f	Layy;	wZ	SAND_STEP
	f	Layy;	xa	SAND_IDLE
	f	Layy;	xb	SCAFFOLDING_BREAK
	f	Layy;	xc	SCAFFOLDING_FALL
	f	Layy;	xd	SCAFFOLDING_HIT
	f	Layy;	xe	SCAFFOLDING_PLACE
	f	Layy;	xf	SCAFFOLDING_STEP
	f	Layy;	xg	SCULK_BLOCK_SPREAD
	f	Layy;	xh	SCULK_BLOCK_CHARGE
	f	Layy;	xi	SCULK_BLOCK_BREAK
	f	Layy;	xj	SCULK_BLOCK_FALL
	f	Layy;	xk	SCULK_BLOCK_HIT
	f	Layy;	xl	SCULK_BLOCK_PLACE
	f	Layy;	xm	SCULK_BLOCK_STEP
	f	Layy;	xn	SCULK_CATALYST_BLOOM
	f	Layy;	xo	SCULK_CATALYST_BREAK
	f	Layy;	xp	SCULK_CATALYST_FALL
	f	Layy;	xq	SCULK_CATALYST_HIT
	f	Layy;	xr	SCULK_CATALYST_PLACE
	f	Layy;	xs	SCULK_CATALYST_STEP
	f	Layy;	xt	SCULK_CLICKING
	f	Layy;	xu	SCULK_CLICKING_STOP
	f	Layy;	xv	SCULK_SENSOR_BREAK
	f	Layy;	xw	SCULK_SENSOR_FALL
	f	Layy;	xx	SCULK_SENSOR_HIT
	f	Layy;	xy	SCULK_SENSOR_PLACE
	f	Layy;	xz	SCULK_SENSOR_STEP
	f	Layy;	xA	SCULK_SHRIEKER_BREAK
	f	Layy;	xB	SCULK_SHRIEKER_FALL
	f	Layy;	xC	SCULK_SHRIEKER_HIT
	f	Layy;	xD	SCULK_SHRIEKER_PLACE
	f	Layy;	xE	SCULK_SHRIEKER_SHRIEK
	f	Layy;	xF	SCULK_SHRIEKER_STEP
	f	Layy;	xG	SCULK_VEIN_BREAK
	f	Layy;	xH	SCULK_VEIN_FALL
	f	Layy;	xI	SCULK_VEIN_HIT
	f	Layy;	xJ	SCULK_VEIN_PLACE
	f	Layy;	xK	SCULK_VEIN_STEP
	f	Layy;	xL	SHEEP_AMBIENT
	f	Layy;	xM	SHEEP_DEATH
	f	Layy;	xN	SHEEP_HURT
	f	Layy;	xO	SHEEP_SHEAR
	f	Layy;	xP	SHEEP_STEP
	f	Layy;	xQ	SHEARS_SNIP
	f	Ljl$c;	xR	SHIELD_BLOCK
	f	Ljl$c;	xS	SHIELD_BREAK
	f	Layy;	xT	SHROOMLIGHT_BREAK
	f	Layy;	xU	SHROOMLIGHT_STEP
	f	Layy;	xV	SHROOMLIGHT_PLACE
	f	Layy;	xW	SHROOMLIGHT_HIT
	f	Layy;	xX	SHROOMLIGHT_FALL
	f	Layy;	xY	SHOVEL_FLATTEN
	f	Layy;	xZ	SHULKER_AMBIENT
	f	Layy;	ya	SHULKER_BOX_CLOSE
	f	Layy;	yb	SHULKER_BOX_OPEN
	f	Layy;	yc	SHULKER_BULLET_HIT
	f	Layy;	yd	SHULKER_BULLET_HURT
	f	Layy;	ye	SHULKER_CLOSE
	f	Layy;	yf	SHULKER_DEATH
	f	Layy;	yg	SHULKER_HURT
	f	Layy;	yh	SHULKER_HURT_CLOSED
	f	Layy;	yi	SHULKER_OPEN
	f	Layy;	yj	SHULKER_SHOOT
	f	Layy;	yk	SHULKER_TELEPORT
	f	Layy;	yl	SILVERFISH_AMBIENT
	f	Layy;	ym	SILVERFISH_DEATH
	f	Layy;	yn	SILVERFISH_HURT
	f	Layy;	yo	SILVERFISH_STEP
	f	Layy;	yp	SKELETON_AMBIENT
	f	Layy;	yq	SKELETON_CONVERTED_TO_STRAY
	f	Layy;	yr	SKELETON_DEATH
	f	Layy;	ys	SKELETON_HORSE_AMBIENT
	f	Layy;	yt	SKELETON_HORSE_DEATH
	f	Layy;	yu	SKELETON_HORSE_HURT
	f	Layy;	yv	SKELETON_HORSE_SWIM
	f	Layy;	yw	SKELETON_HORSE_AMBIENT_WATER
	f	Layy;	yx	SKELETON_HORSE_GALLOP_WATER
	f	Layy;	yy	SKELETON_HORSE_JUMP_WATER
	f	Layy;	yz	SKELETON_HORSE_STEP_WATER
	f	Layy;	yA	SKELETON_HURT
	f	Layy;	yB	SKELETON_SHOOT
	f	Layy;	yC	SKELETON_STEP
	f	Layy;	yD	SLIME_ATTACK
	f	Layy;	yE	SLIME_DEATH
	f	Layy;	yF	SLIME_HURT
	f	Layy;	yG	SLIME_JUMP
	f	Layy;	yH	SLIME_SQUISH
	f	Layy;	yI	SLIME_BLOCK_BREAK
	f	Layy;	yJ	SLIME_BLOCK_FALL
	f	Layy;	yK	SLIME_BLOCK_HIT
	f	Layy;	yL	SLIME_BLOCK_PLACE
	f	Layy;	yM	SLIME_BLOCK_STEP
	f	Layy;	yN	SMALL_AMETHYST_BUD_BREAK
	f	Layy;	yO	SMALL_AMETHYST_BUD_PLACE
	f	Layy;	yP	SMALL_DRIPLEAF_BREAK
	f	Layy;	yQ	SMALL_DRIPLEAF_FALL
	f	Layy;	yR	SMALL_DRIPLEAF_HIT
	f	Layy;	yS	SMALL_DRIPLEAF_PLACE
	f	Layy;	yT	SMALL_DRIPLEAF_STEP
	f	Layy;	yU	SOUL_SAND_BREAK
	f	Layy;	yV	SOUL_SAND_STEP
	f	Layy;	yW	SOUL_SAND_PLACE
	f	Layy;	yX	SOUL_SAND_HIT
	f	Layy;	yY	SOUL_SAND_FALL
	f	Layy;	yZ	SOUL_SOIL_BREAK
	f	Layy;	za	SOUL_SOIL_STEP
	f	Layy;	zb	SOUL_SOIL_PLACE
	f	Layy;	zc	SOUL_SOIL_HIT
	f	Layy;	zd	SOUL_SOIL_FALL
	f	Ljl$c;	ze	SOUL_ESCAPE
	f	Layy;	zf	SPAWNER_BREAK
	f	Layy;	zg	SPAWNER_FALL
	f	Layy;	zh	SPAWNER_HIT
	f	Layy;	zi	SPAWNER_PLACE
	f	Layy;	zj	SPAWNER_STEP
	f	Layy;	zk	RESIN_BREAK
	f	Layy;	zl	RESIN_FALL
	f	Layy;	zm	RESIN_PLACE
	f	Layy;	zn	RESIN_STEP
	f	Layy;	zo	RESIN_BRICKS_BREAK
	f	Layy;	zp	RESIN_BRICKS_FALL
	f	Layy;	zq	RESIN_BRICKS_HIT
	f	Layy;	zr	RESIN_BRICKS_PLACE
	f	Layy;	zs	RESIN_BRICKS_STEP
	f	Layy;	zt	SPORE_BLOSSOM_BREAK
	f	Layy;	zu	SPORE_BLOSSOM_FALL
	f	Layy;	zv	SPORE_BLOSSOM_HIT
	f	Layy;	zw	SPORE_BLOSSOM_PLACE
	f	Layy;	zx	SPORE_BLOSSOM_STEP
	f	Layy;	zy	STRIDER_AMBIENT
	f	Layy;	zz	STRIDER_HAPPY
	f	Layy;	zA	STRIDER_RETREAT
	f	Layy;	zB	STRIDER_DEATH
	f	Layy;	zC	STRIDER_HURT
	f	Layy;	zD	STRIDER_STEP
	f	Layy;	zE	STRIDER_STEP_LAVA
	f	Layy;	zF	STRIDER_EAT
	f	Ljl$c;	zG	STRIDER_SADDLE
	f	Layy;	zH	SLIME_DEATH_SMALL
	f	Layy;	zI	SLIME_HURT_SMALL
	f	Layy;	zJ	SLIME_JUMP_SMALL
	f	Layy;	zK	SLIME_SQUISH_SMALL
	f	Layy;	zL	SMITHING_TABLE_USE
	f	Layy;	zM	SMOKER_SMOKE
	f	Layy;	zN	SNIFFER_STEP
	f	Layy;	zO	SNIFFER_EAT
	f	Layy;	zP	SNIFFER_IDLE
	f	Layy;	zQ	SNIFFER_HURT
	f	Layy;	zR	SNIFFER_DEATH
	f	Layy;	zS	SNIFFER_DROP_SEED
	f	Layy;	zT	SNIFFER_SCENTING
	f	Layy;	zU	SNIFFER_SNIFFING
	f	Layy;	zV	SNIFFER_SEARCHING
	f	Layy;	zW	SNIFFER_DIGGING
	f	Layy;	zX	SNIFFER_DIGGING_STOP
	f	Layy;	zY	SNIFFER_HAPPY
	f	Layy;	zZ	SNIFFER_EGG_PLOP
	f	Layy;	Aa	SNIFFER_EGG_CRACK
	f	Layy;	Ab	SNIFFER_EGG_HATCH
	f	Layy;	Ac	SNOWBALL_THROW
	f	Layy;	Ad	SNOW_BREAK
	f	Layy;	Ae	SNOW_FALL
	f	Layy;	Af	SNOW_GOLEM_AMBIENT
	f	Layy;	Ag	SNOW_GOLEM_DEATH
	f	Layy;	Ah	SNOW_GOLEM_HURT
	f	Layy;	Ai	SNOW_GOLEM_SHOOT
	f	Layy;	Aj	SNOW_GOLEM_SHEAR
	f	Layy;	Ak	SNOW_HIT
	f	Layy;	Al	SNOW_PLACE
	f	Layy;	Am	SNOW_STEP
	f	Layy;	An	SPIDER_AMBIENT
	f	Layy;	Ao	SPIDER_DEATH
	f	Layy;	Ap	SPIDER_HURT
	f	Layy;	Aq	SPIDER_STEP
	f	Layy;	Ar	SPLASH_POTION_BREAK
	f	Layy;	As	SPLASH_POTION_THROW
	f	Layy;	At	SPONGE_BREAK
	f	Layy;	Au	SPONGE_FALL
	f	Layy;	Av	SPONGE_HIT
	f	Layy;	Aw	SPONGE_PLACE
	f	Layy;	Ax	SPONGE_STEP
	f	Layy;	Ay	SPONGE_ABSORB
	f	Layy;	Az	SPYGLASS_USE
	f	Layy;	AA	SPYGLASS_STOP_USING
	f	Layy;	AB	SQUID_AMBIENT
	f	Layy;	AC	SQUID_DEATH
	f	Layy;	AD	SQUID_HURT
	f	Layy;	AE	SQUID_SQUIRT
	f	Layy;	AF	STONE_BREAK
	f	Layy;	AG	STONE_BUTTON_CLICK_OFF
	f	Layy;	AH	STONE_BUTTON_CLICK_ON
	f	Layy;	AI	STONE_FALL
	f	Layy;	AJ	STONE_HIT
	f	Layy;	AK	STONE_PLACE
	f	Layy;	AL	STONE_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	AM	STONE_PRESSURE_PLATE_CLICK_ON
	f	Layy;	AN	STONE_STEP
	f	Layy;	AO	STRAY_AMBIENT
	f	Layy;	AP	STRAY_DEATH
	f	Layy;	AQ	STRAY_HURT
	f	Layy;	AR	STRAY_STEP
	f	Layy;	AS	SWEET_BERRY_BUSH_BREAK
	f	Layy;	AT	SWEET_BERRY_BUSH_PLACE
	f	Layy;	AU	SWEET_BERRY_BUSH_PICK_BERRIES
	f	Layy;	AV	TADPOLE_DEATH
	f	Layy;	AW	TADPOLE_FLOP
	f	Layy;	AX	TADPOLE_GROW_UP
	f	Layy;	AY	TADPOLE_HURT
	f	Layy;	AZ	THORNS_HIT
	f	Layy;	Ba	TNT_PRIMED
	f	Layy;	Bb	TOTEM_USE
	f	Layy;	Bc	TRIDENT_HIT
	f	Layy;	Bd	TRIDENT_HIT_GROUND
	f	Layy;	Be	TRIDENT_RETURN
	f	Ljl;	Bf	TRIDENT_RIPTIDE_1
	f	Ljl;	Bg	TRIDENT_RIPTIDE_2
	f	Ljl;	Bh	TRIDENT_RIPTIDE_3
	f	Ljl;	Bi	TRIDENT_THROW
	f	Ljl;	Bj	TRIDENT_THUNDER
	f	Layy;	Bk	TRIPWIRE_ATTACH
	f	Layy;	Bl	TRIPWIRE_CLICK_OFF
	f	Layy;	Bm	TRIPWIRE_CLICK_ON
	f	Layy;	Bn	TRIPWIRE_DETACH
	f	Layy;	Bo	TROPICAL_FISH_AMBIENT
	f	Layy;	Bp	TROPICAL_FISH_DEATH
	f	Layy;	Bq	TROPICAL_FISH_FLOP
	f	Layy;	Br	TROPICAL_FISH_HURT
	f	Layy;	Bs	TUFF_BREAK
	f	Layy;	Bt	TUFF_STEP
	f	Layy;	Bu	TUFF_PLACE
	f	Layy;	Bv	TUFF_HIT
	f	Layy;	Bw	TUFF_FALL
	f	Layy;	Bx	TUFF_BRICKS_BREAK
	f	Layy;	By	TUFF_BRICKS_FALL
	f	Layy;	Bz	TUFF_BRICKS_HIT
	f	Layy;	BA	TUFF_BRICKS_PLACE
	f	Layy;	BB	TUFF_BRICKS_STEP
	f	Layy;	BC	POLISHED_TUFF_BREAK
	f	Layy;	BD	POLISHED_TUFF_FALL
	f	Layy;	BE	POLISHED_TUFF_HIT
	f	Layy;	BF	POLISHED_TUFF_PLACE
	f	Layy;	BG	POLISHED_TUFF_STEP
	f	Layy;	BH	TURTLE_AMBIENT_LAND
	f	Layy;	BI	TURTLE_DEATH
	f	Layy;	BJ	TURTLE_DEATH_BABY
	f	Layy;	BK	TURTLE_EGG_BREAK
	f	Layy;	BL	TURTLE_EGG_CRACK
	f	Layy;	BM	TURTLE_EGG_HATCH
	f	Layy;	BN	TURTLE_HURT
	f	Layy;	BO	TURTLE_HURT_BABY
	f	Layy;	BP	TURTLE_LAY_EGG
	f	Layy;	BQ	TURTLE_SHAMBLE
	f	Layy;	BR	TURTLE_SHAMBLE_BABY
	f	Layy;	BS	TURTLE_SWIM
	f	Ljl$c;	BT	UI_BUTTON_CLICK
	f	Layy;	BU	UI_LOOM_SELECT_PATTERN
	f	Layy;	BV	UI_LOOM_TAKE_RESULT
	f	Layy;	BW	UI_CARTOGRAPHY_TABLE_TAKE_RESULT
	f	Layy;	BX	UI_STONECUTTER_TAKE_RESULT
	f	Layy;	BY	UI_STONECUTTER_SELECT_RECIPE
	f	Layy;	BZ	UI_TOAST_CHALLENGE_COMPLETE
	f	Layy;	Ca	UI_TOAST_IN
	f	Layy;	Cb	UI_TOAST_OUT
	f	Layy;	Cc	VAULT_ACTIVATE
	f	Layy;	Cd	VAULT_AMBIENT
	f	Layy;	Ce	VAULT_BREAK
	f	Layy;	Cf	VAULT_CLOSE_SHUTTER
	f	Layy;	Cg	VAULT_DEACTIVATE
	f	Layy;	Ch	VAULT_EJECT_ITEM
	f	Layy;	Ci	VAULT_REJECT_REWARDED_PLAYER
	f	Layy;	Cj	VAULT_FALL
	f	Layy;	Ck	VAULT_HIT
	f	Layy;	Cl	VAULT_INSERT_ITEM
	f	Layy;	Cm	VAULT_INSERT_ITEM_FAIL
	f	Layy;	Cn	VAULT_OPEN_SHUTTER
	f	Layy;	Co	VAULT_PLACE
	f	Layy;	Cp	VAULT_STEP
	f	Layy;	Cq	VEX_AMBIENT
	f	Layy;	Cr	VEX_CHARGE
	f	Layy;	Cs	VEX_DEATH
	f	Layy;	Ct	VEX_HURT
	f	Layy;	Cu	VILLAGER_AMBIENT
	f	Layy;	Cv	VILLAGER_CELEBRATE
	f	Layy;	Cw	VILLAGER_DEATH
	f	Layy;	Cx	VILLAGER_HURT
	f	Layy;	Cy	VILLAGER_NO
	f	Layy;	Cz	VILLAGER_TRADE
	f	Layy;	CA	VILLAGER_YES
	f	Layy;	CB	VILLAGER_WORK_ARMORER
	f	Layy;	CC	VILLAGER_WORK_BUTCHER
	f	Layy;	CD	VILLAGER_WORK_CARTOGRAPHER
	f	Layy;	CE	VILLAGER_WORK_CLERIC
	f	Layy;	CF	VILLAGER_WORK_FARMER
	f	Layy;	CG	VILLAGER_WORK_FISHERMAN
	f	Layy;	CH	VILLAGER_WORK_FLETCHER
	f	Layy;	CI	VILLAGER_WORK_LEATHERWORKER
	f	Layy;	CJ	VILLAGER_WORK_LIBRARIAN
	f	Layy;	CK	VILLAGER_WORK_MASON
	f	Layy;	CL	VILLAGER_WORK_SHEPHERD
	f	Layy;	CM	VILLAGER_WORK_TOOLSMITH
	f	Layy;	CN	VILLAGER_WORK_WEAPONSMITH
	f	Layy;	CO	VINDICATOR_AMBIENT
	f	Layy;	CP	VINDICATOR_CELEBRATE
	f	Layy;	CQ	VINDICATOR_DEATH
	f	Layy;	CR	VINDICATOR_HURT
	f	Layy;	CS	VINE_BREAK
	f	Layy;	CT	VINE_FALL
	f	Layy;	CU	VINE_HIT
	f	Layy;	CV	VINE_PLACE
	f	Layy;	CW	VINE_STEP
	f	Layy;	CX	LILY_PAD_PLACE
	f	Layy;	CY	WANDERING_TRADER_AMBIENT
	f	Layy;	CZ	WANDERING_TRADER_DEATH
	f	Layy;	Da	WANDERING_TRADER_DISAPPEARED
	f	Layy;	Db	WANDERING_TRADER_DRINK_MILK
	f	Layy;	Dc	WANDERING_TRADER_DRINK_POTION
	f	Layy;	Dd	WANDERING_TRADER_HURT
	f	Layy;	De	WANDERING_TRADER_NO
	f	Layy;	Df	WANDERING_TRADER_REAPPEARED
	f	Layy;	Dg	WANDERING_TRADER_TRADE
	f	Layy;	Dh	WANDERING_TRADER_YES
	f	Layy;	Di	WARDEN_AGITATED
	f	Layy;	Dj	WARDEN_AMBIENT
	f	Layy;	Dk	WARDEN_ANGRY
	f	Layy;	Dl	WARDEN_ATTACK_IMPACT
	f	Layy;	Dm	WARDEN_DEATH
	f	Layy;	Dn	WARDEN_DIG
	f	Layy;	Do	WARDEN_EMERGE
	f	Layy;	Dp	WARDEN_HEARTBEAT
	f	Layy;	Dq	WARDEN_HURT
	f	Layy;	Dr	WARDEN_LISTENING
	f	Layy;	Ds	WARDEN_LISTENING_ANGRY
	f	Layy;	Dt	WARDEN_NEARBY_CLOSE
	f	Layy;	Du	WARDEN_NEARBY_CLOSER
	f	Layy;	Dv	WARDEN_NEARBY_CLOSEST
	f	Layy;	Dw	WARDEN_ROAR
	f	Layy;	Dx	WARDEN_SNIFF
	f	Layy;	Dy	WARDEN_SONIC_BOOM
	f	Layy;	Dz	WARDEN_SONIC_CHARGE
	f	Layy;	DA	WARDEN_STEP
	f	Layy;	DB	WARDEN_TENDRIL_CLICKS
	f	Layy;	DC	WAXED_HANGING_SIGN_INTERACT_FAIL
	f	Layy;	DD	WAXED_SIGN_INTERACT_FAIL
	f	Layy;	DE	WATER_AMBIENT
	f	Layy;	DF	WEATHER_RAIN
	f	Layy;	DG	WEATHER_RAIN_ABOVE
	f	Layy;	DH	WET_GRASS_BREAK
	f	Layy;	DI	WET_GRASS_FALL
	f	Layy;	DJ	WET_GRASS_HIT
	f	Layy;	DK	WET_GRASS_PLACE
	f	Layy;	DL	WET_GRASS_STEP
	f	Layy;	DM	WET_SPONGE_BREAK
	f	Layy;	DN	WET_SPONGE_DRIES
	f	Layy;	DO	WET_SPONGE_FALL
	f	Layy;	DP	WET_SPONGE_HIT
	f	Layy;	DQ	WET_SPONGE_PLACE
	f	Layy;	DR	WET_SPONGE_STEP
	f	Ljl$c;	DS	WIND_CHARGE_BURST
	f	Layy;	DT	WIND_CHARGE_THROW
	f	Layy;	DU	WITCH_AMBIENT
	f	Layy;	DV	WITCH_CELEBRATE
	f	Layy;	DW	WITCH_DEATH
	f	Layy;	DX	WITCH_DRINK
	f	Layy;	DY	WITCH_HURT
	f	Layy;	DZ	WITCH_THROW
	f	Layy;	Ea	WITHER_AMBIENT
	f	Layy;	Eb	WITHER_BREAK_BLOCK
	f	Layy;	Ec	WITHER_DEATH
	f	Layy;	Ed	WITHER_HURT
	f	Layy;	Ee	WITHER_SHOOT
	f	Layy;	Ef	WITHER_SKELETON_AMBIENT
	f	Layy;	Eg	WITHER_SKELETON_DEATH
	f	Layy;	Eh	WITHER_SKELETON_HURT
	f	Layy;	Ei	WITHER_SKELETON_STEP
	f	Layy;	Ej	WITHER_SPAWN
	f	Ljl$c;	Ek	WOLF_ARMOR_BREAK
	f	Layy;	El	WOLF_ARMOR_CRACK
	f	Layy;	Em	WOLF_ARMOR_DAMAGE
	f	Layy;	En	WOLF_ARMOR_REPAIR
	f	Layy;	Eo	WOLF_SHAKE
	f	Layy;	Ep	WOLF_STEP
	f	Ljava/util/Map;	Eq	WOLF_SOUNDS
	f	Layy;	Er	WOODEN_DOOR_CLOSE
	f	Layy;	Es	WOODEN_DOOR_OPEN
	f	Layy;	Et	WOODEN_TRAPDOOR_CLOSE
	f	Layy;	Eu	WOODEN_TRAPDOOR_OPEN
	f	Layy;	Ev	WOODEN_BUTTON_CLICK_OFF
	f	Layy;	Ew	WOODEN_BUTTON_CLICK_ON
	f	Layy;	Ex	WOODEN_PRESSURE_PLATE_CLICK_OFF
	f	Layy;	Ey	WOODEN_PRESSURE_PLATE_CLICK_ON
	f	Layy;	Ez	WOOD_BREAK
	f	Layy;	EA	WOOD_FALL
	f	Layy;	EB	WOOD_HIT
	f	Layy;	EC	WOOD_PLACE
	f	Layy;	ED	WOOD_STEP
	f	Layy;	EE	WOOL_BREAK
	f	Layy;	EF	WOOL_FALL
	f	Layy;	EG	WOOL_HIT
	f	Layy;	EH	WOOL_PLACE
	f	Layy;	EI	WOOL_STEP
	f	Layy;	EJ	ZOGLIN_AMBIENT
	f	Layy;	EK	ZOGLIN_ANGRY
	f	Layy;	EL	ZOGLIN_ATTACK
	f	Layy;	EM	ZOGLIN_DEATH
	f	Layy;	EN	ZOGLIN_HURT
	f	Layy;	EO	ZOGLIN_STEP
	f	Layy;	EP	ZOMBIE_AMBIENT
	f	Layy;	EQ	ZOMBIE_ATTACK_WOODEN_DOOR
	f	Layy;	ER	ZOMBIE_ATTACK_IRON_DOOR
	f	Layy;	ES	ZOMBIE_BREAK_WOODEN_DOOR
	f	Layy;	ET	ZOMBIE_CONVERTED_TO_DROWNED
	f	Layy;	EU	ZOMBIE_DEATH
	f	Layy;	EV	ZOMBIE_DESTROY_EGG
	f	Layy;	EW	ZOMBIE_HORSE_AMBIENT
	f	Layy;	EX	ZOMBIE_HORSE_DEATH
	f	Layy;	EY	ZOMBIE_HORSE_HURT
	f	Layy;	EZ	ZOMBIE_HURT
	f	Layy;	Fa	ZOMBIE_INFECT
	f	Layy;	Fb	ZOMBIFIED_PIGLIN_AMBIENT
	f	Layy;	Fc	ZOMBIFIED_PIGLIN_ANGRY
	f	Layy;	Fd	ZOMBIFIED_PIGLIN_DEATH
	f	Layy;	Fe	ZOMBIFIED_PIGLIN_HURT
	f	Layy;	Ff	ZOMBIE_STEP
	f	Layy;	Fg	ZOMBIE_VILLAGER_AMBIENT
	f	Layy;	Fh	ZOMBIE_VILLAGER_CONVERTED
	f	Layy;	Fi	ZOMBIE_VILLAGER_CURE
	f	Layy;	Fj	ZOMBIE_VILLAGER_DEATH
	f	Layy;	Fk	ZOMBIE_VILLAGER_HURT
	f	Layy;	Fl	ZOMBIE_VILLAGER_STEP
	f	Layy;	Fm	APPLY_EFFECT_BAD_OMEN
	f	Layy;	Fn	APPLY_EFFECT_TRIAL_OMEN
	f	Layy;	Fo	APPLY_EFFECT_RAID_OMEN
	f	Ljl$c;	Fp	SADDLE_UNEQUIP
	m	()V	<init>	<init>
	m	(Lame;Lame;F)Ljl;	a	register
	m	(Ljava/lang/String;)Layy;	a	register
	m	(Lame;)Layy;	a	register
	m	(Ljava/lang/String;)Ljl$c;	b	registerForHolder
	m	(Lame;)Ljl$c;	b	registerForHolder
	m	(Lame;Lame;)Layy;	a	register
	m	(Lame;Lame;)Ljl$c;	b	registerForHolder
	m	()Lcom/google/common/collect/ImmutableList;	a	registerGoatHornSoundVariants
	m	()Ljava/util/Map;	b	registerWolfSoundVariants
	m	(Lcpl$a;)Lcpk;	a	lambda$registerWolfSoundVariants$2
	m	(Lcpl$a;)Lcpl$a;	b	lambda$registerWolfSoundVariants$1
	m	(I)Ljl$c;	a	lambda$registerGoatHornSoundVariants$0
	m	()V	<clinit>	<clinit>
c	aza	net/minecraft/sounds/SoundSource
	f	Laza;	a	MASTER
	f	Laza;	b	MUSIC
	f	Laza;	c	RECORDS
	f	Laza;	d	WEATHER
	f	Laza;	e	BLOCKS
	f	Laza;	f	HOSTILE
	f	Laza;	g	NEUTRAL
	f	Laza;	h	PLAYERS
	f	Laza;	i	AMBIENT
	f	Laza;	j	VOICE
	f	Laza;	k	UI
	f	Ljava/lang/String;	l	name
	f	[Laza;	m	$VALUES
	m	()[Laza;	values	values
	m	(Ljava/lang/String;)Laza;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()[Laza;	b	$values
	m	()V	<clinit>	<clinit>
c	azb	net/minecraft/sounds/package-info
c	azc	net/minecraft/stats/RecipeBook
	f	Lazd;	a	bookSettings
	m	()V	<init>	<init>
	m	(Ldac;)Z	a	isOpen
	m	(Ldac;Z)V	a	setOpen
	m	(Ldac;)Z	b	isFiltering
	m	(Ldac;Z)V	b	setFiltering
	m	(Lazd;)V	a	setBookSettings
	m	()Lazd;	a	getBookSettings
	m	(Ldac;ZZ)V	a	setBookSetting
c	azd	net/minecraft/stats/RecipeBookSettings
	f	Lzm;	a	STREAM_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	Lazd$a;	c	crafting
	f	Lazd$a;	d	furnace
	f	Lazd$a;	e	blastFurnace
	f	Lazd$a;	f	smoker
	m	()V	<init>	<init>
	m	(Lazd$a;Lazd$a;Lazd$a;Lazd$a;)V	<init>	<init>
	m	(Ldac;)Lazd$a;	a	getSettings
	m	(Ldac;Ljava/util/function/UnaryOperator;)V	a	updateSettings
	m	(Ldac;)Z	b	isOpen
	m	(Ldac;Z)V	a	setOpen
	m	(Ldac;)Z	c	isFiltering
	m	(Ldac;Z)V	b	setFiltering
	m	()Lazd;	a	copy
	m	(Lazd;)V	a	replaceFrom
	m	(ZLazd$a;)Lazd$a;	a	lambda$setFiltering$10
	m	(ZLazd$a;)Lazd$a;	b	lambda$setOpen$9
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
	m	(Lazd;)Lazd$a;	b	lambda$static$7
	m	(Lazd;)Lazd$a;	c	lambda$static$6
	m	(Lazd;)Lazd$a;	d	lambda$static$5
	m	(Lazd;)Lazd$a;	e	lambda$static$4
	m	(Lazd;)Lazd$a;	f	lambda$static$3
	m	(Lazd;)Lazd$a;	g	lambda$static$2
	m	(Lazd;)Lazd$a;	h	lambda$static$1
	m	(Lazd;)Lazd$a;	i	lambda$static$0
	m	()V	<clinit>	<clinit>
c	azd$1	net/minecraft/stats/RecipeBookSettings$1
	f	[I	a	$SwitchMap$net$minecraft$world$inventory$RecipeBookType
	m	()V	<clinit>	<clinit>
c	azd$a	net/minecraft/stats/RecipeBookSettings$TypeSettings
	f	Z	g	open
	f	Z	h	filtering
	f	Lazd$a;	a	DEFAULT
	f	Lcom/mojang/serialization/MapCodec;	b	CRAFTING_MAP_CODEC
	f	Lcom/mojang/serialization/MapCodec;	c	FURNACE_MAP_CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	BLAST_FURNACE_MAP_CODEC
	f	Lcom/mojang/serialization/MapCodec;	e	SMOKER_MAP_CODEC
	f	Lzm;	f	STREAM_CODEC
	m	(ZZ)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Z)Lazd$a;	a	setOpen
	m	(Z)Lazd$a;	b	setFiltering
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	open
	m	()Z	b	filtering
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	aze	net/minecraft/stats/ServerRecipeBook
	f	Ljava/lang/String;	b	RECIPE_BOOK_TAG
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Laze$a;	f	displayResolver
	f	Ljava/util/Set;	c	known
	f	Ljava/util/Set;	d	highlight
	m	(Laze$a;)V	<init>	<init>
	m	(Lamd;)V	a	add
	m	(Lamd;)Z	b	contains
	m	(Lamd;)V	c	remove
	m	(Lamd;)V	d	removeHighlight
	m	(Lamd;)V	e	addHighlight
	m	(Ljava/util/Collection;Lauc;)I	a	addRecipes
	m	(Ljava/util/Collection;Lauc;)I	b	removeRecipes
	m	(Ljava/util/List;Ljava/util/function/Consumer;Ljava/util/function/Predicate;)V	a	loadRecipes
	m	(Lauc;)V	a	sendInitialRecipeBook
	m	(Laze;)V	a	copyOverData
	m	()Laze$b;	b	pack
	m	(Laze$b;)V	a	apply
	m	(Laze$b;Ljava/util/function/Predicate;)V	a	loadUntrusted
	m	(Ljava/util/List;Lamd;Ldit;)V	a	lambda$sendInitialRecipeBook$2
	m	(Ljava/util/List;Ldit;)V	a	lambda$removeRecipes$1
	m	(Ljava/util/List;Ldhr;Ldit;)V	a	lambda$addRecipes$0
	m	()V	<clinit>	<clinit>
c	aze$a	net/minecraft/stats/ServerRecipeBook$DisplayResolver
	m	(Lamd;Ljava/util/function/Consumer;)V	displaysForRecipe	displaysForRecipe
c	aze$b	net/minecraft/stats/ServerRecipeBook$Packed
	f	Lazd;	b	settings
	f	Ljava/util/List;	c	known
	f	Ljava/util/List;	d	highlight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lazd;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lazd;	a	settings
	m	()Ljava/util/List;	b	known
	m	()Ljava/util/List;	c	highlight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	azf	net/minecraft/stats/ServerStatsCounter
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/Codec;	c	STATS_CODEC
	f	Lnet/minecraft/server/MinecraftServer;	d	server
	f	Ljava/io/File;	e	file
	f	Ljava/util/Set;	f	dirty
	m	(Lazi;)Lcom/mojang/serialization/Codec;	a	createTypedStatsCodec
	m	(Lnet/minecraft/server/MinecraftServer;Ljava/io/File;)V	<init>	<init>
	m	()V	a	save
	m	(Lcut;Lazg;I)V	a	setValue
	m	()Ljava/util/Set;	d	getDirty
	m	(Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V	a	parseLocal
	m	()Ljava/lang/String;	b	toJson
	m	()V	c	markAllDirty
	m	(Lauc;)V	a	sendStats
	m	(Ljava/lang/String;)V	a	lambda$parseLocal$6
	m	(Lazi;Lazg;)Lcom/mojang/serialization/DataResult;	a	lambda$createTypedStatsCodec$5
	m	(Lazi;Lazg;)Ljava/lang/String;	b	lambda$createTypedStatsCodec$4
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$static$3
	m	(Ljava/util/Map$Entry;)Lazi;	a	lambda$static$2
	m	(Ljava/util/Map;)Ljava/util/Map;	b	lambda$static$1
	m	(Ljava/util/Map;Lazi;Ljava/util/Map;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	azg	net/minecraft/stats/Stat
	f	Lzm;	a	STREAM_CODEC
	f	Lazh;	p	formatter
	f	Ljava/lang/Object;	q	value
	f	Lazi;	r	type
	m	(Lazi;Ljava/lang/Object;Lazh;)V	<init>	<init>
	m	(Lazi;Ljava/lang/Object;)Ljava/lang/String;	a	buildName
	m	(Lame;)Ljava/lang/String;	a	locationToKey
	m	()Lazi;	a	getType
	m	()Ljava/lang/Object;	b	getValue
	m	(I)Ljava/lang/String;	a	format
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	azh	net/minecraft/stats/StatFormatter
	f	Ljava/text/DecimalFormat;	a	DECIMAL_FORMAT
	f	Lazh;	b	DEFAULT
	f	Lazh;	c	DIVIDE_BY_TEN
	f	Lazh;	d	DISTANCE
	f	Lazh;	e	TIME
	m	(I)Ljava/lang/String;	format	format
	m	(I)Ljava/lang/String;	a	lambda$static$3
	m	(I)Ljava/lang/String;	b	lambda$static$2
	m	(I)Ljava/lang/String;	c	lambda$static$1
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	azi	net/minecraft/stats/StatType
	f	Ljy;	a	registry
	f	Ljava/util/Map;	b	map
	f	Lxo;	c	displayName
	f	Lzm;	d	streamCodec
	m	(Ljy;Lxo;)V	<init>	<init>
	m	()Lzm;	a	streamCodec
	m	(Ljava/lang/Object;)Z	a	contains
	m	(Ljava/lang/Object;Lazh;)Lazg;	a	get
	m	()Ljy;	b	getRegistry
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Ljava/lang/Object;)Lazg;	b	get
	m	()Lxo;	c	getDisplayName
	m	(Lazh;Ljava/lang/Object;)Lazg;	a	lambda$get$0
c	azj	net/minecraft/stats/Stats
	f	Lazi;	a	BLOCK_MINED
	f	Lazi;	b	ITEM_CRAFTED
	f	Lazi;	c	ITEM_USED
	f	Lazi;	d	ITEM_BROKEN
	f	Lazi;	e	ITEM_PICKED_UP
	f	Lazi;	f	ITEM_DROPPED
	f	Lazi;	g	ENTITY_KILLED
	f	Lazi;	h	ENTITY_KILLED_BY
	f	Lazi;	i	CUSTOM
	f	Lame;	j	LEAVE_GAME
	f	Lame;	k	PLAY_TIME
	f	Lame;	l	TOTAL_WORLD_TIME
	f	Lame;	m	TIME_SINCE_DEATH
	f	Lame;	n	TIME_SINCE_REST
	f	Lame;	o	CROUCH_TIME
	f	Lame;	p	WALK_ONE_CM
	f	Lame;	q	CROUCH_ONE_CM
	f	Lame;	r	SPRINT_ONE_CM
	f	Lame;	s	WALK_ON_WATER_ONE_CM
	f	Lame;	t	FALL_ONE_CM
	f	Lame;	u	CLIMB_ONE_CM
	f	Lame;	v	FLY_ONE_CM
	f	Lame;	w	WALK_UNDER_WATER_ONE_CM
	f	Lame;	x	MINECART_ONE_CM
	f	Lame;	y	BOAT_ONE_CM
	f	Lame;	z	PIG_ONE_CM
	f	Lame;	A	HAPPY_GHAST_ONE_CM
	f	Lame;	B	HORSE_ONE_CM
	f	Lame;	C	AVIATE_ONE_CM
	f	Lame;	D	SWIM_ONE_CM
	f	Lame;	E	STRIDER_ONE_CM
	f	Lame;	F	JUMP
	f	Lame;	G	DROP
	f	Lame;	H	DAMAGE_DEALT
	f	Lame;	I	DAMAGE_DEALT_ABSORBED
	f	Lame;	J	DAMAGE_DEALT_RESISTED
	f	Lame;	K	DAMAGE_TAKEN
	f	Lame;	L	DAMAGE_BLOCKED_BY_SHIELD
	f	Lame;	M	DAMAGE_ABSORBED
	f	Lame;	N	DAMAGE_RESISTED
	f	Lame;	O	DEATHS
	f	Lame;	P	MOB_KILLS
	f	Lame;	Q	ANIMALS_BRED
	f	Lame;	R	PLAYER_KILLS
	f	Lame;	S	FISH_CAUGHT
	f	Lame;	T	TALKED_TO_VILLAGER
	f	Lame;	U	TRADED_WITH_VILLAGER
	f	Lame;	V	EAT_CAKE_SLICE
	f	Lame;	W	FILL_CAULDRON
	f	Lame;	X	USE_CAULDRON
	f	Lame;	Y	CLEAN_ARMOR
	f	Lame;	Z	CLEAN_BANNER
	f	Lame;	aa	CLEAN_SHULKER_BOX
	f	Lame;	ab	INTERACT_WITH_BREWINGSTAND
	f	Lame;	ac	INTERACT_WITH_BEACON
	f	Lame;	ad	INSPECT_DROPPER
	f	Lame;	ae	INSPECT_HOPPER
	f	Lame;	af	INSPECT_DISPENSER
	f	Lame;	ag	PLAY_NOTEBLOCK
	f	Lame;	ah	TUNE_NOTEBLOCK
	f	Lame;	ai	POT_FLOWER
	f	Lame;	aj	TRIGGER_TRAPPED_CHEST
	f	Lame;	ak	OPEN_ENDERCHEST
	f	Lame;	al	ENCHANT_ITEM
	f	Lame;	am	PLAY_RECORD
	f	Lame;	an	INTERACT_WITH_FURNACE
	f	Lame;	ao	INTERACT_WITH_CRAFTING_TABLE
	f	Lame;	ap	OPEN_CHEST
	f	Lame;	aq	SLEEP_IN_BED
	f	Lame;	ar	OPEN_SHULKER_BOX
	f	Lame;	as	OPEN_BARREL
	f	Lame;	at	INTERACT_WITH_BLAST_FURNACE
	f	Lame;	au	INTERACT_WITH_SMOKER
	f	Lame;	av	INTERACT_WITH_LECTERN
	f	Lame;	aw	INTERACT_WITH_CAMPFIRE
	f	Lame;	ax	INTERACT_WITH_CARTOGRAPHY_TABLE
	f	Lame;	ay	INTERACT_WITH_LOOM
	f	Lame;	az	INTERACT_WITH_STONECUTTER
	f	Lame;	aA	BELL_RING
	f	Lame;	aB	RAID_TRIGGER
	f	Lame;	aC	RAID_WIN
	f	Lame;	aD	INTERACT_WITH_ANVIL
	f	Lame;	aE	INTERACT_WITH_GRINDSTONE
	f	Lame;	aF	TARGET_HIT
	f	Lame;	aG	INTERACT_WITH_SMITHING_TABLE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lazh;)Lame;	a	makeCustomStat
	m	(Ljava/lang/String;Ljy;)Lazi;	a	makeRegistryStatType
	m	()V	<clinit>	<clinit>
c	azk	net/minecraft/stats/StatsCounter
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	stats
	m	()V	<init>	<init>
	m	(Lcut;Lazg;I)V	b	increment
	m	(Lcut;Lazg;I)V	a	setValue
	m	(Lazi;Ljava/lang/Object;)I	a	getValue
	m	(Lazg;)I	a	getValue
c	azl	net/minecraft/stats/package-info
c	azm	net/minecraft/tags/BannerPatternTags
	f	Lbae;	a	NO_ITEM_REQUIRED
	f	Lbae;	b	PATTERN_ITEM_FLOWER
	f	Lbae;	c	PATTERN_ITEM_CREEPER
	f	Lbae;	d	PATTERN_ITEM_SKULL
	f	Lbae;	e	PATTERN_ITEM_MOJANG
	f	Lbae;	f	PATTERN_ITEM_GLOBE
	f	Lbae;	g	PATTERN_ITEM_PIGLIN
	f	Lbae;	h	PATTERN_ITEM_FLOW
	f	Lbae;	i	PATTERN_ITEM_GUSTER
	f	Lbae;	j	PATTERN_ITEM_FIELD_MASONED
	f	Lbae;	k	PATTERN_ITEM_BORDURE_INDENTED
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azn	net/minecraft/tags/BiomeTags
	f	Lbae;	a	IS_DEEP_OCEAN
	f	Lbae;	b	IS_OCEAN
	f	Lbae;	c	IS_BEACH
	f	Lbae;	d	IS_RIVER
	f	Lbae;	e	IS_MOUNTAIN
	f	Lbae;	f	IS_BADLANDS
	f	Lbae;	g	IS_HILL
	f	Lbae;	h	IS_TAIGA
	f	Lbae;	i	IS_JUNGLE
	f	Lbae;	j	IS_FOREST
	f	Lbae;	k	IS_SAVANNA
	f	Lbae;	l	IS_OVERWORLD
	f	Lbae;	m	IS_NETHER
	f	Lbae;	n	IS_END
	f	Lbae;	o	STRONGHOLD_BIASED_TO
	f	Lbae;	p	HAS_BURIED_TREASURE
	f	Lbae;	q	HAS_DESERT_PYRAMID
	f	Lbae;	r	HAS_IGLOO
	f	Lbae;	s	HAS_JUNGLE_TEMPLE
	f	Lbae;	t	HAS_MINESHAFT
	f	Lbae;	u	HAS_MINESHAFT_MESA
	f	Lbae;	v	HAS_OCEAN_MONUMENT
	f	Lbae;	w	HAS_OCEAN_RUIN_COLD
	f	Lbae;	x	HAS_OCEAN_RUIN_WARM
	f	Lbae;	y	HAS_PILLAGER_OUTPOST
	f	Lbae;	z	HAS_RUINED_PORTAL_DESERT
	f	Lbae;	A	HAS_RUINED_PORTAL_JUNGLE
	f	Lbae;	B	HAS_RUINED_PORTAL_OCEAN
	f	Lbae;	C	HAS_RUINED_PORTAL_SWAMP
	f	Lbae;	D	HAS_RUINED_PORTAL_MOUNTAIN
	f	Lbae;	E	HAS_RUINED_PORTAL_STANDARD
	f	Lbae;	F	HAS_SHIPWRECK_BEACHED
	f	Lbae;	G	HAS_SHIPWRECK
	f	Lbae;	H	HAS_STRONGHOLD
	f	Lbae;	I	HAS_TRIAL_CHAMBERS
	f	Lbae;	J	HAS_SWAMP_HUT
	f	Lbae;	K	HAS_VILLAGE_DESERT
	f	Lbae;	L	HAS_VILLAGE_PLAINS
	f	Lbae;	M	HAS_VILLAGE_SAVANNA
	f	Lbae;	N	HAS_VILLAGE_SNOWY
	f	Lbae;	O	HAS_VILLAGE_TAIGA
	f	Lbae;	P	HAS_TRAIL_RUINS
	f	Lbae;	Q	HAS_WOODLAND_MANSION
	f	Lbae;	R	HAS_NETHER_FORTRESS
	f	Lbae;	S	HAS_NETHER_FOSSIL
	f	Lbae;	T	HAS_BASTION_REMNANT
	f	Lbae;	U	HAS_ANCIENT_CITY
	f	Lbae;	V	HAS_RUINED_PORTAL_NETHER
	f	Lbae;	W	HAS_END_CITY
	f	Lbae;	X	REQUIRED_OCEAN_MONUMENT_SURROUNDING
	f	Lbae;	Y	MINESHAFT_BLOCKING
	f	Lbae;	Z	PLAYS_UNDERWATER_MUSIC
	f	Lbae;	aa	HAS_CLOSER_WATER_FOG
	f	Lbae;	ab	WATER_ON_MAP_OUTLINES
	f	Lbae;	ac	PRODUCES_CORALS_FROM_BONEMEAL
	f	Lbae;	ad	INCREASED_FIRE_BURNOUT
	f	Lbae;	ae	SNOW_GOLEM_MELTS
	f	Lbae;	af	WITHOUT_ZOMBIE_SIEGES
	f	Lbae;	ag	WITHOUT_PATROL_SPAWNS
	f	Lbae;	ah	WITHOUT_WANDERING_TRADER_SPAWNS
	f	Lbae;	ai	SPAWNS_COLD_VARIANT_FROGS
	f	Lbae;	aj	SPAWNS_WARM_VARIANT_FROGS
	f	Lbae;	ak	SPAWNS_COLD_VARIANT_FARM_ANIMALS
	f	Lbae;	al	SPAWNS_WARM_VARIANT_FARM_ANIMALS
	f	Lbae;	am	SPAWNS_GOLD_RABBITS
	f	Lbae;	an	SPAWNS_WHITE_RABBITS
	f	Lbae;	ao	REDUCED_WATER_AMBIENT_SPAWNS
	f	Lbae;	ap	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT
	f	Lbae;	aq	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS
	f	Lbae;	ar	MORE_FREQUENT_DROWNED_SPAWNS
	f	Lbae;	as	ALLOWS_SURFACE_SLIME_SPAWNS
	f	Lbae;	at	SPAWNS_SNOW_FOXES
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azo	net/minecraft/tags/BlockTags
	f	Lbae;	a	WOOL
	f	Lbae;	b	PLANKS
	f	Lbae;	c	STONE_BRICKS
	f	Lbae;	d	WOODEN_BUTTONS
	f	Lbae;	e	STONE_BUTTONS
	f	Lbae;	f	BUTTONS
	f	Lbae;	g	WOOL_CARPETS
	f	Lbae;	h	WOODEN_DOORS
	f	Lbae;	i	WOODEN_STAIRS
	f	Lbae;	j	WOODEN_SLABS
	f	Lbae;	k	WOODEN_FENCES
	f	Lbae;	l	FENCE_GATES
	f	Lbae;	m	WOODEN_PRESSURE_PLATES
	f	Lbae;	n	DOORS
	f	Lbae;	o	SAPLINGS
	f	Lbae;	p	BAMBOO_BLOCKS
	f	Lbae;	q	OAK_LOGS
	f	Lbae;	r	DARK_OAK_LOGS
	f	Lbae;	s	PALE_OAK_LOGS
	f	Lbae;	t	BIRCH_LOGS
	f	Lbae;	u	ACACIA_LOGS
	f	Lbae;	v	SPRUCE_LOGS
	f	Lbae;	w	MANGROVE_LOGS
	f	Lbae;	x	JUNGLE_LOGS
	f	Lbae;	y	CHERRY_LOGS
	f	Lbae;	z	CRIMSON_STEMS
	f	Lbae;	A	WARPED_STEMS
	f	Lbae;	B	WART_BLOCKS
	f	Lbae;	C	LOGS_THAT_BURN
	f	Lbae;	D	LOGS
	f	Lbae;	E	SAND
	f	Lbae;	F	SMELTS_TO_GLASS
	f	Lbae;	G	SLABS
	f	Lbae;	H	WALLS
	f	Lbae;	I	STAIRS
	f	Lbae;	J	ANVIL
	f	Lbae;	K	RAILS
	f	Lbae;	L	LEAVES
	f	Lbae;	M	WOODEN_TRAPDOORS
	f	Lbae;	N	TRAPDOORS
	f	Lbae;	O	SMALL_FLOWERS
	f	Lbae;	P	FLOWERS
	f	Lbae;	Q	BEDS
	f	Lbae;	R	FENCES
	f	Lbae;	S	SOUL_FIRE_BASE_BLOCKS
	f	Lbae;	T	CANDLES
	f	Lbae;	U	DAMPENS_VIBRATIONS
	f	Lbae;	V	GOLD_ORES
	f	Lbae;	W	IRON_ORES
	f	Lbae;	X	DIAMOND_ORES
	f	Lbae;	Y	REDSTONE_ORES
	f	Lbae;	Z	LAPIS_ORES
	f	Lbae;	aa	COAL_ORES
	f	Lbae;	ab	EMERALD_ORES
	f	Lbae;	ac	COPPER_ORES
	f	Lbae;	ad	DIRT
	f	Lbae;	ae	TERRACOTTA
	f	Lbae;	af	COMPLETES_FIND_TREE_TUTORIAL
	f	Lbae;	ag	SHULKER_BOXES
	f	Lbae;	ah	CEILING_HANGING_SIGNS
	f	Lbae;	ai	STANDING_SIGNS
	f	Lbae;	aj	BEE_ATTRACTIVE
	f	Lbae;	ak	MOB_INTERACTABLE_DOORS
	f	Lbae;	al	PRESSURE_PLATES
	f	Lbae;	am	STONE_PRESSURE_PLATES
	f	Lbae;	an	OVERWORLD_NATURAL_LOGS
	f	Lbae;	ao	BANNERS
	f	Lbae;	ap	PIGLIN_REPELLENTS
	f	Lbae;	aq	BADLANDS_TERRACOTTA
	f	Lbae;	ar	CONCRETE_POWDER
	f	Lbae;	as	FLOWER_POTS
	f	Lbae;	at	ENDERMAN_HOLDABLE
	f	Lbae;	au	ICE
	f	Lbae;	av	VALID_SPAWN
	f	Lbae;	aw	IMPERMEABLE
	f	Lbae;	ax	UNDERWATER_BONEMEALS
	f	Lbae;	ay	CORAL_BLOCKS
	f	Lbae;	az	WALL_CORALS
	f	Lbae;	aA	CORAL_PLANTS
	f	Lbae;	aB	CORALS
	f	Lbae;	aC	BAMBOO_PLANTABLE_ON
	f	Lbae;	aD	WALL_SIGNS
	f	Lbae;	aE	SIGNS
	f	Lbae;	aF	WALL_HANGING_SIGNS
	f	Lbae;	aG	ALL_HANGING_SIGNS
	f	Lbae;	aH	ALL_SIGNS
	f	Lbae;	aI	DRAGON_IMMUNE
	f	Lbae;	aJ	DRAGON_TRANSPARENT
	f	Lbae;	aK	WITHER_IMMUNE
	f	Lbae;	aL	WITHER_SUMMON_BASE_BLOCKS
	f	Lbae;	aM	BEEHIVES
	f	Lbae;	aN	CROPS
	f	Lbae;	aO	BEE_GROWABLES
	f	Lbae;	aP	PORTALS
	f	Lbae;	aQ	FIRE
	f	Lbae;	aR	NYLIUM
	f	Lbae;	aS	BEACON_BASE_BLOCKS
	f	Lbae;	aT	SOUL_SPEED_BLOCKS
	f	Lbae;	aU	WALL_POST_OVERRIDE
	f	Lbae;	aV	CLIMBABLE
	f	Lbae;	aW	FALL_DAMAGE_RESETTING
	f	Lbae;	aX	HOGLIN_REPELLENTS
	f	Lbae;	aY	STRIDER_WARM_BLOCKS
	f	Lbae;	aZ	CAMPFIRES
	f	Lbae;	ba	GUARDED_BY_PIGLINS
	f	Lbae;	bb	PREVENT_MOB_SPAWNING_INSIDE
	f	Lbae;	bc	UNSTABLE_BOTTOM_CENTER
	f	Lbae;	bd	MUSHROOM_GROW_BLOCK
	f	Lbae;	be	EDIBLE_FOR_SHEEP
	f	Lbae;	bf	INFINIBURN_OVERWORLD
	f	Lbae;	bg	INFINIBURN_NETHER
	f	Lbae;	bh	INFINIBURN_END
	f	Lbae;	bi	BASE_STONE_OVERWORLD
	f	Lbae;	bj	STONE_ORE_REPLACEABLES
	f	Lbae;	bk	DEEPSLATE_ORE_REPLACEABLES
	f	Lbae;	bl	BASE_STONE_NETHER
	f	Lbae;	bm	OVERWORLD_CARVER_REPLACEABLES
	f	Lbae;	bn	NETHER_CARVER_REPLACEABLES
	f	Lbae;	bo	CANDLE_CAKES
	f	Lbae;	bp	CAULDRONS
	f	Lbae;	bq	CRYSTAL_SOUND_BLOCKS
	f	Lbae;	br	INSIDE_STEP_SOUND_BLOCKS
	f	Lbae;	bs	COMBINATION_STEP_SOUND_BLOCKS
	f	Lbae;	bt	CAMEL_SAND_STEP_SOUND_BLOCKS
	f	Lbae;	bu	HAPPY_GHAST_AVOIDS
	f	Lbae;	bv	OCCLUDES_VIBRATION_SIGNALS
	f	Lbae;	bw	DRIPSTONE_REPLACEABLE
	f	Lbae;	bx	CAVE_VINES
	f	Lbae;	by	MOSS_REPLACEABLE
	f	Lbae;	bz	LUSH_GROUND_REPLACEABLE
	f	Lbae;	bA	AZALEA_ROOT_REPLACEABLE
	f	Lbae;	bB	SMALL_DRIPLEAF_PLACEABLE
	f	Lbae;	bC	BIG_DRIPLEAF_PLACEABLE
	f	Lbae;	bD	SNOW
	f	Lbae;	bE	MINEABLE_WITH_AXE
	f	Lbae;	bF	MINEABLE_WITH_HOE
	f	Lbae;	bG	MINEABLE_WITH_PICKAXE
	f	Lbae;	bH	MINEABLE_WITH_SHOVEL
	f	Lbae;	bI	SWORD_EFFICIENT
	f	Lbae;	bJ	SWORD_INSTANTLY_MINES
	f	Lbae;	bK	NEEDS_DIAMOND_TOOL
	f	Lbae;	bL	NEEDS_IRON_TOOL
	f	Lbae;	bM	NEEDS_STONE_TOOL
	f	Lbae;	bN	INCORRECT_FOR_NETHERITE_TOOL
	f	Lbae;	bO	INCORRECT_FOR_DIAMOND_TOOL
	f	Lbae;	bP	INCORRECT_FOR_IRON_TOOL
	f	Lbae;	bQ	INCORRECT_FOR_STONE_TOOL
	f	Lbae;	bR	INCORRECT_FOR_GOLD_TOOL
	f	Lbae;	bS	INCORRECT_FOR_WOODEN_TOOL
	f	Lbae;	bT	FEATURES_CANNOT_REPLACE
	f	Lbae;	bU	LAVA_POOL_STONE_CANNOT_REPLACE
	f	Lbae;	bV	GEODE_INVALID_BLOCKS
	f	Lbae;	bW	FROG_PREFER_JUMP_TO
	f	Lbae;	bX	SCULK_REPLACEABLE
	f	Lbae;	bY	SCULK_REPLACEABLE_WORLD_GEN
	f	Lbae;	bZ	ANCIENT_CITY_REPLACEABLE
	f	Lbae;	ca	VIBRATION_RESONATORS
	f	Lbae;	cb	ANIMALS_SPAWNABLE_ON
	f	Lbae;	cc	ARMADILLO_SPAWNABLE_ON
	f	Lbae;	cd	AXOLOTLS_SPAWNABLE_ON
	f	Lbae;	ce	GOATS_SPAWNABLE_ON
	f	Lbae;	cf	MOOSHROOMS_SPAWNABLE_ON
	f	Lbae;	cg	PARROTS_SPAWNABLE_ON
	f	Lbae;	ch	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE
	f	Lbae;	ci	RABBITS_SPAWNABLE_ON
	f	Lbae;	cj	FOXES_SPAWNABLE_ON
	f	Lbae;	ck	WOLVES_SPAWNABLE_ON
	f	Lbae;	cl	FROGS_SPAWNABLE_ON
	f	Lbae;	cm	BATS_SPAWNABLE_ON
	f	Lbae;	cn	CAMELS_SPAWNABLE_ON
	f	Lbae;	co	AZALEA_GROWS_ON
	f	Lbae;	cp	CONVERTABLE_TO_MUD
	f	Lbae;	cq	MANGROVE_LOGS_CAN_GROW_THROUGH
	f	Lbae;	cr	MANGROVE_ROOTS_CAN_GROW_THROUGH
	f	Lbae;	cs	DRY_VEGETATION_MAY_PLACE_ON
	f	Lbae;	ct	SNAPS_GOAT_HORN
	f	Lbae;	cu	REPLACEABLE_BY_TREES
	f	Lbae;	cv	REPLACEABLE_BY_MUSHROOMS
	f	Lbae;	cw	SNOW_LAYER_CANNOT_SURVIVE_ON
	f	Lbae;	cx	SNOW_LAYER_CAN_SURVIVE_ON
	f	Lbae;	cy	INVALID_SPAWN_INSIDE
	f	Lbae;	cz	SNIFFER_DIGGABLE_BLOCK
	f	Lbae;	cA	SNIFFER_EGG_HATCH_BOOST
	f	Lbae;	cB	TRAIL_RUINS_REPLACEABLE
	f	Lbae;	cC	REPLACEABLE
	f	Lbae;	cD	ENCHANTMENT_POWER_PROVIDER
	f	Lbae;	cE	ENCHANTMENT_POWER_TRANSMITTER
	f	Lbae;	cF	MAINTAINS_FARMLAND
	f	Lbae;	cG	BLOCKS_WIND_CHARGE_EXPLOSIONS
	f	Lbae;	cH	DOES_NOT_BLOCK_HOPPERS
	f	Lbae;	cI	TRIGGERS_AMBIENT_DESERT_SAND_BLOCK_SOUNDS
	f	Lbae;	cJ	TRIGGERS_AMBIENT_DESERT_DRY_VEGETATION_BLOCK_SOUNDS
	f	Lbae;	cK	TRIGGERS_AMBIENT_DRIED_GHAST_BLOCK_SOUNDS
	f	Lbae;	cL	AIR
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azp	net/minecraft/tags/DamageTypeTags
	f	Lbae;	a	DAMAGES_HELMET
	f	Lbae;	b	BYPASSES_ARMOR
	f	Lbae;	c	BYPASSES_SHIELD
	f	Lbae;	d	BYPASSES_INVULNERABILITY
	f	Lbae;	e	BYPASSES_COOLDOWN
	f	Lbae;	f	BYPASSES_EFFECTS
	f	Lbae;	g	BYPASSES_RESISTANCE
	f	Lbae;	h	BYPASSES_ENCHANTMENTS
	f	Lbae;	i	IS_FIRE
	f	Lbae;	j	IS_PROJECTILE
	f	Lbae;	k	WITCH_RESISTANT_TO
	f	Lbae;	l	IS_EXPLOSION
	f	Lbae;	m	IS_FALL
	f	Lbae;	n	IS_DROWNING
	f	Lbae;	o	IS_FREEZING
	f	Lbae;	p	IS_LIGHTNING
	f	Lbae;	q	NO_ANGER
	f	Lbae;	r	NO_IMPACT
	f	Lbae;	s	ALWAYS_MOST_SIGNIFICANT_FALL
	f	Lbae;	t	WITHER_IMMUNE_TO
	f	Lbae;	u	IGNITES_ARMOR_STANDS
	f	Lbae;	v	BURNS_ARMOR_STANDS
	f	Lbae;	w	AVOIDS_GUARDIAN_THORNS
	f	Lbae;	x	ALWAYS_TRIGGERS_SILVERFISH
	f	Lbae;	y	ALWAYS_HURTS_ENDER_DRAGONS
	f	Lbae;	z	NO_KNOCKBACK
	f	Lbae;	A	ALWAYS_KILLS_ARMOR_STANDS
	f	Lbae;	B	CAN_BREAK_ARMOR_STAND
	f	Lbae;	C	BYPASSES_WOLF_ARMOR
	f	Lbae;	D	IS_PLAYER_ATTACK
	f	Lbae;	E	BURN_FROM_STEPPING
	f	Lbae;	F	PANIC_CAUSES
	f	Lbae;	G	PANIC_ENVIRONMENTAL_CAUSES
	f	Lbae;	H	IS_MACE_SMASH
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azq	net/minecraft/tags/DialogTags
	f	Lbae;	a	PAUSE_SCREEN_ADDITIONS
	f	Lbae;	b	QUICK_ACTIONS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azr	net/minecraft/tags/EnchantmentTags
	f	Lbae;	a	TOOLTIP_ORDER
	f	Lbae;	b	ARMOR_EXCLUSIVE
	f	Lbae;	c	BOOTS_EXCLUSIVE
	f	Lbae;	d	BOW_EXCLUSIVE
	f	Lbae;	e	CROSSBOW_EXCLUSIVE
	f	Lbae;	f	DAMAGE_EXCLUSIVE
	f	Lbae;	g	MINING_EXCLUSIVE
	f	Lbae;	h	RIPTIDE_EXCLUSIVE
	f	Lbae;	i	TRADEABLE
	f	Lbae;	j	DOUBLE_TRADE_PRICE
	f	Lbae;	k	IN_ENCHANTING_TABLE
	f	Lbae;	l	ON_MOB_SPAWN_EQUIPMENT
	f	Lbae;	m	ON_TRADED_EQUIPMENT
	f	Lbae;	n	ON_RANDOM_LOOT
	f	Lbae;	o	CURSE
	f	Lbae;	p	SMELTS_LOOT
	f	Lbae;	q	PREVENTS_BEE_SPAWNS_WHEN_MINING
	f	Lbae;	r	PREVENTS_DECORATED_POT_SHATTERING
	f	Lbae;	s	PREVENTS_ICE_MELTING
	f	Lbae;	t	PREVENTS_INFESTED_SPAWNS
	f	Lbae;	u	TREASURE
	f	Lbae;	v	NON_TREASURE
	f	Lbae;	w	TRADES_DESERT_COMMON
	f	Lbae;	x	TRADES_JUNGLE_COMMON
	f	Lbae;	y	TRADES_PLAINS_COMMON
	f	Lbae;	z	TRADES_SAVANNA_COMMON
	f	Lbae;	A	TRADES_SNOW_COMMON
	f	Lbae;	B	TRADES_SWAMP_COMMON
	f	Lbae;	C	TRADES_TAIGA_COMMON
	f	Lbae;	D	TRADES_DESERT_SPECIAL
	f	Lbae;	E	TRADES_JUNGLE_SPECIAL
	f	Lbae;	F	TRADES_PLAINS_SPECIAL
	f	Lbae;	G	TRADES_SAVANNA_SPECIAL
	f	Lbae;	H	TRADES_SNOW_SPECIAL
	f	Lbae;	I	TRADES_SWAMP_SPECIAL
	f	Lbae;	J	TRADES_TAIGA_SPECIAL
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azs	net/minecraft/tags/EntityTypeTags
	f	Lbae;	a	SKELETONS
	f	Lbae;	b	ZOMBIES
	f	Lbae;	c	RAIDERS
	f	Lbae;	d	UNDEAD
	f	Lbae;	e	BEEHIVE_INHABITORS
	f	Lbae;	f	ARROWS
	f	Lbae;	g	IMPACT_PROJECTILES
	f	Lbae;	h	POWDER_SNOW_WALKABLE_MOBS
	f	Lbae;	i	AXOLOTL_ALWAYS_HOSTILES
	f	Lbae;	j	AXOLOTL_HUNT_TARGETS
	f	Lbae;	k	FREEZE_IMMUNE_ENTITY_TYPES
	f	Lbae;	l	FREEZE_HURTS_EXTRA_TYPES
	f	Lbae;	m	CAN_BREATHE_UNDER_WATER
	f	Lbae;	n	FROG_FOOD
	f	Lbae;	o	FALL_DAMAGE_IMMUNE
	f	Lbae;	p	DISMOUNTS_UNDERWATER
	f	Lbae;	q	NON_CONTROLLING_RIDER
	f	Lbae;	r	DEFLECTS_PROJECTILES
	f	Lbae;	s	CAN_TURN_IN_BOATS
	f	Lbae;	t	ILLAGER
	f	Lbae;	u	AQUATIC
	f	Lbae;	v	ARTHROPOD
	f	Lbae;	w	IGNORES_POISON_AND_REGEN
	f	Lbae;	x	INVERTED_HEALING_AND_HARM
	f	Lbae;	y	WITHER_FRIENDS
	f	Lbae;	z	ILLAGER_FRIENDS
	f	Lbae;	A	NOT_SCARY_FOR_PUFFERFISH
	f	Lbae;	B	SENSITIVE_TO_IMPALING
	f	Lbae;	C	SENSITIVE_TO_BANE_OF_ARTHROPODS
	f	Lbae;	D	SENSITIVE_TO_SMITE
	f	Lbae;	E	NO_ANGER_FROM_WIND_CHARGE
	f	Lbae;	F	IMMUNE_TO_OOZING
	f	Lbae;	G	IMMUNE_TO_INFESTED
	f	Lbae;	H	REDIRECTABLE_PROJECTILE
	f	Lbae;	I	BOAT
	f	Lbae;	J	CAN_EQUIP_SADDLE
	f	Lbae;	K	CAN_EQUIP_HARNESS
	f	Lbae;	L	CAN_WEAR_HORSE_ARMOR
	f	Lbae;	M	FOLLOWABLE_FRIENDLY_MOBS
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azt	net/minecraft/tags/FlatLevelGeneratorPresetTags
	f	Lbae;	a	VISIBLE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azu	net/minecraft/tags/FluidTags
	f	Lbae;	a	WATER
	f	Lbae;	b	LAVA
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azv	net/minecraft/tags/GameEventTags
	f	Lbae;	a	VIBRATIONS
	f	Lbae;	b	WARDEN_CAN_LISTEN
	f	Lbae;	c	SHRIEKER_CAN_LISTEN
	f	Lbae;	d	IGNORE_VIBRATIONS_SNEAKING
	f	Lbae;	e	ALLAY_CAN_LISTEN
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azw	net/minecraft/tags/InstrumentTags
	f	Lbae;	a	REGULAR_GOAT_HORNS
	f	Lbae;	b	SCREAMING_GOAT_HORNS
	f	Lbae;	c	GOAT_HORNS
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azx	net/minecraft/tags/ItemTags
	f	Lbae;	a	WOOL
	f	Lbae;	b	PLANKS
	f	Lbae;	c	STONE_BRICKS
	f	Lbae;	d	WOODEN_BUTTONS
	f	Lbae;	e	STONE_BUTTONS
	f	Lbae;	f	BUTTONS
	f	Lbae;	g	WOOL_CARPETS
	f	Lbae;	h	WOODEN_DOORS
	f	Lbae;	i	WOODEN_STAIRS
	f	Lbae;	j	WOODEN_SLABS
	f	Lbae;	k	WOODEN_FENCES
	f	Lbae;	l	FENCE_GATES
	f	Lbae;	m	WOODEN_PRESSURE_PLATES
	f	Lbae;	n	DOORS
	f	Lbae;	o	SAPLINGS
	f	Lbae;	p	BAMBOO_BLOCKS
	f	Lbae;	q	OAK_LOGS
	f	Lbae;	r	DARK_OAK_LOGS
	f	Lbae;	s	PALE_OAK_LOGS
	f	Lbae;	t	BIRCH_LOGS
	f	Lbae;	u	ACACIA_LOGS
	f	Lbae;	v	SPRUCE_LOGS
	f	Lbae;	w	MANGROVE_LOGS
	f	Lbae;	x	JUNGLE_LOGS
	f	Lbae;	y	CHERRY_LOGS
	f	Lbae;	z	CRIMSON_STEMS
	f	Lbae;	A	WARPED_STEMS
	f	Lbae;	B	WART_BLOCKS
	f	Lbae;	C	LOGS_THAT_BURN
	f	Lbae;	D	LOGS
	f	Lbae;	E	SAND
	f	Lbae;	F	SMELTS_TO_GLASS
	f	Lbae;	G	SLABS
	f	Lbae;	H	WALLS
	f	Lbae;	I	STAIRS
	f	Lbae;	J	ANVIL
	f	Lbae;	K	RAILS
	f	Lbae;	L	LEAVES
	f	Lbae;	M	WOODEN_TRAPDOORS
	f	Lbae;	N	TRAPDOORS
	f	Lbae;	O	SMALL_FLOWERS
	f	Lbae;	P	FLOWERS
	f	Lbae;	Q	BEDS
	f	Lbae;	R	FENCES
	f	Lbae;	S	SOUL_FIRE_BASE_BLOCKS
	f	Lbae;	T	CANDLES
	f	Lbae;	U	DAMPENS_VIBRATIONS
	f	Lbae;	V	GOLD_ORES
	f	Lbae;	W	IRON_ORES
	f	Lbae;	X	DIAMOND_ORES
	f	Lbae;	Y	REDSTONE_ORES
	f	Lbae;	Z	LAPIS_ORES
	f	Lbae;	aa	COAL_ORES
	f	Lbae;	ab	EMERALD_ORES
	f	Lbae;	ac	COPPER_ORES
	f	Lbae;	ad	DIRT
	f	Lbae;	ae	TERRACOTTA
	f	Lbae;	af	COMPLETES_FIND_TREE_TUTORIAL
	f	Lbae;	ag	SHULKER_BOXES
	f	Lbae;	ah	SIGNS
	f	Lbae;	ai	HANGING_SIGNS
	f	Lbae;	aj	BEE_FOOD
	f	Lbae;	ak	BANNERS
	f	Lbae;	al	PIGLIN_REPELLENTS
	f	Lbae;	am	PIGLIN_LOVED
	f	Lbae;	an	IGNORED_BY_PIGLIN_BABIES
	f	Lbae;	ao	PIGLIN_SAFE_ARMOR
	f	Lbae;	ap	DUPLICATES_ALLAYS
	f	Lbae;	aq	BREWING_FUEL
	f	Lbae;	ar	EGGS
	f	Lbae;	as	MEAT
	f	Lbae;	at	SNIFFER_FOOD
	f	Lbae;	au	PIGLIN_FOOD
	f	Lbae;	av	FOX_FOOD
	f	Lbae;	aw	COW_FOOD
	f	Lbae;	ax	GOAT_FOOD
	f	Lbae;	ay	SHEEP_FOOD
	f	Lbae;	az	WOLF_FOOD
	f	Lbae;	aA	CAT_FOOD
	f	Lbae;	aB	HORSE_FOOD
	f	Lbae;	aC	HORSE_TEMPT_ITEMS
	f	Lbae;	aD	HARNESSES
	f	Lbae;	aE	HAPPY_GHAST_FOOD
	f	Lbae;	aF	HAPPY_GHAST_TEMPT_ITEMS
	f	Lbae;	aG	CAMEL_FOOD
	f	Lbae;	aH	ARMADILLO_FOOD
	f	Lbae;	aI	CHICKEN_FOOD
	f	Lbae;	aJ	FROG_FOOD
	f	Lbae;	aK	HOGLIN_FOOD
	f	Lbae;	aL	LLAMA_FOOD
	f	Lbae;	aM	LLAMA_TEMPT_ITEMS
	f	Lbae;	aN	OCELOT_FOOD
	f	Lbae;	aO	PANDA_FOOD
	f	Lbae;	aP	PANDA_EATS_FROM_GROUND
	f	Lbae;	aQ	PIG_FOOD
	f	Lbae;	aR	RABBIT_FOOD
	f	Lbae;	aS	STRIDER_FOOD
	f	Lbae;	aT	STRIDER_TEMPT_ITEMS
	f	Lbae;	aU	TURTLE_FOOD
	f	Lbae;	aV	PARROT_FOOD
	f	Lbae;	aW	PARROT_POISONOUS_FOOD
	f	Lbae;	aX	AXOLOTL_FOOD
	f	Lbae;	aY	NON_FLAMMABLE_WOOD
	f	Lbae;	aZ	BOATS
	f	Lbae;	ba	CHEST_BOATS
	f	Lbae;	bb	FISHES
	f	Lbae;	bc	CREEPER_DROP_MUSIC_DISCS
	f	Lbae;	bd	COALS
	f	Lbae;	be	ARROWS
	f	Lbae;	bf	LECTERN_BOOKS
	f	Lbae;	bg	BOOKSHELF_BOOKS
	f	Lbae;	bh	BEACON_PAYMENT_ITEMS
	f	Lbae;	bi	WOODEN_TOOL_MATERIALS
	f	Lbae;	bj	STONE_TOOL_MATERIALS
	f	Lbae;	bk	IRON_TOOL_MATERIALS
	f	Lbae;	bl	GOLD_TOOL_MATERIALS
	f	Lbae;	bm	DIAMOND_TOOL_MATERIALS
	f	Lbae;	bn	NETHERITE_TOOL_MATERIALS
	f	Lbae;	bo	REPAIRS_LEATHER_ARMOR
	f	Lbae;	bp	REPAIRS_CHAIN_ARMOR
	f	Lbae;	bq	REPAIRS_IRON_ARMOR
	f	Lbae;	br	REPAIRS_GOLD_ARMOR
	f	Lbae;	bs	REPAIRS_DIAMOND_ARMOR
	f	Lbae;	bt	REPAIRS_NETHERITE_ARMOR
	f	Lbae;	bu	REPAIRS_TURTLE_HELMET
	f	Lbae;	bv	REPAIRS_WOLF_ARMOR
	f	Lbae;	bw	STONE_CRAFTING_MATERIALS
	f	Lbae;	bx	FREEZE_IMMUNE_WEARABLES
	f	Lbae;	by	CLUSTER_MAX_HARVESTABLES
	f	Lbae;	bz	COMPASSES
	f	Lbae;	bA	CREEPER_IGNITERS
	f	Lbae;	bB	NOTE_BLOCK_TOP_INSTRUMENTS
	f	Lbae;	bC	FOOT_ARMOR
	f	Lbae;	bD	LEG_ARMOR
	f	Lbae;	bE	CHEST_ARMOR
	f	Lbae;	bF	HEAD_ARMOR
	f	Lbae;	bG	SKULLS
	f	Lbae;	bH	TRIMMABLE_ARMOR
	f	Lbae;	bI	TRIM_MATERIALS
	f	Lbae;	bJ	DECORATED_POT_SHERDS
	f	Lbae;	bK	DECORATED_POT_INGREDIENTS
	f	Lbae;	bL	SWORDS
	f	Lbae;	bM	AXES
	f	Lbae;	bN	HOES
	f	Lbae;	bO	PICKAXES
	f	Lbae;	bP	SHOVELS
	f	Lbae;	bQ	BREAKS_DECORATED_POTS
	f	Lbae;	bR	VILLAGER_PLANTABLE_SEEDS
	f	Lbae;	bS	VILLAGER_PICKS_UP
	f	Lbae;	bT	DYEABLE
	f	Lbae;	bU	FURNACE_MINECART_FUEL
	f	Lbae;	bV	BUNDLES
	f	Lbae;	bW	BOOK_CLONING_TARGET
	f	Lbae;	bX	SKELETON_PREFERRED_WEAPONS
	f	Lbae;	bY	DROWNED_PREFERRED_WEAPONS
	f	Lbae;	bZ	PIGLIN_PREFERRED_WEAPONS
	f	Lbae;	ca	PILLAGER_PREFERRED_WEAPONS
	f	Lbae;	cb	WITHER_SKELETON_DISLIKED_WEAPONS
	f	Lbae;	cc	FOOT_ARMOR_ENCHANTABLE
	f	Lbae;	cd	LEG_ARMOR_ENCHANTABLE
	f	Lbae;	ce	CHEST_ARMOR_ENCHANTABLE
	f	Lbae;	cf	HEAD_ARMOR_ENCHANTABLE
	f	Lbae;	cg	ARMOR_ENCHANTABLE
	f	Lbae;	ch	SWORD_ENCHANTABLE
	f	Lbae;	ci	FIRE_ASPECT_ENCHANTABLE
	f	Lbae;	cj	SHARP_WEAPON_ENCHANTABLE
	f	Lbae;	ck	WEAPON_ENCHANTABLE
	f	Lbae;	cl	MINING_ENCHANTABLE
	f	Lbae;	cm	MINING_LOOT_ENCHANTABLE
	f	Lbae;	cn	FISHING_ENCHANTABLE
	f	Lbae;	co	TRIDENT_ENCHANTABLE
	f	Lbae;	cp	DURABILITY_ENCHANTABLE
	f	Lbae;	cq	BOW_ENCHANTABLE
	f	Lbae;	cr	EQUIPPABLE_ENCHANTABLE
	f	Lbae;	cs	CROSSBOW_ENCHANTABLE
	f	Lbae;	ct	VANISHING_ENCHANTABLE
	f	Lbae;	cu	MACE_ENCHANTABLE
	f	Lbae;	cv	MAP_INVISIBILITY_EQUIPMENT
	f	Lbae;	cw	GAZE_DISGUISE_EQUIPMENT
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	bind
	m	()V	<clinit>	<clinit>
c	azy	net/minecraft/tags/PaintingVariantTags
	f	Lbae;	a	PLACEABLE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	azz	net/minecraft/tags/PoiTypeTags
	f	Lbae;	a	ACQUIRABLE_JOB_SITE
	f	Lbae;	b	VILLAGE
	f	Lbae;	c	BEE_HOME
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	baa	net/minecraft/tags/StructureTags
	f	Lbae;	a	EYE_OF_ENDER_LOCATED
	f	Lbae;	b	DOLPHIN_LOCATED
	f	Lbae;	c	ON_WOODLAND_EXPLORER_MAPS
	f	Lbae;	d	ON_OCEAN_EXPLORER_MAPS
	f	Lbae;	e	ON_SAVANNA_VILLAGE_MAPS
	f	Lbae;	f	ON_DESERT_VILLAGE_MAPS
	f	Lbae;	g	ON_PLAINS_VILLAGE_MAPS
	f	Lbae;	h	ON_TAIGA_VILLAGE_MAPS
	f	Lbae;	i	ON_SNOWY_VILLAGE_MAPS
	f	Lbae;	j	ON_JUNGLE_EXPLORER_MAPS
	f	Lbae;	k	ON_SWAMP_EXPLORER_MAPS
	f	Lbae;	l	ON_TREASURE_MAPS
	f	Lbae;	m	ON_TRIAL_CHAMBERS_MAPS
	f	Lbae;	n	CATS_SPAWN_IN
	f	Lbae;	o	CATS_SPAWN_AS_BLACK
	f	Lbae;	p	VILLAGE
	f	Lbae;	q	MINESHAFT
	f	Lbae;	r	SHIPWRECK
	f	Lbae;	s	RUINED_PORTAL
	f	Lbae;	t	OCEAN_RUIN
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	bab	net/minecraft/tags/TagBuilder
	f	Ljava/util/List;	a	entries
	m	()V	<init>	<init>
	m	()Lbab;	a	create
	m	()Ljava/util/List;	b	build
	m	(Lbac;)Lbab;	a	add
	m	(Lame;)Lbab;	a	addElement
	m	(Lame;)Lbab;	b	addOptionalElement
	m	(Lame;)Lbab;	c	addTag
	m	(Lame;)Lbab;	d	addOptionalTag
c	bac	net/minecraft/tags/TagEntry
	f	Lcom/mojang/serialization/Codec;	b	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lame;	c	id
	f	Z	d	tag
	f	Z	e	required
	m	(Lame;ZZ)V	<init>	<init>
	m	(Lbbi$d;Z)V	<init>	<init>
	m	()Lbbi$d;	a	elementOrTag
	m	(Lame;)Lbac;	a	element
	m	(Lame;)Lbac;	b	optionalElement
	m	(Lame;)Lbac;	c	tag
	m	(Lame;)Lbac;	d	optionalTag
	m	(Lbac$a;Ljava/util/function/Consumer;)Z	a	build
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z	a	verifyIfPresent
	m	()Ljava/lang/String;	toString	toString
	m	(Lbac;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$5
	m	(Lcom/mojang/datafixers/util/Either;)Lbac;	a	lambda$static$4
	m	(Lbac;)Lbac;	b	lambda$static$3
	m	(Lbbi$d;)Lbac;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lbac;)Ljava/lang/Boolean;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bac$a	net/minecraft/tags/TagEntry$Lookup
	m	(Lame;Z)Ljava/lang/Object;	a	element
	m	(Lame;)Ljava/util/Collection;	a	tag
c	bad	net/minecraft/tags/TagFile
	f	Ljava/util/List;	b	entries
	f	Z	c	replace
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	entries
	m	()Z	b	replace
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bae	net/minecraft/tags/TagKey
	f	Lamd;	a	registry
	f	Lame;	b	location
	f	Lcom/google/common/collect/Interner;	c	VALUES
	m	(Lamd;Lame;)V	<init>	<init>
	m	(Lamd;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lamd;)Lcom/mojang/serialization/Codec;	b	hashedCodec
	m	(Lamd;)Lzm;	c	streamCodec
	m	(Lamd;Lame;)Lbae;	a	create
	m	(Lamd;)Z	d	isFor
	m	(Lamd;)Ljava/util/Optional;	e	cast
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	registry
	m	()Lame;	b	location
	m	(Lamd;Lame;)Lbae;	b	lambda$streamCodec$5
	m	(Lbae;)Ljava/lang/String;	a	lambda$hashedCodec$4
	m	(Lamd;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$hashedCodec$3
	m	()Ljava/lang/String;	c	lambda$hashedCodec$2
	m	(Lamd;Lame;)Lbae;	c	lambda$hashedCodec$1
	m	(Lamd;Lame;)Lbae;	d	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	baf	net/minecraft/tags/TagLoader
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbaf$a;	b	elementLookup
	f	Ljava/lang/String;	c	directory
	m	(Lbaf$a;Ljava/lang/String;)V	<init>	<init>
	m	(Laxo;)Ljava/util/Map;	a	load
	m	(Lbac$a;Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	a	tryBuildTag
	m	(Ljava/util/Map;)Ljava/util/Map;	a	build
	m	(Lbag$a;Lkh;)V	a	loadTagsFromNetwork
	m	(Laxo;Ljz;)Ljava/util/List;	a	loadTagsForExistingRegistries
	m	(Laxo;Lkh;)V	a	loadTagsForRegistry
	m	(Lamd;Ljava/util/Map;)Ljava/util/Map;	a	wrapTags
	m	(Laxo;Ljy;)Ljava/util/Optional;	a	loadPendingTags
	m	(Ljz$b;Ljava/util/List;)Ljava/util/List;	a	buildUpdatedLookups
	m	(Ljava/util/List;Lamd;)Ljy$a;	a	findTagsForRegistry
	m	(Ljava/util/List;Ljava/util/List;Ljz$d;)V	a	lambda$buildUpdatedLookups$9
	m	(Lamd;Ljava/util/Map$Entry;)Lbae;	a	lambda$wrapTags$8
	m	(Lkh;Lamd;Lame;Ljava/util/List;)V	a	lambda$loadTagsForRegistry$7
	m	(Laxo;Ljz$d;)Ljava/util/Optional;	a	lambda$loadTagsForExistingRegistries$6
	m	(Lbac$a;Ljava/util/Map;Lame;Lbaf$d;)V	a	lambda$build$5
	m	(Ljava/util/Map;Lame;Ljava/util/List;)V	a	lambda$build$4
	m	(Lame;Ljava/util/List;)V	a	lambda$build$3
	m	(Lbbe;Lame;Ljava/util/List;)V	a	lambda$build$2
	m	(Ljava/util/List;Ljava/lang/String;Lbac;)V	a	lambda$load$1
	m	(Lame;)Ljava/util/List;	a	lambda$load$0
	m	()V	<clinit>	<clinit>
c	baf$1	net/minecraft/tags/TagLoader$1
	f	Ljava/util/Map;	a	val$newTags
	f	Lbaf;	b	this$0
	m	(Lbaf;Ljava/util/Map;)V	<init>	<init>
	m	(Lame;Z)Ljava/lang/Object;	a	element
	m	(Lame;)Ljava/util/Collection;	a	tag
c	baf$a	net/minecraft/tags/TagLoader$ElementLookup
	m	(Lame;Z)Ljava/util/Optional;	get	get
	m	(Ljy;)Lbaf$a;	a	fromFrozenRegistry
	m	(Lkh;)Lbaf$a;	a	fromWritableRegistry
	m	(Ljm;Lkh;Lame;Z)Ljava/util/Optional;	a	lambda$fromWritableRegistry$1
	m	(Ljy;Lame;Z)Ljava/util/Optional;	a	lambda$fromFrozenRegistry$0
c	baf$b	net/minecraft/tags/TagLoader$EntryWithSource
	f	Lbac;	a	entry
	f	Ljava/lang/String;	b	source
	m	(Lbac;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbac;	a	entry
	m	()Ljava/lang/String;	b	source
c	baf$c	net/minecraft/tags/TagLoader$LoadResult
	f	Lamd;	a	key
	f	Ljava/util/Map;	b	tags
	m	(Lamd;Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Ljava/util/Map;	b	tags
c	baf$d	net/minecraft/tags/TagLoader$SortingEntry
	f	Ljava/util/List;	a	entries
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	entries
	m	(Ljava/util/function/Consumer;Lbaf$b;)V	a	lambda$visitOptionalDependencies$1
	m	(Ljava/util/function/Consumer;Lbaf$b;)V	b	lambda$visitRequiredDependencies$0
c	bag	net/minecraft/tags/TagNetworkSerialization
	m	()V	<init>	<init>
	m	(Ljs;)Ljava/util/Map;	a	serializeTagsToNetwork
	m	(Ljy;)Lbag$a;	a	serializeToNetwork
	m	(Ljy;Lbag$a;)Lbaf$c;	a	deserializeTagsFromNetwork
	m	(Lamd;Ljy;Ljava/util/Map;Lame;Lit/unimi/dsi/fastutil/ints/IntList;)V	a	lambda$deserializeTagsFromNetwork$3
	m	(Ljy;Ljava/util/Map;Ljp$c;)V	a	lambda$serializeToNetwork$2
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$serializeTagsToNetwork$1
	m	(Ljz$d;)Lcom/mojang/datafixers/util/Pair;	a	lambda$serializeTagsToNetwork$0
c	bag$a	net/minecraft/tags/TagNetworkSerialization$NetworkPayload
	f	Lbag$a;	a	EMPTY
	f	Ljava/util/Map;	b	tags
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lwg;)Lbag$a;	b	read
	m	()Z	a	isEmpty
	m	()I	b	size
	m	(Ljy;)Lbaf$c;	a	resolve
	m	()V	<clinit>	<clinit>
c	bah	net/minecraft/tags/WorldPresetTags
	f	Lbae;	a	NORMAL
	f	Lbae;	b	EXTENDED
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbae;	a	create
	m	()V	<clinit>	<clinit>
c	bai	net/minecraft/tags/package-info
c	baj	net/minecraft/util/ARGB
	m	()V	<init>	<init>
	m	(I)I	a	alpha
	m	(I)I	b	red
	m	(I)I	c	green
	m	(I)I	d	blue
	m	(IIII)I	a	color
	m	(III)I	a	color
	m	(Lfis;)I	a	color
	m	(II)I	a	multiply
	m	(IF)I	a	scaleRGB
	m	(IFFF)I	a	scaleRGB
	m	(II)I	b	scaleRGB
	m	(I)I	e	greyscale
	m	(FII)I	a	lerp
	m	(I)I	f	opaque
	m	(I)I	g	transparent
	m	(II)I	c	color
	m	(FI)I	a	color
	m	(F)I	a	white
	m	(FFFF)I	a	colorFromFloat
	m	(I)Lorg/joml/Vector3f;	h	vector3fFromRGB24
	m	(II)I	d	average
	m	(F)I	b	as8BitChannel
	m	(I)F	i	alphaFloat
	m	(I)F	j	redFloat
	m	(I)F	k	greenFloat
	m	(I)F	l	blueFloat
	m	(I)F	o	from8BitChannel
	m	(I)I	m	toABGR
	m	(I)I	n	fromABGR
	m	(IF)I	b	setBrightness
c	bak	net/minecraft/util/AbortableIterationConsumer
	m	(Ljava/lang/Object;)Lbak$a;	accept	accept
	m	(Ljava/util/function/Consumer;)Lbak;	forConsumer	forConsumer
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Lbak$a;	a	lambda$forConsumer$0
c	bak$a	net/minecraft/util/AbortableIterationConsumer$Continuation
	f	Lbak$a;	a	CONTINUE
	f	Lbak$a;	b	ABORT
	f	[Lbak$a;	c	$VALUES
	m	()[Lbak$a;	values	values
	m	(Ljava/lang/String;)Lbak$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Z	a	shouldAbort
	m	()[Lbak$a;	b	$values
	m	()V	<clinit>	<clinit>
c	bal	net/minecraft/util/AbstractListBuilder
	f	Lcom/mojang/serialization/DynamicOps;	b	ops
	f	Lcom/mojang/serialization/DataResult;	a	builder
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DynamicOps;	ops	ops
	m	()Ljava/lang/Object;	a	initBuilder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	append
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	build
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/ListBuilder;	add	add
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/ListBuilder;	add	add
	m	(Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/ListBuilder;	withErrorsFrom	withErrorsFrom
	m	(Ljava/util/function/UnaryOperator;)Lcom/mojang/serialization/ListBuilder;	mapError	mapError
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	c	lambda$build$3
	m	(Lcom/mojang/serialization/DataResult;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$withErrorsFrom$2
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	d	lambda$withErrorsFrom$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	e	lambda$add$0
c	bam	net/minecraft/util/ArrayListDeque
	f	I	a	MIN_GROWTH
	f	[Ljava/lang/Object;	b	contents
	f	I	c	head
	f	I	d	size
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	()I	size	size
	m	()I	a	capacity
	m	(I)I	a	getIndex
	m	(I)Ljava/lang/Object;	get	get
	m	(II)V	a	verifyIndexInRange
	m	(I)V	b	verifyIndexInRange
	m	(I)Ljava/lang/Object;	c	getInner
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
	m	(ILjava/lang/Object;)V	add	add
	m	()V	c	grow
	m	(I)Ljava/lang/Object;	remove	remove
	m	(Ljava/util/function/Predicate;)Z	removeIf	removeIf
	m	([Ljava/lang/Object;I)V	a	copyCount
	m	(Ljava/util/function/UnaryOperator;)V	replaceAll	replaceAll
	m	(Ljava/util/function/Consumer;)V	forEach	forEach
	m	(Ljava/lang/Object;)V	addFirst	addFirst
	m	(Ljava/lang/Object;)V	addLast	addLast
	m	(Ljava/lang/Object;)Z	offerFirst	offerFirst
	m	(Ljava/lang/Object;)Z	offerLast	offerLast
	m	()Ljava/lang/Object;	removeFirst	removeFirst
	m	()Ljava/lang/Object;	removeLast	removeLast
	m	()Lbby;	b	reversed
	m	()Ljava/lang/Object;	pollFirst	pollFirst
	m	()Ljava/lang/Object;	pollLast	pollLast
	m	()Ljava/lang/Object;	getFirst	getFirst
	m	()Ljava/lang/Object;	getLast	getLast
	m	()Ljava/lang/Object;	peekFirst	peekFirst
	m	()Ljava/lang/Object;	peekLast	peekLast
	m	(Ljava/lang/Object;)Z	removeFirstOccurrence	removeFirstOccurrence
	m	(Ljava/lang/Object;)Z	removeLastOccurrence	removeLastOccurrence
	m	()Ljava/util/Iterator;	descendingIterator	descendingIterator
	m	()Ljava/util/List;	reversed	reversed
	m	()Ljava/util/SequencedCollection;	reversed	reversed
	m	()Ljava/util/Deque;	reversed	reversed
c	bam$a	net/minecraft/util/ArrayListDeque$DescendingIterator
	f	I	b	index
	f	Lbam;	a	this$0
	m	(Lbam;)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()Ljava/lang/Object;	next	next
	m	()V	remove	remove
c	bam$b	net/minecraft/util/ArrayListDeque$ReversedView
	f	Lbam;	b	source
	f	Lbam;	a	this$0
	m	(Lbam;Lbam;)V	<init>	<init>
	m	()Lbby;	b	reversed
	m	()Ljava/lang/Object;	getFirst	getFirst
	m	()Ljava/lang/Object;	getLast	getLast
	m	(Ljava/lang/Object;)V	addFirst	addFirst
	m	(Ljava/lang/Object;)V	addLast	addLast
	m	(Ljava/lang/Object;)Z	offerFirst	offerFirst
	m	(Ljava/lang/Object;)Z	offerLast	offerLast
	m	()Ljava/lang/Object;	pollFirst	pollFirst
	m	()Ljava/lang/Object;	pollLast	pollLast
	m	()Ljava/lang/Object;	peekFirst	peekFirst
	m	()Ljava/lang/Object;	peekLast	peekLast
	m	()Ljava/lang/Object;	removeFirst	removeFirst
	m	()Ljava/lang/Object;	removeLast	removeLast
	m	(Ljava/lang/Object;)Z	removeFirstOccurrence	removeFirstOccurrence
	m	(Ljava/lang/Object;)Z	removeLastOccurrence	removeLastOccurrence
	m	()Ljava/util/Iterator;	descendingIterator	descendingIterator
	m	()I	size	size
	m	()Z	isEmpty	isEmpty
	m	(Ljava/lang/Object;)Z	contains	contains
	m	(I)Ljava/lang/Object;	get	get
	m	(ILjava/lang/Object;)Ljava/lang/Object;	set	set
	m	(ILjava/lang/Object;)V	add	add
	m	(I)Ljava/lang/Object;	remove	remove
	m	(Ljava/lang/Object;)I	indexOf	indexOf
	m	(Ljava/lang/Object;)I	lastIndexOf	lastIndexOf
	m	(II)Ljava/util/List;	subList	subList
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()V	clear	clear
	m	(I)I	a	reverseIndex
	m	()Ljava/util/List;	reversed	reversed
	m	()Ljava/util/SequencedCollection;	reversed	reversed
	m	()Ljava/util/Deque;	reversed	reversed
c	ban	net/minecraft/util/BinaryAnimator
	f	I	a	animationLength
	f	Lban$a;	b	easingFunction
	f	I	c	ticks
	f	I	d	ticksOld
	m	(ILban$a;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Z)V	a	tick
	m	(F)F	a	getFactor
	m	(F)F	b	lambda$new$0
c	ban$a	net/minecraft/util/BinaryAnimator$EasingFunction
	m	(F)F	apply	apply
c	bao	net/minecraft/util/BitStorage
	m	(II)I	a	getAndSet
	m	(II)V	b	set
	m	(I)I	a	get
	m	()[J	a	getRaw
	m	()I	b	getSize
	m	()I	c	getBits
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()Lbao;	d	copy
c	bap	net/minecraft/util/Brightness
	f	I	d	block
	f	I	e	sky
	f	Lcom/mojang/serialization/Codec;	a	LIGHT_VALUE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lbap;	c	FULL_BRIGHT
	m	(II)V	<init>	<init>
	m	(II)I	a	pack
	m	()I	a	pack
	m	(I)I	a	block
	m	(I)I	b	sky
	m	(I)Lbap;	c	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	block
	m	()I	c	sky
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	baq	net/minecraft/util/ByIdMap
	m	()V	<init>	<init>
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	createMap
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction;	a	sparse
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object;	b	createSortedArray
	m	(Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Lbaq$a;)Ljava/util/function/IntFunction;	a	continuous
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	a	lambda$continuous$3
	m	([Ljava/lang/Object;II)Ljava/lang/Object;	b	lambda$continuous$2
	m	(I[Ljava/lang/Object;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$continuous$1
	m	(Ljava/util/function/IntFunction;Ljava/lang/Object;I)Ljava/lang/Object;	a	lambda$sparse$0
c	baq$a	net/minecraft/util/ByIdMap$OutOfBoundsStrategy
	f	Lbaq$a;	a	ZERO
	f	Lbaq$a;	b	WRAP
	f	Lbaq$a;	c	CLAMP
	f	[Lbaq$a;	d	$VALUES
	m	()[Lbaq$a;	values	values
	m	(Ljava/lang/String;)Lbaq$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbaq$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bar	net/minecraft/util/ClassInstanceMultiMap
	f	Ljava/util/Map;	a	byClass
	f	Ljava/lang/Class;	b	baseClass
	f	Ljava/util/List;	c	allInstances
	m	(Ljava/lang/Class;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	add	add
	m	(Ljava/lang/Object;)Z	remove	remove
	m	(Ljava/lang/Object;)Z	contains	contains
	m	(Ljava/lang/Class;)Ljava/util/Collection;	a	find
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/List;	a	getAllInstances
	m	()I	size	size
	m	(Ljava/lang/Class;)Ljava/util/List;	b	lambda$find$0
c	bas	net/minecraft/util/ClassTreeIdRegistry
	f	I	a	NO_ID_VALUE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	classToLastIdCache
	m	()V	<init>	<init>
	m	(Ljava/lang/Class;)I	a	getLastIdFor
	m	(Ljava/lang/Class;)I	b	getCount
	m	(Ljava/lang/Class;)I	c	define
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$new$0
c	bat	net/minecraft/util/ColorRGBA
	f	I	b	rgba
	f	Ljava/lang/String;	c	CUSTOM_COLOR_PREFIX
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	b	formatValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	rgba
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Ljava/lang/NumberFormatException;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bau	net/minecraft/util/CommonColors
	f	I	a	WHITE
	f	I	b	BLACK
	f	I	c	GRAY
	f	I	d	DARK_GRAY
	f	I	e	LIGHT_GRAY
	f	I	f	LIGHTER_GRAY
	f	I	g	RED
	f	I	h	SOFT_RED
	f	I	i	GREEN
	f	I	j	BLUE
	f	I	k	YELLOW
	f	I	l	SOFT_YELLOW
	f	I	m	DARK_PURPLE
	f	I	n	HIGH_CONTRAST_DIAMOND
	f	I	o	COSMOS_PINK
	m	()V	<init>	<init>
c	bav	net/minecraft/util/CommonLinks
	f	Ljava/net/URI;	a	GDPR
	f	Ljava/net/URI;	b	EULA
	f	Ljava/net/URI;	c	PRIVACY_STATEMENT
	f	Ljava/net/URI;	d	ATTRIBUTION
	f	Ljava/net/URI;	e	LICENSES
	f	Ljava/net/URI;	f	BUY_MINECRAFT_JAVA
	f	Ljava/net/URI;	g	ACCOUNT_SETTINGS
	f	Ljava/net/URI;	h	SNAPSHOT_FEEDBACK
	f	Ljava/net/URI;	i	RELEASE_FEEDBACK
	f	Ljava/net/URI;	j	SNAPSHOT_BUGS_FEEDBACK
	f	Ljava/net/URI;	k	GENERAL_HELP
	f	Ljava/net/URI;	l	ACCESSIBILITY_HELP
	f	Ljava/net/URI;	m	REPORTING_HELP
	f	Ljava/net/URI;	n	SUSPENSION_HELP
	f	Ljava/net/URI;	o	BLOCKING_HELP
	f	Ljava/net/URI;	p	SYMLINK_HELP
	f	Ljava/net/URI;	q	START_REALMS_TRIAL
	f	Ljava/net/URI;	r	BUY_REALMS
	f	Ljava/net/URI;	s	REALMS_TERMS
	f	Ljava/net/URI;	t	REALMS_CONTENT_CREATION
	f	Ljava/lang/String;	u	EXTEND_REALMS_LINK
	f	Ljava/lang/String;	v	INTENTIONAL_GAME_DESIGN_BUG_ID
	f	Ljava/net/URI;	w	INTENTIONAL_GAME_DESIGN_BUG
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/UUID;Z)Ljava/lang/String;	a	extendRealms
	m	(Ljava/lang/String;Ljava/util/UUID;)Ljava/lang/String;	a	extendRealms
	m	()V	<clinit>	<clinit>
c	baw	net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	EMPTY_SLOT
	f	F	d	LOADFACTOR
	f	[Ljava/lang/Object;	e	keys
	f	[I	f	values
	f	[Ljava/lang/Object;	g	byId
	f	I	h	nextId
	f	I	i	size
	m	(I)V	<init>	<init>
	m	([Ljava/lang/Object;[I[Ljava/lang/Object;II)V	<init>	<init>
	m	(I)Lbaw;	c	create
	m	(Ljava/lang/Object;)I	a	getId
	m	(I)Ljava/lang/Object;	a	byId
	m	(I)I	e	getValue
	m	(Ljava/lang/Object;)Z	b	contains
	m	(I)Z	d	contains
	m	(Ljava/lang/Object;)I	d	add
	m	()I	c	nextId
	m	(I)V	f	grow
	m	(Ljava/lang/Object;I)V	a	addMapping
	m	(Ljava/lang/Object;)I	e	hash
	m	(Ljava/lang/Object;I)I	b	indexOf
	m	(I)I	g	findEmpty
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()V	a	clear
	m	()I	d	size
	m	()Lbaw;	b	copy
	m	()V	<clinit>	<clinit>
c	bax	net/minecraft/util/Crypt
	f	Ljava/lang/String;	h	SYMMETRIC_ALGORITHM
	f	I	i	SYMMETRIC_BITS
	f	Ljava/lang/String;	j	ASYMMETRIC_ALGORITHM
	f	I	k	ASYMMETRIC_BITS
	f	Ljava/lang/String;	l	BYTE_ENCODING
	f	Ljava/lang/String;	m	HASH_ALGORITHM
	f	Ljava/lang/String;	a	SIGNING_ALGORITHM
	f	I	b	SIGNATURE_BYTES
	f	Ljava/lang/String;	n	PEM_RSA_PRIVATE_KEY_HEADER
	f	Ljava/lang/String;	o	PEM_RSA_PRIVATE_KEY_FOOTER
	f	Ljava/lang/String;	c	RSA_PUBLIC_KEY_HEADER
	f	Ljava/lang/String;	p	RSA_PUBLIC_KEY_FOOTER
	f	Ljava/lang/String;	d	MIME_LINE_SEPARATOR
	f	Ljava/util/Base64$Encoder;	e	MIME_ENCODER
	f	Lcom/mojang/serialization/Codec;	f	PUBLIC_KEY_CODEC
	f	Lcom/mojang/serialization/Codec;	g	PRIVATE_KEY_CODEC
	m	()V	<init>	<init>
	m	()Ljavax/crypto/SecretKey;	a	generateSecretKey
	m	()Ljava/security/KeyPair;	b	generateKeyPair
	m	(Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B	a	digestData
	m	([[B)[B	a	digestData
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lbax$a;)Ljava/security/Key;	a	rsaStringToKey
	m	(Ljava/lang/String;)Ljava/security/PrivateKey;	a	stringToPemRsaPrivateKey
	m	(Ljava/lang/String;)Ljava/security/PublicKey;	b	stringToRsaPublicKey
	m	(Ljava/security/PublicKey;)Ljava/lang/String;	a	rsaPublicKeyToString
	m	(Ljava/security/PrivateKey;)Ljava/lang/String;	a	pemRsaPrivateKeyToString
	m	([B)Ljava/security/PrivateKey;	b	byteToPrivateKey
	m	([B)Ljava/security/PublicKey;	a	byteToPublicKey
	m	(Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey;	a	decryptByteToSecretKey
	m	(Ljava/security/Key;[B)[B	a	encryptUsingKey
	m	(Ljava/security/Key;[B)[B	b	decryptUsingKey
	m	(ILjava/security/Key;[B)[B	a	cipherData
	m	(ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher;	a	setupCipher
	m	(ILjava/security/Key;)Ljavax/crypto/Cipher;	a	getCipher
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bax$a	net/minecraft/util/Crypt$ByteArrayToKeyFunction
	m	([B)Ljava/security/Key;	apply	apply
c	bax$b	net/minecraft/util/Crypt$SaltSignaturePair
	f	J	b	salt
	f	[B	c	signature
	f	Lbax$b;	a	EMPTY
	m	(Lwg;)V	<init>	<init>
	m	(J[B)V	<init>	<init>
	m	()Z	a	isValid
	m	(Lwg;Lbax$b;)V	a	write
	m	()[B	b	saltAsBytes
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	c	salt
	m	()[B	d	signature
	m	()V	<clinit>	<clinit>
c	bax$c	net/minecraft/util/Crypt$SaltSupplier
	f	Ljava/security/SecureRandom;	a	secureRandom
	m	()V	<init>	<init>
	m	()J	a	getLong
	m	()V	<clinit>	<clinit>
c	bay	net/minecraft/util/CryptException
	m	(Ljava/lang/Throwable;)V	<init>	<init>
c	baz	net/minecraft/util/CsvOutput
	f	Ljava/lang/String;	a	LINE_SEPARATOR
	f	Ljava/lang/String;	b	FIELD_SEPARATOR
	f	Ljava/io/Writer;	c	output
	f	I	d	columnCount
	m	(Ljava/io/Writer;Ljava/util/List;)V	<init>	<init>
	m	()Lbaz$a;	a	builder
	m	([Ljava/lang/Object;)V	a	writeRow
	m	(Ljava/util/stream/Stream;)V	a	writeLine
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	getStringValue
c	baz$a	net/minecraft/util/CsvOutput$Builder
	f	Ljava/util/List;	a	headers
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lbaz$a;	a	addColumn
	m	(Ljava/io/Writer;)Lbaz;	a	build
c	bba	net/minecraft/util/CubicSampler
	f	I	a	GAUSSIAN_SAMPLE_RADIUS
	f	I	b	GAUSSIAN_SAMPLE_BREADTH
	f	[D	c	GAUSSIAN_SAMPLE_KERNEL
	m	()V	<init>	<init>
	m	(Lfis;Lbba$a;)Lfis;	a	gaussianSampleVec3
	m	()V	<clinit>	<clinit>
c	bba$a	net/minecraft/util/CubicSampler$Vec3Fetcher
	m	(III)Lfis;	fetch	fetch
c	bbb	net/minecraft/util/CubicSpline
	m	()Ljava/lang/String;	a	parityString
	m	(Lbbb$d;)Lbbb;	a	mapAll
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(F)Lbbb;	a	constant
	m	(Lbdh;)Lbbb$b;	a	builder
	m	(Lbdh;Lbdh;)Lbbb$b;	a	builder
	m	(Lbbb;)Lcom/mojang/datafixers/util/Either;	a	lambda$codec$8
	m	(Lcom/mojang/datafixers/util/Either;)Lbbb;	a	lambda$codec$7
	m	(Lbbb$e;)Ljava/lang/Record;	a	lambda$codec$6
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$5
	m	(Lbdh;Ljava/util/List;)Lbbb$e;	a	lambda$codec$4
	m	(Lbbb$e;)Ljava/util/List;	b	lambda$codec$3
	m	(Lbbb$e;I)Lbbb$a;	a	lambda$codec$2
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	m	(FLbbb;F)Lbbb$a;	a	lambda$codec$0
c	bbb$a	net/minecraft/util/CubicSpline$1Point
	f	F	a	location
	f	Lbbb;	b	value
	f	F	c	derivative
	m	(FLbbb;F)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	location
	m	()Lbbb;	b	value
	m	()F	c	derivative
c	bbb$b	net/minecraft/util/CubicSpline$Builder
	f	Lbdh;	a	coordinate
	f	Lbdh;	b	valueTransformer
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	c	locations
	f	Ljava/util/List;	d	values
	f	Lit/unimi/dsi/fastutil/floats/FloatList;	e	derivatives
	m	(Lbdh;)V	<init>	<init>
	m	(Lbdh;Lbdh;)V	<init>	<init>
	m	(FF)Lbbb$b;	a	addPoint
	m	(FFF)Lbbb$b;	a	addPoint
	m	(FLbbb;)Lbbb$b;	a	addPoint
	m	(FLbbb;F)Lbbb$b;	a	addPoint
	m	()Lbbb;	a	build
c	bbb$c	net/minecraft/util/CubicSpline$Constant
	f	F	b	value
	m	(F)V	<init>	<init>
	m	(Ljava/lang/Object;)F	a	apply
	m	()Ljava/lang/String;	a	parityString
	m	()F	b	minValue
	m	()F	c	maxValue
	m	(Lbbb$d;)Lbbb;	a	mapAll
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	d	value
c	bbb$d	net/minecraft/util/CubicSpline$CoordinateVisitor
	m	(Ljava/lang/Object;)Ljava/lang/Object;	visit	visit
c	bbb$e	net/minecraft/util/CubicSpline$Multipoint
	f	Lbdh;	b	coordinate
	f	[F	c	locations
	f	Ljava/util/List;	d	values
	f	[F	e	derivatives
	f	F	f	minValue
	f	F	g	maxValue
	m	(Lbdh;[FLjava/util/List;[FFF)V	<init>	<init>
	m	(Lbdh;[FLjava/util/List;[F)Lbbb$e;	a	create
	m	(F[FF[FI)F	a	linearExtend
	m	([FLjava/util/List;[F)V	a	validateSizes
	m	(Ljava/lang/Object;)F	a	apply
	m	([FF)I	a	findIntervalStart
	m	()Ljava/lang/String;	a	parityString
	m	([F)Ljava/lang/String;	a	toString
	m	(Lbbb$d;)Lbbb;	a	mapAll
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbdh;	d	coordinate
	m	()[F	e	locations
	m	()Ljava/util/List;	f	values
	m	()[F	g	derivatives
	m	()F	b	minValue
	m	()F	c	maxValue
	m	(Lbbb$d;Lbbb;)Lbbb;	a	lambda$mapAll$3
	m	(D)Ljava/lang/String;	a	lambda$toString$2
	m	([FI)D	a	lambda$toString$1
	m	(F[FI)Z	a	lambda$findIntervalStart$0
c	bbc	net/minecraft/util/DebugBuffer
	f	Ljava/util/concurrent/atomic/AtomicReferenceArray;	a	data
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	index
	m	(I)V	<init>	<init>
	m	(Ljava/lang/Object;)V	a	push
	m	()Ljava/util/List;	a	dump
c	bbd	net/minecraft/util/DelegateDataOutput
	f	Ljava/io/DataOutput;	a	parent
	m	(Ljava/io/DataOutput;)V	<init>	<init>
	m	(I)V	write	write
	m	([B)V	write	write
	m	([BII)V	write	write
	m	(Z)V	writeBoolean	writeBoolean
	m	(I)V	writeByte	writeByte
	m	(I)V	writeShort	writeShort
	m	(I)V	writeChar	writeChar
	m	(I)V	writeInt	writeInt
	m	(J)V	writeLong	writeLong
	m	(F)V	writeFloat	writeFloat
	m	(D)V	writeDouble	writeDouble
	m	(Ljava/lang/String;)V	writeBytes	writeBytes
	m	(Ljava/lang/String;)V	writeChars	writeChars
	m	(Ljava/lang/String;)V	writeUTF	writeUTF
c	bbe	net/minecraft/util/DependencySorter
	f	Ljava/util/Map;	a	contents
	m	()V	<init>	<init>
	m	(Ljava/lang/Object;Lbbe$a;)Lbbe;	a	addEntry
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V	a	visitDependenciesAndElement
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	a	isCyclic
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	b	addDependencyIfNotCyclic
	m	(Ljava/util/function/BiConsumer;)V	a	orderByDependencies
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	a	lambda$orderByDependencies$6
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Lbbe$a;)V	a	lambda$orderByDependencies$5
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	c	lambda$orderByDependencies$4
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Lbbe$a;)V	b	lambda$orderByDependencies$3
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V	d	lambda$orderByDependencies$2
	m	(Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z	e	lambda$isCyclic$1
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V	b	lambda$visitDependenciesAndElement$0
c	bbe$a	net/minecraft/util/DependencySorter$Entry
	m	(Ljava/util/function/Consumer;)V	a	visitRequiredDependencies
	m	(Ljava/util/function/Consumer;)V	b	visitOptionalDependencies
c	bbf	net/minecraft/util/DirectoryLock
	f	Ljava/lang/String;	a	LOCK_FILE
	f	Ljava/nio/channels/FileChannel;	b	lockFile
	f	Ljava/nio/channels/FileLock;	c	lock
	f	Ljava/nio/ByteBuffer;	d	DUMMY
	m	(Ljava/nio/file/Path;)Lbbf;	a	create
	m	(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileLock;)V	<init>	<init>
	m	()V	close	close
	m	()Z	a	isValid
	m	(Ljava/nio/file/Path;)Z	b	isLocked
	m	()V	<clinit>	<clinit>
c	bbf$a	net/minecraft/util/DirectoryLock$LockException
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Lbbf$a;	a	alreadyLocked
c	bbg	net/minecraft/util/EncoderCache
	f	Lcom/google/common/cache/LoadingCache;	a	cache
	m	(I)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	wrap
c	bbg$1	net/minecraft/util/EncoderCache$1
	m	(Lbbg;)V	<init>	<init>
	m	(Lbbg$a;)Lcom/mojang/serialization/DataResult;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	bbg$2	net/minecraft/util/EncoderCache$2
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	f	Lbbg;	b	this$0
	m	(Lbbg;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$encode$0
c	bbg$a	net/minecraft/util/EncoderCache$Key
	f	Lcom/mojang/serialization/Codec;	a	codec
	f	Ljava/lang/Object;	b	value
	f	Lcom/mojang/serialization/DynamicOps;	c	ops
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DataResult;	a	resolve
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	()Ljava/lang/Object;	c	value
	m	()Lcom/mojang/serialization/DynamicOps;	d	ops
c	bbh	net/minecraft/util/ExceptionCollector
	f	Ljava/lang/Throwable;	a	result
	m	()V	<init>	<init>
	m	(Ljava/lang/Throwable;)V	a	add
	m	()V	a	throwIfPresent
c	bbi	net/minecraft/util/ExtraCodecs
	f	Lcom/mojang/serialization/Codec;	a	JSON
	f	Lcom/mojang/serialization/Codec;	b	JAVA
	f	Lcom/mojang/serialization/Codec;	c	NBT
	f	Lcom/mojang/serialization/Codec;	d	VECTOR2F
	f	Lcom/mojang/serialization/Codec;	e	VECTOR3F
	f	Lcom/mojang/serialization/Codec;	f	VECTOR3I
	f	Lcom/mojang/serialization/Codec;	g	VECTOR4F
	f	Lcom/mojang/serialization/Codec;	h	QUATERNIONF_COMPONENTS
	f	Lcom/mojang/serialization/Codec;	i	AXISANGLE4F
	f	Lcom/mojang/serialization/Codec;	j	QUATERNIONF
	f	Lcom/mojang/serialization/Codec;	k	MATRIX4F
	f	Lcom/mojang/serialization/Codec;	l	RGB_COLOR_CODEC
	f	Lcom/mojang/serialization/Codec;	m	ARGB_COLOR_CODEC
	f	Lcom/mojang/serialization/Codec;	n	UNSIGNED_BYTE
	f	Lcom/mojang/serialization/Codec;	o	NON_NEGATIVE_INT
	f	Lcom/mojang/serialization/Codec;	p	POSITIVE_INT
	f	Lcom/mojang/serialization/Codec;	q	NON_NEGATIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	r	POSITIVE_FLOAT
	f	Lcom/mojang/serialization/Codec;	s	PATTERN
	f	Lcom/mojang/serialization/Codec;	t	INSTANT_ISO8601
	f	Lcom/mojang/serialization/Codec;	u	BASE64_STRING
	f	Lcom/mojang/serialization/Codec;	v	ESCAPED_STRING
	f	Lcom/mojang/serialization/Codec;	w	TAG_OR_ELEMENT_ID
	f	Ljava/util/function/Function;	x	toOptionalLong
	f	Ljava/util/function/Function;	y	fromOptionalLong
	f	Lcom/mojang/serialization/Codec;	z	BIT_SET
	f	Lcom/mojang/serialization/Codec;	I	PROPERTY
	f	Lcom/mojang/serialization/Codec;	A	PROPERTY_MAP
	f	Lcom/mojang/serialization/Codec;	B	PLAYER_NAME
	f	Lcom/mojang/serialization/MapCodec;	J	GAME_PROFILE_WITHOUT_PROPERTIES
	f	Lcom/mojang/serialization/Codec;	C	GAME_PROFILE
	f	Lcom/mojang/serialization/Codec;	D	NON_EMPTY_STRING
	f	Lcom/mojang/serialization/Codec;	E	CODEPOINT
	f	Lcom/mojang/serialization/Codec;	F	RESOURCE_PATH_CODEC
	f	Lcom/mojang/serialization/Codec;	G	UNTRUSTED_URI
	f	Lcom/mojang/serialization/Codec;	H	CHAT_STRING
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Codec;	a	converter
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intervalCodec
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction;	a	orElsePartial
	m	(Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec;	a	idResolverCodec
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	idResolverCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	orCompressed
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	orCompressed
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	overrideLifecycle
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	overrideLifecycle
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lbbi$c;	b	strictUnboundedMap
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	compactListCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	compactListCodec
	m	(IILjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	intRangeWithMessage
	m	(II)Lcom/mojang/serialization/Codec;	a	intRange
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	floatRangeMinInclusiveWithMessage
	m	(FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	floatRangeMinExclusiveWithMessage
	m	(FF)Lcom/mojang/serialization/Codec;	a	floatRange
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyList
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	c	nonEmptyHolderSet
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	d	nonEmptyMap
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	retrieveContext
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	b	ensureHomogenous
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	e	catchDecoderException
	m	(Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec;	a	temporalCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	asOptionalLong
	m	(Lcom/mojang/serialization/Codec;I)Lcom/mojang/serialization/Codec;	a	sizeLimitedMap
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	f	object2BooleanMap
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	dispatchOptionalValue
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	g	optionalEmptyMap
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	c	legacyEnum
	m	(Ljava/util/function/Function;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$legacyEnum$108
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$legacyEnum$107
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	lambda$static$106
	m	(C)Ljava/lang/String;	a	lambda$static$105
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$104
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	d	lambda$static$103
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$static$102
	m	(ILjava/util/Map;)Lcom/mojang/serialization/DataResult;	a	lambda$sizeLimitedMap$101
	m	(Ljava/util/Map;I)Ljava/lang/String;	a	lambda$sizeLimitedMap$100
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	f	lambda$static$99
	m	(Ljava/lang/String;)Ljava/lang/String;	g	lambda$static$98
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	h	lambda$static$97
	m	()Ljava/lang/String;	a	lambda$static$96
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$95
	m	(Lcom/mojang/authlib/GameProfile;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	lambda$static$94
	m	(Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lcom/mojang/authlib/properties/Property;)V	a	lambda$static$93
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$92
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	i	lambda$static$91
	m	(Ljava/lang/String;)Ljava/lang/String;	j	lambda$static$90
	m	(Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$89
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/authlib/properties/PropertyMap;	a	lambda$static$88
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/List;)V	a	lambda$static$87
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/util/Map;)V	a	lambda$static$86
	m	(Lcom/mojang/authlib/properties/PropertyMap;Ljava/lang/String;Ljava/util/List;)V	a	lambda$static$85
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$84
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/authlib/properties/Property;	a	lambda$static$83
	m	(Lcom/mojang/authlib/properties/Property;)Ljava/util/Optional;	a	lambda$static$82
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$81
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$80
	m	(Ljava/util/OptionalLong;)Ljava/util/Optional;	a	lambda$static$79
	m	(Ljava/util/Optional;)Ljava/util/OptionalLong;	a	lambda$static$78
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	k	lambda$static$77
	m	(Lame;)Lbbi$d;	a	lambda$static$76
	m	(Lame;)Lbbi$d;	b	lambda$static$75
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	l	lambda$static$74
	m	([B)Ljava/lang/String;	a	lambda$static$73
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	m	lambda$static$72
	m	()Ljava/lang/String;	b	lambda$static$71
	m	(Ljava/time/format/DateTimeFormatter;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$temporalCodec$70
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	n	lambda$static$69
	m	(Ljava/lang/String;Ljava/util/regex/PatternSyntaxException;)Ljava/lang/String;	a	lambda$static$68
	m	(Ljava/util/function/Function;Ljava/util/Collection;)Lcom/mojang/serialization/DataResult;	a	lambda$ensureHomogenous$67
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;	a	lambda$ensureHomogenous$66
	m	(Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyMap$65
	m	()Ljava/lang/String;	c	lambda$nonEmptyMap$64
	m	(Ljp;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyHolderSet$63
	m	()Ljava/lang/String;	d	lambda$nonEmptyHolderSet$62
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$nonEmptyList$61
	m	()Ljava/lang/String;	e	lambda$nonEmptyList$60
	m	(FFLjava/lang/Float;)Ljava/lang/String;	a	lambda$floatRange$59
	m	(Ljava/lang/Float;)Ljava/lang/String;	a	lambda$static$58
	m	(Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$57
	m	(FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$floatRangeMinExclusiveWithMessage$56
	m	(Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String;	a	lambda$floatRangeMinExclusiveWithMessage$55
	m	(FFLjava/util/function/Function;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	b	lambda$floatRangeMinInclusiveWithMessage$54
	m	(Ljava/util/function/Function;Ljava/lang/Float;)Ljava/lang/String;	b	lambda$floatRangeMinInclusiveWithMessage$53
	m	(IILjava/lang/Integer;)Ljava/lang/String;	a	lambda$intRange$52
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$static$51
	m	(Ljava/lang/Integer;)Ljava/lang/String;	b	lambda$static$50
	m	(IILjava/util/function/Function;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$intRangeWithMessage$49
	m	(Ljava/util/function/Function;Ljava/lang/Integer;)Ljava/lang/String;	a	lambda$intRangeWithMessage$48
	m	(Ljava/util/List;)Lcom/mojang/datafixers/util/Either;	b	lambda$compactListCodec$47
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/List;	b	lambda$compactListCodec$46
	m	(Ljava/util/List;)Ljava/util/List;	c	lambda$compactListCodec$45
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$44
	m	(Ljava/lang/Object;)Ljava/lang/String;	b	lambda$idResolverCodec$43
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	lambda$idResolverCodec$42
	m	(Ljava/lang/Object;)Ljava/lang/String;	c	lambda$idResolverCodec$41
	m	(Ljava/util/function/ToIntFunction;ILjava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$40
	m	(Ljava/lang/Object;)Ljava/lang/String;	d	lambda$idResolverCodec$39
	m	(Ljava/util/function/IntFunction;Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	a	lambda$idResolverCodec$38
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	c	lambda$idResolverCodec$37
	m	(Ljava/lang/Integer;)Ljava/lang/String;	d	lambda$idResolverCodec$36
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Either;	a	lambda$intervalCodec$35
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$34
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$33
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	b	lambda$intervalCodec$32
	m	(Ljava/util/function/BiFunction;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$31
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$intervalCodec$30
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/List;	c	lambda$intervalCodec$29
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$intervalCodec$28
	m	(Ljava/util/function/BiFunction;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	b	lambda$intervalCodec$27
	m	(Ljava/lang/Integer;)Lcom/mojang/serialization/DataResult;	e	lambda$static$26
	m	(Ljava/lang/Integer;)Ljava/lang/String;	f	lambda$static$25
	m	(Lorg/joml/Vector4f;)Ljava/lang/Integer;	a	lambda$static$24
	m	(Lorg/joml/Vector3f;)Ljava/lang/Integer;	a	lambda$static$23
	m	(Lorg/joml/Matrix4fc;)Ljava/util/List;	a	lambda$static$22
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	d	lambda$static$21
	m	(Ljava/util/List;)Lorg/joml/Matrix4f;	e	lambda$static$20
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	d	lambda$static$19
	m	(Lorg/joml/AxisAngle4f;)Lorg/joml/Vector3f;	a	lambda$static$18
	m	(Lorg/joml/AxisAngle4f;)Ljava/lang/Float;	b	lambda$static$17
	m	(Lorg/joml/Quaternionf;)Ljava/util/List;	a	lambda$static$16
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	f	lambda$static$15
	m	(Ljava/util/List;)Lorg/joml/Quaternionf;	g	lambda$static$14
	m	(Lorg/joml/Vector4f;)Ljava/util/List;	b	lambda$static$13
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	h	lambda$static$12
	m	(Ljava/util/List;)Lorg/joml/Vector4f;	i	lambda$static$11
	m	(Lorg/joml/Vector3i;)Ljava/util/List;	a	lambda$static$10
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	j	lambda$static$9
	m	(Ljava/util/List;)Lorg/joml/Vector3i;	k	lambda$static$8
	m	(Lorg/joml/Vector3f;)Ljava/util/List;	b	lambda$static$7
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	l	lambda$static$6
	m	(Ljava/util/List;)Lorg/joml/Vector3f;	m	lambda$static$5
	m	(Lorg/joml/Vector2f;)Ljava/util/List;	a	lambda$static$4
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	n	lambda$static$3
	m	(Ljava/util/List;)Lorg/joml/Vector2f;	o	lambda$static$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$converter$1
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	lambda$converter$0
	m	()V	<clinit>	<clinit>
c	bbi$1	net/minecraft/util/ExtraCodecs$1
	f	Ljava/lang/Object;	a	val$value
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	apply	apply
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	coApply	coApply
	m	()Ljava/lang/String;	toString	toString
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;)Ljava/lang/String;	a	lambda$apply$0
c	bbi$a	net/minecraft/util/ExtraCodecs$1ContextRetrievalCodec
	f	Ljava/util/function/Function;	a	val$getter
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
c	bbi$2	net/minecraft/util/ExtraCodecs$2
	f	Lcom/mojang/serialization/Codec;	a	val$compressed
	f	Lcom/mojang/serialization/Codec;	b	val$normal
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	()Ljava/lang/String;	toString	toString
c	bbi$3	net/minecraft/util/ExtraCodecs$3
	f	Lcom/mojang/serialization/MapCodec;	a	val$compressed
	f	Lcom/mojang/serialization/MapCodec;	b	val$normal
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
	m	()Ljava/lang/String;	toString	toString
c	bbi$4	net/minecraft/util/ExtraCodecs$4
	f	Ljava/util/function/Function;	a	val$decodeLifecycle
	f	Ljava/util/function/Function;	b	val$encodeLifecycle
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	apply	apply
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult;	coApply	coApply
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$apply$0
c	bbi$5	net/minecraft/util/ExtraCodecs$5
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/lang/Object;Ljava/lang/Exception;)Ljava/lang/String;	a	lambda$decode$0
c	bbi$6	net/minecraft/util/ExtraCodecs$6
	f	Ljava/lang/String;	a	val$typeKey
	f	Ljava/lang/String;	b	val$valueKey
	f	Lcom/mojang/serialization/Codec;	c	val$typeCodec
	f	Ljava/util/function/Function;	d	val$valueCodec
	f	Ljava/util/function/Function;	e	val$typeGetter
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/MapLike;Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$1
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapLike;)Ljava/lang/String;	a	lambda$decode$0
c	bbi$7	net/minecraft/util/ExtraCodecs$7
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Z	a	isEmptyMap
	m	(Ljava/util/Optional;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$0
c	bbi$b	net/minecraft/util/ExtraCodecs$LateBoundIdMapper
	f	Lcom/google/common/collect/BiMap;	a	idToValue
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lbbi$b;	a	put
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$put$0
c	bbi$c	net/minecraft/util/ExtraCodecs$StrictUnboundedMapCodec
	f	Lcom/mojang/serialization/Codec;	a	keyCodec
	f	Lcom/mojang/serialization/Codec;	b	elementCodec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/Codec;	keyCodec	keyCodec
	m	()Lcom/mojang/serialization/Codec;	elementCodec	elementCodec
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$2
	m	()Ljava/lang/String;	a	lambda$decode$1
	m	(Lcom/mojang/serialization/DataResult;Ljava/lang/String;)Ljava/lang/String;	a	lambda$decode$0
c	bbi$d	net/minecraft/util/ExtraCodecs$TagOrElementLocation
	f	Lame;	a	id
	f	Z	b	tag
	m	(Lame;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	decoratedId
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Z	b	tag
c	bbj	net/minecraft/util/FastBufferedInputStream
	f	I	a	DEFAULT_BUFFER_SIZE
	f	Ljava/io/InputStream;	b	in
	f	[B	c	buffer
	f	I	d	limit
	f	I	e	position
	m	(Ljava/io/InputStream;)V	<init>	<init>
	m	(Ljava/io/InputStream;I)V	<init>	<init>
	m	()I	read	read
	m	([BII)I	read	read
	m	(J)J	skip	skip
	m	()I	available	available
	m	()V	close	close
	m	()I	a	bytesInBuffer
	m	()V	b	fill
c	bbk	net/minecraft/util/FileSystemUtil
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Ljava/net/URI;)Ljava/nio/file/Path;	a	safeGetPath
	m	()V	<clinit>	<clinit>
c	bbl	net/minecraft/util/FileZipper
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/nio/file/Path;	b	outputFile
	f	Ljava/nio/file/Path;	c	tempFile
	f	Ljava/nio/file/FileSystem;	d	fs
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	a	add
	m	(Ljava/nio/file/Path;Ljava/io/File;)V	a	add
	m	(Ljava/nio/file/Path;)V	a	add
	m	()V	close	close
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$add$0
	m	()V	<clinit>	<clinit>
c	bbm	net/minecraft/util/FormattedCharSequence
	f	Lbbm;	a	EMPTY
	m	(Lbbn;)Z	accept	accept
	m	(ILyl;)Lbbm;	codepoint	codepoint
	m	(Ljava/lang/String;Lyl;)Lbbm;	forward	forward
	m	(Ljava/lang/String;Lyl;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lbbm;	forward	forward
	m	(Ljava/lang/String;Lyl;)Lbbm;	backward	backward
	m	(Ljava/lang/String;Lyl;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lbbm;	backward	backward
	m	(Lbbn;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lbbn;	decorateOutput	decorateOutput
	m	()Lbbm;	composite	composite
	m	(Lbbm;)Lbbm;	composite	composite
	m	(Lbbm;Lbbm;)Lbbm;	composite	composite
	m	([Lbbm;)Lbbm;	composite	composite
	m	(Ljava/util/List;)Lbbm;	composite	composite
	m	(Lbbm;Lbbm;)Lbbm;	fromPair	fromPair
	m	(Ljava/util/List;)Lbbm;	fromList	fromList
	m	(Ljava/util/List;Lbbn;)Z	a	lambda$fromList$8
	m	(Lbbm;Lbbm;Lbbn;)Z	a	lambda$fromPair$7
	m	(Lbbn;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;ILyl;I)Z	a	lambda$decorateOutput$6
	m	(Ljava/lang/String;Lyl;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lbbn;)Z	a	lambda$backward$5
	m	(Ljava/lang/String;Lyl;Lbbn;)Z	a	lambda$backward$4
	m	(Ljava/lang/String;Lyl;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Lbbn;)Z	b	lambda$forward$3
	m	(Ljava/lang/String;Lyl;Lbbn;)Z	b	lambda$forward$2
	m	(Lyl;ILbbn;)Z	a	lambda$codepoint$1
	m	(Lbbn;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bbn	net/minecraft/util/FormattedCharSink
	m	(ILyl;I)Z	accept	accept
c	bbo	net/minecraft/util/FutureChain
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/concurrent/CompletableFuture;	c	head
	f	Ljava/util/concurrent/Executor;	d	executor
	f	Z	e	closed
	m	(Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
	m	()V	close	close
	m	(Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$append$2
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)V	a	lambda$append$1
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$append$0
	m	()V	<clinit>	<clinit>
c	bbp	net/minecraft/util/Graph
	m	()V	<init>	<init>
	m	(Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z	a	depthFirstSearch
c	bbq	net/minecraft/util/GsonHelper
	f	Lcom/google/gson/Gson;	a	GSON
	m	()V	<init>	<init>
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	a	isStringValue
	m	(Lcom/google/gson/JsonElement;)Z	a	isStringValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	b	isNumberValue
	m	(Lcom/google/gson/JsonElement;)Z	b	isNumberValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	c	isBooleanValue
	m	(Lcom/google/gson/JsonElement;)Z	c	isBooleanValue
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	d	isArrayNode
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	e	isObjectNode
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	f	isValidPrimitive
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	g	isValidNode
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement;	h	getNonNull
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String;	a	convertToString
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String;	i	getAsString
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getAsString
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljl;	b	convertToItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljl;	j	getAsItem
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljl;)Ljl;	a	getAsItem
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Z	c	convertToBoolean
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Z	k	getAsBoolean
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z	a	getAsBoolean
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)D	d	convertToDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)D	l	getAsDouble
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;D)D	a	getAsDouble
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)F	e	convertToFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)F	m	getAsFloat
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;F)F	a	getAsFloat
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)J	f	convertToLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)J	n	getAsLong
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;J)J	a	getAsLong
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)I	g	convertToInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)I	o	getAsInt
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;I)I	a	getAsInt
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)B	h	convertToByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)B	p	getAsByte
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;B)B	a	getAsByte
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)C	i	convertToCharacter
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)C	q	getAsCharacter
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;C)C	a	getAsCharacter
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal;	j	convertToBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal;	r	getAsBigDecimal
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal;	a	getAsBigDecimal
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger;	k	convertToBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger;	s	getAsBigInteger
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;	a	getAsBigInteger
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)S	l	convertToShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)S	t	getAsShort
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;S)S	a	getAsShort
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject;	m	convertToJsonObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject;	u	getAsJsonObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject;	a	getAsJsonObject
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray;	n	convertToJsonArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray;	v	getAsJsonArray
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray;	a	getAsJsonArray
	m	(Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	convertToObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
	m	(Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object;	a	getAsObject
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	d	getType
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromNullableJson
	m	(Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	b	fromJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object;	a	fromNullableJson
	m	(Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;	a	fromJson
	m	(Ljava/lang/String;)Lcom/google/gson/JsonObject;	a	parse
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonObject;	a	parse
	m	(Ljava/lang/String;)Lcom/google/gson/JsonArray;	b	parseArray
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonArray;	b	parseArray
	m	(Lcom/google/gson/JsonElement;)Ljava/lang/String;	e	toStableString
	m	(Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V	a	writeValue
	m	(Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection;	a	sortByKeyIfNeeded
	m	(Lcom/google/gson/JsonElement;I)Z	a	encodesLongerThan
	m	(Ljava/lang/String;Ljava/lang/String;)Lcom/google/gson/JsonSyntaxException;	a	lambda$convertToItem$0
	m	()V	<clinit>	<clinit>
c	bbq$a	net/minecraft/util/GsonHelper$CountedAppendable
	f	I	a	totalCount
	f	I	b	limit
	m	(I)V	<init>	<init>
	m	(I)Ljava/lang/Appendable;	a	accountChars
	m	(Ljava/lang/CharSequence;)Ljava/lang/Appendable;	append	append
	m	(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;	append	append
	m	(C)Ljava/lang/Appendable;	append	append
c	bbr	net/minecraft/util/HashOps
	f	B	d	TAG_EMPTY
	f	B	e	TAG_MAP_START
	f	B	f	TAG_MAP_END
	f	B	g	TAG_LIST_START
	f	B	h	TAG_LIST_END
	f	B	i	TAG_BYTE
	f	B	j	TAG_SHORT
	f	B	k	TAG_INT
	f	B	l	TAG_LONG
	f	B	m	TAG_FLOAT
	f	B	n	TAG_DOUBLE
	f	B	o	TAG_STRING
	f	B	p	TAG_BOOLEAN
	f	B	q	TAG_BYTE_ARRAY_START
	f	B	r	TAG_BYTE_ARRAY_END
	f	B	s	TAG_INT_ARRAY_START
	f	B	t	TAG_INT_ARRAY_END
	f	B	u	TAG_LONG_ARRAY_START
	f	B	v	TAG_LONG_ARRAY_END
	f	[B	w	EMPTY_PAYLOAD
	f	[B	x	FALSE_PAYLOAD
	f	[B	y	TRUE_PAYLOAD
	f	[B	a	EMPTY_MAP_PAYLOAD
	f	[B	b	EMPTY_LIST_PAYLOAD
	f	Lcom/mojang/serialization/DataResult;	z	UNSUPPORTED_OPERATION_ERROR
	f	Ljava/util/Comparator;	A	HASH_COMPARATOR
	f	Ljava/util/Comparator;	B	MAP_ENTRY_ORDER
	f	Ljava/util/Comparator;	C	MAPLIKE_ENTRY_ORDER
	f	Lbbr;	c	CRC32C_INSTANCE
	f	Lcom/google/common/hash/HashFunction;	D	hashFunction
	f	Lcom/google/common/hash/HashCode;	E	empty
	f	Lcom/google/common/hash/HashCode;	F	emptyMap
	f	Lcom/google/common/hash/HashCode;	G	emptyList
	f	Lcom/google/common/hash/HashCode;	H	trueHash
	f	Lcom/google/common/hash/HashCode;	I	falseHash
	m	(Lcom/google/common/hash/HashFunction;)V	<init>	<init>
	m	()Lcom/google/common/hash/HashCode;	a	empty
	m	()Lcom/google/common/hash/HashCode;	b	emptyMap
	m	()Lcom/google/common/hash/HashCode;	c	emptyList
	m	(Ljava/lang/Number;)Lcom/google/common/hash/HashCode;	a	createNumeric
	m	(B)Lcom/google/common/hash/HashCode;	a	createByte
	m	(S)Lcom/google/common/hash/HashCode;	a	createShort
	m	(I)Lcom/google/common/hash/HashCode;	a	createInt
	m	(J)Lcom/google/common/hash/HashCode;	a	createLong
	m	(F)Lcom/google/common/hash/HashCode;	a	createFloat
	m	(D)Lcom/google/common/hash/HashCode;	a	createDouble
	m	(Ljava/lang/String;)Lcom/google/common/hash/HashCode;	a	createString
	m	(Z)Lcom/google/common/hash/HashCode;	a	createBoolean
	m	(Lcom/google/common/hash/Hasher;Ljava/util/Map;)Lcom/google/common/hash/Hasher;	a	hashMap
	m	(Lcom/google/common/hash/Hasher;Ljava/util/stream/Stream;)Lcom/google/common/hash/Hasher;	a	hashMap
	m	(Ljava/util/stream/Stream;)Lcom/google/common/hash/HashCode;	a	createMap
	m	(Ljava/util/Map;)Lcom/google/common/hash/HashCode;	a	createMap
	m	(Ljava/util/stream/Stream;)Lcom/google/common/hash/HashCode;	b	createList
	m	(Ljava/nio/ByteBuffer;)Lcom/google/common/hash/HashCode;	a	createByteList
	m	(Ljava/util/stream/IntStream;)Lcom/google/common/hash/HashCode;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lcom/google/common/hash/HashCode;	a	createLongList
	m	(Lcom/google/common/hash/HashCode;Ljava/lang/String;)Lcom/google/common/hash/HashCode;	a	remove
	m	()Lcom/mojang/serialization/RecordBuilder;	mapBuilder	mapBuilder
	m	()Lcom/mojang/serialization/ListBuilder;	listBuilder	listBuilder
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/google/common/hash/HashCode;)Ljava/lang/Object;	a	convertTo
	m	(Lcom/google/common/hash/HashCode;Ljava/lang/Number;)Ljava/lang/Number;	a	getNumberValue
	m	(Lcom/google/common/hash/HashCode;Ljava/lang/String;Lcom/google/common/hash/HashCode;)Lcom/google/common/hash/HashCode;	a	set
	m	(Lcom/google/common/hash/HashCode;Ljava/lang/String;Ljava/util/function/Function;)Lcom/google/common/hash/HashCode;	a	update
	m	(Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;Ljava/util/function/Function;)Lcom/google/common/hash/HashCode;	a	updateGeneric
	m	()Lcom/mojang/serialization/DataResult;	d	unsupported
	m	(Lcom/google/common/hash/HashCode;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	b	get
	m	(Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	a	getGeneric
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	b	getBooleanValue
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	c	getStringValue
	m	(Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	b	mergeToList
	m	(Lcom/google/common/hash/HashCode;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lcom/google/common/hash/HashCode;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lcom/google/common/hash/HashCode;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	d	getMapValues
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	e	getMapEntries
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	f	getStream
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	g	getList
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	h	getMap
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	i	getByteBuffer
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	j	getIntStream
	m	(Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	k	getLongStream
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;	updateGeneric	updateGeneric
	m	(Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object;	update	update
	m	(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	set	set
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getGeneric	getGeneric
	m	(Ljava/lang/Object;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	get	get
	m	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;	remove	remove
	m	(Ljava/util/stream/LongStream;)Ljava/lang/Object;	createLongList	createLongList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getLongStream	getLongStream
	m	(Ljava/util/stream/IntStream;)Ljava/lang/Object;	createIntList	createIntList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getIntStream	getIntStream
	m	(Ljava/nio/ByteBuffer;)Ljava/lang/Object;	createByteList	createByteList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getByteBuffer	getByteBuffer
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createList	createList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getList	getList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStream	getStream
	m	(Ljava/util/Map;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMap	getMap
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapEntries	getMapEntries
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapValues	getMapValues
	m	(Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/String;)Ljava/lang/Object;	createString	createString
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStringValue	getStringValue
	m	(Z)Ljava/lang/Object;	createBoolean	createBoolean
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getBooleanValue	getBooleanValue
	m	(D)Ljava/lang/Object;	createDouble	createDouble
	m	(F)Ljava/lang/Object;	createFloat	createFloat
	m	(J)Ljava/lang/Object;	createLong	createLong
	m	(I)Ljava/lang/Object;	createInt	createInt
	m	(S)Ljava/lang/Object;	createShort	createShort
	m	(B)Ljava/lang/Object;	createByte	createByte
	m	(Ljava/lang/Number;)Ljava/lang/Object;	createNumeric	createNumeric
	m	(Ljava/lang/Object;Ljava/lang/Number;)Ljava/lang/Number;	getNumberValue	getNumberValue
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getNumberValue	getNumberValue
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	convertTo	convertTo
	m	()Ljava/lang/Object;	emptyList	emptyList
	m	()Ljava/lang/Object;	emptyMap	emptyMap
	m	()Ljava/lang/Object;	empty	empty
	m	(Lcom/google/common/hash/Hasher;Lcom/google/common/hash/HashCode;)V	a	lambda$createList$3
	m	(Lcom/google/common/hash/Hasher;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$hashMap$2
	m	(Lcom/google/common/hash/Hasher;Ljava/util/Map$Entry;)V	a	lambda$hashMap$1
	m	()Ljava/lang/String;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bbr$a	net/minecraft/util/HashOps$ListHashBuilder
	f	Z	b	$assertionsDisabled
	f	Lbbr;	c	this$0
	m	(Lbbr;)V	<init>	<init>
	m	()Lcom/google/common/hash/Hasher;	b	initBuilder
	m	(Lcom/google/common/hash/Hasher;Lcom/google/common/hash/HashCode;)Lcom/google/common/hash/Hasher;	a	append
	m	(Lcom/google/common/hash/Hasher;Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	b	build
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	build
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	append
	m	()Ljava/lang/Object;	a	initBuilder
	m	()V	<clinit>	<clinit>
c	bbr$b	net/minecraft/util/HashOps$MapHashBuilder
	f	Z	a	$assertionsDisabled
	f	Lbbr;	b	this$0
	m	(Lbbr;)V	<init>	<init>
	m	()Ljava/util/List;	a	initBuilder
	m	(Lcom/google/common/hash/HashCode;Lcom/google/common/hash/HashCode;Ljava/util/List;)Ljava/util/List;	a	append
	m	(Ljava/util/List;Lcom/google/common/hash/HashCode;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	append	append
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	()Ljava/lang/Object;	initBuilder	initBuilder
	m	()V	<clinit>	<clinit>
c	bbs	net/minecraft/util/HttpUtil
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/net/URL;Ljava/util/Map;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;ILjava/net/Proxy;Lbbs$a;)Ljava/nio/file/Path;	a	downloadFile
	m	(Ljava/nio/file/Path;)V	a	updateModificationTime
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;)Lcom/google/common/hash/HashCode;	a	hashFile
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashFunction;Lcom/google/common/hash/HashCode;)Z	a	checkExistingFile
	m	(Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Ljava/nio/file/Path;	a	cachedFilePath
	m	(Lcom/google/common/hash/HashFunction;ILbbs$a;Ljava/io/InputStream;Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode;	a	downloadAndHash
	m	()I	a	getAvailablePort
	m	(I)Z	a	isPortAvailable
	m	()V	<clinit>	<clinit>
c	bbs$a	net/minecraft/util/HttpUtil$DownloadProgressListener
	m	()V	a	requestStart
	m	(Ljava/util/OptionalLong;)V	a	downloadStart
	m	(J)V	a	downloadedBytes
	m	(Z)V	a	requestFinished
c	bbt	net/minecraft/util/InclusiveRange
	f	Ljava/lang/Comparable;	b	minInclusive
	f	Ljava/lang/Comparable;	c	maxInclusive
	f	Lcom/mojang/serialization/Codec;	a	INT
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)V	<init>	<init>
	m	(Ljava/lang/Comparable;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult;	a	create
	m	(Ljava/lang/Comparable;)Z	a	isValueInRange
	m	(Lbbt;)Z	a	contains
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Comparable;	a	minInclusive
	m	()Ljava/lang/Comparable;	b	maxInclusive
	m	()Ljava/lang/String;	c	lambda$create$3
	m	(Ljava/lang/Comparable;Ljava/lang/Comparable;Lbbt;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
	m	(Ljava/lang/Comparable;Lbbt;)Ljava/lang/String;	a	lambda$codec$1
	m	(Ljava/lang/Comparable;Lbbt;)Ljava/lang/String;	b	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	bbu	net/minecraft/util/KeyDispatchDataCodec
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/MapCodec;)Lbbu;	a	of
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	bbv	net/minecraft/util/LazyLoadedValue
	f	Ljava/util/function/Supplier;	a	factory
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Ljava/lang/Object;	a	get
c	bbw	net/minecraft/util/LenientJsonParser
	m	()V	<init>	<init>
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonElement;	a	parse
	m	(Ljava/lang/String;)Lcom/google/gson/JsonElement;	a	parse
c	bbx	net/minecraft/util/LinearCongruentialGenerator
	f	J	a	MULTIPLIER
	f	J	b	INCREMENT
	m	()V	<init>	<init>
	m	(JJ)J	a	next
c	bby	net/minecraft/util/ListAndDeque
	m	()Lbby;	b	reversed
	m	()Ljava/lang/Object;	getFirst	getFirst
	m	()Ljava/lang/Object;	getLast	getLast
	m	(Ljava/lang/Object;)V	addFirst	addFirst
	m	(Ljava/lang/Object;)V	addLast	addLast
	m	()Ljava/lang/Object;	removeFirst	removeFirst
	m	()Ljava/lang/Object;	removeLast	removeLast
	m	(Ljava/lang/Object;)Z	offer	offer
	m	()Ljava/lang/Object;	remove	remove
	m	()Ljava/lang/Object;	poll	poll
	m	()Ljava/lang/Object;	element	element
	m	()Ljava/lang/Object;	peek	peek
	m	(Ljava/lang/Object;)V	push	push
	m	()Ljava/lang/Object;	pop	pop
	m	()Ljava/util/List;	reversed	reversed
	m	()Ljava/util/SequencedCollection;	reversed	reversed
	m	()Ljava/util/Deque;	reversed	reversed
c	bbz	net/minecraft/util/MemoryReserve
	f	[B	a	reserve
	m	()V	<init>	<init>
	m	()V	a	allocate
	m	()V	b	release
c	bca	net/minecraft/util/ModCheck
	f	Lbca$a;	a	confidence
	f	Ljava/lang/String;	b	description
	m	(Lbca$a;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lbca;	a	identify
	m	()Z	a	shouldReportAsModified
	m	(Lbca;)Lbca;	a	merge
	m	()Ljava/lang/String;	b	fullDescription
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbca$a;	c	confidence
	m	()Ljava/lang/String;	d	description
c	bca$a	net/minecraft/util/ModCheck$Confidence
	f	Lbca$a;	a	PROBABLY_NOT
	f	Lbca$a;	b	VERY_LIKELY
	f	Lbca$a;	c	DEFINITELY
	f	Ljava/lang/String;	d	description
	f	Z	e	shouldReportAsModified
	f	[Lbca$a;	f	$VALUES
	m	()[Lbca$a;	values	values
	m	(Ljava/lang/String;)Lbca$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
	m	()[Lbca$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bcb	net/minecraft/util/Mth
	f	J	k	UUID_VERSION
	f	J	l	UUID_VERSION_TYPE_4
	f	J	m	UUID_VARIANT
	f	J	n	UUID_VARIANT_2
	f	F	a	PI
	f	F	b	HALF_PI
	f	F	c	TWO_PI
	f	F	d	DEG_TO_RAD
	f	F	e	RAD_TO_DEG
	f	F	f	EPSILON
	f	F	g	SQRT_OF_TWO
	f	F	o	SIN_SCALE
	f	Lorg/joml/Vector3f;	h	Y_AXIS
	f	Lorg/joml/Vector3f;	i	X_AXIS
	f	Lorg/joml/Vector3f;	j	Z_AXIS
	f	[F	p	SIN
	f	Lbck;	q	RANDOM
	f	[I	r	MULTIPLY_DE_BRUIJN_BIT_POSITION
	f	D	s	ONE_SIXTH
	f	I	t	FRAC_EXP
	f	I	u	LUT_SIZE
	f	D	v	FRAC_BIAS
	f	[D	w	ASIN_TAB
	f	[D	x	COS_TAB
	m	()V	<init>	<init>
	m	(F)F	a	sin
	m	(F)F	b	cos
	m	(F)F	c	sqrt
	m	(F)I	d	floor
	m	(D)I	a	floor
	m	(D)J	b	lfloor
	m	(F)F	e	abs
	m	(I)I	a	abs
	m	(F)I	f	ceil
	m	(D)I	c	ceil
	m	(III)I	a	clamp
	m	(JJJ)J	a	clamp
	m	(FFF)F	a	clamp
	m	(DDD)D	a	clamp
	m	(DDD)D	b	clampedLerp
	m	(FFF)F	b	clampedLerp
	m	(DD)D	a	absMax
	m	(II)I	a	floorDiv
	m	(Lbck;II)I	a	nextInt
	m	(Lbck;FF)F	a	nextFloat
	m	(Lbck;DD)D	a	nextDouble
	m	(FF)Z	a	equal
	m	(DD)Z	b	equal
	m	(II)I	b	positiveModulo
	m	(FF)F	b	positiveModulo
	m	(DD)D	c	positiveModulo
	m	(II)Z	c	isMultipleOf
	m	(F)B	g	packDegrees
	m	(B)F	a	unpackDegrees
	m	(I)I	b	wrapDegrees
	m	(J)F	a	wrapDegrees
	m	(F)F	h	wrapDegrees
	m	(D)D	d	wrapDegrees
	m	(FF)F	c	degreesDifference
	m	(FF)F	d	degreesDifferenceAbs
	m	(FFF)F	c	rotateIfNecessary
	m	(FFF)F	d	approach
	m	(FFF)F	e	approachDegrees
	m	(Ljava/lang/String;I)I	a	getInt
	m	(I)I	c	smallestEncompassingPowerOfTwo
	m	(I)I	d	smallestSquareSide
	m	(I)Z	e	isPowerOfTwo
	m	(I)I	f	ceillog2
	m	(I)I	g	log2
	m	(F)F	i	frac
	m	(D)D	e	frac
	m	(Lkg;)J	a	getSeed
	m	(III)J	b	getSeed
	m	(Lbck;)Ljava/util/UUID;	a	createInsecureUUID
	m	()Ljava/util/UUID;	a	createInsecureUUID
	m	(DDD)D	c	inverseLerp
	m	(FFF)F	f	inverseLerp
	m	(Lfis;Lfis;Lfin;)Z	a	rayIntersectsAABB
	m	(DD)D	d	atan2
	m	(F)F	j	invSqrt
	m	(D)D	f	invSqrt
	m	(D)D	g	fastInvSqrt
	m	(F)F	k	fastInvCubeRoot
	m	(FFF)I	g	hsvToRgb
	m	(FFFI)I	a	hsvToArgb
	m	(I)I	h	murmurHash3Mixer
	m	(IILjava/util/function/IntPredicate;)I	a	binarySearch
	m	(FII)I	a	lerpInt
	m	(FII)I	b	lerpDiscrete
	m	(FFF)F	h	lerp
	m	(DLfis;Lfis;)Lfis;	a	lerp
	m	(DDD)D	d	lerp
	m	(DDDDDD)D	a	lerp2
	m	(DDDDDDDDDDD)D	a	lerp3
	m	(FFFFF)F	a	catmullrom
	m	(D)D	h	smoothstep
	m	(D)D	i	smoothstepDerivative
	m	(D)I	j	sign
	m	(FFF)F	i	rotLerp
	m	(DDD)D	e	rotLerp
	m	(FFF)F	j	rotLerpRad
	m	(FF)F	e	triangleWave
	m	(F)F	l	square
	m	(D)D	k	square
	m	(I)I	i	square
	m	(J)J	b	square
	m	(DDDDD)D	a	clampedMap
	m	(FFFFF)F	b	clampedMap
	m	(DDDDD)D	b	map
	m	(FFFFF)F	c	map
	m	(D)D	l	wobble
	m	(II)I	d	roundToward
	m	(II)I	e	positiveCeilDiv
	m	(Lbck;II)I	b	randomBetweenInclusive
	m	(Lbck;FF)F	b	randomBetween
	m	(Lbck;FF)F	c	normal
	m	(DD)D	e	lengthSquared
	m	(DD)D	f	length
	m	(FF)F	f	length
	m	(DDD)D	f	lengthSquared
	m	(DDD)D	g	length
	m	(FFF)F	k	lengthSquared
	m	(DI)I	a	quantize
	m	(III)Ljava/util/stream/IntStream;	c	outFromOrigin
	m	(IIII)Ljava/util/stream/IntStream;	a	outFromOrigin
	m	(Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf;	a	rotationAroundAxis
	m	(Lorg/apache/commons/lang3/math/Fraction;I)I	a	mulAndTruncate
	m	(F)F	m	easeInOutSine
	m	(IIIII)I	a	lambda$outFromOrigin$2
	m	(IIII)Z	b	lambda$outFromOrigin$1
	m	([F)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bcc	net/minecraft/util/NativeModuleLister
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	LANG_MASK
	f	I	c	DEFAULT_LANG
	f	I	d	CODEPAGE_MASK
	f	I	e	DEFAULT_CODEPAGE
	m	()V	<init>	<init>
	m	()Ljava/util/List;	a	listModules
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	tryGetVersion
	m	(Ljava/lang/String;II)Ljava/lang/String;	a	langTableKey
	m	([I)Ljava/util/OptionalInt;	a	findLangAndCodepage
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer;	a	queryVersionValue
	m	(Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String;	b	queryVersionString
	m	(Lq;)V	a	addCrashSection
	m	()Ljava/lang/String;	b	lambda$addCrashSection$2
	m	(Lbcc$a;)Ljava/lang/String;	a	lambda$addCrashSection$1
	m	(Lbcc$a;)Ljava/lang/String;	b	lambda$addCrashSection$0
	m	()V	<clinit>	<clinit>
c	bcc$a	net/minecraft/util/NativeModuleLister$NativeModuleInfo
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Optional;	b	version
	m	(Ljava/lang/String;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Lbcc$b;)Ljava/lang/String;	a	lambda$toString$0
c	bcc$b	net/minecraft/util/NativeModuleLister$NativeModuleVersion
	f	Ljava/lang/String;	a	description
	f	Ljava/lang/String;	b	version
	f	Ljava/lang/String;	c	company
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	bcd	net/minecraft/util/NullOps
	f	Lbcd;	a	INSTANCE
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Lbdk;)Ljava/lang/Object;	a	convertTo
	m	()Lbdk;	a	empty
	m	()Lbdk;	b	emptyMap
	m	()Lbdk;	c	emptyList
	m	(Ljava/lang/Number;)Lbdk;	a	createNumeric
	m	(B)Lbdk;	a	createByte
	m	(S)Lbdk;	a	createShort
	m	(I)Lbdk;	a	createInt
	m	(J)Lbdk;	a	createLong
	m	(F)Lbdk;	a	createFloat
	m	(D)Lbdk;	a	createDouble
	m	(Z)Lbdk;	a	createBoolean
	m	(Ljava/lang/String;)Lbdk;	a	createString
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	a	getNumberValue
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	b	getBooleanValue
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	c	getStringValue
	m	(Lbdk;Lbdk;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lbdk;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	mergeToList
	m	(Lbdk;Lbdk;Lbdk;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lbdk;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lbdk;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	mergeToMap
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	d	getMapValues
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	e	getMapEntries
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	f	getMap
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	g	getStream
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	h	getList
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	i	getByteBuffer
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	j	getIntStream
	m	(Lbdk;)Lcom/mojang/serialization/DataResult;	k	getLongStream
	m	(Ljava/util/stream/Stream;)Lbdk;	a	createMap
	m	(Ljava/util/Map;)Lbdk;	a	createMap
	m	(Ljava/util/stream/Stream;)Lbdk;	b	createList
	m	(Ljava/nio/ByteBuffer;)Lbdk;	a	createByteList
	m	(Ljava/util/stream/IntStream;)Lbdk;	a	createIntList
	m	(Ljava/util/stream/LongStream;)Lbdk;	a	createLongList
	m	(Lbdk;Ljava/lang/String;)Lbdk;	a	remove
	m	()Lcom/mojang/serialization/RecordBuilder;	mapBuilder	mapBuilder
	m	()Lcom/mojang/serialization/ListBuilder;	listBuilder	listBuilder
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;	remove	remove
	m	(Ljava/util/stream/LongStream;)Ljava/lang/Object;	createLongList	createLongList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getLongStream	getLongStream
	m	(Ljava/util/stream/IntStream;)Ljava/lang/Object;	createIntList	createIntList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getIntStream	getIntStream
	m	(Ljava/nio/ByteBuffer;)Ljava/lang/Object;	createByteList	createByteList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getByteBuffer	getByteBuffer
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createList	createList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getList	getList
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStream	getStream
	m	(Ljava/util/Map;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMap	getMap
	m	(Ljava/util/stream/Stream;)Ljava/lang/Object;	createMap	createMap
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapEntries	getMapEntries
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getMapValues	getMapValues
	m	(Ljava/lang/Object;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/Map;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToMap	mergeToMap
	m	(Ljava/lang/Object;Ljava/util/List;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	mergeToList	mergeToList
	m	(Ljava/lang/String;)Ljava/lang/Object;	createString	createString
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getStringValue	getStringValue
	m	(Z)Ljava/lang/Object;	createBoolean	createBoolean
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getBooleanValue	getBooleanValue
	m	(D)Ljava/lang/Object;	createDouble	createDouble
	m	(F)Ljava/lang/Object;	createFloat	createFloat
	m	(J)Ljava/lang/Object;	createLong	createLong
	m	(I)Ljava/lang/Object;	createInt	createInt
	m	(S)Ljava/lang/Object;	createShort	createShort
	m	(B)Ljava/lang/Object;	createByte	createByte
	m	(Ljava/lang/Number;)Ljava/lang/Object;	createNumeric	createNumeric
	m	(Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	getNumberValue	getNumberValue
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	convertTo	convertTo
	m	()Ljava/lang/Object;	emptyList	emptyList
	m	()Ljava/lang/Object;	emptyMap	emptyMap
	m	()Ljava/lang/Object;	empty	empty
	m	()Ljava/lang/String;	d	lambda$getLongStream$10
	m	()Ljava/lang/String;	e	lambda$getIntStream$9
	m	()Ljava/lang/String;	f	lambda$getByteBuffer$8
	m	()Ljava/lang/String;	g	lambda$getList$7
	m	()Ljava/lang/String;	h	lambda$getStream$6
	m	()Ljava/lang/String;	i	lambda$getMap$5
	m	()Ljava/lang/String;	j	lambda$getMapEntries$4
	m	()Ljava/lang/String;	k	lambda$getMapValues$3
	m	()Ljava/lang/String;	l	lambda$getStringValue$2
	m	()Ljava/lang/String;	m	lambda$getBooleanValue$1
	m	()Ljava/lang/String;	n	lambda$getNumberValue$0
	m	()V	<clinit>	<clinit>
c	bcd$a	net/minecraft/util/NullOps$NullListBuilder
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Lbdk;	b	initBuilder
	m	(Lbdk;Lbdk;)Lbdk;	a	append
	m	(Lbdk;Lbdk;)Lcom/mojang/serialization/DataResult;	b	build
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	b	build
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	append
	m	()Ljava/lang/Object;	a	initBuilder
c	bcd$b	net/minecraft/util/NullOps$NullMapBuilder
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Lbdk;	a	initBuilder
	m	(Lbdk;Lbdk;Lbdk;)Lbdk;	a	append
	m	(Lbdk;Lbdk;)Lcom/mojang/serialization/DataResult;	a	build
	m	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	append	append
	m	(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	build	build
	m	()Ljava/lang/Object;	initBuilder	initBuilder
c	bce	net/minecraft/util/OptionEnum
	m	()I	b	getId
	m	()Ljava/lang/String;	a	getKey
	m	()Lxo;	d	getCaption
c	bcf	net/minecraft/util/ParticleUtils
	m	()V	<init>	<init>
	m	(Ldmu;Ljb;Lmc;Lbwo;)V	a	spawnParticlesOnBlockFaces
	m	(Ldmu;Ljb;Lmc;Lbwo;Ljh;Ljava/util/function/Supplier;D)V	a	spawnParticlesOnBlockFace
	m	(Lbck;)Lfis;	a	getRandomSpeedRanges
	m	(Ljh$a;Ldmu;Ljb;DLmc;Lbwu;)V	a	spawnParticlesAlongAxis
	m	(Ldmu;Ljb;Ljh;Lmc;Lfis;D)V	a	spawnParticleOnFace
	m	(Ldmu;Ljb;Lbck;Lmc;)V	a	spawnParticleBelow
	m	(Ldmv;Ljb;ILmc;)V	a	spawnParticleInBlock
	m	(Ldmv;Ljb;IDDZLmc;)V	a	spawnParticles
	m	(Ldmv;Ljb;I)V	a	spawnSmashAttackParticles
	m	(Ldmu;)Lfis;	a	lambda$spawnParticlesOnBlockFaces$0
c	bcg	net/minecraft/util/PlaceholderLookupProvider
	f	Ljn$a;	a	context
	f	Lbcg$a;	b	lookup
	f	Ljava/util/Map;	c	holders
	f	Ljava/util/Map;	d	holderSets
	m	(Ljn$a;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	(Lcom/mojang/serialization/DynamicOps;)Lamc;	a	createSerializationContext
	m	()Lbcl;	a	createSwapper
	m	()Z	b	hasRegisteredPlaceholders
c	bcg$1	net/minecraft/util/PlaceholderLookupProvider$1
	f	Lbcg;	a	this$0
	m	(Lbcg;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	lookup
	m	()Ljava/util/Optional;	a	lambda$lookup$0
c	bcg$2	net/minecraft/util/PlaceholderLookupProvider$2
	f	Lbcg;	a	this$0
	m	(Lbcg;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljn$a;)Lcom/mojang/serialization/DataResult;	a	swapTo
	m	(Lcom/mojang/serialization/Codec;Ljn$a;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$swapTo$0
c	bcg$a	net/minecraft/util/PlaceholderLookupProvider$UniversalLookup
	f	Lbcg;	a	this$0
	m	(Lbcg;)V	<init>	<init>
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	(Lamd;)Ljl$c;	b	getOrThrow
	m	(Lamd;)Ljl$c;	c	getOrCreate
	m	(Lbae;)Ljava/util/Optional;	a	get
	m	(Lbae;)Ljp$c;	b	getOrThrow
	m	(Lbae;)Ljp$c;	c	getOrCreate
	m	()Ljm;	a	castAsLookup
	m	()Ljo;	b	castAsOwner
	m	(Lbae;)Ljp$c;	d	lambda$getOrCreate$1
	m	(Lamd;)Ljl$c;	d	lambda$getOrCreate$0
c	bch	net/minecraft/util/PngInfo
	f	I	a	width
	f	I	b	height
	f	Ljava/util/HexFormat;	c	FORMAT
	f	J	d	PNG_HEADER
	f	I	e	IHDR_TYPE
	f	I	f	IHDR_SIZE
	m	(II)V	<init>	<init>
	m	(Ljava/io/InputStream;)Lbch;	a	fromStream
	m	([B)Lbch;	a	fromBytes
	m	(Ljava/nio/ByteBuffer;)V	a	validateHeader
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	width
	m	()I	b	height
	m	()V	<clinit>	<clinit>
c	bci	net/minecraft/util/ProblemReporter
	f	Lbci;	a	DISCARDING
	m	(Lbci$f;)Lbci;	a	forChild
	m	(Lbci$g;)V	a	report
	m	()V	<clinit>	<clinit>
c	bci$1	net/minecraft/util/ProblemReporter$1
	m	()V	<init>	<init>
	m	(Lbci$f;)Lbci;	a	forChild
	m	(Lbci$g;)V	a	report
c	bci$a	net/minecraft/util/ProblemReporter$Collector
	f	Lbci$f;	b	EMPTY_ROOT
	f	Lbci$a;	c	parent
	f	Lbci$f;	d	element
	f	Ljava/util/Set;	e	problems
	m	()V	<init>	<init>
	m	(Lbci$f;)V	<init>	<init>
	m	(Lbci$a;Lbci$f;)V	<init>	<init>
	m	(Lbci$f;)Lbci;	a	forChild
	m	(Lbci$g;)V	a	report
	m	()Z	a	isEmpty
	m	(Ljava/util/function/BiConsumer;)V	a	forEach
	m	()Ljava/lang/String;	b	getReport
	m	()Ljava/lang/String;	c	getTreeReport
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	lambda$getReport$1
	m	()Ljava/lang/String;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bci$a$a	net/minecraft/util/ProblemReporter$Collector$Entry
	f	Lbci$a;	a	source
	f	Lbci$g;	b	problem
	m	(Lbci$a;Lbci$g;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbci$a;	a	source
	m	()Lbci$g;	b	problem
c	bci$a$b	net/minecraft/util/ProblemReporter$Collector$ProblemTreeNode
	f	Lbci$f;	a	element
	f	Ljava/util/List;	b	problems
	f	Ljava/util/Map;	c	children
	m	(Lbci$f;)V	<init>	<init>
	m	(Lbci$f;Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
	m	(Lbci$f;)Lbci$a$b;	a	child
	m	()Ljava/util/List;	a	getLines
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbci$f;	b	element
	m	()Ljava/util/List;	c	problems
	m	()Ljava/util/Map;	d	children
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$getLines$2
	m	(Ljava/util/List;Lbci$f;Lbci$a$b;)V	a	lambda$getLines$1
	m	(Ljava/util/List;Lbci$f;Lbci$a$b;)V	b	lambda$getLines$0
c	bci$b	net/minecraft/util/ProblemReporter$ElementReferencePathElement
	f	Lamd;	a	id
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	id
c	bci$c	net/minecraft/util/ProblemReporter$FieldPathElement
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
c	bci$d	net/minecraft/util/ProblemReporter$IndexedFieldPathElement
	f	Ljava/lang/String;	a	name
	f	I	b	index
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()I	b	index
c	bci$e	net/minecraft/util/ProblemReporter$IndexedPathElement
	f	I	a	index
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	index
c	bci$f	net/minecraft/util/ProblemReporter$PathElement
	m	()Ljava/lang/String;	get	get
c	bci$g	net/minecraft/util/ProblemReporter$Problem
	m	()Ljava/lang/String;	a	description
c	bci$h	net/minecraft/util/ProblemReporter$RootElementPathElement
	f	Lamd;	a	id
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	id
c	bci$i	net/minecraft/util/ProblemReporter$RootFieldPathElement
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
c	bci$j	net/minecraft/util/ProblemReporter$ScopedCollector
	f	Lorg/slf4j/Logger;	c	logger
	m	(Lorg/slf4j/Logger;)V	<init>	<init>
	m	(Lbci$f;Lorg/slf4j/Logger;)V	<init>	<init>
	m	()V	close	close
c	bcj	net/minecraft/util/ProgressListener
	m	(Lxo;)V	a	progressStartNoAbort
	m	(Lxo;)V	b	progressStart
	m	(Lxo;)V	c	progressStage
	m	(I)V	a	progressStagePercentage
	m	()V	a	stop
c	bck	net/minecraft/util/RandomSource
	f	D	a	GAUSSIAN_SPREAD_FACTOR
	m	()Lbck;	a	create
	m	()Lbck;	b	createThreadSafe
	m	(J)Lbck;	a	create
	m	()Lbck;	c	createNewThreadLocalInstance
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	()I	f	nextInt
	m	(I)I	a	nextInt
	m	(II)I	a	nextIntBetweenInclusive
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	m	(DD)D	a	triangle
	m	(FF)F	a	triangle
	m	(I)V	b	consumeCount
	m	(II)I	b	nextInt
c	bcl	net/minecraft/util/RegistryContextSwapper
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Ljn$a;)Lcom/mojang/serialization/DataResult;	a	swapTo
c	bcm	net/minecraft/util/ResourceLocationPattern
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	namespacePattern
	f	Ljava/util/function/Predicate;	c	namespacePredicate
	f	Ljava/util/Optional;	d	pathPattern
	f	Ljava/util/function/Predicate;	e	pathPredicate
	f	Ljava/util/function/Predicate;	f	locationPredicate
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/util/function/Predicate;	a	namespacePredicate
	m	()Ljava/util/function/Predicate;	b	pathPredicate
	m	()Ljava/util/function/Predicate;	c	locationPredicate
	m	(Lame;)Z	a	lambda$new$5
	m	(Ljava/lang/String;)Z	a	lambda$new$4
	m	(Ljava/lang/String;)Z	b	lambda$new$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lbcm;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lbcm;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bcn	net/minecraft/util/SegmentedAnglePrecision
	f	I	a	mask
	f	I	b	precision
	f	F	c	degreeToAngle
	f	F	d	angleToDegree
	m	(I)V	<init>	<init>
	m	(II)Z	a	isSameAxis
	m	(Ljh;)I	a	fromDirection
	m	(F)I	a	fromDegreesWithTurns
	m	(F)I	b	fromDegrees
	m	(I)F	a	toDegreesWithTurns
	m	(I)F	b	toDegrees
	m	(I)I	c	normalize
	m	()I	a	getMask
c	bco	net/minecraft/util/SequencedPriorityIterator
	f	I	a	MIN_PRIO
	f	Ljava/util/Deque;	b	highestPrioQueue
	f	I	c	highestPrio
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	queuesByPriority
	m	()V	<init>	<init>
	m	(Ljava/lang/Object;I)V	a	add
	m	()Ljava/lang/Object;	computeNext	computeNext
	m	()V	a	switchCacheToNextHighestPrioQueue
	m	(I)Ljava/util/Deque;	a	lambda$add$0
c	bcp	net/minecraft/util/SignatureUpdater
	m	(Lbcp$a;)V	update	update
c	bcp$a	net/minecraft/util/SignatureUpdater$Output
	m	([B)V	update	update
c	bcq	net/minecraft/util/SignatureValidator
	f	Lbcq;	a	NO_VALIDATION
	f	Lorg/slf4j/Logger;	b	LOGGER
	m	(Lbcp;[B)Z	validate	validate
	m	([B[B)Z	a	validate
	m	(Lbcp;[BLjava/security/Signature;)Z	a	verifySignature
	m	(Ljava/security/PublicKey;Ljava/lang/String;)Lbcq;	a	from
	m	(Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lbcq;	a	from
	m	(Ljava/util/Collection;Lbcp;[B)Z	a	lambda$from$4
	m	(Lbcp;[BLcom/mojang/authlib/yggdrasil/ServicesKeyInfo;)Z	a	lambda$from$3
	m	(Ljava/lang/String;Ljava/security/PublicKey;Lbcp;[B)Z	a	lambda$from$2
	m	([BLbcp$a;)V	a	lambda$validate$1
	m	(Lbcp;[B)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bcr	net/minecraft/util/Signer
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Lbcp;)[B	sign	sign
	m	([B)[B	a	sign
	m	(Ljava/security/PrivateKey;Ljava/lang/String;)Lbcr;	a	from
	m	(Ljava/lang/String;Ljava/security/PrivateKey;Lbcp;)[B	a	lambda$from$1
	m	([BLbcp$a;)V	a	lambda$sign$0
	m	()V	<clinit>	<clinit>
c	bcs	net/minecraft/util/SimpleBitStorage
	f	[I	a	MAGIC
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	f	I	f	valuesPerLong
	f	I	g	divideMul
	f	I	h	divideAdd
	f	I	i	divideShift
	m	(II[I)V	<init>	<init>
	m	(II)V	<init>	<init>
	m	(II[J)V	<init>	<init>
	m	(I)I	b	cellIndex
	m	(II)I	a	getAndSet
	m	(II)V	b	set
	m	(I)I	a	get
	m	()[J	a	getRaw
	m	()I	b	getSize
	m	()I	c	getBits
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()Lbao;	d	copy
	m	()V	<clinit>	<clinit>
c	bcs$a	net/minecraft/util/SimpleBitStorage$InitializationException
	m	(Ljava/lang/String;)V	<init>	<init>
c	bct	net/minecraft/util/SingleKeyCache
	f	Ljava/util/function/Function;	a	computeValue
	f	Ljava/lang/Object;	b	cacheKey
	f	Ljava/lang/Object;	c	cachedValue
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	getValue
c	bcu	net/minecraft/util/SmoothDouble
	f	D	a	targetValue
	f	D	b	remainingValue
	f	D	c	lastAmount
	m	()V	<init>	<init>
	m	(DD)D	a	getNewDeltaValue
	m	()V	a	reset
c	bcv	net/minecraft/util/SortedArraySet
	f	I	a	DEFAULT_INITIAL_CAPACITY
	f	Ljava/util/Comparator;	b	comparator
	f	[Ljava/lang/Object;	c	contents
	f	I	d	size
	m	(ILjava/util/Comparator;)V	<init>	<init>
	m	()Lbcv;	a	create
	m	(I)Lbcv;	a	create
	m	(Ljava/util/Comparator;)Lbcv;	a	create
	m	(Ljava/util/Comparator;I)Lbcv;	a	create
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	a	castRawArray
	m	(Ljava/lang/Object;)I	c	findIndex
	m	(I)I	b	getInsertionPosition
	m	(Ljava/lang/Object;)Z	add	add
	m	(I)V	c	grow
	m	(Ljava/lang/Object;I)V	a	addInternal
	m	(I)V	d	removeInternal
	m	(I)Ljava/lang/Object;	e	getInternal
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	addOrGet
	m	(Ljava/lang/Object;)Z	remove	remove
	m	(Ljava/lang/Object;)Ljava/lang/Object;	b	get
	m	()Ljava/lang/Object;	b	first
	m	()Ljava/lang/Object;	c	last
	m	(Ljava/lang/Object;)Z	contains	contains
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()I	size	size
	m	()[Ljava/lang/Object;	toArray	toArray
	m	([Ljava/lang/Object;)[Ljava/lang/Object;	toArray	toArray
	m	()V	clear	clear
	m	(Ljava/lang/Object;)Z	equals	equals
c	bcv$a	net/minecraft/util/SortedArraySet$ArrayIterator
	f	I	b	index
	f	I	c	last
	f	Lbcv;	a	this$0
	m	(Lbcv;)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()Ljava/lang/Object;	next	next
	m	()V	remove	remove
c	bcw	net/minecraft/util/SpawnUtil
	m	()V	<init>	<init>
	m	(Lbzv;Lbzu;Laub;Ljb;IIILbcw$a;Z)Ljava/util/Optional;	a	trySpawnMob
	m	(Laub;ILjb$a;Lbcw$a;)Z	a	moveToPossibleSpawnPosition
c	bcw$a	net/minecraft/util/SpawnUtil$Strategy
	f	Lbcw$a;	a	LEGACY_IRON_GOLEM
	f	Lbcw$a;	b	ON_TOP_OF_COLLIDER
	f	Lbcw$a;	c	ON_TOP_OF_COLLIDER_NO_LEAVES
	m	(Laub;Ljb;Leeb;Ljb;Leeb;)Z	canSpawnOn	canSpawnOn
	m	(Laub;Ljb;Leeb;Ljb;Leeb;)Z	a	lambda$static$2
	m	(Laub;Ljb;Leeb;Ljb;Leeb;)Z	b	lambda$static$1
	m	(Laub;Ljb;Leeb;Ljb;Leeb;)Z	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bcx	net/minecraft/util/StaticCache2D
	f	I	a	minX
	f	I	b	minZ
	f	I	c	sizeX
	f	I	d	sizeZ
	f	[Ljava/lang/Object;	e	cache
	m	(IIILbcx$a;)Lbcx;	a	create
	m	(IIIILbcx$a;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)V	a	forEach
	m	(II)Ljava/lang/Object;	a	get
	m	(II)Z	b	contains
	m	()Ljava/lang/String;	toString	toString
	m	(II)I	c	getIndex
c	bcx$a	net/minecraft/util/StaticCache2D$Initializer
	m	(II)Ljava/lang/Object;	get	get
c	bcy	net/minecraft/util/StrictJsonParser
	m	()V	<init>	<init>
	m	(Ljava/io/Reader;)Lcom/google/gson/JsonElement;	a	parse
	m	(Ljava/lang/String;)Lcom/google/gson/JsonElement;	a	parse
c	bcz	net/minecraft/util/StringDecomposer
	f	C	a	REPLACEMENT_CHAR
	f	Ljava/util/Optional;	b	STOP_ITERATION
	m	()V	<init>	<init>
	m	(Lyl;Lbbn;IC)Z	a	feedChar
	m	(Ljava/lang/String;Lyl;Lbbn;)Z	a	iterate
	m	(Ljava/lang/String;Lyl;Lbbn;)Z	b	iterateBackwards
	m	(Ljava/lang/String;Lyl;Lbbn;)Z	c	iterateFormatted
	m	(Ljava/lang/String;ILyl;Lbbn;)Z	a	iterateFormatted
	m	(Ljava/lang/String;ILyl;Lyl;Lbbn;)Z	a	iterateFormatted
	m	(Lxt;Lyl;Lbbn;)Z	a	iterateFormatted
	m	(Ljava/lang/String;)Ljava/lang/String;	a	filterBrokenSurrogates
	m	(Lxt;)Ljava/lang/String;	a	getPlainText
	m	(Ljava/lang/StringBuilder;ILyl;I)Z	a	lambda$getPlainText$2
	m	(Ljava/lang/StringBuilder;ILyl;I)Z	b	lambda$filterBrokenSurrogates$1
	m	(Lbbn;Lyl;Ljava/lang/String;)Ljava/util/Optional;	a	lambda$iterateFormatted$0
	m	()V	<clinit>	<clinit>
c	bda	net/minecraft/util/StringRepresentable
	f	I	W	PRE_BUILT_MAP_THRESHOLD
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/util/function/Supplier;)Lbda$a;	a	fromEnum
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;)Lbda$a;	a	fromEnumWithMapping
	m	(Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec;	b	fromValues
	m	([Lbda;Ljava/util/function/Function;)Ljava/util/function/Function;	a	createNameLookup
	m	([Lbda;)Lcom/mojang/serialization/Keyable;	a	keys
	m	([Lbda;Ljava/util/function/Function;Ljava/lang/String;)Lbda;	a	lambda$createNameLookup$5
	m	(Ljava/util/Map;Ljava/lang/String;)Lbda;	a	lambda$createNameLookup$4
	m	(Lbda;)Lbda;	a	lambda$createNameLookup$3
	m	(Ljava/util/function/Function;Lbda;)Ljava/lang/String;	a	lambda$createNameLookup$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fromValues$1
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$fromEnum$0
c	bda$1	net/minecraft/util/StringRepresentable$1
	f	[Lbda;	a	val$values
	m	([Lbda;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
c	bda$a	net/minecraft/util/StringRepresentable$EnumCodec
	f	Ljava/util/function/Function;	a	resolver
	m	([Ljava/lang/Enum;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/Enum;	a	byName
	m	(Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum;	a	byName
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/lang/Enum;	a	byName
	m	(Ljava/lang/Object;)I	a	lambda$new$0
c	bda$b	net/minecraft/util/StringRepresentable$StringRepresentableCodec
	f	Lcom/mojang/serialization/Codec;	a	codec
	m	([Lbda;Ljava/util/function/Function;Ljava/util/function/ToIntFunction;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lbda;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	([Lbda;I)Lbda;	a	lambda$new$0
c	bdb	net/minecraft/util/StringUtil
	f	Ljava/util/regex/Pattern;	a	STRIP_COLOR_PATTERN
	f	Ljava/util/regex/Pattern;	b	LINE_PATTERN
	f	Ljava/util/regex/Pattern;	c	LINE_END_PATTERN
	m	()V	<init>	<init>
	m	(IF)Ljava/lang/String;	a	formatTickDuration
	m	(Ljava/lang/String;)Ljava/lang/String;	a	stripColor
	m	(Ljava/lang/String;)Z	b	isNullOrEmpty
	m	(Ljava/lang/String;IZ)Ljava/lang/String;	a	truncateStringIfNecessary
	m	(Ljava/lang/String;)I	c	lineCount
	m	(Ljava/lang/String;)Z	d	endsWithNewLine
	m	(Ljava/lang/String;)Ljava/lang/String;	e	trimChatMessage
	m	(C)Z	a	isAllowedChatCharacter
	m	(Ljava/lang/String;)Z	f	isValidPlayerName
	m	(Ljava/lang/String;)Ljava/lang/String;	g	filterText
	m	(Ljava/lang/String;Z)Ljava/lang/String;	a	filterText
	m	(I)Z	a	isWhitespace
	m	(Ljava/lang/String;)Z	h	isBlank
	m	(I)Z	b	lambda$isValidPlayerName$0
	m	()V	<clinit>	<clinit>
c	bdc	net/minecraft/util/TaskChainer
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Ljava/util/concurrent/Executor;)Lbdc;	immediate	immediate
	m	(Ljava/lang/Runnable;)V	append	append
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
	m	(Ljava/lang/Runnable;Ljava/lang/Object;)V	a	lambda$append$0
	m	()V	<clinit>	<clinit>
c	bdc$1	net/minecraft/util/TaskChainer$1
	f	Ljava/util/concurrent/Executor;	b	val$executor
	m	(Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(Ljava/util/concurrent/CompletableFuture;Ljava/util/function/Consumer;)V	append	append
	m	(Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$append$0
c	bdd	net/minecraft/util/ThreadingDetector
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	name
	f	Ljava/util/concurrent/Semaphore;	c	lock
	f	Ljava/util/concurrent/locks/Lock;	d	stackTraceLock
	f	Ljava/lang/Thread;	e	threadThatFailedToAcquire
	f	Laa;	f	fullException
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()V	a	checkAndLock
	m	()V	b	checkAndUnlock
	m	(Ljava/lang/String;Ljava/lang/Thread;)Laa;	a	makeThreadingException
	m	(Ljava/lang/Thread;)Ljava/lang/String;	a	stackTrace
	m	()V	<clinit>	<clinit>
c	bde	net/minecraft/util/TickThrottler
	f	I	a	incrementStep
	f	I	b	threshold
	f	I	c	count
	m	(II)V	<init>	<init>
	m	()V	a	increment
	m	()V	b	tick
	m	()Z	c	isUnderThreshold
c	bdf	net/minecraft/util/TimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
c	bdf$a	net/minecraft/util/TimeSource$NanoTimeSource
	m	(Ljava/util/concurrent/TimeUnit;)J	get	get
c	bdg	net/minecraft/util/TimeUtil
	f	J	a	NANOSECONDS_PER_SECOND
	f	J	b	NANOSECONDS_PER_MILLISECOND
	f	J	c	MILLISECONDS_PER_SECOND
	f	J	d	SECONDS_PER_HOUR
	f	I	e	SECONDS_PER_MINUTE
	m	()V	<init>	<init>
	m	(II)Lbwu;	a	rangeOfSeconds
	m	()V	<clinit>	<clinit>
c	bdh	net/minecraft/util/ToFloatFunction
	f	Lbdh;	a	IDENTITY
	m	(Ljava/lang/Object;)F	a	apply
	m	()F	b	minValue
	m	()F	c	maxValue
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lbdh;	a	createUnlimited
	m	(Ljava/util/function/Function;)Lbdh;	a	comap
	m	(F)F	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bdh$1	net/minecraft/util/ToFloatFunction$1
	f	Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	b	val$function
	m	(Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V	<init>	<init>
	m	(Ljava/lang/Float;)F	a	apply
	m	()F	b	minValue
	m	()F	c	maxValue
	m	(Ljava/lang/Object;)F	a	apply
c	bdh$2	net/minecraft/util/ToFloatFunction$2
	f	Lbdh;	b	val$outer
	f	Ljava/util/function/Function;	c	val$function
	m	(Lbdh;Lbdh;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/Object;)F	a	apply
	m	()F	b	minValue
	m	()F	c	maxValue
c	bdi	net/minecraft/util/TriState
	f	Lbdi;	a	TRUE
	f	Lbdi;	b	FALSE
	f	Lbdi;	c	DEFAULT
	f	[Lbdi;	d	$VALUES
	m	()[Lbdi;	values	values
	m	(Ljava/lang/String;)Lbdi;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Z)Z	a	toBoolean
	m	()[Lbdi;	a	$values
	m	()V	<clinit>	<clinit>
c	bdj	net/minecraft/util/Tuple
	f	Ljava/lang/Object;	a	a
	f	Ljava/lang/Object;	b	b
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/Object;	a	getA
	m	(Ljava/lang/Object;)V	a	setA
	m	()Ljava/lang/Object;	b	getB
	m	(Ljava/lang/Object;)V	b	setB
c	bdk	net/minecraft/util/Unit
	f	Lbdk;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	[Lbdk;	d	$VALUES
	m	()[Lbdk;	values	values
	m	(Ljava/lang/String;)Lbdk;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbdk;	a	$values
	m	()V	<clinit>	<clinit>
c	bdl	net/minecraft/util/VisibleForDebug
c	bdm	net/minecraft/util/ZeroBitStorage
	f	[J	a	RAW
	f	I	b	size
	m	(I)V	<init>	<init>
	m	(II)I	a	getAndSet
	m	(II)V	b	set
	m	(I)I	a	get
	m	()[J	a	getRaw
	m	()I	b	getSize
	m	()I	c	getBits
	m	(Ljava/util/function/IntConsumer;)V	a	getAll
	m	([I)V	a	unpack
	m	()Lbao;	d	copy
	m	()V	<clinit>	<clinit>
c	bdn	net/minecraft/util/context/ContextKey
	f	Lame;	a	name
	m	(Lame;)V	<init>	<init>
	m	(Ljava/lang/String;)Lbdn;	a	vanilla
	m	()Lame;	a	name
	m	()Ljava/lang/String;	toString	toString
c	bdo	net/minecraft/util/context/ContextKeySet
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	allowed
	m	(Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
	m	()Ljava/util/Set;	a	required
	m	()Ljava/util/Set;	b	allowed
	m	()Ljava/lang/String;	toString	toString
	m	(Lbdn;)Ljava/lang/String;	a	lambda$toString$0
c	bdo$a	net/minecraft/util/context/ContextKeySet$Builder
	f	Ljava/util/Set;	a	required
	f	Ljava/util/Set;	b	optional
	m	()V	<init>	<init>
	m	(Lbdn;)Lbdo$a;	a	required
	m	(Lbdn;)Lbdo$a;	b	optional
	m	()Lbdo;	a	build
c	bdp	net/minecraft/util/context/ContextMap
	f	Ljava/util/Map;	a	params
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lbdn;)Z	a	has
	m	(Lbdn;)Ljava/lang/Object;	b	getOrThrow
	m	(Lbdn;)Ljava/lang/Object;	c	getOptional
	m	(Lbdn;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
c	bdp$a	net/minecraft/util/context/ContextMap$Builder
	f	Ljava/util/Map;	a	params
	m	()V	<init>	<init>
	m	(Lbdn;Ljava/lang/Object;)Lbdp$a;	a	withParameter
	m	(Lbdn;Ljava/lang/Object;)Lbdp$a;	b	withOptionalParameter
	m	(Lbdn;)Ljava/lang/Object;	a	getParameter
	m	(Lbdn;)Ljava/lang/Object;	b	getOptionalParameter
	m	(Lbdo;)Lbdp;	a	create
c	bdq	net/minecraft/util/context/package-info
c	bdr	net/minecraft/util/datafix/DataFixTypes
	f	Lbdr;	a	LEVEL
	f	Lbdr;	b	LEVEL_SUMMARY
	f	Lbdr;	c	PLAYER
	f	Lbdr;	d	CHUNK
	f	Lbdr;	e	HOTBAR
	f	Lbdr;	f	OPTIONS
	f	Lbdr;	g	STRUCTURE
	f	Lbdr;	h	STATS
	f	Lbdr;	i	SAVED_DATA_COMMAND_STORAGE
	f	Lbdr;	j	SAVED_DATA_FORCED_CHUNKS
	f	Lbdr;	k	SAVED_DATA_MAP_DATA
	f	Lbdr;	l	SAVED_DATA_MAP_INDEX
	f	Lbdr;	m	SAVED_DATA_RAIDS
	f	Lbdr;	n	SAVED_DATA_RANDOM_SEQUENCES
	f	Lbdr;	o	SAVED_DATA_SCOREBOARD
	f	Lbdr;	p	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lbdr;	q	ADVANCEMENTS
	f	Lbdr;	r	POI_CHUNK
	f	Lbdr;	s	WORLD_GEN_SETTINGS
	f	Lbdr;	t	ENTITY_CHUNK
	f	Ljava/util/Set;	u	TYPES_FOR_LEVEL_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	type
	f	[Lbdr;	w	$VALUES
	m	()[Lbdr;	values	values
	m	(Ljava/lang/String;)Lbdr;	valueOf	valueOf
	m	(Ljava/lang/String;ILcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	()I	a	currentVersion
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/Codec;	a	wrapCodec
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	update
	m	(Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	updateToCurrentVersion
	m	(Lcom/mojang/datafixers/DataFixer;Lui;II)Lui;	a	update
	m	(Lcom/mojang/datafixers/DataFixer;Lui;I)Lui;	a	updateToCurrentVersion
	m	()[Lbdr;	b	$values
	m	()V	<clinit>	<clinit>
c	bdr$1	net/minecraft/util/datafix/DataFixTypes$1
	f	Lcom/mojang/serialization/Codec;	a	val$codec
	f	I	b	val$defaultVersion
	f	Lcom/mojang/datafixers/DataFixer;	c	val$dataFixer
	f	Lbdr;	d	this$0
	m	(Lbdr;Lcom/mojang/serialization/Codec;ILcom/mojang/datafixers/DataFixer;)V	<init>	<init>
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	lambda$encode$0
c	bds	net/minecraft/util/datafix/DataFixers
	f	Ljava/util/function/BiFunction;	b	SAME
	f	Ljava/util/function/BiFunction;	c	SAME_NAMESPACED
	f	Lcom/mojang/datafixers/DataFixerBuilder$Result;	d	DATA_FIXER
	f	I	a	BLENDING_VERSION
	m	()V	<init>	<init>
	m	()Lcom/mojang/datafixers/DataFixer;	a	getDataFixer
	m	()Lcom/mojang/datafixers/DataFixerBuilder$Result;	b	createFixerUpper
	m	(Ljava/util/Set;)Ljava/util/concurrent/CompletableFuture;	a	optimize
	m	(Lcom/mojang/datafixers/DataFixerBuilder;)V	a	addFixers
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	a	createRenamerNoNamespace
	m	(Ljava/util/Map;)Ljava/util/function/UnaryOperator;	b	createRenamer
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator;	a	createRenamer
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$18
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	a	lambda$createRenamer$17
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	b	lambda$createRenamerNoNamespace$16
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$15
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$addFixers$14
	m	(D)D	a	lambda$addFixers$13
	m	(D)D	b	lambda$addFixers$12
	m	(D)D	c	lambda$addFixers$11
	m	(D)D	d	lambda$addFixers$10
	m	(D)D	e	lambda$addFixers$9
	m	(D)D	f	lambda$addFixers$8
	m	(Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$7
	m	(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;	c	lambda$addFixers$6
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$addFixers$5
	m	(Lcom/google/common/collect/ImmutableMap;Ljava/lang/String;)Ljava/lang/String;	a	lambda$addFixers$4
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	b	lambda$addFixers$3
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$addFixers$2
	m	(Ljava/lang/String;)Ljava/lang/String;	e	lambda$addFixers$1
	m	(Ljava/lang/String;)Ljava/lang/String;	f	lambda$addFixers$0
	m	()V	<clinit>	<clinit>
c	bds$1	net/minecraft/util/datafix/DataFixers$1
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	bds$2	net/minecraft/util/datafix/DataFixers$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bdt	net/minecraft/util/datafix/ExtraDataFixUtils
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBlockPos
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixInlineBlockPos
	m	(Lcom/mojang/serialization/Dynamic;III)Lcom/mojang/serialization/Dynamic;	a	createBlockPos
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	cast
	m	(Lcom/mojang/datafixers/types/Type;Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/datafixers/Typed;	a	cast
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	patchSubType
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	typePatcher
	m	([Ljava/util/function/Function;)Ljava/util/function/Function;	a	chainAllFilters
	m	(Ljava/lang/String;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	blockState
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	blockState
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/serialization/Dynamic;	a	fixStringField
	m	(I)Ljava/lang/String;	a	dyeColorIdToName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/Typed;	a	readAndSet
	m	(Ljava/util/function/UnaryOperator;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStringField$5
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$blockState$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	b	lambda$blockState$3
	m	([Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$chainAllFilters$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$typePatcher$1
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$typePatcher$0
c	bdu	net/minecraft/util/datafix/LegacyComponentDataFixUtils
	f	Ljava/lang/String;	a	EMPTY_CONTENTS
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	createPlainTextComponent
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	createEmptyComponent
	m	(Ljava/lang/String;)Ljava/lang/String;	a	createTextComponentJson
	m	(Ljava/lang/String;)Ljava/lang/String;	b	createTranslatableComponentJson
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	createTranslatableComponent
	m	(Ljava/lang/String;)Ljava/lang/String;	c	rewriteFromLenient
	m	(Ljava/lang/String;)Ljava/util/Optional;	d	extractTranslationString
	m	()V	<clinit>	<clinit>
c	bdv	net/minecraft/util/datafix/PackedBitStorage
	f	I	a	BIT_TO_LONG_SHIFT
	f	[J	b	data
	f	I	c	bits
	f	J	d	mask
	f	I	e	size
	m	(II)V	<init>	<init>
	m	(II[J)V	<init>	<init>
	m	(II)V	a	set
	m	(I)I	a	get
	m	()[J	a	getRaw
	m	()I	b	getBits
c	bdw	net/minecraft/util/datafix/fixes/AbstractArrowPickupFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updatePickup
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
c	bdx	net/minecraft/util/datafix/fixes/AbstractBlockPropertyFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBlockState
	m	(Ljava/lang/String;)Z	a	shouldFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProperties
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixBlockState$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bdy	net/minecraft/util/datafix/fixes/AbstractPoiSectionFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	processSection
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	processSectionRecords
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$processSectionRecords$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
c	bdz	net/minecraft/util/datafix/fixes/AbstractUUIDFix
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	typeReference
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	replaceUUIDString
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	b	replaceUUIDMLTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	c	replaceUUIDLeastMost
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	createUUIDFromString
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	createUUIDFromML
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	d	createUUIDFromLongs
	m	(Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional;	a	createUUIDTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$createUUIDFromString$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDLeastMost$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$replaceUUIDMLTag$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$replaceUUIDString$1
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$0
c	bea	net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix
	f	Ljava/lang/String;	a	name
	f	Z	b	flagValue
	f	Ljava/lang/String;	c	flagKey
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	typeReference
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	beb	net/minecraft/util/datafix/fixes/AddNewChoices
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
c	bec	net/minecraft/util/datafix/fixes/AdvancementsFix
	f	Ljava/util/Map;	a	RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	bed	net/minecraft/util/datafix/fixes/AdvancementsRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Function;	b	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bee	net/minecraft/util/datafix/fixes/AreaEffectCloudDurationScaleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bef	net/minecraft/util/datafix/fixes/AreaEffectCloudPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	beg	net/minecraft/util/datafix/fixes/AttributeIdPrefixFix
	f	Ljava/util/List;	a	PREFIXES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	replaceId
	m	()V	<clinit>	<clinit>
c	beh	net/minecraft/util/datafix/fixes/AttributeModifierIdFix
	f	Ljava/util/Map;	a	ID_MAP
	f	Ljava/util/Map;	b	NAME_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	fixModifiersTypeWrapper
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	fixModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	convertModifierForEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixItemStackComponents
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixAttribute
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixEntity
	m	([I)Ljava/util/UUID;	a	uuidFromIntArray
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixEntity$9
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	c	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAttribute$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	d	lambda$fixAttribute$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackComponents$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackComponents$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$convertModifierForEntity$3
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixModifiers$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bei	net/minecraft/util/datafix/fixes/AttributesRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixDataComponents
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixIdField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTypeField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$5
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixDataComponents$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixDataComponents$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixDataComponents$1
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixDataComponents$0
c	bej	net/minecraft/util/datafix/fixes/AttributesRenameLegacy
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixName
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEntity$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEntity$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixEntity$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixItemStackTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixItemStackTag$3
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixItemStackTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixItemStackTag$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bek	net/minecraft/util/datafix/fixes/BannerEntityCustomNameToOverrideComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Ljava/lang/String;)Z	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bel	net/minecraft/util/datafix/fixes/BannerPatternFormatFix
	f	Ljava/util/Map;	c	PATTERN_ID_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixLayer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixLayer$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fixLayer$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$0
	m	()V	<clinit>	<clinit>
c	bem	net/minecraft/util/datafix/fixes/BedItemColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	ben	net/minecraft/util/datafix/fixes/BeehiveFieldRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBeehive
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixBee
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	beo	net/minecraft/util/datafix/fixes/BiomeFix
	f	Ljava/util/Map;	a	BIOMES
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	bep	net/minecraft/util/datafix/fixes/BitStorageAlignFix
	f	I	a	BIT_TO_LONG_SHIFT
	f	I	b	SECTION_WIDTH
	f	I	c	SECTION_HEIGHT
	f	I	d	SECTION_SIZE
	f	I	e	HEIGHTMAP_BITS
	f	I	f	HEIGHTMAP_SIZE
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateHeightmaps
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateSections
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBitStorage
	m	(II[J)[J	a	addPadding
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateSections$9
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$8
	m	(Lcom/mojang/serialization/Dynamic;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSections$7
	m	(Ljava/util/List;)Ljava/lang/Integer;	a	lambda$updateSections$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateHeightmaps$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateHeightmaps$3
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateHeightmaps$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	beq	net/minecraft/util/datafix/fixes/BlendingDataFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	STATUSES_TO_SKIP_BLENDING
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateBlendingData
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	ber	net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bes	net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$4
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixTag$0
c	bet	net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$1
	m	()Ljava/lang/IllegalStateException;	b	lambda$fix$0
c	beu	net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix
	f	Ljava/util/Set;	a	NAMEABLE_BLOCK_ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTagCustomName
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bev	net/minecraft/util/datafix/fixes/BlockEntityFurnaceBurnTimeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBurnTime
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bew	net/minecraft/util/datafix/fixes/BlockEntityIdFix
	f	Ljava/util/Map;	a	ID_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bex	net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	()Ljava/lang/IllegalStateException;	a	lambda$fix$0
c	bey	net/minecraft/util/datafix/fixes/BlockEntityKeepPacked
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bez	net/minecraft/util/datafix/fixes/BlockEntityRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	nameChangeLookup
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bfa	net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bfb	net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix
	f	Ljava/util/List;	a	FIELDS_TO_DROP
	f	Ljava/lang/String;	b	FILTERED_CORRECT
	f	Ljava/lang/String;	c	DEFAULT_COLOR
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixFrontTextTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/stream/Stream;	a	getLines
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	createDefaultText
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	createEmptyLines
	m	(Ljava/util/List;Ljava/util/Optional;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFrontTextTag$0
	m	()V	<clinit>	<clinit>
c	bfc	net/minecraft/util/datafix/fixes/BlockEntityUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSkull
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateConduit
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateSkull$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkull$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bfd	net/minecraft/util/datafix/fixes/BlockNameFlatteningFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	bfe	net/minecraft/util/datafix/fixes/BlockPosFormatAndRenamesFix
	f	Ljava/util/List;	a	PATROLLING_MOBS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;Ljava/util/Map;)Lcom/mojang/datafixers/Typed;	a	fixFields
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixMapSavedData
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/util/List;)V	a	addEntityRules
	m	(Ljava/util/List;)V	b	addBlockEntityRules
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)Lcom/mojang/datafixers/TypeRewriteRule;	a	createEntityFixer
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/Map;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createEntityFixer$11
	m	(Ljava/util/Map;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createEntityFixer$10
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$addEntityRules$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addEntityRules$8
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fixMapSavedData$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fixMapSavedData$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$fixMapSavedData$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$fixMapSavedData$1
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFields$0
	m	()V	<clinit>	<clinit>
c	bff	net/minecraft/util/datafix/fixes/BlockPropertyRenameAndFix
	f	Ljava/lang/String;	a	blockId
	f	Ljava/lang/String;	b	oldPropertyName
	f	Ljava/lang/String;	c	newPropertyName
	f	Ljava/util/function/UnaryOperator;	d	valueFixer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	(Ljava/lang/String;)Z	a	shouldFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProperties
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixProperties$0
c	bfg	net/minecraft/util/datafix/fixes/BlockRenameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixBlockState
	m	(Ljava/lang/String;)Ljava/lang/String;	b	fixFlatBlockState
	m	(Ljava/lang/String;)Ljava/lang/String;	a	renameBlock
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bfg$1	net/minecraft/util/datafix/fixes/BlockRenameFix$1
	f	Ljava/util/function/Function;	a	val$renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	renameBlock
c	bfh	net/minecraft/util/datafix/fixes/BlockStateData
	f	[Lcom/mojang/serialization/Dynamic;	b	MAP
	f	[Lcom/mojang/serialization/Dynamic;	c	BLOCK_DEFAULTS
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	ID_BY_OLD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	ID_BY_OLD_NAME
	f	Ljava/lang/String;	a	FILTER_ME
	f	Ljava/lang/String;	f	TAG_NAME
	f	Ljava/lang/String;	g	TAG_PROPERTIES
	f	Ljava/util/Map;	h	AGE_0
	f	Ljava/util/Map;	i	AGE_0_FACING_EAST
	f	Ljava/util/Map;	j	AGE_0_FACING_NORTH
	f	Ljava/util/Map;	k	AGE_0_FACING_SOUTH
	f	Ljava/util/Map;	l	AGE_0_FACING_WEST
	f	Ljava/util/Map;	m	AGE_1
	f	Ljava/util/Map;	n	AGE_10
	f	Ljava/util/Map;	o	AGE_11
	f	Ljava/util/Map;	p	AGE_12
	f	Ljava/util/Map;	q	AGE_13
	f	Ljava/util/Map;	r	AGE_14
	f	Ljava/util/Map;	s	AGE_15
	f	Ljava/util/Map;	t	AGE_1_FACING_EAST
	f	Ljava/util/Map;	u	AGE_1_FACING_NORTH
	f	Ljava/util/Map;	v	AGE_1_FACING_SOUTH
	f	Ljava/util/Map;	w	AGE_1_FACING_WEST
	f	Ljava/util/Map;	x	AGE_2
	f	Ljava/util/Map;	y	AGE_2_FACING_EAST
	f	Ljava/util/Map;	z	AGE_2_FACING_NORTH
	f	Ljava/util/Map;	A	AGE_2_FACING_SOUTH
	f	Ljava/util/Map;	B	AGE_2_FACING_WEST
	f	Ljava/util/Map;	C	AGE_3
	f	Ljava/util/Map;	D	AGE_4
	f	Ljava/util/Map;	E	AGE_5
	f	Ljava/util/Map;	F	AGE_6
	f	Ljava/util/Map;	G	AGE_7
	f	Ljava/util/Map;	H	AGE_8
	f	Ljava/util/Map;	I	AGE_9
	f	Ljava/util/Map;	J	AXIS_X
	f	Ljava/util/Map;	K	AXIS_Y
	f	Ljava/util/Map;	L	AXIS_Z
	f	Ljava/util/Map;	M	CHECK_DECAY_FALSE_DECAYABLE_FALSE
	f	Ljava/util/Map;	N	CHECK_DECAY_FALSE_DECAYABLE_TRUE
	f	Ljava/util/Map;	O	CHECK_DECAY_TRUE_DECAYABLE_FALSE
	f	Ljava/util/Map;	P	CHECK_DECAY_TRUE_DECAYABLE_TRUE
	f	Ljava/util/Map;	Q	COLOR_BLACK
	f	Ljava/util/Map;	R	COLOR_BLUE
	f	Ljava/util/Map;	S	COLOR_BROWN
	f	Ljava/util/Map;	T	COLOR_CYAN
	f	Ljava/util/Map;	U	COLOR_GRAY
	f	Ljava/util/Map;	V	COLOR_GREEN
	f	Ljava/util/Map;	W	COLOR_LIGHT_BLUE
	f	Ljava/util/Map;	X	COLOR_LIME
	f	Ljava/util/Map;	Y	COLOR_MAGENTA
	f	Ljava/util/Map;	Z	COLOR_ORANGE
	f	Ljava/util/Map;	aa	COLOR_PINK
	f	Ljava/util/Map;	ab	COLOR_PURPLE
	f	Ljava/util/Map;	ac	COLOR_RED
	f	Ljava/util/Map;	ad	COLOR_SILVER
	f	Ljava/util/Map;	ae	COLOR_WHITE
	f	Ljava/util/Map;	af	COLOR_YELLOW
	f	Ljava/util/Map;	ag	EAST_FALSE_SOUTH_FALSE_ATTACHED_FALSE_DISARMED_FALSE_WEST_FALSE_NORTH_FALSE_POWERED_FALSE
	f	Ljava/util/Map;	ah	EAST_FALSE_SOUTH_FALSE_ATTACHED_FALSE_DISARMED_FALSE_WEST_FALSE_NORTH_FALSE_POWERED_TRUE
	f	Ljava/util/Map;	ai	EAST_FALSE_SOUTH_FALSE_ATTACHED_FALSE_DISARMED_TRUE_WEST_FALSE_NORTH_FALSE_POWERED_FALSE
	f	Ljava/util/Map;	aj	EAST_FALSE_SOUTH_FALSE_ATTACHED_FALSE_DISARMED_TRUE_WEST_FALSE_NORTH_FALSE_POWERED_TRUE
	f	Ljava/util/Map;	ak	EAST_FALSE_SOUTH_FALSE_ATTACHED_TRUE_DISARMED_FALSE_WEST_FALSE_NORTH_FALSE_POWERED_FALSE
	f	Ljava/util/Map;	al	EAST_FALSE_SOUTH_FALSE_ATTACHED_TRUE_DISARMED_FALSE_WEST_FALSE_NORTH_FALSE_POWERED_TRUE
	f	Ljava/util/Map;	am	EAST_FALSE_SOUTH_FALSE_ATTACHED_TRUE_DISARMED_TRUE_WEST_FALSE_NORTH_FALSE_POWERED_FALSE
	f	Ljava/util/Map;	an	FACE_CEILING_POWERED_FALSE_FACING_NORTH
	f	Ljava/util/Map;	ao	FACE_CEILING_POWERED_TRUE_FACING_NORTH
	f	Ljava/util/Map;	ap	FACE_FLOOR_POWERED_FALSE_FACING_NORTH
	f	Ljava/util/Map;	aq	FACE_FLOOR_POWERED_TRUE_FACING_NORTH
	f	Ljava/util/Map;	ar	FACE_WALL_POWERED_FALSE_FACING_EAST
	f	Ljava/util/Map;	as	FACE_WALL_POWERED_FALSE_FACING_NORTH
	f	Ljava/util/Map;	at	FACE_WALL_POWERED_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	au	FACE_WALL_POWERED_FALSE_FACING_WEST
	f	Ljava/util/Map;	av	FACE_WALL_POWERED_TRUE_FACING_EAST
	f	Ljava/util/Map;	aw	FACE_WALL_POWERED_TRUE_FACING_NORTH
	f	Ljava/util/Map;	ax	FACE_WALL_POWERED_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	ay	FACE_WALL_POWERED_TRUE_FACING_WEST
	f	Ljava/util/Map;	az	FACING_DOWN
	f	Ljava/util/Map;	aA	FACING_DOWN_CONDITIONAL_FALSE
	f	Ljava/util/Map;	aB	FACING_DOWN_CONDITIONAL_TRUE
	f	Ljava/util/Map;	aC	FACING_DOWN_EXTENDED_FALSE
	f	Ljava/util/Map;	aD	FACING_DOWN_EXTENDED_TRUE
	f	Ljava/util/Map;	aE	FACING_DOWN_POWERED_FALSE
	f	Ljava/util/Map;	aF	FACING_DOWN_POWERED_TRUE
	f	Ljava/util/Map;	aG	FACING_EAST
	f	Ljava/util/Map;	aH	FACING_EAST_CONDITIONAL_FALSE
	f	Ljava/util/Map;	aI	FACING_EAST_CONDITIONAL_TRUE
	f	Ljava/util/Map;	aJ	FACING_EAST_EXTENDED_FALSE
	f	Ljava/util/Map;	aK	FACING_EAST_EXTENDED_TRUE
	f	Ljava/util/Map;	aL	FACING_EAST_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	aM	FACING_EAST_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	aN	FACING_EAST_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	aO	FACING_EAST_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	aP	FACING_EAST_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	aQ	FACING_EAST_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	aR	FACING_EAST_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	aS	FACING_EAST_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	aT	FACING_EAST_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	aU	FACING_EAST_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	aV	FACING_EAST_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	aW	FACING_EAST_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	aX	FACING_EAST_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	aY	FACING_EAST_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	aZ	FACING_EAST_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	ba	FACING_EAST_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bb	FACING_EAST_POWERED_FALSE
	f	Ljava/util/Map;	bc	FACING_EAST_POWERED_TRUE
	f	Ljava/util/Map;	bd	FACING_NORTH
	f	Ljava/util/Map;	be	FACING_NORTH_CONDITIONAL_FALSE
	f	Ljava/util/Map;	bf	FACING_NORTH_CONDITIONAL_TRUE
	f	Ljava/util/Map;	bg	FACING_NORTH_EXTENDED_FALSE
	f	Ljava/util/Map;	bh	FACING_NORTH_EXTENDED_TRUE
	f	Ljava/util/Map;	bi	FACING_NORTH_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bj	FACING_NORTH_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bk	FACING_NORTH_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bl	FACING_NORTH_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bm	FACING_NORTH_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bn	FACING_NORTH_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bo	FACING_NORTH_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bp	FACING_NORTH_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bq	FACING_NORTH_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	br	FACING_NORTH_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bs	FACING_NORTH_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bt	FACING_NORTH_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bu	FACING_NORTH_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bv	FACING_NORTH_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bw	FACING_NORTH_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bx	FACING_NORTH_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	by	FACING_NORTH_POWERED_FALSE
	f	Ljava/util/Map;	bz	FACING_NORTH_POWERED_TRUE
	f	Ljava/util/Map;	bA	FACING_SOUTH
	f	Ljava/util/Map;	bB	FACING_SOUTH_CONDITIONAL_FALSE
	f	Ljava/util/Map;	bC	FACING_SOUTH_CONDITIONAL_TRUE
	f	Ljava/util/Map;	bD	FACING_SOUTH_EXTENDED_FALSE
	f	Ljava/util/Map;	bE	FACING_SOUTH_EXTENDED_TRUE
	f	Ljava/util/Map;	bF	FACING_SOUTH_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bG	FACING_SOUTH_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bH	FACING_SOUTH_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bI	FACING_SOUTH_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bJ	FACING_SOUTH_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bK	FACING_SOUTH_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bL	FACING_SOUTH_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bM	FACING_SOUTH_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bN	FACING_SOUTH_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bO	FACING_SOUTH_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bP	FACING_SOUTH_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bQ	FACING_SOUTH_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bR	FACING_SOUTH_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	bS	FACING_SOUTH_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	bT	FACING_SOUTH_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	bU	FACING_SOUTH_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	bV	FACING_SOUTH_POWERED_FALSE
	f	Ljava/util/Map;	bW	FACING_SOUTH_POWERED_TRUE
	f	Ljava/util/Map;	bX	FACING_UP
	f	Ljava/util/Map;	bY	FACING_UP_CONDITIONAL_FALSE
	f	Ljava/util/Map;	bZ	FACING_UP_CONDITIONAL_TRUE
	f	Ljava/util/Map;	ca	FACING_UP_EXTENDED_FALSE
	f	Ljava/util/Map;	cb	FACING_UP_EXTENDED_TRUE
	f	Ljava/util/Map;	cc	FACING_UP_POWERED_FALSE
	f	Ljava/util/Map;	cd	FACING_UP_POWERED_TRUE
	f	Ljava/util/Map;	ce	FACING_WEST
	f	Ljava/util/Map;	cf	FACING_WEST_CONDITIONAL_FALSE
	f	Ljava/util/Map;	cg	FACING_WEST_CONDITIONAL_TRUE
	f	Ljava/util/Map;	ch	FACING_WEST_EXTENDED_FALSE
	f	Ljava/util/Map;	ci	FACING_WEST_EXTENDED_TRUE
	f	Ljava/util/Map;	cj	FACING_WEST_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	ck	FACING_WEST_OPEN_FALSE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	cl	FACING_WEST_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	cm	FACING_WEST_OPEN_FALSE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	cn	FACING_WEST_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	co	FACING_WEST_OPEN_FALSE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	cp	FACING_WEST_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	cq	FACING_WEST_OPEN_FALSE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	cr	FACING_WEST_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	cs	FACING_WEST_OPEN_TRUE_POWERED_FALSE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	ct	FACING_WEST_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	cu	FACING_WEST_OPEN_TRUE_POWERED_FALSE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	cv	FACING_WEST_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_LOWER
	f	Ljava/util/Map;	cw	FACING_WEST_OPEN_TRUE_POWERED_TRUE_HINGE_LEFT_HALF_UPPER
	f	Ljava/util/Map;	cx	FACING_WEST_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_LOWER
	f	Ljava/util/Map;	cy	FACING_WEST_OPEN_TRUE_POWERED_TRUE_HINGE_RIGHT_HALF_UPPER
	f	Ljava/util/Map;	cz	FACING_WEST_POWERED_FALSE
	f	Ljava/util/Map;	cA	FACING_WEST_POWERED_TRUE
	f	Ljava/util/Map;	cB	HALF_BOTTOM_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	cC	HALF_BOTTOM_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	cD	HALF_BOTTOM_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	cE	HALF_BOTTOM_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	cF	HALF_BOTTOM_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	cG	HALF_BOTTOM_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	cH	HALF_BOTTOM_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	cI	HALF_BOTTOM_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	cJ	HALF_BOTTOM_SHAPE_INNER_LEFT_FACING_EAST
	f	Ljava/util/Map;	cK	HALF_BOTTOM_SHAPE_INNER_LEFT_FACING_NORTH
	f	Ljava/util/Map;	cL	HALF_BOTTOM_SHAPE_INNER_LEFT_FACING_SOUTH
	f	Ljava/util/Map;	cM	HALF_BOTTOM_SHAPE_INNER_LEFT_FACING_WEST
	f	Ljava/util/Map;	cN	HALF_BOTTOM_SHAPE_INNER_RIGHT_FACING_EAST
	f	Ljava/util/Map;	cO	HALF_BOTTOM_SHAPE_INNER_RIGHT_FACING_NORTH
	f	Ljava/util/Map;	cP	HALF_BOTTOM_SHAPE_INNER_RIGHT_FACING_SOUTH
	f	Ljava/util/Map;	cQ	HALF_BOTTOM_SHAPE_INNER_RIGHT_FACING_WEST
	f	Ljava/util/Map;	cR	HALF_BOTTOM_SHAPE_OUTER_LEFT_FACING_EAST
	f	Ljava/util/Map;	cS	HALF_BOTTOM_SHAPE_OUTER_LEFT_FACING_NORTH
	f	Ljava/util/Map;	cT	HALF_BOTTOM_SHAPE_OUTER_LEFT_FACING_SOUTH
	f	Ljava/util/Map;	cU	HALF_BOTTOM_SHAPE_OUTER_LEFT_FACING_WEST
	f	Ljava/util/Map;	cV	HALF_BOTTOM_SHAPE_OUTER_RIGHT_FACING_EAST
	f	Ljava/util/Map;	cW	HALF_BOTTOM_SHAPE_OUTER_RIGHT_FACING_NORTH
	f	Ljava/util/Map;	cX	HALF_BOTTOM_SHAPE_OUTER_RIGHT_FACING_SOUTH
	f	Ljava/util/Map;	cY	HALF_BOTTOM_SHAPE_OUTER_RIGHT_FACING_WEST
	f	Ljava/util/Map;	cZ	HALF_BOTTOM_SHAPE_STRAIGHT_FACING_EAST
	f	Ljava/util/Map;	da	HALF_BOTTOM_SHAPE_STRAIGHT_FACING_NORTH
	f	Ljava/util/Map;	db	HALF_BOTTOM_SHAPE_STRAIGHT_FACING_SOUTH
	f	Ljava/util/Map;	dc	HALF_BOTTOM_SHAPE_STRAIGHT_FACING_WEST
	f	Ljava/util/Map;	dd	HALF_LOWER
	f	Ljava/util/Map;	de	HALF_TOP_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	df	HALF_TOP_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	dg	HALF_TOP_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	dh	HALF_TOP_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	di	HALF_TOP_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	dj	HALF_TOP_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	dk	HALF_TOP_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	dl	HALF_TOP_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	dm	HALF_TOP_SHAPE_INNER_LEFT_FACING_EAST
	f	Ljava/util/Map;	dn	HALF_TOP_SHAPE_INNER_LEFT_FACING_NORTH
	f	Ljava/util/Map;	do	HALF_TOP_SHAPE_INNER_LEFT_FACING_SOUTH
	f	Ljava/util/Map;	dp	HALF_TOP_SHAPE_INNER_LEFT_FACING_WEST
	f	Ljava/util/Map;	dq	HALF_TOP_SHAPE_INNER_RIGHT_FACING_EAST
	f	Ljava/util/Map;	dr	HALF_TOP_SHAPE_INNER_RIGHT_FACING_NORTH
	f	Ljava/util/Map;	ds	HALF_TOP_SHAPE_INNER_RIGHT_FACING_SOUTH
	f	Ljava/util/Map;	dt	HALF_TOP_SHAPE_INNER_RIGHT_FACING_WEST
	f	Ljava/util/Map;	du	HALF_TOP_SHAPE_OUTER_LEFT_FACING_EAST
	f	Ljava/util/Map;	dv	HALF_TOP_SHAPE_OUTER_LEFT_FACING_NORTH
	f	Ljava/util/Map;	dw	HALF_TOP_SHAPE_OUTER_LEFT_FACING_SOUTH
	f	Ljava/util/Map;	dx	HALF_TOP_SHAPE_OUTER_LEFT_FACING_WEST
	f	Ljava/util/Map;	dy	HALF_TOP_SHAPE_OUTER_RIGHT_FACING_EAST
	f	Ljava/util/Map;	dz	HALF_TOP_SHAPE_OUTER_RIGHT_FACING_NORTH
	f	Ljava/util/Map;	dA	HALF_TOP_SHAPE_OUTER_RIGHT_FACING_SOUTH
	f	Ljava/util/Map;	dB	HALF_TOP_SHAPE_OUTER_RIGHT_FACING_WEST
	f	Ljava/util/Map;	dC	HALF_TOP_SHAPE_STRAIGHT_FACING_EAST
	f	Ljava/util/Map;	dD	HALF_TOP_SHAPE_STRAIGHT_FACING_NORTH
	f	Ljava/util/Map;	dE	HALF_TOP_SHAPE_STRAIGHT_FACING_SOUTH
	f	Ljava/util/Map;	dF	HALF_TOP_SHAPE_STRAIGHT_FACING_WEST
	f	Ljava/util/Map;	dG	HALF_UPPER
	f	Ljava/util/Map;	dH	LEVEL_0
	f	Ljava/util/Map;	dI	LEVEL_1
	f	Ljava/util/Map;	dJ	LEVEL_10
	f	Ljava/util/Map;	dK	LEVEL_11
	f	Ljava/util/Map;	dL	LEVEL_12
	f	Ljava/util/Map;	dM	LEVEL_13
	f	Ljava/util/Map;	dN	LEVEL_14
	f	Ljava/util/Map;	dO	LEVEL_15
	f	Ljava/util/Map;	dP	LEVEL_2
	f	Ljava/util/Map;	dQ	LEVEL_3
	f	Ljava/util/Map;	dR	LEVEL_4
	f	Ljava/util/Map;	dS	LEVEL_5
	f	Ljava/util/Map;	dT	LEVEL_6
	f	Ljava/util/Map;	dU	LEVEL_7
	f	Ljava/util/Map;	dV	LEVEL_8
	f	Ljava/util/Map;	dW	LEVEL_9
	f	Ljava/util/Map;	dX	LIT_FALSE
	f	Ljava/util/Map;	dY	LIT_TRUE
	f	Ljava/util/Map;	dZ	NORTH_FALSE_EAST_FALSE_UP_FALSE_WEST_FALSE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	ea	NORTH_FALSE_EAST_FALSE_UP_TRUE_WEST_FALSE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	eb	NORTH_FALSE_EAST_FALSE_UP_TRUE_WEST_FALSE_SOUTH_TRUE_DOWN_FALSE
	f	Ljava/util/Map;	ec	NORTH_FALSE_EAST_FALSE_UP_TRUE_WEST_TRUE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	ed	NORTH_FALSE_EAST_FALSE_UP_TRUE_WEST_TRUE_SOUTH_TRUE_DOWN_FALSE
	f	Ljava/util/Map;	ee	NORTH_FALSE_EAST_TRUE_UP_TRUE_WEST_FALSE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	ef	NORTH_FALSE_EAST_TRUE_UP_TRUE_WEST_FALSE_SOUTH_TRUE_DOWN_FALSE
	f	Ljava/util/Map;	eg	NORTH_TRUE_EAST_FALSE_UP_TRUE_WEST_FALSE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	eh	NORTH_TRUE_EAST_FALSE_UP_TRUE_WEST_TRUE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	ei	NORTH_TRUE_EAST_TRUE_UP_FALSE_WEST_TRUE_SOUTH_TRUE_DOWN_FALSE
	f	Ljava/util/Map;	ej	NORTH_TRUE_EAST_TRUE_UP_TRUE_WEST_FALSE_SOUTH_FALSE_DOWN_FALSE
	f	Ljava/util/Map;	ek	NORTH_TRUE_EAST_TRUE_UP_TRUE_WEST_TRUE_SOUTH_TRUE_DOWN_TRUE
	f	Ljava/util/Map;	el	POWERED_FALSE
	f	Ljava/util/Map;	em	POWERED_FALSE_IN_WALL_FALSE_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	en	POWERED_FALSE_IN_WALL_FALSE_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	eo	POWERED_FALSE_IN_WALL_FALSE_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	ep	POWERED_FALSE_IN_WALL_FALSE_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	eq	POWERED_FALSE_IN_WALL_FALSE_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	er	POWERED_FALSE_IN_WALL_FALSE_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	es	POWERED_FALSE_IN_WALL_FALSE_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	et	POWERED_FALSE_IN_WALL_FALSE_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	eu	POWERED_FALSE_IN_WALL_TRUE_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	ev	POWERED_FALSE_IN_WALL_TRUE_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	ew	POWERED_FALSE_IN_WALL_TRUE_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	ex	POWERED_FALSE_IN_WALL_TRUE_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	ey	POWERED_FALSE_IN_WALL_TRUE_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	ez	POWERED_FALSE_IN_WALL_TRUE_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	eA	POWERED_FALSE_IN_WALL_TRUE_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	eB	POWERED_FALSE_IN_WALL_TRUE_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	eC	POWERED_FALSE_MODE_COMPARE_FACING_EAST
	f	Ljava/util/Map;	eD	POWERED_FALSE_MODE_COMPARE_FACING_NORTH
	f	Ljava/util/Map;	eE	POWERED_FALSE_MODE_COMPARE_FACING_SOUTH
	f	Ljava/util/Map;	eF	POWERED_FALSE_MODE_COMPARE_FACING_WEST
	f	Ljava/util/Map;	eG	POWERED_FALSE_MODE_SUBTRACT_FACING_EAST
	f	Ljava/util/Map;	eH	POWERED_FALSE_MODE_SUBTRACT_FACING_NORTH
	f	Ljava/util/Map;	eI	POWERED_FALSE_MODE_SUBTRACT_FACING_SOUTH
	f	Ljava/util/Map;	eJ	POWERED_FALSE_MODE_SUBTRACT_FACING_WEST
	f	Ljava/util/Map;	eK	POWERED_TRUE
	f	Ljava/util/Map;	eL	POWERED_TRUE_IN_WALL_FALSE_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	eM	POWERED_TRUE_IN_WALL_FALSE_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	eN	POWERED_TRUE_IN_WALL_FALSE_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	eO	POWERED_TRUE_IN_WALL_FALSE_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	eP	POWERED_TRUE_IN_WALL_FALSE_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	eQ	POWERED_TRUE_IN_WALL_FALSE_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	eR	POWERED_TRUE_IN_WALL_FALSE_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	eS	POWERED_TRUE_IN_WALL_FALSE_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	eT	POWERED_TRUE_IN_WALL_TRUE_OPEN_FALSE_FACING_EAST
	f	Ljava/util/Map;	eU	POWERED_TRUE_IN_WALL_TRUE_OPEN_FALSE_FACING_NORTH
	f	Ljava/util/Map;	eV	POWERED_TRUE_IN_WALL_TRUE_OPEN_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	eW	POWERED_TRUE_IN_WALL_TRUE_OPEN_FALSE_FACING_WEST
	f	Ljava/util/Map;	eX	POWERED_TRUE_IN_WALL_TRUE_OPEN_TRUE_FACING_EAST
	f	Ljava/util/Map;	eY	POWERED_TRUE_IN_WALL_TRUE_OPEN_TRUE_FACING_NORTH
	f	Ljava/util/Map;	eZ	POWERED_TRUE_IN_WALL_TRUE_OPEN_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	fa	POWERED_TRUE_IN_WALL_TRUE_OPEN_TRUE_FACING_WEST
	f	Ljava/util/Map;	fb	POWERED_TRUE_MODE_COMPARE_FACING_EAST
	f	Ljava/util/Map;	fc	POWERED_TRUE_MODE_COMPARE_FACING_NORTH
	f	Ljava/util/Map;	fd	POWERED_TRUE_MODE_COMPARE_FACING_SOUTH
	f	Ljava/util/Map;	fe	POWERED_TRUE_MODE_COMPARE_FACING_WEST
	f	Ljava/util/Map;	ff	POWERED_TRUE_MODE_SUBTRACT_FACING_EAST
	f	Ljava/util/Map;	fg	POWERED_TRUE_MODE_SUBTRACT_FACING_NORTH
	f	Ljava/util/Map;	fh	POWERED_TRUE_MODE_SUBTRACT_FACING_SOUTH
	f	Ljava/util/Map;	fi	POWERED_TRUE_MODE_SUBTRACT_FACING_WEST
	f	Ljava/util/Map;	fj	POWER_0
	f	Ljava/util/Map;	fk	POWER_1
	f	Ljava/util/Map;	fl	POWER_10
	f	Ljava/util/Map;	fm	POWER_11
	f	Ljava/util/Map;	fn	POWER_12
	f	Ljava/util/Map;	fo	POWER_13
	f	Ljava/util/Map;	fp	POWER_14
	f	Ljava/util/Map;	fq	POWER_15
	f	Ljava/util/Map;	fr	POWER_2
	f	Ljava/util/Map;	fs	POWER_3
	f	Ljava/util/Map;	ft	POWER_4
	f	Ljava/util/Map;	fu	POWER_5
	f	Ljava/util/Map;	fv	POWER_6
	f	Ljava/util/Map;	fw	POWER_7
	f	Ljava/util/Map;	fx	POWER_8
	f	Ljava/util/Map;	fy	POWER_9
	f	Ljava/util/Map;	fz	ROTATION_0
	f	Ljava/util/Map;	fA	ROTATION_1
	f	Ljava/util/Map;	fB	ROTATION_10
	f	Ljava/util/Map;	fC	ROTATION_11
	f	Ljava/util/Map;	fD	ROTATION_12
	f	Ljava/util/Map;	fE	ROTATION_13
	f	Ljava/util/Map;	fF	ROTATION_14
	f	Ljava/util/Map;	fG	ROTATION_15
	f	Ljava/util/Map;	fH	ROTATION_2
	f	Ljava/util/Map;	fI	ROTATION_3
	f	Ljava/util/Map;	fJ	ROTATION_4
	f	Ljava/util/Map;	fK	ROTATION_5
	f	Ljava/util/Map;	fL	ROTATION_6
	f	Ljava/util/Map;	fM	ROTATION_7
	f	Ljava/util/Map;	fN	ROTATION_8
	f	Ljava/util/Map;	fO	ROTATION_9
	f	Ljava/util/Map;	fP	SHAPE_ASCENDING_EAST_POWERED_FALSE
	f	Ljava/util/Map;	fQ	SHAPE_ASCENDING_EAST_POWERED_TRUE
	f	Ljava/util/Map;	fR	SHAPE_ASCENDING_NORTH_POWERED_FALSE
	f	Ljava/util/Map;	fS	SHAPE_ASCENDING_NORTH_POWERED_TRUE
	f	Ljava/util/Map;	fT	SHAPE_ASCENDING_SOUTH_POWERED_FALSE
	f	Ljava/util/Map;	fU	SHAPE_ASCENDING_SOUTH_POWERED_TRUE
	f	Ljava/util/Map;	fV	SHAPE_ASCENDING_WEST_POWERED_FALSE
	f	Ljava/util/Map;	fW	SHAPE_ASCENDING_WEST_POWERED_TRUE
	f	Ljava/util/Map;	fX	SHAPE_EAST_WEST_POWERED_FALSE
	f	Ljava/util/Map;	fY	SHAPE_EAST_WEST_POWERED_TRUE
	f	Ljava/util/Map;	fZ	SHAPE_NORTH_SOUTH_POWERED_FALSE
	f	Ljava/util/Map;	ga	SHAPE_NORTH_SOUTH_POWERED_TRUE
	f	Ljava/util/Map;	gb	SNOWY_FALSE
	f	Ljava/util/Map;	gc	STAGE_0
	f	Ljava/util/Map;	gd	STAGE_1
	f	Ljava/util/Map;	ge	TRIGGERED_FALSE_FACING_DOWN
	f	Ljava/util/Map;	gf	TRIGGERED_FALSE_FACING_EAST
	f	Ljava/util/Map;	gg	TRIGGERED_FALSE_FACING_NORTH
	f	Ljava/util/Map;	gh	TRIGGERED_FALSE_FACING_SOUTH
	f	Ljava/util/Map;	gi	TRIGGERED_FALSE_FACING_UP
	f	Ljava/util/Map;	gj	TRIGGERED_FALSE_FACING_WEST
	f	Ljava/util/Map;	gk	TRIGGERED_TRUE_FACING_DOWN
	f	Ljava/util/Map;	gl	TRIGGERED_TRUE_FACING_EAST
	f	Ljava/util/Map;	gm	TRIGGERED_TRUE_FACING_NORTH
	f	Ljava/util/Map;	gn	TRIGGERED_TRUE_FACING_SOUTH
	f	Ljava/util/Map;	go	TRIGGERED_TRUE_FACING_UP
	f	Ljava/util/Map;	gp	TRIGGERED_TRUE_FACING_WEST
	f	Ljava/util/Map;	gq	TYPE_BOTTOM
	f	Ljava/util/Map;	gr	TYPE_DOUBLE
	f	Ljava/util/Map;	gs	TYPE_TOP
	f	Ljava/util/Map;	gt	UP_FALSE_EAST_FALSE_NORTH_FALSE_SOUTH_FALSE_WEST_FALSE
	f	Ljava/util/Map;	gu	WEST_FALSE_NORTH_FALSE_SOUTH_FALSE_EAST_FALSE
	f	Ljava/util/Map;	gv	WEST_FALSE_NORTH_FALSE_SOUTH_FALSE_EAST_TRUE
	f	Ljava/util/Map;	gw	WEST_FALSE_NORTH_FALSE_SOUTH_TRUE_EAST_FALSE
	f	Ljava/util/Map;	gx	WEST_FALSE_NORTH_FALSE_SOUTH_TRUE_EAST_TRUE
	f	Ljava/util/Map;	gy	WEST_FALSE_NORTH_TRUE_SOUTH_FALSE_EAST_FALSE
	f	Ljava/util/Map;	gz	WEST_FALSE_NORTH_TRUE_SOUTH_FALSE_EAST_TRUE
	f	Ljava/util/Map;	gA	WEST_FALSE_NORTH_TRUE_SOUTH_TRUE_EAST_FALSE
	f	Ljava/util/Map;	gB	WEST_FALSE_NORTH_TRUE_SOUTH_TRUE_EAST_TRUE
	f	Ljava/util/Map;	gC	WEST_TRUE_NORTH_FALSE_SOUTH_FALSE_EAST_FALSE
	f	Ljava/util/Map;	gD	WEST_TRUE_NORTH_FALSE_SOUTH_FALSE_EAST_TRUE
	f	Ljava/util/Map;	gE	WEST_TRUE_NORTH_FALSE_SOUTH_TRUE_EAST_FALSE
	f	Ljava/util/Map;	gF	WEST_TRUE_NORTH_FALSE_SOUTH_TRUE_EAST_TRUE
	f	Ljava/util/Map;	gG	WEST_TRUE_NORTH_TRUE_SOUTH_FALSE_EAST_FALSE
	f	Ljava/util/Map;	gH	WEST_TRUE_NORTH_TRUE_SOUTH_FALSE_EAST_TRUE
	f	Ljava/util/Map;	gI	WEST_TRUE_NORTH_TRUE_SOUTH_TRUE_EAST_FALSE
	f	Ljava/util/Map;	gJ	WEST_TRUE_NORTH_TRUE_SOUTH_TRUE_EAST_TRUE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	create
	m	(Ljava/lang/String;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	create
	m	(ILcom/mojang/serialization/Dynamic;[Lcom/mojang/serialization/Dynamic;)V	a	register
	m	()V	a	finalizeMaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Ljava/lang/String;)Ljava/lang/String;	a	upgradeBlock
	m	(I)Ljava/lang/String;	a	upgradeBlock
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getTag
	m	()V	b	bootstrap0
	m	()V	c	bootstrap1
	m	()V	d	bootstrap2
	m	()V	e	bootstrap3_1
	m	()V	f	bootstrap3_2
	m	()V	g	bootstrap4
	m	()V	h	bootstrap5
	m	()V	i	bootstrap6
	m	()V	j	bootstrap7
	m	()V	k	bootstrap8
	m	()V	l	bootstrap9
	m	()V	m	bootstrapA
	m	()V	n	bootstrapB
	m	()V	o	bootstrapC
	m	()V	p	bootstrapD
	m	()V	q	bootstrapE
	m	()V	r	bootstrapF
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bfi	net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bfj	net/minecraft/util/datafix/fixes/BoatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Z	a	isNormalBoat
	m	(Ljava/lang/String;)Z	b	isChestBoat
	m	(Ljava/lang/String;)Z	c	isAnyBoat
	m	(Ljava/lang/String;)Ljava/lang/String;	d	mapVariantToNormalBoat
	m	(Ljava/lang/String;)Ljava/lang/String;	e	mapVariantToChestBoat
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bfk	net/minecraft/util/datafix/fixes/CarvingStepRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixChunk
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixChunk$0
c	bfl	net/minecraft/util/datafix/fixes/CatTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bfm	net/minecraft/util/datafix/fixes/CauldronRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bfn	net/minecraft/util/datafix/fixes/CavesAndCliffsRenames
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	bfo	net/minecraft/util/datafix/fixes/ChestedHorsesInventoryZeroIndexingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;)Lcom/mojang/datafixers/TypeRewriteRule;	a	horseLikeInventoryIndexingFixer
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$horseLikeInventoryIndexingFixer$5
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$horseLikeInventoryIndexingFixer$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$horseLikeInventoryIndexingFixer$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	c	lambda$horseLikeInventoryIndexingFixer$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$horseLikeInventoryIndexingFixer$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$horseLikeInventoryIndexingFixer$0
c	bfp	net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$5
	m	(Ljava/util/List;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)V	a	lambda$cap$4
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;IIIIJ)Ljava/util/Map;	a	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$0
c	bfq	net/minecraft/util/datafix/fixes/ChunkBiomeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bfr	net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bfs	net/minecraft/util/datafix/fixes/ChunkDeleteLightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bft	net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix
	f	Ljava/lang/String;	a	DATAFIXER_CONTEXT_TAG
	f	Ljava/lang/String;	d	NAME
	f	I	e	OLD_SECTION_COUNT
	f	I	f	NEW_SECTION_COUNT
	f	I	g	NEW_MIN_SECTION_Y
	f	I	b	BLOCKS_PER_SECTION
	f	I	h	LONGS_PER_SECTION
	f	I	i	HEIGHTMAP_BITS
	f	J	j	HEIGHTMAP_MASK
	f	I	k	HEIGHTMAP_OFFSET
	f	[Ljava/lang/String;	l	HEIGHTMAP_TYPES
	f	Ljava/util/Set;	m	STATUS_IS_OR_AFTER_SURFACE
	f	Ljava/util/Set;	n	STATUS_IS_OR_AFTER_NOISE
	f	Ljava/util/Set;	o	BLOCKS_BEFORE_FEATURE_STATUS
	f	I	p	BIOME_CONTAINER_LAYER_SIZE
	f	I	q	BIOME_CONTAINER_SIZE
	f	I	r	BIOME_CONTAINER_TOP_LAYER_OFFSET
	f	Ljava/lang/String;	c	DEFAULT_BIOME
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	s	BIOMES_BY_ID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	predictChunkStatusBeforeSurface
	m	(Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic;	a	getBiomeContainers
	m	([II)I	a	getOldBiome
	m	(Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic;	a	updateChunkTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	shiftUpgradeData
	m	(Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic;	a	updateCarvingMasks
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	addPaddingEntries
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateHeightmaps
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	getFixedHeightmap
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic;	a	makeBiomeContainer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	makePalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	makeOptimizedPalettedContainer
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	padPaletteEntries
	m	(I)I	a	ceillog2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeBiomeContainer$23
	m	(J)J	a	lambda$getFixedHeightmap$22
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateHeightmaps$21
	m	(IILcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateCarvingMasks$20
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$shiftUpgradeData$19
	m	(Ljava/util/Map;Ljava/util/Map;)V	a	lambda$shiftUpgradeData$18
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$shiftUpgradeData$17
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/lang/Integer;)V	a	lambda$shiftUpgradeData$16
	m	([II)I	b	lambda$getBiomeContainers$15
	m	([II)I	c	lambda$getBiomeContainers$14
	m	([III)I	a	lambda$getBiomeContainers$13
	m	([III)I	b	lambda$getBiomeContainers$12
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$predictChunkStatusBeforeSurface$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$10
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$9
	m	(ZLjava/util/Set;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/lang/String;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$8
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;I[Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/IntSet;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lbfw$a;	g	lambda$makeRule$5
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	h	lambda$makeRule$2
	m	()Ljava/lang/IllegalStateException;	a	lambda$makeRule$1
	m	()Lbfw$a;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bfu	net/minecraft/util/datafix/fixes/ChunkLightRemoveFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bfv	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	Lorg/slf4j/Logger;	i	LOGGER
	f	I	j	SIZE
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getName
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String;	a	getProperty
	m	(Lbaw;Lcom/mojang/serialization/Dynamic;)I	a	idFor
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(ZZZZ)I	a	getSideMask
	m	()V	<clinit>	<clinit>
c	bfv$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer
	f	I	a	SIZE
	f	I	b	NIBBLE_SIZE
	f	[B	c	data
	m	()V	<init>	<init>
	m	([B)V	<init>	<init>
	m	(III)I	a	get
	m	(I)Z	a	isFirst
	m	(I)I	b	getPosition
c	bfv$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction
	f	Lbfv$b;	a	DOWN
	f	Lbfv$b;	b	UP
	f	Lbfv$b;	c	NORTH
	f	Lbfv$b;	d	SOUTH
	f	Lbfv$b;	e	WEST
	f	Lbfv$b;	f	EAST
	f	Lbfv$b$a;	g	axis
	f	Lbfv$b$b;	h	axisDirection
	f	[Lbfv$b;	i	$VALUES
	m	()[Lbfv$b;	values	values
	m	(Ljava/lang/String;)Lbfv$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILbfv$b$b;Lbfv$b$a;)V	<init>	<init>
	m	()Lbfv$b$b;	a	getAxisDirection
	m	()Lbfv$b$a;	b	getAxis
	m	()[Lbfv$b;	c	$values
	m	()V	<clinit>	<clinit>
c	bfv$b$a	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis
	f	Lbfv$b$a;	a	X
	f	Lbfv$b$a;	b	Y
	f	Lbfv$b$a;	c	Z
	f	[Lbfv$b$a;	d	$VALUES
	m	()[Lbfv$b$a;	values	values
	m	(Ljava/lang/String;)Lbfv$b$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbfv$b$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bfv$b$b	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection
	f	Lbfv$b$b;	a	POSITIVE
	f	Lbfv$b$b;	b	NEGATIVE
	f	I	c	step
	f	[Lbfv$b$b;	d	$VALUES
	m	()[Lbfv$b$b;	values	values
	m	(Ljava/lang/String;)Lbfv$b$b;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	getStep
	m	()[Lbfv$b$b;	b	$values
	m	()V	<clinit>	<clinit>
c	bfv$c	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$MappingConstants
	f	Ljava/util/BitSet;	a	VIRTUAL
	f	Ljava/util/BitSet;	b	FIX
	f	Lcom/mojang/serialization/Dynamic;	c	PUMPKIN
	f	Lcom/mojang/serialization/Dynamic;	d	SNOWY_PODZOL
	f	Lcom/mojang/serialization/Dynamic;	e	SNOWY_GRASS
	f	Lcom/mojang/serialization/Dynamic;	f	SNOWY_MYCELIUM
	f	Lcom/mojang/serialization/Dynamic;	g	UPPER_SUNFLOWER
	f	Lcom/mojang/serialization/Dynamic;	h	UPPER_LILAC
	f	Lcom/mojang/serialization/Dynamic;	i	UPPER_TALL_GRASS
	f	Lcom/mojang/serialization/Dynamic;	j	UPPER_LARGE_FERN
	f	Lcom/mojang/serialization/Dynamic;	k	UPPER_ROSE_BUSH
	f	Lcom/mojang/serialization/Dynamic;	l	UPPER_PEONY
	f	Ljava/util/Map;	m	FLOWER_POT_MAP
	f	Ljava/util/Map;	n	SKULL_MAP
	f	Ljava/util/Map;	o	DOOR_MAP
	f	Ljava/util/Map;	p	NOTE_BLOCK_MAP
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	q	DYE_COLOR_MAP
	f	Ljava/util/Map;	r	BED_BLOCK_MAP
	f	Ljava/util/Map;	s	BANNER_BLOCK_MAP
	f	Lcom/mojang/serialization/Dynamic;	t	AIR
	m	()V	<init>	<init>
	m	(Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V	a	mapSkull
	m	(Ljava/util/Map;Ljava/lang/String;)V	a	mapDoor
	m	(Ljava/util/Map;ILjava/lang/String;)V	a	addBeds
	m	(Ljava/util/Map;ILjava/lang/String;)V	b	addBanners
	m	(Ljava/util/HashMap;)V	a	lambda$static$6
	m	(Ljava/util/HashMap;)V	b	lambda$static$5
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$4
	m	(Ljava/util/HashMap;)V	c	lambda$static$3
	m	(Ljava/util/HashMap;)V	d	lambda$static$2
	m	(Ljava/util/HashMap;)V	e	lambda$static$1
	m	(Ljava/util/HashMap;)V	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bfv$d	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section
	f	Lbaw;	b	palette
	f	Ljava/util/List;	c	listTag
	f	Lcom/mojang/serialization/Dynamic;	d	section
	f	Z	e	hasData
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	toFix
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	update
	f	I	a	y
	f	Ljava/util/Set;	h	seen
	f	[I	i	buffer
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(I)I	b	upgrade
	m	(II)V	a	addFix
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(Ljava/nio/ByteBuffer;)Lbfv$a;	a	lambda$upgrade$1
	m	(Ljava/nio/ByteBuffer;)Lbfv$a;	b	lambda$upgrade$0
c	bfv$e	net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk
	f	I	a	sides
	f	[Lbfv$d;	b	sections
	f	Lcom/mojang/serialization/Dynamic;	c	level
	f	I	d	x
	f	I	e	z
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	f	blockEntities
	m	(Lcom/mojang/serialization/Dynamic;)V	<init>	<init>
	m	(I)Lcom/mojang/serialization/Dynamic;	b	getBlockEntity
	m	(I)Lcom/mojang/serialization/Dynamic;	c	removeBlockEntity
	m	(ILbfv$b;)I	a	relative
	m	(ILcom/mojang/serialization/Dynamic;)V	a	setBlock
	m	(I)Lbfv$d;	d	getSection
	m	(I)Lcom/mojang/serialization/Dynamic;	a	getBlock
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(Ljava/util/stream/Stream;)V	a	lambda$new$3
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Ljava/util/stream/Stream;)V	b	lambda$new$1
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$new$0
c	bfw	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix
	f	I	a	SECTION_WIDTH
	f	Lcom/google/common/collect/ImmutableSet;	b	ALWAYS_WATERLOGGED
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	makeTickList
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getBlock
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	b	getLiquid
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	createTick
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIILjava/util/function/Function;I)Lcom/mojang/serialization/Dynamic;	a	lambda$makeTickList$15
	m	(I)Z	a	lambda$makeTickList$14
	m	(Lcom/mojang/serialization/Dynamic;)I	c	lambda$makeTickList$13
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$12
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$10
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$9
	m	(BLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lorg/apache/commons/lang3/mutable/MutableInt;Lcom/mojang/datafixers/OpticFinder;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$6
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;ILcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)V	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;)Lbfw$a;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/List;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	d	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bfw$a	net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer
	f	J	a	SIZE_BITS
	f	Ljava/util/List;	b	palette
	f	[J	c	data
	f	I	d	bits
	f	J	e	mask
	f	I	f	valuesPerLong
	m	(Ljava/util/List;[J)V	<init>	<init>
	m	(III)Lcom/mojang/serialization/Dynamic;	a	get
	m	(III)I	b	getIndex
	m	()Ljava/util/List;	a	palette
	m	()[J	b	data
c	bfx	net/minecraft/util/datafix/fixes/ChunkRenamesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	renameField
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	renameFieldHelper
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	appendChunkName
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainders
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainders$5
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainders$4
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$renameField$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	bfy	net/minecraft/util/datafix/fixes/ChunkStatusFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bfz	net/minecraft/util/datafix/fixes/ChunkStatusFix2
	f	Ljava/util/Map;	a	RENAMES_AND_DOWNGRADES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bga	net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix
	f	Lcom/google/common/collect/ImmutableMap;	a	RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChildren
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixChildren$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixChildren$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bgb	net/minecraft/util/datafix/fixes/ChunkTicketUnpackPosFix
	f	J	a	CHUNK_COORD_BITS
	f	J	b	CHUNK_COORD_MASK
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$0
c	bgc	net/minecraft/util/datafix/fixes/ChunkToProtochunkFix
	f	I	a	NUM_SECTIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixChunkData
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	repackBiomes
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	repackTicks
	m	(III)S	a	packOffsetCoordinates
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$7
	m	(Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/shorts/ShortList;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$6
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	lambda$repackTicks$5
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;)V	a	lambda$repackTicks$4
	m	(I)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$repackTicks$3
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/nio/ByteBuffer;)Lcom/mojang/serialization/Dynamic;	a	lambda$repackBiomes$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	bgd	net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bge	net/minecraft/util/datafix/fixes/ContainerBlockEntityLockPredicateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixBlockEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixBlockEntity$0
c	bgf	net/minecraft/util/datafix/fixes/CriteriaRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	advancementId
	f	Ljava/util/function/UnaryOperator;	c	conversions
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixAdvancements
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixAdvancements$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAdvancements$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixAdvancements$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixAdvancements$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdvancements$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bgg	net/minecraft/util/datafix/fixes/CustomModelDataExpandFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bgh	net/minecraft/util/datafix/fixes/DataComponentRemainderFix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	componentId
	f	Ljava/lang/String;	c	newComponentId
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bgi	net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix
	f	Ljava/lang/String;	a	DECORATED_POT_ID
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
c	bgj	net/minecraft/util/datafix/fixes/DropChancesFormatFix
	f	Ljava/util/List;	a	ARMOR_SLOT_NAMES
	f	Ljava/util/List;	b	HAND_SLOT_NAMES
	f	F	c	DEFAULT_CHANCE
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/List;Ljava/util/List;)Lcom/mojang/serialization/Dynamic;	a	addSlotChances
	m	(Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/List;	a	parseDropChances
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Float;	a	lambda$parseDropChances$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bgk	net/minecraft/util/datafix/fixes/DropInvalidSignDataFix
	f	Ljava/lang/String;	a	entityName
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixText
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$1
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fixText$0
c	bgl	net/minecraft/util/datafix/fixes/DyeItemRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	bgm	net/minecraft/util/datafix/fixes/EffectDurationFix
	f	Ljava/util/Set;	a	POTION_ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEffect
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEffect$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bgn	net/minecraft/util/datafix/fixes/EmptyItemInHotbarFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
c	bgo	net/minecraft/util/datafix/fixes/EmptyItemInVillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bgp	net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bgq	net/minecraft/util/datafix/fixes/EntityAttributeBaseValueFix
	f	Ljava/lang/String;	c	attributeId
	f	Ljava/util/function/DoubleUnaryOperator;	d	valueFixer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/DoubleUnaryOperator;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
c	bgr	net/minecraft/util/datafix/fixes/EntityBlockStateFix
	f	Ljava/util/Map;	a	MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)I	a	getBlockId
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFallingBlock
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	updateBlockToBlockState
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateBlockToBlockState$12
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateBlockToBlockState$11
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$updateFallingBlock$10
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Unit;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$9
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$8
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Integer;	a	lambda$updateFallingBlock$7
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	b	lambda$updateFallingBlock$6
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bgs	net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bgt	net/minecraft/util/datafix/fixes/EntityCatSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	bgu	net/minecraft/util/datafix/fixes/EntityCodSalmonFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_EGG_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()V	<clinit>	<clinit>
c	bgv	net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	fixEntity
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixCustomName
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEntity$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bgw	net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	bgx	net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixDropChances
	m	()Ljava/lang/Float;	a	lambda$fixDropChances$7
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Float;	b	lambda$fixDropChances$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$5
	m	(Ljava/lang/Object;Lcom/mojang/datafixers/util/Either;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$4
	m	(Ljava/lang/Object;Lcom/mojang/datafixers/util/Either;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Unit;)Ljava/util/List;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$0
c	bgy	net/minecraft/util/datafix/fixes/EntityFallDistanceFloatToDoubleFix
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEntity$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEntity$0
c	bgz	net/minecraft/util/datafix/fixes/EntityFieldsRenameFix
	f	Ljava/util/Map;	c	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bha	net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bhb	net/minecraft/util/datafix/fixes/EntityHealthFix
	f	Ljava/util/Set;	a	ENTITIES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bhc	net/minecraft/util/datafix/fixes/EntityHorseSaddleFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bhd	net/minecraft/util/datafix/fixes/EntityHorseSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bhe	net/minecraft/util/datafix/fixes/EntityIdFix
	f	Ljava/util/Map;	a	ID_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bhf	net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(B)B	a	direction2dTo3d
c	bhg	net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bhh	net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix
	f	[[I	a	DIRECTIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic;	a	doFix
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bhi	net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix
	f	Ljava/util/Map;	c	MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bhj	net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateProjectiles
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateOwnerArrow
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateOwnerLlamaSpit
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateOwnerThrowable
	m	(Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic;	a	setUUID
	m	(JJ)[I	a	createUUIDArray
	m	(Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateEntity
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateEntity$0
c	bhk	net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()V	<clinit>	<clinit>
c	bhl	net/minecraft/util/datafix/fixes/EntityRavagerRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()V	<clinit>	<clinit>
c	bhm	net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix
	f	Lcom/mojang/serialization/Codec;	a	FLOAT_LIST_CODEC
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/OptionalDynamic;I)Z	a	isZeroList
	m	(ILjava/util/List;)Ljava/lang/Boolean;	a	lambda$isZeroList$3
	m	(Ljava/lang/Float;)Z	a	lambda$isZeroList$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bhn	net/minecraft/util/datafix/fixes/EntityRenameFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	getEntity
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	a	lambda$makeRule$0
c	bho	net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$cap$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$5
	m	()Ljava/lang/IllegalStateException;	a	lambda$cap$4
	m	()Ljava/lang/IllegalStateException;	b	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Either;	a	lambda$cap$2
	m	()Ljava/lang/IllegalStateException;	c	lambda$cap$1
	m	()Ljava/lang/IllegalStateException;	d	lambda$cap$0
c	bhp	net/minecraft/util/datafix/fixes/EntitySalmonSizeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bhq	net/minecraft/util/datafix/fixes/EntityShulkerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bhr	net/minecraft/util/datafix/fixes/EntityShulkerRotationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Double;	b	lambda$fixTag$0
c	bhs	net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	bht	net/minecraft/util/datafix/fixes/EntitySpawnerItemVariantComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(I)Ljava/lang/String;	a	getBaseColor
	m	(I)Ljava/lang/String;	b	getPatternColor
	m	(I)Ljava/lang/String;	c	getPattern
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTropicalFishBucket
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixAxolotlBucket
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixSalmonBucket
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixPainting
	m	(Ljava/lang/String;)Z	a	lambda$fixPainting$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixSalmonBucket$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixAxolotlBucket$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTropicalFishBucket$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bht$a	net/minecraft/util/datafix/fixes/EntitySpawnerItemVariantComponentFix$Fixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	apply	apply
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	fixRemainder	fixRemainder
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	fixRemainder	fixRemainder
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixRemainder$0
c	bhu	net/minecraft/util/datafix/fixes/EntityStringUuidFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bhv	net/minecraft/util/datafix/fixes/EntityTheRenameningFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	f	Ljava/util/Map;	b	RENAMED_BLOCKS
	f	Ljava/util/Map;	c	RENAMED_ITEMS
	f	Ljava/lang/String;	d	MINECRAFT_BRED
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()V	<clinit>	<clinit>
c	bhw	net/minecraft/util/datafix/fixes/EntityTippedArrowFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
c	bhx	net/minecraft/util/datafix/fixes/EntityUUIDFix
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/util/Set;	c	ABSTRACT_HORSES
	f	Ljava/util/Set;	d	TAMEABLE_ANIMALS
	f	Ljava/util/Set;	e	ANIMALS
	f	Ljava/util/Set;	f	MOBS
	f	Ljava/util/Set;	g	LIVING_ENTITIES
	f	Ljava/util/Set;	h	PROJECTILES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updatePiglin
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	updateEvokerFangs
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateZombieVillager
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	updateAreaEffectCloud
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	updateShulkerBullet
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	updateItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	updateFox
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	updateHurtBy
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	l	updateAnimalOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	m	updateAnimal
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	updateMob
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	updateProjectile
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateEntityUUID
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateProjectile$14
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateLivingEntity$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$updateLivingEntity$12
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateLivingEntity$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	q	lambda$updateLivingEntity$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$updateMob$9
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateFox$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateFox$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	s	lambda$updateFox$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	t	lambda$updateFox$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	u	lambda$updatePiglin$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	v	lambda$updatePiglin$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	w	lambda$updatePiglin$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	x	lambda$updatePiglin$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bhy	net/minecraft/util/datafix/fixes/EntityVariantFix
	f	Ljava/lang/String;	c	fieldName
	f	Ljava/util/function/IntFunction;	d	idConversions
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/IntFunction;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic;	a	updateAndRename
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$2
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$updateAndRename$0
c	bhz	net/minecraft/util/datafix/fixes/EntityWolfColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$0
c	bia	net/minecraft/util/datafix/fixes/EntityZombieSplitFix
	f	Ljava/util/function/Supplier;	b	zombieVillagerType
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	changeSchemaToZombieVillager
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$changeSchemaToZombieVillager$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$1
	m	()Lcom/mojang/datafixers/types/Type;	a	lambda$new$0
c	bib	net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix
	f	I	c	PROFESSION_MAX
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(I)I	a	getVillagerProfession
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bic	net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()V	<clinit>	<clinit>
c	bid	net/minecraft/util/datafix/fixes/EquipmentFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fix
	m	([Lcom/mojang/datafixers/util/Either;)Z	a	areAllEmpty
	m	(ILjava/util/List;Ljava/util/function/Predicate;)Lcom/mojang/datafixers/util/Either;	a	getItemFromList
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$fix$4
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/util/Unit;)Ljava/util/List;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/util/Unit;)Ljava/util/List;	b	lambda$fix$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/OpticFinder;Ljava/lang/Object;)Z	a	lambda$fix$0
c	bie	net/minecraft/util/datafix/fixes/EquippableAssetRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bif	net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Set;	b	flagsToRemove
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Set;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixTag$3
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$2
	m	(Ljava/util/List;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixTag$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	big	net/minecraft/util/datafix/fixes/FilteredBooksFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixItemStackTag$1
	m	(Ljava/lang/String;)Z	a	lambda$new$0
c	bih	net/minecraft/util/datafix/fixes/FilteredSignsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	bii	net/minecraft/util/datafix/fixes/FireResistantToDamageResistantComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
c	bij	net/minecraft/util/datafix/fixes/FixProjectileStoredItem
	f	Ljava/lang/String;	a	EMPTY_POTION
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;Lbij$a;)Ljava/util/function/Function;	a	fixChoice
	m	(Ljava/lang/String;Lbij$a;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Ljava/util/function/Function;	a	fixChoiceCap
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	fixArrow
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	a	getArrowType
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	b	fixSpectralArrow
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	createItemStack
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	c	castUnchecked
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixSpectralArrow$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixArrow$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lbij$a;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$1
	m	(Lbij$a;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$0
c	bij$a	net/minecraft/util/datafix/fixes/FixProjectileStoredItem$SubFixer
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	fix	fix
c	bik	net/minecraft/util/datafix/fixes/FixWolfHealth
	f	Ljava/lang/String;	c	WOLF_ID
	f	Ljava/lang/String;	d	WOLF_HEALTH
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$3
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	bil	net/minecraft/util/datafix/fixes/FoodToConsumableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bim	net/minecraft/util/datafix/fixes/ForcePoiRebuild
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$2
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$0
c	bin	net/minecraft/util/datafix/fixes/ForcedChunkToTicketFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bio	net/minecraft/util/datafix/fixes/FurnaceRecipeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateFurnaceContents
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/List;ILcom/mojang/serialization/Dynamic;)V	a	lambda$updateFurnaceContents$5
	m	(Ljava/util/List;ILcom/mojang/datafixers/util/Pair;)V	a	lambda$updateFurnaceContents$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$cap$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$cap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$cap$0
c	bip	net/minecraft/util/datafix/fixes/GoatHornIdFix
	f	[Ljava/lang/String;	a	INSTRUMENTS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
	m	(Ljava/lang/String;)Z	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	biq	net/minecraft/util/datafix/fixes/GossipUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$2
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$0
c	bir	net/minecraft/util/datafix/fixes/HeightmapRenamingFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bis	net/minecraft/util/datafix/fixes/HorseBodyArmorItemFix
	f	Ljava/lang/String;	a	previousBodyArmorTag
	f	Z	b	clearArmorItems
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$3
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	bit	net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	removeIglooPieces
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isIglooPiece
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$removeIglooPieces$3
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$removeIglooPieces$2
	m	(Ljava/util/stream/Stream;)Ljava/lang/Boolean;	b	lambda$fixTag$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	biu	net/minecraft/util/datafix/fixes/InlineBlockPosFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/OpticFinder;	a	entityFinder
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixPlayer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixLivingEntity
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixVex
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixPhantom
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixTurtle
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	fixBlockAttached
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/util/List;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	e	lambda$makeRule$0
c	biv	net/minecraft/util/datafix/fixes/InvalidBlockEntityLockFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	biw	net/minecraft/util/datafix/fixes/InvalidLockComponentFix
	f	Ljava/util/Optional;	a	INVALID_LOCK_CUSTOM_NAME
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixLock
	m	(Lcom/mojang/serialization/Dynamic;)Z	c	isBrokenLock
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/function/Predicate;)Z	a	isMapWithOneField
	m	(Lcom/mojang/serialization/Dynamic;)Z	d	lambda$isBrokenLock$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	e	lambda$isBrokenLock$0
	m	()V	<clinit>	<clinit>
c	bix	net/minecraft/util/datafix/fixes/ItemBannerColorFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	biy	net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	biz	net/minecraft/util/datafix/fixes/ItemIdFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ITEM_NAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(I)Ljava/lang/String;	a	getItem
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$2
	m	(Ljava/lang/Integer;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bja	net/minecraft/util/datafix/fixes/ItemLoreFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bjb	net/minecraft/util/datafix/fixes/ItemPotionFix
	f	I	b	SPLASH
	f	[Ljava/lang/String;	c	POTIONS
	f	Ljava/lang/String;	a	DEFAULT
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjc	net/minecraft/util/datafix/fixes/ItemRenameFix
	f	Ljava/lang/String;	a	name
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix;	a	create
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bjc$1	net/minecraft/util/datafix/fixes/ItemRenameFix$1
	f	Ljava/util/function/Function;	a	val$fixItem
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixItem
c	bjd	net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix
	f	[Ljava/lang/String;	a	NAMES_BY_COLOR
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bje	net/minecraft/util/datafix/fixes/ItemSpawnEggFix
	f	[Ljava/lang/String;	a	ID_TO_ENTITY
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	c	lambda$makeRule$1
	m	([Ljava/lang/String;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjf	net/minecraft/util/datafix/fixes/ItemStackComponentizationFix
	f	I	a	HIDE_ENCHANTMENTS
	f	I	b	HIDE_MODIFIERS
	f	I	c	HIDE_UNBREAKABLE
	f	I	d	HIDE_CAN_DESTROY
	f	I	e	HIDE_CAN_PLACE
	f	I	f	HIDE_ADDITIONAL
	f	I	g	HIDE_DYE
	f	I	h	HIDE_UPGRADES
	f	Ljava/util/Set;	i	POTION_HOLDER_IDS
	f	Ljava/util/Set;	j	BUCKETED_MOB_IDS
	f	Ljava/util/List;	k	BUCKETED_MOB_TAGS
	f	Ljava/util/Set;	l	BOOLEAN_BLOCK_STATE_PROPERTIES
	f	Lcom/google/common/base/Splitter;	m	PROPERTY_SPLITTER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	a	fixItemStack
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixBlockStateTag
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	fixDisplay
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixBlockEntityTag
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Z)V	a	fixEnchantments
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	c	parseEnchantment
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;I)V	b	fixAdventureModeChecks
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Z)V	b	fixBlockStatePredicates
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixBlockStatePredicate
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;I)V	c	fixAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixAttributeModifier
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	e	fixMapDecoration
	m	(I)Ljava/lang/String;	a	fixMapDecorationType
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	b	fixPotionContents
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	c	fixWritableBook
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	d	fixWrittenBook
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixBookPages
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Optional;)Lcom/mojang/serialization/Dynamic;	a	createFilteredText
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	f	fixBucketedMobData
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	g	fixLodestoneTracker
	m	(Lbjf$a;)V	a	fixFireworkStar
	m	(Lbjf$a;)V	b	fixFireworkRocket
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	fixFireworkExplosion
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProfile
	m	(Ljava/lang/String;)Z	a	isValidPlayerName
	m	(Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProfileProperties
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$27
	m	(Lbjf$a;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$26
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$fixProfileProperties$25
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixProfileProperties$24
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/List;	h	lambda$fixProfileProperties$23
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	i	lambda$fixProfileProperties$22
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	j	lambda$fixProfileProperties$21
	m	(I)Z	b	lambda$isValidPlayerName$20
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$fixFireworkRocket$19
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$fixFireworkStar$18
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	k	lambda$fixBookPages$17
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	l	lambda$fixBookPages$16
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/String;	m	lambda$fixBookPages$15
	m	(Ljava/lang/String;)Z	b	lambda$fixPotionContents$14
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	n	lambda$fixMapDecoration$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	o	lambda$fixAttributeModifier$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	p	lambda$fixBlockStatePredicates$11
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixBlockStatePredicates$10
	m	(Ljava/lang/String;Ljava/lang/Number;)Lcom/mojang/datafixers/util/Pair;	a	lambda$parseEnchantment$9
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	q	lambda$fixEnchantments$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	r	lambda$fixBlockEntityTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/Map;	a	lambda$fixBlockStateTag$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixBlockStateTag$5
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	j	lambda$fixItemStack$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixItemStack$3
	m	(Lbjf$a;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixItemStack$2
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	k	lambda$fixItemStack$1
	m	(Lbjf$a;Lcom/mojang/serialization/Dynamic;)V	l	lambda$fixItemStack$0
	m	()V	<clinit>	<clinit>
c	bjf$a	net/minecraft/util/datafix/fixes/ItemStackComponentizationFix$ItemStackData
	f	Ljava/lang/String;	a	item
	f	I	b	count
	f	Lcom/mojang/serialization/Dynamic;	c	components
	f	Lcom/mojang/serialization/Dynamic;	d	remainder
	f	Lcom/mojang/serialization/Dynamic;	e	tag
	m	(Ljava/lang/String;ILcom/mojang/serialization/Dynamic;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	read
	m	(Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	removeTag
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	a	setComponent
	m	(Ljava/lang/String;Lcom/mojang/serialization/OptionalDynamic;)V	a	setComponent
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	moveTagInto
	m	(Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	a	moveTagToComponent
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	moveTagToComponent
	m	(Ljava/lang/String;ZLjava/util/function/UnaryOperator;)V	a	fixSubTag
	m	()Lcom/mojang/serialization/Dynamic;	a	write
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	mergeRemainder
	m	(Ljava/lang/String;)Z	b	is
	m	(Ljava/util/Set;)Z	a	is
	m	(Ljava/lang/String;)Z	c	hasComponent
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/Dynamic;	a	lambda$mergeRemainder$4
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$mergeRemainder$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	b	lambda$moveTagToComponent$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)V	c	lambda$setComponent$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/Number;)Lbjf$a;	a	lambda$read$0
c	bjg	net/minecraft/util/datafix/fixes/ItemStackCustomNameToOverrideComponentFix
	f	Ljava/util/Set;	a	MAP_NAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixMap
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	fixBanner
	m	(Lcom/mojang/datafixers/Typed;Ljava/util/function/Predicate;)Lcom/mojang/datafixers/Typed;	a	fixCustomName
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixCustomName$4
	m	(Ljava/lang/String;)Z	a	lambda$fixBanner$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Z	b	lambda$makeRule$1
	m	(Ljava/lang/String;)Z	c	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bjh	net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixTag$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixTag$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixTag$5
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	b	lambda$fixTag$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fixTag$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bji	net/minecraft/util/datafix/fixes/ItemStackMapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bjj	net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix
	f	Ljava/lang/String;	a	itemType
	f	Ljava/util/Map;	b	MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjk	net/minecraft/util/datafix/fixes/ItemStackTagFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Predicate;	b	idFilter
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/function/Predicate;Ljava/util/function/UnaryOperator;)Ljava/util/function/UnaryOperator;	a	createFixer
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Predicate;Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/UnaryOperator;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createFixer$0
c	bjl	net/minecraft/util/datafix/fixes/ItemStackTagRemainderFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
c	bjm	net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix
	f	Ljava/util/Map;	a	MAP
	f	Ljava/util/Set;	b	IDS
	f	Ljava/util/Set;	c	DAMAGE_IDS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;I)Ljava/lang/String;	a	updateItem
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$static$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjn	net/minecraft/util/datafix/fixes/ItemStackUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateAttributeModifiers
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateSkullOwner
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateSkullOwner$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateAttributeModifiers$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateAttributeModifiers$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$makeRule$0
c	bjo	net/minecraft/util/datafix/fixes/ItemWaterPotionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bjp	net/minecraft/util/datafix/fixes/JigsawPropertiesFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bjq	net/minecraft/util/datafix/fixes/JigsawRotationFix
	f	Ljava/util/Map;	a	RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Z	a	shouldFix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixProperties
	m	()V	<clinit>	<clinit>
c	bjr	net/minecraft/util/datafix/fixes/JukeboxTicksSinceSongStartedFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bjs	net/minecraft/util/datafix/fixes/LeavesFix
	f	I	a	NORTH_WEST_MASK
	f	I	b	WEST_MASK
	f	I	c	SOUTH_WEST_MASK
	f	I	d	SOUTH_MASK
	f	I	e	SOUTH_EAST_MASK
	f	I	f	EAST_MASK
	f	I	g	NORTH_EAST_MASK
	f	I	h	NORTH_MASK
	f	[[I	i	DIRECTIONS
	f	I	j	DECAY_DISTANCE
	f	I	k	SIZE_BITS
	f	I	l	SIZE
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	m	LEAVES
	f	Ljava/util/Set;	n	LOGS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(III)I	a	getIndex
	m	(I)I	a	getX
	m	(I)I	b	getY
	m	(I)I	c	getZ
	m	(ZZZZ)I	a	getSideMask
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	([ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;[ILcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lbjs$a;)Lbjs$a;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lbjs$a;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjs$a	net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection
	f	Ljava/lang/String;	h	PERSISTENT
	f	Ljava/lang/String;	i	DECAYABLE
	f	Ljava/lang/String;	j	DISTANCE
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	k	leaveIds
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	l	logIds
	f	Lit/unimi/dsi/fastutil/ints/Int2IntMap;	m	stateToIdMap
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Z	a	skippable
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic;	a	makeLeafTag
	m	(I)Z	a	isLog
	m	(I)Z	b	isLeaf
	m	(I)I	d	getDistance
	m	(III)V	a	setDistance
c	bjs$b	net/minecraft/util/datafix/fixes/LeavesFix$Section
	f	Ljava/lang/String;	a	BLOCK_STATES_TAG
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Lcom/mojang/datafixers/types/Type;	h	blockStateType
	f	Lcom/mojang/datafixers/OpticFinder;	d	paletteFinder
	f	Ljava/util/List;	e	palette
	f	I	f	index
	f	Lbdv;	g	storage
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)V	a	readStorage
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	write
	m	()Z	b	isSkippable
	m	(I)I	c	getBlock
	m	(Ljava/lang/String;ZI)I	a	getStateId
	m	()I	c	getIndex
	m	()Z	a	skippable
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	b	lambda$write$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$write$1
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$new$0
c	bjt	net/minecraft/util/datafix/fixes/LegacyDimensionIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixMap
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixPlayer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixDimensionId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Number;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixDimensionId$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	bju	net/minecraft/util/datafix/fixes/LegacyDragonFightFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixDragonFight
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bjv	net/minecraft/util/datafix/fixes/LegacyHoverEventFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	createFixer
	m	(Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	fixHoverEvent
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	a	fixShowTextHover
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/Dynamic;)Ljava/lang/Object;	b	createPlaceholderHover
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$createFixer$6
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createFixer$5
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$createFixer$4
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$createFixer$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	c	lambda$createFixer$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	d	lambda$createFixer$1
	m	(Lcom/mojang/datafixers/util/Pair;Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$createFixer$0
c	bjw	net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix
	f	Ljava/util/Map;	a	MAP
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	convert
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	getLayerInfoFromString
	m	(Ljava/lang/String;)Ljava/util/List;	b	getLayersInfoFromString
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$convert$5
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	b	lambda$convert$4
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$convert$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bjx	net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix
	f	Ljava/lang/String;	b	GENERATOR_OPTIONS
	f	Ljava/lang/String;	a	DEFAULT
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Lcom/google/common/base/Splitter;	d	LAYER_SPLITTER
	f	Lcom/google/common/base/Splitter;	e	OLD_AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	f	AMOUNT_SPLITTER
	f	Lcom/google/common/base/Splitter;	g	BLOCK_SPLITTER
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/lang/String;)Ljava/lang/String;	a	fixString
	m	(Lcom/google/common/base/Splitter;ILjava/lang/String;)Ljava/lang/String;	a	lambda$fixString$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bjy	net/minecraft/util/datafix/fixes/LevelLegacyWorldGenSettingsFix
	f	Ljava/lang/String;	a	WORLD_GEN_SETTINGS
	f	Ljava/util/List;	b	OLD_SETTINGS_KEYS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bjz	net/minecraft/util/datafix/fixes/LevelUUIDFix
	f	Lorg/slf4j/Logger;	b	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateWanderingTrader
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateDragonFight
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	updateCustomBossEvent
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateCustomBossEvent$10
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateCustomBossEvent$9
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$updateCustomBossEvent$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$updateDragonFight$7
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateDragonFight$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$updateDragonFight$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$updateDragonFight$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	j	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bka	net/minecraft/util/datafix/fixes/LockComponentPredicateFix
	f	Lcom/google/common/escape/Escaper;	a	ESCAPER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixLock
	m	()V	<clinit>	<clinit>
c	bkb	net/minecraft/util/datafix/fixes/LodestoneCompassComponentFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixComponent
c	bkc	net/minecraft/util/datafix/fixes/MapBannerBlockPosFormatFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bkd	net/minecraft/util/datafix/fixes/MapIdFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bke	net/minecraft/util/datafix/fixes/MemoryExpiryDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateBrain
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateMemories
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	updateMemoryEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	wrapMemoryValue
c	bkf	net/minecraft/util/datafix/fixes/MissingDimensionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	fields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	b	optionalFields
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type;	a	optionalFields
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type;	a	flatType
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	recreateSettings
	m	(Lcom/mojang/datafixers/FieldFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bkg	net/minecraft/util/datafix/fixes/MobEffectIdFix
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	ID_MAP
	f	Ljava/util/Set;	b	MOB_EFFECT_INSTANCE_CARRIER_ITEMS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional;	a	getAndConvertMobEffectId
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectIdField
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectIdField
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateMobEffectInstance
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	updateMobEffectInstanceList
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateSuspiciousStewEntry
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateSuspiciousStewEntry
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed;	a	updateNamedChoice
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	blockEntityFixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixMooshroomTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	fixArrowTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	fixAreaEffectCloudTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	updateLivingEntityTag
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	entityFixer
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	c	playerFixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	fixSuspiciousStewTag
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	d	itemStackFixer
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$12
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$itemStackFixer$11
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$itemStackFixer$10
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$itemStackFixer$9
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixSuspiciousStewTag$8
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$playerFixer$7
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$entityFixer$6
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	e	lambda$blockEntityFixer$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	i	lambda$blockEntityFixer$4
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$updateNamedChoice$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/stream/Stream;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateMobEffectInstanceList$2
	m	(Ljava/lang/Number;)Ljava/lang/String;	a	lambda$getAndConvertMobEffectId$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bkh	net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
c	bki	net/minecraft/util/datafix/fixes/NamedEntityConvertUncheckedFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bkj	net/minecraft/util/datafix/fixes/NamedEntityFix
	f	Ljava/lang/String;	c	name
	f	Ljava/lang/String;	a	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bkk	net/minecraft/util/datafix/fixes/NamedEntityWriteReadFix
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/String;	b	entityName
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	type
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;)Lcom/mojang/datafixers/TypeRewriteRule;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$0
c	bkl	net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	f	Ljava/util/function/UnaryOperator;	c	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bkm	net/minecraft/util/datafix/fixes/NewVillageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule;	a	cap
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$13
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$12
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$cap$11
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$10
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$9
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$8
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$cap$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$cap$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$cap$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$cap$4
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$cap$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$cap$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$cap$1
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$cap$0
c	bkn	net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	getRenderType
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bko	net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fix$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$0
c	bkp	net/minecraft/util/datafix/fixes/OminousBannerRarityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$4
	m	(Ljava/lang/String;)Z	a	lambda$fix$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$fix$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bkq	net/minecraft/util/datafix/fixes/OminousBannerRenameFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixItemStackTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixItemStackTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixItemStackTag$1
	m	(Ljava/lang/String;)Z	a	lambda$new$0
c	bkr	net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bks	net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)D	a	calculateBackground
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bkt	net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Ljava/lang/String;	a	updateValue
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bku	net/minecraft/util/datafix/fixes/OptionsForceVBOFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bkv	net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix
	f	Ljava/lang/String;	a	KEY_UNKNOWN
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bkw	net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bkx	net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	bky	net/minecraft/util/datafix/fixes/OptionsMenuBlurrinessFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)I	a	convertToIntRange
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bkz	net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixList
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixList$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bla	net/minecraft/util/datafix/fixes/OptionsRenameFieldFix
	f	Ljava/lang/String;	a	fixName
	f	Ljava/lang/String;	b	fieldFrom
	f	Ljava/lang/String;	c	fieldTo
	m	(Lcom/mojang/datafixers/schemas/Schema;ZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	blb	net/minecraft/util/datafix/fixes/OverreachingTickFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	extractOverreachingTicks
	m	(IILcom/mojang/serialization/Dynamic;)Z	a	lambda$extractOverreachingTicks$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$0
c	blc	net/minecraft/util/datafix/fixes/ParticleUnflatteningFix
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	updateItem
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	parseTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	updateBlock
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Map;	c	parseBlockProperties
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/serialization/Dynamic;	a	readVector
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	d	updateDust
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	e	updateDustTransition
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	f	updateSculkCharge
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	g	updateVibration
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	h	updateShriek
	m	()V	<clinit>	<clinit>
c	bld	net/minecraft/util/datafix/fixes/PlayerEquipmentFix
	f	Ljava/util/Map;	a	SLOT_TRANSLATIONS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$2
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Z	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	ble	net/minecraft/util/datafix/fixes/PlayerHeadBlockProfileFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$fix$0
c	blf	net/minecraft/util/datafix/fixes/PlayerUUIDFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	blg	net/minecraft/util/datafix/fixes/PoiTypeRemoveFix
	f	Ljava/util/function/Predicate;	a	typesToKeep
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
	m	(Lcom/mojang/serialization/Dynamic;)Z	a	shouldKeepRecord
c	blh	net/minecraft/util/datafix/fixes/PoiTypeRenameFix
	f	Ljava/util/function/Function;	a	renamer
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	processRecords
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$processRecords$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$processRecords$0
c	bli	net/minecraft/util/datafix/fixes/PrimedTntBlockStateFixer
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	renameFuse
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	insertBlockState
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	blj	net/minecraft/util/datafix/fixes/ProjectileStoredWeaponFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	fixChoice
	m	(Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Ljava/util/function/Function;	a	fixChoiceCap
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixChoiceCap$0
c	blk	net/minecraft/util/datafix/fixes/RaidRenamesDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixRaid
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$2
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	bll	net/minecraft/util/datafix/fixes/RandomSequenceSettingsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	blm	net/minecraft/util/datafix/fixes/RecipesFix
	f	Ljava/util/Map;	a	RECIPES
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	bln	net/minecraft/util/datafix/fixes/RecipesRenameningFix
	f	Ljava/util/Map;	a	RECIPES
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	blo	net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateRedstoneConnections
	m	(Ljava/lang/String;)Z	a	isConnected
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$5
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateRedstoneConnections$4
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateRedstoneConnections$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$updateRedstoneConnections$2
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateRedstoneConnections$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	blp	net/minecraft/util/datafix/fixes/References
	f	Lcom/mojang/datafixers/DSL$TypeReference;	a	LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	LIGHTWEIGHT_LEVEL
	f	Lcom/mojang/datafixers/DSL$TypeReference;	c	PLAYER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	d	CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	e	HOTBAR
	f	Lcom/mojang/datafixers/DSL$TypeReference;	f	OPTIONS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	g	STRUCTURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	h	STATS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	i	SAVED_DATA_COMMAND_STORAGE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	j	SAVED_DATA_TICKETS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	k	SAVED_DATA_MAP_DATA
	f	Lcom/mojang/datafixers/DSL$TypeReference;	l	SAVED_DATA_MAP_INDEX
	f	Lcom/mojang/datafixers/DSL$TypeReference;	m	SAVED_DATA_RAIDS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	n	SAVED_DATA_RANDOM_SEQUENCES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	o	SAVED_DATA_STRUCTURE_FEATURE_INDICES
	f	Lcom/mojang/datafixers/DSL$TypeReference;	p	SAVED_DATA_SCOREBOARD
	f	Lcom/mojang/datafixers/DSL$TypeReference;	q	ADVANCEMENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	r	POI_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	s	ENTITY_CHUNK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	t	BLOCK_ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	u	ITEM_STACK
	f	Lcom/mojang/datafixers/DSL$TypeReference;	v	BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	w	FLAT_BLOCK_STATE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	x	DATA_COMPONENTS
	f	Lcom/mojang/datafixers/DSL$TypeReference;	y	VILLAGER_TRADE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	z	PARTICLE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	A	TEXT_COMPONENT
	f	Lcom/mojang/datafixers/DSL$TypeReference;	B	ENTITY_EQUIPMENT
	f	Lcom/mojang/datafixers/DSL$TypeReference;	C	ENTITY_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	D	ENTITY_TREE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	E	ENTITY
	f	Lcom/mojang/datafixers/DSL$TypeReference;	F	BLOCK_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	G	ITEM_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	H	GAME_EVENT_NAME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	I	UNTAGGED_SPAWNER
	f	Lcom/mojang/datafixers/DSL$TypeReference;	J	STRUCTURE_FEATURE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	K	OBJECTIVE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	L	TEAM
	f	Lcom/mojang/datafixers/DSL$TypeReference;	M	RECIPE
	f	Lcom/mojang/datafixers/DSL$TypeReference;	N	BIOME
	f	Lcom/mojang/datafixers/DSL$TypeReference;	O	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST
	f	Lcom/mojang/datafixers/DSL$TypeReference;	P	WORLD_GEN_SETTINGS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/DSL$TypeReference;	a	reference
	m	()V	<clinit>	<clinit>
c	blp$1	net/minecraft/util/datafix/fixes/References$1
	f	Ljava/lang/String;	a	val$id
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	typeName	typeName
	m	()Ljava/lang/String;	toString	toString
c	blq	net/minecraft/util/datafix/fixes/RemapChunkStatusFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/UnaryOperator;	b	mapper
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStatus
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
c	blr	net/minecraft/util/datafix/fixes/RemoveBlockEntityTagFix
	f	Ljava/util/Set;	a	blockEntityIdsToDrop
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Set;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Ljava/lang/String;)Lcom/mojang/datafixers/Typed;	a	removeBlockEntity
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$removeBlockEntity$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$0
c	bls	net/minecraft/util/datafix/fixes/RemoveEmptyItemInBrushableBlockFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	isEmptyStack
c	blt	net/minecraft/util/datafix/fixes/RemoveGolemGossipFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Z	b	lambda$fixValue$0
c	blu	net/minecraft/util/datafix/fixes/RenameEnchantmentsFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixEnchantmentList
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$8
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/DataResult$Error;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEnchantmentList$7
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$fixEnchantmentList$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixEnchantmentList$5
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixEnchantmentList$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/DataResult$Error;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$3
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixEnchantmentList$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	blv	net/minecraft/util/datafix/fixes/RenamedCoralFansFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	blw	net/minecraft/util/datafix/fixes/RenamedCoralFix
	f	Ljava/util/Map;	a	RENAMED_IDS
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	blx	net/minecraft/util/datafix/fixes/ReorganizePoi
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	cap
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bly	net/minecraft/util/datafix/fixes/SaddleEquipmentSlotFix
	f	Ljava/util/Set;	a	ENTITIES_WITH_SADDLE_ITEM
	f	Ljava/util/Set;	b	ENTITIES_WITH_SADDLE_FLAG
	f	Ljava/lang/String;	c	SADDLE_FLAG
	f	Ljava/lang/String;	d	NEW_SADDLE
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixEntityWithSaddleItem
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixEntityWithSaddleFlag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixDropChances
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	blz	net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix
	f	Ljava/util/regex/Pattern;	a	INDEX_PATTERN
	f	Ljava/util/Set;	b	PIECE_TYPE
	f	Ljava/util/Set;	c	FEATURES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	updateChildren
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	updateChildren
	m	(Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic;	a	get
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixFeature
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional;	a	getReplacement
	m	(I)Ljava/lang/String;	a	lambda$get$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$updateChildren$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$updateChildren$0
	m	()V	<clinit>	<clinit>
c	bma	net/minecraft/util/datafix/fixes/SavedDataUUIDFix
	f	Lorg/slf4j/Logger;	b	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$6
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$makeRule$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	g	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	h	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bmb	net/minecraft/util/datafix/fixes/ScoreboardDisplayNameFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$0
c	bmc	net/minecraft/util/datafix/fixes/ScoreboardDisplaySlotFix
	f	Ljava/util/Map;	a	SLOT_RENAMES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bmd	net/minecraft/util/datafix/fixes/SignTextStrictJsonFix
	f	Ljava/util/List;	c	LINE_FIELDS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fix$0
	m	()V	<clinit>	<clinit>
c	bme	net/minecraft/util/datafix/fixes/SimpleEntityRenameFix
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair;	a	getNewNameAndTag
c	bmf	net/minecraft/util/datafix/fixes/SimplestEntityRenameFix
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Ljava/lang/String;	a	rename
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
c	bmg	net/minecraft/util/datafix/fixes/SpawnerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	wrapEntityToSpawnData
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	wrapSpawnPotentialsToWeightedEntries
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/datafixers/util/Pair;	a	lambda$wrapSpawnPotentialsToWeightedEntries$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	c	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	d	lambda$makeRule$0
c	bmh	net/minecraft/util/datafix/fixes/StatsCounterFix
	f	Ljava/util/Set;	a	SPECIAL_OBJECTIVE_CRITERIA
	f	Ljava/util/Set;	b	SKIP
	f	Ljava/util/Map;	c	CUSTOM_MAP
	f	Ljava/lang/String;	d	BLOCK_KEY
	f	Ljava/lang/String;	e	NEW_BLOCK_KEY
	f	Ljava/util/Map;	f	ITEM_KEYS
	f	Ljava/util/Map;	g	ENTITY_KEYS
	f	Ljava/util/Map;	h	ENTITIES
	f	Ljava/lang/String;	i	NEW_CUSTOM_KEY
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Ljava/lang/String;)Lbmh$a;	a	unpackLegacyKey
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	makeStatFixer
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	makeObjectiveFixer
	m	(Ljava/lang/String;)Ljava/lang/String;	b	upgradeItem
	m	(Ljava/lang/String;)Ljava/lang/String;	c	upgradeBlock
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeObjectiveFixer$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeObjectiveFixer$3
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$makeObjectiveFixer$2
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeStatFixer$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeStatFixer$0
	m	()V	<clinit>	<clinit>
c	bmh$a	net/minecraft/util/datafix/fixes/StatsCounterFix$StatType
	f	Ljava/lang/String;	a	type
	f	Ljava/lang/String;	b	typeKey
	m	(Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	type
	m	()Ljava/lang/String;	b	typeKey
c	bmi	net/minecraft/util/datafix/fixes/StatsRenameFix
	f	Ljava/lang/String;	a	name
	f	Ljava/util/Map;	b	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	a	createCriteriaRule
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	b	createStatRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$8
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$7
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$createStatRule$6
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$createStatRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$createCriteriaRule$2
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$createCriteriaRule$1
	m	()Ljava/lang/IllegalStateException;	c	lambda$createCriteriaRule$0
c	bmj	net/minecraft/util/datafix/fixes/StriderGravityFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
c	bmk	net/minecraft/util/datafix/fixes/StructureReferenceCountFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	setCountToAtLeastOne
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$setCountToAtLeastOne$2
	m	(Ljava/lang/Integer;)Z	a	lambda$setCountToAtLeastOne$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
c	bml	net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	fixDimension
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixStructures
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$7
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixStructures$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixStructures$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixDimension$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixDimension$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	bmm	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	CONVERSION_MAP
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateStarts
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	updateReferences
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	findUpdatedStructureType
	m	(Lcom/mojang/serialization/Dynamic;Lbmm$a;)Ljava/util/Optional;	a	guessConfiguration
	m	(Lbmm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	a	lambda$guessConfiguration$8
	m	(Lbmm$a;Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;Lcom/mojang/serialization/Dynamic;)V	b	lambda$guessConfiguration$7
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/HashMap;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$updateReferences$6
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$updateReferences$5
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/HashMap;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	b	lambda$updateStarts$4
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$updateStarts$3
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	e	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	f	lambda$fix$0
	m	()V	<clinit>	<clinit>
c	bmm$a	net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion
	f	Ljava/util/Map;	a	biomeMapping
	f	Ljava/lang/String;	b	fallback
	m	(Ljava/util/Map;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lbmm$a;	a	trivial
	m	(Ljava/util/Map;Ljava/lang/String;)Lbmm$a;	a	biomeMapped
	m	(Ljava/util/Map;)Ljava/util/Map;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	biomeMapping
	m	()Ljava/lang/String;	b	fallback
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Ljava/util/Map$Entry;Ljava/lang/String;)V	a	lambda$unpack$0
c	bmn	net/minecraft/util/datafix/fixes/TextComponentHoverAndClickEventFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	createFixer
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTextComponent
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	copyFields
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	fixHoverEvent
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	fixClickEvent
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/lang/Integer;	d	parseOldPage
	m	(Ljava/lang/String;)Z	a	validateUri
	m	(Ljava/lang/String;)Z	b	validateChat
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$createFixer$3
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$createFixer$2
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Boolean;	a	lambda$createFixer$1
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Boolean;	a	lambda$createFixer$0
c	bmo	net/minecraft/util/datafix/fixes/TextComponentStringifiedFlagsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	stringToBool
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$makeRule$6
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/util/Either;)Lcom/mojang/datafixers/util/Either;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	b	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	c	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	d	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$0
c	bmp	net/minecraft/util/datafix/fixes/ThrownPotionSplitFix
	f	Ljava/util/function/Supplier;	b	itemIdFinder
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair;	a	fix
	m	()Lbmp$a;	a	lambda$new$0
c	bmp$a	net/minecraft/util/datafix/fixes/ThrownPotionSplitFix$ItemIdFinder
	f	Lcom/mojang/datafixers/OpticFinder;	a	itemFinder
	f	Lcom/mojang/datafixers/OpticFinder;	b	itemIdFinder
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Ljava/lang/String;	a	getItemId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/datafixers/OpticFinder;	a	itemFinder
	m	()Lcom/mojang/datafixers/OpticFinder;	b	itemIdFinder
	m	(Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$getItemId$0
c	bmq	net/minecraft/util/datafix/fixes/TippedArrowPotionToItemFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bmr	net/minecraft/util/datafix/fixes/TooltipDisplayComponentFix
	f	Ljava/util/List;	a	CONVERTED_ADDITIONAL_TOOLTIP_TYPES
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	fixSimpleComponent
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic;	a	fixComponentAndUnwrap
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/util/Set;Ljava/util/function/UnaryOperator;)Lcom/mojang/serialization/Dynamic;	a	fixRemainderComponent
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Ljava/util/Set;)Lcom/mojang/datafixers/Typed;	a	fixAdventureModePredicate
	m	(Lcom/mojang/datafixers/types/Type;Ljava/util/Set;Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixAdventureModePredicate$5
	m	(Ljava/util/Set;Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixAdventureModePredicate$4
	m	(Ljava/util/Set;Ljava/lang/String;Ljava/util/function/UnaryOperator;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixRemainderComponent$3
	m	(Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixComponentAndUnwrap$2
	m	(Ljava/util/Set;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bms	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SIZE
	f	S	c	SIZE_BITS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$5
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(IILit/unimi/dsi/fastutil/ints/IntSet;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$makeRule$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bms$a	net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	h	chestIds
	m	(Lcom/mojang/datafixers/Typed;Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Z	a	skippable
	m	(I)Z	a	isTrappedChest
c	bmt	net/minecraft/util/datafix/fixes/TrialSpawnerConfigFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	moveToConfigTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
c	bmu	net/minecraft/util/datafix/fixes/TrialSpawnerConfigInRegistryFix
	f	Lorg/slf4j/Logger;	c	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixTag
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$0
	m	()V	<clinit>	<clinit>
c	bmu$a	net/minecraft/util/datafix/fixes/TrialSpawnerConfigInRegistryFix$VanillaTrialChambers
	f	Ljava/util/Map;	a	CONFIGS_TO_KEY
	m	()V	<init>	<init>
	m	(Lame;Ljava/lang/String;Ljava/lang/String;)V	a	register
	m	(Lui;)Lcom/mojang/serialization/Dynamic;	a	asDynamic
	m	(Ljava/lang/String;)Lui;	a	parse
	m	(Lui;)Lui;	b	removeDefaults
	m	()V	<clinit>	<clinit>
c	bmv	net/minecraft/util/datafix/fixes/UnflattenTextComponentFix
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule;	a	createFixer
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	unflattenJson
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;)Ljava/util/function/Function;	a	lambda$createFixer$1
	m	(Lcom/mojang/datafixers/types/Type;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;)Ljava/lang/Object;	a	lambda$createFixer$0
	m	()V	<clinit>	<clinit>
c	bmw	net/minecraft/util/datafix/fixes/VariantRenameFix
	f	Ljava/util/Map;	c	renames
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;Ljava/util/Map;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fix$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bmx	net/minecraft/util/datafix/fixes/VillagerDataFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(II)Ljava/lang/String;	a	upgradeData
c	bmy	net/minecraft/util/datafix/fixes/VillagerFollowRangeFix
	f	D	c	ORIGINAL_VALUE
	f	D	d	NEW_BASE_VALUE
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixValue$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$fixValue$0
c	bmz	net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix
	f	I	a	TRADES_PER_LEVEL
	f	[I	b	LEVEL_XP_THRESHOLDS
	m	(I)I	a	getMinXpPerLevel
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	a	addLevel
	m	(Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed;	b	addXpFromLevel
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addXpFromLevel$6
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addLevel$5
	m	(ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$addLevel$4
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$2
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/lang/Integer;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Ljava/util/Optional;	b	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bna	net/minecraft/util/datafix/fixes/VillagerSetCanPickUpLootFix
	f	Ljava/lang/String;	c	CAN_PICK_UP_LOOT
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fixValue
c	bnb	net/minecraft/util/datafix/fixes/VillagerTradeFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	updateItemStack
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$updateItemStack$3
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$updateItemStack$2
	m	(Lcom/mojang/datafixers/OpticFinder;Ljava/util/function/Function;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$1
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	b	lambda$makeRule$0
c	bnc	net/minecraft/util/datafix/fixes/WallPropertyFix
	f	Ljava/util/Set;	a	WALL_BLOCKS
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Ljava/lang/String;)Ljava/lang/String;	a	mapProperty
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic;	a	fixWallProperty
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	upgradeBlockStateTag
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$upgradeBlockStateTag$2
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fixWallProperty$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bnd	net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bne	net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$4
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult;	a	lambda$makeRule$2
	m	(Ljava/util/Map;)Ljava/util/Map;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$makeRule$0
c	bnf	net/minecraft/util/datafix/fixes/WorldGenSettingsFix
	f	Ljava/lang/String;	a	VILLAGE
	f	Ljava/lang/String;	b	DESERT_PYRAMID
	f	Ljava/lang/String;	c	IGLOO
	f	Ljava/lang/String;	d	JUNGLE_TEMPLE
	f	Ljava/lang/String;	e	SWAMP_HUT
	f	Ljava/lang/String;	f	PILLAGER_OUTPOST
	f	Ljava/lang/String;	g	END_CITY
	f	Ljava/lang/String;	h	WOODLAND_MANSION
	f	Ljava/lang/String;	i	OCEAN_MONUMENT
	f	Lcom/google/common/collect/ImmutableMap;	j	DEFAULTS
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	noise
	m	(Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic;	a	vanillaBiomeSource
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic;	a	defaultOverworld
	m	(Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object;	a	vanillaLevels
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map;	a	fixFlatStructures
	m	(Ljava/lang/String;I)I	a	getInt
	m	(Ljava/lang/String;II)I	a	getInt
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V	a	setSpacing
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$12
	m	(Lcom/mojang/serialization/OptionalDynamic;Ljava/util/Map$Entry;)Lcom/mojang/serialization/Dynamic;	a	lambda$fixFlatStructures$11
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$10
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$9
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Ljava/util/Map;)V	a	lambda$fixFlatStructures$8
	m	(Lcom/mojang/serialization/Dynamic;Lorg/apache/commons/lang3/mutable/MutableBoolean;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)V	a	lambda$fixFlatStructures$7
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)V	a	lambda$fix$6
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$fix$5
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$fix$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$fix$3
	m	(Ljava/util/Optional;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$fix$2
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$fix$1
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$0
	m	()V	<clinit>	<clinit>
c	bnf$a	net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	spacing
	f	I	c	separation
	f	I	d	salt
	m	(III)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lbnf$a;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lbnf$a;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lbnf$a;)Ljava/lang/Integer;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bng	net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix
	f	Ljava/lang/String;	b	NAME
	f	Ljava/lang/String;	a	WAS_PREVIOUSLY_INCREASED_KEY
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	updateLayers
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$8
	m	(Lcom/mojang/datafixers/types/Type;ZZLcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$makeRule$7
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$6
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$5
	m	(ZZLcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$4
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$makeRule$3
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	c	lambda$makeRule$2
	m	(ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$makeRule$1
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	d	lambda$makeRule$0
c	bnh	net/minecraft/util/datafix/fixes/WriteAndReadFix
	f	Ljava/lang/String;	a	name
	f	Lcom/mojang/datafixers/DSL$TypeReference;	b	type
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Lcom/mojang/datafixers/DSL$TypeReference;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/TypeRewriteRule;	makeRule	makeRule
c	bni	net/minecraft/util/datafix/fixes/WrittenBookPagesStrictJsonFix
	m	(Lcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fixItemStackTag
	m	(Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	lambda$fixItemStackTag$2
	m	(Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair;	a	lambda$fixItemStackTag$1
	m	(Ljava/lang/String;)Z	a	lambda$new$0
c	bnj	net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix
	m	(Lcom/mojang/datafixers/schemas/Schema;Z)V	<init>	<init>
	m	(Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed;	a	fix
	m	(Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$fix$0
c	bnk	net/minecraft/util/datafix/fixes/package-info
c	bnl	net/minecraft/util/datafix/package-info
c	bnm	net/minecraft/util/datafix/schemas/NamespacedSchema
	f	Lcom/mojang/serialization/codecs/PrimitiveCodec;	a	NAMESPACED_STRING_CODEC
	f	Lcom/mojang/datafixers/types/Type;	b	NAMESPACED_STRING
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/lang/String;	a	ensureNamespaced
	m	()Lcom/mojang/datafixers/types/Type;	a	namespacedString
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	getChoiceType	getChoiceType
	m	()V	<clinit>	<clinit>
c	bnm$1	net/minecraft/util/datafix/schemas/NamespacedSchema$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	read	read
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;)Ljava/lang/Object;	a	write
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	write	write
c	bnn	net/minecraft/util/datafix/schemas/V100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bno	net/minecraft/util/datafix/schemas/V102
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bnp	net/minecraft/util/datafix/schemas/V1022
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bnq	net/minecraft/util/datafix/schemas/V106
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bnr	net/minecraft/util/datafix/schemas/V107
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bns	net/minecraft/util/datafix/schemas/V1125
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bnt	net/minecraft/util/datafix/schemas/V135
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bnu	net/minecraft/util/datafix/schemas/V143
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bnv	net/minecraft/util/datafix/schemas/V1451
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bnw	net/minecraft/util/datafix/schemas/V1451_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bnx	net/minecraft/util/datafix/schemas/V1451_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bny	net/minecraft/util/datafix/schemas/V1451_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bnz	net/minecraft/util/datafix/schemas/V1451_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	boa	net/minecraft/util/datafix/schemas/V1451_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	bob	net/minecraft/util/datafix/schemas/V1451_6
	f	Ljava/lang/String;	b	SPECIAL_OBJECTIVE_MARKER
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	c	UNPACK_OBJECTIVE_ID
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	d	REPACK_OBJECTIVE_ID
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	a	createCriterionTypes
	m	(Ljava/lang/String;)Ljava/lang/String;	b	packNamespacedWithDot
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$7
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$createCriterionTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$createCriterionTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$createCriterionTypes$3
	m	(Ljava/util/Map;Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$0
	m	()V	<clinit>	<clinit>
c	bob$1	net/minecraft/util/datafix/schemas/V1451_6$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair;	a	lambda$apply$0
c	bob$2	net/minecraft/util/datafix/schemas/V1451_6$2
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$apply$1
	m	(Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	b	lambda$apply$0
c	boc	net/minecraft/util/datafix/schemas/V1458
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	nameableInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	nameable
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerBlockEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerBlockEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerBlockEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerBlockEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerBlockEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerBlockEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerBlockEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerBlockEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerBlockEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bod	net/minecraft/util/datafix/schemas/V1460
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$61
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$60
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$59
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$58
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$57
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$56
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$55
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$54
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$53
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$52
	m	(Ljava/util/Map;Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$51
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$50
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$49
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$48
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/function/Supplier;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$47
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$46
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$45
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$44
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$42
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerTypes$41
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerTypes$39
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerTypes$37
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerTypes$36
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerBlockEntities$33
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerBlockEntities$32
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerBlockEntities$31
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerBlockEntities$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerBlockEntities$29
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$28
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerBlockEntities$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$24
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	z	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	A	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerInventory$0
c	boe	net/minecraft/util/datafix/schemas/V1466
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bof	net/minecraft/util/datafix/schemas/V1470
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bog	net/minecraft/util/datafix/schemas/V1481
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	boh	net/minecraft/util/datafix/schemas/V1483
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	boi	net/minecraft/util/datafix/schemas/V1486
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	boj	net/minecraft/util/datafix/schemas/V1488
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bok	net/minecraft/util/datafix/schemas/V1510
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bol	net/minecraft/util/datafix/schemas/V1800
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bom	net/minecraft/util/datafix/schemas/V1801
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bon	net/minecraft/util/datafix/schemas/V1904
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	boo	net/minecraft/util/datafix/schemas/V1906
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bop	net/minecraft/util/datafix/schemas/V1909
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	boq	net/minecraft/util/datafix/schemas/V1920
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
c	bor	net/minecraft/util/datafix/schemas/V1928
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bos	net/minecraft/util/datafix/schemas/V1929
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bot	net/minecraft/util/datafix/schemas/V1931
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bou	net/minecraft/util/datafix/schemas/V2100
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bov	net/minecraft/util/datafix/schemas/V2501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerFurnace
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerFurnace$0
c	bow	net/minecraft/util/datafix/schemas/V2502
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	box	net/minecraft/util/datafix/schemas/V2505
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	boy	net/minecraft/util/datafix/schemas/V2509
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	boz	net/minecraft/util/datafix/schemas/V2511_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bpa	net/minecraft/util/datafix/schemas/V2519
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpb	net/minecraft/util/datafix/schemas/V2522
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpc	net/minecraft/util/datafix/schemas/V2551
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$0
c	bpd	net/minecraft/util/datafix/schemas/V2568
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpe	net/minecraft/util/datafix/schemas/V2571
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpf	net/minecraft/util/datafix/schemas/V2684
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$0
c	bpg	net/minecraft/util/datafix/schemas/V2686
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bph	net/minecraft/util/datafix/schemas/V2688
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bpi	net/minecraft/util/datafix/schemas/V2704
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpj	net/minecraft/util/datafix/schemas/V2707
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpk	net/minecraft/util/datafix/schemas/V2831
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bpl	net/minecraft/util/datafix/schemas/V2832
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$2
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$0
c	bpm	net/minecraft/util/datafix/schemas/V2842
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bpn	net/minecraft/util/datafix/schemas/V3076
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	bpo	net/minecraft/util/datafix/schemas/V3078
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bpp	net/minecraft/util/datafix/schemas/V3081
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bpq	net/minecraft/util/datafix/schemas/V3082
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bpr	net/minecraft/util/datafix/schemas/V3083
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bps	net/minecraft/util/datafix/schemas/V3202
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bpt	net/minecraft/util/datafix/schemas/V3203
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpu	net/minecraft/util/datafix/schemas/V3204
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bpv	net/minecraft/util/datafix/schemas/V3325
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bpw	net/minecraft/util/datafix/schemas/V3326
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpx	net/minecraft/util/datafix/schemas/V3327
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$0
c	bpy	net/minecraft/util/datafix/schemas/V3328
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bpz	net/minecraft/util/datafix/schemas/V3438
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	bqa	net/minecraft/util/datafix/schemas/V3439
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	sign
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$0
c	bqb	net/minecraft/util/datafix/schemas/V3439_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqc	net/minecraft/util/datafix/schemas/V3448
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqd	net/minecraft/util/datafix/schemas/V3682
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqe	net/minecraft/util/datafix/schemas/V3683
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bqf	net/minecraft/util/datafix/schemas/V3685
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	abstractArrow
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$0
c	bqg	net/minecraft/util/datafix/schemas/V3689
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqh	net/minecraft/util/datafix/schemas/V3799
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bqi	net/minecraft/util/datafix/schemas/V3807
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqj	net/minecraft/util/datafix/schemas/V3808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bqk	net/minecraft/util/datafix/schemas/V3808_1
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bql	net/minecraft/util/datafix/schemas/V3808_2
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bqm	net/minecraft/util/datafix/schemas/V3813
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bqn	net/minecraft/util/datafix/schemas/V3816
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bqo	net/minecraft/util/datafix/schemas/V3818
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$0
c	bqp	net/minecraft/util/datafix/schemas/V3818_3
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/SequencedMap;	a	components
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$14
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$components$13
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$components$12
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$components$11
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$components$10
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$components$9
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$components$8
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$components$7
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$components$6
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$components$5
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$components$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$components$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$components$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$components$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$components$0
c	bqq	net/minecraft/util/datafix/schemas/V3818_4
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bqr	net/minecraft/util/datafix/schemas/V3818_5
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bqs	net/minecraft/util/datafix/schemas/V3825
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bqt	net/minecraft/util/datafix/schemas/V3938
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	abstractArrow
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$0
c	bqu	net/minecraft/util/datafix/schemas/V4059
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/SequencedMap;	a	components
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$components$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$components$0
c	bqv	net/minecraft/util/datafix/schemas/V4067
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Ljava/util/Map;Ljava/lang/String;)V	a	registerChestBoat
	m	(Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerChestBoat$0
c	bqw	net/minecraft/util/datafix/schemas/V4070
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	bqx	net/minecraft/util/datafix/schemas/V4071
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	bqy	net/minecraft/util/datafix/schemas/V4290
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bqz	net/minecraft/util/datafix/schemas/V4292
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	bra	net/minecraft/util/datafix/schemas/V4300
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	entityWithInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$0
c	brb	net/minecraft/util/datafix/schemas/V4301
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	brc	net/minecraft/util/datafix/schemas/V4302
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
c	brd	net/minecraft/util/datafix/schemas/V4306
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$0
c	bre	net/minecraft/util/datafix/schemas/V4307
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/SequencedMap;	a	components
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	adventureModePredicate
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$components$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$components$0
c	brf	net/minecraft/util/datafix/schemas/V4312
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$0
c	brg	net/minecraft/util/datafix/schemas/V4420
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	brh	net/minecraft/util/datafix/schemas/V4421
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	bri	net/minecraft/util/datafix/schemas/V501
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	brj	net/minecraft/util/datafix/schemas/V700
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	brk	net/minecraft/util/datafix/schemas/V701
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
c	brl	net/minecraft/util/datafix/schemas/V702
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$0
c	brm	net/minecraft/util/datafix/schemas/V703
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$0
c	brn	net/minecraft/util/datafix/schemas/V704
	f	Ljava/util/Map;	a	ITEM_TO_BLOCKENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;	getChoiceType	getChoiceType
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	()Lcom/google/common/collect/ImmutableMap;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$2
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V	a	lambda$registerBlockEntities$1
	m	(Ljava/lang/String;)Ljava/lang/String;	a	lambda$registerBlockEntities$0
	m	()V	<clinit>	<clinit>
c	brn$1	net/minecraft/util/datafix/schemas/V704$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	bro	net/minecraft/util/datafix/schemas/V705
	f	Ljava/util/Map;	c	ITEM_TO_ENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerMob
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerThrowableProjectile
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$25
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerEntities$24
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerEntities$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerEntities$22
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerEntities$2
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerEntities$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerThrowableProjectile$0
	m	()V	<clinit>	<clinit>
c	bro$1	net/minecraft/util/datafix/schemas/V705$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	brp	net/minecraft/util/datafix/schemas/V808
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerInventory$0
c	brq	net/minecraft/util/datafix/schemas/V99
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Map;	d	ITEM_TO_BLOCKENTITY
	f	Ljava/util/Map;	a	ITEM_TO_ENTITY
	f	Lcom/mojang/datafixers/types/templates/Hook$HookFunction;	b	ADD_NAMES
	m	(ILcom/mojang/datafixers/schemas/Schema;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	a	registerThrowableProjectile
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	b	registerMinecart
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V	c	registerInventory
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerEntities	registerEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map;	registerBlockEntities	registerBlockEntities
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	sign
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/util/Map;)V	registerTypes	registerTypes
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	itemStackTag
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/Object;	a	addNames
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$50
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$addNames$49
	m	(Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$addNames$48
	m	(Ljava/util/HashMap;)V	a	lambda$static$47
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$46
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$45
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$44
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$43
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$42
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerTypes$41
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerTypes$40
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerTypes$39
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerTypes$38
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerTypes$37
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerTypes$36
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerTypes$35
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerTypes$34
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerTypes$33
	m	()Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerTypes$32
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerTypes$31
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerTypes$30
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerTypes$29
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerTypes$28
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerTypes$27
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerBlockEntities$26
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	a	lambda$registerBlockEntities$25
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerBlockEntities$24
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	r	lambda$registerBlockEntities$23
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	b	lambda$registerBlockEntities$22
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	s	lambda$registerBlockEntities$21
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	c	lambda$registerBlockEntities$20
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	d	lambda$registerEntities$19
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	e	lambda$registerEntities$18
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	f	lambda$registerEntities$17
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	g	lambda$registerEntities$16
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	t	lambda$registerEntities$15
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	h	lambda$registerEntities$14
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	u	lambda$registerEntities$13
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	i	lambda$registerEntities$12
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	v	lambda$registerEntities$11
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	j	lambda$registerEntities$10
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	k	lambda$registerEntities$9
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	l	lambda$registerEntities$8
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	m	lambda$registerEntities$7
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	n	lambda$registerEntities$6
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	o	lambda$registerEntities$5
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	p	lambda$registerEntities$4
	m	(Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	q	lambda$registerEntities$3
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	w	lambda$registerInventory$2
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	x	lambda$registerMinecart$1
	m	(Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate;	y	lambda$registerThrowableProjectile$0
	m	()V	<clinit>	<clinit>
c	brq$1	net/minecraft/util/datafix/schemas/V99$1
	m	()V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	brr	net/minecraft/util/datafix/schemas/package-info
c	brs	net/minecraft/util/debugchart/AbstractSampleLogger
	f	[J	a	defaults
	f	[J	b	sample
	m	(I[J)V	<init>	<init>
	m	([J)V	a	logFullSample
	m	(J)V	a	logSample
	m	(JI)V	a	logPartialSample
	m	()V	a	useSample
	m	()V	b	resetSample
c	brt	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker
	f	I	a	STOP_SENDING_AFTER_TICKS
	f	I	b	STOP_SENDING_AFTER_MS
	f	Layb;	c	playerList
	f	Ljava/util/Map;	d	subscriptions
	f	Ljava/util/Queue;	e	subscriptionRequestQueue
	m	(Layb;)V	<init>	<init>
	m	(Lbrv;)Z	a	shouldLogSamples
	m	(Ladq;)V	a	broadcast
	m	(Lauc;Lbrv;)V	a	subscribe
	m	(I)V	a	tick
	m	(JI)V	a	handleSubscriptions
	m	(JI)V	b	handleUnsubscriptions
	m	(IJLjava/util/Map$Entry;)Z	a	lambda$handleUnsubscriptions$1
	m	(Lbrv;)Ljava/util/Map;	b	lambda$new$0
c	brt$a	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker$SubscriptionRequest
	f	Lauc;	a	player
	f	Lbrv;	b	sampleType
	m	(Lauc;Lbrv;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lauc;	a	player
	m	()Lbrv;	b	sampleType
c	brt$b	net/minecraft/util/debugchart/DebugSampleSubscriptionTracker$SubscriptionStartedAt
	f	J	a	millis
	f	I	b	tick
	m	(JI)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	a	millis
	m	()I	b	tick
c	bru	net/minecraft/util/debugchart/LocalSampleLogger
	f	I	c	CAPACITY
	f	[[J	d	samples
	f	I	e	start
	f	I	f	size
	m	(I)V	<init>	<init>
	m	(I[J)V	<init>	<init>
	m	()V	a	useSample
	m	()I	c	capacity
	m	()I	d	size
	m	(I)J	a	get
	m	(II)J	a	get
	m	(I)I	b	wrapIndex
	m	()V	e	reset
c	brv	net/minecraft/util/debugchart/RemoteDebugSampleType
	f	Lbrv;	a	TICK_TIME
	f	[Lbrv;	b	$VALUES
	m	()[Lbrv;	values	values
	m	(Ljava/lang/String;)Lbrv;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbrv;	a	$values
	m	()V	<clinit>	<clinit>
c	brw	net/minecraft/util/debugchart/RemoteSampleLogger
	f	Lbrt;	c	subscriptionTracker
	f	Lbrv;	d	sampleType
	m	(ILbrt;Lbrv;)V	<init>	<init>
	m	(ILbrt;Lbrv;[J)V	<init>	<init>
	m	()V	a	useSample
c	brx	net/minecraft/util/debugchart/SampleLogger
	m	([J)V	a	logFullSample
	m	(J)V	a	logSample
	m	(JI)V	a	logPartialSample
c	bry	net/minecraft/util/debugchart/SampleStorage
	m	()I	c	capacity
	m	()I	d	size
	m	(I)J	a	get
	m	(II)J	a	get
	m	()V	e	reset
c	brz	net/minecraft/util/debugchart/TpsDebugDimensions
	f	Lbrz;	a	FULL_TICK
	f	Lbrz;	b	TICK_SERVER_METHOD
	f	Lbrz;	c	SCHEDULED_TASKS
	f	Lbrz;	d	IDLE
	f	[Lbrz;	e	$VALUES
	m	()[Lbrz;	values	values
	m	(Ljava/lang/String;)Lbrz;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbrz;	a	$values
	m	()V	<clinit>	<clinit>
c	bsa	net/minecraft/util/debugchart/package-info
c	bsb	net/minecraft/util/eventlog/EventLogDirectory
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	COMPRESS_BUFFER_SIZE
	f	Ljava/lang/String;	c	COMPRESSED_EXTENSION
	f	Ljava/nio/file/Path;	d	root
	f	Ljava/lang/String;	e	extension
	m	(Ljava/nio/file/Path;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/lang/String;)Lbsb;	a	open
	m	()Lbsb$d;	a	listFiles
	m	(Ljava/nio/file/Path;)Lbsb$b;	a	parseFile
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	tryCompress
	m	(Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V	a	writeCompressed
	m	(Ljava/time/LocalDate;)Lbsb$e;	a	createNewFile
	m	(Ljava/nio/file/Path;)Z	b	lambda$listFiles$0
	m	()V	<clinit>	<clinit>
c	bsb$a	net/minecraft/util/eventlog/EventLogDirectory$CompressedFile
	f	Ljava/nio/file/Path;	a	path
	f	Lbsb$c;	b	id
	m	(Ljava/nio/file/Path;Lbsb$c;)V	<init>	<init>
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbsb$a;	b	compress
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbsb$c;	d	id
c	bsb$b	net/minecraft/util/eventlog/EventLogDirectory$File
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbsb$c;	d	id
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbsb$a;	b	compress
c	bsb$c	net/minecraft/util/eventlog/EventLogDirectory$FileId
	f	Ljava/time/LocalDate;	a	date
	f	I	b	index
	f	Ljava/time/format/DateTimeFormatter;	c	DATE_FORMATTER
	m	(Ljava/time/LocalDate;I)V	<init>	<init>
	m	(Ljava/lang/String;)Lbsb$c;	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;)Ljava/lang/String;	b	toFileName
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/LocalDate;	a	date
	m	()I	b	index
	m	()V	<clinit>	<clinit>
c	bsb$d	net/minecraft/util/eventlog/EventLogDirectory$FileList
	f	Ljava/util/List;	a	files
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/time/LocalDate;I)Lbsb$d;	a	prune
	m	()Lbsb$d;	a	compressAll
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Set;	c	ids
	m	(ILjava/time/LocalDate;Lbsb$b;)Z	a	lambda$prune$0
c	bsb$e	net/minecraft/util/eventlog/EventLogDirectory$RawFile
	f	Ljava/nio/file/Path;	a	path
	f	Lbsb$c;	b	id
	m	(Ljava/nio/file/Path;Lbsb$c;)V	<init>	<init>
	m	()Ljava/nio/channels/FileChannel;	e	openChannel
	m	()Ljava/io/Reader;	a	openReader
	m	()Lbsb$a;	b	compress
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	c	path
	m	()Lbsb$c;	d	id
c	bsc	net/minecraft/util/eventlog/JsonEventLog
	f	Lcom/google/gson/Gson;	a	GSON
	f	Lcom/mojang/serialization/Codec;	b	codec
	f	Ljava/nio/channels/FileChannel;	c	channel
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	referenceCount
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/channels/FileChannel;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lbsc;	a	open
	m	(Ljava/lang/Object;)V	a	write
	m	()Lbsd;	a	openReader
	m	()V	close	close
	m	()V	b	releaseReference
	m	()V	<clinit>	<clinit>
c	bsc$1	net/minecraft/util/eventlog/JsonEventLog$1
	f	J	c	position
	f	Lbsd;	a	val$reader
	f	Lbsc;	b	this$0
	m	(Lbsc;Lbsd;)V	<init>	<init>
	m	()Ljava/lang/Object;	a	next
	m	()V	close	close
c	bsd	net/minecraft/util/eventlog/JsonEventLogReader
	m	(Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lbsd;	a	create
	m	()Ljava/lang/Object;	a	next
c	bsd$1	net/minecraft/util/eventlog/JsonEventLogReader$1
	f	Lcom/google/gson/stream/JsonReader;	a	val$jsonReader
	f	Lcom/mojang/serialization/Codec;	b	val$codec
	m	(Lcom/google/gson/stream/JsonReader;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()Ljava/lang/Object;	a	next
	m	()V	close	close
c	bse	net/minecraft/util/eventlog/package-info
c	bsf	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lnet/minecraft/server/MinecraftServer;	b	server
	f	Ljavax/management/MBeanInfo;	c	mBeanInfo
	f	Ljava/util/Map;	d	attributeDescriptionByName
	m	(Lnet/minecraft/server/MinecraftServer;)V	<init>	<init>
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	registerJmxMonitoring
	m	()F	a	getAverageTickTime
	m	()[J	b	getTickTimes
	m	(Ljava/lang/String;)Ljava/lang/Object;	getAttribute	getAttribute
	m	(Ljavax/management/Attribute;)V	setAttribute	setAttribute
	m	([Ljava/lang/String;)Ljavax/management/AttributeList;	getAttributes	getAttributes
	m	(Ljavax/management/AttributeList;)Ljavax/management/AttributeList;	setAttributes	setAttributes
	m	(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;	invoke	invoke
	m	()Ljavax/management/MBeanInfo;	getMBeanInfo	getMBeanInfo
	m	(Lbsf$a;)Ljavax/management/Attribute;	a	lambda$getAttributes$2
	m	(I)[Ljavax/management/MBeanAttributeInfo;	a	lambda$new$1
	m	(Lbsf$a;)Ljava/lang/String;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	bsf$a	net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription
	f	Ljava/lang/String;	a	name
	f	Ljava/util/function/Supplier;	b	getter
	f	Ljava/lang/String;	c	description
	f	Ljava/lang/Class;	d	type
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
	m	()Ljavax/management/MBeanAttributeInfo;	a	asMBeanAttributeInfo
c	bsg	net/minecraft/util/monitoring/jmx/package-info
c	bsh	net/minecraft/util/package-info
c	bsi	net/minecraft/util/parsing/package-info
c	bsj	net/minecraft/util/parsing/packrat/Atom
	f	Ljava/lang/String;	a	name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;)Lbsj;	a	of
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
c	bsk	net/minecraft/util/parsing/packrat/CachedParseState
	f	[Lbsk$b;	a	positionCache
	f	Lbso;	b	errorCollector
	f	Lbst;	c	scope
	f	[Lbsk$d;	d	controlCache
	f	I	e	nextControlToReturn
	f	Lbsk$c;	f	silent
	m	(Lbso;)V	<init>	<init>
	m	()Lbst;	a	scope
	m	()Lbso;	b	errorCollector
	m	(Lbsq;)Ljava/lang/Object;	a	parse
	m	(I)Lbsk$b;	b	getCacheForPosition
	m	()Lbsl;	c	acquireControl
	m	()V	d	releaseControl
	m	()Lbsr;	e	silent
c	bsk$a	net/minecraft/util/parsing/packrat/CachedParseState$CacheEntry
	f	Ljava/lang/Object;	b	value
	f	I	c	markAfterParse
	f	Lbsk$a;	a	NEGATIVE
	m	(Ljava/lang/Object;I)V	<init>	<init>
	m	()Lbsk$a;	a	negativeEntry
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	b	value
	m	()I	c	markAfterParse
	m	()V	<clinit>	<clinit>
c	bsk$b	net/minecraft/util/parsing/packrat/CachedParseState$PositionCache
	f	I	a	ENTRY_STRIDE
	f	I	b	NOT_FOUND
	f	[Ljava/lang/Object;	c	atomCache
	f	I	d	nextKey
	m	()V	<init>	<init>
	m	(Lbsj;)I	a	findKeyIndex
	m	(Lbsj;)I	b	allocateNewEntry
	m	(I)Lbsk$a;	a	getValue
	m	(ILbsk$a;)V	a	setValue
c	bsk$c	net/minecraft/util/parsing/packrat/CachedParseState$Silent
	f	Lbso;	b	silentCollector
	f	Lbsk;	a	this$0
	m	(Lbsk;)V	<init>	<init>
	m	()Lbso;	b	errorCollector
	m	()Lbst;	a	scope
	m	(Lbsq;)Ljava/lang/Object;	a	parse
	m	()Ljava/lang/Object;	f	input
	m	()I	g	mark
	m	(I)V	a	restore
	m	()Lbsl;	c	acquireControl
	m	()V	d	releaseControl
	m	()Lbsr;	e	silent
c	bsk$d	net/minecraft/util/parsing/packrat/CachedParseState$SimpleControl
	f	Z	b	hasCut
	m	()V	<init>	<init>
	m	()V	a	cut
	m	()Z	b	hasCut
	m	()V	c	reset
c	bsl	net/minecraft/util/parsing/packrat/Control
	f	Lbsl;	a	UNBOUND
	m	()V	a	cut
	m	()Z	b	hasCut
	m	()V	<clinit>	<clinit>
c	bsl$1	net/minecraft/util/parsing/packrat/Control$1
	m	()V	<init>	<init>
	m	()V	a	cut
	m	()Z	b	hasCut
c	bsm	net/minecraft/util/parsing/packrat/DelayedException
	m	(Ljava/lang/String;I)Ljava/lang/Exception;	create	create
	m	(Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;)Lbsm;	a	create
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ljava/lang/String;)Lbsm;	a	create
	m	(Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ljava/lang/String;Ljava/lang/String;I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$create$1
	m	(Lcom/mojang/brigadier/exceptions/SimpleCommandExceptionType;Ljava/lang/String;I)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$create$0
c	bsn	net/minecraft/util/parsing/packrat/Dictionary
	f	Ljava/util/Map;	a	terms
	m	()V	<init>	<init>
	m	(Lbsj;Lbss;)Lbsq;	a	put
	m	(Lbsj;Lbsv;Lbss$a;)Lbsq;	a	putComplex
	m	(Lbsj;Lbsv;Lbss$b;)Lbsq;	a	put
	m	()V	a	checkAllBound
	m	(Lbsj;)Lbsq;	a	getOrThrow
	m	(Lbsj;)Lbsq;	b	forward
	m	(Lbsj;)Lbsn$a;	d	getOrCreateEntry
	m	(Lbsj;)Lbsv;	c	named
	m	(Lbsj;Lbsj;)Lbsv;	a	namedWithAlias
	m	(Lbsj;)Ljava/lang/String;	e	lambda$getOrThrow$1
	m	(Ljava/util/Map$Entry;)Z	a	lambda$checkAllBound$0
c	bsn$a	net/minecraft/util/parsing/packrat/Dictionary$Entry
	f	Lbsj;	a	name
	f	Lbss;	b	value
	m	(Lbsj;)V	<init>	<init>
	m	()Lbsj;	a	name
	m	()Lbss;	b	value
	m	()Ljava/lang/String;	c	get
	m	()Ljava/lang/Object;	get	get
c	bsn$b	net/minecraft/util/parsing/packrat/Dictionary$Reference
	f	Lbsn$a;	a	ruleToParse
	f	Lbsj;	b	nameToStore
	m	(Lbsn$a;Lbsj;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsn$a;	a	ruleToParse
	m	()Lbsj;	b	nameToStore
c	bso	net/minecraft/util/parsing/packrat/ErrorCollector
	m	(ILbsu;Ljava/lang/Object;)V	a	store
	m	(ILjava/lang/Object;)V	a	store
	m	(I)V	a	finish
c	bso$a	net/minecraft/util/parsing/packrat/ErrorCollector$LongestOnly
	f	[Lbso$a$a;	a	entries
	f	I	b	nextErrorEntry
	f	I	c	lastCursor
	m	()V	<init>	<init>
	m	(I)V	b	discardErrorsFromShorterParse
	m	(I)V	a	finish
	m	(ILbsu;Ljava/lang/Object;)V	a	store
	m	(Lbsu;Ljava/lang/Object;)V	a	addErrorEntry
	m	()Ljava/util/List;	a	entries
	m	()I	b	cursor
c	bso$a$a	net/minecraft/util/parsing/packrat/ErrorCollector$LongestOnly$MutableErrorEntry
	f	Lbsu;	a	suggestions
	f	Ljava/lang/Object;	b	reason
	m	()V	<init>	<init>
c	bso$b	net/minecraft/util/parsing/packrat/ErrorCollector$Nop
	m	()V	<init>	<init>
	m	(ILbsu;Ljava/lang/Object;)V	a	store
	m	(I)V	a	finish
c	bsp	net/minecraft/util/parsing/packrat/ErrorEntry
	f	I	a	cursor
	f	Lbsu;	b	suggestions
	f	Ljava/lang/Object;	c	reason
	m	(ILbsu;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	cursor
	m	()Lbsu;	b	suggestions
	m	()Ljava/lang/Object;	c	reason
c	bsq	net/minecraft/util/parsing/packrat/NamedRule
	m	()Lbsj;	a	name
	m	()Lbss;	b	value
c	bsr	net/minecraft/util/parsing/packrat/ParseState
	m	()Lbst;	a	scope
	m	()Lbso;	b	errorCollector
	m	(Lbsq;)Ljava/util/Optional;	b	parseTopRule
	m	(Lbsq;)Ljava/lang/Object;	a	parse
	m	()Ljava/lang/Object;	f	input
	m	()I	g	mark
	m	(I)V	a	restore
	m	()Lbsl;	c	acquireControl
	m	()V	d	releaseControl
	m	()Lbsr;	e	silent
c	bss	net/minecraft/util/parsing/packrat/Rule
	m	(Lbsr;)Ljava/lang/Object;	a	parse
	m	(Lbsv;Lbss$a;)Lbss;	a	fromTerm
	m	(Lbsv;Lbss$b;)Lbss;	a	fromTerm
c	bss$a	net/minecraft/util/parsing/packrat/Rule$RuleAction
	m	(Lbsr;)Ljava/lang/Object;	run	run
c	bss$b	net/minecraft/util/parsing/packrat/Rule$SimpleRuleAction
	m	(Lbst;)Ljava/lang/Object;	run	run
	m	(Lbsr;)Ljava/lang/Object;	run	run
c	bss$c	net/minecraft/util/parsing/packrat/Rule$WrappedTerm
	f	Lbss$a;	a	action
	f	Lbsv;	b	child
	m	(Lbss$a;Lbsv;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/Object;	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbss$a;	a	action
	m	()Lbsv;	b	child
c	bst	net/minecraft/util/parsing/packrat/Scope
	f	I	b	NOT_FOUND
	f	Ljava/lang/Object;	c	FRAME_START_MARKER
	f	I	d	ENTRY_STRIDE
	f	[Ljava/lang/Object;	e	stack
	f	I	f	topEntryKeyIndex
	f	I	g	topMarkerKeyIndex
	f	Z	a	$assertionsDisabled
	m	()V	<init>	<init>
	m	(Lbsj;)I	c	valueIndex
	m	([Lbsj;)I	a	valueIndexForAny
	m	(I)V	a	ensureCapacity
	m	()V	h	setupNewFrame
	m	()V	a	pushFrame
	m	(I)I	b	getPreviousMarkerIndex
	m	()V	b	popFrame
	m	()V	c	splitFrame
	m	()V	d	clearFrameValues
	m	()V	e	mergeFrame
	m	(Lbsj;Ljava/lang/Object;)V	a	put
	m	(Lbsj;)Ljava/lang/Object;	a	get
	m	(Lbsj;)Ljava/lang/Object;	b	getOrThrow
	m	(Lbsj;Ljava/lang/Object;)Ljava/lang/Object;	b	getOrDefault
	m	([Lbsj;)Ljava/lang/Object;	b	getAny
	m	([Lbsj;)Ljava/lang/Object;	c	getAnyOrThrow
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/util/Map;	f	lastFrame
	m	()Z	g	hasOnlySingleFrame
	m	()Z	i	validateStructure
	m	()V	<clinit>	<clinit>
c	bst$1	net/minecraft/util/parsing/packrat/Scope$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	bsu	net/minecraft/util/parsing/packrat/SuggestionSupplier
	m	(Lbsr;)Ljava/util/stream/Stream;	possibleValues	possibleValues
	m	()Lbsu;	b	empty
	m	(Lbsr;)Ljava/util/stream/Stream;	b	lambda$empty$0
c	bsv	net/minecraft/util/parsing/packrat/Term
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	(Lbsj;Ljava/lang/Object;)Lbsv;	a	marker
	m	([Lbsv;)Lbsv;	a	sequence
	m	([Lbsv;)Lbsv;	b	alternative
	m	(Lbsv;)Lbsv;	a	optional
	m	(Lbsq;Lbsj;)Lbsv;	a	repeated
	m	(Lbsq;Lbsj;I)Lbsv;	a	repeated
	m	(Lbsq;Lbsj;Lbsv;)Lbsv;	a	repeatedWithTrailingSeparator
	m	(Lbsq;Lbsj;Lbsv;I)Lbsv;	a	repeatedWithTrailingSeparator
	m	(Lbsq;Lbsj;Lbsv;)Lbsv;	b	repeatedWithoutTrailingSeparator
	m	(Lbsq;Lbsj;Lbsv;I)Lbsv;	b	repeatedWithoutTrailingSeparator
	m	(Lbsv;)Lbsv;	b	positiveLookahead
	m	(Lbsv;)Lbsv;	c	negativeLookahead
	m	()Lbsv;	c	cut
	m	()Lbsv;	d	empty
	m	(Ljava/lang/Object;)Lbsv;	a	fail
c	bsv$1	net/minecraft/util/parsing/packrat/Term$1
	m	()V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
c	bsv$2	net/minecraft/util/parsing/packrat/Term$2
	m	()V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
c	bsv$3	net/minecraft/util/parsing/packrat/Term$3
	f	Ljava/lang/Object;	a	val$message
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
c	bsv$a	net/minecraft/util/parsing/packrat/Term$Alternative
	f	[Lbsv;	a	elements
	m	([Lbsv;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[Lbsv;	a	elements
c	bsv$b	net/minecraft/util/parsing/packrat/Term$LookAhead
	f	Lbsv;	a	term
	f	Z	b	positive
	m	(Lbsv;Z)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsv;	a	term
	m	()Z	b	positive
c	bsv$c	net/minecraft/util/parsing/packrat/Term$Marker
	f	Lbsj;	a	name
	f	Ljava/lang/Object;	b	value
	m	(Lbsj;Ljava/lang/Object;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsj;	a	name
	m	()Ljava/lang/Object;	b	value
c	bsv$d	net/minecraft/util/parsing/packrat/Term$Maybe
	f	Lbsv;	a	term
	m	(Lbsv;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsv;	a	term
c	bsv$e	net/minecraft/util/parsing/packrat/Term$Repeated
	f	Lbsq;	a	element
	f	Lbsj;	b	listName
	f	I	c	minRepetitions
	m	(Lbsq;Lbsj;I)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsq;	a	element
	m	()Lbsj;	b	listName
	m	()I	e	minRepetitions
c	bsv$f	net/minecraft/util/parsing/packrat/Term$RepeatedWithSeparator
	f	Lbsq;	a	element
	f	Lbsj;	b	listName
	f	Lbsv;	c	separator
	f	I	d	minRepetitions
	f	Z	e	allowTrailingSeparator
	m	(Lbsq;Lbsj;Lbsv;IZ)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsq;	a	element
	m	()Lbsj;	b	listName
	m	()Lbsv;	e	separator
	m	()I	f	minRepetitions
	m	()Z	g	allowTrailingSeparator
c	bsv$g	net/minecraft/util/parsing/packrat/Term$Sequence
	f	[Lbsv;	a	elements
	m	([Lbsv;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[Lbsv;	a	elements
c	bsw	net/minecraft/util/parsing/packrat/commands/CommandArgumentParser
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseForCommands
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	parseForSuggestions
	m	(Ljava/util/function/Function;)Lbsw;	a	mapResult
	m	(Lcom/mojang/serialization/DynamicOps;Lbsw;Lcom/mojang/serialization/Codec;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lbsw;	a	withCodec
c	bsw$1	net/minecraft/util/parsing/packrat/commands/CommandArgumentParser$1
	f	Ljava/util/function/Function;	a	val$mapper
	f	Lbsw;	b	this$0
	m	(Lbsw;Ljava/util/function/Function;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseForCommands
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	parseForSuggestions
c	bsw$2	net/minecraft/util/parsing/packrat/commands/CommandArgumentParser$2
	f	Lbsw;	a	val$valueParser
	f	Lcom/mojang/serialization/Codec;	b	val$codec
	f	Lcom/mojang/serialization/DynamicOps;	c	val$ops
	f	Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;	d	val$exceptionType
	f	Lbsw;	e	this$0
	m	(Lbsw;Lbsw;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseForCommands
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	parseForSuggestions
	m	(Lcom/mojang/brigadier/StringReader;ILcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;Ljava/lang/String;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException;	a	lambda$parseForCommands$0
c	bsx	net/minecraft/util/parsing/packrat/commands/Grammar
	f	Lbsn;	a	rules
	f	Lbsq;	b	top
	m	(Lbsn;Lbsq;)V	<init>	<init>
	m	(Lbsr;)Ljava/util/Optional;	a	parse
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	a	parseForCommands
	m	(Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	a	parseForSuggestions
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbsn;	a	rules
	m	()Lbsq;	b	top
	m	(Lcom/mojang/brigadier/StringReader;Lbsp;Ljava/util/function/Consumer;)V	a	lambda$parseForCommands$0
c	bsy	net/minecraft/util/parsing/packrat/commands/GreedyPatternParseRule
	f	Ljava/util/regex/Pattern;	a	pattern
	f	Lbsm;	b	error
	m	(Ljava/util/regex/Pattern;Lbsm;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/String;	b	parse
	m	(Lbsr;)Ljava/lang/Object;	a	parse
c	bsz	net/minecraft/util/parsing/packrat/commands/GreedyPredicateParseRule
	f	I	a	minSize
	f	I	b	maxSize
	f	Lbsm;	c	error
	m	(ILbsm;)V	<init>	<init>
	m	(IILbsm;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/String;	b	parse
	m	(C)Z	a	isAccepted
	m	(Lbsr;)Ljava/lang/Object;	a	parse
c	bta	net/minecraft/util/parsing/packrat/commands/NumberRunParseRule
	f	Lbsm;	a	noValueError
	f	Lbsm;	b	underscoreNotAllowedError
	m	(Lbsm;Lbsm;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/String;	b	parse
	m	(C)Z	a	isAccepted
	m	(Lbsr;)Ljava/lang/Object;	a	parse
c	btb	net/minecraft/util/parsing/packrat/commands/ParserBasedArgument
	f	Lbsw;	a	parser
	m	(Lbsw;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/StringReader;)Ljava/lang/Object;	parse	parse
	m	(Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture;	listSuggestions	listSuggestions
c	btc	net/minecraft/util/parsing/packrat/commands/ResourceLocationParseRule
	f	Lbss;	a	INSTANCE
	m	()V	<init>	<init>
	m	(Lbsr;)Lame;	b	parse
	m	(Lbsr;)Ljava/lang/Object;	a	parse
	m	()V	<clinit>	<clinit>
c	btd	net/minecraft/util/parsing/packrat/commands/ResourceLookupRule
	f	Lbsq;	b	idParser
	f	Ljava/lang/Object;	a	context
	f	Lbsm;	c	error
	m	(Lbsq;Ljava/lang/Object;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/Object;	a	parse
	m	(Lcom/mojang/brigadier/ImmutableStringReader;Lame;)Ljava/lang/Object;	a	validateElement
c	bte	net/minecraft/util/parsing/packrat/commands/ResourceSuggestion
	m	()Ljava/util/stream/Stream;	a	possibleResources
	m	(Lbsr;)Ljava/util/stream/Stream;	possibleValues	possibleValues
c	btf	net/minecraft/util/parsing/packrat/commands/StringReaderParserState
	f	Lcom/mojang/brigadier/StringReader;	a	input
	m	(Lbso;Lcom/mojang/brigadier/StringReader;)V	<init>	<init>
	m	()Lcom/mojang/brigadier/StringReader;	h	input
	m	()I	g	mark
	m	(I)V	a	restore
	m	()Ljava/lang/Object;	f	input
c	btg	net/minecraft/util/parsing/packrat/commands/StringReaderTerms
	m	(Ljava/lang/String;)Lbsv;	a	word
	m	(C)Lbsv;	a	character
	m	(CC)Lbsv;	a	characters
	m	(Ljava/lang/String;I)Lcom/mojang/brigadier/StringReader;	a	createReader
c	btg$1	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$1
	f	C	a	val$value
	m	(Lit/unimi/dsi/fastutil/chars/CharList;C)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	btg$2	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$2
	f	C	a	val$v1
	f	C	b	val$v2
	m	(Lit/unimi/dsi/fastutil/chars/CharList;CC)V	<init>	<init>
	m	(C)Z	a	isAccepted
c	btg$a	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$TerminalCharacters
	f	Lbsm;	a	error
	f	Lbsu;	b	suggestions
	m	(Lit/unimi/dsi/fastutil/chars/CharList;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	(C)Z	a	isAccepted
	m	(Lit/unimi/dsi/fastutil/chars/CharList;Lbsr;)Ljava/util/stream/Stream;	a	lambda$new$0
c	btg$b	net/minecraft/util/parsing/packrat/commands/StringReaderTerms$TerminalWord
	f	Ljava/lang/String;	a	value
	f	Lbsm;	b	error
	f	Lbsu;	c	suggestions
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Lbsr;Lbst;Lbsl;)Z	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;Lbsr;)Ljava/util/stream/Stream;	a	lambda$new$0
c	bth	net/minecraft/util/parsing/packrat/commands/TagParseRule
	f	Lvj;	a	parser
	m	(Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	(Lbsr;)Lcom/mojang/serialization/Dynamic;	b	parse
	m	(Lbsr;)Ljava/lang/Object;	a	parse
c	bti	net/minecraft/util/parsing/packrat/commands/UnquotedStringParseRule
	f	I	a	minSize
	f	Lbsm;	b	error
	m	(ILbsm;)V	<init>	<init>
	m	(Lbsr;)Ljava/lang/String;	b	parse
	m	(Lbsr;)Ljava/lang/Object;	a	parse
c	btj	net/minecraft/util/parsing/packrat/commands/package-info
c	btk	net/minecraft/util/parsing/packrat/package-info
c	btl	net/minecraft/util/profiling/ActiveProfiler
	f	J	a	WARNING_TIME_NANOS
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/List;	d	paths
	f	Lit/unimi/dsi/fastutil/longs/LongList;	e	startTimes
	f	Ljava/util/Map;	f	entries
	f	Ljava/util/function/IntSupplier;	g	getTickTime
	f	Ljava/util/function/LongSupplier;	h	getRealTime
	f	J	i	startTimeNano
	f	I	j	startTimeTicks
	f	Ljava/lang/String;	k	path
	f	Z	l	started
	f	Lbtl$a;	m	currentEntry
	f	Ljava/util/function/BooleanSupplier;	n	suppressWarnings
	f	Ljava/util/Set;	o	chartedPaths
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
	m	()V	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Lbvc;)V	a	markForCharting
	m	()V	c	pop
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	()Lbtl$a;	f	getCurrentEntry
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()Lbtr;	d	getResults
	m	(Ljava/lang/String;)Lbtl$a;	c	getEntry
	m	()Ljava/util/Set;	e	getChartedPaths
	m	(Ljava/lang/String;)Lbtl$a;	g	lambda$getCurrentEntry$3
	m	(J)Ljava/lang/Object;	b	lambda$pop$2
	m	()Ljava/lang/Object;	g	lambda$pop$1
	m	()Ljava/lang/Object;	h	lambda$endTick$0
	m	()V	<clinit>	<clinit>
c	btl$a	net/minecraft/util/profiling/ActiveProfiler$PathEntry
	f	J	a	maxDuration
	f	J	b	minDuration
	f	J	c	accumulatedDuration
	f	J	d	count
	f	Lit/unimi/dsi/fastutil/objects/Object2LongOpenHashMap;	e	counters
	m	()V	<init>	<init>
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	btm	net/minecraft/util/profiling/ContinuousProfiler
	f	Ljava/util/function/LongSupplier;	a	realTime
	f	Ljava/util/function/IntSupplier;	b	tickCount
	f	Ljava/util/function/BooleanSupplier;	c	suppressWarnings
	f	Lbtq;	d	profiler
	m	(Ljava/util/function/LongSupplier;Ljava/util/function/IntSupplier;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
	m	()Z	a	isEnabled
	m	()V	b	disable
	m	()V	c	enable
	m	()Lbtt;	d	getFiller
	m	()Lbtr;	e	getResults
c	btn	net/minecraft/util/profiling/EmptyProfileResults
	f	Lbtn;	a	EMPTY
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()J	a	getStartTimeNano
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()Ljava/lang/String;	e	getProfilerResults
	m	()V	<clinit>	<clinit>
c	bto	net/minecraft/util/profiling/FilledProfileResults
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbtu;	b	EMPTY
	f	Lcom/google/common/base/Splitter;	c	SPLITTER
	f	Ljava/util/Comparator;	e	COUNTER_ENTRY_COMPARATOR
	f	Ljava/util/Map;	f	entries
	f	J	g	startTimeNano
	f	I	h	startTimeTicks
	f	J	i	endTimeNano
	f	I	j	endTimeTicks
	f	I	k	tickDuration
	m	(Ljava/util/Map;JIJI)V	<init>	<init>
	m	(Ljava/lang/String;)Lbtu;	c	getEntry
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/lang/String;Ljava/lang/String;)Z	a	isDirectChild
	m	()Ljava/util/Map;	h	getCounterValues
	m	()J	a	getStartTimeNano
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	(JI)Ljava/lang/String;	a	getProfilerResults
	m	()Ljava/lang/String;	e	getProfilerResults
	m	(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;	a	indentLine
	m	(ILjava/lang/String;Ljava/lang/StringBuilder;)V	a	appendProfilerResults
	m	(ILjava/lang/String;Lbto$a;ILjava/lang/StringBuilder;)V	a	appendCounterResults
	m	(Ljava/util/Map;Ljava/lang/StringBuilder;I)V	a	appendCounters
	m	()I	f	getTickDuration
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Lbto$a;)V	a	lambda$appendCounters$6
	m	(IILjava/lang/StringBuilder;Ljava/util/Map$Entry;)V	a	lambda$appendCounterResults$5
	m	(Ljava/lang/StringBuilder;ILjava/lang/String;Ljava/lang/Long;)V	a	lambda$appendProfilerResults$4
	m	(Ljava/util/Map;Ljava/lang/String;Lbtu;)V	a	lambda$getCounterValues$3
	m	(Ljava/util/Map;Ljava/util/List;Ljava/lang/String;Ljava/lang/Long;)V	a	lambda$getCounterValues$2
	m	(Ljava/lang/String;)Lbto$a;	d	lambda$getCounterValues$1
	m	(Lbto$a;)J	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bto$1	net/minecraft/util/profiling/FilledProfileResults$1
	m	()V	<init>	<init>
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	bto$a	net/minecraft/util/profiling/FilledProfileResults$CounterCollector
	f	J	a	selfValue
	f	J	b	totalValue
	f	Ljava/util/Map;	c	children
	m	()V	<init>	<init>
	m	(Ljava/util/Iterator;J)V	a	addValue
	m	(Ljava/lang/String;)Lbto$a;	a	lambda$addValue$0
c	btp	net/minecraft/util/profiling/InactiveProfiler
	f	Lbtp;	a	INSTANCE
	m	()V	<init>	<init>
	m	()V	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Lbvc;)V	a	markForCharting
	m	()V	c	pop
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	(Ljava/lang/String;)Lbty;	d	zone
	m	(Ljava/util/function/Supplier;)Lbty;	c	zone
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()Lbtr;	d	getResults
	m	(Ljava/lang/String;)Lbtl$a;	c	getEntry
	m	()Ljava/util/Set;	e	getChartedPaths
	m	()V	<clinit>	<clinit>
c	btq	net/minecraft/util/profiling/ProfileCollector
	m	()Lbtr;	d	getResults
	m	(Ljava/lang/String;)Lbtl$a;	c	getEntry
	m	()Ljava/util/Set;	e	getChartedPaths
c	btr	net/minecraft/util/profiling/ProfileResults
	f	C	d	PATH_SEPARATOR
	m	(Ljava/lang/String;)Ljava/util/List;	a	getTimes
	m	(Ljava/nio/file/Path;)Z	a	saveResults
	m	()J	a	getStartTimeNano
	m	()I	b	getStartTimeTicks
	m	()J	c	getEndTimeNano
	m	()I	d	getEndTimeTicks
	m	()J	g	getNanoDuration
	m	()I	f	getTickDuration
	m	()Ljava/lang/String;	e	getProfilerResults
	m	(Ljava/lang/String;)Ljava/lang/String;	b	demanglePath
c	bts	net/minecraft/util/profiling/Profiler
	f	Ljava/lang/ThreadLocal;	a	TRACY_FILLER
	f	Ljava/lang/ThreadLocal;	b	ACTIVE
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	ACTIVE_COUNT
	m	()V	<init>	<init>
	m	(Lbtt;)Lbts$a;	a	use
	m	(Lbtt;)V	b	startUsing
	m	()V	b	stopUsing
	m	(Lbtt;)Lbtt;	c	decorateFiller
	m	()Lbtt;	a	get
	m	()Lbtt;	c	getDefaultFiller
	m	()V	<clinit>	<clinit>
c	bts$a	net/minecraft/util/profiling/Profiler$Scope
	m	()V	close	close
c	btt	net/minecraft/util/profiling/ProfilerFiller
	f	Ljava/lang/String;	b	ROOT
	m	()V	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/util/function/Supplier;)V	a	push
	m	()V	c	pop
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	(Ljava/lang/String;)V	e	addZoneText
	m	(J)V	a	addZoneValue
	m	(I)V	a	setZoneColor
	m	(Ljava/lang/String;)Lbty;	d	zone
	m	(Ljava/util/function/Supplier;)Lbty;	c	zone
	m	(Lbvc;)V	a	markForCharting
	m	(Ljava/lang/String;)V	f	incrementCounter
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;)V	d	incrementCounter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	(Lbtt;Lbtt;)Lbtt;	a	combine
c	btt$a	net/minecraft/util/profiling/ProfilerFiller$CombinedProfileFiller
	f	Lbtt;	a	first
	f	Lbtt;	c	second
	m	(Lbtt;Lbtt;)V	<init>	<init>
	m	()V	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/util/function/Supplier;)V	a	push
	m	(Lbvc;)V	a	markForCharting
	m	()V	c	pop
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	(Ljava/lang/String;)V	e	addZoneText
	m	(J)V	a	addZoneValue
	m	(I)V	a	setZoneColor
c	btu	net/minecraft/util/profiling/ProfilerPathEntry
	m	()J	a	getDuration
	m	()J	b	getMaxDuration
	m	()J	c	getCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2LongMap;	d	getCounters
c	btv	net/minecraft/util/profiling/ResultField
	f	D	a	percentage
	f	D	b	globalPercentage
	f	J	c	count
	f	Ljava/lang/String;	d	name
	m	(Ljava/lang/String;DDJ)V	<init>	<init>
	m	(Lbtv;)I	a	compareTo
	m	()I	a	getColor
	m	(Ljava/lang/Object;)I	compareTo	compareTo
c	btw	net/minecraft/util/profiling/SingleTickProfiler
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/LongSupplier;	b	realTime
	f	J	c	saveThreshold
	f	I	d	tick
	f	Ljava/io/File;	e	location
	f	Lbtq;	f	profiler
	m	(Ljava/util/function/LongSupplier;Ljava/lang/String;J)V	<init>	<init>
	m	()Lbtt;	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)Lbtw;	a	createTickProfiler
	m	(Lbtt;Lbtw;)Lbtt;	a	decorateFiller
	m	()Z	c	lambda$startTick$1
	m	()I	d	lambda$startTick$0
	m	()V	<clinit>	<clinit>
c	btx	net/minecraft/util/profiling/TracyZoneFiller
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/StackWalker;	c	STACK_WALKER
	f	Ljava/util/List;	d	activeZones
	f	Ljava/util/Map;	e	plots
	f	Ljava/lang/String;	f	name
	m	()V	<init>	<init>
	m	()V	a	startTick
	m	()V	b	endTick
	m	(Ljava/lang/String;)V	a	push
	m	(Ljava/util/function/Supplier;)V	a	push
	m	()V	c	pop
	m	(Ljava/lang/String;)V	b	popPush
	m	(Ljava/util/function/Supplier;)V	b	popPush
	m	(Lbvc;)V	a	markForCharting
	m	(Ljava/lang/String;I)V	a	incrementCounter
	m	(Ljava/util/function/Supplier;I)V	a	incrementCounter
	m	()Lcom/mojang/jtracy/Zone;	d	activeZone
	m	(Ljava/lang/String;)V	e	addZoneText
	m	(J)V	a	addZoneValue
	m	(I)V	a	setZoneColor
	m	(Ljava/lang/String;Ljava/lang/String;)Lbtx$a;	a	lambda$incrementCounter$2
	m	(Ljava/util/stream/Stream;)Ljava/util/Optional;	a	lambda$push$1
	m	(Ljava/lang/StackWalker$StackFrame;)Z	a	lambda$push$0
	m	()V	<clinit>	<clinit>
c	btx$a	net/minecraft/util/profiling/TracyZoneFiller$PlotAndValue
	f	Lcom/mojang/jtracy/Plot;	a	plot
	f	I	b	value
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(I)V	a	set
	m	(I)V	b	add
c	bty	net/minecraft/util/profiling/Zone
	f	Lbty;	a	INACTIVE
	f	Lbtt;	b	profiler
	m	(Lbtt;)V	<init>	<init>
	m	(Ljava/lang/String;)Lbty;	a	addText
	m	(Ljava/util/function/Supplier;)Lbty;	a	addText
	m	(J)Lbty;	a	addValue
	m	(I)Lbty;	a	setColor
	m	()V	close	close
	m	()V	<clinit>	<clinit>
c	btz	net/minecraft/util/profiling/jfr/Environment
	f	Lbtz;	a	CLIENT
	f	Lbtz;	b	SERVER
	f	Ljava/lang/String;	c	description
	f	[Lbtz;	d	$VALUES
	m	()[Lbtz;	values	values
	m	(Ljava/lang/String;)Lbtz;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lnet/minecraft/server/MinecraftServer;)Lbtz;	a	from
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lbtz;	b	$values
	m	()V	<clinit>	<clinit>
c	bua	net/minecraft/util/profiling/jfr/JfrProfiler
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Ljava/lang/String;	a	ROOT_CATEGORY
	f	Ljava/lang/String;	b	WORLD_GEN_CATEGORY
	f	Ljava/lang/String;	c	TICK_CATEGORY
	f	Ljava/lang/String;	d	NETWORK_CATEGORY
	f	Ljava/lang/String;	e	STORAGE_CATEGORY
	f	Ljava/util/List;	h	CUSTOM_EVENTS
	f	Ljava/lang/String;	i	FLIGHT_RECORDER_CONFIG
	f	Ljava/time/format/DateTimeFormatter;	j	DATE_TIME_FORMATTER
	f	Lbua;	k	INSTANCE
	f	Ljdk/jfr/Recording;	l	recording
	f	F	m	currentAverageTickTime
	f	Ljava/util/Map;	n	networkTrafficByAddress
	m	()V	<init>	<init>
	m	()Lbua;	a	getInstance
	m	(Lbtz;)Z	a	start
	m	()Ljava/nio/file/Path;	b	stop
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	(Ljava/io/Reader;Lbtz;)Z	a	start
	m	()V	f	setupSummaryListener
	m	(F)V	a	onServerTick
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	b	onPacketSent
	m	(Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b;	a	networkStatFor
	m	(Lehr;Ldlz;Lehq;I)V	a	onRegionFileRead
	m	(Lehr;Ldlz;Lehq;I)V	b	onRegionFileWrite
	m	()Lbue;	e	onWorldLoadedStarted
	m	(Ldlz;Lamd;Ljava/lang/String;)Lbue;	a	onChunkGenerate
	m	(Ldlz;Lamd;Ljl;)Lbue;	a	onStructureGenerate
	m	(Lnet/minecraft/util/profiling/jfr/event/StructureGenerationEvent;Z)V	a	lambda$onStructureGenerate$5
	m	(Lnet/minecraft/util/profiling/jfr/event/ChunkGenerationEvent;Z)V	a	lambda$onChunkGenerate$4
	m	(Lnet/minecraft/util/profiling/jfr/event/WorldLoadFinishedEvent;Z)V	a	lambda$onWorldLoadedStarted$3
	m	(Lbtz;Ljava/lang/String;Ljdk/jfr/Recording;)V	a	lambda$start$2
	m	()V	g	lambda$new$1
	m	()V	h	lambda$new$0
	m	()V	<clinit>	<clinit>
c	bua$1	net/minecraft/util/profiling/jfr/JfrProfiler$1
	f	Lbud;	a	summaryReporter
	f	Lbua;	b	this$0
	m	(Lbua;)V	<init>	<init>
	m	(Ljdk/jfr/Recording;)V	recordingStateChanged	recordingStateChanged
	m	()V	a	lambda$$0
c	bub	net/minecraft/util/profiling/jfr/JvmProfiler
	f	Lbub;	f	INSTANCE
	m	(Lbtz;)Z	a	start
	m	()Ljava/nio/file/Path;	b	stop
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	(F)V	a	onServerTick
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	b	onPacketSent
	m	(Lehr;Ldlz;Lehq;I)V	a	onRegionFileRead
	m	(Lehr;Ldlz;Lehq;I)V	b	onRegionFileWrite
	m	()Lbue;	e	onWorldLoadedStarted
	m	(Ldlz;Lamd;Ljava/lang/String;)Lbue;	a	onChunkGenerate
	m	(Ldlz;Lamd;Ljl;)Lbue;	a	onStructureGenerate
	m	()V	<clinit>	<clinit>
c	bub$a	net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lbue;	a	noOpCommit
	m	()V	<init>	<init>
	m	(Lbtz;)Z	a	start
	m	()Ljava/nio/file/Path;	b	stop
	m	()Z	c	isRunning
	m	()Z	d	isAvailable
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	a	onPacketReceived
	m	(Lwe;Lzy;Ljava/net/SocketAddress;I)V	b	onPacketSent
	m	(Lehr;Ldlz;Lehq;I)V	a	onRegionFileRead
	m	(Lehr;Ldlz;Lehq;I)V	b	onRegionFileWrite
	m	(F)V	a	onServerTick
	m	()Lbue;	e	onWorldLoadedStarted
	m	(Ldlz;Lamd;Ljava/lang/String;)Lbue;	a	onChunkGenerate
	m	(Ldlz;Lamd;Ljl;)Lbue;	a	onStructureGenerate
	m	(Z)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	buc	net/minecraft/util/profiling/jfr/Percentiles
	f	Lcom/google/common/math/Quantiles$ScaleAndIndexes;	a	DEFAULT_INDEXES
	m	()V	<init>	<init>
	m	([J)Ljava/util/Map;	a	evaluate
	m	([D)Ljava/util/Map;	a	evaluate
	m	(Ljava/util/Map;)Ljava/util/Map;	a	sorted
	m	(Ljava/util/Map;Lit/unimi/dsi/fastutil/ints/Int2DoubleRBTreeMap;)V	a	lambda$sorted$0
	m	()V	<clinit>	<clinit>
c	bud	net/minecraft/util/profiling/jfr/SummaryReporter
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/Runnable;	b	onDeregistration
	m	(Ljava/lang/Runnable;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)V	a	recordingStopped
	m	(Ljava/util/function/Supplier;)V	a	infoWithFallback
	m	(Ljava/util/function/Supplier;Ljava/lang/Throwable;)V	a	warnWithFallback
	m	()Ljava/lang/String;	a	lambda$recordingStopped$3
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	b	lambda$recordingStopped$2
	m	()Ljava/lang/String;	b	lambda$recordingStopped$1
	m	(Ljava/nio/file/Path;)Ljava/lang/String;	c	lambda$recordingStopped$0
	m	()V	<clinit>	<clinit>
c	bue	net/minecraft/util/profiling/jfr/callback/ProfiledDuration
	m	(Z)V	finish	finish
c	buf	net/minecraft/util/profiling/jfr/callback/package-info
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	f	I	worldPosX	worldPosX
	f	I	worldPosZ	worldPosZ
	f	I	chunkPosX	chunkPosX
	f	I	chunkPosZ	chunkPosZ
	f	Ljava/lang/String;	targetStatus	targetStatus
	f	Ljava/lang/String;	level	level
	m	(Ldlz;Lamd;Ljava/lang/String;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a	net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields
	f	Ljava/lang/String;	a	WORLD_POS_X
	f	Ljava/lang/String;	b	WORLD_POS_Z
	f	Ljava/lang/String;	c	CHUNK_POS_X
	f	Ljava/lang/String;	d	CHUNK_POS_Z
	f	Ljava/lang/String;	e	STATUS
	f	Ljava/lang/String;	f	LEVEL
	m	()V	<init>	<init>
c	bug	net/minecraft/util/profiling/jfr/event/ChunkRegionIoEvent
	f	I	regionPosX	regionPosX
	f	I	regionPosZ	regionPosZ
	f	I	localChunkPosX	localChunkPosX
	f	I	localChunkPosZ	localChunkPosZ
	f	I	chunkPosX	chunkPosX
	f	I	chunkPosZ	chunkPosZ
	f	Ljava/lang/String;	levelId	levelId
	f	Ljava/lang/String;	dimension	dimension
	f	Ljava/lang/String;	type	type
	f	Ljava/lang/String;	compression	compression
	f	I	bytes	bytes
	m	(Lehr;Ldlz;Lehq;I)V	<init>	<init>
c	bug$a	net/minecraft/util/profiling/jfr/event/ChunkRegionIoEvent$Fields
	f	Ljava/lang/String;	a	REGION_POS_X
	f	Ljava/lang/String;	b	REGION_POS_Z
	f	Ljava/lang/String;	c	LOCAL_POS_X
	f	Ljava/lang/String;	d	LOCAL_POS_Z
	f	Ljava/lang/String;	e	CHUNK_POS_X
	f	Ljava/lang/String;	f	CHUNK_POS_Z
	f	Ljava/lang/String;	g	LEVEL
	f	Ljava/lang/String;	h	DIMENSION
	f	Ljava/lang/String;	i	TYPE
	f	Ljava/lang/String;	j	COMPRESSION
	f	Ljava/lang/String;	k	BYTES
	m	()V	<init>	<init>
c	net/minecraft/util/profiling/jfr/event/ChunkRegionReadEvent	net/minecraft/util/profiling/jfr/event/ChunkRegionReadEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	m	(Lehr;Ldlz;Lehq;I)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/ChunkRegionWriteEvent	net/minecraft/util/profiling/jfr/event/ChunkRegionWriteEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	m	(Lehr;Ldlz;Lehq;I)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	f	Ljava/lang/String;	remoteAddress	remoteAddress
	f	J	sentBytes	sentBytes
	f	I	sentPackets	sentPackets
	f	J	receivedBytes	receivedBytes
	f	I	receivedPackets	receivedPackets
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	SENT_BYTES
	f	Ljava/lang/String;	d	SENT_PACKETS
	f	Ljava/lang/String;	c	RECEIVED_BYTES
	f	Ljava/lang/String;	e	RECEIVED_PACKETS
	m	()V	<init>	<init>
c	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b	net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation
	f	Ljava/util/concurrent/atomic/AtomicLong;	a	sentBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	sentPackets
	f	Ljava/util/concurrent/atomic/AtomicLong;	c	receivedBytes
	f	Ljava/util/concurrent/atomic/AtomicInteger;	d	receivedPackets
	f	Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent;	e	event
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(I)V	a	trackSentPacket
	m	(I)V	b	trackReceivedPacket
	m	()V	a	commitEvent
c	buh	net/minecraft/util/profiling/jfr/event/PacketEvent
	f	Ljava/lang/String;	protocolId	protocolId
	f	Ljava/lang/String;	packetDirection	packetDirection
	f	Ljava/lang/String;	packetId	packetId
	f	Ljava/lang/String;	remoteAddress	remoteAddress
	f	I	bytes	bytes
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
c	buh$a	net/minecraft/util/profiling/jfr/event/PacketEvent$Fields
	f	Ljava/lang/String;	a	REMOTE_ADDRESS
	f	Ljava/lang/String;	b	PROTOCOL_ID
	f	Ljava/lang/String;	c	PACKET_DIRECTION
	f	Ljava/lang/String;	d	PACKET_ID
	f	Ljava/lang/String;	e	BYTES
	m	()V	<init>	<init>
c	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent	net/minecraft/util/profiling/jfr/event/PacketReceivedEvent
	f	Ljava/lang/String;	NAME	NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/PacketSentEvent	net/minecraft/util/profiling/jfr/event/PacketSentEvent
	f	Ljava/lang/String;	NAME	NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/net/SocketAddress;I)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	f	J	averageTickDurationNanos	averageTickDurationNanos
	m	(F)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a	net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields
	f	Ljava/lang/String;	a	AVERAGE_TICK_DURATION
	m	()V	<init>	<init>
c	net/minecraft/util/profiling/jfr/event/StructureGenerationEvent	net/minecraft/util/profiling/jfr/event/StructureGenerationEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	f	I	chunkPosX	chunkPosX
	f	I	chunkPosZ	chunkPosZ
	f	Ljava/lang/String;	structure	structure
	f	Ljava/lang/String;	level	level
	f	Z	success	success
	m	(Ldlz;Ljl;Lamd;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	net/minecraft/util/profiling/jfr/event/StructureGenerationEvent$a	net/minecraft/util/profiling/jfr/event/StructureGenerationEvent$Fields
	f	Ljava/lang/String;	a	CHUNK_POS_X
	f	Ljava/lang/String;	b	CHUNK_POS_Z
	f	Ljava/lang/String;	c	STRUCTURE
	f	Ljava/lang/String;	d	LEVEL
	f	Ljava/lang/String;	e	SUCCESS
c	net/minecraft/util/profiling/jfr/event/WorldLoadFinishedEvent	net/minecraft/util/profiling/jfr/event/WorldLoadFinishedEvent
	f	Ljava/lang/String;	EVENT_NAME	EVENT_NAME
	f	Ljdk/jfr/EventType;	TYPE	TYPE
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	bui	net/minecraft/util/profiling/jfr/event/package-info
c	buj	net/minecraft/util/profiling/jfr/package-info
c	buk	net/minecraft/util/profiling/jfr/parse/JfrStatsParser
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/util/List;	c	chunkGenStats
	f	Ljava/util/List;	d	structureGenStats
	f	Ljava/util/List;	e	cpuLoadStat
	f	Ljava/util/Map;	f	receivedPackets
	f	Ljava/util/Map;	g	sentPackets
	f	Ljava/util/Map;	h	readChunks
	f	Ljava/util/Map;	i	writtenChunks
	f	Ljava/util/List;	j	fileWrites
	f	Ljava/util/List;	k	fileReads
	f	I	l	garbageCollections
	f	Ljava/time/Duration;	m	gcTotalDuration
	f	Ljava/util/List;	n	gcHeapStats
	f	Ljava/util/List;	o	threadAllocationStats
	f	Ljava/util/List;	p	tickTimes
	f	Ljava/time/Duration;	q	worldCreationDuration
	m	(Ljava/util/stream/Stream;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Lbul;	a	parse
	m	()Lbul;	a	results
	m	(Ljava/util/stream/Stream;)V	a	capture
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	a	incrementPacket
	m	(Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V	b	incrementChunk
	m	(Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V	a	appendFileIO
	m	(Ljava/time/Duration;Ljava/util/Map;)Lbuu;	a	collectIoStats
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$collectIoStats$3
	m	(Lbuq;)Lbuk$a;	a	lambda$incrementChunk$2
	m	(Lbuv;)Lbuk$a;	a	lambda$incrementPacket$1
	m	(Ljdk/jfr/consumer/RecordedEvent;)V	a	lambda$capture$0
c	buk$1	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$1
	f	Ljdk/jfr/consumer/RecordingFile;	a	val$recordingFile
	m	(Ljdk/jfr/consumer/RecordingFile;)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()Ljdk/jfr/consumer/RecordedEvent;	a	next
	m	()Ljava/lang/Object;	next	next
c	buk$a	net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize
	f	J	a	count
	f	J	b	totalSize
	m	()V	<init>	<init>
	m	(I)V	a	increment
	m	()Lbuu$a;	a	toCountAndSize
c	bul	net/minecraft/util/profiling/jfr/parse/JfrStatsResult
	f	Ljava/time/Instant;	a	recordingStarted
	f	Ljava/time/Instant;	b	recordingEnded
	f	Ljava/time/Duration;	c	recordingDuration
	f	Ljava/time/Duration;	d	worldCreationDuration
	f	Ljava/util/List;	e	tickTimes
	f	Ljava/util/List;	f	cpuLoadStats
	f	Lbut$a;	g	heapSummary
	f	Lbux$a;	h	threadAllocationSummary
	f	Lbuu;	i	receivedPacketsSummary
	f	Lbuu;	j	sentPacketsSummary
	f	Lbuu;	k	writtenChunks
	f	Lbuu;	l	readChunks
	f	Lbus$a;	m	fileWrites
	f	Lbus$a;	n	fileReads
	f	Ljava/util/List;	o	chunkGenStats
	f	Ljava/util/List;	p	structureGenStats
	m	(Ljava/time/Instant;Ljava/time/Instant;Ljava/time/Duration;Ljava/time/Duration;Ljava/util/List;Ljava/util/List;Lbut$a;Lbux$a;Lbuu;Lbuu;Lbuu;Lbuu;Lbus$a;Lbus$a;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	chunkGenSummary
	m	()Ljava/lang/String;	b	asJson
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Instant;	c	recordingStarted
	m	()Ljava/time/Instant;	d	recordingEnded
	m	()Ljava/time/Duration;	e	recordingDuration
	m	()Ljava/time/Duration;	f	worldCreationDuration
	m	()Ljava/util/List;	g	tickTimes
	m	()Ljava/util/List;	h	cpuLoadStats
	m	()Lbut$a;	i	heapSummary
	m	()Lbux$a;	j	threadAllocationSummary
	m	()Lbuu;	k	receivedPacketsSummary
	m	()Lbuu;	l	sentPacketsSummary
	m	()Lbuu;	m	writtenChunks
	m	()Lbuu;	n	readChunks
	m	()Lbus$a;	o	fileWrites
	m	()Lbus$a;	p	fileReads
	m	()Ljava/util/List;	q	chunkGenStats
	m	()Ljava/util/List;	r	structureGenStats
	m	(Lcom/mojang/datafixers/util/Pair;)Ljava/time/Duration;	a	lambda$chunkGenSummary$1
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$chunkGenSummary$0
c	bum	net/minecraft/util/profiling/jfr/parse/package-info
c	bun	net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer
	f	Ljava/lang/String;	b	BYTES_PER_SECOND
	f	Ljava/lang/String;	c	COUNT
	f	Ljava/lang/String;	d	DURATION_NANOS_TOTAL
	f	Ljava/lang/String;	e	TOTAL_BYTES
	f	Ljava/lang/String;	f	COUNT_PER_SECOND
	f	Lcom/google/gson/Gson;	a	gson
	m	()V	<init>	<init>
	m	(Lbuv;Lcom/google/gson/JsonObject;)V	a	serializePacketId
	m	(Lbuq;Lcom/google/gson/JsonObject;)V	a	serializeChunkId
	m	(Lbul;)Ljava/lang/String;	a	format
	m	(Lbut$a;)Lcom/google/gson/JsonElement;	a	heap
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	a	structureGen
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	b	chunkGen
	m	(Lbux$a;)Lcom/google/gson/JsonElement;	a	threadAllocations
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	c	serverTicks
	m	(Lbul;)Lcom/google/gson/JsonElement;	b	fileIO
	m	(Lbus$a;)Lcom/google/gson/JsonElement;	a	fileIoSummary
	m	(Lbul;)Lcom/google/gson/JsonElement;	c	network
	m	(Lbuu;Ljava/util/function/BiConsumer;)Lcom/google/gson/JsonElement;	a	ioSummary
	m	(Ljava/util/List;)Lcom/google/gson/JsonElement;	d	cpu
	m	(Ljava/util/List;Ljava/util/function/ToDoubleFunction;)Lcom/google/gson/JsonObject;	a	lambda$cpu$15
	m	(Lcom/google/gson/JsonArray;Ljava/util/function/BiConsumer;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$ioSummary$14
	m	(Lcom/google/gson/JsonArray;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$fileIoSummary$13
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	a	lambda$serverTicks$12
	m	(Lbuy;)D	a	lambda$serverTicks$11
	m	(Lcom/google/gson/JsonArray;Ljava/lang/String;Ljava/lang/Double;)V	a	lambda$threadAllocations$10
	m	(Ljava/lang/String;Ljava/lang/Double;Lcom/google/gson/JsonObject;)V	a	lambda$threadAllocations$9
	m	(Lbup;)Lcom/google/gson/JsonElement;	a	lambda$chunkGen$8
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	b	lambda$chunkGen$7
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	a	lambda$chunkGen$6
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonArray;)V	a	lambda$chunkGen$5
	m	(Lcom/mojang/datafixers/util/Pair;)D	a	lambda$chunkGen$4
	m	(Lcom/google/gson/JsonArray;Lcom/google/gson/JsonObject;Lbva;Ljava/lang/String;Ljava/util/List;)V	a	lambda$structureGen$3
	m	(Lbuw;)Lcom/google/gson/JsonElement;	a	lambda$structureGen$2
	m	(Lcom/google/gson/JsonObject;Ljava/lang/Integer;Ljava/lang/Double;)V	c	lambda$structureGen$1
	m	(Lcom/google/gson/JsonObject;Lcom/google/gson/JsonObject;)V	b	lambda$structureGen$0
c	buo	net/minecraft/util/profiling/jfr/serialize/package-info
c	bup	net/minecraft/util/profiling/jfr/stats/ChunkGenStat
	f	Ljava/time/Duration;	a	duration
	f	Ldlz;	b	chunkPos
	f	Latm;	c	worldPos
	f	Legz;	d	status
	f	Ljava/lang/String;	e	level
	m	(Ljava/time/Duration;Ldlz;Latm;Legz;Ljava/lang/String;)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbup;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Duration;	a	duration
	m	()Ldlz;	b	chunkPos
	m	()Latm;	c	worldPos
	m	()Legz;	d	status
	m	()Ljava/lang/String;	e	level
c	buq	net/minecraft/util/profiling/jfr/stats/ChunkIdentification
	f	Ljava/lang/String;	a	level
	f	Ljava/lang/String;	b	dimension
	f	I	c	x
	f	I	d	z
	m	(Ljava/lang/String;Ljava/lang/String;II)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbuq;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	level
	m	()Ljava/lang/String;	b	dimension
	m	()I	c	x
	m	()I	d	z
c	bur	net/minecraft/util/profiling/jfr/stats/CpuLoadStat
	f	D	a	jvm
	f	D	b	userJvm
	f	D	c	system
	m	(DDD)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbur;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	a	jvm
	m	()D	b	userJvm
	m	()D	c	system
c	bus	net/minecraft/util/profiling/jfr/stats/FileIOStat
	f	Ljava/time/Duration;	a	duration
	f	Ljava/lang/String;	b	path
	f	J	c	bytes
	m	(Ljava/time/Duration;Ljava/lang/String;J)V	<init>	<init>
	m	(Ljava/time/Duration;Ljava/util/List;)Lbus$a;	a	summary
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Duration;	a	duration
	m	()Ljava/lang/String;	b	path
	m	()J	c	bytes
	m	(Ljava/util/Map$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$summary$4
	m	(Lbus;)J	a	lambda$summary$3
	m	(Lbus;)Ljava/lang/String;	b	lambda$summary$2
	m	(Lbus;)Z	c	lambda$summary$1
	m	(Lbus;)J	d	lambda$summary$0
c	bus$a	net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary
	f	J	a	totalBytes
	f	D	b	bytesPerSecond
	f	J	c	counts
	f	D	d	countsPerSecond
	f	Ljava/time/Duration;	e	timeSpentInIO
	f	Ljava/util/List;	f	topTenContributorsByTotalBytes
	m	(JDJDLjava/time/Duration;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	a	totalBytes
	m	()D	b	bytesPerSecond
	m	()J	c	counts
	m	()D	d	countsPerSecond
	m	()Ljava/time/Duration;	e	timeSpentInIO
	m	()Ljava/util/List;	f	topTenContributorsByTotalBytes
c	but	net/minecraft/util/profiling/jfr/stats/GcHeapStat
	f	Ljava/time/Instant;	a	timestamp
	f	J	b	heapUsed
	f	Lbut$b;	c	timing
	m	(Ljava/time/Instant;JLbut$b;)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbut;	a	from
	m	(Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lbut$a;	a	summary
	m	(Ljava/util/List;)D	a	calculateAllocationRatePerSecond
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Instant;	a	timestamp
	m	()J	b	heapUsed
	m	()Lbut$b;	c	timing
	m	(Lbut;)Lbut$b;	a	lambda$calculateAllocationRatePerSecond$0
c	but$a	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary
	f	Ljava/time/Duration;	a	duration
	f	Ljava/time/Duration;	b	gcTotalDuration
	f	I	c	totalGCs
	f	D	d	allocationRateBytesPerSecond
	m	(Ljava/time/Duration;Ljava/time/Duration;ID)V	<init>	<init>
	m	()F	a	gcOverHead
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Duration;	b	duration
	m	()Ljava/time/Duration;	c	gcTotalDuration
	m	()I	d	totalGCs
	m	()D	e	allocationRateBytesPerSecond
c	but$b	net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing
	f	Lbut$b;	a	BEFORE_GC
	f	Lbut$b;	b	AFTER_GC
	f	[Lbut$b;	c	$VALUES
	m	()[Lbut$b;	values	values
	m	(Ljava/lang/String;)Lbut$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbut$b;	a	$values
	m	()V	<clinit>	<clinit>
c	buu	net/minecraft/util/profiling/jfr/stats/IoSummary
	f	Lbuu$a;	a	totalCountAndSize
	f	Ljava/util/List;	b	largestSizeContributors
	f	Ljava/time/Duration;	c	recordingDuration
	m	(Ljava/time/Duration;Ljava/util/List;)V	<init>	<init>
	m	()D	a	getCountsPerSecond
	m	()D	b	getSizePerSecond
	m	()J	c	getTotalCount
	m	()J	d	getTotalSize
	m	()Ljava/util/List;	e	largestSizeContributors
c	buu$a	net/minecraft/util/profiling/jfr/stats/IoSummary$CountAndSize
	f	J	a	totalCount
	f	J	b	totalSize
	f	Ljava/util/Comparator;	c	SIZE_THEN_COUNT
	m	(JJ)V	<init>	<init>
	m	(Lbuu$a;)Lbuu$a;	a	add
	m	()F	a	averageSize
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	totalCount
	m	()J	c	totalSize
	m	()V	<clinit>	<clinit>
c	buv	net/minecraft/util/profiling/jfr/stats/PacketIdentification
	f	Ljava/lang/String;	a	direction
	f	Ljava/lang/String;	b	protocolId
	f	Ljava/lang/String;	c	packetId
	m	(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbuv;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	direction
	m	()Ljava/lang/String;	b	protocolId
	m	()Ljava/lang/String;	c	packetId
c	buw	net/minecraft/util/profiling/jfr/stats/StructureGenStat
	f	Ljava/time/Duration;	a	duration
	f	Ldlz;	b	chunkPos
	f	Ljava/lang/String;	c	structureName
	f	Ljava/lang/String;	d	level
	f	Z	e	success
	m	(Ljava/time/Duration;Ldlz;Ljava/lang/String;Ljava/lang/String;Z)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbuw;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Duration;	a	duration
	m	()Ldlz;	b	chunkPos
	m	()Ljava/lang/String;	c	structureName
	m	()Ljava/lang/String;	d	level
	m	()Z	e	success
c	bux	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/lang/String;	b	threadName
	f	J	c	totalBytes
	f	Ljava/lang/String;	d	UNKNOWN_THREAD
	m	(Ljava/time/Instant;Ljava/lang/String;J)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbux;	a	from
	m	(Ljava/util/List;)Lbux$a;	a	summary
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Instant;	a	timestamp
	m	()Ljava/lang/String;	b	threadName
	m	()J	c	totalBytes
	m	(Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)V	a	lambda$summary$1
	m	(Lbux;)Ljava/lang/String;	a	lambda$summary$0
c	bux$a	net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary
	f	Ljava/util/Map;	a	allocationsPerSecondByThread
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	allocationsPerSecondByThread
c	buy	net/minecraft/util/profiling/jfr/stats/TickTimeStat
	f	Ljava/time/Instant;	a	timestamp
	f	Ljava/time/Duration;	b	currentAverage
	m	(Ljava/time/Instant;Ljava/time/Duration;)V	<init>	<init>
	m	(Ljdk/jfr/consumer/RecordedEvent;)Lbuy;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/time/Instant;	a	timestamp
	m	()Ljava/time/Duration;	b	currentAverage
c	buz	net/minecraft/util/profiling/jfr/stats/TimedStat
	m	()Ljava/time/Duration;	a	duration
c	bva	net/minecraft/util/profiling/jfr/stats/TimedStatSummary
	f	Lbuz;	a	fastest
	f	Lbuz;	b	slowest
	f	Lbuz;	c	secondSlowest
	f	I	d	count
	f	Ljava/util/Map;	e	percentilesNanos
	f	Ljava/time/Duration;	f	totalDuration
	m	(Lbuz;Lbuz;Lbuz;ILjava/util/Map;Ljava/time/Duration;)V	<init>	<init>
	m	(Ljava/util/List;)Lbva;	a	summary
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbuz;	a	fastest
	m	()Lbuz;	b	slowest
	m	()Lbuz;	c	secondSlowest
	m	()I	d	count
	m	()Ljava/util/Map;	e	percentilesNanos
	m	()Ljava/time/Duration;	f	totalDuration
	m	(Lbuz;)J	a	lambda$summary$0
c	bvb	net/minecraft/util/profiling/jfr/stats/package-info
c	bvc	net/minecraft/util/profiling/metrics/MetricCategory
	f	Lbvc;	a	PATH_FINDING
	f	Lbvc;	b	EVENT_LOOPS
	f	Lbvc;	c	CONSECUTIVE_EXECUTORS
	f	Lbvc;	d	TICK_LOOP
	f	Lbvc;	e	JVM
	f	Lbvc;	f	CHUNK_RENDERING
	f	Lbvc;	g	CHUNK_RENDERING_DISPATCHING
	f	Lbvc;	h	CPU
	f	Lbvc;	i	GPU
	f	Ljava/lang/String;	j	description
	f	[Lbvc;	k	$VALUES
	m	()[Lbvc;	values	values
	m	(Ljava/lang/String;)Lbvc;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getDescription
	m	()[Lbvc;	b	$values
	m	()V	<clinit>	<clinit>
c	bvd	net/minecraft/util/profiling/metrics/MetricSampler
	f	Ljava/lang/String;	b	name
	f	Lbvc;	c	category
	f	Ljava/util/function/DoubleSupplier;	d	sampler
	f	Lio/netty/buffer/ByteBuf;	e	ticks
	f	Lio/netty/buffer/ByteBuf;	f	values
	f	Z	g	isRunning
	f	Ljava/lang/Runnable;	h	beforeTick
	f	Lbvd$c;	a	thresholdTest
	f	D	i	currentValue
	m	(Ljava/lang/String;Lbvc;Ljava/util/function/DoubleSupplier;Ljava/lang/Runnable;Lbvd$c;)V	<init>	<init>
	m	(Ljava/lang/String;Lbvc;Ljava/util/function/DoubleSupplier;)Lbvd;	a	create
	m	(Ljava/lang/String;Lbvc;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lbvd;	a	create
	m	(Ljava/lang/String;Lbvc;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lbvd$a;	a	builder
	m	()V	a	onStartTick
	m	(I)V	a	onEndTick
	m	()V	b	onFinished
	m	()V	h	verifyRunning
	m	()Ljava/util/function/DoubleSupplier;	c	getSampler
	m	()Ljava/lang/String;	d	getName
	m	()Lbvc;	e	getCategory
	m	()Lbvd$b;	f	result
	m	()Z	g	triggersThreshold
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
c	bvd$a	net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder
	f	Ljava/lang/String;	a	name
	f	Lbvc;	b	category
	f	Ljava/util/function/DoubleSupplier;	c	sampler
	f	Ljava/lang/Object;	d	context
	f	Ljava/lang/Runnable;	e	beforeTick
	f	Lbvd$c;	f	thresholdTest
	m	(Ljava/lang/String;Lbvc;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)Lbvd$a;	a	withBeforeTick
	m	(Lbvd$c;)Lbvd$a;	a	withThresholdAlert
	m	()Lbvd;	a	build
	m	(Ljava/util/function/Consumer;)V	b	lambda$withBeforeTick$1
	m	(Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)D	a	lambda$new$0
c	bvd$b	net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult
	f	Lit/unimi/dsi/fastutil/ints/Int2DoubleMap;	a	recording
	f	I	b	firstTick
	f	I	c	lastTick
	m	(IILit/unimi/dsi/fastutil/ints/Int2DoubleMap;)V	<init>	<init>
	m	(I)D	a	valueAtTick
	m	()I	a	getFirstTick
	m	()I	b	getLastTick
c	bvd$c	net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest
	m	(D)Z	test	test
c	bvd$d	net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage
	f	F	a	percentageIncreaseThreshold
	f	D	b	previousValue
	m	(F)V	<init>	<init>
	m	(D)Z	test	test
c	bve	net/minecraft/util/profiling/metrics/MetricsRegistry
	f	Lbve;	a	INSTANCE
	f	Ljava/util/WeakHashMap;	b	measuredInstances
	m	()V	<init>	<init>
	m	(Lbvg;)V	a	add
	m	()Ljava/util/List;	a	getRegisteredSamplers
	m	(Ljava/util/Map;)Ljava/util/List;	a	aggregateDuplicates
	m	(Ljava/util/Map$Entry;)Lbvd;	a	lambda$aggregateDuplicates$1
	m	(Lbvg;)Ljava/util/stream/Stream;	b	lambda$getRegisteredSamplers$0
	m	()V	<clinit>	<clinit>
c	bve$a	net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler
	f	Ljava/util/List;	b	delegates
	m	(Ljava/lang/String;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Lbvd$c;	a	thresholdTest
	m	(Ljava/util/List;)V	b	beforeTick
	m	(Ljava/util/List;)D	c	averageValueFromDelegates
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Ljava/util/List;D)Z	a	lambda$thresholdTest$3
	m	(DLbvd;)Z	a	lambda$thresholdTest$2
	m	(Ljava/util/List;)V	d	lambda$new$1
	m	(Ljava/util/List;)D	e	lambda$new$0
c	bvf	net/minecraft/util/profiling/metrics/MetricsSamplerProvider
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
c	bvg	net/minecraft/util/profiling/metrics/ProfilerMeasured
	m	()Ljava/util/List;	bw	profiledMetrics
c	bvh	net/minecraft/util/profiling/metrics/package-info
c	bvi	net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder
	f	I	a	PROFILING_MAX_DURATION_SECONDS
	f	Ljava/util/function/Consumer;	b	globalOnReportFinished
	f	Ljava/util/Map;	c	deviationsBySampler
	f	Lbtm;	d	taskProfiler
	f	Ljava/util/concurrent/Executor;	e	ioExecutor
	f	Lbvo;	f	metricsPersister
	f	Ljava/util/function/Consumer;	g	onProfilingEnd
	f	Ljava/util/function/Consumer;	h	onReportFinished
	f	Lbvf;	i	metricsSamplerProvider
	f	Ljava/util/function/LongSupplier;	j	wallTimeSource
	f	J	k	deadlineNano
	f	I	l	currentTick
	f	Lbtq;	m	singleTickProfiler
	f	Z	n	killSwitch
	f	Ljava/util/Set;	o	thisTickSamplers
	m	(Lbvf;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbvo;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Lbvf;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lbvo;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lbvi;	a	createStarted
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()V	d	endTick
	m	()Z	e	isRecording
	m	()Lbtt;	f	getProfiler
	m	()V	g	verifyStarted
	m	(Lbtr;)V	a	scheduleSaveResults
	m	(Ljava/util/Collection;)V	a	cleanup
	m	(Ljava/util/function/Consumer;)V	a	registerGlobalCompletionCallback
	m	(Ljava/util/HashSet;Lbtr;)V	a	lambda$scheduleSaveResults$8
	m	()Z	h	lambda$endTick$7
	m	()I	i	lambda$endTick$6
	m	(Lbvd;)Ljava/util/List;	a	lambda$endTick$5
	m	()Lbtq;	j	lambda$startTick$4
	m	()Z	k	lambda$new$3
	m	()I	l	lambda$new$2
	m	()Z	m	lambda$new$1
	m	()I	n	lambda$new$0
	m	()V	<clinit>	<clinit>
c	bvj	net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder
	f	Lbvk;	a	INSTANCE
	m	()V	<init>	<init>
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()Z	e	isRecording
	m	()Lbtt;	f	getProfiler
	m	()V	d	endTick
	m	()V	<clinit>	<clinit>
c	bvk	net/minecraft/util/profiling/metrics/profiling/MetricsRecorder
	m	()V	a	end
	m	()V	b	cancel
	m	()V	c	startTick
	m	()Z	e	isRecording
	m	()Lbtt;	f	getProfiler
	m	()V	d	endTick
c	bvl	net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter
	f	Ljava/util/Set;	a	previouslyFoundSamplerNames
	m	()V	<init>	<init>
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	newSamplersFoundInProfiler
	m	(Ljava/util/function/Supplier;Ljava/lang/String;Lbvc;)Lbvd;	a	samplerForProfilingPath
	m	(Ljava/util/function/Supplier;Ljava/lang/String;)D	a	lambda$samplerForProfilingPath$2
	m	(Ljava/util/function/Supplier;Lorg/apache/commons/lang3/tuple/Pair;)Lbvd;	a	lambda$newSamplersFoundInProfiler$1
	m	(Lorg/apache/commons/lang3/tuple/Pair;)Z	a	lambda$newSamplersFoundInProfiler$0
c	bvm	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	samplers
	f	Lbvl;	c	samplerFactory
	m	(Ljava/util/function/LongSupplier;Z)V	<init>	<init>
	m	()Ljava/util/Set;	a	runtimeIndependentSamplers
	m	(Ljava/util/function/Supplier;)Ljava/util/Set;	a	samplers
	m	(Ljava/util/function/LongSupplier;)Lbvd;	a	tickTimeSampler
	m	(Lcom/google/common/base/Stopwatch;)D	a	lambda$tickTimeSampler$3
	m	()D	b	lambda$runtimeIndependentSamplers$2
	m	(Lbvm$a;I)Lbvd;	a	lambda$runtimeIndependentSamplers$1
	m	(Lbvm$a;I)D	b	lambda$runtimeIndependentSamplers$0
	m	()V	<clinit>	<clinit>
c	bvm$1	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$1
	f	Ljava/util/function/LongSupplier;	a	val$timeSource
	m	(Ljava/util/function/LongSupplier;)V	<init>	<init>
	m	()J	read	read
c	bvm$a	net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats
	f	Loshi/SystemInfo;	b	systemInfo
	f	Loshi/hardware/CentralProcessor;	c	processor
	f	I	a	nrOfCpus
	f	[[J	d	previousCpuLoadTick
	f	[D	e	currentLoad
	f	J	f	lastPollMs
	m	()V	<init>	<init>
	m	(I)D	a	loadForCpu
c	bvn	net/minecraft/util/profiling/metrics/profiling/package-info
c	bvo	net/minecraft/util/profiling/metrics/storage/MetricsPersister
	f	Ljava/nio/file/Path;	a	PROFILING_RESULTS_DIR
	f	Ljava/lang/String;	b	METRICS_DIR_NAME
	f	Ljava/lang/String;	c	DEVIATIONS_DIR_NAME
	f	Ljava/lang/String;	d	PROFILING_RESULT_FILENAME
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ljava/lang/String;	f	rootFolderName
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/util/Set;Ljava/util/Map;Lbtr;)Ljava/nio/file/Path;	a	saveReports
	m	(Ljava/util/Set;Ljava/nio/file/Path;)V	a	saveMetrics
	m	(Lbvc;Ljava/util/List;Ljava/nio/file/Path;)V	a	saveCategory
	m	(Ljava/util/Map;Ljava/nio/file/Path;)V	a	saveDeviations
	m	(Lbtr;Ljava/nio/file/Path;)V	a	saveProfilingTaskExecutionResult
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbvd;Ljava/util/List;)V	a	lambda$saveDeviations$4
	m	(Ljava/time/format/DateTimeFormatter;Ljava/nio/file/Path;Lbvd;Lbvp;)V	a	lambda$saveDeviations$3
	m	(I)[Ljava/lang/String;	a	lambda$saveCategory$2
	m	(ILbvd$b;)Ljava/lang/String;	a	lambda$saveCategory$1
	m	(Ljava/nio/file/Path;Lbvc;Ljava/util/List;)V	a	lambda$saveMetrics$0
	m	()V	<clinit>	<clinit>
c	bvp	net/minecraft/util/profiling/metrics/storage/RecordedDeviation
	f	Ljava/time/Instant;	a	timestamp
	f	I	b	tick
	f	Lbtr;	c	profilerResultAtTick
	m	(Ljava/time/Instant;ILbtr;)V	<init>	<init>
c	bvq	net/minecraft/util/profiling/metrics/storage/package-info
c	bvr	net/minecraft/util/profiling/package-info
c	bvs	net/minecraft/util/random/Weighted
	f	Ljava/lang/Object;	a	value
	f	I	b	weight
	f	Lorg/slf4j/Logger;	c	LOGGER
	m	(Ljava/lang/Object;I)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/function/Function;)Lbvs;	a	map
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	value
	m	()I	b	weight
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	bvt	net/minecraft/util/random/WeightedList
	f	I	a	FLAT_THRESHOLD
	f	I	b	totalWeight
	f	Ljava/util/List;	c	items
	f	Lbvt$d;	d	selector
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lbvt;	a	of
	m	(Ljava/lang/Object;)Lbvt;	a	of
	m	([Lbvs;)Lbvt;	a	of
	m	(Ljava/util/List;)Lbvt;	a	of
	m	()Lbvt$a;	b	builder
	m	()Z	c	isEmpty
	m	(Ljava/util/function/Function;)Lbvt;	a	map
	m	(Lbck;)Ljava/util/Optional;	a	getRandom
	m	(Lbck;)Ljava/lang/Object;	b	getRandomOrThrow
	m	()Ljava/util/List;	d	unwrap
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	nonEmptyCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	b	nonEmptyCodec
	m	(Ljava/lang/Object;)Z	b	contains
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Ljava/util/function/Function;Lbvs;)Lbvs;	a	lambda$map$0
c	bvt$a	net/minecraft/util/random/WeightedList$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	result
	m	()V	<init>	<init>
	m	(Ljava/lang/Object;)Lbvt$a;	a	add
	m	(Ljava/lang/Object;I)Lbvt$a;	a	add
	m	()Lbvt;	a	build
c	bvt$b	net/minecraft/util/random/WeightedList$Compact
	f	[Lbvs;	a	entries
	m	(Ljava/util/List;)V	<init>	<init>
	m	(I)Ljava/lang/Object;	a	get
	m	(I)[Lbvs;	b	lambda$new$0
c	bvt$c	net/minecraft/util/random/WeightedList$Flat
	f	[Ljava/lang/Object;	a	entries
	m	(Ljava/util/List;I)V	<init>	<init>
	m	(I)Ljava/lang/Object;	a	get
c	bvt$d	net/minecraft/util/random/WeightedList$Selector
	m	(I)Ljava/lang/Object;	a	get
c	bvu	net/minecraft/util/random/WeightedRandom
	m	()V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/function/ToIntFunction;)I	a	getTotalWeight
	m	(Lbck;Ljava/util/List;ILjava/util/function/ToIntFunction;)Ljava/util/Optional;	a	getRandomItem
	m	(Ljava/util/List;ILjava/util/function/ToIntFunction;)Ljava/util/Optional;	a	getWeightedItem
	m	(Lbck;Ljava/util/List;Ljava/util/function/ToIntFunction;)Ljava/util/Optional;	a	getRandomItem
c	bvv	net/minecraft/util/random/package-info
c	bvw	net/minecraft/util/thread/AbstractConsecutiveExecutor
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicReference;	b	status
	f	Lbwd;	c	queue
	f	Ljava/util/concurrent/Executor;	d	executor
	f	Ljava/lang/String;	e	name
	m	(Lbwd;Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
	m	()Z	e	canBeScheduled
	m	()V	close	close
	m	()Z	f	pollTask
	m	()V	run	run
	m	()V	a	runAll
	m	(Ljava/lang/Runnable;)V	a_	schedule
	m	()V	g	registerForExecution
	m	()I	b	size
	m	()Z	c	hasWork
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	z_	name
	m	()Ljava/util/List;	bw	profiledMetrics
	m	()Z	h	setRunning
	m	()V	i	setSleeping
	m	()Z	j	isRunning
	m	()Z	k	isClosed
	m	()V	<clinit>	<clinit>
c	bvw$a	net/minecraft/util/thread/AbstractConsecutiveExecutor$Status
	f	Lbvw$a;	a	SLEEPING
	f	Lbvw$a;	b	RUNNING
	f	Lbvw$a;	c	CLOSED
	f	[Lbvw$a;	d	$VALUES
	m	()[Lbvw$a;	values	values
	m	(Ljava/lang/String;)Lbvw$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbvw$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bvx	net/minecraft/util/thread/BlockableEventLoop
	f	J	k	BLOCK_TIME_NANOS
	f	Ljava/lang/String;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/util/Queue;	d	pendingRunnables
	f	I	e	blockingCount
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Z	e	shouldRun
	m	()Z	bx	isSameThread
	m	()Ljava/lang/Thread;	ay	getRunningThread
	m	()Z	ax	scheduleExecutables
	m	()I	by	getPendingTasksCount
	m	()Ljava/lang/String;	z_	name
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submit
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	b	submitAsync
	m	(Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture;	g	submit
	m	(Ljava/lang/Runnable;)V	h	executeBlocking
	m	(Ljava/lang/Runnable;)V	a_	schedule
	m	(Ljava/lang/Runnable;)V	execute	execute
	m	(Ljava/lang/Runnable;)V	c	executeIfPossible
	m	()V	bz	dropAllTasks
	m	()V	bA	runAllTasks
	m	()Z	B	pollTask
	m	(Ljava/util/function/BooleanSupplier;)V	b	managedBlock
	m	()V	A	waitForTasks
	m	(Ljava/lang/Runnable;)V	d	doRunTask
	m	()Ljava/util/List;	bw	profiledMetrics
	m	(Ljava/lang/Throwable;)Z	a	isNonRecoverable
	m	(Ljava/lang/Runnable;)Ljava/lang/Void;	i	lambda$submitAsync$0
	m	()V	<clinit>	<clinit>
c	bvy	net/minecraft/util/thread/ConsecutiveExecutor
	m	(Ljava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
c	bvz	net/minecraft/util/thread/NamedThreadFactory
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/ThreadGroup;	b	group
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	threadNumber
	f	Ljava/lang/String;	d	namePrefix
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Ljava/lang/Thread;	newThread	newThread
	m	(Ljava/lang/Runnable;Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$newThread$0
	m	()V	<clinit>	<clinit>
c	bwa	net/minecraft/util/thread/ParallelMapTransform
	f	I	a	DEFAULT_TASKS_PER_THREAD
	m	()V	<init>	<init>
	m	(Ljava/util/Map;Ljava/util/function/BiFunction;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	schedule
	m	(Ljava/util/Map;Ljava/util/function/BiFunction;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	schedule
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;	a	lambda$schedule$0
c	bwa$a	net/minecraft/util/thread/ParallelMapTransform$BatchedTaskSplitter
	f	Ljava/util/Map;	c	result
	f	I	d	batchSize
	f	I	e	firstUndersizedBatchIndex
	f	Z	a	$assertionsDisabled
	m	(Ljava/util/function/BiFunction;II)V	<init>	<init>
	m	(Lbwa$b;IILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleBatch
	m	(I)I	a	batchSize
	m	(Ljava/util/Map;IILbwa$b;)Ljava/lang/Runnable;	a	createTask
	m	(Ljava/util/concurrent/CompletableFuture;Lbwa$b;)Ljava/util/concurrent/CompletableFuture;	a	scheduleFinalOperation
	m	(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/Map;	a	lambda$scheduleFinalOperation$1
	m	(IILbwa$b;Ljava/util/Map;)V	a	lambda$createTask$0
	m	()V	<clinit>	<clinit>
c	bwa$b	net/minecraft/util/thread/ParallelMapTransform$Container
	f	Ljava/util/function/BiFunction;	a	operation
	f	[Ljava/lang/Object;	b	keys
	f	[Ljava/lang/Object;	c	values
	m	(Ljava/util/function/BiFunction;I)V	<init>	<init>
	m	(Ljava/util/function/BiFunction;[Ljava/lang/Object;[Ljava/lang/Object;)V	<init>	<init>
	m	(ILjava/lang/Object;Ljava/lang/Object;)V	a	put
	m	(I)Ljava/lang/Object;	b	key
	m	(I)Ljava/lang/Object;	c	output
	m	(I)Ljava/lang/Object;	d	input
	m	(I)V	a	applyOperation
	m	(ILjava/util/Map;)V	a	copyOut
	m	()I	a	size
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/BiFunction;	b	operation
	m	()[Ljava/lang/Object;	c	keys
	m	()[Ljava/lang/Object;	d	values
c	bwa$c	net/minecraft/util/thread/ParallelMapTransform$SingleTaskSplitter
	f	Z	a	$assertionsDisabled
	m	(Ljava/util/function/BiFunction;I)V	<init>	<init>
	m	(I)I	a	batchSize
	m	(Lbwa$b;IILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleBatch
	m	(Ljava/util/concurrent/CompletableFuture;Lbwa$b;)Ljava/util/concurrent/CompletableFuture;	a	scheduleFinalOperation
	m	(Lbwa$b;Ljava/lang/Object;)Ljava/util/Map;	a	lambda$scheduleFinalOperation$1
	m	(Lbwa$b;I)V	a	lambda$scheduleBatch$0
	m	()V	<clinit>	<clinit>
c	bwa$d	net/minecraft/util/thread/ParallelMapTransform$SplitterBase
	f	I	a	lastScheduledIndex
	f	I	c	currentIndex
	f	[Ljava/util/concurrent/CompletableFuture;	d	tasks
	f	I	e	batchIndex
	f	Lbwa$b;	f	container
	f	Z	b	$assertionsDisabled
	m	(Ljava/util/function/BiFunction;II)V	<init>	<init>
	m	()I	a	pendingBatchSize
	m	(Ljava/util/Map;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleTasks
	m	(I)I	a	batchSize
	m	(Lbwa$b;IILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture;	a	scheduleBatch
	m	(Ljava/util/concurrent/CompletableFuture;Lbwa$b;)Ljava/util/concurrent/CompletableFuture;	a	scheduleFinalOperation
	m	(Ljava/util/concurrent/Executor;Ljava/lang/Object;Ljava/lang/Object;)V	a	lambda$scheduleTasks$0
	m	()V	<clinit>	<clinit>
c	bwb	net/minecraft/util/thread/PriorityConsecutiveExecutor
	m	(ILjava/util/concurrent/Executor;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Lbwd$c;	b	wrapRunnable
	m	(ILjava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	scheduleWithResult
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$scheduleWithResult$0
c	bwc	net/minecraft/util/thread/ReentrantBlockableEventLoop
	f	I	b	reentrantCount
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Z	ax	scheduleExecutables
	m	()Z	bB	runningTask
	m	(Ljava/lang/Runnable;)V	d	doRunTask
c	bwd	net/minecraft/util/thread/StrictQueue
	m	()Ljava/lang/Runnable;	a	pop
	m	(Ljava/lang/Runnable;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
c	bwd$a	net/minecraft/util/thread/StrictQueue$FixedPriorityQueue
	f	[Ljava/util/Queue;	a	queues
	f	Ljava/util/concurrent/atomic/AtomicInteger;	b	size
	m	(I)V	<init>	<init>
	m	()Ljava/lang/Runnable;	a	pop
	m	(Lbwd$c;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
	m	(Ljava/lang/Runnable;)Z	a	push
c	bwd$b	net/minecraft/util/thread/StrictQueue$QueueStrictQueue
	f	Ljava/util/Queue;	a	queue
	m	(Ljava/util/Queue;)V	<init>	<init>
	m	()Ljava/lang/Runnable;	a	pop
	m	(Ljava/lang/Runnable;)Z	a	push
	m	()Z	b	isEmpty
	m	()I	c	size
c	bwd$c	net/minecraft/util/thread/StrictQueue$RunnableWithPriority
	f	I	a	priority
	f	Ljava/lang/Runnable;	b	task
	m	(ILjava/lang/Runnable;)V	<init>	<init>
	m	()V	run	run
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	priority
	m	()Ljava/lang/Runnable;	b	task
c	bwe	net/minecraft/util/thread/TaskScheduler
	m	()Ljava/lang/String;	z_	name
	m	(Ljava/lang/Runnable;)V	a_	schedule
	m	()V	close	close
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	(Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture;	a	scheduleWithResult
	m	(Ljava/lang/String;Ljava/util/concurrent/Executor;)Lbwe;	a	wrapExecutor
	m	(Ljava/util/function/Consumer;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$scheduleWithResult$0
c	bwe$1	net/minecraft/util/thread/TaskScheduler$1
	f	Ljava/lang/String;	a	val$name
	f	Ljava/util/concurrent/Executor;	b	val$executor
	m	(Ljava/lang/String;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	()Ljava/lang/String;	z_	name
	m	(Ljava/lang/Runnable;)V	a_	schedule
	m	(Ljava/lang/Runnable;)Ljava/lang/Runnable;	f	wrapRunnable
	m	()Ljava/lang/String;	toString	toString
c	bwf	net/minecraft/util/thread/package-info
c	bwg	net/minecraft/util/valueproviders/BiasedToBottomInt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
	m	(II)V	<init>	<init>
	m	(II)Lbwg;	a	of
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbwg;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lbwg;)Ljava/lang/String;	b	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lbwg;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lbwg;)Ljava/lang/Integer;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwh	net/minecraft/util/valueproviders/ClampedInt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	source
	f	I	f	minInclusive
	f	I	g	maxInclusive
	m	(Lbwo;II)Lbwh;	a	of
	m	(Lbwo;II)V	<init>	<init>
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	(Lbwh;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
	m	(Lbwh;)Ljava/lang/String;	b	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lbwh;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Lbwh;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Lbwh;)Lbwo;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwi	net/minecraft/util/valueproviders/ClampedNormalFloat
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	mean
	f	F	d	deviation
	f	F	e	min
	f	F	f	max
	m	(FFFF)Lbwi;	a	of
	m	(FFFF)V	<init>	<init>
	m	(Lbck;)F	a	sample
	m	(Lbck;FFFF)F	a	sample
	m	()F	a	getMinValue
	m	()F	b	getMaxValue
	m	()Lbwn;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbwi;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
	m	(Lbwi;)Ljava/lang/String;	b	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lbwi;)Ljava/lang/Float;	c	lambda$static$3
	m	(Lbwi;)Ljava/lang/Float;	d	lambda$static$2
	m	(Lbwi;)Ljava/lang/Float;	e	lambda$static$1
	m	(Lbwi;)Ljava/lang/Float;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwj	net/minecraft/util/valueproviders/ClampedNormalInt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	mean
	f	F	f	deviation
	f	I	g	minInclusive
	f	I	h	maxInclusive
	m	(FFII)Lbwj;	a	of
	m	(FFII)V	<init>	<init>
	m	(Lbck;)I	a	sample
	m	(Lbck;FFFF)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbwj;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
	m	(Lbwj;)Ljava/lang/String;	b	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lbwj;)Ljava/lang/Integer;	c	lambda$static$3
	m	(Lbwj;)Ljava/lang/Integer;	d	lambda$static$2
	m	(Lbwj;)Ljava/lang/Float;	e	lambda$static$1
	m	(Lbwj;)Ljava/lang/Float;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwk	net/minecraft/util/valueproviders/ConstantFloat
	f	Lbwk;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	F	d	value
	m	(F)Lbwk;	a	of
	m	(F)V	<init>	<init>
	m	()F	d	getValue
	m	(Lbck;)F	a	sample
	m	()F	a	getMinValue
	m	()F	b	getMaxValue
	m	()Lbwn;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	bwl	net/minecraft/util/valueproviders/ConstantInt
	f	Lbwl;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	f	value
	m	(I)Lbwl;	a	of
	m	(I)V	<init>	<init>
	m	()I	d	getValue
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	bwm	net/minecraft/util/valueproviders/FloatProvider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	()V	<init>	<init>
	m	(FF)Lcom/mojang/serialization/Codec;	a	codec
	m	()F	a	getMinValue
	m	()F	b	getMaxValue
	m	()Lbwn;	c	getType
	m	(FFLbwm;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$5
	m	(FLbwm;)Ljava/lang/String;	a	lambda$codec$4
	m	(FLbwm;)Ljava/lang/String;	b	lambda$codec$3
	m	(Lbwm;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Lbwm;	a	lambda$static$1
	m	(Lbwm;)Lbwm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwn	net/minecraft/util/valueproviders/FloatProviderType
	f	Lbwn;	a	CONSTANT
	f	Lbwn;	b	UNIFORM
	f	Lbwn;	c	CLAMPED_NORMAL
	f	Lbwn;	d	TRAPEZOID
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbwn;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	bwo	net/minecraft/util/valueproviders/IntProvider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	NON_NEGATIVE_CODEC
	f	Lcom/mojang/serialization/Codec;	e	POSITIVE_CODEC
	m	()V	<init>	<init>
	m	(II)Lcom/mojang/serialization/Codec;	b	codec
	m	(IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	validateCodec
	m	(IILbwo;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	(ILbwo;)Ljava/lang/String;	a	lambda$validate$5
	m	(ILbwo;)Ljava/lang/String;	b	lambda$validate$4
	m	(IILbwo;)Lcom/mojang/serialization/DataResult;	b	lambda$validateCodec$3
	m	(Lbwo;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Lbwo;	a	lambda$static$1
	m	(Lbwo;)Lbwo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwp	net/minecraft/util/valueproviders/IntProviderType
	f	Lbwp;	a	CONSTANT
	f	Lbwp;	b	UNIFORM
	f	Lbwp;	c	BIASED_TO_BOTTOM
	f	Lbwp;	d	CLAMPED
	f	Lbwp;	e	WEIGHTED_LIST
	f	Lbwp;	f	CLAMPED_NORMAL
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lbwp;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	bwq	net/minecraft/util/valueproviders/MultipliedFloats
	f	[Lbwr;	a	values
	m	([Lbwr;)V	<init>	<init>
	m	(Lbck;)F	a	sample
	m	()Ljava/lang/String;	toString	toString
c	bwr	net/minecraft/util/valueproviders/SampledFloat
	m	(Lbck;)F	a	sample
c	bws	net/minecraft/util/valueproviders/TrapezoidFloat
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	min
	f	F	d	max
	f	F	e	plateau
	m	(FFF)Lbws;	a	of
	m	(FFF)V	<init>	<init>
	m	(Lbck;)F	a	sample
	m	()F	a	getMinValue
	m	()F	b	getMaxValue
	m	()Lbwn;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbws;)Lcom/mojang/serialization/DataResult;	a	lambda$static$6
	m	(Lbws;)Ljava/lang/String;	b	lambda$static$5
	m	(Lbws;)Ljava/lang/String;	c	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lbws;)Ljava/lang/Float;	d	lambda$static$2
	m	(Lbws;)Ljava/lang/Float;	e	lambda$static$1
	m	(Lbws;)Ljava/lang/Float;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwt	net/minecraft/util/valueproviders/UniformFloat
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minInclusive
	f	F	d	maxExclusive
	m	(FF)V	<init>	<init>
	m	(FF)Lbwt;	b	of
	m	(Lbck;)F	a	sample
	m	()F	a	getMinValue
	m	()F	b	getMaxValue
	m	()Lbwn;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbwt;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lbwt;)Ljava/lang/String;	b	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lbwt;)Ljava/lang/Float;	c	lambda$static$1
	m	(Lbwt;)Ljava/lang/Float;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwu	net/minecraft/util/valueproviders/UniformInt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minInclusive
	f	I	f	maxInclusive
	m	(II)V	<init>	<init>
	m	(II)Lbwu;	a	of
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lbwu;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lbwu;)Ljava/lang/String;	b	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lbwu;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lbwu;)Ljava/lang/Integer;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bwv	net/minecraft/util/valueproviders/WeightedListInt
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbvt;	b	distribution
	f	I	f	minValue
	f	I	g	maxValue
	m	(Lbvt;)V	<init>	<init>
	m	(Lbck;)I	a	sample
	m	()I	a	getMinValue
	m	()I	b	getMaxValue
	m	()Lbwp;	c	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lbwv;)Lbvt;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bww	net/minecraft/util/valueproviders/package-info
c	bwx	net/minecraft/util/worldupdate/WorldUpgrader
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/ThreadFactory;	b	THREAD_FACTORY
	f	Ljava/lang/String;	c	NEW_DIRECTORY_PREFIX
	f	Lxo;	d	STATUS_UPGRADING_POI
	f	Lxo;	e	STATUS_FINISHED_POI
	f	Lxo;	f	STATUS_UPGRADING_ENTITIES
	f	Lxo;	g	STATUS_FINISHED_ENTITIES
	f	Lxo;	h	STATUS_UPGRADING_CHUNKS
	f	Lxo;	i	STATUS_FINISHED_CHUNKS
	f	Ljy;	j	dimensions
	f	Ljava/util/Set;	k	levels
	f	Z	l	eraseCache
	f	Z	m	recreateRegionFiles
	f	Lfcs$c;	n	levelStorage
	f	Ljava/lang/Thread;	o	thread
	f	Lcom/mojang/datafixers/DataFixer;	p	dataFixer
	f	Z	q	running
	f	Z	r	finished
	f	F	s	progress
	f	I	t	totalChunks
	f	I	u	totalFiles
	f	I	v	converted
	f	I	w	skipped
	f	Lit/unimi/dsi/fastutil/objects/Reference2FloatMap;	x	progressMap
	f	Lxo;	y	status
	f	Ljava/util/regex/Pattern;	z	REGEX
	f	Lfcm;	A	overworldDataStorage
	m	(Lfcs$c;Lcom/mojang/datafixers/DataFixer;Lfdd;Ljz;ZZ)V	<init>	<init>
	m	()V	a	cancel
	m	()V	i	work
	m	()Z	b	isFinished
	m	()Ljava/util/Set;	c	levels
	m	(Lamd;)F	a	dimensionProgress
	m	()F	d	getProgress
	m	()I	e	getTotalChunks
	m	()I	f	getConverted
	m	()I	g	getSkipped
	m	()Lxo;	h	getStatus
	m	()V	close	close
	m	(Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	resolveRecreateDirectory
	m	(Ljava/lang/Thread;Ljava/lang/Throwable;)V	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	bwx$a	net/minecraft/util/worldupdate/WorldUpgrader$AbstractUpgrader
	f	Lxo;	d	upgradingStatus
	f	Lxo;	e	finishedStatus
	f	Ljava/lang/String;	f	type
	f	Ljava/lang/String;	g	folderName
	f	Ljava/util/concurrent/CompletableFuture;	a	previousWriteFuture
	f	Lbdr;	b	dataFixType
	f	Lbwx;	c	this$0
	m	(Lbwx;Lbdr;Ljava/lang/String;Ljava/lang/String;Lxo;Lxo;)V	<init>	<init>
	m	()V	a	upgrade
	m	()Ljava/util/List;	b	getDimensionsToUpgrade
	m	(Lehr;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
	m	(Lehr;Ljava/nio/file/Path;)Ljava/util/ListIterator;	b	getFilesToProcess
	m	(Lehr;Ljava/nio/file/Path;)Ljava/util/List;	c	getAllChunkPositions
	m	(Lamd;Ljava/lang/AutoCloseable;Ldlz;)Z	a	processOnePosition
	m	(Ljava/lang/AutoCloseable;Ldlz;Lamd;)Z	a	tryProcessOnePosition
	m	(Leho;)V	a	onFileFinished
	m	(Ljava/io/File;Ljava/lang/String;)Z	a	lambda$getAllChunkPositions$1
	m	(Lbwx$e;)I	a	lambda$getFilesToProcess$0
c	bwx$b	net/minecraft/util/worldupdate/WorldUpgrader$ChunkUpgrader
	f	Lbwx;	d	this$0
	m	(Lbwx;)V	<init>	<init>
	m	(Lehi;Ldlz;Lamd;)Z	a	tryProcessOnePosition
	m	(Lehr;Ljava/nio/file/Path;)Lehi;	b	createStorage
	m	(Ljava/lang/AutoCloseable;Ldlz;Lamd;)Z	a	tryProcessOnePosition
	m	(Lehr;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
	m	(Lui;)Lui;	a	lambda$tryProcessOnePosition$1
	m	()Lfcm;	b	lambda$tryProcessOnePosition$0
c	bwx$c	net/minecraft/util/worldupdate/WorldUpgrader$DimensionToUpgrade
	f	Lamd;	a	dimensionKey
	f	Ljava/lang/Object;	b	storage
	f	Ljava/util/ListIterator;	c	files
	m	(Lamd;Ljava/lang/Object;Ljava/util/ListIterator;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	dimensionKey
	m	()Ljava/lang/Object;	b	storage
	m	()Ljava/util/ListIterator;	c	files
c	bwx$d	net/minecraft/util/worldupdate/WorldUpgrader$EntityUpgrader
	m	(Lbwx;)V	<init>	<init>
	m	(Lehu;Lui;)Lui;	a	upgradeTag
c	bwx$e	net/minecraft/util/worldupdate/WorldUpgrader$FileToUpgrade
	f	Leho;	a	file
	f	Ljava/util/List;	b	chunksToUpgrade
	m	(Leho;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leho;	a	file
	m	()Ljava/util/List;	b	chunksToUpgrade
c	bwx$f	net/minecraft/util/worldupdate/WorldUpgrader$PoiUpgrader
	m	(Lbwx;)V	<init>	<init>
	m	(Lehu;Lui;)Lui;	a	upgradeTag
c	bwx$g	net/minecraft/util/worldupdate/WorldUpgrader$SimpleRegionStorageUpgrader
	f	Lbwx;	d	this$0
	m	(Lbwx;Lbdr;Ljava/lang/String;Lxo;Lxo;)V	<init>	<init>
	m	(Lehr;Ljava/nio/file/Path;)Lehu;	b	createStorage
	m	(Lehu;Ldlz;Lamd;)Z	a	tryProcessOnePosition
	m	(Lehu;Lui;)Lui;	a	upgradeTag
	m	(Ljava/lang/AutoCloseable;Ldlz;Lamd;)Z	a	tryProcessOnePosition
	m	(Lehr;Ljava/nio/file/Path;)Ljava/lang/AutoCloseable;	a	createStorage
c	bwy	net/minecraft/util/worldupdate/package-info
c	bwz	net/minecraft/world/BossEvent
	f	Ljava/util/UUID;	h	id
	f	Lxo;	a	name
	f	F	b	progress
	f	Lbwz$a;	c	color
	f	Lbwz$b;	d	overlay
	f	Z	e	darkenScreen
	f	Z	f	playBossMusic
	f	Z	g	createWorldFog
	m	(Ljava/util/UUID;Lxo;Lbwz$a;Lbwz$b;)V	<init>	<init>
	m	()Ljava/util/UUID;	i	getId
	m	()Lxo;	j	getName
	m	(Lxo;)V	a	setName
	m	()F	k	getProgress
	m	(F)V	a	setProgress
	m	()Lbwz$a;	l	getColor
	m	(Lbwz$a;)V	a	setColor
	m	()Lbwz$b;	m	getOverlay
	m	(Lbwz$b;)V	a	setOverlay
	m	()Z	n	shouldDarkenScreen
	m	(Z)Lbwz;	a	setDarkenScreen
	m	()Z	o	shouldPlayBossMusic
	m	(Z)Lbwz;	b	setPlayBossMusic
	m	(Z)Lbwz;	c	setCreateWorldFog
	m	()Z	p	shouldCreateWorldFog
c	bwz$a	net/minecraft/world/BossEvent$BossBarColor
	f	Lbwz$a;	a	PINK
	f	Lbwz$a;	b	BLUE
	f	Lbwz$a;	c	RED
	f	Lbwz$a;	d	GREEN
	f	Lbwz$a;	e	YELLOW
	f	Lbwz$a;	f	PURPLE
	f	Lbwz$a;	g	WHITE
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/lang/String;	i	name
	f	Lo;	j	formatting
	f	[Lbwz$a;	k	$VALUES
	m	()[Lbwz$a;	values	values
	m	(Ljava/lang/String;)Lbwz$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lo;)V	<init>	<init>
	m	()Lo;	a	getFormatting
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbwz$a;	d	$values
	m	()V	<clinit>	<clinit>
c	bwz$b	net/minecraft/world/BossEvent$BossBarOverlay
	f	Lbwz$b;	a	PROGRESS
	f	Lbwz$b;	b	NOTCHED_6
	f	Lbwz$b;	c	NOTCHED_10
	f	Lbwz$b;	d	NOTCHED_12
	f	Lbwz$b;	e	NOTCHED_20
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	name
	f	[Lbwz$b;	h	$VALUES
	m	()[Lbwz$b;	values	values
	m	(Ljava/lang/String;)Lbwz$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbwz$b;	b	$values
	m	()V	<clinit>	<clinit>
c	bxa	net/minecraft/world/Clearable
	m	()V	a	clearContent
c	bxb	net/minecraft/world/CompoundContainer
	f	Lbxc;	b	container1
	f	Lbxc;	c	container2
	m	(Lbxc;Lbxc;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(Lbxc;)Z	a	contains
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	()I	an_	getMaxStackSize
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
	m	(ILdcv;)Z	b	canPlaceItem
	m	()V	a	clearContent
c	bxc	net/minecraft/world/Container
	f	F	y_	DEFAULT_DISTANCE_BUFFER
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	()I	an_	getMaxStackSize
	m	(Ldcv;)I	f_	getMaxStackSize
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
	m	(ILdcv;)Z	b	canPlaceItem
	m	(Lbxc;ILdcv;)Z	a	canTakeItem
	m	(Ldcr;)I	a_	countItem
	m	(Ljava/util/Set;)Z	a	hasAnyOf
	m	(Ljava/util/function/Predicate;)Z	a_	hasAnyMatching
	m	(Leaz;Lcut;)Z	a	stillValidBlockEntity
	m	(Leaz;Lcut;F)Z	a	stillValidBlockEntity
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Ljava/util/Set;Ldcv;)Z	a	lambda$hasAnyOf$0
c	bxc$a	net/minecraft/world/Container$ContainerIterator
	f	Lbxc;	a	container
	f	I	b	index
	f	I	c	size
	m	(Lbxc;)V	<init>	<init>
	m	()Z	hasNext	hasNext
	m	()Ldcv;	a	next
	m	()Ljava/lang/Object;	next	next
c	bxd	net/minecraft/world/ContainerHelper
	f	Ljava/lang/String;	a	TAG_ITEMS
	m	()V	<init>	<init>
	m	(Ljava/util/List;II)Ldcv;	a	removeItem
	m	(Ljava/util/List;I)Ldcv;	a	takeItem
	m	(Lfdc;Lju;)V	a	saveAllItems
	m	(Lfdc;Lju;Z)V	a	saveAllItems
	m	(Lfda;Lju;)V	a	loadAllItems
	m	(Lbxc;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
	m	(Ldcv;Ljava/util/function/Predicate;IZ)I	a	clearOrCountMatchingItems
c	bxe	net/minecraft/world/ContainerListener
	m	(Lbxc;)V	a	containerChanged
c	bxf	net/minecraft/world/Containers
	m	()V	<init>	<init>
	m	(Ldmu;Ljb;Lbxc;)V	a	dropContents
	m	(Ldmu;Lbzm;Lbxc;)V	a	dropContents
	m	(Ldmu;DDDLbxc;)V	a	dropContents
	m	(Ldmu;Ljb;Lju;)V	a	dropContents
	m	(Ldmu;DDDLdcv;)V	a	dropItemStack
	m	(Leeb;Ldmu;Ljb;)V	a	updateNeighboursAfterDestroy
	m	(Ldmu;Ljb;Ldcv;)V	a	lambda$dropContents$0
c	bxg	net/minecraft/world/Difficulty
	f	Lbxg;	a	PEACEFUL
	f	Lbxg;	b	EASY
	f	Lbxg;	c	NORMAL
	f	Lbxg;	d	HARD
	f	Lbda$a;	e	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	I	h	id
	f	Ljava/lang/String;	i	key
	f	[Lbxg;	j	$VALUES
	m	()[Lbxg;	values	values
	m	(Ljava/lang/String;)Lbxg;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	()Lxo;	b	getDisplayName
	m	()Lxo;	d	getInfo
	m	(I)Lbxg;	a	byId
	m	(Ljava/lang/String;)Lbxg;	a	byName
	m	()Ljava/lang/String;	e	getKey
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbxg;	f	$values
	m	()V	<clinit>	<clinit>
c	bxh	net/minecraft/world/DifficultyInstance
	f	F	a	DIFFICULTY_TIME_GLOBAL_OFFSET
	f	F	b	MAX_DIFFICULTY_TIME_GLOBAL
	f	F	c	MAX_DIFFICULTY_TIME_LOCAL
	f	Lbxg;	d	base
	f	F	e	effectiveDifficulty
	m	(Lbxg;JJF)V	<init>	<init>
	m	()Lbxg;	a	getDifficulty
	m	()F	b	getEffectiveDifficulty
	m	()Z	c	isHard
	m	(F)Z	a	isHarderThan
	m	()F	d	getSpecialMultiplier
	m	(Lbxg;JJF)F	a	calculateDifficulty
c	bxi	net/minecraft/world/InteractionHand
	f	Lbxi;	a	MAIN_HAND
	f	Lbxi;	b	OFF_HAND
	f	[Lbxi;	c	$VALUES
	m	()[Lbxi;	values	values
	m	(Ljava/lang/String;)Lbxi;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbxi;	a	$values
	m	()V	<clinit>	<clinit>
c	bxj	net/minecraft/world/InteractionResult
	f	Lbxj$d;	a	SUCCESS
	f	Lbxj$d;	b	SUCCESS_SERVER
	f	Lbxj$d;	c	CONSUME
	f	Lbxj$a;	d	FAIL
	f	Lbxj$c;	e	PASS
	f	Lbxj$f;	f	TRY_WITH_EMPTY_HAND
	m	()Z	a	consumesAction
	m	()V	<clinit>	<clinit>
c	bxj$a	net/minecraft/world/InteractionResult$Fail
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
c	bxj$b	net/minecraft/world/InteractionResult$ItemContext
	f	Z	c	wasItemInteraction
	f	Ldcv;	d	heldItemTransformedTo
	f	Lbxj$b;	a	NONE
	f	Lbxj$b;	b	DEFAULT
	m	(ZLdcv;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	wasItemInteraction
	m	()Ldcv;	b	heldItemTransformedTo
	m	()V	<clinit>	<clinit>
c	bxj$c	net/minecraft/world/InteractionResult$Pass
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
c	bxj$d	net/minecraft/world/InteractionResult$Success
	f	Lbxj$e;	g	swingSource
	f	Lbxj$b;	h	itemContext
	m	(Lbxj$e;Lbxj$b;)V	<init>	<init>
	m	()Z	a	consumesAction
	m	(Ldcv;)Lbxj$d;	a	heldItemTransformedTo
	m	()Lbxj$d;	b	withoutItem
	m	()Z	c	wasItemInteraction
	m	()Ldcv;	d	heldItemTransformedTo
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbxj$e;	e	swingSource
	m	()Lbxj$b;	f	itemContext
c	bxj$e	net/minecraft/world/InteractionResult$SwingSource
	f	Lbxj$e;	a	NONE
	f	Lbxj$e;	b	CLIENT
	f	Lbxj$e;	c	SERVER
	f	[Lbxj$e;	d	$VALUES
	m	()[Lbxj$e;	values	values
	m	(Ljava/lang/String;)Lbxj$e;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbxj$e;	a	$values
	m	()V	<clinit>	<clinit>
c	bxj$f	net/minecraft/world/InteractionResult$TryEmptyHandInteraction
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
c	bxk	net/minecraft/world/ItemStackWithSlot
	f	I	b	slot
	f	Ldcv;	c	stack
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ILdcv;)V	<init>	<init>
	m	(I)Z	a	isValidInContainer
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	slot
	m	()Ldcv;	b	stack
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bxl	net/minecraft/world/LockCode
	f	Lcn;	d	predicate
	f	Lbxl;	a	NO_LOCK
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	TAG_LOCK
	m	(Lcn;)V	<init>	<init>
	m	(Ldcv;)Z	a	unlocksWith
	m	(Lfdc;)V	a	addToTag
	m	(Lfda;)Lbxl;	a	fromTag
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcn;	a	predicate
	m	()V	<clinit>	<clinit>
c	bxm	net/minecraft/world/MenuProvider
	m	()Lxo;	Q_	getDisplayName
c	bxn	net/minecraft/world/Nameable
	m	()Lxo;	aj	getName
	m	()Z	i_	hasCustomName
	m	()Lxo;	Q_	getDisplayName
	m	()Lxo;	al	getCustomName
c	bxo	net/minecraft/world/RandomSequence
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lelb;	b	source
	m	(Lelb;)V	<init>	<init>
	m	(JLame;)V	<init>	<init>
	m	(JLjava/util/Optional;)V	<init>	<init>
	m	(JLjava/util/Optional;)Lelb;	a	createSequence
	m	(Lame;)Lekp$a;	a	seedForKey
	m	()Lbck;	a	random
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lbxo;)Lelb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bxp	net/minecraft/world/RandomSequences
	f	Lfby;	a	TYPE
	f	J	b	worldSeed
	f	I	c	salt
	f	Z	d	includeWorldSeed
	f	Z	e	includeSequenceId
	f	Ljava/util/Map;	f	sequences
	m	(J)V	<init>	<init>
	m	(JIZZLjava/util/Map;)V	<init>	<init>
	m	(J)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lame;)Lbck;	a	get
	m	(Lame;)Lbxo;	c	createSequence
	m	(Lame;IZZ)Lbxo;	b	createSequence
	m	(Ljava/util/function/BiConsumer;)V	a	forAllSequences
	m	(IZZ)V	a	setSeedDefaults
	m	()I	a	clear
	m	(Lame;)V	b	reset
	m	(Lame;IZZ)V	a	reset
	m	(JLcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$6
	m	(Lbxp;)Ljava/util/Map;	a	lambda$codec$5
	m	(Lbxp;)Ljava/lang/Boolean;	b	lambda$codec$4
	m	(Lbxp;)Ljava/lang/Boolean;	c	lambda$codec$3
	m	(Lbxp;)Ljava/lang/Integer;	d	lambda$codec$2
	m	(Lfbx$a;)Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lfbx$a;)Lbxp;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bxp$a	net/minecraft/world/RandomSequences$DirtyMarkingRandomSource
	f	Lbck;	c	random
	f	Lbxp;	b	this$0
	m	(Lbxp;Lbck;)V	<init>	<init>
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	()I	f	nextInt
	m	(I)I	a	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	m	(Ljava/lang/Object;)Z	equals	equals
c	bxq	net/minecraft/world/RandomizableContainer
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
	m	()Lamd;	aw_	getLootTable
	m	(Lamd;)V	a	setLootTable
	m	(Lamd;J)V	a	setLootTable
	m	()J	az_	getLootTableSeed
	m	(J)V	a	setLootTableSeed
	m	()Ljb;	aA_	getBlockPos
	m	()Ldmu;	i	getLevel
	m	(Ldly;Lbck;Ljb;Lamd;)V	a	setBlockEntityLootTable
	m	(Lfda;)Z	c_	tryLoadLootTable
	m	(Lfdc;)Z	d_	trySaveLootTable
	m	(Lcut;)V	f_	unpackLootTable
c	bxr	net/minecraft/world/SimpleContainer
	f	I	b	size
	f	Lju;	c	items
	f	Ljava/util/List;	d	listeners
	m	(I)V	<init>	<init>
	m	([Ldcv;)V	<init>	<init>
	m	(Lbxe;)V	a	addListener
	m	(Lbxe;)V	b	removeListener
	m	(I)Ldcv;	a	getItem
	m	()Ljava/util/List;	f	removeAllItems
	m	(II)Ldcv;	a	removeItem
	m	(Ldcr;I)Ldcv;	a	removeItemType
	m	(Ldcv;)Ldcv;	b	addItem
	m	(Ldcv;)Z	c	canAddItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	()V	a	clearContent
	m	(Lcuz;)V	fillStackedContents	fillStackedContents
	m	()Ljava/lang/String;	toString	toString
	m	(Ldcv;)V	d	moveItemToEmptySlots
	m	(Ldcv;)V	e	moveItemToOccupiedSlotsWithSameType
	m	(Ldcv;Ldcv;)V	a	moveItemsBetweenStacks
	m	(Lfda$a;)V	a	fromItemList
	m	(Lfdc$a;)V	a	storeAsItemList
	m	()Lju;	g	getItems
	m	(Ldcv;)Z	f	lambda$toString$1
	m	(Ldcv;)Z	g	lambda$removeAllItems$0
c	bxs	net/minecraft/world/SimpleMenuProvider
	f	Lxo;	a	title
	f	Lczu;	b	menuConstructor
	m	(Lczu;Lxo;)V	<init>	<init>
	m	()Lxo;	Q_	getDisplayName
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
c	bxt	net/minecraft/world/TickRateManager
	f	F	a	MIN_TICKRATE
	f	F	b	tickrate
	f	J	c	nanosecondsPerTick
	f	I	d	frozenTicksToRun
	f	Z	e	runGameElements
	f	Z	f	isFrozen
	m	()V	<init>	<init>
	m	(F)V	a	setTickRate
	m	()F	f	tickrate
	m	()F	g	millisecondsPerTick
	m	()J	h	nanosecondsPerTick
	m	()Z	i	runsNormally
	m	()Z	j	isSteppingForward
	m	(I)V	c	setFrozenTicksToRun
	m	()I	k	frozenTicksToRun
	m	(Z)V	a	setFrozen
	m	()Z	l	isFrozen
	m	()V	m	tick
	m	(Lbzm;)Z	a	isEntityFrozen
c	bxu	net/minecraft/world/WorldlyContainer
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
c	bxv	net/minecraft/world/WorldlyContainerHolder
	m	(Leeb;Ldmv;Ljb;)Lbxu;	a	getContainer
c	bxw	net/minecraft/world/damagesource/CombatEntry
	f	Lbyb;	a	source
	f	F	b	damage
	f	Lbyg;	c	fallLocation
	f	F	d	fallDistance
	m	(Lbyb;FLbyg;F)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbyb;	a	source
	m	()F	b	damage
	m	()Lbyg;	c	fallLocation
	m	()F	d	fallDistance
c	bxx	net/minecraft/world/damagesource/CombatRules
	f	F	a	MAX_ARMOR
	f	F	b	ARMOR_PROTECTION_DIVIDER
	f	F	c	BASE_ARMOR_TOUGHNESS
	f	F	d	MIN_ARMOR_RATIO
	f	I	e	NUM_ARMOR_ITEMS
	m	()V	<init>	<init>
	m	(Lcam;FLbyb;FF)F	a	getDamageAfterAbsorb
	m	(FF)F	a	getDamageAfterMagicAbsorb
c	bxy	net/minecraft/world/damagesource/CombatTracker
	f	I	a	RESET_DAMAGE_STATUS_TIME
	f	I	b	RESET_COMBAT_STATUS_TIME
	f	Lyl;	c	INTENTIONAL_GAME_DESIGN_STYLE
	f	Ljava/util/List;	d	entries
	f	Lcam;	e	mob
	f	I	f	lastDamageTime
	f	I	g	combatStartTime
	f	I	h	combatEndTime
	f	Z	i	inCombat
	f	Z	j	takingDamage
	m	(Lcam;)V	<init>	<init>
	m	(Lbyb;F)V	a	recordDamage
	m	(Lbyb;)Z	a	shouldEnterCombat
	m	(Lbzm;Lxo;Ljava/lang/String;Ljava/lang/String;)Lxo;	a	getMessageForAssistedFall
	m	(Lbxw;Lbzm;)Lxo;	a	getFallMessage
	m	(Lbzm;)Lxo;	a	getDisplayName
	m	()Lxo;	a	getDeathMessage
	m	()Lbxw;	d	getMostSignificantFall
	m	()I	b	getCombatDuration
	m	()V	c	recheckStatus
	m	()V	<clinit>	<clinit>
c	bxz	net/minecraft/world/damagesource/DamageEffects
	f	Lbxz;	a	HURT
	f	Lbxz;	b	THORNS
	f	Lbxz;	c	DROWNING
	f	Lbxz;	d	BURNING
	f	Lbxz;	e	POKING
	f	Lbxz;	f	FREEZING
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	id
	f	Layy;	i	sound
	f	[Lbxz;	j	$VALUES
	m	()[Lbxz;	values	values
	m	(Ljava/lang/String;)Lbxz;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Layy;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Layy;	a	sound
	m	()[Lbxz;	b	$values
	m	()V	<clinit>	<clinit>
c	bya	net/minecraft/world/damagesource/DamageScaling
	f	Lbya;	a	NEVER
	f	Lbya;	b	WHEN_CAUSED_BY_LIVING_NON_PLAYER
	f	Lbya;	c	ALWAYS
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbya;	f	$VALUES
	m	()[Lbya;	values	values
	m	(Ljava/lang/String;)Lbya;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbya;	a	$values
	m	()V	<clinit>	<clinit>
c	byb	net/minecraft/world/damagesource/DamageSource
	f	Ljl;	a	type
	f	Lbzm;	b	causingEntity
	f	Lbzm;	c	directEntity
	f	Lfis;	d	damageSourcePosition
	m	()Ljava/lang/String;	toString	toString
	m	()F	a	getFoodExhaustion
	m	()Z	b	isDirect
	m	(Ljl;Lbzm;Lbzm;Lfis;)V	<init>	<init>
	m	(Ljl;Lbzm;Lbzm;)V	<init>	<init>
	m	(Ljl;Lfis;)V	<init>	<init>
	m	(Ljl;Lbzm;)V	<init>	<init>
	m	(Ljl;)V	<init>	<init>
	m	()Lbzm;	c	getDirectEntity
	m	()Lbzm;	d	getEntity
	m	()Ldcv;	e	getWeaponItem
	m	(Lcam;)Lxo;	a	getLocalizedDeathMessage
	m	()Ljava/lang/String;	f	getMsgId
	m	()Z	g	scalesWithDifficulty
	m	()Z	h	isCreativePlayer
	m	()Lfis;	i	getSourcePosition
	m	()Lfis;	j	sourcePositionRaw
	m	(Lbae;)Z	a	is
	m	(Lamd;)Z	a	is
	m	()Lbyd;	k	type
	m	()Ljl;	l	typeHolder
c	byb$1	net/minecraft/world/damagesource/DamageSource$1
	f	[I	a	$SwitchMap$net$minecraft$world$damagesource$DamageScaling
	m	()V	<clinit>	<clinit>
c	byc	net/minecraft/world/damagesource/DamageSources
	f	Ljy;	a	damageTypes
	f	Lbyb;	b	inFire
	f	Lbyb;	c	campfire
	f	Lbyb;	d	lightningBolt
	f	Lbyb;	e	onFire
	f	Lbyb;	f	lava
	f	Lbyb;	g	hotFloor
	f	Lbyb;	h	inWall
	f	Lbyb;	i	cramming
	f	Lbyb;	j	drown
	f	Lbyb;	k	starve
	f	Lbyb;	l	cactus
	f	Lbyb;	m	fall
	f	Lbyb;	n	enderPearl
	f	Lbyb;	o	flyIntoWall
	f	Lbyb;	p	fellOutOfWorld
	f	Lbyb;	q	generic
	f	Lbyb;	r	magic
	f	Lbyb;	s	wither
	f	Lbyb;	t	dragonBreath
	f	Lbyb;	u	dryOut
	f	Lbyb;	v	sweetBerryBush
	f	Lbyb;	w	freeze
	f	Lbyb;	x	stalagmite
	f	Lbyb;	y	outsideBorder
	f	Lbyb;	z	genericKill
	m	(Ljz;)V	<init>	<init>
	m	(Lamd;)Lbyb;	a	source
	m	(Lamd;Lbzm;)Lbyb;	a	source
	m	(Lamd;Lbzm;Lbzm;)Lbyb;	a	source
	m	()Lbyb;	a	inFire
	m	()Lbyb;	b	campfire
	m	()Lbyb;	c	lightningBolt
	m	()Lbyb;	d	onFire
	m	()Lbyb;	e	lava
	m	()Lbyb;	f	hotFloor
	m	()Lbyb;	g	inWall
	m	()Lbyb;	h	cramming
	m	()Lbyb;	i	drown
	m	()Lbyb;	j	starve
	m	()Lbyb;	k	cactus
	m	()Lbyb;	l	fall
	m	()Lbyb;	m	enderPearl
	m	()Lbyb;	n	flyIntoWall
	m	()Lbyb;	o	fellOutOfWorld
	m	()Lbyb;	p	generic
	m	()Lbyb;	q	magic
	m	()Lbyb;	r	wither
	m	()Lbyb;	s	dragonBreath
	m	()Lbyb;	t	dryOut
	m	()Lbyb;	u	sweetBerryBush
	m	()Lbyb;	v	freeze
	m	()Lbyb;	w	stalagmite
	m	(Lbzm;)Lbyb;	a	fallingBlock
	m	(Lbzm;)Lbyb;	b	anvil
	m	(Lbzm;)Lbyb;	c	fallingStalactite
	m	(Lcam;)Lbyb;	a	sting
	m	(Lcam;)Lbyb;	b	mobAttack
	m	(Lcam;)Lbyb;	c	noAggroMobAttack
	m	(Lcut;)Lbyb;	a	playerAttack
	m	(Lcvb;Lbzm;)Lbyb;	a	arrow
	m	(Lbzm;Lbzm;)Lbyb;	a	trident
	m	(Lbzm;Lcam;)Lbyb;	a	mobProjectile
	m	(Lbzm;Lcam;)Lbyb;	b	spit
	m	(Lbzm;Lcam;)Lbyb;	c	windCharge
	m	(Lcvj;Lbzm;)Lbyb;	a	fireworks
	m	(Lcvi;Lbzm;)Lbyb;	a	fireball
	m	(Lcwd;Lbzm;)Lbyb;	a	witherSkull
	m	(Lbzm;Lbzm;)Lbyb;	b	thrown
	m	(Lbzm;Lbzm;)Lbyb;	c	indirectMagic
	m	(Lbzm;)Lbyb;	d	thorns
	m	(Ldmn;)Lbyb;	a	explosion
	m	(Lbzm;Lbzm;)Lbyb;	d	explosion
	m	(Lbzm;)Lbyb;	e	sonicBoom
	m	(Lfis;)Lbyb;	a	badRespawnPointExplosion
	m	()Lbyb;	x	outOfBorder
	m	()Lbyb;	y	genericKill
	m	(Lbzm;)Lbyb;	f	mace
c	byd	net/minecraft/world/damagesource/DamageType
	f	Ljava/lang/String;	d	msgId
	f	Lbya;	e	scaling
	f	F	f	exhaustion
	f	Lbxz;	g	effects
	f	Lbyf;	h	deathMessageType
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ljava/lang/String;Lbya;F)V	<init>	<init>
	m	(Ljava/lang/String;Lbya;FLbxz;)V	<init>	<init>
	m	(Ljava/lang/String;FLbxz;)V	<init>	<init>
	m	(Ljava/lang/String;F)V	<init>	<init>
	m	(Ljava/lang/String;Lbya;FLbxz;Lbyf;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	msgId
	m	()Lbya;	b	scaling
	m	()F	c	exhaustion
	m	()Lbxz;	d	effects
	m	()Lbyf;	e	deathMessageType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bye	net/minecraft/world/damagesource/DamageTypes
	f	Lamd;	a	IN_FIRE
	f	Lamd;	b	CAMPFIRE
	f	Lamd;	c	LIGHTNING_BOLT
	f	Lamd;	d	ON_FIRE
	f	Lamd;	e	LAVA
	f	Lamd;	f	HOT_FLOOR
	f	Lamd;	g	IN_WALL
	f	Lamd;	h	CRAMMING
	f	Lamd;	i	DROWN
	f	Lamd;	j	STARVE
	f	Lamd;	k	CACTUS
	f	Lamd;	l	FALL
	f	Lamd;	m	ENDER_PEARL
	f	Lamd;	n	FLY_INTO_WALL
	f	Lamd;	o	FELL_OUT_OF_WORLD
	f	Lamd;	p	GENERIC
	f	Lamd;	q	MAGIC
	f	Lamd;	r	WITHER
	f	Lamd;	s	DRAGON_BREATH
	f	Lamd;	t	DRY_OUT
	f	Lamd;	u	SWEET_BERRY_BUSH
	f	Lamd;	v	FREEZE
	f	Lamd;	w	STALAGMITE
	f	Lamd;	x	FALLING_BLOCK
	f	Lamd;	y	FALLING_ANVIL
	f	Lamd;	z	FALLING_STALACTITE
	f	Lamd;	A	STING
	f	Lamd;	B	MOB_ATTACK
	f	Lamd;	C	MOB_ATTACK_NO_AGGRO
	f	Lamd;	D	PLAYER_ATTACK
	f	Lamd;	E	ARROW
	f	Lamd;	F	TRIDENT
	f	Lamd;	G	MOB_PROJECTILE
	f	Lamd;	H	SPIT
	f	Lamd;	I	WIND_CHARGE
	f	Lamd;	J	FIREWORKS
	f	Lamd;	K	FIREBALL
	f	Lamd;	L	UNATTRIBUTED_FIREBALL
	f	Lamd;	M	WITHER_SKULL
	f	Lamd;	N	THROWN
	f	Lamd;	O	INDIRECT_MAGIC
	f	Lamd;	P	THORNS
	f	Lamd;	Q	EXPLOSION
	f	Lamd;	R	PLAYER_EXPLOSION
	f	Lamd;	S	SONIC_BOOM
	f	Lamd;	T	BAD_RESPAWN_POINT
	f	Lamd;	U	OUTSIDE_BORDER
	f	Lamd;	V	GENERIC_KILL
	f	Lamd;	W	MACE_SMASH
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	byf	net/minecraft/world/damagesource/DeathMessageType
	f	Lbyf;	a	DEFAULT
	f	Lbyf;	b	FALL_VARIANTS
	f	Lbyf;	c	INTENTIONAL_GAME_DESIGN
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Lbyf;	f	$VALUES
	m	()[Lbyf;	values	values
	m	(Ljava/lang/String;)Lbyf;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbyf;	a	$values
	m	()V	<clinit>	<clinit>
c	byg	net/minecraft/world/damagesource/FallLocation
	f	Ljava/lang/String;	i	id
	f	Lbyg;	a	GENERIC
	f	Lbyg;	b	LADDER
	f	Lbyg;	c	VINES
	f	Lbyg;	d	WEEPING_VINES
	f	Lbyg;	e	TWISTING_VINES
	f	Lbyg;	f	SCAFFOLDING
	f	Lbyg;	g	OTHER_CLIMBABLE
	f	Lbyg;	h	WATER
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Leeb;)Lbyg;	a	blockToFallLocation
	m	(Lcam;)Lbyg;	a	getCurrentFallLocation
	m	()Ljava/lang/String;	a	languageKey
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	id
	m	()V	<clinit>	<clinit>
c	byh	net/minecraft/world/damagesource/package-info
c	byi	net/minecraft/world/effect/AbsorptionMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(II)Z	a	shouldApplyEffectTickThisTick
	m	(Lcam;I)V	a	onEffectStarted
c	byj	net/minecraft/world/effect/BadOmenMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(II)Z	a	shouldApplyEffectTickThisTick
	m	(Laub;Lcam;I)Z	a	applyEffectTick
c	byk	net/minecraft/world/effect/HealOrHarmMobEffect
	f	Z	c	isHarm
	m	(Lbyp;IZ)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(Laub;Lbzm;Lbzm;Lcam;ID)V	a	applyInstantenousEffect
c	byl	net/minecraft/world/effect/HungerMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(II)Z	a	shouldApplyEffectTickThisTick
c	bym	net/minecraft/world/effect/InfestedMobEffect
	f	F	c	chanceToSpawn
	f	Ljava/util/function/ToIntFunction;	d	spawnedCount
	m	(Lbyp;IFLjava/util/function/ToIntFunction;)V	<init>	<init>
	m	(Laub;Lcam;ILbyb;F)V	a	onMobHurt
	m	(Laub;Lcam;DDD)V	a	spawnSilverfish
c	byn	net/minecraft/world/effect/InstantenousMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	()Z	a	isInstantenous
	m	(II)Z	a	shouldApplyEffectTickThisTick
c	byo	net/minecraft/world/effect/MobEffect
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	I	c	AMBIENT_ALPHA
	f	Ljava/util/Map;	d	attributeModifiers
	f	Lbyp;	e	category
	f	I	f	color
	f	Ljava/util/function/Function;	g	particleFactory
	f	Ljava/lang/String;	h	descriptionId
	f	I	i	blendInDurationTicks
	f	I	j	blendOutDurationTicks
	f	I	k	blendOutAdvanceTicks
	f	Ljava/util/Optional;	l	soundOnAdded
	f	Lcyd;	m	requiredFeatures
	m	(Lbyp;I)V	<init>	<init>
	m	(Lbyp;ILmc;)V	<init>	<init>
	m	()I	b	getBlendInDurationTicks
	m	()I	c	getBlendOutDurationTicks
	m	()I	d	getBlendOutAdvanceTicks
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(Laub;Lbzm;Lbzm;Lcam;ID)V	a	applyInstantenousEffect
	m	(II)Z	a	shouldApplyEffectTickThisTick
	m	(Lcam;I)V	a	onEffectStarted
	m	(Lcam;I)V	b	onEffectAdded
	m	(Laub;Lcam;ILbzm$e;)V	a	onMobRemoved
	m	(Laub;Lcam;ILbyb;F)V	a	onMobHurt
	m	()Z	a	isInstantenous
	m	()Ljava/lang/String;	e	getOrCreateDescriptionId
	m	()Ljava/lang/String;	f	getDescriptionId
	m	()Lxo;	g	getDisplayName
	m	()Lbyp;	h	getCategory
	m	()I	i	getColor
	m	(Ljl;Lame;DLcbq$a;)Lbyo;	a	addAttributeModifier
	m	(I)Lbyo;	a	setBlendDuration
	m	(III)Lbyo;	a	setBlendDuration
	m	(ILjava/util/function/BiConsumer;)V	a	createModifiers
	m	(Lcbp;)V	a	removeAttributeModifiers
	m	(Lcbp;I)V	a	addAttributeModifiers
	m	()Z	j	isBeneficial
	m	(Lbyq;)Lmc;	a	createParticleOptions
	m	(Layy;)Lbyo;	a	withSoundOnAdded
	m	([Lcyb;)Lbyo;	a	requiredFeatures
	m	()Lcyd;	k	requiredFeatures
	m	(Ljava/util/function/BiConsumer;ILjl;Lbyo$a;)V	a	lambda$createModifiers$3
	m	(Lcam;Layy;)V	a	lambda$onEffectAdded$2
	m	(Lmc;Lbyq;)Lmc;	a	lambda$new$1
	m	(ILbyq;)Lmc;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	byo$a	net/minecraft/world/effect/MobEffect$AttributeTemplate
	f	Lame;	a	id
	f	D	b	amount
	f	Lcbq$a;	c	operation
	m	(Lame;DLcbq$a;)V	<init>	<init>
	m	(I)Lcbq;	a	create
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()D	b	amount
	m	()Lcbq$a;	c	operation
c	byp	net/minecraft/world/effect/MobEffectCategory
	f	Lbyp;	a	BENEFICIAL
	f	Lbyp;	b	HARMFUL
	f	Lbyp;	c	NEUTRAL
	f	Lo;	d	tooltipFormatting
	f	[Lbyp;	e	$VALUES
	m	()[Lbyp;	values	values
	m	(Ljava/lang/String;)Lbyp;	valueOf	valueOf
	m	(Ljava/lang/String;ILo;)V	<init>	<init>
	m	()Lo;	a	getTooltipFormatting
	m	()[Lbyp;	b	$values
	m	()V	<clinit>	<clinit>
c	byq	net/minecraft/world/effect/MobEffectInstance
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	I	a	INFINITE_DURATION
	f	I	b	MIN_AMPLIFIER
	f	I	c	MAX_AMPLIFIER
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	f	Ljl;	g	effect
	f	I	h	duration
	f	I	i	amplifier
	f	Z	j	ambient
	f	Z	k	visible
	f	Z	l	showIcon
	f	Lbyq;	m	hiddenEffect
	f	Lbyq$a;	n	blendState
	m	(Ljl;)V	<init>	<init>
	m	(Ljl;I)V	<init>	<init>
	m	(Ljl;II)V	<init>	<init>
	m	(Ljl;IIZZ)V	<init>	<init>
	m	(Ljl;IIZZZ)V	<init>	<init>
	m	(Ljl;IIZZZLbyq;)V	<init>	<init>
	m	(Lbyq;)V	<init>	<init>
	m	(Ljl;Lbyq$b;)V	<init>	<init>
	m	()Lbyq$b;	l	asDetails
	m	(Lcam;F)F	a	getBlendFactor
	m	()Lmc;	a	getParticleOptions
	m	(Lbyq;)V	a	setDetailsFrom
	m	(Lbyq;)Z	b	update
	m	(Lbyq;)Z	e	isShorterDurationThan
	m	()Z	b	isInfiniteDuration
	m	(I)Z	a	endsWithin
	m	(F)Lbyq;	a	withScaledDuration
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I	a	mapDuration
	m	()Ljl;	c	getEffect
	m	()I	d	getDuration
	m	()I	e	getAmplifier
	m	()Z	f	isAmbient
	m	()Z	g	isVisible
	m	()Z	h	showIcon
	m	(Laub;Lcam;Ljava/lang/Runnable;)Z	a	tickServer
	m	()V	i	tickClient
	m	()Z	m	hasRemainingDuration
	m	()V	n	tickDownDuration
	m	()Z	o	downgradeToHiddenEffect
	m	(Lcam;)V	a	onEffectStarted
	m	(Laub;Lcam;Lbzm$e;)V	a	onMobRemoved
	m	(Laub;Lcam;Lbyb;F)V	a	onMobHurt
	m	()Ljava/lang/String;	j	getDescriptionId
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	p	describeDuration
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lbyq;)I	c	compareTo
	m	(Lcam;)V	b	onEffectAdded
	m	(Ljl;)Z	a	is
	m	(Lbyq;)V	d	copyBlendState
	m	()V	k	skipBlending
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(I)I	b	lambda$tickDownDuration$3
	m	(FI)I	a	lambda$withScaledDuration$2
	m	(Ljl;Lbyq$b;)Lbyq;	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	byq$a	net/minecraft/world/effect/MobEffectInstance$BlendState
	f	F	a	factor
	f	F	b	factorPreviousFrame
	m	()V	<init>	<init>
	m	(Lbyq;)V	a	setImmediate
	m	(Lbyq$a;)V	a	copyFrom
	m	(Lbyq;)V	b	tick
	m	(Lbyq;)Z	c	hasEffect
	m	(Lcam;F)F	a	getFactor
c	byq$b	net/minecraft/world/effect/MobEffectInstance$Details
	f	I	c	amplifier
	f	I	d	duration
	f	Z	e	ambient
	f	Z	f	showParticles
	f	Z	g	showIcon
	f	Ljava/util/Optional;	h	hiddenEffect
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(IIZZZLjava/util/Optional;)V	<init>	<init>
	m	(IIZZLjava/util/Optional;Ljava/util/Optional;)Lbyq$b;	a	create
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	amplifier
	m	()I	b	duration
	m	()Z	c	ambient
	m	()Z	d	showParticles
	m	()Z	e	showIcon
	m	()Ljava/util/Optional;	f	hiddenEffect
	m	(Lzm;)Lzm;	a	lambda$static$3
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$2
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lbyq$b;)Ljava/util/Optional;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	byr	net/minecraft/world/effect/MobEffectUtil
	m	()V	<init>	<init>
	m	(Lbyq;FF)Lxo;	a	formatDuration
	m	(Lcam;)Z	a	hasDigSpeed
	m	(Lcam;)I	b	getDigSpeedAmplification
	m	(Lcam;)Z	c	hasWaterBreathing
	m	(Laub;Lbzm;Lfis;DLbyq;I)Ljava/util/List;	a	addEffectToPlayersAround
	m	(Lbyq;Lbzm;Lauc;)V	a	lambda$addEffectToPlayersAround$1
	m	(Lbzm;Lfis;DLjl;Lbyq;ILauc;)Z	a	lambda$addEffectToPlayersAround$0
c	bys	net/minecraft/world/effect/MobEffects
	f	I	N	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS
	f	Ljl;	a	SPEED
	f	Ljl;	b	SLOWNESS
	f	Ljl;	c	HASTE
	f	Ljl;	d	MINING_FATIGUE
	f	Ljl;	e	STRENGTH
	f	Ljl;	f	INSTANT_HEALTH
	f	Ljl;	g	INSTANT_DAMAGE
	f	Ljl;	h	JUMP_BOOST
	f	Ljl;	i	NAUSEA
	f	Ljl;	j	REGENERATION
	f	Ljl;	k	RESISTANCE
	f	Ljl;	l	FIRE_RESISTANCE
	f	Ljl;	m	WATER_BREATHING
	f	Ljl;	n	INVISIBILITY
	f	Ljl;	o	BLINDNESS
	f	Ljl;	p	NIGHT_VISION
	f	Ljl;	q	HUNGER
	f	Ljl;	r	WEAKNESS
	f	Ljl;	s	POISON
	f	Ljl;	t	WITHER
	f	Ljl;	u	HEALTH_BOOST
	f	Ljl;	v	ABSORPTION
	f	Ljl;	w	SATURATION
	f	Ljl;	x	GLOWING
	f	Ljl;	y	LEVITATION
	f	Ljl;	z	LUCK
	f	Ljl;	A	UNLUCK
	f	Ljl;	B	SLOW_FALLING
	f	Ljl;	C	CONDUIT_POWER
	f	Ljl;	D	DOLPHINS_GRACE
	f	Ljl;	E	BAD_OMEN
	f	Ljl;	F	HERO_OF_THE_VILLAGE
	f	Ljl;	G	DARKNESS
	f	Ljl;	H	TRIAL_OMEN
	f	Ljl;	I	RAID_OMEN
	f	Ljl;	J	WIND_CHARGED
	f	Ljl;	K	WEAVING
	f	Ljl;	L	OOZING
	f	Ljl;	M	INFESTED
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lbyo;)Ljl;	a	register
	m	(Ljy;)Ljl;	a	bootstrap
	m	(Lbck;)I	a	lambda$static$2
	m	(Lbck;)I	b	lambda$static$1
	m	(Lbck;)I	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	byt	net/minecraft/world/effect/OozingMobEffect
	f	I	d	RADIUS_TO_CHECK_SLIMES
	f	I	c	SLIME_SIZE
	f	Ljava/util/function/ToIntFunction;	e	spawnedCount
	m	(Lbyp;ILjava/util/function/ToIntFunction;)V	<init>	<init>
	m	(ILbyt$a;I)I	a	numberOfSlimesToSpawn
	m	(Laub;Lcam;ILbzm$e;)V	a	onMobRemoved
	m	(Ldmu;DDD)V	a	spawnSlimeOffspring
c	byt$a	net/minecraft/world/effect/OozingMobEffect$NearbySlimes
	m	(I)I	count	count
	m	(Lcam;)Lbyt$a;	a	closeTo
	m	(Lcam;I)I	a	lambda$closeTo$1
	m	(Lcam;Lcse;)Z	a	lambda$closeTo$0
c	byu	net/minecraft/world/effect/PoisonMobEffect
	f	I	c	DAMAGE_INTERVAL
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(II)Z	a	shouldApplyEffectTickThisTick
c	byv	net/minecraft/world/effect/RaidOmenMobEffect
	m	(Lbyp;ILmc;)V	<init>	<init>
	m	(II)Z	a	shouldApplyEffectTickThisTick
	m	(Laub;Lcam;I)Z	a	applyEffectTick
c	byw	net/minecraft/world/effect/RegenerationMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(II)Z	a	shouldApplyEffectTickThisTick
c	byx	net/minecraft/world/effect/SaturationMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
c	byy	net/minecraft/world/effect/WeavingMobEffect
	f	Ljava/util/function/ToIntFunction;	c	maxCobwebs
	m	(Lbyp;ILjava/util/function/ToIntFunction;)V	<init>	<init>
	m	(Laub;Lcam;ILbzm$e;)V	a	onMobRemoved
	m	(Laub;Lbck;Ljb;)V	a	spawnCobwebsRandomlyAround
c	byz	net/minecraft/world/effect/WindChargedMobEffect
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;ILbzm$e;)V	a	onMobRemoved
c	bza	net/minecraft/world/effect/WitherMobEffect
	f	I	c	DAMAGE_INTERVAL
	m	(Lbyp;I)V	<init>	<init>
	m	(Laub;Lcam;I)Z	a	applyEffectTick
	m	(II)Z	a	shouldApplyEffectTickThisTick
c	bzb	net/minecraft/world/effect/package-info
c	bzc	net/minecraft/world/entity/AgeableMob
	f	Lalh;	ck	DATA_BABY_ID
	f	I	a	BABY_START_AGE
	f	I	cl	FORCED_AGE_PARTICLE_TICKS
	f	I	b	DEFAULT_AGE
	f	I	c	DEFAULT_FORCED_AGE
	f	I	d	age
	f	I	e	forcedAge
	f	I	f	forcedAgeTimer
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	Y_	canBreed
	m	()I	Z_	getAge
	m	(IZ)V	a	ageUp
	m	(I)V	b_	ageUp
	m	(I)V	c_	setAge
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	e_	aiStep
	m	()V	h	ageBoundaryReached
	m	()Z	g_	isBaby
	m	(Z)V	a	setBaby
	m	(I)I	d_	getSpeedUpSecondsWhenFeeding
	m	()I	k	getForcedAge
	m	()I	l	getForcedAgeTimer
	m	()V	<clinit>	<clinit>
c	bzc$a	net/minecraft/world/entity/AgeableMob$AgeableMobGroupData
	f	I	a	groupSize
	f	Z	b	shouldSpawnBaby
	f	F	c	babySpawnChance
	m	(ZF)V	<init>	<init>
	m	(Z)V	<init>	<init>
	m	(F)V	<init>	<init>
	m	()I	a	getGroupSize
	m	()V	b	increaseGroupSizeByOne
	m	()Z	c	isShouldSpawnBaby
	m	()F	d	getBabySpawnChance
c	bzd	net/minecraft/world/entity/AnimationState
	f	I	a	STOPPED
	f	I	b	startTick
	m	()V	<init>	<init>
	m	(I)V	a	start
	m	(I)V	b	startIfStopped
	m	(ZI)V	a	animateWhen
	m	()V	a	stop
	m	(Ljava/util/function/Consumer;)V	a	ifStarted
	m	(IF)V	a	fastForward
	m	(F)J	a	getTimeInMillis
	m	()Z	b	isStarted
	m	(Lbzd;)V	a	copyFrom
c	bze	net/minecraft/world/entity/AreaEffectCloud
	f	I	e	TIME_BETWEEN_APPLICATIONS
	f	Lalh;	f	DATA_RADIUS
	f	Lalh;	g	DATA_WAITING
	f	Lalh;	h	DATA_PARTICLE
	f	F	i	MAX_RADIUS
	f	I	j	DEFAULT_AGE
	f	I	k	DEFAULT_DURATION_ON_USE
	f	F	l	DEFAULT_RADIUS_ON_USE
	f	F	m	DEFAULT_RADIUS_PER_TICK
	f	F	n	DEFAULT_POTION_DURATION_SCALE
	f	F	o	MINIMAL_RADIUS
	f	F	p	DEFAULT_RADIUS
	f	F	a	DEFAULT_WIDTH
	f	F	b	HEIGHT
	f	I	c	INFINITE_DURATION
	f	I	d	DEFAULT_LINGERING_DURATION
	f	I	q	DEFAULT_WAIT_TIME
	f	I	r	DEFAULT_REAPPLICATION_DELAY
	f	Llx;	s	DEFAULT_PARTICLE
	f	Lmc;	t	customParticle
	f	Lder;	u	potionContents
	f	F	aM	potionDurationScale
	f	Ljava/util/Map;	aN	victims
	f	I	aO	duration
	f	I	aP	waitTime
	f	I	aQ	reapplicationDelay
	f	I	aR	durationOnUse
	f	F	aS	radiusOnUse
	f	F	aT	radiusPerTick
	f	Lbzs;	aU	owner
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDD)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(F)V	a	setRadius
	m	()V	j_	refreshDimensions
	m	()F	c	getRadius
	m	(Lder;)V	a	setPotionContents
	m	(Lmc;)V	a	setCustomParticle
	m	(F)V	b	setPotionDurationScale
	m	()V	q	updateParticle
	m	(Lbyq;)V	a	addEffect
	m	()Lmc;	e	getParticle
	m	(Z)V	a	setWaiting
	m	()Z	f	isWaiting
	m	()I	h	getDuration
	m	(I)V	a	setDuration
	m	()V	g	tick
	m	()V	s	clientTick
	m	(Laub;)V	a	serverTick
	m	()F	i	getRadiusOnUse
	m	(F)V	c	setRadiusOnUse
	m	()F	k	getRadiusPerTick
	m	(F)V	d	setRadiusPerTick
	m	()I	l	getDurationOnUse
	m	(I)V	b	setDurationOnUse
	m	()I	m	getWaitTime
	m	(I)V	c	setWaitTime
	m	(Lcam;)V	a	setOwner
	m	()Lcam;	n	getOwner
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lfaq;	k_	getPistonPushReaction
	m	(Lcay;)Lbzp;	a	getDimensions
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	()Lbzm;	ah_	getOwner
	m	(Ljava/util/Map$Entry;)Z	a	lambda$serverTick$0
	m	()V	<clinit>	<clinit>
c	bzf	net/minecraft/world/entity/Attackable
	m	()Lcam;	ak	getLastAttacker
c	bzg	net/minecraft/world/entity/ConversionParams
	f	Lbzh;	a	type
	f	Z	b	keepEquipment
	f	Z	c	preserveCanPickUpLoot
	f	Lfjs;	d	team
	m	(Lbzh;ZZLfjs;)V	<init>	<init>
	m	(Lcao;ZZ)Lbzg;	a	single
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzh;	a	type
	m	()Z	b	keepEquipment
	m	()Z	c	preserveCanPickUpLoot
	m	()Lfjs;	d	team
c	bzg$a	net/minecraft/world/entity/ConversionParams$AfterConversion
	m	(Lcao;)V	finalizeConversion	finalizeConversion
c	bzh	net/minecraft/world/entity/ConversionType
	f	Lbzh;	a	SINGLE
	f	Lbzh;	b	SPLIT_ON_DEATH
	f	Ljava/util/Set;	c	COMPONENTS_TO_COPY
	f	Z	d	discardAfterConversion
	f	[Lbzh;	e	$VALUES
	m	()[Lbzh;	values	values
	m	(Ljava/lang/String;)Lbzh;	valueOf	valueOf
	m	(Ljava/lang/String;IZ)V	<init>	<init>
	m	()Z	a	shouldDiscardAfterConversion
	m	(Lcao;Lcao;Lbzg;)V	a	convert
	m	(Lcao;Lcao;Lbzg;)V	b	convertCommon
	m	(Lcao;Lcao;Lkp;)V	a	copyComponent
	m	()[Lbzh;	b	$values
	m	()V	<clinit>	<clinit>
c	bzh$1	net/minecraft/world/entity/ConversionType$1
	m	(Ljava/lang/String;IZ)V	<init>	<init>
	m	(Lcao;Lcao;Lbzg;)V	a	convert
c	bzh$2	net/minecraft/world/entity/ConversionType$2
	m	(Ljava/lang/String;IZ)V	<init>	<init>
	m	(Lcao;Lcao;Lbzg;)V	a	convert
c	bzi	net/minecraft/world/entity/Crackiness
	f	Lbzi;	a	GOLEM
	f	Lbzi;	b	WOLF_ARMOR
	f	F	c	fractionLow
	f	F	d	fractionMedium
	f	F	e	fractionHigh
	m	(FFF)V	<init>	<init>
	m	(F)Lbzi$a;	a	byFraction
	m	(Ldcv;)Lbzi$a;	a	byDamage
	m	(II)Lbzi$a;	a	byDamage
	m	()V	<clinit>	<clinit>
c	bzi$a	net/minecraft/world/entity/Crackiness$Level
	f	Lbzi$a;	a	NONE
	f	Lbzi$a;	b	LOW
	f	Lbzi$a;	c	MEDIUM
	f	Lbzi$a;	d	HIGH
	f	[Lbzi$a;	e	$VALUES
	m	()[Lbzi$a;	values	values
	m	(Ljava/lang/String;)Lbzi$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbzi$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bzj	net/minecraft/world/entity/Display
	f	Lorg/slf4j/Logger;	o	LOGGER
	f	I	a	NO_BRIGHTNESS_OVERRIDE
	f	Lalh;	p	DATA_TRANSFORMATION_INTERPOLATION_START_DELTA_TICKS_ID
	f	Lalh;	q	DATA_TRANSFORMATION_INTERPOLATION_DURATION_ID
	f	Lalh;	r	DATA_POS_ROT_INTERPOLATION_DURATION_ID
	f	Lalh;	s	DATA_TRANSLATION_ID
	f	Lalh;	t	DATA_SCALE_ID
	f	Lalh;	u	DATA_LEFT_ROTATION_ID
	f	Lalh;	aM	DATA_RIGHT_ROTATION_ID
	f	Lalh;	aN	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID
	f	Lalh;	aO	DATA_BRIGHTNESS_OVERRIDE_ID
	f	Lalh;	aP	DATA_VIEW_RANGE_ID
	f	Lalh;	aQ	DATA_SHADOW_RADIUS_ID
	f	Lalh;	aR	DATA_SHADOW_STRENGTH_ID
	f	Lalh;	aS	DATA_WIDTH_ID
	f	Lalh;	aT	DATA_HEIGHT_ID
	f	Lalh;	aU	DATA_GLOW_COLOR_OVERRIDE_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	aV	RENDER_STATE_IDS
	f	I	aW	INITIAL_TRANSFORMATION_INTERPOLATION_DURATION
	f	I	aX	INITIAL_TRANSFORMATION_START_INTERPOLATION
	f	I	aY	INITIAL_POS_ROT_INTERPOLATION_DURATION
	f	F	aZ	INITIAL_SHADOW_RADIUS
	f	F	ba	INITIAL_SHADOW_STRENGTH
	f	F	bb	INITIAL_VIEW_RANGE
	f	F	bc	INITIAL_WIDTH
	f	F	bd	INITIAL_HEIGHT
	f	I	be	NO_GLOW_COLOR_OVERRIDE
	f	Ljava/lang/String;	b	TAG_POS_ROT_INTERPOLATION_DURATION
	f	Ljava/lang/String;	c	TAG_TRANSFORMATION_INTERPOLATION_DURATION
	f	Ljava/lang/String;	d	TAG_TRANSFORMATION_START_INTERPOLATION
	f	Ljava/lang/String;	e	TAG_TRANSFORMATION
	f	Ljava/lang/String;	f	TAG_BILLBOARD
	f	Ljava/lang/String;	g	TAG_BRIGHTNESS
	f	Ljava/lang/String;	h	TAG_VIEW_RANGE
	f	Ljava/lang/String;	i	TAG_SHADOW_RADIUS
	f	Ljava/lang/String;	j	TAG_SHADOW_STRENGTH
	f	Ljava/lang/String;	k	TAG_WIDTH
	f	Ljava/lang/String;	l	TAG_HEIGHT
	f	Ljava/lang/String;	m	TAG_GLOW_COLOR_OVERRIDE
	f	J	bf	interpolationStartClientTick
	f	I	bg	interpolationDuration
	f	F	bh	lastProgress
	f	Lfin;	bi	cullingBoundingBox
	f	Z	bj	noCulling
	f	Z	n	updateRenderState
	f	Z	bk	updateStartTick
	f	Z	bl	updateInterpolationDuration
	f	Lbzj$j;	bm	renderState
	f	Lcah;	bn	interpolation
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lall;)Lk;	a	createTransformation
	m	()V	g	tick
	m	()Lcah;	l_	getInterpolation
	m	(ZF)V	a	updateRenderSubState
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lk;)V	a	setTransformation
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lfin;	e	getBoundingBoxForCulling
	m	()Z	f	affectedByCulling
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Z	n_	isIgnoringBlockTriggers
	m	()Lbzj$j;	i	renderState
	m	(I)V	b	setTransformationInterpolationDuration
	m	()I	l	getTransformationInterpolationDuration
	m	(I)V	c	setTransformationInterpolationDelay
	m	()I	m	getTransformationInterpolationDelay
	m	(I)V	d	setPosRotInterpolationDuration
	m	()I	n	getPosRotInterpolationDuration
	m	(Lbzj$a;)V	a	setBillboardConstraints
	m	()Lbzj$a;	p	getBillboardConstraints
	m	(Lbap;)V	a	setBrightnessOverride
	m	()Lbap;	q	getBrightnessOverride
	m	()I	s	getPackedBrightnessOverride
	m	(F)V	b	setViewRange
	m	()F	t	getViewRange
	m	(F)V	c	setShadowRadius
	m	()F	u	getShadowRadius
	m	(F)V	d	setShadowStrength
	m	()F	v	getShadowStrength
	m	(F)V	x	setWidth
	m	()F	w	getWidth
	m	(F)V	y	setHeight
	m	()I	x	getGlowColorOverride
	m	(I)V	l	setGlowColorOverride
	m	(F)F	a	calculateInterpolationProgress
	m	()F	y	getHeight
	m	(DDD)V	a_	setPos
	m	()V	z	updateCulling
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()I	m_	getTeamColor
	m	()Lbzj$j;	A	createFreshRenderState
	m	(Lbzj$j;F)Lbzj$j;	a	createInterpolatedRenderState
	m	()V	<clinit>	<clinit>
c	bzj$a	net/minecraft/world/entity/Display$BillboardConstraints
	f	Lbzj$a;	a	FIXED
	f	Lbzj$a;	b	VERTICAL
	f	Lbzj$a;	c	HORIZONTAL
	f	Lbzj$a;	d	CENTER
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	B	g	id
	f	Ljava/lang/String;	h	name
	f	[Lbzj$a;	i	$VALUES
	m	()[Lbzj$a;	values	values
	m	(Ljava/lang/String;)Lbzj$a;	valueOf	valueOf
	m	(Ljava/lang/String;IBLjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()B	a	getId
	m	()[Lbzj$a;	b	$values
	m	()V	<clinit>	<clinit>
c	bzj$b	net/minecraft/world/entity/Display$BlockDisplay
	f	Ljava/lang/String;	o	TAG_BLOCK_STATE
	f	Lalh;	p	DATA_BLOCK_STATE_ID
	f	Lbzj$b$a;	q	blockRenderState
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Leeb;	m	getBlockState
	m	(Leeb;)V	c	setBlockState
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lbzj$b$a;	l	blockRenderState
	m	(ZF)V	a	updateRenderSubState
	m	()V	<clinit>	<clinit>
c	bzj$b$a	net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState
	f	Leeb;	a	blockState
	m	(Leeb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leeb;	a	blockState
c	bzj$c	net/minecraft/world/entity/Display$ColorInterpolator
	f	I	a	previous
	f	I	b	current
	m	(II)V	<init>	<init>
	m	(F)I	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	previous
	m	()I	b	current
c	bzj$d	net/minecraft/world/entity/Display$FloatInterpolator
	m	(F)Lbzj$d;	constant	constant
	m	(F)F	get	get
	m	(FF)F	a	lambda$constant$0
c	bzj$e	net/minecraft/world/entity/Display$GenericInterpolator
	m	(Ljava/lang/Object;)Lbzj$e;	constant	constant
	m	(F)Ljava/lang/Object;	get	get
	m	(Ljava/lang/Object;F)Ljava/lang/Object;	a	lambda$constant$0
c	bzj$f	net/minecraft/world/entity/Display$IntInterpolator
	m	(I)Lbzj$f;	constant	constant
	m	(F)I	get	get
	m	(IF)I	a	lambda$constant$0
c	bzj$g	net/minecraft/world/entity/Display$ItemDisplay
	f	Ljava/lang/String;	o	TAG_ITEM
	f	Ljava/lang/String;	p	TAG_ITEM_DISPLAY
	f	Lalh;	q	DATA_ITEM_STACK_ID
	f	Lalh;	r	DATA_ITEM_DISPLAY_ID
	f	Lcbd;	s	slot
	f	Lbzj$g$a;	t	itemRenderState
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Ldcv;	m	getItemStack
	m	(Ldcv;)V	a	setItemStack
	m	(Ldct;)V	a	setItemTransform
	m	()Ldct;	n	getItemTransform
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(I)Lcbd;	a_	getSlot
	m	()Lbzj$g$a;	l	itemRenderState
	m	(ZF)V	a	updateRenderSubState
	m	()V	<clinit>	<clinit>
c	bzj$g$a	net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState
	f	Ldcv;	a	itemStack
	f	Ldct;	b	itemTransform
	m	(Ldcv;Ldct;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	a	itemStack
	m	()Ldct;	b	itemTransform
c	bzj$h	net/minecraft/world/entity/Display$LinearFloatInterpolator
	f	F	a	previous
	f	F	b	current
	m	(FF)V	<init>	<init>
	m	(F)F	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	previous
	m	()F	b	current
c	bzj$i	net/minecraft/world/entity/Display$LinearIntInterpolator
	f	I	a	previous
	f	I	b	current
	m	(II)V	<init>	<init>
	m	(F)I	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	previous
	m	()I	b	current
c	bzj$j	net/minecraft/world/entity/Display$RenderState
	f	Lbzj$e;	a	transformation
	f	Lbzj$a;	b	billboardConstraints
	f	I	c	brightnessOverride
	f	Lbzj$d;	d	shadowRadius
	f	Lbzj$d;	e	shadowStrength
	f	I	f	glowColorOverride
	m	(Lbzj$e;Lbzj$a;ILbzj$d;Lbzj$d;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzj$e;	a	transformation
	m	()Lbzj$a;	b	billboardConstraints
	m	()I	c	brightnessOverride
	m	()Lbzj$d;	d	shadowRadius
	m	()Lbzj$d;	e	shadowStrength
	m	()I	f	glowColorOverride
c	bzj$k	net/minecraft/world/entity/Display$TextDisplay
	f	Ljava/lang/String;	o	TAG_TEXT
	f	Ljava/lang/String;	aM	TAG_LINE_WIDTH
	f	Ljava/lang/String;	aN	TAG_TEXT_OPACITY
	f	Ljava/lang/String;	aO	TAG_BACKGROUND_COLOR
	f	Ljava/lang/String;	aP	TAG_SHADOW
	f	Ljava/lang/String;	aQ	TAG_SEE_THROUGH
	f	Ljava/lang/String;	aR	TAG_USE_DEFAULT_BACKGROUND
	f	Ljava/lang/String;	aS	TAG_ALIGNMENT
	f	B	p	FLAG_SHADOW
	f	B	q	FLAG_SEE_THROUGH
	f	B	r	FLAG_USE_DEFAULT_BACKGROUND
	f	B	s	FLAG_ALIGN_LEFT
	f	B	t	FLAG_ALIGN_RIGHT
	f	B	aT	INITIAL_TEXT_OPACITY
	f	I	u	INITIAL_BACKGROUND
	f	I	aU	INITIAL_LINE_WIDTH
	f	Lalh;	aV	DATA_TEXT_ID
	f	Lalh;	aW	DATA_LINE_WIDTH_ID
	f	Lalh;	aX	DATA_BACKGROUND_COLOR_ID
	f	Lalh;	aY	DATA_TEXT_OPACITY_ID
	f	Lalh;	aZ	DATA_STYLE_FLAGS_ID
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	ba	TEXT_RENDER_STATE_IDS
	f	Lbzj$k$b;	bb	clientDisplayCache
	f	Lbzj$k$e;	bc	textRenderState
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lxo;	m	getText
	m	(Lxo;)V	a	setText
	m	()I	n	getLineWidth
	m	(I)V	b	setLineWidth
	m	()B	p	getTextOpacity
	m	(B)V	c	setTextOpacity
	m	()I	q	getBackgroundColor
	m	(I)V	c	setBackgroundColor
	m	()B	s	getFlags
	m	(B)V	d	setFlags
	m	(BLfda;Ljava/lang/String;B)B	a	loadFlag
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(BLfdc;Ljava/lang/String;B)V	a	storeFlag
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(ZF)V	a	updateRenderSubState
	m	()Lbzj$k$e;	l	textRenderState
	m	()Lbzj$k$e;	t	createFreshTextRenderState
	m	(Lbzj$k$e;F)Lbzj$k$e;	a	createInterpolatedTextRenderState
	m	(Lbzj$k$d;)Lbzj$k$b;	a	cacheDisplay
	m	(B)Lbzj$k$a;	a	getAlign
	m	()V	<clinit>	<clinit>
c	bzj$k$a	net/minecraft/world/entity/Display$TextDisplay$Align
	f	Lbzj$k$a;	a	CENTER
	f	Lbzj$k$a;	b	LEFT
	f	Lbzj$k$a;	c	RIGHT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lbzj$k$a;	f	$VALUES
	m	()[Lbzj$k$a;	values	values
	m	(Ljava/lang/String;)Lbzj$k$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lbzj$k$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bzj$k$b	net/minecraft/world/entity/Display$TextDisplay$CachedInfo
	f	Ljava/util/List;	a	lines
	f	I	b	width
	m	(Ljava/util/List;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	lines
	m	()I	b	width
c	bzj$k$c	net/minecraft/world/entity/Display$TextDisplay$CachedLine
	f	Lbbm;	a	contents
	f	I	b	width
	m	(Lbbm;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbbm;	a	contents
	m	()I	b	width
c	bzj$k$d	net/minecraft/world/entity/Display$TextDisplay$LineSplitter
	m	(Lxo;I)Lbzj$k$b;	split	split
c	bzj$k$e	net/minecraft/world/entity/Display$TextDisplay$TextRenderState
	f	Lxo;	a	text
	f	I	b	lineWidth
	f	Lbzj$f;	c	textOpacity
	f	Lbzj$f;	d	backgroundColor
	f	B	e	flags
	m	(Lxo;ILbzj$f;Lbzj$f;B)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	text
	m	()I	b	lineWidth
	m	()Lbzj$f;	c	textOpacity
	m	()Lbzj$f;	d	backgroundColor
	m	()B	e	flags
c	bzj$l	net/minecraft/world/entity/Display$TransformationInterpolator
	f	Lk;	a	previous
	f	Lk;	b	current
	m	(Lk;Lk;)V	<init>	<init>
	m	(F)Lk;	a	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lk;	a	previous
	m	()Lk;	b	current
	m	(F)Ljava/lang/Object;	get	get
c	bzk	net/minecraft/world/entity/DropChances
	f	Ljava/util/Map;	f	byEquipment
	f	F	a	DEFAULT_EQUIPMENT_DROP_CHANCE
	f	F	b	PRESERVE_ITEM_DROP_CHANCE_THRESHOLD
	f	I	c	PRESERVE_ITEM_DROP_CHANCE
	f	Lbzk;	d	DEFAULT
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/util/Map;)Ljava/util/Map;	a	filterDefaultValues
	m	(Ljava/util/Map;)Ljava/util/Map;	b	toEnumMap
	m	(Lbzw;)Lbzk;	a	withGuaranteedDrop
	m	(Lbzw;F)Lbzk;	a	withEquipmentChance
	m	(Lbzw;)F	b	byEquipment
	m	(Lbzw;)Z	c	isPreserved
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	byEquipment
	m	(Lbzw;FLbzw;)Ljava/lang/Float;	a	lambda$withEquipmentChance$3
	m	(Ljava/util/Map;Lbzw;)Ljava/lang/Float;	a	lambda$toEnumMap$2
	m	(Ljava/lang/Float;)Z	a	lambda$filterDefaultValues$1
	m	(Lbzw;)Ljava/lang/Float;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzl	net/minecraft/world/entity/ElytraAnimationState
	f	F	a	DEFAULT_X_ROT
	f	F	b	DEFAULT_Z_ROT
	f	F	c	rotX
	f	F	d	rotY
	f	F	e	rotZ
	f	F	f	rotXOld
	f	F	g	rotYOld
	f	F	h	rotZOld
	f	Lcam;	i	entity
	m	(Lcam;)V	<init>	<init>
	m	()V	a	tick
	m	(F)F	a	getRotX
	m	(F)F	b	getRotY
	m	(F)F	c	getRotZ
c	bzm	net/minecraft/world/entity/Entity
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	v	TAG_ID
	f	Ljava/lang/String;	w	TAG_UUID
	f	Ljava/lang/String;	x	TAG_PASSENGERS
	f	Ljava/lang/String;	y	TAG_DATA
	f	Ljava/lang/String;	z	TAG_POS
	f	Ljava/lang/String;	A	TAG_MOTION
	f	Ljava/lang/String;	B	TAG_ROTATION
	f	Ljava/lang/String;	C	TAG_PORTAL_COOLDOWN
	f	Ljava/lang/String;	D	TAG_NO_GRAVITY
	f	Ljava/lang/String;	E	TAG_AIR
	f	Ljava/lang/String;	F	TAG_ON_GROUND
	f	Ljava/lang/String;	G	TAG_FALL_DISTANCE
	f	Ljava/lang/String;	H	TAG_FIRE
	f	Ljava/lang/String;	I	TAG_SILENT
	f	Ljava/lang/String;	J	TAG_GLOWING
	f	Ljava/lang/String;	K	TAG_INVULNERABLE
	f	Ljava/util/concurrent/atomic/AtomicInteger;	c	ENTITY_COUNTER
	f	I	L	CONTENTS_SLOT_INDEX
	f	I	M	BOARDING_COOLDOWN
	f	I	N	TOTAL_AIR_SUPPLY
	f	I	O	MAX_ENTITY_TAG_COUNT
	f	Lcom/mojang/serialization/Codec;	d	TAG_LIST_CODEC
	f	F	P	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2
	f	D	Q	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5
	f	D	R	DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0
	f	I	S	BASE_TICKS_REQUIRED_TO_FREEZE
	f	I	T	FREEZE_HURT_FREQUENCY
	f	I	U	BASE_SAFE_FALL_DISTANCE
	f	Lcom/google/common/collect/ImmutableList;	e	YXZ_AXIS_ORDER
	f	Lcom/google/common/collect/ImmutableList;	r	YZX_AXIS_ORDER
	f	Lfin;	s	INITIAL_AABB
	f	D	t	WATER_FLOW_SCALE
	f	D	u	LAVA_FAST_FLOW_SCALE
	f	D	aM	LAVA_SLOW_FLOW_SCALE
	f	D	aN	viewScale
	f	Lbzv;	aO	type
	f	Z	aP	requiresPrecisePosition
	f	I	aQ	id
	f	Z	V	blocksBuilding
	f	Lcom/google/common/collect/ImmutableList;	aR	passengers
	f	I	W	boardingCooldown
	f	Lbzm;	aS	vehicle
	f	Ldmu;	aT	level
	f	D	X	xo
	f	D	Y	yo
	f	D	Z	zo
	f	Lfis;	aU	position
	f	Ljb;	aV	blockPosition
	f	Ldlz;	aW	chunkPosition
	f	Lfis;	aX	deltaMovement
	f	F	aY	yRot
	f	F	aZ	xRot
	f	F	aa	yRotO
	f	F	ab	xRotO
	f	Lfin;	ba	bb
	f	Z	bb	onGround
	f	Z	ac	horizontalCollision
	f	Z	ad	verticalCollision
	f	Z	ae	verticalCollisionBelow
	f	Z	af	minorHorizontalCollision
	f	Z	ag	hurtMarked
	f	Lfis;	ah	stuckSpeedMultiplier
	f	Lbzm$e;	bc	removalReason
	f	F	ai	DEFAULT_BB_WIDTH
	f	F	aj	DEFAULT_BB_HEIGHT
	f	F	ak	moveDist
	f	F	al	flyDist
	f	D	am	fallDistance
	f	F	bd	nextStep
	f	D	an	xOld
	f	D	ao	yOld
	f	D	ap	zOld
	f	Z	aq	noPhysics
	f	Lbck;	ar	random
	f	I	as	tickCount
	f	I	be	remainingFireTicks
	f	Z	at	wasTouchingWater
	f	Lit/unimi/dsi/fastutil/objects/Object2DoubleMap;	au	fluidHeight
	f	Z	av	wasEyeInWater
	f	Ljava/util/Set;	bf	fluidOnEyes
	f	I	aw	invulnerableTime
	f	Z	ax	firstTick
	f	Lall;	ay	entityData
	f	Lalh;	az	DATA_SHARED_FLAGS_ID
	f	I	aA	FLAG_ONFIRE
	f	I	bg	FLAG_SHIFT_KEY_DOWN
	f	I	bh	FLAG_SPRINTING
	f	I	bi	FLAG_SWIMMING
	f	I	bj	FLAG_INVISIBLE
	f	I	aB	FLAG_GLOWING
	f	I	aC	FLAG_FALL_FLYING
	f	Lalh;	bk	DATA_AIR_SUPPLY_ID
	f	Lalh;	bl	DATA_CUSTOM_NAME
	f	Lalh;	bm	DATA_CUSTOM_NAME_VISIBLE
	f	Lalh;	bn	DATA_SILENT
	f	Lalh;	bo	DATA_NO_GRAVITY
	f	Lalh;	aD	DATA_POSE
	f	Lalh;	bp	DATA_TICKS_FROZEN
	f	Leih;	bq	levelCallback
	f	Lajr;	br	packetPositionCodec
	f	Z	aE	hasImpulse
	f	Lcax;	aF	portalProcess
	f	I	bs	portalCooldown
	f	Z	bt	invulnerable
	f	Ljava/util/UUID;	aG	uuid
	f	Ljava/lang/String;	aH	stringUUID
	f	Z	bu	hasGlowingTag
	f	Ljava/util/Set;	bv	tags
	f	[D	bw	pistonDeltas
	f	J	bx	pistonDeltasGameTime
	f	Lbzp;	by	dimensions
	f	F	bz	eyeHeight
	f	Z	aI	isInPowderSnow
	f	Z	aJ	wasInPowderSnow
	f	Ljava/util/Optional;	aK	mainSupportingBlockPos
	f	Z	bA	onGroundNoBlocks
	f	F	bB	crystalSoundIntensity
	f	I	bC	lastCrystalSoundPlayTick
	f	Z	bD	hasVisualFire
	f	Leeb;	bE	inBlockState
	f	I	aL	MAX_MOVEMENTS_HANDELED_PER_TICK
	f	Ljava/util/ArrayDeque;	bF	movementThisTick
	f	Ljava/util/List;	bG	finalMovementsThisTick
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	bH	visitedBlocks
	f	Lcae$a;	bI	insideEffectCollector
	f	Ldfd;	bJ	customData
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;Leeb;)Z	a	isColliding
	m	()I	m_	getTeamColor
	m	()Z	am	isSpectator
	m	()V	an	unRide
	m	(DDD)V	e	syncPacketPositionCodec
	m	()Lajr;	ao	getPositionCodec
	m	()Lbzv;	ap	getType
	m	()Z	aq	getRequiresPrecisePosition
	m	(Z)V	c	setRequiresPrecisePosition
	m	()I	ar	getId
	m	(I)V	e	setId
	m	()Ljava/util/Set;	as	getTags
	m	(Ljava/lang/String;)Z	a	addTag
	m	(Ljava/lang/String;)Z	b	removeTag
	m	(Laub;)V	c	kill
	m	()V	at	discard
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lall;	au	getEntityData
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Lbzm$e;)V	a	remove
	m	()V	av	onClientRemoval
	m	(Lbzm$e;)V	b	onRemoval
	m	(Lcay;)V	b	setPose
	m	()Lcay;	aw	getPose
	m	(Lcay;)Z	c	hasPose
	m	(Lbzm;D)Z	a	closerThan
	m	(Lbzm;DD)Z	a	closerThan
	m	(FF)V	b	setRot
	m	(Lfis;)V	b	setPos
	m	(DDD)V	a_	setPos
	m	()Lfin;	ax	makeBoundingBox
	m	(Lfis;)Lfin;	c	makeBoundingBox
	m	()V	ay	reapplyPosition
	m	(DD)V	b	turn
	m	()V	g	tick
	m	()V	az	baseTick
	m	(Z)V	d	setSharedFlagOnFire
	m	()V	aA	checkBelowWorld
	m	()V	aB	setPortalCooldown
	m	(I)V	f	setPortalCooldown
	m	()I	aC	getPortalCooldown
	m	()Z	aD	isOnPortalCooldown
	m	()V	M	processPortalCooldown
	m	()V	aE	lavaIgnite
	m	()V	aF	lavaHurt
	m	()Z	aG	shouldPlayLavaHurtSound
	m	(F)V	e	igniteForSeconds
	m	(I)V	g	igniteForTicks
	m	(I)V	h	setRemainingFireTicks
	m	()I	aH	getRemainingFireTicks
	m	()V	aI	clearFire
	m	()V	aJ	onBelowWorld
	m	(DDD)Z	f	isFree
	m	(Lfin;)Z	b	isFree
	m	(Z)V	e	setOnGround
	m	(ZLfis;)V	a	setOnGroundWithMovement
	m	(ZZLfis;)V	a	setOnGroundWithMovement
	m	(Ljb;)Z	d	isSupportedBy
	m	(ZLfis;)V	b	checkSupportingBlock
	m	()Z	aK	onGround
	m	(Lcaq;Lfis;)V	a	move
	m	(Lbzm$d;Lfis;Ljb;Leeb;)V	a	applyMovementEmissionAndPlaySound
	m	()V	aL	applyEffectsFromBlocks
	m	(Lbzm$c;)V	a	addMovementThisTick
	m	()V	aM	removeLatestMovementRecording
	m	()V	aN	clearMovementThisTick
	m	(Lfis;Lfis;)V	a	applyEffectsFromBlocks
	m	(Ljava/util/List;)V	b	applyEffectsFromBlocks
	m	()Z	aO	isAffectedByBlocks
	m	(Leeb;)Z	c	isStateClimbable
	m	(Ljb;Leeb;ZZLfis;)Z	a	vibrationAndSoundEffectsFromBlock
	m	(Lfis;)Z	d	isHorizontalCollisionMinor
	m	()V	aP	playEntityOnFireExtinguishedSound
	m	()V	aQ	extinguishFire
	m	()V	aR	processFlappingMovement
	m	()Ljb;	aS	getOnPosLegacy
	m	()Ljb;	aT	getBlockPosBelowThatAffectsMyMovement
	m	()Ljb;	aU	getOnPos
	m	(F)Ljb;	f	getOnPos
	m	()F	aV	getBlockJumpFactor
	m	()F	aW	getBlockSpeedFactor
	m	(Lfis;Lcaq;)Lfis;	a	maybeBackOffFromEdge
	m	(Lfis;)Lfis;	e	limitPistonMovement
	m	(Ljh$a;D)D	a	applyPistonMovementRestriction
	m	(Lfis;)Lfis;	a	collide
	m	(Lfin;Ljava/util/List;FF)[F	a	collectCandidateStepUpHeights
	m	(Lbzm;Lfis;Lfin;Ldmu;Ljava/util/List;)Lfis;	a	collideBoundingBox
	m	(Lbzm;Ldmu;Ljava/util/List;Lfin;)Ljava/util/List;	a	collectColliders
	m	(Lfis;Lfin;Ljava/util/List;)Lfis;	a	collideWithShapes
	m	(Lfis;)Ljava/lang/Iterable;	k	axisStepOrder
	m	()F	aX	nextStep
	m	()Layy;	aY	getSwimSound
	m	()Layy;	aZ	getSwimSplashSound
	m	()Layy;	ba	getSwimHighSpeedSplashSound
	m	(Ljava/util/List;Lcae$a;)V	a	checkInsideBlocks
	m	(Lfis;Lfis;Lcae$a;Lit/unimi/dsi/fastutil/longs/LongSet;)V	a	checkInsideBlocks
	m	(Ljb;ZZ)V	a	debugBlockIntersection
	m	(Lfal;Ljb;Lfis;Lfis;)Z	a	collidedWithFluid
	m	(Lfis;Lfis;Ljava/util/List;)Z	a	collidedWithShapeMovingFrom
	m	(Leeb;)V	a	onInsideBlock
	m	(Laub;Ljb;)Ljb;	a	adjustSpawnLocation
	m	(Ljl;Lbzm;)V	a	gameEvent
	m	(Ljl;)V	c	gameEvent
	m	(Ljb;Leeb;)V	c	walkingStepSound
	m	()V	bb	waterSwimSound
	m	(Ljb;)Ljb;	e	getPrimaryStepSoundBlockPos
	m	(Leeb;Leeb;)V	a	playCombinationStepSounds
	m	(Leeb;)V	b	playMuffledStepSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Leeb;)Z	d	shouldPlayAmethystStepSound
	m	()V	l	playAmethystStepSound
	m	(F)V	g	playSwimSound
	m	()V	bc	onFlap
	m	()Z	bd	isFlapping
	m	(Layy;FF)V	a	playSound
	m	(Layy;)V	a	playSound
	m	()Z	be	isSilent
	m	(Z)V	f	setSilent
	m	()Z	bf	isNoGravity
	m	(Z)V	g	setNoGravity
	m	()D	bg	getDefaultGravity
	m	()D	bh	getGravity
	m	()V	bi	applyGravity
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Z	bk	dampensVibrations
	m	(DDDZ)V	a	doCheckFallDamage
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	bl	fireImmune
	m	(DFLbyb;)Z	a	causeFallDamage
	m	(DFLbyb;)V	b	propagateFallToPassengers
	m	()Z	bm	isInWater
	m	()Z	bn	isInRain
	m	()Z	bo	isInWaterOrRain
	m	()Z	bp	isInLiquid
	m	()Z	bq	isUnderWater
	m	()Z	br	isInClouds
	m	()V	bs	updateSwimming
	m	()Z	bt	updateInWaterStateAndDoFluidPushing
	m	()V	bu	updateInWaterStateAndDoWaterCurrentPushing
	m	()V	I	updateFluidOnEyes
	m	()V	bv	doWaterSplashEffect
	m	()Leeb;	bw	getBlockStateOnLegacy
	m	()Leeb;	bx	getBlockStateOn
	m	()Z	by	canSpawnSprintParticle
	m	()V	bz	spawnSprintParticle
	m	(Lbae;)Z	a	isEyeInFluid
	m	()Z	bA	isInLava
	m	(FLfis;)V	a	moveRelative
	m	(Lfis;FF)Lfis;	a	getInputVector
	m	()F	bB	getLightLevelDependentMagicValue
	m	(DDDFF)V	a	absSnapTo
	m	(FF)V	c	absSnapRotationTo
	m	(DDD)V	g	absSnapTo
	m	(Lfis;)V	f	snapTo
	m	(DDD)V	d	snapTo
	m	(Ljb;FF)V	a	snapTo
	m	(Lfis;FF)V	b	snapTo
	m	(DDDFF)V	b	snapTo
	m	()V	bC	setOldPosAndRot
	m	(Lfis;FF)V	c	setOldPosAndRot
	m	()V	bD	setOldPos
	m	()V	bE	setOldRot
	m	(Lfis;)V	l	setOldPos
	m	(FF)V	f	setOldRot
	m	()Lfis;	bF	oldPosition
	m	(Lbzm;)F	f	distanceTo
	m	(DDD)D	h	distanceToSqr
	m	(Lbzm;)D	g	distanceToSqr
	m	(Lfis;)D	g	distanceToSqr
	m	(Lcut;)V	a_	playerTouch
	m	(Lbzm;)V	h	push
	m	(Lfis;)V	h	push
	m	(DDD)V	i	push
	m	()V	bG	markHurt
	m	(Lbyb;F)V	a	hurt
	m	(Lbyb;F)Z	b	hurtOrSimulate
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbyb;)Z	b	hurtClient
	m	(F)Lfis;	h	getViewVector
	m	()Ljh;	bH	getNearestViewDirection
	m	(F)F	i	getViewXRot
	m	(F)F	j	getViewYRot
	m	(F)F	k	getXRot
	m	(F)F	l	getYRot
	m	(FF)Lfis;	d	calculateViewVector
	m	(F)Lfis;	m	getUpVector
	m	(FF)Lfis;	e	calculateUpVector
	m	()Lfis;	bI	getEyePosition
	m	(F)Lfis;	n	getEyePosition
	m	(F)Lfis;	o	getLightProbePosition
	m	(F)Lfis;	p	getPosition
	m	(DFZ)Lfiq;	a	pick
	m	()Z	bJ	canBeHitByProjectile
	m	()Z	bK	isPickable
	m	()Z	bL	isPushable
	m	(Lbzm;Lbyb;)V	a	awardKillScore
	m	(DDD)Z	j	shouldRender
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lfdc;)Z	b	saveAsPassenger
	m	(Lfdc;)Z	c	save
	m	(Lfdc;)V	d	saveWithoutId
	m	(Lfda;)V	e	load
	m	()Z	bM	repositionEntityAfterLoad
	m	()Ljava/lang/String;	bN	getEncodeId
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Laub;Ldmt;)Lcqz;	a	spawnAtLocation
	m	(Laub;Ldmt;I)Lcqz;	a	spawnAtLocation
	m	(Laub;Ldcv;)Lcqz;	a	spawnAtLocation
	m	(Laub;Ldcv;Lfis;)Lcqz;	a	spawnAtLocation
	m	(Laub;Ldcv;F)Lcqz;	a	spawnAtLocation
	m	()Z	bO	isAlive
	m	()Z	bP	isInWall
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lcut;)Z	d	shearOffAllLeashConnections
	m	(Lcut;)Z	e	dropAllLeashConnections
	m	(Lcut;Lbxi;Ldcv;Lcao;)Z	a	attemptToShearEquipment
	m	(Lbzm;)Z	i	canCollideWith
	m	(Lbzm;)Z	j	canBeCollidedWith
	m	()V	r	rideTick
	m	(Lbzm;)V	k	positionRider
	m	(Lbzm;Lbzm$b;)V	a	positionRider
	m	(Lbzm;)V	l	onPassengerTurned
	m	(Lbzm;)Lfis;	m	getVehicleAttachmentPoint
	m	(Lbzm;)Lfis;	n	getPassengerRidingPosition
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	(Lbzm;Lbzm;Lbzo;)Lfis;	a	getDefaultPassengerAttachmentPoint
	m	(Lbzm;)Z	o	startRiding
	m	()Z	bQ	showVehicleHealth
	m	(Lbzm;Z)Z	a	startRiding
	m	(Lbzm;)Z	p	canRide
	m	()V	bR	ejectPassengers
	m	()V	ab	removeVehicle
	m	()V	bS	stopRiding
	m	(Lbzm;)V	q	addPassenger
	m	(Lbzm;)V	r	removePassenger
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Z	bT	couldAcceptPassenger
	m	()Z	bU	isInterpolating
	m	(Lfis;FF)V	d	moveOrInterpolateTo
	m	()Lcah;	l_	getInterpolation
	m	(FI)V	a	lerpHeadTo
	m	()F	bV	getPickRadius
	m	()Lfis;	bW	getLookAngle
	m	(Ldcr;)Lfis;	a	getHandHoldingItemAngle
	m	()Lfir;	bX	getRotationVector
	m	()Lfis;	bY	getForward
	m	(Ldvz;Ljb;)V	a	setAsInsidePortal
	m	()V	bZ	handlePortal
	m	()I	ca	getDimensionChangingDelay
	m	(DDD)V	k	lerpMotion
	m	(Lbyb;)V	c	handleDamageEvent
	m	(B)V	b	handleEntityEvent
	m	(F)V	q	animateHurt
	m	()Z	cb	isOnFire
	m	()Z	cc	isPassenger
	m	()Z	cd	isVehicle
	m	()Z	ce	dismountsUnderwater
	m	()Z	cf	canControlVehicle
	m	(Z)V	h	setShiftKeyDown
	m	()Z	cg	isShiftKeyDown
	m	()Z	ch	isSteppingCarefully
	m	()Z	ci	isSuppressingBounce
	m	()Z	cj	isDiscrete
	m	()Z	ck	isDescending
	m	()Z	cl	isCrouching
	m	()Z	cm	isSprinting
	m	(Z)V	i	setSprinting
	m	()Z	cn	isSwimming
	m	()Z	co	isVisuallySwimming
	m	()Z	cp	isVisuallyCrawling
	m	(Z)V	j	setSwimming
	m	()Z	cq	hasGlowingTag
	m	(Z)V	k	setGlowingTag
	m	()Z	cr	isCurrentlyGlowing
	m	()Z	cs	isInvisible
	m	(Lcut;)Z	f	isInvisibleTo
	m	()Z	ct	isOnRails
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
	m	()Lfjs;	cu	getTeam
	m	(Lbzm;)Z	t	isAlliedTo
	m	(Lbzm;)Z	u	considersEntityAsAlly
	m	(Lfjz;)Z	a	isAlliedTo
	m	(Z)V	l	setInvisible
	m	(I)Z	i	getSharedFlag
	m	(IZ)V	b	setSharedFlag
	m	()I	cv	getMaxAirSupply
	m	()I	cw	getAirSupply
	m	(I)V	j	setAirSupply
	m	()V	cx	clearFreeze
	m	()I	cy	getTicksFrozen
	m	(I)V	k	setTicksFrozen
	m	()F	cz	getPercentFrozen
	m	()Z	cA	isFullyFrozen
	m	()I	cB	getTicksRequiredToFreeze
	m	(Laub;Lcal;)V	a	thunderHit
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Lbzm;ZLjb;)V	a	handleOnAboveBubbleColumn
	m	(Ldmu;Ljb;)V	a	sendBubbleColumnParticles
	m	(Z)V	m	onInsideBubbleColumn
	m	(Lbzm;Z)V	b	handleOnInsideBubbleColumn
	m	(Laub;Lcam;)Z	a	killedEntity
	m	()V	cC	checkFallDistanceAccumulation
	m	()V	j	resetFallDistance
	m	(DDD)V	l	moveTowardsClosestSpace
	m	(Leeb;Lfis;)V	a	makeStuckInBlock
	m	(Lxo;)Lxo;	a	removeAction
	m	()Lxo;	aj	getName
	m	()Lxo;	cD	getTypeName
	m	(Lbzm;)Z	v	is
	m	()F	cE	getYHeadRot
	m	(F)V	r	setYHeadRot
	m	(F)V	s	setYBodyRot
	m	()Z	cF	isAttackable
	m	(Lbzm;)Z	w	skipAttackInteraction
	m	()Ljava/lang/String;	toString	toString
	m	(Lbyb;)Z	d	isInvulnerableToBase
	m	()Z	cG	isInvulnerable
	m	(Z)V	n	setInvulnerable
	m	(Lbzm;)V	x	copyPosition
	m	(Lbzm;)V	y	restoreFrom
	m	(Lfbl;)Lbzm;	b	teleport
	m	(Laub;Lfbl;)Lbzm;	a	teleportSameDimension
	m	(Laub;Laub;Lfbl;)Lbzm;	a	teleportCrossDimension
	m	(Lfbl;Laub;)V	a	teleportSpectators
	m	(Lfbl;Lbzm;)Lfbl;	a	calculatePassengerTransition
	m	(Lfbl;)V	a	sendTeleportTransitionToRidingPlayers
	m	(Lcaz;Ljava/util/Set;)V	a	teleportSetPosition
	m	(FF)V	a	forceSetRotation
	m	(Ljb;)V	f	placePortalTicket
	m	()V	cH	removeAfterChangingDimensions
	m	(Ljh$a;Lm$a;)Lfis;	a	getRelativePortalPosition
	m	(Z)Z	o	canUsePortal
	m	(Ldmu;Ldmu;)Z	a	canTeleport
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;F)F	a	getBlockExplosionResistance
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	()I	cI	getMaxFallDistance
	m	()Z	n_	isIgnoringBlockTriggers
	m	(Lq;)V	a	fillCrashReportCategory
	m	()Z	cJ	displayFireAnimation
	m	(Ljava/util/UUID;)V	a_	setUUID
	m	()Ljava/util/UUID;	cK	getUUID
	m	()Ljava/lang/String;	cL	getStringUUID
	m	()Ljava/lang/String;	cM	getScoreboardName
	m	()Z	cN	isPushedByFluid
	m	()D	cO	getViewScale
	m	(D)V	b	setViewScale
	m	()Lxo;	Q_	getDisplayName
	m	(Lxo;)V	b	setCustomName
	m	()Lxo;	al	getCustomName
	m	()Z	i_	hasCustomName
	m	(Z)V	p	setCustomNameVisible
	m	()Z	cP	isCustomNameVisible
	m	(Laub;DDDLjava/util/Set;FFZ)Z	a	teleportTo
	m	(DDD)V	m	dismountTo
	m	(DDD)V	b	teleportTo
	m	()V	J	teleportPassengers
	m	(DDD)V	c	teleportRelative
	m	()Z	cQ	shouldShowName
	m	(Ljava/util/List;)V	a	onSyncedDataUpdated
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	cR	fixupDimensions
	m	()V	j_	refreshDimensions
	m	(Lbzp;)Z	a	fudgePositionAfterSizeChange
	m	()Ljh;	cS	getDirection
	m	()Ljh;	cT	getMotionDirection
	m	()Lxu;	cU	createHoverEvent
	m	(Lauc;)Z	a	broadcastToPlayer
	m	()Lfin;	cV	getBoundingBox
	m	(Lfin;)V	a	setBoundingBox
	m	(Lcay;)F	d	getEyeHeight
	m	()F	cW	getEyeHeight
	m	(I)Lcbd;	a_	getSlot
	m	()Lnet/minecraft/server/MinecraftServer;	cX	getServer
	m	(Lcut;Lfis;Lbxi;)Lbxj;	a	interactAt
	m	(Ldmn;)Z	a	ignoreExplosion
	m	(Lauc;)V	d	startSeenByPlayer
	m	(Lauc;)V	e	stopSeenByPlayer
	m	(Ldwu;)F	a	rotate
	m	(Ldvd;)F	a	mirror
	m	(Lcvo;)Lcvp;	a	deflection
	m	()Lcam;	cY	getControllingPassenger
	m	()Z	cZ	hasControllingPassenger
	m	()Ljava/util/List;	da	getPassengers
	m	()Lbzm;	db	getFirstPassenger
	m	(Lbzm;)Z	z	hasPassenger
	m	(Ljava/util/function/Predicate;)Z	a	hasPassenger
	m	()Ljava/util/stream/Stream;	K	getIndirectPassengersStream
	m	()Ljava/util/stream/Stream;	dc	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	dd	getPassengersAndSelf
	m	()Ljava/lang/Iterable;	de	getIndirectPassengers
	m	()I	df	countPlayerPassengers
	m	()Z	dg	hasExactlyOnePlayerPassenger
	m	()Lbzm;	dh	getRootVehicle
	m	(Lbzm;)Z	A	isPassengerOfSameVehicle
	m	(Lbzm;)Z	B	hasIndirectPassenger
	m	()Z	di	isLocalInstanceAuthoritative
	m	()Z	dj	isLocalClientAuthoritative
	m	()Z	aa_	isClientAuthoritative
	m	()Z	dk	canSimulateMovement
	m	()Z	dl	isEffectiveAi
	m	(DDF)Lfis;	a	getCollisionHorizontalEscapeVector
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	()Lbzm;	dm	getVehicle
	m	()Lbzm;	dn	getControlledVehicle
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Laza;	do	getSoundSource
	m	()I	dp	getFireImmuneTicks
	m	(Laub;)Lek;	d	createCommandSourceStackForNameResolution
	m	(Lex$a;Lfis;)V	a	lookAt
	m	(F)F	t	getPreciseBodyRotation
	m	(Lbae;D)Z	a	updateFluidHeightAndDoFluidPushing
	m	()Z	dq	touchingUnloadedChunk
	m	(Lbae;)D	b	getFluidHeight
	m	()D	dr	getFluidJumpThreshold
	m	()F	ds	getBbWidth
	m	()F	dt	getBbHeight
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lcay;)Lbzp;	a	getDimensions
	m	()Lbzo;	du	getAttachments
	m	()Lfis;	dv	position
	m	()Lfis;	dw	trackingPosition
	m	()Ljb;	dx	blockPosition
	m	()Leeb;	dy	getInBlockState
	m	()Ldlz;	dz	chunkPosition
	m	()Lfis;	dA	getDeltaMovement
	m	(Lfis;)V	i	setDeltaMovement
	m	(Lfis;)V	j	addDeltaMovement
	m	(DDD)V	n	setDeltaMovement
	m	()I	dB	getBlockX
	m	()D	dC	getX
	m	(D)D	c	getX
	m	(D)D	d	getRandomX
	m	()I	dD	getBlockY
	m	()D	dE	getY
	m	(D)D	e	getY
	m	()D	dF	getRandomY
	m	()D	dG	getEyeY
	m	()I	dH	getBlockZ
	m	()D	dI	getZ
	m	(D)D	f	getZ
	m	(D)D	g	getRandomZ
	m	(DDD)V	o	setPosRaw
	m	()V	dJ	checkDespawn
	m	()[Lfis;	dK	getQuadLeashHolderOffsets
	m	()Z	dL	supportQuadLeashAsHolder
	m	(Lcak;)V	a	notifyLeashHolder
	m	(Lcak;)V	b	notifyLeasheeRemoved
	m	(F)Lfis;	u	getRopeHoldPosition
	m	(Lacr;)V	a	recreateFromPacket
	m	()Ldcv;	dM	getPickResult
	m	(Z)V	q	setIsInPowderSnow
	m	()Z	dN	canFreeze
	m	()Z	dO	isFreezing
	m	()F	dP	getYRot
	m	()F	dQ	getVisualRotationYInDegrees
	m	(F)V	v	setYRot
	m	()F	dR	getXRot
	m	(F)V	w	setXRot
	m	()Z	dS	canSprint
	m	()F	dT	maxUpStep
	m	(Lbzm;)V	a	onExplosionHit
	m	()Z	dU	isRemoved
	m	()Lbzm$e;	dV	getRemovalReason
	m	(Lbzm$e;)V	c	setRemoved
	m	()V	dW	unsetRemoved
	m	(Leih;)V	a	setLevelCallback
	m	()Z	dX	shouldBeSaved
	m	()Z	dY	isAlwaysTicking
	m	(Laub;Ljb;)Z	c	mayInteract
	m	()Z	dZ	isFlyingVehicle
	m	()Ldmu;	ai	level
	m	(Ldmu;)V	a	setLevel
	m	()Lbyc;	ea	damageSources
	m	()Ljz;	eb	registryAccess
	m	(IDDDDD)V	a	lerpPositionAndRotationStep
	m	()Lbck;	ec	getRandom
	m	()Lfis;	ae	getKnownMovement
	m	()Ldcv;	ed	getWeaponItem
	m	()Ljava/util/Optional;	ee	getLootTable
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Ldcv;)V	c	applyComponentsFromItemStack
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	c	castComponentValue
	m	(Lkp;Ljava/lang/Object;)V	d	setComponent
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Lkl;Lkp;)Z	a	applyImplicitComponentIfPresent
	m	()Lbci$f;	ef	problemPath
	m	(Lbzm;)Z	C	lambda$countPlayerPassengers$15
	m	()Ljava/util/Iterator;	L	lambda$getIndirectPassengers$14
	m	(Lbzm;)V	D	lambda$teleportPassengers$13
	m	(Lyl;)Lyl;	a	lambda$getDisplayName$12
	m	()Ljava/lang/String;	N	lambda$fillCrashReportCategory$11
	m	()Ljava/lang/String;	O	lambda$fillCrashReportCategory$10
	m	()Ljava/lang/String;	P	lambda$fillCrashReportCategory$9
	m	()Ljava/lang/String;	Q	lambda$fillCrashReportCategory$8
	m	(Lbzm;Lbzm;)Z	a	lambda$removePassenger$7
	m	(Lbzm;)V	E	lambda$startRiding$6
	m	(Lbzm;)Z	F	lambda$startRiding$5
	m	(Lcut;Lcak;)Z	a	lambda$interact$4
	m	(Lfin;Ljb;)Z	a	lambda$isInWall$3
	m	(Ljava/util/UUID;)V	b	lambda$load$2
	m	(Ljb;)Leeb;	a	lambda$checkFallDamage$1
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lfis;Lfis;Lcae$a;Ljb;I)Z	a	lambda$checkInsideBlocks$0
	m	()V	<clinit>	<clinit>
c	bzm$1	net/minecraft/world/entity/Entity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	bzm$a	net/minecraft/world/entity/Entity$EntityPathElement
	f	Lbzm;	a	entity
	m	(Lbzm;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzm;	a	entity
c	bzm$b	net/minecraft/world/entity/Entity$MoveFunction
	m	(Lbzm;DDD)V	accept	accept
c	bzm$c	net/minecraft/world/entity/Entity$Movement
	f	Lfis;	a	from
	f	Lfis;	b	to
	f	Z	c	axisIndependant
	m	(Lfis;Lfis;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	from
	m	()Lfis;	b	to
	m	()Z	c	axisIndependant
c	bzm$d	net/minecraft/world/entity/Entity$MovementEmission
	f	Lbzm$d;	a	NONE
	f	Lbzm$d;	b	SOUNDS
	f	Lbzm$d;	c	EVENTS
	f	Lbzm$d;	d	ALL
	f	Z	e	sounds
	f	Z	f	events
	f	[Lbzm$d;	g	$VALUES
	m	()[Lbzm$d;	values	values
	m	(Ljava/lang/String;)Lbzm$d;	valueOf	valueOf
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
	m	()Z	a	emitsAnything
	m	()Z	b	emitsEvents
	m	()Z	c	emitsSounds
	m	()[Lbzm$d;	d	$values
	m	()V	<clinit>	<clinit>
c	bzm$e	net/minecraft/world/entity/Entity$RemovalReason
	f	Lbzm$e;	a	KILLED
	f	Lbzm$e;	b	DISCARDED
	f	Lbzm$e;	c	UNLOADED_TO_CHUNK
	f	Lbzm$e;	d	UNLOADED_WITH_PLAYER
	f	Lbzm$e;	e	CHANGED_DIMENSION
	f	Z	f	destroy
	f	Z	g	save
	f	[Lbzm$e;	h	$VALUES
	m	()[Lbzm$e;	values	values
	m	(Ljava/lang/String;)Lbzm$e;	valueOf	valueOf
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
	m	()Z	a	shouldDestroy
	m	()Z	b	shouldSave
	m	()[Lbzm$e;	c	$values
	m	()V	<clinit>	<clinit>
c	bzn	net/minecraft/world/entity/EntityAttachment
	f	Lbzn;	a	PASSENGER
	f	Lbzn;	b	VEHICLE
	f	Lbzn;	c	NAME_TAG
	f	Lbzn;	d	WARDEN_CHEST
	f	Lbzn$a;	e	fallback
	f	[Lbzn;	f	$VALUES
	m	()[Lbzn;	values	values
	m	(Ljava/lang/String;)Lbzn;	valueOf	valueOf
	m	(Ljava/lang/String;ILbzn$a;)V	<init>	<init>
	m	(FF)Ljava/util/List;	a	createFallbackPoints
	m	()[Lbzn;	a	$values
	m	()V	<clinit>	<clinit>
c	bzn$a	net/minecraft/world/entity/EntityAttachment$Fallback
	f	Ljava/util/List;	a	ZERO
	f	Lbzn$a;	b	AT_FEET
	f	Lbzn$a;	c	AT_HEIGHT
	f	Lbzn$a;	d	AT_CENTER
	m	(FF)Ljava/util/List;	create	create
	m	(FF)Ljava/util/List;	a	lambda$static$2
	m	(FF)Ljava/util/List;	b	lambda$static$1
	m	(FF)Ljava/util/List;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzo	net/minecraft/world/entity/EntityAttachments
	f	Ljava/util/Map;	a	attachments
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(FF)Lbzo;	a	createDefault
	m	()Lbzo$a;	a	builder
	m	(FFF)Lbzo;	a	scale
	m	(Lbzn;IF)Lfis;	a	getNullable
	m	(Lbzn;IF)Lfis;	b	get
	m	(Lbzn;)Lfis;	a	getAverage
	m	(Lbzn;IF)Lfis;	c	getClamped
	m	(Lfis;F)Lfis;	a	transformPoint
	m	(FFFLbzn;)Ljava/util/List;	a	lambda$scale$0
c	bzo$a	net/minecraft/world/entity/EntityAttachments$Builder
	f	Ljava/util/Map;	a	attachments
	m	()V	<init>	<init>
	m	(Lbzn;FFF)Lbzo$a;	a	attach
	m	(Lbzn;Lfis;)Lbzo$a;	a	attach
	m	(FF)Lbzo;	a	build
	m	(FFLbzn;)Ljava/util/List;	a	lambda$build$1
	m	(Lbzn;)Ljava/util/List;	a	lambda$attach$0
c	bzp	net/minecraft/world/entity/EntityDimensions
	f	F	a	width
	f	F	b	height
	f	F	c	eyeHeight
	f	Lbzo;	d	attachments
	f	Z	e	fixed
	m	(FFZ)V	<init>	<init>
	m	(FFFLbzo;Z)V	<init>	<init>
	m	(F)F	c	defaultEyeHeight
	m	(Lfis;)Lfin;	a	makeBoundingBox
	m	(DDD)Lfin;	a	makeBoundingBox
	m	(F)Lbzp;	a	scale
	m	(FF)Lbzp;	a	scale
	m	(FF)Lbzp;	b	scalable
	m	(FF)Lbzp;	c	fixed
	m	(F)Lbzp;	b	withEyeHeight
	m	(Lbzo$a;)Lbzp;	a	withAttachments
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	width
	m	()F	b	height
	m	()F	c	eyeHeight
	m	()Lbzo;	d	attachments
	m	()Z	e	fixed
c	bzq	net/minecraft/world/entity/EntityEquipment
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/EnumMap;	b	items
	m	(Ljava/util/EnumMap;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Lbzw;Ldcv;)Ldcv;	a	set
	m	(Lbzw;)Ldcv;	a	get
	m	()Z	a	isEmpty
	m	(Lbzm;)V	a	tick
	m	(Lbzq;)V	a	setAll
	m	(Lcam;)V	a	dropAll
	m	()V	b	clear
	m	(Lbzw;Ldcv;)Ldcv;	b	lambda$clear$2
	m	(Lbzq;)Ljava/util/Map;	b	lambda$static$1
	m	(Ljava/util/Map;)Lbzq;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzr	net/minecraft/world/entity/EntityEvent
	f	B	a	JUMP
	f	B	b	DEATH
	f	B	c	START_ATTACKING
	f	B	d	STOP_ATTACKING
	f	B	e	TAMING_FAILED
	f	B	f	TAMING_SUCCEEDED
	f	B	g	SHAKE_WETNESS
	f	B	h	USE_ITEM_COMPLETE
	f	B	i	EAT_GRASS
	f	B	j	OFFER_FLOWER
	f	B	k	LOVE_HEARTS
	f	B	l	VILLAGER_ANGRY
	f	B	m	VILLAGER_HAPPY
	f	B	n	WITCH_HAT_MAGIC
	f	B	o	ZOMBIE_CONVERTING
	f	B	p	FIREWORKS_EXPLODE
	f	B	q	IN_LOVE_HEARTS
	f	B	r	SQUID_ANIM_SYNCH
	f	B	s	SILVERFISH_MERGE_ANIM
	f	B	t	GUARDIAN_ATTACK_SOUND
	f	B	u	REDUCED_DEBUG_INFO
	f	B	v	FULL_DEBUG_INFO
	f	B	w	PERMISSION_LEVEL_ALL
	f	B	x	PERMISSION_LEVEL_MODERATORS
	f	B	y	PERMISSION_LEVEL_GAMEMASTERS
	f	B	z	PERMISSION_LEVEL_ADMINS
	f	B	A	PERMISSION_LEVEL_OWNERS
	f	B	B	FISHING_ROD_REEL_IN
	f	B	C	ARMORSTAND_WOBBLE
	f	B	D	STOP_OFFER_FLOWER
	f	B	E	PROTECTED_FROM_DEATH
	f	B	F	DOLPHIN_LOOKING_FOR_TREASURE
	f	B	G	RAVAGER_STUNNED
	f	B	H	TRUSTING_FAILED
	f	B	I	TRUSTING_SUCCEEDED
	f	B	J	VILLAGER_SWEAT
	f	B	K	FOX_EAT
	f	B	L	TELEPORT
	f	B	M	MAINHAND_BREAK
	f	B	N	OFFHAND_BREAK
	f	B	O	HEAD_BREAK
	f	B	P	CHEST_BREAK
	f	B	Q	LEGS_BREAK
	f	B	R	FEET_BREAK
	f	B	S	HONEY_SLIDE
	f	B	T	HONEY_JUMP
	f	B	U	SWAP_HANDS
	f	B	V	CANCEL_SHAKE_WETNESS
	f	B	W	START_RAM
	f	B	X	END_RAM
	f	B	Y	POOF
	f	B	Z	TENDRILS_SHIVER
	f	B	aa	SONIC_CHARGE
	f	B	ab	SNIFFER_DIGGING_SOUND
	f	B	ac	ARMADILLO_PEEK
	f	B	ad	BODY_BREAK
	f	B	ae	SHAKE
	f	B	af	DROWN_PARTICLES
	f	B	ag	SADDLE_BREAK
	f	B	ah	RAVAGER_ROARED
	m	()V	<init>	<init>
c	bzs	net/minecraft/world/entity/EntityReference
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	entity
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Leiu;)V	<init>	<init>
	m	(Ljava/util/UUID;)V	<init>	<init>
	m	()Ljava/util/UUID;	c	getUUID
	m	(Leit;Ljava/lang/Class;)Leiu;	a	getEntity
	m	(Leiu;Ljava/lang/Class;)Leiu;	a	resolve
	m	(Leiu;)Z	a	matches
	m	(Lfdc;Ljava/lang/String;)V	a	store
	m	(Lbzs;Lfdc;Ljava/lang/String;)V	a	store
	m	(Lbzs;Leit;Ljava/lang/Class;)Leiu;	a	get
	m	(Lfda;Ljava/lang/String;)Lbzs;	a	read
	m	(Lfda;Ljava/lang/String;Ldmu;)Lbzs;	a	readWithOldOwnerConversion
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Ldmu;Ljava/lang/String;)Ljava/util/UUID;	a	lambda$readWithOldOwnerConversion$1
	m	(Ljava/util/UUID;)Ljava/util/UUID;	a	lambda$getUUID$0
	m	()V	<clinit>	<clinit>
c	bzt	net/minecraft/world/entity/EntitySelector
	f	Ljava/util/function/Predicate;	a	ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	b	LIVING_ENTITY_STILL_ALIVE
	f	Ljava/util/function/Predicate;	c	ENTITY_NOT_BEING_RIDDEN
	f	Ljava/util/function/Predicate;	d	CONTAINER_ENTITY_SELECTOR
	f	Ljava/util/function/Predicate;	e	NO_CREATIVE_OR_SPECTATOR
	f	Ljava/util/function/Predicate;	f	NO_SPECTATORS
	f	Ljava/util/function/Predicate;	g	CAN_BE_COLLIDED_WITH
	f	Ljava/util/function/Predicate;	h	CAN_BE_PICKED
	m	()V	<init>	<init>
	m	(DDDD)Ljava/util/function/Predicate;	a	withinDistance
	m	(Lbzm;)Ljava/util/function/Predicate;	a	pushableBy
	m	(Lbzm;)Ljava/util/function/Predicate;	b	notRiding
	m	(Lbzm;Lbzm;)Z	a	lambda$notRiding$8
	m	(Lbzm;Lfjz;Lfjz$a;Lbzm;)Z	a	lambda$pushableBy$7
	m	(DDDDLbzm;)Z	a	lambda$withinDistance$6
	m	(Lbzm;)Z	c	lambda$static$5
	m	(Lbzm;)Z	d	lambda$static$4
	m	(Lbzm;)Z	e	lambda$static$3
	m	(Lbzm;)Z	f	lambda$static$2
	m	(Lbzm;)Z	g	lambda$static$1
	m	(Lbzm;)Z	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzu	net/minecraft/world/entity/EntitySpawnReason
	f	Lbzu;	a	NATURAL
	f	Lbzu;	b	CHUNK_GENERATION
	f	Lbzu;	c	SPAWNER
	f	Lbzu;	d	STRUCTURE
	f	Lbzu;	e	BREEDING
	f	Lbzu;	f	MOB_SUMMONED
	f	Lbzu;	g	JOCKEY
	f	Lbzu;	h	EVENT
	f	Lbzu;	i	CONVERSION
	f	Lbzu;	j	REINFORCEMENT
	f	Lbzu;	k	TRIGGERED
	f	Lbzu;	l	BUCKET
	f	Lbzu;	m	SPAWN_ITEM_USE
	f	Lbzu;	n	COMMAND
	f	Lbzu;	o	DISPENSER
	f	Lbzu;	p	PATROL
	f	Lbzu;	q	TRIAL_SPAWNER
	f	Lbzu;	r	LOAD
	f	Lbzu;	s	DIMENSION_TRAVEL
	f	[Lbzu;	t	$VALUES
	m	()[Lbzu;	values	values
	m	(Ljava/lang/String;)Lbzu;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lbzu;)Z	a	isSpawner
	m	(Lbzu;)Z	b	ignoresLightRequirements
	m	()[Lbzu;	a	$values
	m	()V	<clinit>	<clinit>
c	bzv	net/minecraft/world/entity/EntityType
	f	Lorg/slf4j/Logger;	bX	LOGGER
	f	Ljl$c;	bY	builtInRegistryHolder
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	bZ	MAGIC_HORSE_WIDTH
	f	I	ca	DISPLAY_TRACKING_RANGE
	f	Lbzv;	b	ACACIA_BOAT
	f	Lbzv;	c	ACACIA_CHEST_BOAT
	f	Lbzv;	d	ALLAY
	f	Lbzv;	e	AREA_EFFECT_CLOUD
	f	Lbzv;	f	ARMADILLO
	f	Lbzv;	g	ARMOR_STAND
	f	Lbzv;	h	ARROW
	f	Lbzv;	i	AXOLOTL
	f	Lbzv;	j	BAMBOO_CHEST_RAFT
	f	Lbzv;	k	BAMBOO_RAFT
	f	Lbzv;	l	BAT
	f	Lbzv;	m	BEE
	f	Lbzv;	n	BIRCH_BOAT
	f	Lbzv;	o	BIRCH_CHEST_BOAT
	f	Lbzv;	p	BLAZE
	f	Lbzv;	q	BLOCK_DISPLAY
	f	Lbzv;	r	BOGGED
	f	Lbzv;	s	BREEZE
	f	Lbzv;	t	BREEZE_WIND_CHARGE
	f	Lbzv;	u	CAMEL
	f	Lbzv;	v	CAT
	f	Lbzv;	w	CAVE_SPIDER
	f	Lbzv;	x	CHERRY_BOAT
	f	Lbzv;	y	CHERRY_CHEST_BOAT
	f	Lbzv;	z	CHEST_MINECART
	f	Lbzv;	A	CHICKEN
	f	Lbzv;	B	COD
	f	Lbzv;	C	COMMAND_BLOCK_MINECART
	f	Lbzv;	D	COW
	f	Lbzv;	E	CREAKING
	f	Lbzv;	F	CREEPER
	f	Lbzv;	G	DARK_OAK_BOAT
	f	Lbzv;	H	DARK_OAK_CHEST_BOAT
	f	Lbzv;	I	DOLPHIN
	f	Lbzv;	J	DONKEY
	f	Lbzv;	K	DRAGON_FIREBALL
	f	Lbzv;	L	DROWNED
	f	Lbzv;	M	EGG
	f	Lbzv;	N	ELDER_GUARDIAN
	f	Lbzv;	O	ENDERMAN
	f	Lbzv;	P	ENDERMITE
	f	Lbzv;	Q	ENDER_DRAGON
	f	Lbzv;	R	ENDER_PEARL
	f	Lbzv;	S	END_CRYSTAL
	f	Lbzv;	T	EVOKER
	f	Lbzv;	U	EVOKER_FANGS
	f	Lbzv;	V	EXPERIENCE_BOTTLE
	f	Lbzv;	W	EXPERIENCE_ORB
	f	Lbzv;	X	EYE_OF_ENDER
	f	Lbzv;	Y	FALLING_BLOCK
	f	Lbzv;	Z	FIREBALL
	f	Lbzv;	aa	FIREWORK_ROCKET
	f	Lbzv;	ab	FOX
	f	Lbzv;	ac	FROG
	f	Lbzv;	ad	FURNACE_MINECART
	f	Lbzv;	ae	GHAST
	f	Lbzv;	af	HAPPY_GHAST
	f	Lbzv;	ag	GIANT
	f	Lbzv;	ah	GLOW_ITEM_FRAME
	f	Lbzv;	ai	GLOW_SQUID
	f	Lbzv;	aj	GOAT
	f	Lbzv;	ak	GUARDIAN
	f	Lbzv;	al	HOGLIN
	f	Lbzv;	am	HOPPER_MINECART
	f	Lbzv;	an	HORSE
	f	Lbzv;	ao	HUSK
	f	Lbzv;	ap	ILLUSIONER
	f	Lbzv;	aq	INTERACTION
	f	Lbzv;	ar	IRON_GOLEM
	f	Lbzv;	as	ITEM
	f	Lbzv;	at	ITEM_DISPLAY
	f	Lbzv;	au	ITEM_FRAME
	f	Lbzv;	av	JUNGLE_BOAT
	f	Lbzv;	aw	JUNGLE_CHEST_BOAT
	f	Lbzv;	ax	LEASH_KNOT
	f	Lbzv;	ay	LIGHTNING_BOLT
	f	Lbzv;	az	LLAMA
	f	Lbzv;	aA	LLAMA_SPIT
	f	Lbzv;	aB	MAGMA_CUBE
	f	Lbzv;	aC	MANGROVE_BOAT
	f	Lbzv;	aD	MANGROVE_CHEST_BOAT
	f	Lbzv;	aE	MARKER
	f	Lbzv;	aF	MINECART
	f	Lbzv;	aG	MOOSHROOM
	f	Lbzv;	aH	MULE
	f	Lbzv;	aI	OAK_BOAT
	f	Lbzv;	aJ	OAK_CHEST_BOAT
	f	Lbzv;	aK	OCELOT
	f	Lbzv;	aL	OMINOUS_ITEM_SPAWNER
	f	Lbzv;	aM	PAINTING
	f	Lbzv;	aN	PALE_OAK_BOAT
	f	Lbzv;	aO	PALE_OAK_CHEST_BOAT
	f	Lbzv;	aP	PANDA
	f	Lbzv;	aQ	PARROT
	f	Lbzv;	aR	PHANTOM
	f	Lbzv;	aS	PIG
	f	Lbzv;	aT	PIGLIN
	f	Lbzv;	aU	PIGLIN_BRUTE
	f	Lbzv;	aV	PILLAGER
	f	Lbzv;	aW	POLAR_BEAR
	f	Lbzv;	aX	SPLASH_POTION
	f	Lbzv;	aY	LINGERING_POTION
	f	Lbzv;	aZ	PUFFERFISH
	f	Lbzv;	ba	RABBIT
	f	Lbzv;	bb	RAVAGER
	f	Lbzv;	bc	SALMON
	f	Lbzv;	bd	SHEEP
	f	Lbzv;	be	SHULKER
	f	Lbzv;	bf	SHULKER_BULLET
	f	Lbzv;	bg	SILVERFISH
	f	Lbzv;	bh	SKELETON
	f	Lbzv;	bi	SKELETON_HORSE
	f	Lbzv;	bj	SLIME
	f	Lbzv;	bk	SMALL_FIREBALL
	f	Lbzv;	bl	SNIFFER
	f	Lbzv;	bm	SNOWBALL
	f	Lbzv;	bn	SNOW_GOLEM
	f	Lbzv;	bo	SPAWNER_MINECART
	f	Lbzv;	bp	SPECTRAL_ARROW
	f	Lbzv;	bq	SPIDER
	f	Lbzv;	br	SPRUCE_BOAT
	f	Lbzv;	bs	SPRUCE_CHEST_BOAT
	f	Lbzv;	bt	SQUID
	f	Lbzv;	bu	STRAY
	f	Lbzv;	bv	STRIDER
	f	Lbzv;	bw	TADPOLE
	f	Lbzv;	bx	TEXT_DISPLAY
	f	Lbzv;	by	TNT
	f	Lbzv;	bz	TNT_MINECART
	f	Lbzv;	bA	TRADER_LLAMA
	f	Lbzv;	bB	TRIDENT
	f	Lbzv;	bC	TROPICAL_FISH
	f	Lbzv;	bD	TURTLE
	f	Lbzv;	bE	VEX
	f	Lbzv;	bF	VILLAGER
	f	Lbzv;	bG	VINDICATOR
	f	Lbzv;	bH	WANDERING_TRADER
	f	Lbzv;	bI	WARDEN
	f	Lbzv;	bJ	WIND_CHARGE
	f	Lbzv;	bK	WITCH
	f	Lbzv;	bL	WITHER
	f	Lbzv;	bM	WITHER_SKELETON
	f	Lbzv;	bN	WITHER_SKULL
	f	Lbzv;	bO	WOLF
	f	Lbzv;	bP	ZOGLIN
	f	Lbzv;	bQ	ZOMBIE
	f	Lbzv;	bR	ZOMBIE_HORSE
	f	Lbzv;	bS	ZOMBIE_VILLAGER
	f	Lbzv;	bT	ZOMBIFIED_PIGLIN
	f	Lbzv;	bU	PLAYER
	f	Lbzv;	bV	FISHING_BOBBER
	f	Ljava/util/Set;	cb	OP_ONLY_CUSTOM_DATA
	f	Lbzv$b;	cc	factory
	f	Lcap;	cd	category
	f	Lcom/google/common/collect/ImmutableSet;	ce	immuneTo
	f	Z	cf	serialize
	f	Z	cg	summon
	f	Z	ch	fireImmune
	f	Z	ci	canSpawnFarFromPlayer
	f	I	cj	clientTrackingRange
	f	I	ck	updateInterval
	f	Ljava/lang/String;	cl	descriptionId
	f	Lxo;	cm	description
	f	Ljava/util/Optional;	cn	lootTable
	f	Lbzp;	co	dimensions
	f	F	cp	spawnDimensionsScale
	f	Lcyd;	cq	requiredFeatures
	m	(Lamd;Lbzv$a;)Lbzv;	a	register
	m	(Ljava/lang/String;)Lamd;	b	vanillaEntityId
	m	(Ljava/lang/String;Lbzv$a;)Lbzv;	a	register
	m	(Lbzv;)Lame;	a	getKey
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byString
	m	(Lbzv$b;Lcap;ZZZZLcom/google/common/collect/ImmutableSet;Lbzp;FIILjava/lang/String;Ljava/util/Optional;Lcyd;)V	<init>	<init>
	m	(Laub;Ldcv;Lcam;Ljb;Lbzu;ZZ)Lbzm;	a	spawn
	m	(Ldmu;Ldcv;Lcam;)Ljava/util/function/Consumer;	a	createDefaultStackConfig
	m	(Ljava/util/function/Consumer;Ldmu;Ldcv;Lcam;)Ljava/util/function/Consumer;	a	appendDefaultStackConfig
	m	(Ljava/util/function/Consumer;Ldcv;)Ljava/util/function/Consumer;	a	appendComponentsConfig
	m	(Ljava/util/function/Consumer;Ldmu;Ldcv;Lcam;)Ljava/util/function/Consumer;	b	appendCustomEntityStackConfig
	m	(Laub;Ljb;Lbzu;)Lbzm;	a	spawn
	m	(Laub;Ljava/util/function/Consumer;Ljb;Lbzu;ZZ)Lbzm;	a	spawn
	m	(Laub;Ljava/util/function/Consumer;Ljb;Lbzu;ZZ)Lbzm;	b	create
	m	(Ldmx;Ljb;ZLfin;)D	a	getYOffset
	m	(Ldmu;Lcam;Lbzm;Ldfd;)V	a	updateCustomEntityTag
	m	()Z	b	canSerialize
	m	()Z	c	canSummon
	m	()Z	d	fireImmune
	m	()Z	e	canSpawnFarFromPlayer
	m	()Lcap;	f	getCategory
	m	()Ljava/lang/String;	g	getDescriptionId
	m	()Lxo;	h	getDescription
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	i	toShortString
	m	()Ljava/util/Optional;	j	getDefaultLootTable
	m	()F	l	getWidth
	m	()F	m	getHeight
	m	()Lcyd;	k	requiredFeatures
	m	(Ldmu;Lbzu;)Lbzm;	a	create
	m	(Lfda;Ldmu;Lbzu;)Ljava/util/Optional;	a	create
	m	(DDD)Lfin;	a	getSpawnAABB
	m	(Leeb;)Z	a	isBlockDangerous
	m	()Lbzp;	n	getDimensions
	m	(Lfda;)Ljava/util/Optional;	a	by
	m	(Lui;Ldmu;Lbzu;Ljava/util/function/Function;)Lbzm;	a	loadEntityRecursive
	m	(Lfda;Ldmu;Lbzu;Ljava/util/function/Function;)Lbzm;	a	loadEntityRecursive
	m	(Lfda$b;Ldmu;Lbzu;)Ljava/util/stream/Stream;	a	loadEntitiesRecursive
	m	(Lfda;Ldmu;Lbzu;)Ljava/util/Optional;	b	loadStaticEntity
	m	()I	o	clientTrackingRange
	m	()I	p	updateInterval
	m	()Z	q	trackDeltas
	m	(Lbae;)Z	a	is
	m	(Ljp;)Z	a	is
	m	(Lbzm;)Lbzm;	a	tryCast
	m	()Ljava/lang/Class;	a	getBaseClass
	m	()Ljl$c;	r	builtInRegistryHolder
	m	(Ljava/util/function/Supplier;)Lbzv$b;	a	boatFactory
	m	(Ljava/util/function/Supplier;)Lbzv$b;	b	chestBoatFactory
	m	(Ljava/util/function/Supplier;)Lbzv$b;	c	raftFactory
	m	(Ljava/util/function/Supplier;)Lbzv$b;	d	chestRaftFactory
	m	()Z	s	onlyOpCanSetNbt
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	m	(Ljava/util/function/Supplier;Lbzv;Ldmu;)Lcxk;	a	lambda$chestRaftFactory$33
	m	(Ljava/util/function/Supplier;Lbzv;Ldmu;)Lcxx;	b	lambda$raftFactory$32
	m	(Ljava/util/function/Supplier;Lbzv;Ldmu;)Lcxj;	c	lambda$chestBoatFactory$31
	m	(Ljava/util/function/Supplier;Lbzv;Ldmu;)Lcxi;	d	lambda$boatFactory$30
	m	(Ldmu;Lbzu;Lfda;Ljava/util/function/Consumer;)V	a	lambda$loadEntitiesRecursive$29
	m	(Ljava/util/function/Consumer;Lbzm;)Lbzm;	a	lambda$loadEntitiesRecursive$28
	m	(Lfda;Ldmu;Lbzu;Ljava/util/function/Function;Lbzm;)Lbzm;	a	lambda$loadEntityRecursive$27
	m	(Lfda;)V	b	lambda$create$26
	m	(Lfda;Lbzm;)V	a	lambda$create$25
	m	(Ldmu;Lbzu;Lbzv;)Lbzm;	a	lambda$create$24
	m	(Ldmu;Lcam;Ldfd;Lbzm;)V	a	lambda$appendCustomEntityStackConfig$23
	m	(Ldcv;Lbzm;)V	a	lambda$appendComponentsConfig$22
	m	(Lbzm;)V	b	lambda$createDefaultStackConfig$21
	m	(Lbzm;)V	c	lambda$spawn$20
	m	()Ldcr;	t	lambda$static$19
	m	()Ldcr;	u	lambda$static$18
	m	()Ldcr;	v	lambda$static$17
	m	()Ldcr;	w	lambda$static$16
	m	()Ldcr;	x	lambda$static$15
	m	()Ldcr;	y	lambda$static$14
	m	()Ldcr;	z	lambda$static$13
	m	()Ldcr;	A	lambda$static$12
	m	()Ldcr;	B	lambda$static$11
	m	()Ldcr;	C	lambda$static$10
	m	()Ldcr;	D	lambda$static$9
	m	()Ldcr;	E	lambda$static$8
	m	()Ldcr;	F	lambda$static$7
	m	()Ldcr;	G	lambda$static$6
	m	()Ldcr;	H	lambda$static$5
	m	()Ldcr;	I	lambda$static$4
	m	()Ldcr;	J	lambda$static$3
	m	()Ldcr;	K	lambda$static$2
	m	()Ldcr;	L	lambda$static$1
	m	()Ldcr;	M	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzv$a	net/minecraft/world/entity/EntityType$Builder
	f	Lbzv$b;	a	factory
	f	Lcap;	b	category
	f	Lcom/google/common/collect/ImmutableSet;	c	immuneTo
	f	Z	d	serialize
	f	Z	e	summon
	f	Z	f	fireImmune
	f	Z	g	canSpawnFarFromPlayer
	f	I	h	clientTrackingRange
	f	I	i	updateInterval
	f	Lbzp;	j	dimensions
	f	F	k	spawnDimensionsScale
	f	Lbzo$a;	l	attachments
	f	Lcyd;	m	requiredFeatures
	f	Lalw;	n	lootTable
	f	Lalw;	o	descriptionId
	m	(Lbzv$b;Lcap;)V	<init>	<init>
	m	(Lbzv$b;Lcap;)Lbzv$a;	a	of
	m	(Lcap;)Lbzv$a;	a	createNothing
	m	(FF)Lbzv$a;	a	sized
	m	(F)Lbzv$a;	a	spawnDimensionsScale
	m	(F)Lbzv$a;	b	eyeHeight
	m	([F)Lbzv$a;	a	passengerAttachments
	m	([Lfis;)Lbzv$a;	a	passengerAttachments
	m	(Lfis;)Lbzv$a;	a	vehicleAttachment
	m	(F)Lbzv$a;	c	ridingOffset
	m	(F)Lbzv$a;	d	nameTagOffset
	m	(Lbzn;FFF)Lbzv$a;	a	attach
	m	(Lbzn;Lfis;)Lbzv$a;	a	attach
	m	()Lbzv$a;	a	noSummon
	m	()Lbzv$a;	b	noSave
	m	()Lbzv$a;	c	fireImmune
	m	([Ldpz;)Lbzv$a;	a	immuneTo
	m	()Lbzv$a;	d	canSpawnFarFromPlayer
	m	(I)Lbzv$a;	a	clientTrackingRange
	m	(I)Lbzv$a;	b	updateInterval
	m	([Lcyb;)Lbzv$a;	a	requiredFeatures
	m	()Lbzv$a;	e	noLootTable
	m	(Lamd;)Lbzv;	a	build
	m	(Lbzv;Ldmu;)Lbzm;	a	lambda$createNothing$2
	m	(Lamd;)Ljava/lang/String;	b	lambda$new$1
	m	(Lamd;)Ljava/util/Optional;	c	lambda$new$0
c	bzv$b	net/minecraft/world/entity/EntityType$EntityFactory
	m	(Lbzv;Ldmu;)Lbzm;	create	create
c	bzw	net/minecraft/world/entity/EquipmentSlot
	f	Lbzw;	a	MAINHAND
	f	Lbzw;	b	OFFHAND
	f	Lbzw;	c	FEET
	f	Lbzw;	d	LEGS
	f	Lbzw;	e	CHEST
	f	Lbzw;	f	HEAD
	f	Lbzw;	g	BODY
	f	Lbzw;	h	SADDLE
	f	I	i	NO_COUNT_LIMIT
	f	Ljava/util/List;	j	VALUES
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	Lbda$a;	l	CODEC
	f	Lzm;	m	STREAM_CODEC
	f	Lbzw$a;	n	type
	f	I	o	index
	f	I	p	countLimit
	f	I	q	id
	f	Ljava/lang/String;	r	name
	f	[Lbzw;	s	$VALUES
	m	()[Lbzw;	values	values
	m	(Ljava/lang/String;)Lbzw;	valueOf	valueOf
	m	(Ljava/lang/String;ILbzw$a;IIILjava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;ILbzw$a;IILjava/lang/String;)V	<init>	<init>
	m	()Lbzw$a;	a	getType
	m	()I	b	getIndex
	m	(I)I	a	getIndex
	m	(Ldcv;)Ldcv;	a	limit
	m	()I	d	getId
	m	(I)I	b	getFilterBit
	m	()Ljava/lang/String;	e	getName
	m	()Z	f	isArmor
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	g	canIncreaseExperience
	m	(Ljava/lang/String;)Lbzw;	a	byName
	m	(Lbzw;)I	a	lambda$static$1
	m	(Lbzw;)I	b	lambda$static$0
	m	()[Lbzw;	h	$values
	m	()V	<clinit>	<clinit>
c	bzw$a	net/minecraft/world/entity/EquipmentSlot$Type
	f	Lbzw$a;	a	HAND
	f	Lbzw$a;	b	HUMANOID_ARMOR
	f	Lbzw$a;	c	ANIMAL_ARMOR
	f	Lbzw$a;	d	SADDLE
	f	[Lbzw$a;	e	$VALUES
	m	()[Lbzw$a;	values	values
	m	(Ljava/lang/String;)Lbzw$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lbzw$a;	a	$values
	m	()V	<clinit>	<clinit>
c	bzx	net/minecraft/world/entity/EquipmentSlotGroup
	f	Lbzx;	a	ANY
	f	Lbzx;	b	MAINHAND
	f	Lbzx;	c	OFFHAND
	f	Lbzx;	d	HAND
	f	Lbzx;	e	FEET
	f	Lbzx;	f	LEGS
	f	Lbzx;	g	CHEST
	f	Lbzx;	h	HEAD
	f	Lbzx;	i	ARMOR
	f	Lbzx;	j	BODY
	f	Lbzx;	k	SADDLE
	f	Ljava/util/function/IntFunction;	l	BY_ID
	f	Lcom/mojang/serialization/Codec;	m	CODEC
	f	Lzm;	n	STREAM_CODEC
	f	I	o	id
	f	Ljava/lang/String;	p	key
	f	Ljava/util/function/Predicate;	q	predicate
	f	Ljava/util/List;	r	slots
	f	[Lbzx;	s	$VALUES
	m	()[Lbzx;	values	values
	m	(Ljava/lang/String;)Lbzx;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljava/lang/String;IILjava/lang/String;Lbzw;)V	<init>	<init>
	m	(Lbzw;)Lbzx;	a	bySlot
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lbzw;)Z	b	test
	m	()Ljava/util/List;	a	slots
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Lbzw;Lbzw;)Z	a	lambda$new$4
	m	(Lbzx;)I	a	lambda$static$3
	m	(Lbzx;)I	b	lambda$static$2
	m	(Lbzw;)Z	c	lambda$static$1
	m	(Lbzw;)Z	d	lambda$static$0
	m	()[Lbzx;	b	$values
	m	()V	<clinit>	<clinit>
c	bzx$1	net/minecraft/world/entity/EquipmentSlotGroup$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
	m	()V	<clinit>	<clinit>
c	bzy	net/minecraft/world/entity/EquipmentTable
	f	Lamd;	c	lootTable
	f	Ljava/util/Map;	d	slotDropChances
	f	Lcom/mojang/serialization/Codec;	a	DROP_CHANCES_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Lamd;F)V	<init>	<init>
	m	(Lamd;Ljava/util/Map;)V	<init>	<init>
	m	(F)Ljava/util/Map;	a	createForAllSlots
	m	(Ljava/util/List;F)Ljava/util/Map;	a	createForAllSlots
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	lootTable
	m	()Ljava/util/Map;	b	slotDropChances
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Map;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$1
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/Map;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	bzz	net/minecraft/world/entity/EquipmentUser
	m	(Lbzw;Ldcv;)V	a	setItemSlot
	m	(Lbzw;)Ldcv;	a	getItemBySlot
	m	(Lbzw;F)V	a	setDropChance
	m	(Lbzy;Lfdm;)V	a	equip
	m	(Lamd;Lfdm;Ljava/util/Map;)V	a	equip
	m	(Lamd;Lfdm;JLjava/util/Map;)V	a	equip
	m	(Ldcv;Ljava/util/List;)Lbzw;	a	resolveSlot
c	caa	net/minecraft/world/entity/ExperienceOrb
	f	Lalh;	a	DATA_VALUE
	f	I	b	LIFETIME
	f	I	c	ENTITY_SCAN_PERIOD
	f	I	d	MAX_FOLLOW_DIST
	f	I	e	ORB_GROUPS_PER_AREA
	f	D	f	ORB_MERGE_DISTANCE
	f	S	g	DEFAULT_HEALTH
	f	S	h	DEFAULT_AGE
	f	S	i	DEFAULT_VALUE
	f	I	j	DEFAULT_COUNT
	f	I	k	age
	f	I	l	health
	f	I	m	count
	f	Lcut;	n	followingPlayer
	f	Lcah;	o	interpolation
	m	(Ldmu;DDDI)V	<init>	<init>
	m	(Ldmu;Lfis;Lfis;I)V	<init>	<init>
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(D)V	h	unstuckIfPossible
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	()V	i	followNearbyPlayer
	m	()Ljb;	aT	getBlockPosBelowThatAffectsMyMovement
	m	()V	l	scanForMerges
	m	(Laub;Lfis;I)V	a	award
	m	(Laub;Lfis;Lfis;I)V	a	awardWithDirection
	m	(Laub;Lfis;I)Z	b	tryMergeToExisting
	m	(Lcaa;)Z	a	canMerge
	m	(Lcaa;II)Z	a	canMerge
	m	(Lcaa;)V	b	merge
	m	()V	m	setUnderwaterMovement
	m	()V	bv	doWaterSplashEffect
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;)V	a_	playerTouch
	m	(Lauc;I)I	a	repairPlayerItems
	m	()I	e	getValue
	m	(I)V	c	setValue
	m	()I	f	getIcon
	m	(I)I	b	getExperienceValue
	m	()Z	cF	isAttackable
	m	()Laza;	do	getSoundSource
	m	()Lcah;	l_	getInterpolation
	m	(IILcaa;)Z	a	lambda$tryMergeToExisting$1
	m	(Lfis;)V	a	lambda$unstuckIfPossible$0
	m	()V	<clinit>	<clinit>
c	cab	net/minecraft/world/entity/GlowSquid
	f	Lalh;	cs	DATA_DARK_TICKS_REMAINING
	f	I	ct	DEFAULT_DARK_TICKS_REMAINING
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lmc;	m	getInkParticle
	m	(Lall$a;)V	a	defineSynchedData
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Layy;	n	getSquirtSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	e_	aiStep
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(I)V	s	setDarkTicks
	m	()I	t	getDarkTicksRemaining
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkGlowSquidSpawnRules
	m	()V	<clinit>	<clinit>
c	cac	net/minecraft/world/entity/HasCustomInventoryScreen
	m	(Lcut;)V	b	openCustomInventoryScreen
c	cad	net/minecraft/world/entity/HumanoidArm
	f	Lcad;	a	LEFT
	f	Lcad;	b	RIGHT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	name
	f	Ljava/lang/String;	g	translationKey
	f	[Lcad;	h	$VALUES
	m	()[Lcad;	values	values
	m	(Ljava/lang/String;)Lcad;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Lcad;	e	getOpposite
	m	()I	b	getId
	m	()Ljava/lang/String;	a	getKey
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcad;	f	$values
	m	()V	<clinit>	<clinit>
c	cae	net/minecraft/world/entity/InsideBlockEffectApplier
	f	Lcae;	a	NOOP
	m	(Lcaf;)V	a	apply
	m	(Lcaf;Ljava/util/function/Consumer;)V	a	runBefore
	m	(Lcaf;Ljava/util/function/Consumer;)V	b	runAfter
	m	()V	<clinit>	<clinit>
c	cae$1	net/minecraft/world/entity/InsideBlockEffectApplier$1
	m	()V	<init>	<init>
	m	(Lcaf;)V	a	apply
	m	(Lcaf;Ljava/util/function/Consumer;)V	a	runBefore
	m	(Lcaf;Ljava/util/function/Consumer;)V	b	runAfter
c	cae$a	net/minecraft/world/entity/InsideBlockEffectApplier$StepBasedCollector
	f	[Lcaf;	b	APPLY_ORDER
	f	I	c	NO_STEP
	f	Ljava/util/Set;	d	effectsInStep
	f	Ljava/util/Map;	e	beforeEffectsInStep
	f	Ljava/util/Map;	f	afterEffectsInStep
	f	Ljava/util/List;	g	finalEffects
	f	I	h	lastStep
	m	()V	<init>	<init>
	m	(I)V	a	advanceStep
	m	(Lbzm;)V	a	applyAndClear
	m	()V	a	flushStep
	m	(Lcaf;)V	a	apply
	m	(Lcaf;Ljava/util/function/Consumer;)V	a	runBefore
	m	(Lcaf;Ljava/util/function/Consumer;)V	b	runAfter
	m	(Lcaf;)Ljava/util/List;	b	lambda$new$1
	m	(Lcaf;)Ljava/util/List;	c	lambda$new$0
	m	()V	<clinit>	<clinit>
c	caf	net/minecraft/world/entity/InsideBlockEffectType
	f	Lcaf;	a	FREEZE
	f	Lcaf;	b	FIRE_IGNITE
	f	Lcaf;	c	LAVA_IGNITE
	f	Lcaf;	d	EXTINGUISH
	f	Ljava/util/function/Consumer;	e	effect
	f	[Lcaf;	f	$VALUES
	m	()[Lcaf;	values	values
	m	(Ljava/lang/String;)Lcaf;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
	m	()Ljava/util/function/Consumer;	a	effect
	m	(Lbzm;)V	a	lambda$static$0
	m	()[Lcaf;	b	$values
	m	()V	<clinit>	<clinit>
c	cag	net/minecraft/world/entity/Interaction
	f	Lalh;	a	DATA_WIDTH_ID
	f	Lalh;	b	DATA_HEIGHT_ID
	f	Lalh;	c	DATA_RESPONSE_ID
	f	Ljava/lang/String;	d	TAG_WIDTH
	f	Ljava/lang/String;	e	TAG_HEIGHT
	f	Ljava/lang/String;	f	TAG_ATTACK
	f	Ljava/lang/String;	g	TAG_INTERACTION
	f	Ljava/lang/String;	h	TAG_RESPONSE
	f	F	i	DEFAULT_WIDTH
	f	F	j	DEFAULT_HEIGHT
	f	Z	k	DEFAULT_RESPONSE
	f	Lcag$a;	l	attack
	f	Lcag$a;	m	interaction
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Z	bJ	canBeHitByProjectile
	m	()Z	bK	isPickable
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Z	n_	isIgnoringBlockTriggers
	m	(Lbzm;)Z	w	skipAttackInteraction
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	()V	g	tick
	m	()Lcam;	ak	getLastAttacker
	m	()Lcam;	e	getTarget
	m	(F)V	a	setWidth
	m	()F	f	getWidth
	m	(F)V	b	setHeight
	m	()F	i	getHeight
	m	(Z)V	a	setResponse
	m	()Z	l	getResponse
	m	()Lbzp;	m	getDimensions
	m	(Lcay;)Lbzp;	a	getDimensions
	m	(Lfis;)Lfin;	c	makeBoundingBox
	m	()V	<clinit>	<clinit>
c	cag$a	net/minecraft/world/entity/Interaction$PlayerAction
	f	Ljava/util/UUID;	b	player
	f	J	c	timestamp
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/UUID;J)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	a	player
	m	()J	b	timestamp
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cah	net/minecraft/world/entity/InterpolationHandler
	f	I	a	DEFAULT_INTERPOLATION_STEPS
	f	Lbzm;	b	entity
	f	I	c	interpolationSteps
	f	Lcah$a;	d	interpolationData
	f	Lfis;	e	previousTickPosition
	f	Lfir;	f	previousTickRot
	f	Ljava/util/function/Consumer;	g	onInterpolationStart
	m	(Lbzm;)V	<init>	<init>
	m	(Lbzm;I)V	<init>	<init>
	m	(Lbzm;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Lbzm;ILjava/util/function/Consumer;)V	<init>	<init>
	m	()Lfis;	a	position
	m	()F	b	yRot
	m	()F	c	xRot
	m	(Lfis;FF)V	a	interpolateTo
	m	()Z	d	hasActiveInterpolation
	m	(I)V	a	setInterpolationLength
	m	()V	e	interpolate
	m	()V	f	cancel
c	cah$a	net/minecraft/world/entity/InterpolationHandler$InterpolationData
	f	I	a	steps
	f	Lfis;	b	position
	f	F	c	yRot
	f	F	d	xRot
	m	(ILfis;FF)V	<init>	<init>
	m	()V	a	decrease
	m	(Lfis;)V	a	addDelta
	m	(FF)V	a	addRotation
c	cai	net/minecraft/world/entity/ItemBasedSteering
	f	I	a	MIN_BOOST_TIME
	f	I	b	MAX_BOOST_TIME
	f	Lall;	c	entityData
	f	Lalh;	d	boostTimeAccessor
	f	Z	e	boosting
	f	I	f	boostTime
	m	(Lall;Lalh;)V	<init>	<init>
	m	()V	a	onSynced
	m	(Lbck;)Z	a	boost
	m	()V	b	tickBoost
	m	()F	c	boostFactor
	m	()I	d	boostTimeTotal
c	caj	net/minecraft/world/entity/ItemSteerable
	m	()Z	a	boost
c	cak	net/minecraft/world/entity/Leashable
	f	Ljava/lang/String;	x_	LEASH_TAG
	f	D	h	LEASH_TOO_FAR_DIST
	f	D	i	LEASH_ELASTIC_DIST
	f	D	j	MAXIMUM_ALLOWED_LEASHED_DIST
	f	Lfis;	k	AXIS_SPECIFIC_ELASTICITY
	f	F	d_	SPRING_DAMPENING
	f	D	e_	TORSIONAL_ELASTICITY
	f	D	f_	STIFFNESS
	f	Ljava/util/List;	g_	ENTITY_ATTACHMENT_POINT
	f	Ljava/util/List;	h_	LEASHER_ATTACHMENT_POINT
	f	Ljava/util/List;	i_	SHARED_QUAD_ATTACHMENT_POINTS
	m	()Lcak$a;	T_	getLeashData
	m	(Lcak$a;)V	a	setLeashData
	m	()Z	R_	isLeashed
	m	()Z	u	mayBeLeashed
	m	(Lbzm;)Z	b_	canHaveALeashAttachedTo
	m	(Lbzm;)D	b	leashDistanceTo
	m	()Z	v	canBeLeashed
	m	(I)V	e_	setDelayedLeashHolderId
	m	(Lfda;)V	b	readLeashData
	m	(Lfdc;Lcak$a;)V	a	writeLeashData
	m	(Lbzm;Lcak$a;)V	b	restoreLeashFromSave
	m	()V	S_	dropLeash
	m	()V	x	removeLeash
	m	()V	y	onLeashRemoved
	m	(Lbzm;ZZ)V	a	dropLeash
	m	(Laub;Lbzm;)V	a_	tickLeash
	m	()V	z	onElasticLeashPull
	m	()D	A	leashSnapDistance
	m	()D	B	leashElasticDistance
	m	(Lbzm;)F	c	angularFriction
	m	(Lbzm;)V	d	whenLeashedTo
	m	()V	C	leashTooFarBehaviour
	m	(Lbzm;)V	e	closeRangeLeashBehaviour
	m	(Lbzm;Lcak$a;)Z	a	checkElasticInteractions
	m	(Lbzm;)Lfis;	g	getHolderMovement
	m	(Lbzm;Lbzm;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	computeElasticInteraction
	m	(Lfis;Lfis;DLfis;Lfis;)Ljava/util/Optional;	a	computeDampenedSpringInteraction
	m	()Z	D	supportQuadLeash
	m	()[Lfis;	E	getQuadLeashOffsets
	m	(Lbzm;DDDD)[Lfis;	a	createQuadLeashOffsets
	m	(F)Lfis;	a_	getLeashOffset
	m	()Lfis;	F	getLeashOffset
	m	(Lbzm;Z)V	a_	setLeashedTo
	m	(Lbzm;Lbzm;Z)V	a	setLeashedTo
	m	()Lbzm;	aj_	getLeashHolder
	m	(Lbzm;)Lbzm;	h	getLeashHolder
	m	(Lbzm;)Ljava/util/List;	c_	leashableLeashedTo
	m	(Lbzm;Ljava/util/function/Predicate;)Ljava/util/List;	a	leashableInArea
	m	(Ldmu;Lfis;Ljava/util/function/Predicate;)Ljava/util/List;	a	leashableInArea
	m	(Ljava/util/function/Predicate;Lbzm;)Z	a	lambda$leashableInArea$1
	m	(Lbzm;Lcak;)Z	a	lambda$leashableLeashedTo$0
	m	()V	<clinit>	<clinit>
c	cak$a	net/minecraft/world/entity/Leashable$LeashData
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	e	delayedLeashHolderId
	f	Lbzm;	b	leashHolder
	f	Lcom/mojang/datafixers/util/Either;	c	delayedLeashInfo
	f	D	d	angularMomentum
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
	m	(Lbzm;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Lbzm;)V	a	setLeashHolder
	m	(Lcak$a;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cak$b	net/minecraft/world/entity/Leashable$Wrench
	f	Lfis;	b	force
	f	D	c	torque
	f	Lcak$b;	a	ZERO
	m	(Lfis;D)V	<init>	<init>
	m	(Lfis;Lfis;)D	a	torqueFromForce
	m	(Ljava/util/List;)Lcak$b;	a	accumulate
	m	(D)Lcak$b;	a	scale
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	force
	m	()D	b	torque
	m	()V	<clinit>	<clinit>
c	cal	net/minecraft/world/entity/LightningBolt
	f	I	b	START_LIFE
	f	D	c	DAMAGE_RADIUS
	f	D	d	DETECTION_RADIUS
	f	I	e	life
	f	J	a	seed
	f	I	f	flashes
	f	Z	g	visualOnly
	f	Lauc;	h	cause
	f	Ljava/util/Set;	i	hitEntities
	f	I	j	blocksSetOnFire
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Z)V	a	setVisualOnly
	m	()Laza;	do	getSoundSource
	m	()Lauc;	e	getCause
	m	(Lauc;)V	b	setCause
	m	()V	l	powerLightningRod
	m	()V	g	tick
	m	()Ljb;	m	getStrikePosition
	m	(I)V	b	spawnFire
	m	(Ldmu;Ljb;)V	b	clearCopperOnLightningStrike
	m	(Ldmu;Ljb;Ljb$a;I)V	a	randomWalkCleaningCopper
	m	(Ldmu;Ljb;)Ljava/util/Optional;	c	randomStepCleaningCopper
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()I	f	getBlocksSetOnFire
	m	()Ljava/util/stream/Stream;	i	getHitEntities
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldmu;Ljb;Leeb;)V	a	lambda$randomStepCleaningCopper$2
	m	(Lauc;)Z	c	lambda$tick$1
	m	(Lbzm;)Z	b	lambda$tick$0
c	cam	net/minecraft/world/entity/LivingEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	TAG_ACTIVE_EFFECTS
	f	Ljava/lang/String;	l	TAG_ATTRIBUTES
	f	Ljava/lang/String;	m	TAG_SLEEPING_POS
	f	Ljava/lang/String;	n	TAG_EQUIPMENT
	f	Ljava/lang/String;	o	TAG_BRAIN
	f	Ljava/lang/String;	p	TAG_FALL_FLYING
	f	Ljava/lang/String;	q	TAG_HURT_TIME
	f	Ljava/lang/String;	r	TAG_DEATH_TIME
	f	Ljava/lang/String;	s	TAG_HURT_BY_TIMESTAMP
	f	Ljava/lang/String;	t	TAG_HEALTH
	f	Lame;	c	SPEED_MODIFIER_POWDER_SNOW_ID
	f	Lame;	d	SPRINTING_MODIFIER_ID
	f	Lcbq;	e	SPEED_MODIFIER_SPRINTING
	f	I	u	EQUIPMENT_SLOT_OFFSET
	f	I	aM	ARMOR_SLOT_OFFSET
	f	I	aN	BODY_ARMOR_OFFSET
	f	I	aO	SADDLE_OFFSET
	f	I	aP	SWING_DURATION
	f	I	aQ	PLAYER_HURT_EXPERIENCE_TIME
	f	I	bQ	DAMAGE_SOURCE_TIMEOUT
	f	D	aR	MIN_MOVEMENT_DISTANCE
	f	D	aS	DEFAULT_BASE_GRAVITY
	f	I	aT	DEATH_DURATION
	f	F	aU	INPUT_FRICTION
	f	I	bR	TICKS_PER_ELYTRA_FREE_FALL_EVENT
	f	I	bS	FREE_FALL_EVENTS_PER_ELYTRA_BREAK
	f	F	aV	BASE_JUMP_POWER
	f	D	bT	MAX_LINE_OF_SIGHT_TEST_RANGE
	f	I	aW	LIVING_ENTITY_FLAG_IS_USING
	f	I	aX	LIVING_ENTITY_FLAG_OFF_HAND
	f	I	aY	LIVING_ENTITY_FLAG_SPIN_ATTACK
	f	Lalh;	aZ	DATA_LIVING_ENTITY_FLAGS
	f	Lalh;	bU	DATA_HEALTH_ID
	f	Lalh;	bV	DATA_EFFECT_PARTICLES
	f	Lalh;	bW	DATA_EFFECT_AMBIENCE_ID
	f	Lalh;	bX	DATA_ARROW_COUNT_ID
	f	Lalh;	bY	DATA_STINGER_COUNT_ID
	f	Lalh;	bZ	SLEEPING_POS_ID
	f	I	ca	PARTICLE_FREQUENCY_WHEN_INVISIBLE
	f	Lbzp;	ba	SLEEPING_DIMENSIONS
	f	F	bb	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT
	f	F	bc	DEFAULT_BABY_SCALE
	f	Ljava/util/function/Predicate;	bd	PLAYER_NOT_WEARING_DISGUISE_ITEM
	f	Lcom/mojang/serialization/Dynamic;	cb	EMPTY_BRAIN
	f	Lcbp;	cc	attributes
	f	Lbxy;	cd	combatTracker
	f	Ljava/util/Map;	ce	activeEffects
	f	Ljava/util/Map;	cf	lastEquipmentItems
	f	Z	be	swinging
	f	Z	cg	discardFriction
	f	Lbxi;	bf	swingingArm
	f	I	bg	swingTime
	f	I	bh	removeArrowTime
	f	I	bi	removeStingerTime
	f	I	bj	hurtTime
	f	I	bk	hurtDuration
	f	I	bl	deathTime
	f	F	bm	oAttackAnim
	f	F	bn	attackAnim
	f	I	bo	attackStrengthTicker
	f	Lcbl;	bp	walkAnimation
	f	I	bq	invulnerableDuration
	f	F	br	yBodyRot
	f	F	bs	yBodyRotO
	f	F	bt	yHeadRot
	f	F	bu	yHeadRotO
	f	Lbzl;	bv	elytraAnimationState
	f	Lbzs;	bw	lastHurtByPlayer
	f	I	bx	lastHurtByPlayerMemoryTime
	f	Z	by	dead
	f	I	bz	noActionTime
	f	F	bA	lastHurt
	f	Z	bB	jumping
	f	F	bC	xxa
	f	F	bD	yya
	f	F	bE	zza
	f	Lcah;	bF	interpolation
	f	D	bG	lerpYHeadRot
	f	I	bH	lerpHeadSteps
	f	Z	ch	effectsDirty
	f	Lbzs;	ci	lastHurtByMob
	f	I	cj	lastHurtByMobTimestamp
	f	Lcam;	ck	lastHurtMob
	f	I	cl	lastHurtMobTimestamp
	f	F	cm	speed
	f	I	cn	noJumpDelay
	f	F	co	absorptionAmount
	f	Ldcv;	bI	useItem
	f	I	bJ	useItemRemaining
	f	I	bK	fallFlyTicks
	f	Ljb;	cp	lastPos
	f	Ljava/util/Optional;	cq	lastClimbablePos
	f	Lbyb;	cr	lastDamageSource
	f	J	cs	lastDamageStamp
	f	I	bL	autoSpinAttackTicks
	f	F	bM	autoSpinAttackDmg
	f	Ldcv;	bN	autoSpinAttackItemStack
	f	F	ct	swimAmount
	f	F	cu	swimAmountO
	f	Lcbm;	bO	brain
	f	Z	cv	skipDropExperience
	f	Ljava/util/EnumMap;	cw	activeLocationDependentEnchantments
	f	Lbzq;	bP	equipment
	f	Lfkt$a;	cx	locatorBarIcon
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lbzq;	eg	createEquipment
	m	()Lcbm;	eh	getBrain
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Laub;)V	c	kill
	m	(Lbzv;)Z	a	canAttackType
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	ej	createLivingAttributes
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	ek	canBreatheUnderwater
	m	(F)F	b	getSwimAmount
	m	()Z	el	hasLandedInLiquid
	m	()V	az	baseTick
	m	()F	aW	getBlockSpeedFactor
	m	()F	em	getLuck
	m	()V	en	removeFrost
	m	()V	eo	tryAddFrost
	m	(Laub;Ljb;)V	b	onChangedBlock
	m	()Z	g_	isBaby
	m	()F	ep	getAgeScale
	m	()F	eq	getScale
	m	(F)F	c	sanitizeScale
	m	()Z	er	isAffectedByFluids
	m	()V	es	tickDeath
	m	()Z	et	shouldDropExperience
	m	()Z	eu	shouldDropLoot
	m	(I)I	l	decreaseAirSupply
	m	(I)I	m	increaseAirSupply
	m	(Laub;Lbzm;)I	a	getExperienceReward
	m	(Laub;)I	e	getBaseExperienceReward
	m	()Z	ev	isAlwaysExperienceDropper
	m	()Lcam;	ew	getLastHurtByMob
	m	()Lcut;	ex	getLastHurtByPlayer
	m	()Lcam;	ak	getLastAttacker
	m	()I	ey	getLastHurtByMobTimestamp
	m	(Lcut;I)V	a	setLastHurtByPlayer
	m	(Ljava/util/UUID;I)V	a	setLastHurtByPlayer
	m	(Lbzs;I)V	a	setLastHurtByPlayer
	m	(Lcam;)V	a	setLastHurtByMob
	m	()Lcam;	ez	getLastHurtMob
	m	()I	eA	getLastHurtMobTimestamp
	m	(Lbzm;)V	C	setLastHurtMob
	m	()I	eB	getNoActionTime
	m	(I)V	n	setNoActionTime
	m	()Z	eC	shouldDiscardFriction
	m	(Z)V	r	setDiscardFriction
	m	(Lbzw;)Z	b	doesEmitEquipEvent
	m	(Lbzw;Ldcv;Ldcv;)V	a	onEquipItem
	m	(Lbzw;Ldcv;Ldle;)Ljl;	a	getEquipSound
	m	(Lbzm$e;)V	a	remove
	m	(Lbzm$e;)V	b	onRemoval
	m	(Laub;Lbzm$e;)V	a	triggerOnDeathMobEffects
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Ldcv;ZZ)Lcqz;	a	drop
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	eD	tickEffects
	m	()V	K	updateInvisibilityStatus
	m	()V	l	updateSynchronizedMobEffectParticles
	m	()V	p	updateGlowingStatus
	m	(Lbzm;)D	D	getVisibilityPercent
	m	(Lcam;)Z	c	canAttack
	m	()Z	eE	canBeSeenAsEnemy
	m	()Z	eF	canBeSeenByAnyone
	m	(Ljava/util/Collection;)Z	d	areAllEffectsAmbient
	m	()V	eG	removeEffectParticles
	m	()Z	eH	removeAllEffects
	m	()Ljava/util/Collection;	eI	getActiveEffects
	m	()Ljava/util/Map;	eJ	getActiveEffectsMap
	m	(Ljl;)Z	d	hasEffect
	m	(Ljl;)Lbyq;	e	getEffect
	m	(Ljl;F)F	a	getEffectBlendFactor
	m	(Lbyq;)Z	a	addEffect
	m	(Lbyq;Lbzm;)Z	b	addEffect
	m	(Lbyq;)Z	b	canBeAffected
	m	(Lbyq;Lbzm;)V	c	forceAddEffect
	m	()Z	eK	isInvertedHealAndHarm
	m	(Ljl;)Lbyq;	f	removeEffectNoUpdate
	m	(Ljl;)Z	g	removeEffect
	m	(Lbyq;Lbzm;)V	a	onEffectAdded
	m	(Lbyq;)V	c	sendEffectToPassengers
	m	(Lbyq;ZLbzm;)V	a	onEffectUpdated
	m	(Ljava/util/Collection;)V	c	onEffectsRemoved
	m	()V	H	refreshDirtyAttributes
	m	(Ljl;)V	a	onAttributeUpdated
	m	(F)V	d	heal
	m	()F	eL	getHealth
	m	(F)V	x	setHealth
	m	()Z	eM	isDeadOrDying
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;F)F	b	applyItemBlocking
	m	(Lbyb;)V	i	playSecondaryHurtSound
	m	(Lbyb;)V	f	resolveMobResponsibleForDamage
	m	(Lbyb;)Lcut;	g	resolvePlayerResponsibleForDamage
	m	(Laub;Lcam;)V	b	blockUsingItem
	m	(Lcam;)V	d	blockedByItem
	m	(Lbyb;)Z	j	checkTotemDeathProtection
	m	()Lbyb;	eN	getLastDamageSource
	m	(Lbyb;)V	h	playHurtSound
	m	(Layy;)V	b	makeSound
	m	(Ldcv;)V	g	breakItem
	m	(Lbyb;)V	a	die
	m	(Lcam;)V	e	createWitherRose
	m	(Laub;Lbyb;)V	b	dropAllDeathLoot
	m	(Laub;)V	f	dropEquipment
	m	(Laub;Lbzm;)V	b	dropExperience
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	()J	eO	getLootTableSeed
	m	(Lbzm;Lbyb;)F	b	getKnockback
	m	(Laub;Lbyb;Z)V	b	dropFromLootTable
	m	(Laub;Lamd;Ljava/util/function/BiConsumer;)Z	a	dropFromGiftLootTable
	m	(Laub;Lamd;Ldcv;Ljava/util/function/BiConsumer;)V	a	dropFromShearingLootTable
	m	(Laub;Lamd;Ljava/util/function/Function;Ljava/util/function/BiConsumer;)Z	a	dropFromLootTable
	m	(DDD)V	p	knockback
	m	(DD)V	a	indicateDamage
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(I)Layy;	q	getFallDamageSound
	m	()V	eP	skipDropExperience
	m	()Z	eQ	wasExperienceConsumed
	m	()F	eR	getHurtDir
	m	()Lfin;	eS	getHitbox
	m	(Lbzw;)Ljava/util/Map;	c	activeLocationDependentEnchantments
	m	()Lcam$a;	eT	getFallSounds
	m	()Ljava/util/Optional;	eU	getLastClimbablePos
	m	()Z	eV	onClimbable
	m	(Ljb;Leeb;)Z	c	trapdoorUsableAsLadder
	m	()Z	bO	isAlive
	m	(Lcam;DZZ[D)Z	a	isLookingAtMe
	m	()I	cI	getMaxFallDistance
	m	(F)I	y	getComfortableFallDistance
	m	(DFLbyb;)Z	a	causeFallDamage
	m	(DF)I	a	calculateFallDamage
	m	(D)D	h	calculateFallPower
	m	()V	eW	playBlockFallSound
	m	(F)V	q	animateHurt
	m	()I	eX	getArmorValue
	m	(Lbyb;F)V	c	hurtArmor
	m	(Lbyb;F)V	d	hurtHelmet
	m	(Lbyb;F[Lbzw;)V	a	doHurtEquipment
	m	(Lbyb;F)F	e	getDamageAfterArmorAbsorb
	m	(Lbyb;F)F	f	getDamageAfterMagicAbsorb
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	()Lbxy;	eY	getCombatTracker
	m	()Lcam;	eZ	getKillCredit
	m	()F	fa	getMaxHealth
	m	()F	fb	getMaxAbsorption
	m	()I	fc	getArrowCount
	m	(I)V	o	setArrowCount
	m	()I	fd	getStingerCount
	m	(I)V	p	setStingerCount
	m	()I	I	getCurrentSwingDuration
	m	(Lbxi;)V	a	swing
	m	(Lbxi;Z)V	a	swing
	m	(Lbyb;)V	c	handleDamageEvent
	m	(B)V	b	handleEntityEvent
	m	()V	fe	makePoofParticles
	m	()V	J	makeDrownParticles
	m	()V	L	swapHandItems
	m	()V	aJ	onBelowWorld
	m	()V	ff	updateSwingTime
	m	(Ljl;)Lcbo;	h	getAttribute
	m	(Ljl;)D	i	getAttributeValue
	m	(Ljl;)D	j	getAttributeBaseValue
	m	()Lcbp;	fg	getAttributes
	m	()Ldcv;	fh	getMainHandItem
	m	()Ldcv;	fi	getOffhandItem
	m	(Lcad;)Ldcv;	a	getItemHeldByArm
	m	()Ldcv;	ed	getWeaponItem
	m	(Ldcr;)Z	b	isHolding
	m	(Ljava/util/function/Predicate;)Z	b	isHolding
	m	(Lbxi;)Ldcv;	b	getItemInHand
	m	(Lbxi;Ldcv;)V	a	setItemInHand
	m	(Lbzw;)Z	d	hasItemInSlot
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lbzw;)Ldcv;	a	getItemBySlot
	m	(Lbzw;Ldcv;)V	a	setItemSlot
	m	()F	fj	getArmorCoverPercentage
	m	(Z)V	i	setSprinting
	m	()F	fk	getSoundVolume
	m	()F	fl	getVoicePitch
	m	()Z	fm	isImmobile
	m	(Lbzm;)V	h	push
	m	(Lbzm;)V	G	dismountVehicle
	m	()Z	cQ	shouldShowName
	m	()F	fn	getJumpPower
	m	(F)F	z	getJumpPower
	m	()F	fo	getJumpBoostPower
	m	()V	s	jumpFromGround
	m	()V	fp	goDownInWater
	m	(Lbae;)V	c	jumpInLiquid
	m	()F	fq	getWaterSlowDown
	m	(Lfal;)Z	a	canStandOnFluid
	m	()D	bg	getDefaultGravity
	m	()D	fr	getEffectiveGravity
	m	(Lfis;)V	k	travel
	m	(Lfis;F)V	a	travelFlying
	m	(Lfis;FFF)V	a	travelFlying
	m	(Lfis;)V	a	travelInAir
	m	(Lfis;)V	m	travelInFluid
	m	(Lfis;)V	n	travelFallFlying
	m	()V	fs	stopFallFlying
	m	(Lfis;)Lfis;	o	updateFallFlyingMovement
	m	(DD)V	c	handleFallFlyingCollisions
	m	(Lcut;Lfis;)V	c	travelRidden
	m	(Lcut;Lfis;)V	a	tickRidden
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	(Lcut;)F	c	getRiddenSpeed
	m	(Z)V	s	calculateEntityAnimation
	m	(F)V	A	updateWalkAnimation
	m	(Lfis;F)Lfis;	b	handleRelativeFrictionAndCalculateMovement
	m	(DZLfis;)Lfis;	a	getFluidFallingAdjustedMovement
	m	(Lfis;)Lfis;	p	handleOnClimbable
	m	(F)F	G	getFrictionInfluencedSpeed
	m	()F	ft	getFlyingSpeed
	m	()F	fu	getSpeed
	m	(F)V	B	setSpeed
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()V	g	tick
	m	()V	N	detectEquipmentUpdates
	m	()Ljava/util/Map;	O	collectEquipmentChanges
	m	(Ldcv;Ldcv;)Z	a	equipmentHasChanged
	m	(Ljava/util/Map;)V	a	handleHandSwap
	m	(Ljava/util/Map;)V	b	handleEquipmentChanges
	m	(F)V	C	tickHeadTurn
	m	()F	fv	getMaxHeadRotationRelativeToBody
	m	()V	e_	aiStep
	m	()V	fw	applyInput
	m	()Z	fx	isSensitiveToWater
	m	()Z	fy	isJumping
	m	()V	fz	updateFallFlying
	m	()Z	fA	canGlide
	m	()V	fB	serverAiStep
	m	()V	o	pushEntities
	m	(Lfin;Lfin;)V	a	checkAutoSpinAttack
	m	(Lbzm;)V	E	doPush
	m	(Lcam;)V	f	doAutoAttackOnTouch
	m	()Z	fC	isAutoSpinAttack
	m	()V	bS	stopRiding
	m	()V	r	rideTick
	m	()Lcah;	l_	getInterpolation
	m	(FI)V	a	lerpHeadTo
	m	(Z)V	t	setJumping
	m	(Lcqz;)V	a	onItemPickup
	m	(Lbzm;I)V	a	take
	m	(Lbzm;)Z	F	hasLineOfSight
	m	(Lbzm;Ldmb$a;Ldmb$b;D)Z	a	hasLineOfSight
	m	(F)F	j	getViewYRot
	m	(F)F	D	getAttackAnim
	m	()Z	bK	isPickable
	m	()Z	bL	isPushable
	m	()F	cE	getYHeadRot
	m	(F)V	r	setYHeadRot
	m	(F)V	s	setYBodyRot
	m	(Ljh$a;Lm$a;)Lfis;	a	getRelativePortalPosition
	m	(Lfis;)Lfis;	l	resetForwardDirectionOfRelativePortalPosition
	m	()F	fD	getAbsorptionAmount
	m	(F)V	E	setAbsorptionAmount
	m	(F)V	F	internalSetAbsorptionAmount
	m	()V	h_	onEnterCombat
	m	()V	P_	onLeaveCombat
	m	()V	fE	updateEffectVisibility
	m	()Lcad;	fF	getMainArm
	m	()Z	fG	isUsingItem
	m	()Lbxi;	fH	getUsedItemHand
	m	()V	P	updatingUsingItem
	m	(Ldcv;ZZ)Lcqz;	b	createItemStackToDrop
	m	(Ldcv;)V	a	updateUsingItem
	m	()V	Q	updateSwimAmount
	m	(IZ)V	c	setLivingEntityFlag
	m	(Lbxi;)V	c	startUsingItem
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lex$a;Lfis;)V	a	lookAt
	m	(F)F	t	getPreciseBodyRotation
	m	(Ldcv;I)V	b	spawnItemParticles
	m	()V	w	completeUsingItem
	m	(Ldcv;)V	b	handleExtraItemsCreatedOnUse
	m	()Ldcv;	fI	getUseItem
	m	()I	fJ	getUseItemRemainingTicks
	m	()I	fK	getTicksUsingItem
	m	()V	fL	releaseUsingItem
	m	()V	fM	stopUsingItem
	m	()Z	fN	isBlocking
	m	()Ldcv;	fO	getItemBlockingWith
	m	()Z	fP	isSuppressingSlidingDownLadder
	m	()Z	fQ	isFallFlying
	m	()Z	co	isVisuallySwimming
	m	()I	fR	getFallFlyingTicks
	m	(DDDZ)Z	b	randomTeleport
	m	()Z	fS	isAffectedByPotions
	m	()Z	fT	attackable
	m	(Ljb;Z)V	a	setRecordPlayingNearby
	m	()Z	fU	canPickUpLoot
	m	(Lcay;)Lbzp;	a	getDimensions
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Lcom/google/common/collect/ImmutableList;	fV	getDismountPoses
	m	(Lcay;)Lfin;	f	getLocalBoundsForPose
	m	(Lcay;)Z	g	wouldNotSuffocateAtTargetPose
	m	(Z)Z	o	canUsePortal
	m	()Ljava/util/Optional;	fW	getSleepingPos
	m	(Ljb;)V	g	setSleepingPos
	m	()V	fX	clearSleepingPos
	m	()Z	fY	isSleeping
	m	(Ljb;)V	b	startSleeping
	m	(Ljb;)V	a	setPosToBed
	m	()Z	R	checkBedExists
	m	()V	fZ	stopSleeping
	m	()Ljh;	ga	getBedOrientation
	m	()Z	bP	isInWall
	m	(Ldcv;)Ldcv;	d	getProjectile
	m	(Lbzw;)B	g	entityEventForEquipmentBreak
	m	(Ldcr;Lbzw;)V	a	onEquippedItemBroken
	m	(Ldcv;Lbzw;Lcbp;)V	a	stopLocationBasedEffects
	m	(Lbxi;)Lbzw;	d	getSlotForHand
	m	(Ldcv;)Z	e	canEquipWithDispenser
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Ldcv;)Lbzw;	f	getEquipmentSlotForItem
	m	(Ldcv;Lbzw;)Z	a	isEquippableInSlot
	m	(Lcam;Lbzw;)Lcbd;	a	createEquipmentSlotAccess
	m	(I)Lbzw;	r	getEquipmentSlot
	m	(I)Lcbd;	a_	getSlot
	m	()Z	dN	canFreeze
	m	()Z	cr	isCurrentlyGlowing
	m	()F	dQ	getVisualRotationYInDegrees
	m	(Lacr;)V	a	recreateFromPacket
	m	()F	gb	getSecondsToDisableBlocking
	m	()F	dT	maxUpStep
	m	(Lbzm;)Lfis;	n	getPassengerRidingPosition
	m	(ID)V	a	lerpHeadRotationStep
	m	(I)V	g	igniteForTicks
	m	()Z	gc	hasInfiniteMaterials
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	(Ldcv;Lbzw;)Z	b	canGlideUsing
	m	()I	gd	getLastHurtByPlayerMemoryTime
	m	()Z	ge	isTransmittingWaypoint
	m	(Lauc;)Ljava/util/Optional;	f	makeWaypointConnectionWith
	m	()Lfkt$a;	gf	waypointIcon
	m	(Lcam;Lbzw;Ldcv;)Z	a	lambda$createEquipmentSlotAccess$23
	m	(Lcbp;Ljl;Lcbq;)V	a	lambda$stopLocationBasedEffects$22
	m	(Ljb;)V	c	lambda$stopSleeping$21
	m	(Ljb;)Lfis;	h	lambda$stopSleeping$20
	m	(Ljb;)Ljava/lang/Boolean;	i	lambda$checkBedExists$19
	m	(Lbzw;)Z	h	lambda$updateFallFlying$18
	m	(Ljava/util/List;Lbzw;Ldcv;)V	a	lambda$handleEquipmentChanges$17
	m	(Ljl;Lcbq;)V	a	lambda$collectEquipmentChanges$16
	m	(DLfis;)Lfis;	a	lambda$dismountVehicle$15
	m	(Ldcr;Ldcv;)Z	a	lambda$isHolding$14
	m	(Lbzw;)Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	i	lambda$activeLocationDependentEnchantments$13
	m	(Ljava/util/function/BiConsumer;Laub;Ldcv;)V	a	lambda$dropFromLootTable$12
	m	(Ldcv;Lfdm$a;)Lfdm;	a	lambda$dropFromShearingLootTable$11
	m	(Lfdm$a;)Lfdm;	a	lambda$dropFromGiftLootTable$10
	m	(Laub;Ldcv;)V	b	lambda$dropFromLootTable$9
	m	(Lbyq;)V	d	lambda$tickEffects$8
	m	(Lcom/mojang/serialization/Dynamic;)V	b	lambda$readAdditionalSaveData$7
	m	(Ljb;)V	j	lambda$readAdditionalSaveData$6
	m	(Ljava/lang/String;)V	d	lambda$readAdditionalSaveData$5
	m	(Lfdc;Lcom/mojang/serialization/Dynamic;)V	a	lambda$addAdditionalSaveData$4
	m	(Lvi;)Lcom/mojang/serialization/Dynamic;	a	lambda$addAdditionalSaveData$3
	m	(Lfdc;Ljb;)V	a	lambda$addAdditionalSaveData$2
	m	(Lbzw;)Ldcv;	j	lambda$new$1
	m	(Lcam;)Z	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cam$1	net/minecraft/world/entity/LivingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
	m	()V	<clinit>	<clinit>
c	cam$a	net/minecraft/world/entity/LivingEntity$Fallsounds
	f	Layy;	a	small
	f	Layy;	b	big
	m	(Layy;Layy;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Layy;	a	small
	m	()Layy;	b	big
c	can	net/minecraft/world/entity/Marker
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	g	tick
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Z	bT	couldAcceptPassenger
	m	(Lbzm;)V	q	addPassenger
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Z	n_	isIgnoringBlockTriggers
	m	(Laub;Lbyb;F)Z	a	hurtServer
c	cao	net/minecraft/world/entity/Mob
	f	Lalh;	a	DATA_MOB_FLAGS_ID
	f	I	b	MOB_FLAG_NO_AI
	f	I	c	MOB_FLAG_LEFTHANDED
	f	I	d	MOB_FLAG_AGGRESSIVE
	f	I	bQ	PICKUP_REACH
	f	Lkg;	e	ITEM_PICKUP_REACH
	f	Ljava/util/List;	cj	EQUIPMENT_POPULATION_ORDER
	f	F	bR	MAX_WEARING_ARMOR_CHANCE
	f	F	bS	MAX_PICKUP_LOOT_CHANCE
	f	F	bT	MAX_ENCHANTED_ARMOR_CHANCE
	f	F	bU	MAX_ENCHANTED_WEAPON_CHANCE
	f	I	bV	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS
	f	D	ck	DEFAULT_ATTACK_REACH
	f	Z	cl	DEFAULT_CAN_PICK_UP_LOOT
	f	Z	cm	DEFAULT_PERSISTENCE_REQUIRED
	f	Z	cn	DEFAULT_LEFT_HANDED
	f	Z	co	DEFAULT_NO_AI
	f	Lame;	bW	RANDOM_SPAWN_BONUS_ID
	f	Ljava/lang/String;	bX	TAG_DROP_CHANCES
	f	Ljava/lang/String;	bY	TAG_LEFT_HANDED
	f	Ljava/lang/String;	bZ	TAG_CAN_PICK_UP_LOOT
	f	Ljava/lang/String;	ca	TAG_NO_AI
	f	I	cb	ambientSoundTime
	f	I	cc	xpReward
	f	Lcgk;	cd	lookControl
	f	Lcgl;	ce	moveControl
	f	Lcgj;	cf	jumpControl
	f	Lcgg;	cp	bodyRotationControl
	f	Lcjw;	cg	navigation
	f	Lchj;	ch	goalSelector
	f	Lchj;	ci	targetSelector
	f	Lcam;	cq	target
	f	Lcku;	cr	sensing
	f	Lbzk;	cs	dropChances
	f	Z	ct	canPickUpLoot
	f	Z	cu	persistenceRequired
	f	Ljava/util/Map;	cv	pathfindingMalus
	f	Ljava/util/Optional;	cw	lootTable
	f	J	cx	lootTableSeed
	f	Lcak$a;	cy	leashData
	f	Ljb;	cz	homePosition
	f	I	cA	homeRadius
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	I	createMobAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()Z	J	shouldPassengersInheritMalus
	m	(Lfbc;)F	a	getPathfindingMalus
	m	(Lfbc;F)V	a	setPathfindingMalus
	m	()V	L	onPathfindingStart
	m	()V	N	onPathfindingDone
	m	()Lcgg;	O	createBodyControl
	m	()Lcgk;	P	getLookControl
	m	()Lcgl;	Q	getMoveControl
	m	()Lcgj;	R	getJumpControl
	m	()Lcjw;	S	getNavigation
	m	()Lcam;	cY	getControllingPassenger
	m	()Lcku;	T	getSensing
	m	()Lcam;	e	getTarget
	m	()Lcam;	U	getTargetFromBrain
	m	(Lcam;)V	g	setTarget
	m	(Lbzv;)Z	a	canAttackType
	m	(Lddq;)Z	a	canFireProjectileWeapon
	m	()V	V	ate
	m	(Lall$a;)V	a	defineSynchedData
	m	()I	W	getAmbientSoundInterval
	m	()V	X	playAmbientSound
	m	()V	az	baseTick
	m	(Lbyb;)V	h	playHurtSound
	m	()V	l	resetAmbientSoundTime
	m	(Laub;)I	e	getBaseExperienceReward
	m	()V	Y	spawnAnim
	m	(B)V	b	handleEntityEvent
	m	()V	g	tick
	m	()V	Z	updateControlFlags
	m	(F)V	C	tickHeadTurn
	m	()Layy;	p	getAmbientSound
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbyb;Z)V	b	dropFromLootTable
	m	()Ljava/util/Optional;	ee	getLootTable
	m	()J	eO	getLootTableSeed
	m	(F)V	G	setZza
	m	(F)V	H	setYya
	m	(F)V	I	setXxa
	m	(F)V	B	setSpeed
	m	()V	aa	stopInPlace
	m	()V	e_	aiStep
	m	()Lkg;	ac	getPickupReach
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(Laub;Ldcv;)Ldcv;	b	equipItemIfPossible
	m	(Lbzw;Ldcv;)V	b	setItemSlotAndDropWhenKilled
	m	(Lcut;)Z	a	canShearEquipment
	m	(Lbzw;)V	g	setGuaranteedDrop
	m	(Ldcv;Ldcv;Lbzw;)Z	a	canReplaceCurrentItem
	m	(Ldcv;Ldcv;Lbzw;)Z	b	compareArmor
	m	(Ldcv;Ldcv;Lbzw;)Z	c	compareWeapons
	m	(Ldcv;Ljl;Lbzw;)D	a	getApproximateAttributeWith
	m	(Ldcv;Ldcv;)Z	b	canReplaceEqualItem
	m	(Ldcv;)Z	g	canHoldItem
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	()Lbae;	ad	getPreferredWeaponType
	m	(D)Z	h	removeWhenFarAway
	m	()Z	af	requiresCustomPersistence
	m	()Z	ag	shouldDespawnInPeaceful
	m	()V	dJ	checkDespawn
	m	()V	fB	serverAiStep
	m	()V	ah	sendDebugPackets
	m	(Laub;)V	a	customServerAiStep
	m	()I	gg	getMaxHeadXRot
	m	()I	gh	getMaxHeadYRot
	m	()V	gi	clampHeadRotationToBody
	m	()I	gj	getHeadRotSpeed
	m	(Lbzm;FF)V	a	lookAt
	m	(FFF)F	a	rotlerp
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	a	checkMobSpawnRules
	m	(Ldmv;Lbzu;)Z	a	checkSpawnRules
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()I	gk	getMaxSpawnClusterSize
	m	(I)Z	q	isMaxGroupSizeReached
	m	()I	cI	getMaxFallDistance
	m	()Ldcv;	gl	getBodyArmorItem
	m	()Z	gm	isSaddled
	m	()Z	gn	isWearingBodyArmor
	m	(Lbzw;)Z	i	hasValidEquippableItemForSlot
	m	(Ldcv;)V	h	setBodyArmorItem
	m	(Lbzw;)Lbxc;	h	createEquipmentSlotContainer
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	()Lbzk;	go	getDropChances
	m	(Laub;)V	b	dropPreservedEquipment
	m	(Laub;Ljava/util/function/Predicate;)Ljava/util/Set;	a	dropPreservedEquipment
	m	(Laub;)Lfdm;	g	createEquipmentParams
	m	(Lbzy;)V	a	equip
	m	(Lamd;Ljava/util/Map;)V	a	equip
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Lbzw;I)Ldcr;	a	getEquipmentForSlot
	m	(Ldnl;Lbck;Lbxh;)V	a	populateDefaultEquipmentEnchantments
	m	(Ldnl;Lbck;Lbxh;)V	b	enchantSpawnedWeapon
	m	(Ldnl;Lbck;Lbzw;Lbxh;)V	a	enchantSpawnedArmor
	m	(Ldnl;Lbzw;Lbck;FLbxh;)V	a	enchantSpawnedEquipment
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	gp	setPersistenceRequired
	m	(Lbzw;F)V	a	setDropChance
	m	()Z	fU	canPickUpLoot
	m	(Z)V	a_	setCanPickUpLoot
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	()Z	gq	isPersistenceRequired
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lcut;Lbxi;)Lbxj;	c	checkAndHandleImportantInteractions
	m	(Lcut;Lcao;)V	a	onOffspringSpawnedFromEgg
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Z	gr	isWithinHome
	m	(Ljb;)Z	a	isWithinHome
	m	(Lfis;)Z	a	isWithinHome
	m	(Ljb;I)V	a	setHomeTo
	m	()Ljb;	gs	getHomePosition
	m	()I	gt	getHomeRadius
	m	()V	gu	clearHome
	m	()Z	gv	hasHome
	m	(Lbzv;Lbzg;Lbzu;Lbzg$a;)Lcao;	a	convertTo
	m	(Lbzv;Lbzg;Lbzg$a;)Lcao;	a	convertTo
	m	()Lcak$a;	T_	getLeashData
	m	()V	gD	resetAngularLeashMomentum
	m	(Lcak$a;)V	a	setLeashData
	m	()V	y	onLeashRemoved
	m	()V	C	leashTooFarBehaviour
	m	()Z	v	canBeLeashed
	m	(Lbzm;Z)Z	a	startRiding
	m	()Z	dl	isEffectiveAi
	m	(Z)V	u	setNoAi
	m	(Z)V	v	setLeftHanded
	m	(Z)V	w	setAggressive
	m	()Z	gw	isNoAi
	m	()Z	gx	isLeftHanded
	m	()Z	gy	isAggressive
	m	(Z)V	a	setBaby
	m	()Lcad;	fF	getMainArm
	m	(Lcam;)Z	h	isWithinMeleeAttackRange
	m	()Lfin;	gz	getAttackBoundingBox
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()V	gA	playAttackSound
	m	()Z	gB	isSunBurnTick
	m	(Lbae;)V	c	jumpInLiquid
	m	()V	gC	removeFreeWill
	m	(Ljava/util/function/Predicate;)V	c	removeAllGoals
	m	()V	cH	removeAfterChangingDimensions
	m	()Ldcv;	dM	getPickResult
	m	(Ljl;)V	a	onAttributeUpdated
	m	(Lchi;)Z	a	lambda$removeFreeWill$3
	m	(Lcut;Lcao;)V	b	lambda$checkAndHandleImportantInteractions$2
	m	(Ldcv;)Z	j	lambda$dropPreservedEquipment$1
	m	(Lfdc;Lamd;)V	a	lambda$addAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	cao$1	net/minecraft/world/entity/Mob$1
	f	Lbzw;	b	val$slot
	f	Lcao;	c	this$0
	m	(Lcao;Lbzw;)V	<init>	<init>
	m	()Ldcv;	f	getTheItem
	m	(Ldcv;)V	b	setTheItem
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
c	cao$2	net/minecraft/world/entity/Mob$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$EquipmentSlot
	m	()V	<clinit>	<clinit>
c	cap	net/minecraft/world/entity/MobCategory
	f	Lcap;	a	MONSTER
	f	Lcap;	b	CREATURE
	f	Lcap;	c	AMBIENT
	f	Lcap;	d	AXOLOTLS
	f	Lcap;	e	UNDERGROUND_WATER_CREATURE
	f	Lcap;	f	WATER_CREATURE
	f	Lcap;	g	WATER_AMBIENT
	f	Lcap;	h	MISC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	I	j	max
	f	Z	k	isFriendly
	f	Z	l	isPersistent
	f	Ljava/lang/String;	m	name
	f	I	n	noDespawnDistance
	f	I	o	despawnDistance
	f	[Lcap;	p	$VALUES
	m	()[Lcap;	values	values
	m	(Ljava/lang/String;)Lcap;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;IZZI)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	b	getMaxInstancesPerChunk
	m	()Z	d	isFriendly
	m	()Z	e	isPersistent
	m	()I	f	getDespawnDistance
	m	()I	g	getNoDespawnDistance
	m	()[Lcap;	h	$values
	m	()V	<clinit>	<clinit>
c	caq	net/minecraft/world/entity/MoverType
	f	Lcaq;	a	SELF
	f	Lcaq;	b	PLAYER
	f	Lcaq;	c	PISTON
	f	Lcaq;	d	SHULKER_BOX
	f	Lcaq;	e	SHULKER
	f	[Lcaq;	f	$VALUES
	m	()[Lcaq;	values	values
	m	(Ljava/lang/String;)Lcaq;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcaq;	a	$values
	m	()V	<clinit>	<clinit>
c	car	net/minecraft/world/entity/NeutralMob
	f	Ljava/lang/String;	j_	TAG_ANGER_TIME
	f	Ljava/lang/String;	k_	TAG_ANGRY_AT
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()V	c	startPersistentAngerTimer
	m	(Lfdc;)V	a_	addPersistentAngerSaveData
	m	(Ldmu;Lfda;)V	a	readPersistentAngerSaveData
	m	(Laub;Z)V	a	updatePersistentAnger
	m	(Lcam;Laub;)Z	a	isAngryAt
	m	(Laub;)Z	a_	isAngryAtAllPlayers
	m	()Z	ad_	isAngry
	m	(Laub;Lcut;)V	a_	playerDied
	m	()V	ab_	forgetCurrentTargetAndRefreshUniversalAnger
	m	()V	i	stopBeingAngry
	m	()Lcam;	ew	getLastHurtByMob
	m	(Lcam;)V	a	setLastHurtByMob
	m	(Lcam;)V	g	setTarget
	m	(Lcam;)Z	c	canAttack
	m	()Lcam;	e	getTarget
c	cas	net/minecraft/world/entity/OminousItemSpawner
	f	I	b	SPAWN_ITEM_DELAY_MIN
	f	I	c	SPAWN_ITEM_DELAY_MAX
	f	Ljava/lang/String;	d	TAG_SPAWN_ITEM_AFTER_TICKS
	f	Ljava/lang/String;	e	TAG_ITEM
	f	Lalh;	f	DATA_ITEM
	f	I	a	TICKS_BEFORE_ABOUT_TO_SPAWN_SOUND
	f	J	g	spawnItemAfterTicks
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Ldcv;)Lcas;	a	create
	m	()V	g	tick
	m	(Laub;)V	a	tickServer
	m	()V	i	tickClient
	m	()V	l	spawnItem
	m	(Laub;Lddp;Ldcv;)Lbzm;	a	spawnProjectile
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Z	bT	couldAcceptPassenger
	m	(Lbzm;)V	q	addPassenger
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Z	n_	isIgnoringBlockTriggers
	m	()V	e	addParticles
	m	()Ldcv;	f	getItem
	m	(Ldcv;)V	a	setItem
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;I)V	a	lambda$spawnProjectile$0
	m	()V	<clinit>	<clinit>
c	cat	net/minecraft/world/entity/OwnableEntity
	m	()Lbzs;	d	getOwnerReference
	m	()Ldmu;	ai	level
	m	()Lcam;	U_	getOwner
	m	()Lcam;	V_	getRootOwner
c	cau	net/minecraft/world/entity/PathfinderMob
	f	F	cj	DEFAULT_WALK_TARGET_VALUE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;)F	c	getWalkTargetValue
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Ldmv;Lbzu;)Z	a	checkSpawnRules
	m	()Z	gD	isPathFinding
	m	()Z	gE	isPanicking
	m	()Z	gF	shouldStayCloseToLeashHolder
	m	(Lbzm;)V	e	closeRangeLeashBehaviour
	m	(Lbzm;)V	d	whenLeashedTo
	m	()D	gG	followLeashSpeed
c	cav	net/minecraft/world/entity/PlayerRideable
c	caw	net/minecraft/world/entity/PlayerRideableJumping
	m	(I)V	b	onPlayerJump
	m	()Z	a	canJump
	m	(I)V	c	handleStartJump
	m	()V	b	handleStopJump
	m	()I	c	getJumpCooldown
c	cax	net/minecraft/world/entity/PortalProcessor
	f	Ldvz;	a	portal
	f	Ljb;	b	entryPosition
	f	I	c	portalTime
	f	Z	d	insidePortalThisTick
	m	(Ldvz;Ljb;)V	<init>	<init>
	m	(Laub;Lbzm;Z)Z	a	processPortalTeleportation
	m	(Laub;Lbzm;)Lfbl;	a	getPortalDestination
	m	()Ldvz$a;	a	getPortalLocalTransition
	m	()V	f	decayTick
	m	()Z	b	hasExpired
	m	()Ljb;	c	getEntryPosition
	m	(Ljb;)V	a	updateEntryPosition
	m	()I	d	getPortalTime
	m	()Z	e	isInsidePortalThisTick
	m	(Z)V	a	setAsInsidePortalThisTick
	m	(Ldvz;)Z	a	isSamePortal
c	cay	net/minecraft/world/entity/Pose
	f	Lcay;	a	STANDING
	f	Lcay;	b	FALL_FLYING
	f	Lcay;	c	SLEEPING
	f	Lcay;	d	SWIMMING
	f	Lcay;	e	SPIN_ATTACK
	f	Lcay;	f	CROUCHING
	f	Lcay;	g	LONG_JUMPING
	f	Lcay;	h	DYING
	f	Lcay;	i	CROAKING
	f	Lcay;	j	USING_TONGUE
	f	Lcay;	k	SITTING
	f	Lcay;	l	ROARING
	f	Lcay;	m	SNIFFING
	f	Lcay;	n	EMERGING
	f	Lcay;	o	DIGGING
	f	Lcay;	p	SLIDING
	f	Lcay;	q	SHOOTING
	f	Lcay;	r	INHALING
	f	Ljava/util/function/IntFunction;	s	BY_ID
	f	Lzm;	t	STREAM_CODEC
	f	I	u	id
	f	[Lcay;	v	$VALUES
	m	()[Lcay;	values	values
	m	(Ljava/lang/String;)Lcay;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	id
	m	()[Lcay;	b	$values
	m	()V	<clinit>	<clinit>
c	caz	net/minecraft/world/entity/PositionMoveRotation
	f	Lfis;	b	position
	f	Lfis;	c	deltaMovement
	f	F	d	yRot
	f	F	e	xRot
	f	Lzm;	a	STREAM_CODEC
	m	(Lfis;Lfis;FF)V	<init>	<init>
	m	(Lbzm;)Lcaz;	a	of
	m	(Lfbl;)Lcaz;	a	of
	m	(Lcaz;Lcaz;Ljava/util/Set;)Lcaz;	a	calculateAbsolute
	m	(DDLjava/util/Set;Lcba;)D	a	calculateDelta
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	position
	m	()Lfis;	b	deltaMovement
	m	()F	c	yRot
	m	()F	d	xRot
	m	()V	<clinit>	<clinit>
c	cba	net/minecraft/world/entity/Relative
	f	Lcba;	a	X
	f	Lcba;	b	Y
	f	Lcba;	c	Z
	f	Lcba;	d	Y_ROT
	f	Lcba;	e	X_ROT
	f	Lcba;	f	DELTA_X
	f	Lcba;	g	DELTA_Y
	f	Lcba;	h	DELTA_Z
	f	Lcba;	i	ROTATE_DELTA
	f	Ljava/util/Set;	j	ALL
	f	Ljava/util/Set;	k	ROTATION
	f	Ljava/util/Set;	l	DELTA
	f	Lzm;	m	SET_STREAM_CODEC
	f	I	n	bit
	f	[Lcba;	o	$VALUES
	m	()[Lcba;	values	values
	m	(Ljava/lang/String;)Lcba;	valueOf	valueOf
	m	([Ljava/util/Set;)Ljava/util/Set;	a	union
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	getMask
	m	(I)Z	b	isSet
	m	(I)Ljava/util/Set;	a	unpack
	m	(Ljava/util/Set;)I	a	pack
	m	()[Lcba;	b	$values
	m	()V	<clinit>	<clinit>
c	cbb	net/minecraft/world/entity/ReputationEventHandler
	m	(Lclm;Lbzm;)V	a	onReputationEventFrom
c	cbc	net/minecraft/world/entity/Shearable
	m	(Laub;Laza;Ldcv;)V	a	shear
	m	()Z	a	readyForShearing
c	cbd	net/minecraft/world/entity/SlotAccess
	f	Lcbd;	a	NULL
	m	(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)Lcbd;	a	of
	m	(Lbxc;ILjava/util/function/Predicate;)Lcbd;	a	forContainer
	m	(Lbxc;I)Lcbd;	a	forContainer
	m	(Lcam;Lbzw;Ljava/util/function/Predicate;)Lcbd;	a	forEquipmentSlot
	m	(Lcam;Lbzw;)Lcbd;	a	forEquipmentSlot
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
	m	(Ldcv;)Z	b	lambda$forEquipmentSlot$1
	m	(Ldcv;)Z	c	lambda$forContainer$0
	m	()V	<clinit>	<clinit>
c	cbd$1	net/minecraft/world/entity/SlotAccess$1
	m	()V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cbd$2	net/minecraft/world/entity/SlotAccess$2
	f	Ljava/util/function/Supplier;	b	val$getter
	f	Ljava/util/function/Consumer;	c	val$setter
	m	(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cbd$3	net/minecraft/world/entity/SlotAccess$3
	f	Lbxc;	b	val$inventory
	f	I	c	val$id
	f	Ljava/util/function/Predicate;	d	val$validator
	m	(Lbxc;ILjava/util/function/Predicate;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cbd$4	net/minecraft/world/entity/SlotAccess$4
	f	Lcam;	b	val$entity
	f	Lbzw;	c	val$slot
	f	Ljava/util/function/Predicate;	d	val$validator
	m	(Lcam;Lbzw;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cbe	net/minecraft/world/entity/SpawnGroupData
c	cbf	net/minecraft/world/entity/SpawnPlacementType
	m	(Ldmx;Ljb;Lbzv;)Z	isSpawnPositionOk	isSpawnPositionOk
	m	(Ldmx;Ljb;)Ljb;	a	adjustSpawnPosition
c	cbg	net/minecraft/world/entity/SpawnPlacementTypes
	f	Lcbf;	a	NO_RESTRICTIONS
	f	Lcbf;	b	IN_WATER
	f	Lcbf;	c	IN_LAVA
	f	Lcbf;	d	ON_GROUND
	m	(Ldmx;Ljb;Lbzv;)Z	a	lambda$static$2
	m	(Ldmx;Ljb;Lbzv;)Z	b	lambda$static$1
	m	(Ldmx;Ljb;Lbzv;)Z	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cbg$1	net/minecraft/world/entity/SpawnPlacementTypes$1
	m	()V	<init>	<init>
	m	(Ldmx;Ljb;Lbzv;)Z	isSpawnPositionOk	isSpawnPositionOk
	m	(Ldmx;Ljb;Lbzv;)Z	a	isValidEmptySpawnBlock
	m	(Ldmx;Ljb;)Ljb;	a	adjustSpawnPosition
c	cbh	net/minecraft/world/entity/SpawnPlacements
	f	Ljava/util/Map;	a	DATA_BY_TYPE
	m	()V	<init>	<init>
	m	(Lbzv;Lcbf;Leka$a;Lcbh$b;)V	a	register
	m	(Lbzv;)Lcbf;	a	getPlacementType
	m	(Lbzv;Ldmx;Ljb;)Z	a	isSpawnPositionOk
	m	(Lbzv;)Leka$a;	b	getHeightmapType
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkSpawnRules
	m	()V	<clinit>	<clinit>
c	cbh$a	net/minecraft/world/entity/SpawnPlacements$Data
	f	Leka$a;	a	heightMap
	f	Lcbf;	b	placement
	f	Lcbh$b;	c	predicate
	m	(Leka$a;Lcbf;Lcbh$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leka$a;	a	heightMap
	m	()Lcbf;	b	placement
	m	()Lcbh$b;	c	predicate
c	cbh$b	net/minecraft/world/entity/SpawnPlacements$SpawnPredicate
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	test	test
c	cbi	net/minecraft/world/entity/TamableAnimal
	f	I	ck	TELEPORT_WHEN_DISTANCE_IS_SQ
	f	I	co	MIN_HORIZONTAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	I	cp	MAX_HORIZONTAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	I	cq	MAX_VERTICAL_DISTANCE_FROM_TARGET_AFTER_TELEPORTING
	f	Z	cr	DEFAULT_ORDERED_TO_SIT
	f	Lalh;	cl	DATA_FLAGS_ID
	f	Lalh;	cm	DATA_OWNERUUID_ID
	f	Z	cs	orderedToSit
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	v	canBeLeashed
	m	(Z)V	x	spawnTamingParticles
	m	(B)V	b	handleEntityEvent
	m	()Z	m	isTame
	m	(ZZ)V	a	setTame
	m	()V	n	applyTamingSideEffects
	m	()Z	t	isInSittingPose
	m	(Z)V	y	setInSittingPose
	m	()Lbzs;	d	getOwnerReference
	m	(Lcam;)V	i	setOwner
	m	(Lbzs;)V	a	setOwnerReference
	m	(Lcut;)V	g	tame
	m	(Lcam;)Z	c	canAttack
	m	(Lcam;)Z	j	isOwnedBy
	m	(Lcam;Lcam;)Z	a	wantsToAttack
	m	()Lfjs;	cu	getTeam
	m	(Lbzm;)Z	u	considersEntityAsAlly
	m	(Lbyb;)V	a	die
	m	()Z	gH	isOrderedToSit
	m	(Z)V	z	setOrderedToSit
	m	()V	gI	tryToTeleportToOwner
	m	()Z	gJ	shouldTryTeleportToOwner
	m	(Ljb;)V	h	teleportToAroundBlockPos
	m	(III)Z	a	maybeTeleportTo
	m	(Ljb;)Z	i	canTeleportTo
	m	()Z	gK	unableToMoveToOwner
	m	()Z	gL	canFlyToOwner
	m	()V	<clinit>	<clinit>
c	cbi$a	net/minecraft/world/entity/TamableAnimal$TamableAnimalPanicGoal
	f	Lcbi;	a	this$0
	m	(Lcbi;DLbae;)V	<init>	<init>
	m	(Lcbi;D)V	<init>	<init>
	m	()V	a	tick
c	cbj	net/minecraft/world/entity/Targeting
	m	()Lcam;	e	getTarget
c	cbk	net/minecraft/world/entity/TraceableEntity
	m	()Lbzm;	ah_	getOwner
c	cbl	net/minecraft/world/entity/WalkAnimationState
	f	F	a	speedOld
	f	F	b	speed
	f	F	c	position
	f	F	d	positionScale
	m	()V	<init>	<init>
	m	(F)V	a	setSpeed
	m	(FFF)V	a	update
	m	()V	a	stop
	m	()F	b	speed
	m	(F)F	b	speed
	m	()F	c	position
	m	(F)F	c	position
	m	()Z	d	isMoving
c	cbm	net/minecraft/world/entity/ai/Brain
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Supplier;	b	codec
	f	I	c	SCHEDULE_UPDATE_DELAY
	f	Ljava/util/Map;	d	memories
	f	Ljava/util/Map;	e	sensors
	f	Ljava/util/Map;	f	availableBehaviorsByPriority
	f	Lcwp;	g	schedule
	f	Ljava/util/Map;	h	activityRequirements
	f	Ljava/util/Map;	i	activityMemoriesToEraseWhenStopped
	f	Ljava/util/Set;	j	coreActivities
	f	Ljava/util/Set;	k	activeActivities
	f	Lcwn;	l	defaultActivity
	f	J	m	lastScheduleUpdate
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcbm$b;	a	provider
	m	(Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec;	b	codec
	m	(Ljava/util/Collection;Ljava/util/Collection;Lcom/google/common/collect/ImmutableList;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult;	a	serializeStart
	m	()Ljava/util/stream/Stream;	j	memories
	m	(Lcjo;)Z	a	hasMemoryValue
	m	()V	a	clearMemories
	m	(Lcjo;)V	b	eraseMemory
	m	(Lcjo;Ljava/lang/Object;)V	a	setMemory
	m	(Lcjo;Ljava/lang/Object;J)V	a	setMemoryWithExpiry
	m	(Lcjo;Ljava/util/Optional;)V	a	setMemory
	m	(Lcjo;Ljava/util/Optional;)V	b	setMemoryInternal
	m	(Lcjo;)Ljava/util/Optional;	c	getMemory
	m	(Lcjo;)Ljava/util/Optional;	d	getMemoryInternal
	m	(Lcjo;)J	e	getTimeUntilExpiry
	m	()Ljava/util/Map;	b	getMemories
	m	(Lcjo;Ljava/lang/Object;)Z	b	isMemoryValue
	m	(Lcjo;Lcjp;)Z	a	checkMemory
	m	()Lcwp;	c	getSchedule
	m	(Lcwp;)V	a	setSchedule
	m	(Ljava/util/Set;)V	a	setCoreActivities
	m	()Ljava/util/Set;	d	getActiveActivities
	m	()Ljava/util/List;	e	getRunningBehaviors
	m	()V	f	useDefaultActivity
	m	()Ljava/util/Optional;	g	getActiveNonCoreActivity
	m	(Lcwn;)V	a	setActiveActivityIfPossible
	m	(Lcwn;)V	d	setActiveActivity
	m	(Lcwn;)V	e	eraseMemoriesForOtherActivitesThan
	m	(JJ)V	a	updateActivityFromSchedule
	m	(Ljava/util/List;)V	a	setActiveActivityToFirstValid
	m	(Lcwn;)V	b	setDefaultActivity
	m	(Lcwn;ILcom/google/common/collect/ImmutableList;)V	a	addActivity
	m	(Lcwn;ILcom/google/common/collect/ImmutableList;Lcjo;)V	a	addActivityAndRemoveMemoryWhenStopped
	m	(Lcwn;Lcom/google/common/collect/ImmutableList;)V	a	addActivity
	m	(Lcwn;ILcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
	m	(Lcwn;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V	a	addActivityWithConditions
	m	(Lcwn;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V	a	addActivityAndRemoveMemoriesWhenStopped
	m	()V	h	removeAllBehaviors
	m	(Lcwn;)Z	c	isActive
	m	()Lcbm;	i	copyWithoutBehaviors
	m	(Laub;Lcam;)V	a	tick
	m	(Laub;Lcam;)V	c	tickSensors
	m	()V	k	forgetOutdatedMemories
	m	(Laub;Lcam;)V	b	stopAll
	m	(Laub;Lcam;)V	d	startEachNonRunningBehavior
	m	(Laub;Lcam;)V	e	tickEachRunningBehavior
	m	(Lcwn;)Z	f	activityRequirementsAreMet
	m	(Ljava/lang/Object;)Z	a	isEmptyCollection
	m	(ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList;	a	createPriorityPairs
	m	(Lcwn;)Ljava/util/Set;	g	lambda$addActivityAndRemoveMemoriesWhenStopped$4
	m	(Ljava/lang/Integer;)Ljava/util/Map;	a	lambda$addActivityAndRemoveMemoriesWhenStopped$3
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	a	lambda$isMemoryValue$2
	m	(Lcjo;)V	f	lambda$clearMemories$1
	m	(Ljava/util/Map$Entry;)Lcbm$a;	a	lambda$memories$0
	m	()V	<clinit>	<clinit>
c	cbm$1	net/minecraft/world/entity/ai/Brain$1
	f	Ljava/util/Collection;	a	val$memoryTypes
	f	Ljava/util/Collection;	b	val$sensorTypes
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	c	val$codecReference
	m	(Ljava/util/Collection;Ljava/util/Collection;Lorg/apache/commons/lang3/mutable/MutableObject;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;)Ljava/util/stream/Stream;	keys	keys
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcjo;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	captureRead
	m	(Lcbm;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	a	encode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;Lcbm$a;)V	a	lambda$encode$9
	m	(Lcjo;Lcjn;)Lcbm$a;	a	lambda$captureRead$8
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$7
	m	(Lcjo;)Lcom/mojang/serialization/DataResult;	a	lambda$captureRead$6
	m	(Lcjo;)Ljava/lang/String;	b	lambda$captureRead$5
	m	(Lcom/mojang/serialization/DynamicOps;Lorg/apache/commons/lang3/mutable/MutableObject;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$decode$4
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/util/Pair;Lcjo;)Lcom/mojang/serialization/DataResult;	a	lambda$decode$3
	m	(Lcom/mojang/serialization/DynamicOps;Lame;)Ljava/lang/Object;	a	lambda$keys$2
	m	(Lcjo;)Ljava/util/stream/Stream;	c	lambda$keys$1
	m	(Lcjo;Lcom/mojang/serialization/Codec;)Lame;	a	lambda$keys$0
c	cbm$a	net/minecraft/world/entity/ai/Brain$MemoryValue
	f	Lcjo;	a	type
	f	Ljava/util/Optional;	b	value
	m	(Lcjo;Ljava/util/Optional;)Lcbm$a;	a	createUnchecked
	m	(Lcjo;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcbm;)V	a	setMemoryInternal
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V	a	serialize
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)V	a	lambda$serialize$1
	m	(Lcom/mojang/serialization/RecordBuilder;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Lcjn;)V	a	lambda$serialize$0
c	cbm$b	net/minecraft/world/entity/ai/Brain$Provider
	f	Ljava/util/Collection;	a	memoryTypes
	f	Ljava/util/Collection;	b	sensorTypes
	f	Lcom/mojang/serialization/Codec;	c	codec
	m	(Ljava/util/Collection;Ljava/util/Collection;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	a	lambda$makeBrain$1
	m	()Lcom/mojang/serialization/Codec;	b	lambda$makeBrain$0
c	cbn	net/minecraft/world/entity/ai/attributes/Attribute
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	D	c	defaultValue
	f	Z	d	syncable
	f	Ljava/lang/String;	e	descriptionId
	f	Lcbn$a;	f	sentiment
	m	(Ljava/lang/String;D)V	<init>	<init>
	m	()D	a	getDefaultValue
	m	()Z	b	isClientSyncable
	m	(Z)Lcbn;	a	setSyncable
	m	(Lcbn$a;)Lcbn;	a	setSentiment
	m	(D)D	a	sanitizeValue
	m	()Ljava/lang/String;	c	getDescriptionId
	m	(Z)Lo;	b	getStyle
	m	()V	<clinit>	<clinit>
c	cbn$a	net/minecraft/world/entity/ai/attributes/Attribute$Sentiment
	f	Lcbn$a;	a	POSITIVE
	f	Lcbn$a;	b	NEUTRAL
	f	Lcbn$a;	c	NEGATIVE
	f	[Lcbn$a;	d	$VALUES
	m	()[Lcbn$a;	values	values
	m	(Ljava/lang/String;)Lcbn$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Z)Lo;	a	getStyle
	m	()[Lcbn$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cbo	net/minecraft/world/entity/ai/attributes/AttributeInstance
	f	Ljl;	a	attribute
	f	Ljava/util/Map;	b	modifiersByOperation
	f	Ljava/util/Map;	c	modifierById
	f	Ljava/util/Map;	d	permanentModifiers
	f	D	e	baseValue
	f	Z	f	dirty
	f	D	g	cachedValue
	f	Ljava/util/function/Consumer;	h	onDirty
	m	(Ljl;Ljava/util/function/Consumer;)V	<init>	<init>
	m	()Ljl;	a	getAttribute
	m	()D	b	getBaseValue
	m	(D)V	a	setBaseValue
	m	(Lcbq$a;)Ljava/util/Map;	a	getModifiers
	m	()Ljava/util/Set;	c	getModifiers
	m	()Ljava/util/Set;	d	getPermanentModifiers
	m	(Lame;)Lcbq;	a	getModifier
	m	(Lame;)Z	b	hasModifier
	m	(Lcbq;)V	f	addModifier
	m	(Lcbq;)V	a	addOrUpdateTransientModifier
	m	(Lcbq;)V	b	addTransientModifier
	m	(Lcbq;)V	c	addOrReplacePermanentModifier
	m	(Lcbq;)V	d	addPermanentModifier
	m	(Ljava/util/Collection;)V	a	addPermanentModifiers
	m	()V	e	setDirty
	m	(Lcbq;)V	e	removeModifier
	m	(Lame;)Z	c	removeModifier
	m	()V	f	removeModifiers
	m	()D	g	getValue
	m	()D	i	calculateValue
	m	(Lcbq$a;)Ljava/util/Collection;	b	getModifiersOrEmpty
	m	(Lcbo;)V	a	replaceFrom
	m	()Lcbo$a;	h	pack
	m	(Lcbo$a;)V	a	apply
	m	(Lcbq$a;Ljava/util/Map;)V	a	lambda$replaceFrom$1
	m	(Lcbq$a;)Ljava/util/Map;	c	lambda$getModifiers$0
c	cbo$a	net/minecraft/world/entity/ai/attributes/AttributeInstance$Packed
	f	Ljl;	c	attribute
	f	D	d	baseValue
	f	Ljava/util/List;	e	modifiers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	m	(Ljl;DLjava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	attribute
	m	()D	b	baseValue
	m	()Ljava/util/List;	c	modifiers
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cbp	net/minecraft/world/entity/ai/attributes/AttributeMap
	f	Ljava/util/Map;	a	attributes
	f	Ljava/util/Set;	b	attributesToSync
	f	Ljava/util/Set;	c	attributesToUpdate
	f	Lcbr;	d	supplier
	m	(Lcbr;)V	<init>	<init>
	m	(Lcbo;)V	a	onAttributeModified
	m	()Ljava/util/Set;	a	getAttributesToSync
	m	()Ljava/util/Set;	b	getAttributesToUpdate
	m	()Ljava/util/Collection;	c	getSyncableAttributes
	m	(Ljl;)Lcbo;	a	getInstance
	m	(Ljl;)Z	b	hasAttribute
	m	(Ljl;Lame;)Z	a	hasModifier
	m	(Ljl;)D	c	getValue
	m	(Ljl;)D	d	getBaseValue
	m	(Ljl;Lame;)D	b	getModifierValue
	m	(Lcom/google/common/collect/Multimap;)V	a	addTransientAttributeModifiers
	m	(Lcom/google/common/collect/Multimap;)V	b	removeAttributeModifiers
	m	(Lcbp;)V	a	assignAllValues
	m	(Lcbp;)V	b	assignBaseValues
	m	(Lcbp;)V	c	assignPermanentModifiers
	m	(Ljl;)Z	e	resetBaseValue
	m	()Ljava/util/List;	d	pack
	m	(Ljava/util/List;)V	a	apply
	m	(Lcbo;)V	b	lambda$assignPermanentModifiers$7
	m	(Lcbo;)V	c	lambda$assignBaseValues$6
	m	(Lcbo;)V	d	lambda$assignAllValues$5
	m	(Ljl;Ljava/util/Collection;)V	a	lambda$removeAttributeModifiers$4
	m	(Lcbo;Lcbq;)V	a	lambda$removeAttributeModifiers$3
	m	(Ljl;Lcbq;)V	a	lambda$addTransientAttributeModifiers$2
	m	(Ljl;)Lcbo;	f	lambda$getInstance$1
	m	(Lcbo;)Z	e	lambda$getSyncableAttributes$0
c	cbq	net/minecraft/world/entity/ai/attributes/AttributeModifier
	f	Lame;	d	id
	f	D	e	amount
	f	Lcbq$a;	f	operation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Lame;DLcbq$a;)V	<init>	<init>
	m	(Lame;)Z	a	is
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()D	b	amount
	m	()Lcbq$a;	c	operation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cbq$a	net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation
	f	Lcbq$a;	a	ADD_VALUE
	f	Lcbq$a;	b	ADD_MULTIPLIED_BASE
	f	Lcbq$a;	c	ADD_MULTIPLIED_TOTAL
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Lzm;	e	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	name
	f	I	h	id
	f	[Lcbq$a;	i	$VALUES
	m	()[Lcbq$a;	values	values
	m	(Ljava/lang/String;)Lcbq$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
	m	()I	a	id
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcbq$a;	b	$values
	m	()V	<clinit>	<clinit>
c	cbr	net/minecraft/world/entity/ai/attributes/AttributeSupplier
	f	Ljava/util/Map;	a	instances
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljl;)Lcbo;	d	getAttributeInstance
	m	(Ljl;)D	a	getValue
	m	(Ljl;)D	b	getBaseValue
	m	(Ljl;Lame;)D	a	getModifierValue
	m	(Ljava/util/function/Consumer;Ljl;)Lcbo;	a	createInstance
	m	()Lcbr$a;	a	builder
	m	(Ljl;)Z	c	hasAttribute
	m	(Ljl;Lame;)Z	b	hasModifier
c	cbr$a	net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	builder
	f	Z	b	instanceFrozen
	m	()V	<init>	<init>
	m	(Ljl;)Lcbo;	b	create
	m	(Ljl;)Lcbr$a;	a	add
	m	(Ljl;D)Lcbr$a;	a	add
	m	()Lcbr;	a	build
	m	(Ljl;Lcbo;)V	a	lambda$create$0
c	cbs	net/minecraft/world/entity/ai/attributes/Attributes
	f	Ljl;	a	ARMOR
	f	Ljl;	b	ARMOR_TOUGHNESS
	f	Ljl;	c	ATTACK_DAMAGE
	f	Ljl;	d	ATTACK_KNOCKBACK
	f	Ljl;	e	ATTACK_SPEED
	f	Ljl;	f	BLOCK_BREAK_SPEED
	f	Ljl;	g	BLOCK_INTERACTION_RANGE
	f	Ljl;	h	BURNING_TIME
	f	Ljl;	i	CAMERA_DISTANCE
	f	Ljl;	j	EXPLOSION_KNOCKBACK_RESISTANCE
	f	Ljl;	k	ENTITY_INTERACTION_RANGE
	f	Ljl;	l	FALL_DAMAGE_MULTIPLIER
	f	Ljl;	m	FLYING_SPEED
	f	Ljl;	n	FOLLOW_RANGE
	f	Ljl;	o	GRAVITY
	f	Ljl;	p	JUMP_STRENGTH
	f	Ljl;	q	KNOCKBACK_RESISTANCE
	f	Ljl;	r	LUCK
	f	Ljl;	s	MAX_ABSORPTION
	f	Ljl;	t	MAX_HEALTH
	f	Ljl;	u	MINING_EFFICIENCY
	f	Ljl;	v	MOVEMENT_EFFICIENCY
	f	Ljl;	w	MOVEMENT_SPEED
	f	Ljl;	x	OXYGEN_BONUS
	f	Ljl;	y	SAFE_FALL_DISTANCE
	f	Ljl;	z	SCALE
	f	Ljl;	A	SNEAKING_SPEED
	f	Ljl;	B	SPAWN_REINFORCEMENTS_CHANCE
	f	Ljl;	C	STEP_HEIGHT
	f	Ljl;	D	SUBMERGED_MINING_SPEED
	f	Ljl;	E	SWEEPING_DAMAGE_RATIO
	f	Ljl;	F	TEMPT_RANGE
	f	Ljl;	G	WATER_MOVEMENT_EFFICIENCY
	f	Ljl;	H	WAYPOINT_TRANSMIT_RANGE
	f	Ljl;	I	WAYPOINT_RECEIVE_RANGE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcbn;)Ljl;	a	register
	m	(Ljy;)Ljl;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	cbt	net/minecraft/world/entity/ai/attributes/DefaultAttributes
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	SUPPLIERS
	m	()V	<init>	<init>
	m	(Lbzv;)Lcbr;	a	getSupplier
	m	(Lbzv;)Z	b	hasSupplier
	m	()V	a	validate
	m	(Lame;)V	a	lambda$validate$2
	m	(Lbzv;)Z	c	lambda$validate$1
	m	(Lbzv;)Z	d	lambda$validate$0
	m	()V	<clinit>	<clinit>
c	cbu	net/minecraft/world/entity/ai/attributes/RangedAttribute
	f	D	c	minValue
	f	D	d	maxValue
	m	(Ljava/lang/String;DDD)V	<init>	<init>
	m	()D	d	getMinValue
	m	()D	e	getMaxValue
	m	(D)D	a	sanitizeValue
c	cbv	net/minecraft/world/entity/ai/attributes/package-info
c	cbw	net/minecraft/world/entity/ai/behavior/AcquirePoi
	f	I	a	SCAN_RANGE
	m	()V	<init>	<init>
	m	(Ljava/util/function/Predicate;Lcjo;ZLjava/util/Optional;Ljava/util/function/BiPredicate;)Lcce;	a	create
	m	(Ljava/util/function/Predicate;Lcjo;ZLjava/util/Optional;)Lcce;	a	create
	m	(Ljava/util/function/Predicate;Lcjo;Lcjo;ZLjava/util/Optional;Ljava/util/function/BiPredicate;)Lcce;	a	create
	m	(Lcao;Ljava/util/Set;)Lfaz;	a	findPathToPois
	m	(Lcjo;Lcdo;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$12
	m	(Lcdo;Lcfr;)Lcft;	a	lambda$create$11
	m	(Lcjo;ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Ljava/util/Optional;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Ljava/util/Optional;Lcfr;)Lcft;	a	lambda$create$9
	m	(ZLorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lcfr;Ljava/util/Optional;Laub;Lcau;J)Z	a	lambda$create$8
	m	(Laub;JJ)Lcbw$a;	a	lambda$create$7
	m	(Lclp;Ljava/util/function/Predicate;Ljb;Lcfr;Laub;Ljava/util/Optional;Lcau;Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;Ljl;)V	a	lambda$create$6
	m	(Laub;Lcau;Ljava/lang/Byte;)V	a	lambda$create$5
	m	(Ljb;Ljl;Ljb;)Z	a	lambda$create$4
	m	(Ljava/util/function/BiPredicate;Laub;Lcom/mojang/datafixers/util/Pair;)Z	a	lambda$create$3
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;JLjb;)Z	a	lambda$create$2
	m	(JLit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;)Z	a	lambda$create$1
	m	(Laub;Ljb;)Z	a	lambda$create$0
c	cbw$a	net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry
	f	I	a	MIN_INTERVAL_INCREASE
	f	I	b	MAX_INTERVAL_INCREASE
	f	I	c	MAX_RETRY_PATHFINDING_INTERVAL
	f	Lbck;	d	random
	f	J	e	previousAttemptTimestamp
	f	J	f	nextScheduledAttemptTimestamp
	f	I	g	currentDelay
	m	(Lbck;J)V	<init>	<init>
	m	(J)V	a	markAttempt
	m	(J)Z	b	isStillValid
	m	(J)Z	c	shouldRetry
	m	()Ljava/lang/String;	toString	toString
c	cbx	net/minecraft/world/entity/ai/behavior/AnimalMakeLove
	f	I	c	BREED_RANGE
	f	I	d	MIN_DURATION
	f	I	e	MAX_DURATION
	f	Lbzv;	f	partnerType
	f	F	g	speedModifier
	f	I	h	closeEnoughDistance
	f	I	i	DEFAULT_CLOSE_ENOUGH_DISTANCE
	f	J	j	spawnChildAtTime
	m	(Lbzv;)V	<init>	<init>
	m	(Lbzv;FI)V	<init>	<init>
	m	(Laub;Lcmd;)Z	a	checkExtraStartConditions
	m	(Laub;Lcmd;J)V	a	start
	m	(Laub;Lcmd;J)Z	b	canStillUse
	m	(Laub;Lcmd;J)V	c	tick
	m	(Laub;Lcmd;J)V	d	stop
	m	(Lcmd;)Lcmd;	a	getBreedTarget
	m	(Lcmd;)Z	b	hasBreedTargetOfRightType
	m	(Lcmd;)Ljava/util/Optional;	c	findValidBreedPartner
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcmd;Lcam;)Z	a	lambda$findValidBreedPartner$0
c	cby	net/minecraft/world/entity/ai/behavior/AnimalPanic
	f	I	c	PANIC_MIN_DURATION
	f	I	d	PANIC_MAX_DURATION
	f	I	e	PANIC_DISTANCE_HORIZONTAL
	f	I	f	PANIC_DISTANCE_VERTICAL
	f	F	g	speedMultiplier
	f	Ljava/util/function/Function;	h	panicCausingDamageTypes
	f	Ljava/util/function/Function;	i	positionGetter
	m	(F)V	<init>	<init>
	m	(FI)V	<init>	<init>
	m	(FLjava/util/function/Function;)V	<init>	<init>
	m	(FLjava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Laub;Lcau;)Z	a	checkExtraStartConditions
	m	(Laub;Lcau;J)Z	a	canStillUse
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcau;J)V	c	stop
	m	(Laub;Lcau;J)V	d	tick
	m	(Lcau;Laub;)Lfis;	a	getPanicPos
	m	(Ldly;Lbzm;)Ljava/util/Optional;	a	lookForWater
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Ldly;Ljb;)Z	a	lambda$lookForWater$8
	m	(Ldly;Ljb;)Z	b	lambda$lookForWater$7
	m	(Ldly;Ljb;)Z	c	lambda$lookForWater$6
	m	(Lcau;Lbyb;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$5
	m	(Lcau;)Lfis;	a	lambda$new$4
	m	(ILcau;)Lfis;	a	lambda$new$3
	m	(Lcau;)Lbae;	b	lambda$new$2
	m	(Lcau;)Lfis;	c	lambda$new$1
	m	(Lcau;)Lbae;	d	lambda$new$0
c	cbz	net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lcfq$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;Lcfr;Laub;Lcuf;J)Z	a	lambda$create$4
	m	(Lcuf;Laub;Ljl$c;)V	a	lambda$create$3
	m	(Ljl;)Ljava/util/Optional;	a	lambda$create$2
	m	(Ljl;Ljl$c;)Z	a	lambda$create$1
	m	(Ljk;Laub;)Ljava/util/Optional;	a	lambda$create$0
c	cca	net/minecraft/world/entity/ai/behavior/BabyFollowAdult
	m	()V	<init>	<init>
	m	(Lbwu;F)Lcdo;	a	create
	m	(Lbwu;Ljava/util/function/Function;Lcjo;Z)Lcdo;	a	create
	m	(Lcjo;Lbwu;ZLjava/util/function/Function;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Lbwu;ZLjava/util/function/Function;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lbwu;ZLjava/util/function/Function;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(FLcam;)Ljava/lang/Float;	a	lambda$create$0
c	ccb	net/minecraft/world/entity/ai/behavior/BackUpIfTooClose
	m	()V	<init>	<init>
	m	(IF)Lcdo;	a	create
	m	(IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;IFLcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ILcfr;Lcfr;FLaub;Lcao;J)Z	a	lambda$create$0
c	ccc	net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent
	m	()V	<init>	<init>
	m	(Lcjo;I)Lcce;	a	create
	m	(Lcjo;ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(ILcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfr;ILcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(Lcjo;)Ljava/lang/String;	a	lambda$create$0
c	ccd	net/minecraft/world/entity/ai/behavior/Behavior
	f	I	a	DEFAULT_DURATION
	f	Ljava/util/Map;	b	entryCondition
	f	Lccd$a;	c	status
	f	J	d	endTimestamp
	f	I	e	minDuration
	f	I	f	maxDuration
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/util/Map;I)V	<init>	<init>
	m	(Ljava/util/Map;II)V	<init>	<init>
	m	()Lccd$a;	a	getStatus
	m	(Laub;Lcam;J)Z	e	tryStart
	m	(Laub;Lcam;J)V	d	start
	m	(Laub;Lcam;J)V	f	tickOrStop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	g	doStop
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(J)Z	a	timedOut
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	()Ljava/lang/String;	b	debugString
	m	(Lcam;)Z	a	hasRequiredMemories
c	ccd$a	net/minecraft/world/entity/ai/behavior/Behavior$Status
	f	Lccd$a;	a	STOPPED
	f	Lccd$a;	b	RUNNING
	f	[Lccd$a;	c	$VALUES
	m	()[Lccd$a;	values	values
	m	(Ljava/lang/String;)Lccd$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lccd$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cce	net/minecraft/world/entity/ai/behavior/BehaviorControl
	m	()Lccd$a;	a	getStatus
	m	(Laub;Lcam;J)Z	e	tryStart
	m	(Laub;Lcam;J)V	f	tickOrStop
	m	(Laub;Lcam;J)V	g	doStop
	m	()Ljava/lang/String;	b	debugString
c	ccf	net/minecraft/world/entity/ai/behavior/BehaviorUtils
	m	()V	<init>	<init>
	m	(Lcam;Lcam;FI)V	a	lockGazeAndWalkToEachOther
	m	(Lcbm;Lcam;)Z	a	entityIsVisible
	m	(Lcbm;Lcjo;Lbzv;)Z	a	targetIsValid
	m	(Lcbm;Lcjo;Ljava/util/function/Predicate;)Z	a	targetIsValid
	m	(Lcam;Lcam;)V	c	lookAtEachOther
	m	(Lcam;Lcam;)V	a	lookAtEntity
	m	(Lcam;Lcam;FI)V	b	setWalkAndLookTargetMemoriesToEachOther
	m	(Lcam;Lbzm;FI)V	a	setWalkAndLookTargetMemories
	m	(Lcam;Ljb;FI)V	a	setWalkAndLookTargetMemories
	m	(Lcam;Lcdr;FI)V	a	setWalkAndLookTargetMemories
	m	(Lcam;Ldcv;Lfis;)V	a	throwItem
	m	(Lcam;Ldcv;Lfis;Lfis;F)V	a	throwItem
	m	(Laub;Lke;I)Lke;	a	findSectionClosestToVillage
	m	(Lcao;Lcam;I)Z	a	isWithinAttackRange
	m	(Lcam;Lcam;D)Z	a	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget
	m	(Lcam;Lcam;)Z	b	canSee
	m	(Lcam;Ljava/util/Optional;Lcam;)Lcam;	a	getNearestTarget
	m	(Lcam;Lcam;Lcam;)Lcam;	a	getTargetNearestMe
	m	(Lcam;Lcjo;)Ljava/util/Optional;	a	getLivingEntityFromUUIDMemory
	m	(Lcau;II)Lfis;	a	getRandomSwimmablePos
	m	(Lcam;)Z	a	isBreeding
	m	(Lbzm;)Lcam;	a	lambda$getLivingEntityFromUUIDMemory$4
	m	(Lcam;Ljava/util/UUID;)Lbzm;	a	lambda$getLivingEntityFromUUIDMemory$3
	m	(Laub;ILke;)Z	a	lambda$findSectionClosestToVillage$2
	m	(Lcbm;Lcam;)Z	b	lambda$targetIsValid$1
	m	(Lbzv;Lcam;)Z	a	lambda$targetIsValid$0
c	ccg	net/minecraft/world/entity/ai/behavior/BlockPosTracker
	f	Ljb;	a	blockPos
	f	Lfis;	b	centerPosition
	m	(Ljb;)V	<init>	<init>
	m	(Lfis;)V	<init>	<init>
	m	()Lfis;	a	currentPosition
	m	()Ljb;	b	currentBlockPosition
	m	(Lcam;)Z	a	isVisibleBy
	m	()Ljava/lang/String;	toString	toString
c	cch	net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid
	f	Lcwj;	c	currentRaid
	m	(II)V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	stop
	m	(Laub;Lcuf;J)V	c	tick
	m	(Ldbt;I)Ldcv;	a	getFirework
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
c	cci	net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry
	m	()V	<init>	<init>
	m	(Ljava/util/function/Predicate;Lcjo;Lcjo;Lbwu;)Lcce;	a	create
	m	(Lcjo;Lcjo;Ljava/util/function/Predicate;Lbwu;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Ljava/util/function/Predicate;Lcfq$b;Lbwu;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Ljava/util/function/Predicate;Lcfr;Lcfq$b;Lcfr;Lbwu;Laub;Lcam;J)Z	a	lambda$create$0
c	ccj	net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks
	f	Lcjo;	c	cooldownTicks
	m	(Lcjo;)V	<init>	<init>
	m	(Lcam;)Ljava/util/Optional;	b	getCooldownTickMemory
	m	(J)Z	a	timedOut
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	b	stop
c	cck	net/minecraft/world/entity/ai/behavior/Croak
	f	I	c	CROAK_TICKS
	f	I	d	TIME_OUT_DURATION
	f	I	e	croakCounter
	m	()V	<init>	<init>
	m	(Laub;Lcoc;)Z	a	checkExtraStartConditions
	m	(Laub;Lcoc;J)Z	a	canStillUse
	m	(Laub;Lcoc;J)V	b	start
	m	(Laub;Lcoc;J)V	c	stop
	m	(Laub;Lcoc;J)V	d	tick
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	ccl	net/minecraft/world/entity/ai/behavior/CrossbowAttack
	f	I	c	TIMEOUT
	f	I	d	attackDelay
	f	Lccl$a;	e	crossbowState
	m	()V	<init>	<init>
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcao;J)Z	a	canStillUse
	m	(Laub;Lcao;J)V	b	tick
	m	(Laub;Lcao;J)V	c	stop
	m	(Lcao;Lcam;)V	a	crossbowAttack
	m	(Lcao;Lcam;)V	b	lookAtTarget
	m	(Lcam;)Lcam;	b	getAttackTarget
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
c	ccl$a	net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState
	f	Lccl$a;	a	UNCHARGED
	f	Lccl$a;	b	CHARGING
	f	Lccl$a;	c	CHARGED
	f	Lccl$a;	d	READY_TO_ATTACK
	f	[Lccl$a;	e	$VALUES
	m	()[Lccl$a;	values	values
	m	(Ljava/lang/String;)Lccl$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lccl$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ccm	net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting
	m	()V	<init>	<init>
	m	(ILjava/util/function/BiPredicate;)Lcce;	a	create
	m	(Lcam;Lbzm;I)Z	a	isVehicleValid
	m	(ILjava/util/function/BiPredicate;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILjava/util/function/BiPredicate;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ILjava/util/function/BiPredicate;Laub;Lcam;J)Z	a	lambda$create$0
c	ccn	net/minecraft/world/entity/ai/behavior/DoNothing
	f	I	a	minDuration
	f	I	b	maxDuration
	f	Lccd$a;	c	status
	f	J	d	endTimestamp
	m	(II)V	<init>	<init>
	m	()Lccd$a;	a	getStatus
	m	(Laub;Lcam;J)Z	e	tryStart
	m	(Laub;Lcam;J)V	f	tickOrStop
	m	(Laub;Lcam;J)V	g	doStop
	m	()Ljava/lang/String;	b	debugString
c	cco	net/minecraft/world/entity/ai/behavior/EntityTracker
	f	Lbzm;	a	entity
	f	Z	b	trackEyeHeight
	f	Z	c	targetEyeHeight
	m	(Lbzm;Z)V	<init>	<init>
	m	(Lbzm;ZZ)V	<init>	<init>
	m	()Lfis;	a	currentPosition
	m	()Ljb;	b	currentBlockPosition
	m	(Lcam;)Z	a	isVisibleBy
	m	()Lbzm;	c	getEntity
	m	()Ljava/lang/String;	toString	toString
c	ccp	net/minecraft/world/entity/ai/behavior/EraseMemoryIf
	m	()V	<init>	<init>
	m	(Ljava/util/function/Predicate;Lcjo;)Lcce;	a	create
	m	(Lcjo;Ljava/util/function/Predicate;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Ljava/util/function/Predicate;Lcfr;)Lcft;	a	lambda$create$1
	m	(Ljava/util/function/Predicate;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	ccq	net/minecraft/world/entity/ai/behavior/FollowTemptation
	f	I	c	TEMPTATION_COOLDOWN
	f	D	d	DEFAULT_CLOSE_ENOUGH_DIST
	f	D	e	BACKED_UP_CLOSE_ENOUGH_DIST
	f	Ljava/util/function/Function;	f	speedModifier
	f	Ljava/util/function/Function;	g	closeEnoughDistance
	f	Z	h	lookInTheEyes
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Z)V	<init>	<init>
	m	(Lcau;)F	a	getSpeedModifier
	m	(Lcau;)Ljava/util/Optional;	b	getTemptingPlayer
	m	(J)Z	a	timedOut
	m	(Laub;Lcau;J)Z	a	canStillUse
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcau;J)V	c	stop
	m	(Laub;Lcau;J)V	d	tick
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	()Lcom/google/common/collect/ImmutableMap;	c	lambda$new$1
	m	(Lcam;)Ljava/lang/Double;	b	lambda$new$0
c	ccr	net/minecraft/world/entity/ai/behavior/GateBehavior
	f	Ljava/util/Map;	a	entryCondition
	f	Ljava/util/Set;	b	exitErasedMemories
	f	Lccr$a;	c	orderPolicy
	f	Lccr$b;	d	runningPolicy
	f	Lcem;	e	behaviors
	f	Lccd$a;	f	status
	m	(Ljava/util/Map;Ljava/util/Set;Lccr$a;Lccr$b;Ljava/util/List;)V	<init>	<init>
	m	()Lccd$a;	a	getStatus
	m	(Lcam;)Z	a	hasRequiredMemories
	m	(Laub;Lcam;J)Z	e	tryStart
	m	(Laub;Lcam;J)V	f	tickOrStop
	m	(Laub;Lcam;J)V	g	doStop
	m	()Ljava/lang/String;	b	debugString
	m	()Ljava/lang/String;	toString	toString
	m	(Lcce;)Z	a	lambda$toString$6
	m	(Laub;Lcam;JLcce;)V	a	lambda$doStop$5
	m	(Lcce;)Z	b	lambda$doStop$4
	m	(Lcce;)Z	c	lambda$tickOrStop$3
	m	(Laub;Lcam;JLcce;)V	b	lambda$tickOrStop$2
	m	(Lcce;)Z	d	lambda$tickOrStop$1
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$0
c	ccr$a	net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy
	f	Lccr$a;	a	ORDERED
	f	Lccr$a;	b	SHUFFLED
	f	Ljava/util/function/Consumer;	c	consumer
	f	[Lccr$a;	d	$VALUES
	m	()[Lccr$a;	values	values
	m	(Ljava/lang/String;)Lccr$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/Consumer;)V	<init>	<init>
	m	(Lcem;)V	a	apply
	m	(Lcem;)V	b	lambda$static$0
	m	()[Lccr$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ccr$b	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy
	f	Lccr$b;	a	RUN_ONE
	f	Lccr$b;	b	TRY_ALL
	f	[Lccr$b;	c	$VALUES
	m	()[Lccr$b;	values	values
	m	(Ljava/lang/String;)Lccr$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/util/stream/Stream;Laub;Lcam;J)V	a	apply
	m	()[Lccr$b;	a	$values
	m	()V	<clinit>	<clinit>
c	ccr$b$1	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$1
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/util/stream/Stream;Laub;Lcam;J)V	a	apply
	m	(Laub;Lcam;JLcce;)Z	a	lambda$apply$1
	m	(Lcce;)Z	a	lambda$apply$0
c	ccr$b$2	net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy$2
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/util/stream/Stream;Laub;Lcam;J)V	a	apply
	m	(Laub;Lcam;JLcce;)V	a	lambda$apply$1
	m	(Lcce;)Z	a	lambda$apply$0
c	ccs	net/minecraft/world/entity/ai/behavior/GiveGiftToHero
	f	I	c	THROW_GIFT_AT_DISTANCE
	f	I	d	MIN_TIME_BETWEEN_GIFTS
	f	I	e	MAX_TIME_BETWEEN_GIFTS
	f	I	f	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING
	f	Ljava/util/Map;	g	GIFTS
	f	F	h	SPEED_MODIFIER
	f	I	i	timeUntilNextGift
	f	Z	j	giftGivenDuringThisRun
	f	J	k	timeSinceStart
	m	(I)V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)V	a	start
	m	(Laub;Lcuf;J)Z	b	canStillUse
	m	(Laub;Lcuf;J)V	c	tick
	m	(Laub;Lcuf;J)V	d	stop
	m	(Laub;Lcuf;Lcam;)V	a	throwGift
	m	(Lcuf;)Lamd;	a	getLootTableToThrow
	m	(Lcuf;)Z	b	isHeroVisible
	m	(Lcuf;)Ljava/util/Optional;	c	getNearestTargetableHero
	m	(Lcut;)Z	a	isHero
	m	(Lcuf;Lcut;)Z	a	isWithinThrowingDistance
	m	(Laub;)I	a	calculateTimeUntilNextGift
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcuf;Lcam;Laub;Ldcv;)V	a	lambda$throwGift$0
	m	()V	<clinit>	<clinit>
c	cct	net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget
	f	I	c	CLOSE_ENOUGH_DISTANCE_TO_TARGET
	f	I	d	ITEM_PICKUP_COOLDOWN_AFTER_THROWING
	f	Ljava/util/function/Function;	e	targetPositionGetter
	f	F	f	speedModifier
	m	(Ljava/util/function/Function;FI)V	<init>	<init>
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	d	start
	m	(Laub;Lcam;J)V	c	tick
	m	(Lcdr;Ldcv;Lauc;)V	a	triggerDropItemOnBlock
	m	(Lcam;)Z	b	canThrowItemToTarget
	m	(Lcdr;)Lfis;	a	getThrowPosition
	m	(Lcam;Ldcv;Lfis;)V	a	throwItem
	m	(Lcdr;Ldcv;Lauc;)V	b	lambda$tick$1
	m	(Lcam;Lcdr;)V	a	lambda$start$0
c	ccu	net/minecraft/world/entity/ai/behavior/GoToClosestVillage
	m	()V	<init>	<init>
	m	(FI)Lcce;	a	create
	m	(FILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(FILcfr;)Lcft;	a	lambda$create$2
	m	(Lcfr;FILaub;Lcuf;J)Z	a	lambda$create$1
	m	(Lclp;Ljb;)D	a	lambda$create$0
c	ccv	net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite
	f	I	d	TICKS_UNTIL_TIMEOUT
	f	F	c	speedModifier
	m	(F)V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	tick
	m	(Laub;Lcuf;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Ljk;)V	a	lambda$stop$2
	m	(Ljl;)Z	a	lambda$stop$1
	m	(Lcwn;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$0
c	ccw	net/minecraft/world/entity/ai/behavior/GoToTargetLocation
	m	()V	<init>	<init>
	m	(Lcao;Ljb;)Ljb;	a	getNearbyPos
	m	(Lbck;)I	a	getRandomOffset
	m	(Lcjo;IF)Lcdo;	a	create
	m	(Lcjo;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;IFLcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;IFLaub;Lcao;J)Z	a	lambda$create$0
c	ccx	net/minecraft/world/entity/ai/behavior/GoToWantedItem
	m	()V	<init>	<init>
	m	(FZI)Lcce;	a	create
	m	(Ljava/util/function/Predicate;FZI)Lcce;	a	create
	m	(ZLjava/util/function/Predicate;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Ljava/util/function/Predicate;IFLcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;Ljava/util/function/Predicate;IFLcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(Lcam;)Z	a	lambda$create$0
c	ccy	net/minecraft/world/entity/ai/behavior/HarvestFarmland
	f	I	d	HARVEST_DURATION
	f	F	c	SPEED_MODIFIER
	f	Ljb;	e	aboveFarmlandPos
	f	J	f	nextOkStartTime
	f	I	g	timeWorkedSoFar
	f	Ljava/util/List;	h	validFarmlandAroundVillager
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;)Ljb;	a	getValidFarmland
	m	(Ljb;Laub;)Z	a	validPos
	m	(Laub;Lcuf;J)V	a	start
	m	(Laub;Lcuf;J)V	b	stop
	m	(Laub;Lcuf;J)V	c	tick
	m	(Laub;Lcuf;J)Z	d	canStillUse
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	ccz	net/minecraft/world/entity/ai/behavior/InsideBrownianWalk
	m	()V	<init>	<init>
	m	(F)Lcce;	a	create
	m	(FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(FLcfr;)Lcft;	a	lambda$create$5
	m	(Lcfr;FLaub;Lcau;J)Z	a	lambda$create$4
	m	(Lcfr;FLjb;)V	a	lambda$create$3
	m	(Laub;Lcau;Ljb;)Z	a	lambda$create$2
	m	(Laub;Lcau;Ljb;)Z	b	lambda$create$1
	m	(Laub;Ljb;)Z	a	lambda$create$0
c	cda	net/minecraft/world/entity/ai/behavior/InteractWith
	m	()V	<init>	<init>
	m	(Lbzv;ILcjo;FI)Lcce;	a	of
	m	(Lbzv;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lcjo;FI)Lcce;	a	of
	m	(Lcjo;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$of$7
	m	(Lcfq$b;Ljava/util/function/Predicate;Ljava/util/function/Predicate;IFILcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$of$6
	m	(Lcfq$b;Lcfr;Ljava/util/function/Predicate;Ljava/util/function/Predicate;ILcfr;Lcfr;Lcfr;FILaub;Lcam;J)Z	a	lambda$of$5
	m	(Lcfr;Lcfr;Lcfr;FILcam;)V	a	lambda$of$4
	m	(Lcam;ILjava/util/function/Predicate;Lcam;)Z	a	lambda$of$3
	m	(Lbzv;Ljava/util/function/Predicate;Lcam;)Z	a	lambda$of$2
	m	(Lcam;)Z	a	lambda$of$1
	m	(Lcam;)Z	b	lambda$of$0
c	cdb	net/minecraft/world/entity/ai/behavior/InteractWithDoor
	f	I	a	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE
	f	D	b	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN
	f	D	c	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Laub;Lcam;Lfax;Lfax;Ljava/util/Set;Ljava/util/Optional;)V	a	closeDoorsThatIHaveOpenedOrPassedThrough
	m	(Lcam;Ljb;Ljava/util/Optional;)Z	a	areOtherMobsComingThroughDoor
	m	(Lcbm;Ljb;)Z	a	isMobComingThroughDoor
	m	(Laub;Lcam;Ljk;)Z	a	isDoorTooFarAway
	m	(Lcfr;Ljava/util/Optional;Laub;Ljb;)Ljava/util/Optional;	a	rememberDoorToClose
	m	(Ljk;Lcfr;)Ljava/util/Set;	a	lambda$rememberDoorToClose$11
	m	(Ljk;Ljava/util/Set;)Ljava/util/Set;	a	lambda$rememberDoorToClose$10
	m	(Ljb;Lcam;)Z	a	lambda$areOtherMobsComingThroughDoor$9
	m	(Ljb;Lcam;)Z	b	lambda$areOtherMobsComingThroughDoor$8
	m	(Lcam;Lcam;)Z	a	lambda$areOtherMobsComingThroughDoor$7
	m	(Leea$a;)Z	a	lambda$closeDoorsThatIHaveOpenedOrPassedThrough$6
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
	m	(Lcfq$b;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Lcfr;Lorg/apache/commons/lang3/mutable/MutableObject;Lorg/apache/commons/lang3/mutable/MutableInt;Lcfr;Laub;Lcam;J)Z	a	lambda$create$3
	m	(Laub;Lcam;Lfax;Lfax;Lcfq$b;Lcfr;Ljava/util/Set;)V	a	lambda$create$2
	m	(Leea$a;)Z	b	lambda$create$1
	m	(Leea$a;)Z	c	lambda$create$0
c	cdc	net/minecraft/world/entity/ai/behavior/JumpOnBed
	f	I	c	MAX_TIME_TO_REACH_BED
	f	I	d	MIN_JUMPS
	f	I	e	MAX_JUMPS
	f	I	f	COOLDOWN_BETWEEN_JUMPS
	f	F	g	speedModifier
	f	Ljb;	h	targetBed
	f	I	i	remainingTimeToReachBed
	f	I	j	remainingJumps
	f	I	k	remainingCooldownUntilNextJump
	m	(F)V	<init>	<init>
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcao;J)V	a	start
	m	(Laub;Lcao;J)V	b	stop
	m	(Laub;Lcao;J)Z	c	canStillUse
	m	(J)Z	a	timedOut
	m	(Laub;Lcao;J)V	d	tick
	m	(Lcao;Ljb;)V	a	startWalkingTowardsBed
	m	(Laub;Lcao;)Z	b	nearBed
	m	(Laub;Lcao;)Z	c	onOrOverBed
	m	(Laub;Lcao;)Z	d	onBedSurface
	m	(Laub;Ljb;)Z	a	isBed
	m	(Lcao;)Ljava/util/Optional;	a	getNearestBed
	m	(Laub;Lcao;)Z	e	tiredOfWalking
	m	(Laub;Lcao;)Z	f	tiredOfJumping
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Laub;Lcao;Ljb;)V	a	lambda$start$0
c	cdd	net/minecraft/world/entity/ai/behavior/LocateHidingPlace
	m	()V	<init>	<init>
	m	(IFI)Lcdo;	a	create
	m	(IIFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$10
	m	(IILcfq$b;FLcfr;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$9
	m	(IILcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;FLaub;Lcam;J)Z	a	lambda$create$8
	m	(Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;Laub;Lcam;ILcfr;FLjb;)V	a	lambda$create$7
	m	(Lcfq$b;Lcfr;)Ljava/util/Optional;	a	lambda$create$6
	m	(Laub;Lcam;I)Ljava/util/Optional;	a	lambda$create$5
	m	(Ljb;)Z	a	lambda$create$4
	m	(Ljl;)Z	a	lambda$create$3
	m	(Lcam;ILjb;)Z	a	lambda$create$2
	m	(Ljb;)Z	b	lambda$create$1
	m	(Ljl;)Z	b	lambda$create$0
c	cde	net/minecraft/world/entity/ai/behavior/LongJumpMidJump
	f	I	c	TIME_OUT_DURATION
	f	Lbwu;	d	timeBetweenLongJumps
	f	Layy;	e	landingSound
	m	(Lbwu;Layy;)V	<init>	<init>
	m	(Laub;Lcao;J)Z	a	canStillUse
	m	(Laub;Lcao;J)V	b	start
	m	(Laub;Lcao;J)V	c	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cdf	net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock
	f	Lbae;	m	preferredBlockTag
	f	F	n	preferredBlocksChance
	f	Ljava/util/List;	o	notPrefferedJumpCandidates
	f	Z	p	currentlyWantingPreferredOnes
	m	(Lbwu;IIFLjava/util/function/Function;Lbae;FLjava/util/function/BiPredicate;)V	<init>	<init>
	m	(Laub;Lcao;J)V	a	start
	m	(Laub;)Ljava/util/Optional;	a	getJumpCandidate
	m	(Laub;Lcam;J)V	d	start
c	cdg	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos
	f	I	c	FIND_JUMP_TRIES
	f	I	m	PREPARE_JUMP_DURATION
	f	I	d	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP
	f	I	n	TIME_OUT_DURATION
	f	Ljava/util/List;	o	ALLOWED_ANGLES
	f	Lbwu;	p	timeBetweenLongJumps
	f	I	e	maxLongJumpHeight
	f	I	f	maxLongJumpWidth
	f	F	g	maxJumpVelocityMultiplier
	f	Ljava/util/List;	h	jumpCandidates
	f	Ljava/util/Optional;	i	initialPosition
	f	Lfis;	j	chosenJump
	f	I	k	findJumpTries
	f	J	l	prepareJumpStart
	f	Ljava/util/function/Function;	q	getJumpSound
	f	Ljava/util/function/BiPredicate;	r	acceptableLandingSpot
	m	(Lbwu;IIFLjava/util/function/Function;)V	<init>	<init>
	m	(Lcao;Ljb;)Z	a	defaultAcceptableLandingSpot
	m	(Lbwu;IIFLjava/util/function/Function;Ljava/util/function/BiPredicate;)V	<init>	<init>
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcao;J)Z	b	canStillUse
	m	(Laub;Lcao;J)V	a	start
	m	(Laub;Lcao;J)V	c	tick
	m	(Laub;Lcao;J)V	d	pickCandidate
	m	(Laub;)Ljava/util/Optional;	a	getJumpCandidate
	m	(Laub;Lcao;Ljb;)Z	a	isAcceptableLandingPosition
	m	(Lcao;Lfis;)Lfis;	a	calculateOptimalJumpVector
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Ljb;Ljb;)Lcdg$a;	a	lambda$start$1
	m	(Ljb;Ljb;)Z	b	lambda$start$0
	m	()V	<clinit>	<clinit>
c	cdg$a	net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump
	f	Ljb;	a	targetPos
	f	I	b	weight
	m	(Ljb;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	targetPos
	m	()I	b	weight
c	cdh	net/minecraft/world/entity/ai/behavior/LongJumpUtil
	m	()V	<init>	<init>
	m	(Lcao;Lfis;FIZ)Ljava/util/Optional;	a	calculateJumpVectorForAngle
	m	(Lcao;Lbzp;Lfis;Lfis;)Z	a	isClearTransition
c	cdi	net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink
	f	F	c	speedModifier
	m	(F)V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	start
	m	(Laub;Lcuf;J)V	c	stop
	m	(Laub;Lcuf;J)V	d	tick
	m	(J)Z	a	timedOut
	m	(Lcuf;)V	a	followPlayer
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cdj	net/minecraft/world/entity/ai/behavior/LookAtTargetSink
	m	(II)V	<init>	<init>
	m	(Laub;Lcao;J)Z	a	canStillUse
	m	(Laub;Lcao;J)V	b	stop
	m	(Laub;Lcao;J)V	c	tick
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Lcao;Lcdr;)V	a	lambda$tick$1
	m	(Lcao;Lcdr;)Z	b	lambda$canStillUse$0
c	cdk	net/minecraft/world/entity/ai/behavior/MeleeAttack
	m	()V	<init>	<init>
	m	(I)Lcdo;	a	create
	m	(Ljava/util/function/Predicate;I)Lcdo;	a	create
	m	(Lcao;)Z	a	isHoldingUsableProjectileWeapon
	m	(Lcao;Ldcv;)Z	a	lambda$isHoldingUsableProjectileWeapon$4
	m	(Ljava/util/function/Predicate;ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Ljava/util/function/Predicate;ILcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Ljava/util/function/Predicate;Lcfr;Lcfr;Lcfr;ILaub;Lcao;J)Z	a	lambda$create$1
	m	(Lcao;)Z	b	lambda$create$0
c	cdl	net/minecraft/world/entity/ai/behavior/Mount
	f	I	a	CLOSE_ENOUGH_TO_START_RIDING_DIST
	m	()V	<init>	<init>
	m	(F)Lcce;	a	create
	m	(FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;FLcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;FLaub;Lcam;J)Z	a	lambda$create$0
c	cdm	net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot
	m	()V	<init>	<init>
	m	(F)Lcdo;	a	create
	m	(Laub;Lcam;)Lfis;	a	getOutdoorPosition
	m	(Laub;Lcam;Ljb;)Z	a	hasNoBlocksAbove
	m	(FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(FLcfr;)Lcft;	a	lambda$create$2
	m	(Lcfr;FLaub;Lcam;J)Z	a	lambda$create$1
	m	(Lcfr;FLfis;)V	a	lambda$create$0
c	cdn	net/minecraft/world/entity/ai/behavior/MoveToTargetSink
	f	I	c	MAX_COOLDOWN_BEFORE_RETRYING
	f	I	d	remainingCooldown
	f	Lfaz;	e	path
	f	Ljb;	f	lastTargetPos
	f	F	g	speedModifier
	m	()V	<init>	<init>
	m	(II)V	<init>	<init>
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcao;J)Z	a	canStillUse
	m	(Laub;Lcao;J)V	b	stop
	m	(Laub;Lcao;J)V	c	start
	m	(Laub;Lcao;J)V	d	tick
	m	(Lcao;Lcjr;J)Z	a	tryComputePath
	m	(Lcao;Lcjr;)Z	a	reachedTarget
	m	(Lcjr;)Z	a	isWalkTargetSpectator
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cdo	net/minecraft/world/entity/ai/behavior/OneShot
	f	Lccd$a;	a	status
	m	()V	<init>	<init>
	m	()Lccd$a;	a	getStatus
	m	(Laub;Lcam;J)Z	e	tryStart
	m	(Laub;Lcam;J)V	f	tickOrStop
	m	(Laub;Lcam;J)V	g	doStop
	m	()Ljava/lang/String;	b	debugString
c	cdp	net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids
	f	I	a	MAX_FLEE_XZ_DIST
	f	I	b	MAX_FLEE_Y_DIST
	f	F	c	FLEE_SPEED_MODIFIER
	f	F	d	CHASE_SPEED_MODIFIER
	f	I	e	MAX_CHASERS_PER_TARGET
	f	I	f	AVERAGE_WAIT_TIME_BETWEEN_RUNS
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfr;Lcfr;Lcfr;Lcam;)V	a	chaseKid
	m	(Ljava/util/List;)Ljava/util/Optional;	a	findSomeoneBeingChased
	m	(Ljava/util/List;)Ljava/util/Map;	b	checkHowManyChasersEachFriendHas
	m	(Lcam;)Lcam;	a	whoAreYouChasing
	m	(Lcam;)Z	b	isChasingSomeone
	m	(Lcam;Lcam;)Z	a	isFriendChasingMe
	m	(Lcam;Lcam;)Z	b	lambda$isFriendChasingMe$8
	m	(Ljava/util/Map;Lcam;)V	a	lambda$checkHowManyChasersEachFriendHas$7
	m	(Lcam;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$checkHowManyChasersEachFriendHas$6
	m	(Ljava/util/Map$Entry;)Z	a	lambda$findSomeoneBeingChased$5
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$3
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;Laub;Lcau;J)Z	a	lambda$create$2
	m	(Lcfr;Lcfr;Lcfr;Lcam;)V	b	lambda$create$1
	m	(Lcau;Lcam;)Z	a	lambda$create$0
c	cdq	net/minecraft/world/entity/ai/behavior/PoiCompetitorScan
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcuf;Lcuf;)Lcuf;	a	selectWinner
	m	(Ljk;Ljl;Lcuf;)Z	a	competesForSameJobsite
	m	(Ljl;Ljl;)Z	a	hasMatchingProfession
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lcfq$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;Lcfr;Laub;Lcuf;J)Z	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Lcuf;Ljk;Ljl;)V	a	lambda$create$3
	m	(Ljk;Ljl;Lcuf;)Z	b	lambda$create$2
	m	(Lcam;)Lcuf;	a	lambda$create$1
	m	(Lcuf;Lcam;)Z	a	lambda$create$0
c	cdr	net/minecraft/world/entity/ai/behavior/PositionTracker
	m	()Lfis;	a	currentPosition
	m	()Ljb;	b	currentBlockPosition
	m	(Lcam;)Z	a	isVisibleBy
c	cds	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget
	f	I	c	TIME_OUT_DURATION
	f	Ljava/util/function/ToIntFunction;	d	getCooldownOnFail
	f	I	e	minRamDistance
	f	I	f	maxRamDistance
	f	F	g	walkSpeed
	f	Lclc;	h	ramTargeting
	f	I	i	ramPrepareTime
	f	Ljava/util/function/Function;	j	getPrepareRamSound
	f	Ljava/util/Optional;	k	reachedRamPositionTimestamp
	f	Ljava/util/Optional;	l	ramCandidate
	m	(Ljava/util/function/ToIntFunction;IIFLclc;ILjava/util/function/Function;)V	<init>	<init>
	m	(Laub;Lcau;J)V	a	start
	m	(Laub;Lcau;J)V	b	stop
	m	(Laub;Lcau;J)Z	c	canStillUse
	m	(Laub;Lcau;J)V	d	tick
	m	(Ljb;Ljb;)Lfis;	a	getEdgeOfBlock
	m	(Lcau;Lcam;)Ljava/util/Optional;	a	calculateRammingStartPosition
	m	(Lcau;Ljb;)Z	a	isWalkableBlock
	m	(Lcau;Lcam;)V	b	chooseRamPosition
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcam;Ljb;)Lcds$a;	a	lambda$chooseRamPosition$4
	m	(Lcjw;Ljb;)Z	a	lambda$calculateRammingStartPosition$3
	m	(Lcau;Lcam;)V	c	lambda$start$2
	m	(Laub;Lcau;Lcjq;)Ljava/util/Optional;	a	lambda$start$1
	m	(Laub;Lcau;Lcam;)Z	a	lambda$start$0
c	cds$a	net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate
	f	Ljb;	a	startPosition
	f	Ljb;	b	targetPosition
	f	Lcam;	c	target
	m	(Ljb;Ljb;Lcam;)V	<init>	<init>
	m	()Ljb;	a	getStartPosition
	m	()Ljb;	b	getTargetPosition
	m	()Lcam;	c	getTarget
c	cdt	net/minecraft/world/entity/ai/behavior/RamTarget
	f	I	c	TIME_OUT_DURATION
	f	F	d	RAM_SPEED_FORCE_FACTOR
	f	Ljava/util/function/Function;	e	getTimeBetweenRams
	f	Lclc;	f	ramTargeting
	f	F	g	speed
	f	Ljava/util/function/ToDoubleFunction;	h	getKnockbackForce
	f	Lfis;	i	ramDirection
	f	Ljava/util/function/Function;	j	getImpactSound
	f	Ljava/util/function/Function;	k	getHornBreakSound
	m	(Ljava/util/function/Function;Lclc;FLjava/util/function/ToDoubleFunction;Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Laub;Lcok;)Z	a	checkExtraStartConditions
	m	(Laub;Lcok;J)Z	a	canStillUse
	m	(Laub;Lcok;J)V	b	start
	m	(Laub;Lcok;J)V	c	tick
	m	(Laub;Lcok;)Z	c	hasRammedHornBreakingBlock
	m	(Laub;Lcok;)V	b	finishRam
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cdu	net/minecraft/world/entity/ai/behavior/RandomLookAround
	f	Lbwo;	c	interval
	f	F	d	maxYaw
	f	F	e	minPitch
	f	F	f	pitchRange
	m	(Lbwo;FFF)V	<init>	<init>
	m	(Laub;Lcao;J)V	a	start
	m	(Laub;Lcam;J)V	d	start
c	cdv	net/minecraft/world/entity/ai/behavior/RandomStroll
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
	f	[[I	c	SWIM_XY_DISTANCE_TIERS
	m	()V	<init>	<init>
	m	(F)Lcdo;	a	stroll
	m	(FZ)Lcdo;	a	stroll
	m	(FII)Lcce;	a	stroll
	m	(F)Lcce;	b	fly
	m	(F)Lcce;	c	swim
	m	(FLjava/util/function/Function;Ljava/util/function/Predicate;)Lcdo;	a	strollFlyOrSwim
	m	(Lcau;)Lfis;	a	getTargetSwimPos
	m	(Lcau;II)Lfis;	a	getTargetFlyPos
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$strollFlyOrSwim$10
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;FLcfr;)Lcft;	a	lambda$strollFlyOrSwim$9
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;Lcfr;FLaub;Lcau;J)Z	a	lambda$strollFlyOrSwim$8
	m	(FLfis;)Lcjr;	a	lambda$strollFlyOrSwim$7
	m	(Lcau;)Z	b	lambda$fly$6
	m	(Lcau;)Lfis;	c	lambda$fly$5
	m	(Lcau;)Z	d	lambda$stroll$4
	m	(IILcau;)Lfis;	a	lambda$stroll$3
	m	(Lcau;)Z	e	lambda$stroll$2
	m	(Lcau;)Z	f	lambda$stroll$1
	m	(Lcau;)Lfis;	g	lambda$stroll$0
	m	()V	<clinit>	<clinit>
c	cdw	net/minecraft/world/entity/ai/behavior/ReactToBell
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfr;)Lcft;	a	lambda$create$1
	m	(Laub;Lcam;J)Z	a	lambda$create$0
c	cdx	net/minecraft/world/entity/ai/behavior/ResetProfession
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfr;)Lcft;	a	lambda$create$1
	m	(Laub;Lcuf;J)Z	a	lambda$create$0
c	cdy	net/minecraft/world/entity/ai/behavior/ResetRaidStatus
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
	m	(Laub;Lcam;J)Z	a	lambda$create$0
c	cdz	net/minecraft/world/entity/ai/behavior/RingBell
	f	F	b	BELL_RING_CHANCE
	f	I	a	RING_BELL_FROM_DISTANCE
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	cea	net/minecraft/world/entity/ai/behavior/RunOne
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
c	ceb	net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget
	f	I	a	CACHE_TIMEOUT
	f	I	b	BATCH_SIZE
	f	I	c	RATE
	f	I	d	OK_DISTANCE_SQR
	m	()V	<init>	<init>
	m	(F)Lcce;	a	create
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;FLcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lcfr;FLaub;Lcau;J)Z	a	lambda$create$4
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$create$3
	m	(Ljl;)Z	a	lambda$create$2
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap;Lorg/apache/commons/lang3/mutable/MutableInt;Lorg/apache/commons/lang3/mutable/MutableLong;Ljb;)Z	a	lambda$create$1
	m	(Ljl;)Z	b	lambda$create$0
c	cec	net/minecraft/world/entity/ai/behavior/SetEntityLookTarget
	m	()V	<init>	<init>
	m	(Lcap;F)Lcce;	a	create
	m	(Lbzv;F)Lcdo;	a	create
	m	(F)Lcdo;	a	create
	m	(Ljava/util/function/Predicate;F)Lcdo;	a	create
	m	(Ljava/util/function/Predicate;FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lcfq$b;Ljava/util/function/Predicate;FLcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;Ljava/util/function/Predicate;FLcfr;Laub;Lcam;J)Z	a	lambda$create$4
	m	(Lcam;FLcam;)Z	a	lambda$create$3
	m	(Lcam;)Z	a	lambda$create$2
	m	(Lbzv;Lcam;)Z	a	lambda$create$1
	m	(Lcap;Lcam;)Z	a	lambda$create$0
c	ced	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes
	m	()V	<init>	<init>
	m	(FLbwu;)Lcce;	a	create
	m	(Lbzv;FLbwu;)Lcce;	a	create
	m	(FLbwu;Ljava/util/function/Predicate;)Lcce;	a	create
	m	(Ljava/util/function/Predicate;FLced$a;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
	m	(Lcfq$b;Ljava/util/function/Predicate;FLced$a;Lcfr;Lcfr;)Lcft;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Ljava/util/function/Predicate;FLced$a;Lcfr;Laub;Lcam;J)Z	a	lambda$create$3
	m	(Lcam;FLcam;)Z	a	lambda$create$2
	m	(Lbzv;Lcam;)Z	a	lambda$create$1
	m	(Lcam;)Z	a	lambda$create$0
c	ced$a	net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker
	f	Lbwu;	a	interval
	f	I	b	ticksUntilNextStart
	m	(Lbwu;)V	<init>	<init>
	m	(Lbck;)Z	a	tickDownAndCheck
c	cee	net/minecraft/world/entity/ai/behavior/SetHiddenState
	f	I	a	HIDE_TIMEOUT
	m	()V	<init>	<init>
	m	(II)Lcce;	a	create
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;IILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Lorg/apache/commons/lang3/mutable/MutableInt;IILcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lorg/apache/commons/lang3/mutable/MutableInt;ILcfr;ILaub;Lcam;J)Z	a	lambda$create$0
c	cef	net/minecraft/world/entity/ai/behavior/SetLookAndInteract
	m	()V	<init>	<init>
	m	(Lbzv;I)Lcce;	a	create
	m	(ILbzv;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;ILbzv;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;ILbzv;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(Lcam;ILbzv;Lcam;)Z	a	lambda$create$0
c	ceg	net/minecraft/world/entity/ai/behavior/SetRaidStatus
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
	m	(Laub;Lcam;J)Z	a	lambda$create$0
c	ceh	net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom
	m	()V	<init>	<init>
	m	(Lcjo;FIZ)Lcce;	a	pos
	m	(Lcjo;FIZ)Lcdo;	b	entity
	m	(Lcjo;FIZLjava/util/function/Function;)Lcdo;	a	create
	m	(Lcjo;ZLjava/util/function/Function;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ZLjava/util/function/Function;IFLcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ZLjava/util/function/Function;Lcfr;IFLaub;Lcau;J)Z	a	lambda$create$0
c	cei	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach
	f	I	a	PROJECTILE_ATTACK_RANGE_BUFFER
	m	()V	<init>	<init>
	m	(F)Lcce;	a	create
	m	(Ljava/util/function/Function;)Lcce;	a	create
	m	(Ljava/util/function/Function;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Ljava/util/function/Function;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;Ljava/util/function/Function;Laub;Lcao;J)Z	a	lambda$create$1
	m	(FLcam;)Ljava/lang/Float;	a	lambda$create$0
c	cej	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory
	m	()V	<init>	<init>
	m	(Lcjo;FIII)Lcdo;	a	create
	m	(Lcjo;IIFILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILcjo;IFILcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;ILcjo;ILcfr;FILaub;Lcuf;J)Z	a	lambda$create$0
c	cek	net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget
	m	()V	<init>	<init>
	m	(FI)Lcdo;	a	create
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lcdo;	a	create
	m	(Ljava/util/function/Predicate;Ljava/util/function/Function;ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
	m	(Ljava/util/function/Predicate;Lcfq$b;Ljava/util/function/Function;ILcfr;Lcfr;)Lcft;	a	lambda$create$3
	m	(Ljava/util/function/Predicate;Lcfr;Lcfq$b;Lcfr;Ljava/util/function/Function;ILaub;Lcam;J)Z	a	lambda$create$2
	m	(FLcam;)Ljava/lang/Float;	a	lambda$create$1
	m	(Lcam;)Z	a	lambda$create$0
c	cel	net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer
	f	I	c	MAX_LOOK_TIME
	f	I	d	STARTING_LOOK_TIME
	f	Ldcv;	e	playerItemStack
	f	Ljava/util/List;	f	displayItems
	f	I	g	cycleCounter
	f	I	h	displayIndex
	f	I	i	lookTime
	m	(II)V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	start
	m	(Laub;Lcuf;J)V	c	tick
	m	(Laub;Lcuf;J)V	d	stop
	m	(Lcam;Lcuf;)V	a	findItemsToDisplay
	m	(Lcuf;)V	a	displayFirstItem
	m	(Lcuf;)V	b	updateDisplayItems
	m	(Ldlq;)Z	a	playerItemStackMatchesCostOfOffer
	m	(Lcuf;)V	c	clearHeldItem
	m	(Lcuf;Ldcv;)V	a	displayAsHeldItem
	m	(Lcuf;)Lcam;	d	lookAtTarget
	m	(Lcuf;)V	e	displayCyclingItems
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cem	net/minecraft/world/entity/ai/behavior/ShufflingList
	f	Ljava/util/List;	a	entries
	f	Lbck;	b	random
	m	()V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/lang/Object;I)Lcem;	a	add
	m	()Lcem;	a	shuffle
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/lang/String;	toString	toString
	m	(Lcem$a;)V	a	lambda$shuffle$1
	m	(Lcem;)Ljava/util/List;	a	lambda$codec$0
c	cem$a	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry
	f	Ljava/lang/Object;	a	data
	f	I	b	weight
	f	D	c	randWeight
	m	(Ljava/lang/Object;I)V	<init>	<init>
	m	()D	c	getRandWeight
	m	(F)V	a	setRandom
	m	()Ljava/lang/Object;	a	getData
	m	()I	b	getWeight
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
c	cem$a$1	net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry$1
	f	Lcom/mojang/serialization/Codec;	a	val$elementCodec
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	decode	decode
	m	(Lcem$a;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	encode	encode
	m	(Lcom/mojang/serialization/DynamicOps;Lcem$a;)Lcom/mojang/datafixers/util/Pair;	a	lambda$decode$1
	m	(Lcom/mojang/serialization/Dynamic;Ljava/lang/Object;)Lcem$a;	a	lambda$decode$0
c	cen	net/minecraft/world/entity/ai/behavior/SleepInBed
	f	I	c	COOLDOWN_AFTER_BEING_WOKEN
	f	J	d	nextOkStartTime
	m	()V	<init>	<init>
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	d	start
	m	(J)Z	a	timedOut
	m	(Laub;Lcam;J)V	b	stop
c	ceo	net/minecraft/world/entity/ai/behavior/SocializeAtBell
	f	F	a	SPEED_MODIFIER
	m	()V	<init>	<init>
	m	()Lcdo;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$3
	m	(Lcfr;Lcfr;Lcfr;Lcam;)V	a	lambda$create$2
	m	(Lcam;Lcam;)Z	a	lambda$create$1
	m	(Lcam;)Z	a	lambda$create$0
c	cep	net/minecraft/world/entity/ai/behavior/StartAttacking
	m	()V	<init>	<init>
	m	(Lcep$b;)Lcce;	a	create
	m	(Lcep$a;Lcep$b;)Lcce;	a	create
	m	(Lcep$a;Lcep$b;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcep$a;Lcep$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcep$a;Lcep$b;Lcfr;Lcfr;Laub;Lcao;J)Z	a	lambda$create$1
	m	(Laub;Lcao;)Z	a	lambda$create$0
c	cep$a	net/minecraft/world/entity/ai/behavior/StartAttacking$StartAttackingCondition
	m	(Laub;Ljava/lang/Object;)Z	test	test
c	cep$b	net/minecraft/world/entity/ai/behavior/StartAttacking$TargetFinder
	m	(Laub;Ljava/lang/Object;)Ljava/util/Optional;	get	get
c	ceq	net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead
	m	()V	<init>	<init>
	m	(ILjava/util/function/BiPredicate;)Lcce;	a	create
	m	(Ljava/util/function/BiPredicate;ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Ljava/util/function/BiPredicate;ILcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Ljava/util/function/BiPredicate;Lcfr;ILcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	cer	net/minecraft/world/entity/ai/behavior/StayCloseToTarget
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lcce;	a	create
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;IFILcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Ljava/util/function/Function;Ljava/util/function/Predicate;ILcfr;Lcfr;FILaub;Lcam;J)Z	a	lambda$create$0
c	ces	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid
	f	I	a	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE
	m	()V	<init>	<init>
	m	(Lces$b;)Lcce;	a	create
	m	(Lces$a;)Lcce;	a	create
	m	()Lcce;	a	create
	m	(Lces$a;Lces$b;Z)Lcce;	a	create
	m	(Lcam;Ljava/util/Optional;)Z	a	isTiredOfTryingToReachTarget
	m	(ZLces$a;Lces$b;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lcfq$b;ZLces$a;Lces$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;ZLcfr;Lces$a;Lces$b;Laub;Lcao;J)Z	a	lambda$create$4
	m	(Laub;Lcao;Lcam;)V	a	lambda$create$3
	m	(Laub;Lcam;)Z	a	lambda$create$2
	m	(Laub;Lcao;Lcam;)V	b	lambda$create$1
	m	(Laub;Lcam;)Z	b	lambda$create$0
c	ces$a	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid$StopAttackCondition
	m	(Laub;Lcam;)Z	test	test
c	ces$b	net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid$TargetErasedCallback
	m	(Laub;Ljava/lang/Object;Lcam;)V	accept	accept
c	cet	net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;)Lcft;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Laub;Lcam;J)Z	a	lambda$create$3
	m	(Lcfr;Lcam;)V	a	lambda$create$2
	m	(Laub;Lcam;)Z	a	lambda$create$1
	m	(Lbzm;)Lcam;	a	lambda$create$0
c	ceu	net/minecraft/world/entity/ai/behavior/StrollAroundPoi
	f	I	a	MIN_TIME_BETWEEN_STROLLS
	f	I	b	STROLL_MAX_XZ_DIST
	f	I	c	STROLL_MAX_Y_DIST
	m	()V	<init>	<init>
	m	(Lcjo;FI)Lcdo;	a	create
	m	(Lcjo;ILorg/apache/commons/lang3/mutable/MutableLong;FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;ILorg/apache/commons/lang3/mutable/MutableLong;FLcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;ILorg/apache/commons/lang3/mutable/MutableLong;Lcfr;FLaub;Lcau;J)Z	a	lambda$create$1
	m	(FLfis;)Lcjr;	a	lambda$create$0
c	cev	net/minecraft/world/entity/ai/behavior/StrollToPoi
	m	()V	<init>	<init>
	m	(Lcjo;FII)Lcce;	a	create
	m	(Lcjo;ILorg/apache/commons/lang3/mutable/MutableLong;FILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ILorg/apache/commons/lang3/mutable/MutableLong;Lcfr;FILaub;Lcau;J)Z	a	lambda$create$0
c	cew	net/minecraft/world/entity/ai/behavior/StrollToPoiList
	m	()V	<init>	<init>
	m	(Lcjo;FIILcjo;)Lcce;	a	create
	m	(Lcjo;Lcjo;ILorg/apache/commons/lang3/mutable/MutableLong;FILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILorg/apache/commons/lang3/mutable/MutableLong;FILcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;ILorg/apache/commons/lang3/mutable/MutableLong;Lcfr;FILaub;Lcuf;J)Z	a	lambda$create$0
c	cex	net/minecraft/world/entity/ai/behavior/Swim
	f	F	c	chance
	m	(F)V	<init>	<init>
	m	(Lcao;)Z	a	shouldSwim
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcao;J)Z	a	canStillUse
	m	(Laub;Lcao;J)V	b	tick
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	c	tick
c	cey	net/minecraft/world/entity/ai/behavior/TradeWithVillager
	f	Ljava/util/Set;	c	trades
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	start
	m	(Laub;Lcuf;J)V	c	tick
	m	(Laub;Lcuf;J)V	d	stop
	m	(Lcuf;Lcuf;)Ljava/util/Set;	a	figureOutWhatIAmWillingToTrade
	m	(Lcuf;Ljava/util/Set;Lcam;)V	a	throwHalfStack
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcom/google/common/collect/ImmutableSet;Ldcr;)Z	a	lambda$figureOutWhatIAmWillingToTrade$0
c	cez	net/minecraft/world/entity/ai/behavior/TriggerGate
	m	()V	<init>	<init>
	m	(Ljava/util/List;)Lcdo;	a	triggerOneShuffled
	m	(Ljava/util/List;Lccr$a;Lccr$b;)Lcdo;	a	triggerGate
	m	(Lccr$a;Lcem;Lccr$b;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerGate$2
	m	(Lccr$a;Lcem;Lccr$b;Laub;Lcam;J)Z	a	lambda$triggerGate$1
	m	(Lcem;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$triggerGate$0
c	cfa	net/minecraft/world/entity/ai/behavior/TryFindLand
	f	I	a	COOLDOWN_TICKS
	m	()V	<init>	<init>
	m	(IF)Lcce;	a	create
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILcfr;Lcfr;FLaub;Lcau;J)Z	a	lambda$create$0
c	cfb	net/minecraft/world/entity/ai/behavior/TryFindLandNearWater
	m	()V	<init>	<init>
	m	(IF)Lcce;	a	create
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILcfr;Lcfr;FLaub;Lcau;J)Z	a	lambda$create$0
c	cfc	net/minecraft/world/entity/ai/behavior/TryFindWater
	m	()V	<init>	<init>
	m	(IF)Lcce;	a	create
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;IFLcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lorg/apache/commons/lang3/mutable/MutableLong;ILcfr;Lcfr;FLaub;Lcau;J)Z	a	lambda$create$0
c	cfd	net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand
	m	()V	<init>	<init>
	m	(Ldpz;)Lcce;	a	create
	m	(Ldpz;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Ldpz;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Ldpz;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	cfe	net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
	m	(Laub;Lcam;J)Z	a	lambda$create$0
c	cff	net/minecraft/world/entity/ai/behavior/UseBonemeal
	f	I	c	BONEMEALING_DURATION
	f	J	d	nextWorkCycleTime
	f	J	e	lastBonemealingSession
	f	I	f	timeWorkedSoFar
	f	Ljava/util/Optional;	g	cropPos
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;)Ljava/util/Optional;	b	pickNextTarget
	m	(Ljb;Laub;)Z	a	validPos
	m	(Laub;Lcuf;J)V	b	start
	m	(Lcuf;)V	a	setCurrentCropAsTarget
	m	(Laub;Lcuf;J)V	c	stop
	m	(Laub;Lcuf;J)V	d	tick
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcuf;Ljb;)V	a	lambda$setCurrentCropAsTarget$0
c	cfg	net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi
	f	I	a	MAX_DISTANCE
	m	()V	<init>	<init>
	m	(Ljava/util/function/Predicate;Lcjo;)Lcce;	a	create
	m	(Laub;Ljb;Lcam;)Z	a	bedIsOccupied
	m	(Laub;Ljb;)Z	a	bedIsOccupiedByVillager
	m	(Lcjo;Ljava/util/function/Predicate;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Ljava/util/function/Predicate;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Ljava/util/function/Predicate;Laub;Lcam;J)Z	a	lambda$create$0
c	cfh	net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll
	f	I	a	MAX_XZ_DIST
	f	I	b	MAX_Y_DIST
	m	()V	<init>	<init>
	m	(F)Lcdo;	a	create
	m	(FII)Lcdo;	a	create
	m	(IIFLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(IIFLcfr;)Lcft;	a	lambda$create$2
	m	(IILcfr;FLaub;Lcau;J)Z	a	lambda$create$1
	m	(FLfis;)Lcjr;	a	lambda$create$0
c	cfi	net/minecraft/world/entity/ai/behavior/VillagerCalmDown
	f	I	a	SAFE_DISTANCE_FROM_DANGER
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(Lcam;Lcam;)Z	a	lambda$create$0
c	cfj	net/minecraft/world/entity/ai/behavior/VillagerGoalPackages
	f	F	d	STROLL_SPEED_MODIFIER
	f	I	a	INTERACT_DIST_SQR
	f	I	b	INTERACT_WALKUP_DIST
	f	F	c	INTERACT_SPEED_MODIFIER
	m	()V	<init>	<init>
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	a	getCorePackage
	m	(Laub;Ljb;)Z	a	validateBedPoi
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	b	getWorkPackage
	m	(F)Lcom/google/common/collect/ImmutableList;	a	getPlayPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	c	getRestPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	d	getMeetPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	e	getIdlePackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	f	getPanicPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	g	getPreRaidPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	h	getRaidPackage
	m	(Ljl;F)Lcom/google/common/collect/ImmutableList;	i	getHidePackage
	m	()Lcom/mojang/datafixers/util/Pair;	a	getFullLookBehavior
	m	()Lcom/mojang/datafixers/util/Pair;	b	getMinimalLookBehavior
	m	(Laub;Lcam;)Z	a	raidExistsAndActive
	m	(Laub;Lcam;)Z	b	raidExistsAndNotVictory
	m	(Ljl;)Z	a	lambda$getMeetPackage$4
	m	(Ljl;)Z	b	lambda$getRestPackage$3
	m	(Ljl;)Z	c	lambda$getCorePackage$2
	m	(Ljl;)Z	d	lambda$getCorePackage$1
	m	(Laub;Ljb;)Z	b	lambda$getCorePackage$0
c	cfk	net/minecraft/world/entity/ai/behavior/VillagerMakeLove
	f	J	c	birthTimestamp
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)Z	a	checkExtraStartConditions
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	start
	m	(Laub;Lcuf;J)V	c	tick
	m	(Laub;Lcuf;Lcuf;)V	a	tryToGiveBirth
	m	(Laub;Lcuf;J)V	d	stop
	m	(Lcuf;)Z	a	isBreedingPossible
	m	(Laub;Lcuf;)Ljava/util/Optional;	b	takeVacantBed
	m	(Lcuf;Ljb;Ljl;)Z	a	canReach
	m	(Laub;Lcuf;Lcuf;)Ljava/util/Optional;	b	breed
	m	(Laub;Lcuf;Ljb;)V	a	giveBedToChild
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcuf;Ljl;Ljb;)Z	a	lambda$takeVacantBed$2
	m	(Ljl;)Z	a	lambda$takeVacantBed$1
	m	(Lbzc;)Z	a	lambda$isBreedingPossible$0
c	cfl	net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger
	m	()V	<init>	<init>
	m	(Laub;Lcuf;J)Z	a	canStillUse
	m	(Laub;Lcuf;J)V	b	start
	m	(Laub;Lcuf;J)V	c	tick
	m	(Lcam;)Z	b	hasHostile
	m	(Lcam;)Z	c	isHurt
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cfm	net/minecraft/world/entity/ai/behavior/WakeUp
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$1
	m	(Laub;Lcam;J)Z	a	lambda$create$0
c	cfn	net/minecraft/world/entity/ai/behavior/WorkAtComposter
	f	Ljava/util/List;	c	COMPOSTABLE_ITEMS
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)V	a	useWorkstation
	m	(Laub;Lcuf;Ljk;Leeb;)V	a	compostItems
	m	(Laub;Leeb;Ljb;Leeb;)V	a	spawnComposterFillEffects
	m	(Laub;Lcuf;)V	c	makeBread
	m	()V	<clinit>	<clinit>
c	cfo	net/minecraft/world/entity/ai/behavior/WorkAtPoi
	f	I	c	CHECK_COOLDOWN
	f	D	d	DISTANCE
	f	J	e	lastCheck
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)Z	b	checkExtraStartConditions
	m	(Laub;Lcuf;J)V	a	start
	m	(Laub;Lcuf;)V	a	useWorkstation
	m	(Laub;Lcuf;J)Z	b	canStillUse
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	d	start
	m	(Lcbm;Ljk;)V	a	lambda$start$0
c	cfp	net/minecraft/world/entity/ai/behavior/YieldJobSite
	m	()V	<init>	<init>
	m	(F)Lcce;	a	create
	m	(Ljl;Lcuf;Ljb;)Z	a	nearbyWantsJobsite
	m	(Lcau;Ljb;Lcls;)Z	a	canReachPos
	m	(FLcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$6
	m	(Lcfq$b;FLcfr;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$5
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;FLaub;Lcuf;J)Z	a	lambda$create$4
	m	(Lcfr;Lcfr;Lcfr;Ljb;FLaub;Lcuf;)V	a	lambda$create$3
	m	(Ljava/util/Optional;Ljb;Lcuf;)Z	a	lambda$create$2
	m	(Lcam;)Lcuf;	a	lambda$create$1
	m	(Lcuf;Lcam;)Z	a	lambda$create$0
c	cfq	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder
	f	Lcfq$e;	a	trigger
	m	(Lcom/mojang/datafixers/kinds/App;)Lcfq;	a	unbox
	m	()Lcfq$b;	a	instance
	m	(Ljava/util/function/Function;)Lcdo;	a	create
	m	(Lcft;Lcft;)Lcdo;	a	sequence
	m	(Ljava/util/function/Predicate;Lcdo;)Lcdo;	a	triggerIf
	m	(Ljava/util/function/Predicate;)Lcdo;	a	triggerIf
	m	(Ljava/util/function/BiPredicate;)Lcdo;	a	triggerIf
	m	(Lcom/mojang/datafixers/kinds/App;)Lcfq$e;	b	get
	m	(Lcfq$e;)V	<init>	<init>
	m	(Lcfq$e;)Lcfq;	a	create
	m	(Ljava/util/function/BiPredicate;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$5
	m	(Ljava/util/function/BiPredicate;Laub;Lcam;J)Z	a	lambda$triggerIf$4
	m	(Ljava/util/function/Predicate;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$triggerIf$3
	m	(Ljava/util/function/Predicate;Laub;Lcam;J)Z	a	lambda$triggerIf$2
	m	(Lcft;Lcft;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$sequence$1
	m	(Lcft;Lcom/mojang/datafixers/util/Unit;)Lcft;	a	lambda$sequence$0
c	cfq$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$1
	f	Lcfq$e;	a	val$resolvedBuilder
	m	(Lcfq$e;)V	<init>	<init>
	m	(Laub;Lcam;J)Z	trigger	trigger
	m	()Ljava/lang/String;	b	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Ljava/lang/Object;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/String;	a	lambda$new$0
c	cfq$a$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant$1
	f	Ljava/lang/Object;	a	val$a
	f	Ljava/util/function/Supplier;	b	val$debugString
	m	(Ljava/lang/Object;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance
	m	()V	<init>	<init>
	m	(Lcfr;)Ljava/util/Optional;	a	tryGet
	m	(Lcfr;)Ljava/lang/Object;	b	get
	m	(Lcjo;)Lcfq;	a	registered
	m	(Lcjo;)Lcfq;	b	present
	m	(Lcjo;)Lcfq;	c	absent
	m	(Lcft;)Lcfq;	a	ifTriggered
	m	(Ljava/lang/Object;)Lcfq;	a	point
	m	(Ljava/util/function/Supplier;Ljava/lang/Object;)Lcfq;	a	point
	m	(Lcom/mojang/datafixers/kinds/App;)Ljava/util/function/Function;	lift1	lift1
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lcfq;	a	map
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcfq;	a	ap2
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcfq;	a	ap3
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcfq;	a	ap4
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	ap4	ap4
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	ap3	ap3
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	ap2	ap2
	m	(Ljava/lang/Object;)Lcom/mojang/datafixers/kinds/App;	point	point
	m	(Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	map	map
	m	(Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lcom/mojang/datafixers/kinds/App;	a	lambda$lift1$0
c	cfq$b$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$1
	f	Lcfq$e;	a	val$aTrigger
	f	Lcfq$e;	b	val$fTrigger
	m	(Lcfq$b;Lcfq$e;Lcfq$e;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b$2	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$2
	f	Lcfq$e;	a	val$tTrigger
	f	Ljava/util/function/Function;	b	val$func
	m	(Lcfq$b;Lcfq$e;Ljava/util/function/Function;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b$3	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$3
	f	Lcfq$e;	a	val$aTrigger
	f	Lcfq$e;	b	val$bTrigger
	f	Lcfq$e;	c	val$fTrigger
	m	(Lcfq$b;Lcfq$e;Lcfq$e;Lcfq$e;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b$4	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$4
	f	Lcfq$e;	a	val$t1Trigger
	f	Lcfq$e;	b	val$t2Trigger
	f	Lcfq$e;	c	val$t3Trigger
	f	Lcfq$e;	d	val$fTrigger
	m	(Lcfq$b;Lcfq$e;Lcfq$e;Lcfq$e;Lcfq$e;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b$5	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$5
	f	Lcfq$e;	a	val$t1Trigger
	f	Lcfq$e;	b	val$t2Trigger
	f	Lcfq$e;	c	val$t3Trigger
	f	Lcfq$e;	d	val$t4Trigger
	f	Lcfq$e;	e	val$fTrigger
	m	(Lcfq$b;Lcfq$e;Lcfq$e;Lcfq$e;Lcfq$e;Lcfq$e;)V	<init>	<init>
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
c	cfq$b$a	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu
	m	()V	<init>	<init>
c	cfq$c	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu
	m	()V	<init>	<init>
c	cfq$d	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory
	m	(Lcfs;)V	<init>	<init>
c	cfq$d$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory$1
	f	Lcfs;	a	val$condition
	m	(Lcfs;)V	<init>	<init>
	m	(Laub;Lcam;J)Lcfr;	b	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	()Ljava/lang/String;	toString	toString
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
c	cfq$e	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
	m	()Ljava/lang/String;	a	debugString
c	cfq$f	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper
	m	(Lcft;)V	<init>	<init>
c	cfq$f$1	net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper$1
	f	Lcft;	a	val$dependentTrigger
	m	(Lcft;)V	<init>	<init>
	m	(Laub;Lcam;J)Lcom/mojang/datafixers/util/Unit;	b	tryTrigger
	m	()Ljava/lang/String;	a	debugString
	m	(Laub;Lcam;J)Ljava/lang/Object;	a	tryTrigger
c	cfr	net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor
	f	Lcbm;	a	brain
	f	Lcjo;	b	memoryType
	f	Lcom/mojang/datafixers/kinds/App;	c	value
	m	(Lcbm;Lcjo;Lcom/mojang/datafixers/kinds/App;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/kinds/App;	a	value
	m	(Ljava/lang/Object;)V	a	set
	m	(Ljava/util/Optional;)V	a	setOrErase
	m	(Ljava/lang/Object;J)V	a	setWithExpiry
	m	()V	b	erase
c	cfs	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition
	m	()Lcjo;	a	memory
	m	()Lcjp;	b	condition
	m	(Lcbm;Ljava/util/Optional;)Lcfr;	a	createAccessor
c	cfs$a	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent
	f	Lcjo;	a	memory
	m	(Lcjo;)V	<init>	<init>
	m	()Lcjp;	b	condition
	m	(Lcbm;Ljava/util/Optional;)Lcfr;	a	createAccessor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcjo;	a	memory
c	cfs$b	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present
	f	Lcjo;	a	memory
	m	(Lcjo;)V	<init>	<init>
	m	()Lcjp;	b	condition
	m	(Lcbm;Ljava/util/Optional;)Lcfr;	a	createAccessor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcjo;	a	memory
c	cfs$c	net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered
	f	Lcjo;	a	memory
	m	(Lcjo;)V	<init>	<init>
	m	()Lcjp;	b	condition
	m	(Lcbm;Ljava/util/Optional;)Lcfr;	a	createAccessor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcjo;	a	memory
c	cft	net/minecraft/world/entity/ai/behavior/declarative/Trigger
	m	(Laub;Lcam;J)Z	trigger	trigger
c	cfu	net/minecraft/world/entity/ai/behavior/declarative/package-info
c	cfv	net/minecraft/world/entity/ai/behavior/package-info
c	cfw	net/minecraft/world/entity/ai/behavior/warden/Digging
	m	(I)V	<init>	<init>
	m	(Laub;Lctw;J)Z	a	canStillUse
	m	(Laub;Lctw;)Z	a	checkExtraStartConditions
	m	(Laub;Lctw;J)V	b	start
	m	(Laub;Lctw;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cfx	net/minecraft/world/entity/ai/behavior/warden/Emerging
	m	(I)V	<init>	<init>
	m	(Laub;Lctw;J)Z	a	canStillUse
	m	(Laub;Lctw;J)V	b	start
	m	(Laub;Lctw;J)V	c	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cfy	net/minecraft/world/entity/ai/behavior/warden/ForceUnmount
	m	()V	<init>	<init>
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)V	d	start
c	cfz	net/minecraft/world/entity/ai/behavior/warden/Roar
	f	I	c	TICKS_BEFORE_PLAYING_ROAR_SOUND
	f	I	d	ROAR_ANGER_INCREASE
	m	()V	<init>	<init>
	m	(Laub;Lctw;J)V	a	start
	m	(Laub;Lctw;J)Z	b	canStillUse
	m	(Laub;Lctw;J)V	c	tick
	m	(Laub;Lctw;J)V	d	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cga	net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;)Lcce;	a	create
	m	(Ljava/util/function/Function;Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Ljava/util/function/Function;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Ljava/util/function/Function;Lcfr;Lcfr;Laub;Lctw;J)Z	a	lambda$create$0
c	cgb	net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$3
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$1
	m	(Lcfq$b;Lcfr;)Ljava/util/Optional;	a	lambda$create$0
c	cgc	net/minecraft/world/entity/ai/behavior/warden/Sniffing
	f	D	c	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ
	f	D	d	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y
	m	(I)V	<init>	<init>
	m	(Laub;Lctw;J)Z	a	canStillUse
	m	(Laub;Lctw;J)V	b	start
	m	(Laub;Lctw;J)V	c	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
	m	(Lctw;Lcam;)V	a	lambda$stop$0
c	cgd	net/minecraft/world/entity/ai/behavior/warden/SonicBoom
	f	I	d	DISTANCE_XZ
	f	I	e	DISTANCE_Y
	f	D	f	KNOCKBACK_VERTICAL
	f	D	g	KNOCKBACK_HORIZONTAL
	f	I	c	COOLDOWN
	f	I	h	TICKS_BEFORE_PLAYING_SOUND
	f	I	i	DURATION
	m	()V	<init>	<init>
	m	(Laub;Lctw;)Z	a	checkExtraStartConditions
	m	(Laub;Lctw;J)Z	a	canStillUse
	m	(Laub;Lctw;J)V	b	start
	m	(Laub;Lctw;J)V	c	tick
	m	(Laub;Lctw;J)V	d	stop
	m	(Lcam;I)V	a	setCooldown
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lctw;Laub;Lcam;)V	a	lambda$tick$2
	m	(Lctw;Lcam;)Z	a	lambda$tick$1
	m	(Lctw;Lcam;)V	b	lambda$tick$0
	m	()V	<clinit>	<clinit>
c	cge	net/minecraft/world/entity/ai/behavior/warden/TryToSniff
	f	Lbwo;	a	SNIFF_COOLDOWN
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfr;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfr;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
	m	()V	<clinit>	<clinit>
c	cgf	net/minecraft/world/entity/ai/behavior/warden/package-info
c	cgg	net/minecraft/world/entity/ai/control/BodyRotationControl
	f	Lcao;	a	mob
	f	I	b	HEAD_STABLE_ANGLE
	f	I	c	DELAY_UNTIL_STARTING_TO_FACE_FORWARD
	f	I	d	HOW_LONG_IT_TAKES_TO_FACE_FORWARD
	f	I	e	headStableTime
	f	F	f	lastStableYHeadRot
	m	(Lcao;)V	<init>	<init>
	m	()V	a	clientTick
	m	()V	b	rotateBodyIfNecessary
	m	()V	c	rotateHeadIfNecessary
	m	()V	d	rotateHeadTowardsFront
	m	()Z	e	notCarryingMobPassengers
	m	()Z	f	isMoving
c	cgh	net/minecraft/world/entity/ai/control/Control
	m	(FFF)F	a	rotateTowards
c	cgi	net/minecraft/world/entity/ai/control/FlyingMoveControl
	f	I	l	maxTurn
	f	Z	m	hoversInPlace
	m	(Lcao;IZ)V	<init>	<init>
	m	()V	a	tick
c	cgj	net/minecraft/world/entity/ai/control/JumpControl
	f	Lcao;	b	mob
	f	Z	a	jump
	m	(Lcao;)V	<init>	<init>
	m	()V	a	jump
	m	()V	b	tick
c	cgk	net/minecraft/world/entity/ai/control/LookControl
	f	Lcao;	a	mob
	f	F	b	yMaxRotSpeed
	f	F	c	xMaxRotAngle
	f	I	d	lookAtCooldown
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	m	(Lcao;)V	<init>	<init>
	m	(Lfis;)V	a	setLookAt
	m	(Lbzm;)V	a	setLookAt
	m	(Lbzm;FF)V	a	setLookAt
	m	(DDD)V	a	setLookAt
	m	(DDDFF)V	a	setLookAt
	m	()V	a	tick
	m	()V	b	clampHeadRotationToBody
	m	()Z	c	resetXRotOnTick
	m	()Z	d	isLookingAtTarget
	m	()D	e	getWantedX
	m	()D	f	getWantedY
	m	()D	g	getWantedZ
	m	()Ljava/util/Optional;	h	getXRotD
	m	()Ljava/util/Optional;	i	getYRotD
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
c	cgl	net/minecraft/world/entity/ai/control/MoveControl
	f	F	a	MIN_SPEED
	f	F	b	MIN_SPEED_SQR
	f	I	c	MAX_TURN
	f	Lcao;	d	mob
	f	D	e	wantedX
	f	D	f	wantedY
	f	D	g	wantedZ
	f	D	h	speedModifier
	f	F	i	strafeForwards
	f	F	j	strafeRight
	f	Lcgl$a;	k	operation
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	hasWanted
	m	()D	c	getSpeedModifier
	m	(DDDD)V	a	setWantedPosition
	m	(FF)V	a	strafe
	m	()V	a	tick
	m	(FF)Z	b	isWalkable
	m	(FFF)F	b	rotlerp
	m	()D	d	getWantedX
	m	()D	e	getWantedY
	m	()D	f	getWantedZ
	m	()V	g	setWait
c	cgl$a	net/minecraft/world/entity/ai/control/MoveControl$Operation
	f	Lcgl$a;	a	WAIT
	f	Lcgl$a;	b	MOVE_TO
	f	Lcgl$a;	c	STRAFE
	f	Lcgl$a;	d	JUMPING
	f	[Lcgl$a;	e	$VALUES
	m	()[Lcgl$a;	values	values
	m	(Ljava/lang/String;)Lcgl$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcgl$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cgm	net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl
	f	I	h	maxYRotFromCenter
	f	I	i	HEAD_TILT_X
	f	I	j	HEAD_TILT_Y
	m	(Lcao;I)V	<init>	<init>
	m	()V	a	tick
	m	(Ljava/lang/Float;)V	a	lambda$tick$1
	m	(Ljava/lang/Float;)V	b	lambda$tick$0
c	cgn	net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl
	f	F	l	FULL_SPEED_TURN_THRESHOLD
	f	F	m	STOP_TURN_THRESHOLD
	f	I	n	maxTurnX
	f	I	o	maxTurnY
	f	F	p	inWaterSpeedModifier
	f	F	q	outsideWaterSpeedModifier
	f	Z	r	applyGravity
	m	(Lcao;IIFFZ)V	<init>	<init>
	m	()V	a	tick
	m	(F)F	a	getTurningSpeedFactor
c	cgo	net/minecraft/world/entity/ai/control/package-info
c	cgp	net/minecraft/world/entity/ai/goal/AvoidEntityGoal
	f	Lcau;	a	mob
	f	D	i	walkSpeedModifier
	f	D	j	sprintSpeedModifier
	f	Lcam;	b	toAvoid
	f	F	c	maxDist
	f	Lfaz;	d	path
	f	Lcjw;	e	pathNav
	f	Ljava/lang/Class;	f	avoidClass
	f	Ljava/util/function/Predicate;	g	avoidPredicate
	f	Ljava/util/function/Predicate;	h	predicateOnAvoidEntity
	f	Lclc;	k	avoidEntityTargeting
	m	(Lcau;Ljava/lang/Class;FDD)V	<init>	<init>
	m	(Lcau;Ljava/lang/Class;Ljava/util/function/Predicate;FDDLjava/util/function/Predicate;)V	<init>	<init>
	m	(Lcau;Ljava/lang/Class;FDDLjava/util/function/Predicate;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcam;)Z	a	lambda$canUse$3
	m	(Lcam;)Z	b	lambda$new$2
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcam;Laub;)Z	a	lambda$new$1
	m	(Lcam;)Z	c	lambda$new$0
c	cgq	net/minecraft/world/entity/ai/goal/BegGoal
	f	Lcpj;	a	wolf
	f	Lcut;	b	player
	f	Laub;	c	level
	f	F	d	lookDistance
	f	I	e	lookTime
	f	Lclc;	f	begTargeting
	m	(Lcpj;F)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcut;)Z	a	playerHoldingInteresting
c	cgr	net/minecraft/world/entity/ai/goal/BoatGoals
	f	Lcgr;	a	GO_TO_BOAT
	f	Lcgr;	b	GO_IN_BOAT_DIRECTION
	f	[Lcgr;	c	$VALUES
	m	()[Lcgr;	values	values
	m	(Ljava/lang/String;)Lcgr;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcgr;	a	$values
	m	()V	<clinit>	<clinit>
c	cgs	net/minecraft/world/entity/ai/goal/BreakDoorGoal
	f	I	g	DEFAULT_DOOR_BREAK_TIME
	f	Ljava/util/function/Predicate;	h	validDifficulties
	f	I	a	breakTime
	f	I	b	lastBreakProgress
	f	I	c	doorBreakTime
	m	(Lcao;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Lcao;ILjava/util/function/Predicate;)V	<init>	<init>
	m	()I	f	getDoorBreakTime
	m	()Z	b	canUse
	m	()V	d	start
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	a	tick
	m	(Lbxg;)Z	a	isValidDifficulty
c	cgt	net/minecraft/world/entity/ai/goal/BreathAirGoal
	f	Lcau;	a	mob
	m	(Lcau;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	h	findAirPosition
	m	()V	a	tick
	m	(Ldmx;Ljb;)Z	a	givesAir
c	cgu	net/minecraft/world/entity/ai/goal/BreedGoal
	f	Lclc;	d	PARTNER_TARGETING
	f	Lcmd;	a	animal
	f	Ljava/lang/Class;	e	partnerClass
	f	Laub;	b	level
	f	Lcmd;	c	partner
	f	I	f	loveTime
	f	D	g	speedModifier
	m	(Lcmd;D)V	<init>	<init>
	m	(Lcmd;DLjava/lang/Class;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	a	tick
	m	()Lcmd;	h	getFreePartner
	m	()V	g	breed
	m	()V	<clinit>	<clinit>
c	cgv	net/minecraft/world/entity/ai/goal/CatLieOnBedGoal
	f	Lcmg;	g	cat
	m	(Lcmg;DI)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	(Lcau;)I	a	nextStartTick
	m	()V	e	stop
	m	()V	a	tick
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	cgw	net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal
	f	Lcmg;	g	cat
	m	(Lcmg;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Ldmx;Ljb;)Z	a	isValidTarget
	m	(Leea$a;)Z	a	lambda$isValidTarget$1
	m	(Leeo;)Ljava/lang/Boolean;	a	lambda$isValidTarget$0
c	cgx	net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal
	f	Lcao;	a	mob
	f	Ldmu;	b	level
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cgy	net/minecraft/world/entity/ai/goal/DolphinJumpGoal
	f	[I	a	STEPS_TO_CHECK
	f	Lcmq;	b	dolphin
	f	I	c	interval
	f	Z	d	breached
	m	(Lcmq;I)V	<init>	<init>
	m	()Z	b	canUse
	m	(Ljb;III)Z	a	waterIsClear
	m	(Ljb;III)Z	b	surfaceIsClear
	m	()Z	c	canContinueToUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()V	<clinit>	<clinit>
c	cgz	net/minecraft/world/entity/ai/goal/DoorInteractGoal
	f	Lcao;	d	mob
	f	Ljb;	e	doorPos
	f	Z	f	hasDoor
	f	Z	a	passed
	f	F	b	doorOpenDirX
	f	F	c	doorOpenDirZ
	m	(Lcao;)V	<init>	<init>
	m	()Z	h	isOpen
	m	(Z)V	a	setOpen
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cha	net/minecraft/world/entity/ai/goal/EatBlockGoal
	f	I	a	EAT_ANIMATION_TICKS
	f	Ljava/util/function/Predicate;	b	IS_EDIBLE
	f	Lcao;	c	mob
	f	Ldmu;	d	level
	f	I	e	eatAnimationTick
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	c	canContinueToUse
	m	()I	h	getEatAnimationTick
	m	()V	a	tick
	m	(Leeb;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	chb	net/minecraft/world/entity/ai/goal/FleeSunGoal
	f	Lcau;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Ldmu;	f	level
	m	(Lcau;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	setWantedPos
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Lfis;	i	getHidePos
c	chc	net/minecraft/world/entity/ai/goal/FloatGoal
	f	Lcao;	a	mob
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	chd	net/minecraft/world/entity/ai/goal/FollowBoatGoal
	f	I	a	timeToRecalcPath
	f	Lcau;	b	mob
	f	Lcut;	c	following
	f	Lcgr;	d	currentGoal
	m	(Lcau;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	W_	isInterruptable
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	che	net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal
	f	I	a	INTERVAL_TICKS
	f	Lcmb;	b	mob
	f	I	c	timeToRecalcPath
	f	I	d	nextStartTick
	m	(Lcmb;)V	<init>	<init>
	m	(Lcmb;)I	a	nextStartTick
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcmb;)Z	b	lambda$canUse$1
	m	(Lcmb;)Z	c	lambda$canUse$0
c	chf	net/minecraft/world/entity/ai/goal/FollowMobGoal
	f	Lcao;	a	mob
	f	Ljava/util/function/Predicate;	b	followPredicate
	f	Lcao;	c	followingMob
	f	D	d	speedModifier
	f	Lcjw;	e	navigation
	f	I	f	timeToRecalcPath
	f	F	g	stopDistance
	f	F	h	oldWaterCost
	f	F	i	areaSize
	m	(Lcao;DFF)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcao;Lcao;)Z	a	lambda$new$0
c	chg	net/minecraft/world/entity/ai/goal/FollowOwnerGoal
	f	Lcbi;	a	tamable
	f	Lcam;	b	owner
	f	D	c	speedModifier
	f	Lcjw;	d	navigation
	f	I	e	timeToRecalcPath
	f	F	f	stopDistance
	f	F	g	startDistance
	f	F	h	oldWaterCost
	m	(Lcbi;DFF)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	chh	net/minecraft/world/entity/ai/goal/FollowParentGoal
	f	I	a	HORIZONTAL_SCAN_RANGE
	f	I	b	VERTICAL_SCAN_RANGE
	f	I	c	DONT_FOLLOW_IF_CLOSER_THAN
	f	Lcmd;	d	animal
	f	Lcmd;	e	parent
	f	D	f	speedModifier
	f	I	g	timeToRecalcPath
	m	(Lcmd;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	chi	net/minecraft/world/entity/ai/goal/Goal
	f	Ljava/util/EnumSet;	a	flags
	m	()V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Ljava/util/EnumSet;)V	a	setFlags
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/util/EnumSet;	j	getFlags
	m	(I)I	a	adjustedTickDelay
	m	(I)I	b	reducedTickDelay
	m	(Lbzm;)Laub;	a	getServerLevel
	m	(Ldmu;)Laub;	a	getServerLevel
c	chi$a	net/minecraft/world/entity/ai/goal/Goal$Flag
	f	Lchi$a;	a	MOVE
	f	Lchi$a;	b	LOOK
	f	Lchi$a;	c	JUMP
	f	Lchi$a;	d	TARGET
	f	[Lchi$a;	e	$VALUES
	m	()[Lchi$a;	values	values
	m	(Ljava/lang/String;)Lchi$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lchi$a;	a	$values
	m	()V	<clinit>	<clinit>
c	chj	net/minecraft/world/entity/ai/goal/GoalSelector
	f	Lciw;	a	NO_GOAL
	f	Ljava/util/Map;	b	lockedFlags
	f	Ljava/util/Set;	c	availableGoals
	f	Ljava/util/EnumSet;	d	disabledFlags
	m	()V	<init>	<init>
	m	(ILchi;)V	a	addGoal
	m	(Ljava/util/function/Predicate;)V	a	removeAllGoals
	m	(Lchi;)V	a	removeGoal
	m	(Lciw;Ljava/util/EnumSet;)Z	a	goalContainsAnyFlags
	m	(Lciw;Ljava/util/Map;)Z	a	goalCanBeReplacedForAllFlags
	m	()V	a	tick
	m	(Z)V	a	tickRunningGoals
	m	()Ljava/util/Set;	b	getAvailableGoals
	m	(Lchi$a;)V	a	disableControlFlag
	m	(Lchi$a;)V	b	enableControlFlag
	m	(Lchi$a;Z)V	a	setControlFlag
	m	(Ljava/util/Map$Entry;)Z	a	lambda$tick$2
	m	(Lchi;Lciw;)Z	a	lambda$removeGoal$1
	m	(Ljava/util/function/Predicate;Lciw;)Z	a	lambda$removeAllGoals$0
	m	()V	<clinit>	<clinit>
c	chj$1	net/minecraft/world/entity/ai/goal/GoalSelector$1
	m	()V	<init>	<init>
	m	()Z	b	canUse
c	chj$2	net/minecraft/world/entity/ai/goal/GoalSelector$2
	m	(ILchi;)V	<init>	<init>
	m	()Z	h	isRunning
c	chk	net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal
	f	I	i	POI_SECTION_SCAN_RADIUS
	f	I	j	VILLAGER_SCAN_RADIUS
	f	I	k	RANDOM_POS_XY_DISTANCE
	f	I	l	RANDOM_POS_Y_DISTANCE
	m	(Lcau;D)V	<init>	<init>
	m	()Lfis;	h	getPosition
	m	()Lfis;	k	getPositionTowardsAnywhere
	m	()Lfis;	l	getPositionTowardsVillagerWhoWantsGolem
	m	()Lfis;	m	getPositionTowardsPoi
	m	()Lke;	n	getRandomVillageSection
	m	(Lke;)Ljb;	a	getRandomPoiWithinSection
	m	(Lcuf;)Z	a	doesVillagerWantGolem
	m	(Ljl;)Z	a	lambda$getRandomPoiWithinSection$1
	m	(Laub;Lke;)Z	a	lambda$getRandomVillageSection$0
c	chl	net/minecraft/world/entity/ai/goal/InteractGoal
	m	(Lcao;Ljava/lang/Class;F)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;FF)V	<init>	<init>
c	chm	net/minecraft/world/entity/ai/goal/JumpGoal
	m	()V	<init>	<init>
c	chn	net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal
	f	Lcnh;	a	entity
	f	Z	b	isSittingOnShoulder
	m	(Lcnh;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	a	tick
c	cho	net/minecraft/world/entity/ai/goal/LeapAtTargetGoal
	f	Lcao;	a	mob
	f	Lcam;	b	target
	f	F	c	yd
	m	(Lcao;F)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	chp	net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal
	f	Lcot;	a	llama
	f	D	b	speedModifier
	f	I	c	CARAVAN_LIMIT
	f	I	d	distCheckCounter
	m	(Lcot;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcot;I)Z	a	firstIsLeashed
	m	(Lbzm;)Z	b	lambda$canUse$0
c	chq	net/minecraft/world/entity/ai/goal/LookAtPlayerGoal
	f	F	a	DEFAULT_PROBABILITY
	f	Lcao;	b	mob
	f	Lbzm;	c	lookAt
	f	F	d	lookDistance
	f	I	h	lookTime
	f	F	e	probability
	f	Z	i	onlyHorizontal
	f	Ljava/lang/Class;	f	lookAtType
	f	Lclc;	g	lookAtContext
	m	(Lcao;Ljava/lang/Class;F)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;FF)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;FFZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Lcam;)Z	a	lambda$canUse$1
	m	(Ljava/util/function/Predicate;Lcam;Laub;)Z	a	lambda$new$0
c	chr	net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal
	f	Lcua;	h	villager
	m	(Lcua;)V	<init>	<init>
	m	()Z	b	canUse
c	chs	net/minecraft/world/entity/ai/goal/MeleeAttackGoal
	f	Lcau;	a	mob
	f	D	b	speedModifier
	f	Z	c	followingTargetEvenIfNotSeen
	f	Lfaz;	d	path
	f	D	e	pathedTargetX
	f	D	f	pathedTargetY
	f	D	g	pathedTargetZ
	f	I	h	ticksUntilNextPathRecalculation
	f	I	i	ticksUntilNextAttack
	f	I	j	attackInterval
	f	J	k	lastCanUseCheck
	f	J	l	COOLDOWN_BETWEEN_CAN_USE_CHECKS
	m	(Lcau;DZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	(Lcam;)V	a	checkAndPerformAttack
	m	()V	h	resetAttackCooldown
	m	()Z	i	isTimeToAttack
	m	(Lcam;)Z	b	canPerformAttack
	m	()I	k	getTicksUntilNextAttack
	m	()I	l	getAttackInterval
c	cht	net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal
	f	I	i	MAX_XZ_DIST
	f	I	j	MAX_Y_DIST
	m	(Lcau;DZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Lfis;	h	getPosition
c	chu	net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal
	f	Lcau;	a	mob
	f	D	b	speedModifier
	f	Lfaz;	c	path
	f	Ljb;	d	poiPos
	f	Z	e	onlyAtNight
	f	Ljava/util/List;	f	visited
	f	I	g	distanceToPoi
	f	Ljava/util/function/BooleanSupplier;	h	canDealWithDoors
	m	(Lcau;DZILjava/util/function/BooleanSupplier;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	(Ljb;)Z	a	hasNotVisited
	m	()V	h	updateVisited
	m	(Ljl;)Z	a	lambda$canUse$3
	m	(Laub;Ljb;Ljb;)D	a	lambda$canUse$2
	m	(Ljb;Ljb;)Ljava/lang/Double;	a	lambda$canUse$1
	m	(Ljl;)Z	b	lambda$canUse$0
c	chv	net/minecraft/world/entity/ai/goal/MoveToBlockGoal
	f	I	g	GIVE_UP_TICKS
	f	I	h	STAY_TICKS
	f	I	i	INTERVAL_TICKS
	f	Lcau;	a	mob
	f	D	b	speedModifier
	f	I	c	nextStartTick
	f	I	d	tryTicks
	f	I	j	maxStayTicks
	f	Ljb;	e	blockPos
	f	Z	k	reachedTarget
	f	I	l	searchRange
	f	I	m	verticalSearchRange
	f	I	f	verticalSearchStart
	m	(Lcau;DI)V	<init>	<init>
	m	(Lcau;DII)V	<init>	<init>
	m	()Z	b	canUse
	m	(Lcau;)I	a	nextStartTick
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	h	moveMobToBlock
	m	()D	i	acceptedDistance
	m	()Ljb;	k	getMoveToTarget
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	l	shouldRecalculatePath
	m	()Z	m	isReachedTarget
	m	()Z	n	findNearestBlock
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	chw	net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal
	f	Lcau;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	m	(Lcau;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	chx	net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal
	f	Lcau;	a	mob
	f	Lcam;	b	target
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	F	g	within
	m	(Lcau;DF)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	d	start
c	chy	net/minecraft/world/entity/ai/goal/OcelotAttackGoal
	f	Lcao;	a	mob
	f	Lcam;	b	target
	f	I	c	attackTime
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	chz	net/minecraft/world/entity/ai/goal/OfferFlowerGoal
	f	Lclc;	b	OFFER_TARGER_CONTEXT
	f	I	a	OFFER_TICKS
	f	Lcmv;	c	golem
	f	Lcuf;	d	villager
	f	I	e	tick
	m	(Lcmv;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()V	<clinit>	<clinit>
c	cia	net/minecraft/world/entity/ai/goal/OpenDoorGoal
	f	Z	a	closeDoor
	f	I	b	forgetTime
	m	(Lcao;Z)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cib	net/minecraft/world/entity/ai/goal/PanicGoal
	f	I	b	WATER_CHECK_DISTANCE_VERTICAL
	f	Lcau;	c	mob
	f	D	d	speedModifier
	f	D	e	posX
	f	D	f	posY
	f	D	g	posZ
	f	Z	h	isRunning
	f	Ljava/util/function/Function;	a	panicCausingDamageTypes
	m	(Lcau;D)V	<init>	<init>
	m	(Lcau;DLbae;)V	<init>	<init>
	m	(Lcau;DLjava/util/function/Function;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	shouldPanic
	m	()Z	i	findRandomPosition
	m	()Z	k	isRunning
	m	()V	d	start
	m	()V	e	stop
	m	()Z	c	canContinueToUse
	m	(Ldly;Lbzm;I)Ljb;	a	lookForWater
	m	(Ldly;Ljb;)Z	a	lambda$lookForWater$1
	m	(Lbae;Lcau;)Lbae;	a	lambda$new$0
c	cic	net/minecraft/world/entity/ai/goal/PathfindToRaidGoal
	f	I	a	RECRUITMENT_SEARCH_TICK_DELAY
	f	F	b	SPEED_MODIFIER
	f	Lcwk;	c	mob
	f	I	d	recruitmentTick
	m	(Lcwk;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	(Lcwj;)V	a	recruitNearby
	m	(Lcwk;)Z	a	lambda$recruitNearby$0
c	cid	net/minecraft/world/entity/ai/goal/RandomLookAroundGoal
	f	Lcao;	a	mob
	f	D	b	relX
	f	D	c	relZ
	f	I	d	lookTime
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cie	net/minecraft/world/entity/ai/goal/RandomStandGoal
	f	Lcoq;	a	horse
	f	I	b	nextStand
	m	(Lcoq;)V	<init>	<init>
	m	()V	d	start
	m	()V	h	playStandSound
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	(Lcoq;)V	a	resetStandInterval
	m	()Z	X_	requiresUpdateEveryTick
c	cif	net/minecraft/world/entity/ai/goal/RandomStrollGoal
	f	I	a	DEFAULT_INTERVAL
	f	Lcau;	b	mob
	f	D	c	wantedX
	f	D	d	wantedY
	f	D	e	wantedZ
	f	D	f	speedModifier
	f	I	g	interval
	f	Z	h	forceTrigger
	f	Z	i	checkNoActionTime
	m	(Lcau;D)V	<init>	<init>
	m	(Lcau;DI)V	<init>	<init>
	m	(Lcau;DIZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Lfis;	h	getPosition
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	i	trigger
	m	(I)V	c	setInterval
c	cig	net/minecraft/world/entity/ai/goal/RandomSwimmingGoal
	m	(Lcau;DI)V	<init>	<init>
	m	()Lfis;	h	getPosition
c	cih	net/minecraft/world/entity/ai/goal/RangedAttackGoal
	f	Lcao;	a	mob
	f	Lcrz;	b	rangedAttackMob
	f	Lcam;	c	target
	f	I	d	attackTime
	f	D	e	speedModifier
	f	I	f	seeTime
	f	I	g	attackIntervalMin
	f	I	h	attackIntervalMax
	f	F	i	attackRadius
	f	F	j	attackRadiusSqr
	m	(Lcrz;DIF)V	<init>	<init>
	m	(Lcrz;DIIF)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cii	net/minecraft/world/entity/ai/goal/RangedBowAttackGoal
	f	Lcrv;	a	mob
	f	D	b	speedModifier
	f	I	c	attackIntervalMin
	f	F	d	attackRadiusSqr
	f	I	e	attackTime
	f	I	f	seeTime
	f	Z	g	strafingClockwise
	f	Z	h	strafingBackwards
	f	I	i	strafingTime
	m	(Lcrv;DIF)V	<init>	<init>
	m	(I)V	c	setMinAttackInterval
	m	()Z	b	canUse
	m	()Z	h	isHoldingBow
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cij	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal
	f	Lbwu;	a	PATHFINDING_DELAY_RANGE
	f	Lcrv;	b	mob
	f	Lcij$a;	c	crossbowState
	f	D	d	speedModifier
	f	F	e	attackRadiusSqr
	f	I	f	seeTime
	f	I	g	attackDelay
	f	I	h	updatePathDelay
	m	(Lcrv;DF)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	isHoldingCrossbow
	m	()Z	c	canContinueToUse
	m	()Z	i	isValidTarget
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()Z	k	canRun
	m	()V	<clinit>	<clinit>
c	cij$a	net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState
	f	Lcij$a;	a	UNCHARGED
	f	Lcij$a;	b	CHARGING
	f	Lcij$a;	c	CHARGED
	f	Lcij$a;	d	READY_TO_ATTACK
	f	[Lcij$a;	e	$VALUES
	m	()[Lcij$a;	values	values
	m	(Ljava/lang/String;)Lcij$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcij$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cik	net/minecraft/world/entity/ai/goal/RemoveBlockGoal
	f	Ldpz;	g	blockToRemove
	f	Lcao;	h	removerMob
	f	I	i	ticksSinceReachedGoal
	f	I	j	WAIT_AFTER_BLOCK_FOUND
	m	(Ldpz;Lcau;DI)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	e	stop
	m	()V	d	start
	m	(Ldmv;Ljb;)V	a	playDestroyProgressSound
	m	(Ldmu;Ljb;)V	a	playBreakSound
	m	()V	a	tick
	m	(Ljb;Ldly;)Ljb;	a	getPosWithBlock
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	cil	net/minecraft/world/entity/ai/goal/RestrictSunGoal
	f	Lcau;	a	mob
	m	(Lcau;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
c	cim	net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal
	f	Lcoq;	a	horse
	f	D	b	speedModifier
	f	D	c	posX
	f	D	d	posY
	f	D	e	posZ
	m	(Lcoq;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()Z	c	canContinueToUse
	m	()V	a	tick
c	cin	net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal
	f	Lcbi;	a	mob
	m	(Lcbi;)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
c	cio	net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal
	f	I	a	DISTANCE_THRESHOLD
	f	Lcau;	b	mob
	f	I	c	interval
	f	Ljb;	d	wantedPos
	m	(Lcau;I)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	()V	h	moveRandomly
	m	(Laub;Ljb;)D	a	lambda$canUse$0
c	cip	net/minecraft/world/entity/ai/goal/SwellGoal
	f	Lcrh;	a	creeper
	f	Lcam;	b	target
	m	(Lcrh;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	ciq	net/minecraft/world/entity/ai/goal/TemptGoal
	f	Lclc;	d	TEMPT_TARGETING
	f	D	e	DEFAULT_STOP_DISTANCE
	f	Lclc;	f	targetingConditions
	f	Lcao;	a	mob
	f	D	b	speedModifier
	f	D	g	px
	f	D	h	py
	f	D	i	pz
	f	D	j	pRotX
	f	D	k	pRotY
	f	Lcut;	c	player
	f	I	l	calmDown
	f	Z	m	isRunning
	f	Ljava/util/function/Predicate;	n	items
	f	Z	o	canScare
	f	D	p	stopDistance
	m	(Lcau;DLjava/util/function/Predicate;Z)V	<init>	<init>
	m	(Lcau;DLjava/util/function/Predicate;ZD)V	<init>	<init>
	m	(Lcao;DLjava/util/function/Predicate;ZD)V	<init>	<init>
	m	()Z	b	canUse
	m	(Lcam;)Z	a	shouldFollow
	m	()Z	c	canContinueToUse
	m	()Z	h	canScare
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()V	i	stopNavigation
	m	(Lcut;)V	a	navigateTowards
	m	()Z	k	isRunning
	m	(Lcam;Laub;)Z	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	ciq$a	net/minecraft/world/entity/ai/goal/TemptGoal$ForNonPathfinders
	m	(Lcao;DLjava/util/function/Predicate;ZD)V	<init>	<init>
	m	()V	i	stopNavigation
	m	(Lcut;)V	a	navigateTowards
c	cir	net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal
	f	Lcua;	a	mob
	m	(Lcua;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
c	cis	net/minecraft/world/entity/ai/goal/TryFindWaterGoal
	f	Lcau;	a	mob
	m	(Lcau;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cit	net/minecraft/world/entity/ai/goal/UseItemGoal
	f	Lcao;	a	mob
	f	Ldcv;	b	item
	f	Ljava/util/function/Predicate;	c	canUseSelector
	f	Layy;	d	finishUsingSound
	m	(Lcao;Ldcv;Layy;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
c	ciu	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal
	m	(Lcau;D)V	<init>	<init>
	m	()Lfis;	h	getPosition
c	civ	net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal
	f	F	i	PROBABILITY
	f	F	j	probability
	m	(Lcau;D)V	<init>	<init>
	m	(Lcau;DF)V	<init>	<init>
	m	()Lfis;	h	getPosition
c	ciw	net/minecraft/world/entity/ai/goal/WrappedGoal
	f	Lchi;	a	goal
	f	I	b	priority
	f	Z	c	isRunning
	m	(ILchi;)V	<init>	<init>
	m	(Lciw;)Z	a	canBeReplacedBy
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	(I)I	a	adjustedTickDelay
	m	()V	a	tick
	m	(Ljava/util/EnumSet;)V	a	setFlags
	m	()Ljava/util/EnumSet;	j	getFlags
	m	()Z	h	isRunning
	m	()I	i	getPriority
	m	()Lchi;	k	getGoal
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
c	cix	net/minecraft/world/entity/ai/goal/ZombieAttackGoal
	f	Lcso;	b	zombie
	f	I	c	raiseArmTicks
	m	(Lcso;DZ)V	<init>	<init>
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	ciy	net/minecraft/world/entity/ai/goal/package-info
c	ciz	net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal
	f	Lcmv;	a	golem
	f	Lcam;	b	potentialTarget
	f	Lclc;	c	attackTargeting
	m	(Lcmv;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cja	net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal
	f	Lclc;	a	HURT_BY_TARGETING
	f	I	b	ALERT_RANGE_Y
	f	Z	c	alertSameType
	f	I	d	timestamp
	f	[Ljava/lang/Class;	i	toIgnoreDamage
	f	[Ljava/lang/Class;	j	toIgnoreAlert
	m	(Lcau;[Ljava/lang/Class;)V	<init>	<init>
	m	()Z	b	canUse
	m	([Ljava/lang/Class;)Lcja;	a	setAlertOthers
	m	()V	d	start
	m	()V	h	alertOthers
	m	(Lcao;Lcam;)V	a	alertOther
	m	()V	<clinit>	<clinit>
c	cjb	net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal
	f	I	i	DEFAULT_RANDOM_INTERVAL
	f	Ljava/lang/Class;	a	targetType
	f	I	b	randomInterval
	f	Lcam;	c	target
	f	Lclc;	d	targetConditions
	m	(Lcao;Ljava/lang/Class;Z)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;ZLclc$a;)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;ZZ)V	<init>	<init>
	m	(Lcao;Ljava/lang/Class;IZZLclc$a;)V	<init>	<init>
	m	()Z	b	canUse
	m	(D)Lfin;	a	getTargetSearchArea
	m	()V	h	findTarget
	m	()V	d	start
	m	(Lcam;)V	a	setTarget
	m	()Lclc;	i	getTargetConditions
	m	(Lcam;)Z	b	lambda$findTarget$0
c	cjc	net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal
	f	Z	i	canAttack
	m	(Lcwk;Ljava/lang/Class;IZZLclc$a;)V	<init>	<init>
	m	(Z)V	a	setCanAttack
	m	()Z	b	canUse
c	cjd	net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal
	f	I	i	DEFAULT_COOLDOWN
	f	I	j	cooldown
	m	(Lcwk;Ljava/lang/Class;ZLclc$a;)V	<init>	<init>
	m	()I	i	getCooldown
	m	()V	k	decrementCooldown
	m	()Z	b	canUse
	m	()V	d	start
c	cje	net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal
	f	Lcbi;	i	tamableMob
	m	(Lcbi;Ljava/lang/Class;ZLclc$a;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cjf	net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal
	f	Lcbi;	a	tameAnimal
	f	Lcam;	b	ownerLastHurtBy
	f	I	c	timestamp
	m	(Lcbi;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cjg	net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal
	f	Lcbi;	a	tameAnimal
	f	Lcam;	b	ownerLastHurt
	f	I	c	timestamp
	m	(Lcbi;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cjh	net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal
	f	I	a	ALERT_RANGE_Y
	f	Lcao;	b	mob
	f	Z	c	alertOthersOfSameType
	f	I	d	lastHurtByPlayerTimestamp
	m	(Lcao;Z)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	wasHurtByPlayer
	m	()V	d	start
	m	()Ljava/util/List;	i	getNearbyMobsOfSameType
	m	(Lcao;)Lcar;	a	lambda$start$1
	m	(Lcao;)Z	b	lambda$start$0
c	cji	net/minecraft/world/entity/ai/goal/target/TargetGoal
	f	I	a	EMPTY_REACH_CACHE
	f	I	b	CAN_REACH_CACHE
	f	I	c	CANT_REACH_CACHE
	f	Lcao;	e	mob
	f	Z	f	mustSee
	f	Z	d	mustReach
	f	I	i	reachCache
	f	I	j	reachCacheTime
	f	I	k	unseenTicks
	f	Lcam;	g	targetMob
	f	I	h	unseenMemoryTicks
	m	(Lcao;Z)V	<init>	<init>
	m	(Lcao;ZZ)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	()D	l	getFollowDistance
	m	()V	d	start
	m	()V	e	stop
	m	(Lcam;Lclc;)Z	a	canAttack
	m	(Lcam;)Z	a	canReach
	m	(I)Lcji;	c	setUnseenMemoryTicks
c	cjj	net/minecraft/world/entity/ai/goal/target/package-info
c	cjk	net/minecraft/world/entity/ai/gossip/GossipContainer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	DISCARD_THRESHOLD
	f	Ljava/util/Map;	c	gossips
	m	()V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/Map;	a	getGossipEntries
	m	()V	b	decay
	m	()Ljava/util/stream/Stream;	e	unpack
	m	(Lbck;I)Ljava/util/Collection;	a	selectGossipsForTransfer
	m	(Ljava/util/UUID;)Lcjk$a;	a	getOrCreate
	m	(Lcjk;Lbck;I)V	a	transferFrom
	m	(Ljava/util/UUID;Ljava/util/function/Predicate;)I	a	getReputation
	m	(Lcjl;Ljava/util/function/DoublePredicate;)J	a	getCountForType
	m	(Ljava/util/UUID;Lcjl;I)V	a	add
	m	(Ljava/util/UUID;Lcjl;I)V	b	remove
	m	(Ljava/util/UUID;Lcjl;)V	a	remove
	m	(Lcjl;)V	a	remove
	m	()V	c	clear
	m	(Lcjk;)V	a	putAll
	m	(II)I	a	mergeValuesForTransfer
	m	(Lcjl;II)I	a	mergeValuesForAddition
	m	()Lcjk;	d	copy
	m	(Ljava/util/UUID;Lcjk$a;)V	a	lambda$putAll$8
	m	(Lcjl;II)I	b	lambda$add$7
	m	(Ljava/util/function/DoublePredicate;Lcjl;Lcjk$a;)Z	a	lambda$getCountForType$6
	m	(Lcjk$b;)V	a	lambda$transferFrom$5
	m	(Ljava/util/UUID;)Lcjk$a;	b	lambda$getOrCreate$4
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$unpack$3
	m	(Ljava/util/Map;Ljava/util/UUID;)V	a	lambda$getGossipEntries$2
	m	(Lcjk$b;)V	b	lambda$new$1
	m	(Lcjk;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cjk$a	net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	entries
	m	()V	<init>	<init>
	m	(Ljava/util/function/Predicate;)I	a	weightedValue
	m	(Ljava/util/UUID;)Ljava/util/stream/Stream;	a	unpack
	m	()V	a	decay
	m	()Z	b	isEmpty
	m	(Lcjl;)V	a	makeSureValueIsntTooLowOrTooHigh
	m	(Lcjl;)V	b	remove
	m	(Ljava/util/UUID;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcjk$b;	a	lambda$unpack$2
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)I	a	lambda$weightedValue$1
	m	(Ljava/util/function/Predicate;Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Z	a	lambda$weightedValue$0
c	cjk$b	net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry
	f	Ljava/util/UUID;	b	target
	f	Lcjl;	c	type
	f	I	d	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/UUID;Lcjl;I)V	<init>	<init>
	m	()I	a	weightedValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/UUID;	b	target
	m	()Lcjl;	c	type
	m	()I	d	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cjl	net/minecraft/world/entity/ai/gossip/GossipType
	f	Lcjl;	a	MAJOR_NEGATIVE
	f	Lcjl;	b	MINOR_NEGATIVE
	f	Lcjl;	c	MINOR_POSITIVE
	f	Lcjl;	d	MAJOR_POSITIVE
	f	Lcjl;	e	TRADING
	f	I	f	REPUTATION_CHANGE_PER_EVENT
	f	I	g	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY
	f	I	h	REPUTATION_CHANGE_PER_TRADE
	f	Ljava/lang/String;	i	id
	f	I	j	weight
	f	I	k	max
	f	I	l	decayPerDay
	f	I	m	decayPerTransfer
	f	Lcom/mojang/serialization/Codec;	n	CODEC
	f	[Lcjl;	o	$VALUES
	m	()[Lcjl;	values	values
	m	(Ljava/lang/String;)Lcjl;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;IIII)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcjl;	a	$values
	m	()V	<clinit>	<clinit>
c	cjm	net/minecraft/world/entity/ai/gossip/package-info
c	cjn	net/minecraft/world/entity/ai/memory/ExpirableValue
	f	Ljava/lang/Object;	a	value
	f	J	b	timeToLive
	m	(Ljava/lang/Object;J)V	<init>	<init>
	m	()V	a	tick
	m	(Ljava/lang/Object;)Lcjn;	a	of
	m	(Ljava/lang/Object;J)Lcjn;	a	of
	m	()J	b	getTimeToLive
	m	()Ljava/lang/Object;	c	getValue
	m	()Z	d	hasExpired
	m	()Ljava/lang/String;	toString	toString
	m	()Z	e	canExpire
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
	m	(Ljava/lang/Object;Ljava/util/Optional;)Lcjn;	a	lambda$codec$2
	m	(Lcjn;)Ljava/util/Optional;	a	lambda$codec$1
	m	(Lcjn;)Ljava/lang/Object;	b	lambda$codec$0
c	cjo	net/minecraft/world/entity/ai/memory/MemoryModuleType
	f	Lcjo;	a	DUMMY
	f	Lcjo;	b	HOME
	f	Lcjo;	c	JOB_SITE
	f	Lcjo;	d	POTENTIAL_JOB_SITE
	f	Lcjo;	e	MEETING_POINT
	f	Lcjo;	f	SECONDARY_JOB_SITE
	f	Lcjo;	g	NEAREST_LIVING_ENTITIES
	f	Lcjo;	h	NEAREST_VISIBLE_LIVING_ENTITIES
	f	Lcjo;	i	VISIBLE_VILLAGER_BABIES
	f	Lcjo;	j	NEAREST_PLAYERS
	f	Lcjo;	k	NEAREST_VISIBLE_PLAYER
	f	Lcjo;	l	NEAREST_VISIBLE_ATTACKABLE_PLAYER
	f	Lcjo;	m	NEAREST_VISIBLE_ATTACKABLE_PLAYERS
	f	Lcjo;	n	WALK_TARGET
	f	Lcjo;	o	LOOK_TARGET
	f	Lcjo;	p	ATTACK_TARGET
	f	Lcjo;	q	ATTACK_COOLING_DOWN
	f	Lcjo;	r	INTERACTION_TARGET
	f	Lcjo;	s	BREED_TARGET
	f	Lcjo;	t	RIDE_TARGET
	f	Lcjo;	u	PATH
	f	Lcjo;	v	INTERACTABLE_DOORS
	f	Lcjo;	w	DOORS_TO_CLOSE
	f	Lcjo;	x	NEAREST_BED
	f	Lcjo;	y	HURT_BY
	f	Lcjo;	z	HURT_BY_ENTITY
	f	Lcjo;	A	AVOID_TARGET
	f	Lcjo;	B	NEAREST_HOSTILE
	f	Lcjo;	C	NEAREST_ATTACKABLE
	f	Lcjo;	D	HIDING_PLACE
	f	Lcjo;	E	HEARD_BELL_TIME
	f	Lcjo;	F	CANT_REACH_WALK_TARGET_SINCE
	f	Lcjo;	G	GOLEM_DETECTED_RECENTLY
	f	Lcjo;	H	DANGER_DETECTED_RECENTLY
	f	Lcjo;	I	LAST_SLEPT
	f	Lcjo;	J	LAST_WOKEN
	f	Lcjo;	K	LAST_WORKED_AT_POI
	f	Lcjo;	L	NEAREST_VISIBLE_ADULT
	f	Lcjo;	M	NEAREST_VISIBLE_WANTED_ITEM
	f	Lcjo;	N	NEAREST_VISIBLE_NEMESIS
	f	Lcjo;	O	PLAY_DEAD_TICKS
	f	Lcjo;	P	TEMPTING_PLAYER
	f	Lcjo;	Q	TEMPTATION_COOLDOWN_TICKS
	f	Lcjo;	R	GAZE_COOLDOWN_TICKS
	f	Lcjo;	S	IS_TEMPTED
	f	Lcjo;	T	LONG_JUMP_COOLDOWN_TICKS
	f	Lcjo;	U	LONG_JUMP_MID_JUMP
	f	Lcjo;	V	HAS_HUNTING_COOLDOWN
	f	Lcjo;	W	RAM_COOLDOWN_TICKS
	f	Lcjo;	X	RAM_TARGET
	f	Lcjo;	Y	IS_IN_WATER
	f	Lcjo;	Z	IS_PREGNANT
	f	Lcjo;	aa	IS_PANICKING
	f	Lcjo;	ab	UNREACHABLE_TONGUE_TARGETS
	f	Lcjo;	ac	ANGRY_AT
	f	Lcjo;	ad	UNIVERSAL_ANGER
	f	Lcjo;	ae	ADMIRING_ITEM
	f	Lcjo;	af	TIME_TRYING_TO_REACH_ADMIRE_ITEM
	f	Lcjo;	ag	DISABLE_WALK_TO_ADMIRE_ITEM
	f	Lcjo;	ah	ADMIRING_DISABLED
	f	Lcjo;	ai	HUNTED_RECENTLY
	f	Lcjo;	aj	CELEBRATE_LOCATION
	f	Lcjo;	ak	DANCING
	f	Lcjo;	al	NEAREST_VISIBLE_HUNTABLE_HOGLIN
	f	Lcjo;	am	NEAREST_VISIBLE_BABY_HOGLIN
	f	Lcjo;	an	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
	f	Lcjo;	ao	NEARBY_ADULT_PIGLINS
	f	Lcjo;	ap	NEAREST_VISIBLE_ADULT_PIGLINS
	f	Lcjo;	aq	NEAREST_VISIBLE_ADULT_HOGLINS
	f	Lcjo;	ar	NEAREST_VISIBLE_ADULT_PIGLIN
	f	Lcjo;	as	NEAREST_VISIBLE_ZOMBIFIED
	f	Lcjo;	at	VISIBLE_ADULT_PIGLIN_COUNT
	f	Lcjo;	au	VISIBLE_ADULT_HOGLIN_COUNT
	f	Lcjo;	av	NEAREST_PLAYER_HOLDING_WANTED_ITEM
	f	Lcjo;	aw	ATE_RECENTLY
	f	Lcjo;	ax	NEAREST_REPELLENT
	f	Lcjo;	ay	PACIFIED
	f	Lcjo;	az	ROAR_TARGET
	f	Lcjo;	aA	DISTURBANCE_LOCATION
	f	Lcjo;	aB	RECENT_PROJECTILE
	f	Lcjo;	aC	IS_SNIFFING
	f	Lcjo;	aD	IS_EMERGING
	f	Lcjo;	aE	ROAR_SOUND_DELAY
	f	Lcjo;	aF	DIG_COOLDOWN
	f	Lcjo;	aG	ROAR_SOUND_COOLDOWN
	f	Lcjo;	aH	SNIFF_COOLDOWN
	f	Lcjo;	aI	TOUCH_COOLDOWN
	f	Lcjo;	aJ	VIBRATION_COOLDOWN
	f	Lcjo;	aK	SONIC_BOOM_COOLDOWN
	f	Lcjo;	aL	SONIC_BOOM_SOUND_COOLDOWN
	f	Lcjo;	aM	SONIC_BOOM_SOUND_DELAY
	f	Lcjo;	aN	LIKED_PLAYER
	f	Lcjo;	aO	LIKED_NOTEBLOCK_POSITION
	f	Lcjo;	aP	LIKED_NOTEBLOCK_COOLDOWN_TICKS
	f	Lcjo;	aQ	ITEM_PICKUP_COOLDOWN_TICKS
	f	Lcjo;	aR	SNIFFER_EXPLORED_POSITIONS
	f	Lcjo;	aS	SNIFFER_SNIFFING_TARGET
	f	Lcjo;	aT	SNIFFER_DIGGING
	f	Lcjo;	aU	SNIFFER_HAPPY
	f	Lcjo;	aV	BREEZE_JUMP_COOLDOWN
	f	Lcjo;	aW	BREEZE_SHOOT
	f	Lcjo;	aX	BREEZE_SHOOT_CHARGING
	f	Lcjo;	aY	BREEZE_SHOOT_RECOVERING
	f	Lcjo;	aZ	BREEZE_SHOOT_COOLDOWN
	f	Lcjo;	ba	BREEZE_JUMP_INHALING
	f	Lcjo;	bb	BREEZE_JUMP_TARGET
	f	Lcjo;	bc	BREEZE_LEAVING_WATER
	f	Ljava/util/Optional;	bd	codec
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/util/Optional;	a	getCodec
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lcjo;	a	register
	m	(Ljava/lang/String;)Lcjo;	a	register
	m	()V	<clinit>	<clinit>
c	cjp	net/minecraft/world/entity/ai/memory/MemoryStatus
	f	Lcjp;	a	VALUE_PRESENT
	f	Lcjp;	b	VALUE_ABSENT
	f	Lcjp;	c	REGISTERED
	f	[Lcjp;	d	$VALUES
	m	()[Lcjp;	values	values
	m	(Ljava/lang/String;)Lcjp;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcjp;	a	$values
	m	()V	<clinit>	<clinit>
c	cjq	net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities
	f	Lcjq;	a	EMPTY
	f	Ljava/util/List;	b	nearbyEntities
	f	Ljava/util/function/Predicate;	c	lineOfSightTest
	m	()V	<init>	<init>
	m	(Laub;Lcam;Ljava/util/List;)V	<init>	<init>
	m	()Lcjq;	a	empty
	m	(Ljava/util/function/Predicate;)Ljava/util/Optional;	a	findClosest
	m	(Ljava/util/function/Predicate;)Ljava/lang/Iterable;	b	findAll
	m	(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;	c	find
	m	(Lcam;)Z	a	contains
	m	(Ljava/util/function/Predicate;)Z	d	contains
	m	(Ljava/util/function/Predicate;Lcam;)Z	a	lambda$find$4
	m	(Ljava/util/function/Predicate;Lcam;)Z	b	lambda$findAll$3
	m	(Lit/unimi/dsi/fastutil/objects/Object2BooleanOpenHashMap;Ljava/util/function/Predicate;Lcam;)Z	a	lambda$new$2
	m	(Laub;Lcam;Lcam;)Z	a	lambda$new$1
	m	(Lcam;)Z	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	cjr	net/minecraft/world/entity/ai/memory/WalkTarget
	f	Lcdr;	a	target
	f	F	b	speedModifier
	f	I	c	closeEnoughDist
	m	(Ljb;FI)V	<init>	<init>
	m	(Lfis;FI)V	<init>	<init>
	m	(Lbzm;FI)V	<init>	<init>
	m	(Lcdr;FI)V	<init>	<init>
	m	()Lcdr;	a	getTarget
	m	()F	b	getSpeedModifier
	m	()I	c	getCloseEnoughDist
c	cjs	net/minecraft/world/entity/ai/memory/package-info
c	cjt	net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
	m	()Z	a	canUpdatePath
	m	()Lfis;	b	getTempMobPos
	m	(Lfis;)D	a	getGroundY
	m	(Lfis;Lfis;)Z	a	canMoveDirectly
	m	(Ljb;)Z	a	isStableDestination
	m	(Z)V	a	setCanFloat
	m	()Z	c	canNavigateGround
c	cju	net/minecraft/world/entity/ai/navigation/FlyingPathNavigation
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
	m	(Lfis;Lfis;)Z	a	canMoveDirectly
	m	()Z	a	canUpdatePath
	m	()Lfis;	b	getTempMobPos
	m	(Lbzm;I)Lfaz;	a	createPath
	m	()V	d	tick
	m	(Ljb;)Z	a	isStableDestination
	m	()Z	c	canNavigateGround
c	cjv	net/minecraft/world/entity/ai/navigation/GroundPathNavigation
	f	Z	p	avoidSun
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
	m	()Z	a	canUpdatePath
	m	()Lfis;	b	getTempMobPos
	m	(Ljb;I)Lfaz;	a	createPath
	m	(Lbzm;I)Lfaz;	a	createPath
	m	()I	s	getSurfaceY
	m	()V	e	trimPath
	m	()Z	c	canNavigateGround
	m	(Lfbc;)Z	a	hasValidPathType
	m	(Z)V	b	setAvoidSun
	m	(Z)V	c	setCanWalkOverFences
c	cjw	net/minecraft/world/entity/ai/navigation/PathNavigation
	f	I	p	MAX_TIME_RECOMPUTE
	f	I	q	STUCK_CHECK_INTERVAL
	f	F	r	STUCK_THRESHOLD_DISTANCE_FACTOR
	f	Lcao;	a	mob
	f	Ldmu;	b	level
	f	Lfaz;	c	path
	f	D	d	speedModifier
	f	I	e	tick
	f	I	f	lastStuckCheck
	f	Lfis;	g	lastStuckCheckPos
	f	Lkg;	h	timeoutCachedNode
	f	J	i	timeoutTimer
	f	J	j	lastTimeoutCheck
	f	D	k	timeoutLimit
	f	F	l	maxDistanceToWaypoint
	f	Z	m	hasDelayedRecomputation
	f	J	n	timeLastRecompute
	f	Lfay;	o	nodeEvaluator
	f	Ljb;	s	targetPos
	f	I	t	reachRange
	f	F	u	maxVisitedNodesMultiplier
	f	Lfbb;	v	pathFinder
	f	Z	w	isStuck
	f	F	x	requiredPathLength
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	()V	f	updatePathfinderMaxVisitedNodes
	m	(F)V	a	setRequiredPathLength
	m	()F	s	getMaxPathLength
	m	()V	g	resetMaxVisitedNodesMultiplier
	m	(F)V	b	setMaxVisitedNodesMultiplier
	m	()Ljb;	h	getTargetPos
	m	(I)Lfbb;	a	createPathFinder
	m	(D)V	a	setSpeedModifier
	m	()V	i	recomputePath
	m	(DDDI)Lfaz;	a	createPath
	m	(Ljava/util/stream/Stream;I)Lfaz;	a	createPath
	m	(Ljava/util/Set;I)Lfaz;	a	createPath
	m	(Ljb;I)Lfaz;	a	createPath
	m	(Ljb;II)Lfaz;	a	createPath
	m	(Lbzm;I)Lfaz;	a	createPath
	m	(Ljava/util/Set;IZI)Lfaz;	a	createPath
	m	(Ljava/util/Set;IZIF)Lfaz;	a	createPath
	m	(DDDD)Z	a	moveTo
	m	(DDDID)Z	a	moveTo
	m	(Lbzm;D)Z	a	moveTo
	m	(Lfaz;D)Z	a	moveTo
	m	()Lfaz;	j	getPath
	m	()V	d	tick
	m	(Lfis;)D	a	getGroundY
	m	()V	k	followThePath
	m	(Lfis;)Z	c	shouldTargetNextNodeInDirection
	m	(Lfis;)V	b	doStuckDetection
	m	()V	t	timeoutPath
	m	()V	u	resetStuckTimeout
	m	()Z	l	isDone
	m	()Z	m	isInProgress
	m	()V	n	stop
	m	()Lfis;	b	getTempMobPos
	m	()Z	a	canUpdatePath
	m	()V	e	trimPath
	m	(Lfis;Lfis;)Z	a	canMoveDirectly
	m	(Lfbc;)Z	b	canCutCorner
	m	(Lcao;Lfis;Lfis;Z)Z	a	isClearForMovementBetween
	m	(Ljb;)Z	a	isStableDestination
	m	()Lfay;	o	getNodeEvaluator
	m	(Z)V	a	setCanFloat
	m	()Z	p	canFloat
	m	(Ljb;)Z	b	shouldRecomputePath
	m	()F	q	getMaxDistanceToWaypoint
	m	()Z	r	isStuck
	m	()Z	c	canNavigateGround
	m	(Z)V	d	setCanOpenDoors
c	cjx	net/minecraft/world/entity/ai/navigation/WallClimberNavigation
	f	Ljb;	p	pathToPosition
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	(Ljb;I)Lfaz;	a	createPath
	m	(Lbzm;I)Lfaz;	a	createPath
	m	(Lbzm;D)Z	a	moveTo
	m	()V	d	tick
c	cjy	net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation
	f	Z	p	allowBreaching
	m	(Lcao;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
	m	()Z	a	canUpdatePath
	m	()Lfis;	b	getTempMobPos
	m	(Lfis;)D	a	getGroundY
	m	(Lfis;Lfis;)Z	a	canMoveDirectly
	m	(Ljb;)Z	a	isStableDestination
	m	(Z)V	a	setCanFloat
	m	()Z	c	canNavigateGround
c	cjz	net/minecraft/world/entity/ai/navigation/package-info
c	cka	net/minecraft/world/entity/ai/package-info
c	ckb	net/minecraft/world/entity/ai/sensing/AdultSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcam;Lcjq;)V	a	setNearestVisibleAdult
	m	(Lcam;Lcam;)Z	a	lambda$setNearestVisibleAdult$1
	m	(Lcam;Lcjq;)V	b	lambda$doTick$0
c	ckc	net/minecraft/world/entity/ai/sensing/AdultSensorAnyType
	m	()V	<init>	<init>
	m	(Lcam;Lcjq;)V	a	setNearestVisibleAdult
	m	(Lcam;)Z	a	lambda$setNearestVisibleAdult$0
c	ckd	net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor
	f	F	a	TARGET_DETECTION_DISTANCE
	m	()V	<init>	<init>
	m	(Laub;Lcam;Lcam;)Z	a	isMatchingEntity
	m	(Lcam;Lcam;)Z	a	isHuntTarget
	m	(Lcam;)Z	b	isHostileTarget
	m	(Lcam;Lcam;)Z	b	isClose
	m	()Lcjo;	b	getMemory
c	cke	net/minecraft/world/entity/ai/sensing/BreezeAttackEntitySensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcsr;)V	a	doTick
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcsr;)V	a	lambda$doTick$2
	m	(Lcsr;Lcam;)V	a	lambda$doTick$1
	m	(Laub;Lcsr;Lcam;)Z	a	lambda$doTick$0
c	ckf	net/minecraft/world/entity/ai/sensing/DummySensor
	m	()V	<init>	<init>
	m	(Laub;Lcam;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
c	ckg	net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor
	f	F	a	TARGET_DETECTION_DISTANCE
	m	()V	<init>	<init>
	m	(Laub;Lcam;Lcam;)Z	a	isMatchingEntity
	m	(Lcam;Lcam;)Z	a	isUnreachableAttackTarget
	m	()Lcjo;	b	getMemory
c	ckh	net/minecraft/world/entity/ai/sensing/GolemSensor
	f	I	a	GOLEM_SCAN_RATE
	f	I	b	MEMORY_TIME_TO_LIVE
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Laub;Lcam;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
	m	(Lcam;)V	a	checkForNearbyGolem
	m	(Lcam;)V	b	golemDetected
	m	(Lcam;)Z	c	lambda$checkForNearbyGolem$0
c	cki	net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lctc;)V	a	doTick
	m	(Laub;Lctc;)Ljava/util/Optional;	b	findNearestRepellent
	m	(Laub;Lcam;)V	a	doTick
	m	(Laub;Ljb;)Z	a	lambda$findNearestRepellent$1
	m	(Lcam;)Z	a	lambda$doTick$0
c	ckj	net/minecraft/world/entity/ai/sensing/HurtBySensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Laub;Lcbm;Lcam;)V	a	lambda$doTick$0
c	ckk	net/minecraft/world/entity/ai/sensing/IsInWaterSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
c	ckl	net/minecraft/world/entity/ai/sensing/MobSensor
	f	Ljava/util/function/BiPredicate;	a	mobTest
	f	Ljava/util/function/Predicate;	b	readyTest
	f	Lcjo;	c	toSet
	f	I	d	memoryTimeToLive
	m	(ILjava/util/function/BiPredicate;Ljava/util/function/Predicate;Lcjo;I)V	<init>	<init>
	m	(Laub;Lcam;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
	m	(Lcam;)V	a	checkForMobsNearby
	m	(Lcam;)V	b	mobDetected
	m	(Lcam;)V	c	clearMemory
	m	(Lcam;Lcam;)Z	a	lambda$checkForMobsNearby$0
c	ckm	net/minecraft/world/entity/ai/sensing/NearestBedSensor
	f	I	a	CACHE_TIMEOUT
	f	I	b	BATCH_SIZE
	f	I	c	RATE
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	d	batchCache
	f	I	e	triedCount
	f	J	f	lastUpdate
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcao;)V	a	doTick
	m	(Laub;Lcam;)V	a	doTick
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongMap$Entry;)Z	a	lambda$doTick$2
	m	(Ljl;)Z	a	lambda$doTick$1
	m	(Ljb;)Z	a	lambda$doTick$0
c	ckn	net/minecraft/world/entity/ai/sensing/NearestItemSensor
	f	J	b	XZ_RANGE
	f	J	c	Y_RANGE
	f	I	a	MAX_DISTANCE_TO_WANTED_ITEM
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcao;)V	a	doTick
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcao;Lcqz;)Z	a	lambda$doTick$2
	m	(Lcao;Laub;Lcqz;)Z	a	lambda$doTick$1
	m	(Lcqz;)Z	a	lambda$doTick$0
c	cko	net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor
	m	()V	<init>	<init>
	m	(Laub;Lcam;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
	m	(Lcam;Lcam;)Z	a	lambda$doTick$0
c	ckp	net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor
	m	()V	<init>	<init>
	m	(Laub;Lcam;Lcam;)Z	a	isMatchingEntity
	m	()Lcjo;	b	getMemory
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Laub;Lcam;)Ljava/util/Optional;	c	getNearestEntity
	m	(Lcam;)Ljava/util/Optional;	a	getVisibleEntities
	m	(Laub;Lcam;Lcjq;)Ljava/util/Optional;	a	lambda$getNearestEntity$1
	m	(Laub;Lcam;Lcam;)Z	e	lambda$getNearestEntity$0
c	ckq	net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcam;)Z	a	lambda$doTick$0
c	ckr	net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Laub;Lcam;)Ljava/util/Optional;	c	findNearestRepellent
	m	(Laub;Ljb;)Z	a	isValidRepellent
	m	(Laub;Ljb;)Z	b	lambda$findNearestRepellent$1
	m	(Lcam;)Z	a	lambda$doTick$0
c	cks	net/minecraft/world/entity/ai/sensing/PlayerSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcam;)D	a	getFollowDistance
	m	(Laub;Lcam;Lcut;)Z	a	lambda$doTick$2
	m	(Laub;Lcam;Lcut;)Z	b	lambda$doTick$1
	m	(Lcam;Lauc;)Z	a	lambda$doTick$0
c	ckt	net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor
	f	I	a	SCAN_RATE
	m	()V	<init>	<init>
	m	(Laub;Lcuf;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
c	cku	net/minecraft/world/entity/ai/sensing/Sensing
	f	Lcao;	a	mob
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	b	seen
	f	Lit/unimi/dsi/fastutil/ints/IntSet;	c	unseen
	m	(Lcao;)V	<init>	<init>
	m	()V	a	tick
	m	(Lbzm;)Z	a	hasLineOfSight
c	ckv	net/minecraft/world/entity/ai/sensing/Sensor
	f	Lbck;	a	RANDOM
	f	I	b	DEFAULT_SCAN_RATE
	f	I	c	DEFAULT_TARGETING_RANGE
	f	Lclc;	d	TARGET_CONDITIONS
	f	Lclc;	e	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lclc;	f	ATTACK_TARGET_CONDITIONS
	f	Lclc;	g	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING
	f	Lclc;	h	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT
	f	Lclc;	i	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT
	f	I	j	scanRate
	f	J	k	timeToTick
	m	(I)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Laub;Lcam;)V	b	tick
	m	(Lcam;)V	a	updateTargetingConditionRanges
	m	(Laub;Lcam;)V	a	doTick
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;Lcam;)Z	b	isEntityTargetable
	m	(Laub;Lcam;Lcam;)Z	c	isEntityAttackable
	m	(Lcam;I)Ljava/util/function/BiPredicate;	a	wasEntityAttackableLastNTicks
	m	(Laub;Lcam;Lcam;)Z	d	isEntityAttackableIgnoringLineOfSight
	m	(ILjava/util/function/BiPredicate;)Ljava/util/function/BiPredicate;	a	rememberPositives
	m	(Ljava/util/function/BiPredicate;Ljava/util/concurrent/atomic/AtomicInteger;ILjava/lang/Object;Ljava/lang/Object;)Z	a	lambda$rememberPositives$1
	m	(Lcam;Laub;Lcam;)Z	a	lambda$wasEntityAttackableLastNTicks$0
	m	()V	<clinit>	<clinit>
c	ckw	net/minecraft/world/entity/ai/sensing/SensorType
	f	Lckw;	a	DUMMY
	f	Lckw;	b	NEAREST_ITEMS
	f	Lckw;	c	NEAREST_LIVING_ENTITIES
	f	Lckw;	d	NEAREST_PLAYERS
	f	Lckw;	e	NEAREST_BED
	f	Lckw;	f	HURT_BY
	f	Lckw;	g	VILLAGER_HOSTILES
	f	Lckw;	h	VILLAGER_BABIES
	f	Lckw;	i	SECONDARY_POIS
	f	Lckw;	j	GOLEM_DETECTED
	f	Lckw;	k	ARMADILLO_SCARE_DETECTED
	f	Lckw;	l	PIGLIN_SPECIFIC_SENSOR
	f	Lckw;	m	PIGLIN_BRUTE_SPECIFIC_SENSOR
	f	Lckw;	n	HOGLIN_SPECIFIC_SENSOR
	f	Lckw;	o	NEAREST_ADULT
	f	Lckw;	p	NEAREST_ADULT_ANY_TYPE
	f	Lckw;	q	AXOLOTL_ATTACKABLES
	f	Lckw;	r	AXOLOTL_TEMPTATIONS
	f	Lckw;	s	GOAT_TEMPTATIONS
	f	Lckw;	t	FROG_TEMPTATIONS
	f	Lckw;	u	CAMEL_TEMPTATIONS
	f	Lckw;	v	ARMADILLO_TEMPTATIONS
	f	Lckw;	w	HAPPY_GHAST_TEMPTATIONS
	f	Lckw;	x	FROG_ATTACKABLES
	f	Lckw;	y	IS_IN_WATER
	f	Lckw;	z	WARDEN_ENTITY_SENSOR
	f	Lckw;	A	SNIFFER_TEMPTATIONS
	f	Lckw;	B	BREEZE_ATTACK_ENTITY_SENSOR
	f	Ljava/util/function/Supplier;	C	factory
	m	(Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Lckv;	a	create
	m	(Ljava/lang/String;Ljava/util/function/Supplier;)Lckw;	a	register
	m	()Lckx;	b	lambda$static$7
	m	()Lckx;	c	lambda$static$6
	m	()Lckx;	d	lambda$static$5
	m	()Lckx;	e	lambda$static$4
	m	()Lckx;	f	lambda$static$3
	m	()Lckx;	g	lambda$static$2
	m	()Lckx;	h	lambda$static$1
	m	()Lckl;	i	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ckx	net/minecraft/world/entity/ai/sensing/TemptingSensor
	f	Lclc;	a	TEMPT_TARGETING
	f	Ljava/util/function/Predicate;	b	temptations
	m	(Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Laub;Lcau;)V	a	doTick
	m	(Lcut;)Z	a	playerHoldingTemptation
	m	(Ldcv;)Z	a	isTemptation
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcau;Lauc;)Z	a	lambda$doTick$1
	m	(Lclc;Laub;Lcau;Lauc;)Z	a	lambda$doTick$0
	m	()V	<clinit>	<clinit>
c	cky	net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lcam;)V	a	doTick
	m	(Lcam;)Ljava/util/List;	a	getNearestVillagerBabies
	m	(Lcam;)Z	b	isVillagerBaby
	m	(Lcam;)Lcjq;	c	getVisibleEntities
c	ckz	net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor
	f	Lcom/google/common/collect/ImmutableMap;	a	ACCEPTABLE_DISTANCE_FROM_HOSTILES
	m	()V	<init>	<init>
	m	(Laub;Lcam;Lcam;)Z	a	isMatchingEntity
	m	(Lcam;Lcam;)Z	a	isClose
	m	()Lcjo;	b	getMemory
	m	(Lcam;)Z	b	isHostile
	m	()V	<clinit>	<clinit>
c	cla	net/minecraft/world/entity/ai/sensing/WardenEntitySensor
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	requires
	m	(Laub;Lctw;)V	a	doTick
	m	(Lctw;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getClosest
	m	(Laub;Lcam;)V	a	doTick
	m	(Lctw;)V	a	lambda$doTick$4
	m	(Lctw;Lcam;)V	a	lambda$doTick$3
	m	(Lctw;)Ljava/util/Optional;	b	lambda$doTick$2
	m	(Lcam;)Z	a	lambda$doTick$1
	m	(Lcam;)Z	b	lambda$doTick$0
c	clb	net/minecraft/world/entity/ai/sensing/package-info
c	clc	net/minecraft/world/entity/ai/targeting/TargetingConditions
	f	Lclc;	a	DEFAULT
	f	D	b	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET
	f	Z	c	isCombat
	f	D	d	range
	f	Z	e	checkLineOfSight
	f	Z	f	testInvisible
	f	Lclc$a;	g	selector
	m	(Z)V	<init>	<init>
	m	()Lclc;	a	forCombat
	m	()Lclc;	b	forNonCombat
	m	()Lclc;	c	copy
	m	(D)Lclc;	a	range
	m	()Lclc;	d	ignoreLineOfSight
	m	()Lclc;	e	ignoreInvisibilityTesting
	m	(Lclc$a;)Lclc;	a	selector
	m	(Laub;Lcam;Lcam;)Z	a	test
	m	()V	<clinit>	<clinit>
c	clc$a	net/minecraft/world/entity/ai/targeting/TargetingConditions$Selector
	m	(Lcam;Laub;)Z	test	test
c	cld	net/minecraft/world/entity/ai/targeting/package-info
c	cle	net/minecraft/world/entity/ai/util/AirAndWaterRandomPos
	m	()V	<init>	<init>
	m	(Lcau;IIIDDD)Lfis;	a	getPos
	m	(Lcau;IIIDDDZ)Ljb;	a	generateRandomPos
	m	(Lcau;Ljb;)Z	a	lambda$generateRandomPos$1
	m	(Lcau;IIIDDDZ)Ljb;	b	lambda$getPos$0
c	clf	net/minecraft/world/entity/ai/util/AirRandomPos
	m	()V	<init>	<init>
	m	(Lcau;IIILfis;D)Lfis;	a	getPosTowards
	m	(Lcau;IIILfis;DZ)Ljb;	a	lambda$getPosTowards$0
c	clg	net/minecraft/world/entity/ai/util/DefaultRandomPos
	m	()V	<init>	<init>
	m	(Lcau;II)Lfis;	a	getPos
	m	(Lcau;IILfis;D)Lfis;	a	getPosTowards
	m	(Lcau;IILfis;)Lfis;	a	getPosAway
	m	(Lcau;IZLjb;)Ljb;	a	generateRandomPosTowardDirection
	m	(Lcau;IILfis;Z)Ljb;	a	lambda$getPosAway$2
	m	(Lcau;IILfis;DZ)Ljb;	a	lambda$getPosTowards$1
	m	(Lcau;IIZ)Ljb;	a	lambda$getPos$0
c	clh	net/minecraft/world/entity/ai/util/GoalUtils
	m	()V	<init>	<init>
	m	(Lcao;)Z	a	hasGroundPathNavigation
	m	(Lcau;I)Z	a	mobRestricted
	m	(Ljb;Lcau;)Z	a	isOutsideLimits
	m	(ZLcau;Ljb;)Z	a	isRestricted
	m	(Lcjw;Ljb;)Z	a	isNotStable
	m	(Lcau;Ljb;)Z	a	isWater
	m	(Lcau;Ljb;)Z	b	hasMalus
	m	(Lcau;Ljb;)Z	c	isSolid
c	cli	net/minecraft/world/entity/ai/util/HoverRandomPos
	m	()V	<init>	<init>
	m	(Lcau;IIDDFII)Lfis;	a	getPos
	m	(Lcau;IIDDFZII)Ljb;	a	lambda$getPos$1
	m	(Lcau;Ljb;)Z	a	lambda$getPos$0
c	clj	net/minecraft/world/entity/ai/util/LandRandomPos
	m	()V	<init>	<init>
	m	(Lcau;II)Lfis;	a	getPos
	m	(Lcau;IILjava/util/function/ToDoubleFunction;)Lfis;	a	getPos
	m	(Lcau;IILfis;)Lfis;	a	getPosTowards
	m	(Lcau;IILfis;)Lfis;	b	getPosAway
	m	(Lcau;IILfis;Z)Lfis;	a	getPosInDirection
	m	(Lcau;Ljb;)Ljb;	a	movePosUpOutOfSolid
	m	(Lcau;IZLjb;)Ljb;	a	generateRandomPosTowardDirection
	m	(Lcau;Ljb;)Z	b	lambda$movePosUpOutOfSolid$2
	m	(Lcau;IILfis;Z)Ljb;	b	lambda$getPosInDirection$1
	m	(Lcau;IIZ)Ljb;	a	lambda$getPos$0
c	clk	net/minecraft/world/entity/ai/util/RandomPos
	f	I	a	RANDOM_POS_ATTEMPTS
	m	()V	<init>	<init>
	m	(Lbck;II)Ljb;	a	generateRandomDirection
	m	(Lbck;IIIDDD)Ljb;	a	generateRandomDirectionWithinRadians
	m	(Ljb;ILjava/util/function/Predicate;)Ljb;	a	moveUpOutOfSolid
	m	(Ljb;IILjava/util/function/Predicate;)Ljb;	a	moveUpToAboveSolid
	m	(Lcau;Ljava/util/function/Supplier;)Lfis;	a	generateRandomPos
	m	(Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lfis;	a	generateRandomPos
	m	(Lcau;ILbck;Ljb;)Ljb;	a	generateRandomPosTowardDirection
c	cll	net/minecraft/world/entity/ai/util/package-info
c	clm	net/minecraft/world/entity/ai/village/ReputationEventType
	f	Lclm;	a	ZOMBIE_VILLAGER_CURED
	f	Lclm;	b	GOLEM_KILLED
	f	Lclm;	c	VILLAGER_HURT
	f	Lclm;	d	VILLAGER_KILLED
	f	Lclm;	e	TRADE
	m	(Ljava/lang/String;)Lclm;	a	register
	m	()V	<clinit>	<clinit>
c	clm$1	net/minecraft/world/entity/ai/village/ReputationEventType$1
	f	Ljava/lang/String;	f	val$name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	cln	net/minecraft/world/entity/ai/village/VillageSiege
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Z	b	hasSetupSiege
	f	Lcln$a;	c	siegeState
	f	I	d	zombiesToSpawn
	f	I	e	nextSpawnTime
	f	I	f	spawnX
	f	I	g	spawnY
	f	I	h	spawnZ
	m	()V	<init>	<init>
	m	(Laub;ZZ)V	a	tick
	m	(Laub;)Z	a	tryToSetupSiege
	m	(Laub;)V	b	trySpawn
	m	(Laub;Ljb;)Lfis;	a	findRandomSpawnPos
	m	()V	<clinit>	<clinit>
c	cln$a	net/minecraft/world/entity/ai/village/VillageSiege$State
	f	Lcln$a;	a	SIEGE_CAN_ACTIVATE
	f	Lcln$a;	b	SIEGE_TONIGHT
	f	Lcln$a;	c	SIEGE_DONE
	f	[Lcln$a;	d	$VALUES
	m	()[Lcln$a;	values	values
	m	(Ljava/lang/String;)Lcln$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcln$a;	a	$values
	m	()V	<clinit>	<clinit>
c	clo	net/minecraft/world/entity/ai/village/package-info
c	clp	net/minecraft/world/entity/ai/village/poi/PoiManager
	f	I	a	MAX_VILLAGE_DISTANCE
	f	I	b	VILLAGE_SECTION_SIZE
	f	Lclp$a;	d	distanceTracker
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	loadedChunks
	m	(Lehr;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLjz;Lehg;Ldmw;)V	<init>	<init>
	m	(Ljb;Ljl;)V	a	add
	m	(Ljb;)V	a	remove
	m	(Ljava/util/function/Predicate;Ljb;ILclp$b;)J	a	getCountInRange
	m	(Lamd;Ljb;)Z	a	existsAtPosition
	m	(Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/stream/Stream;	b	getInSquare
	m	(Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/stream/Stream;	c	getInRange
	m	(Ljava/util/function/Predicate;Ldlz;Lclp$b;)Ljava/util/stream/Stream;	a	getInChunk
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/stream/Stream;	a	findAll
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/stream/Stream;	b	findAllWithType
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/stream/Stream;	c	findAllClosestFirstWithType
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/Optional;	d	find
	m	(Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/Optional;	d	findClosest
	m	(Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/Optional;	e	findClosestWithType
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Ljb;ILclp$b;)Ljava/util/Optional;	e	findClosest
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Ljb;I)Ljava/util/Optional;	a	take
	m	(Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lclp$b;Ljb;ILbck;)Ljava/util/Optional;	a	getRandom
	m	(Ljb;)Z	b	release
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	exists
	m	(Ljb;)Ljava/util/Optional;	c	getType
	m	(Ljb;)I	d	getFreeTickets
	m	(Lke;)I	a	sectionsToVillage
	m	(J)Z	g	isVillageCenter
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	(J)V	a	setDirty
	m	(J)V	b	onSectionLoad
	m	(Lke;Legj;)V	a	checkConsistencyWithBlocks
	m	(Legj;)Z	a	mayHavePoi
	m	(Legj;Lke;Ljava/util/function/BiConsumer;)V	a	updateFromSection
	m	(Ldmx;Ljb;I)V	a	ensureLoadedAndValid
	m	(Ldmx;Ldlz;)V	a	lambda$ensureLoadedAndValid$33
	m	(Ldlz;)Z	c	lambda$ensureLoadedAndValid$32
	m	(Lcom/mojang/datafixers/util/Pair;)Ldlz;	a	lambda$ensureLoadedAndValid$31
	m	(Lcom/mojang/datafixers/util/Pair;)Z	b	lambda$ensureLoadedAndValid$30
	m	(Lke;)Lcom/mojang/datafixers/util/Pair;	b	lambda$ensureLoadedAndValid$29
	m	(Legj;Ljava/util/function/BiConsumer;Ljb;)V	a	lambda$updateFromSection$28
	m	(Ljava/util/function/BiConsumer;Ljb;Ljl;)V	a	lambda$updateFromSection$27
	m	(Legj;Lke;)V	a	lambda$checkConsistencyWithBlocks$26
	m	(Legj;Lke;Lclr;)V	a	lambda$checkConsistencyWithBlocks$25
	m	(Legj;Lke;Ljava/util/function/BiConsumer;)V	b	lambda$checkConsistencyWithBlocks$24
	m	(Lclr;)Ljava/lang/Boolean;	a	lambda$isVillageCenter$23
	m	(Ljl;)Z	a	lambda$isVillageCenter$22
	m	(Ljb;Lclr;)Ljava/lang/Integer;	a	lambda$getFreeTickets$21
	m	(Ljb;Lclr;)Ljava/util/Optional;	b	lambda$getType$20
	m	(Ljb;Ljava/util/function/Predicate;Lclr;)Ljava/lang/Boolean;	a	lambda$exists$19
	m	(Ljb;)Ljava/lang/IllegalStateException;	e	lambda$release$18
	m	(Ljb;Lclr;)Ljava/lang/Boolean;	c	lambda$release$17
	m	(Ljava/util/function/Predicate;Lclq;)Z	a	lambda$getRandom$16
	m	(Lclq;)Ljb;	a	lambda$take$15
	m	(Ljava/util/function/BiPredicate;Lclq;)Z	a	lambda$take$14
	m	(Ljb;Ljb;)D	a	lambda$findClosest$13
	m	(Lclq;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findClosestWithType$12
	m	(Ljb;Lclq;)D	a	lambda$findClosestWithType$11
	m	(Ljb;Ljb;)D	b	lambda$findClosest$10
	m	(Ljb;Lcom/mojang/datafixers/util/Pair;)D	a	lambda$findAllClosestFirstWithType$9
	m	(Lclq;)Lcom/mojang/datafixers/util/Pair;	c	lambda$findAllWithType$8
	m	(Ljava/util/function/Predicate;Lclq;)Z	b	lambda$findAllWithType$7
	m	(Ljava/util/function/Predicate;Lclp$b;Ljava/util/Optional;)Ljava/util/stream/Stream;	a	lambda$getInChunk$6
	m	(Ldlz;Ljava/lang/Integer;)Ljava/util/Optional;	a	lambda$getInChunk$5
	m	(Ljb;ILclq;)Z	a	lambda$getInRange$4
	m	(Ljb;ILclq;)Z	b	lambda$getInSquare$3
	m	(Ljava/util/function/Predicate;Lclp$b;Ldlz;)Ljava/util/stream/Stream;	a	lambda$getInSquare$2
	m	(Lamd;Ljl;)Z	a	lambda$existsAtPosition$1
	m	(Ljb;Lclr;)V	d	lambda$remove$0
c	clp$a	net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	levels
	f	Lclp;	a	this$0
	m	(Lclp;)V	<init>	<init>
	m	(J)I	b	getLevelFromSource
	m	(J)I	c	getLevel
	m	(JI)V	a	setLevel
	m	()V	a	runAllUpdates
c	clp$b	net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy
	f	Lclp$b;	a	HAS_SPACE
	f	Lclp$b;	b	IS_OCCUPIED
	f	Lclp$b;	c	ANY
	f	Ljava/util/function/Predicate;	d	test
	f	[Lclp$b;	e	$VALUES
	m	()[Lclp$b;	values	values
	m	(Ljava/lang/String;)Lclp$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
	m	()Ljava/util/function/Predicate;	a	getTest
	m	(Lclq;)Z	a	lambda$static$0
	m	()[Lclp$b;	b	$values
	m	()V	<clinit>	<clinit>
c	clq	net/minecraft/world/entity/ai/village/poi/PoiRecord
	f	Ljb;	a	pos
	f	Ljl;	b	poiType
	f	I	c	freeTickets
	f	Ljava/lang/Runnable;	d	setDirty
	m	(Ljb;Ljl;ILjava/lang/Runnable;)V	<init>	<init>
	m	(Ljb;Ljl;Ljava/lang/Runnable;)V	<init>	<init>
	m	()Lclq$a;	a	pack
	m	()I	b	getFreeTickets
	m	()Z	c	acquireTicket
	m	()Z	d	releaseTicket
	m	()Z	e	hasSpace
	m	()Z	f	isOccupied
	m	()Ljb;	g	getPos
	m	()Ljl;	h	getPoiType
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
c	clq$a	net/minecraft/world/entity/ai/village/poi/PoiRecord$Packed
	f	Ljb;	b	pos
	f	Ljl;	c	poiType
	f	I	d	freeTickets
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljb;Ljl;I)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Lclq;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ljl;	b	poiType
	m	()I	c	freeTickets
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	clr	net/minecraft/world/entity/ai/village/poi/PoiSection
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	b	records
	f	Ljava/util/Map;	c	byType
	f	Ljava/lang/Runnable;	d	setDirty
	f	Z	e	isValid
	m	(Ljava/lang/Runnable;)V	<init>	<init>
	m	(Ljava/lang/Runnable;ZLjava/util/List;)V	<init>	<init>
	m	()Lclr$a;	a	pack
	m	(Ljava/util/function/Predicate;Lclp$b;)Ljava/util/stream/Stream;	a	getRecords
	m	(Ljb;Ljl;)V	a	add
	m	(Lclq;)Z	a	add
	m	(Ljb;)V	a	remove
	m	(Ljb;)I	b	getFreeTickets
	m	(Ljb;)Z	c	release
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	exists
	m	(Ljb;)Ljava/util/Optional;	d	getType
	m	(Ljb;)Ljava/util/Optional;	e	getPoiRecord
	m	(Ljava/util/function/Consumer;)V	a	refresh
	m	()V	c	clear
	m	()Z	b	isValid
	m	(Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Ljb;Ljl;)V	a	lambda$refresh$4
	m	(Ljb;Ljl;S)Lclq;	a	lambda$refresh$3
	m	(Ljl;)Ljava/util/Set;	a	lambda$add$2
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$getRecords$1
	m	(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z	a	lambda$getRecords$0
	m	()V	<clinit>	<clinit>
c	clr$a	net/minecraft/world/entity/ai/village/poi/PoiSection$Packed
	f	Z	b	isValid
	f	Ljava/util/List;	c	records
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ZLjava/util/List;)V	<init>	<init>
	m	(Ljava/lang/Runnable;)Lclr;	a	unpack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	isValid
	m	()Ljava/util/List;	b	records
	m	(Ljava/lang/Runnable;Lclq$a;)Lclq;	a	lambda$unpack$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cls	net/minecraft/world/entity/ai/village/poi/PoiType
	f	Ljava/util/Set;	b	matchingStates
	f	I	c	maxTickets
	f	I	d	validRange
	f	Ljava/util/function/Predicate;	a	NONE
	m	(Ljava/util/Set;II)V	<init>	<init>
	m	(Leeb;)Z	a	is
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Set;	a	matchingStates
	m	()I	b	maxTickets
	m	()I	c	validRange
	m	(Ljl;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	clt	net/minecraft/world/entity/ai/village/poi/PoiTypes
	f	Lamd;	a	ARMORER
	f	Lamd;	b	BUTCHER
	f	Lamd;	c	CARTOGRAPHER
	f	Lamd;	d	CLERIC
	f	Lamd;	e	FARMER
	f	Lamd;	f	FISHERMAN
	f	Lamd;	g	FLETCHER
	f	Lamd;	h	LEATHERWORKER
	f	Lamd;	i	LIBRARIAN
	f	Lamd;	j	MASON
	f	Lamd;	k	SHEPHERD
	f	Lamd;	l	TOOLSMITH
	f	Lamd;	m	WEAPONSMITH
	f	Lamd;	n	HOME
	f	Lamd;	o	MEETING
	f	Lamd;	p	BEEHIVE
	f	Lamd;	q	BEE_NEST
	f	Lamd;	r	NETHER_PORTAL
	f	Lamd;	s	LODESTONE
	f	Lamd;	t	LIGHTNING_ROD
	f	Lamd;	u	TEST_INSTANCE
	f	Ljava/util/Set;	v	BEDS
	f	Ljava/util/Set;	w	CAULDRONS
	f	Ljava/util/Map;	x	TYPE_BY_STATE
	m	()V	<init>	<init>
	m	(Ldpz;)Ljava/util/Set;	a	getBlockStates
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljy;Lamd;Ljava/util/Set;II)Lcls;	a	register
	m	(Ljl;Ljava/util/Set;)V	a	registerBlockStates
	m	(Leeb;)Ljava/util/Optional;	a	forState
	m	(Leeb;)Z	b	hasPoi
	m	(Ljy;)Lcls;	a	bootstrap
	m	(Ljl;Leeb;)V	a	lambda$registerBlockStates$3
	m	(Ldpz;)Ljava/util/stream/Stream;	b	lambda$static$2
	m	(Leeb;)Z	c	lambda$static$1
	m	(Ldpz;)Ljava/util/stream/Stream;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	clu	net/minecraft/world/entity/ai/village/poi/package-info
c	clv	net/minecraft/world/entity/ambient/AmbientCreature
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	v	canBeLeashed
c	clw	net/minecraft/world/entity/ambient/Bat
	f	F	a	FLAP_LENGTH_SECONDS
	f	F	b	TICKS_PER_FLAP
	f	Lalh;	e	DATA_ID_FLAGS
	f	I	f	FLAG_RESTING
	f	Lclc;	cj	BAT_RESTING_TARGETING
	f	B	ck	DEFAULT_FLAGS
	f	Lbzd;	c	flyAnimationState
	f	Lbzd;	d	restAnimationState
	f	Ljb;	cl	targetPosition
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	bd	isFlapping
	m	(Lall$a;)V	a	defineSynchedData
	m	()F	fk	getSoundVolume
	m	()F	fl	getVoicePitch
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Z	bL	isPushable
	m	(Lbzm;)V	E	doPush
	m	()V	o	pushEntities
	m	()Lcbr$a;	l	createAttributes
	m	()Z	m	isResting
	m	(Z)V	x	setResting
	m	()V	g	tick
	m	(Laub;)V	a	customServerAiStep
	m	()Lbzm$d;	bj	getMovementEmission
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	n_	isIgnoringBlockTriggers
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkBatSpawnRules
	m	()Z	n	isHalloween
	m	()V	t	setupAnimationStates
	m	()V	<clinit>	<clinit>
c	clx	net/minecraft/world/entity/ambient/package-info
c	cly	net/minecraft/world/entity/animal/AbstractCow
	f	Lbzp;	ck	BABY_DIMENSIONS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Ldcv;)Z	i	isFood
	m	()Lcbr$a;	m	createAttributes
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()F	fk	getSoundVolume
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	clz	net/minecraft/world/entity/animal/AbstractFish
	f	Lalh;	a	FROM_BUCKET
	f	Z	b	DEFAULT_FROM_BUCKET
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	()Z	af	requiresCustomPersistence
	m	(D)Z	h	removeWhenFarAway
	m	()I	gk	getMaxSpawnClusterSize
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	m	fromBucket
	m	(Z)V	x	setFromBucket
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	H	registerGoals
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Lfis;)V	k	travel
	m	()V	e_	aiStep
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldcv;)V	a_	saveToBucketTag
	m	(Lui;)V	a	loadFromBucketTag
	m	()Layy;	n	getPickupSound
	m	()Z	t	canRandomSwim
	m	()Layy;	gH	getFlopSound
	m	()Layy;	aY	getSwimSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	<clinit>	<clinit>
c	clz$a	net/minecraft/world/entity/animal/AbstractFish$FishMoveControl
	f	Lclz;	l	fish
	m	(Lclz;)V	<init>	<init>
	m	()V	a	tick
c	clz$b	net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal
	f	Lclz;	i	fish
	m	(Lclz;)V	<init>	<init>
	m	()Z	b	canUse
c	cma	net/minecraft/world/entity/animal/AbstractGolem
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()I	W	getAmbientSoundInterval
	m	(D)Z	h	removeWhenFarAway
c	cmb	net/minecraft/world/entity/animal/AbstractSchoolingFish
	f	Lcmb;	a	leader
	f	I	b	schoolSize
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()I	gk	getMaxSpawnClusterSize
	m	()I	gI	getMaxSchoolSize
	m	()Z	t	canRandomSwim
	m	()Z	gJ	isFollower
	m	(Lcmb;)Lcmb;	a	startFollowing
	m	()V	gK	stopFollowing
	m	()V	gP	addFollower
	m	()V	gQ	removeFollower
	m	()Z	gL	canBeFollowed
	m	()V	g	tick
	m	()Z	gM	hasFollowers
	m	()Z	gN	inRangeOfLeader
	m	()V	gO	pathToLeader
	m	(Ljava/util/stream/Stream;)V	a	addFollowers
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcmb;)V	b	lambda$addFollowers$1
	m	(Lcmb;)Z	c	lambda$addFollowers$0
c	cmb$a	net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData
	f	Lcmb;	a	leader
	m	(Lcmb;)V	<init>	<init>
c	cmc	net/minecraft/world/entity/animal/AgeableWaterCreature
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()I	W	getAmbientSoundInterval
	m	(Laub;)I	e	getBaseExperienceReward
	m	(I)V	r	handleAirSupply
	m	()V	az	baseTick
	m	()Z	cN	isPushedByFluid
	m	()Z	v	canBeLeashed
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkSurfaceAgeableWaterCreatureSpawnRules
c	cmd	net/minecraft/world/entity/animal/Animal
	f	I	cn	PARENT_AGE_AFTER_BREEDING
	f	I	ck	DEFAULT_IN_LOVE_TIME
	f	I	cl	inLove
	f	Lbzs;	cm	loveCause
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	gM	createAnimalAttributes
	m	(Laub;)V	a	customServerAiStep
	m	()V	e_	aiStep
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkAnimalSpawnRules
	m	(Ldlv;Ljb;)Z	a	isBrightEnoughToSpawn
	m	()I	W	getAmbientSoundInterval
	m	(D)Z	h	removeWhenFarAway
	m	(Laub;)I	e	getBaseExperienceReward
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	gN	playEatingSound
	m	(Lcut;Lbxi;Ldcv;)V	a	usePlayerItem
	m	()Z	gO	canFallInLove
	m	(Lcut;)V	h	setInLove
	m	(I)V	r	setInLoveTime
	m	()I	gP	getInLoveTime
	m	()Lauc;	gQ	getLoveCause
	m	()Z	gR	isInLove
	m	()V	gS	resetLove
	m	(Lcmd;)Z	a	canMate
	m	(Laub;Lcmd;)V	a	spawnChildFromBreeding
	m	(Laub;Lcmd;Lbzc;)V	a	finalizeSpawnChildFromBreeding
	m	(B)V	b	handleEntityEvent
	m	(Lcmd;Lbzc;Lauc;)V	a	lambda$finalizeSpawnChildFromBreeding$1
	m	(Lcmd;)Ljava/util/Optional;	b	lambda$finalizeSpawnChildFromBreeding$0
c	cme	net/minecraft/world/entity/animal/Bee
	f	F	ck	FLAP_DEGREES_PER_TICK
	f	I	cl	TICKS_PER_FLAP
	f	Lalh;	cv	DATA_FLAGS_ID
	f	Lalh;	cw	DATA_REMAINING_ANGER_TIME
	f	I	cx	FLAG_ROLL
	f	I	cy	FLAG_HAS_STUNG
	f	I	cz	FLAG_HAS_NECTAR
	f	I	cA	STING_DEATH_COUNTDOWN
	f	I	cB	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER
	f	I	cC	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME
	f	I	cD	MIN_ATTACK_DIST
	f	I	cE	MAX_CROPS_GROWABLE
	f	I	cF	POISON_SECONDS_NORMAL
	f	I	cG	POISON_SECONDS_HARD
	f	I	cH	TOO_FAR_DISTANCE
	f	I	cI	HIVE_CLOSE_ENOUGH_DISTANCE
	f	I	cJ	RESTRICTED_WANDER_DISTANCE_REDUCTION
	f	I	cM	DEFAULT_WANDER_DISTANCE_REDUCTION
	f	I	cN	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN
	f	I	cO	HIVE_SEARCH_DISTANCE
	f	Ljava/lang/String;	cm	TAG_CROPS_GROWN_SINCE_POLLINATION
	f	Ljava/lang/String;	co	TAG_CANNOT_ENTER_HIVE_TICKS
	f	Ljava/lang/String;	cp	TAG_TICKS_SINCE_POLLINATION
	f	Ljava/lang/String;	cq	TAG_HAS_STUNG
	f	Ljava/lang/String;	cr	TAG_HAS_NECTAR
	f	Ljava/lang/String;	cs	TAG_FLOWER_POS
	f	Ljava/lang/String;	ct	TAG_HIVE_POS
	f	Z	cu	DEFAULT_HAS_NECTAR
	f	Z	cP	DEFAULT_HAS_STUNG
	f	I	cQ	DEFAULT_TICKS_SINCE_POLLINATION
	f	I	cR	DEFAULT_CANNOT_ENTER_HIVE_TICKS
	f	I	cS	DEFAULT_CROPS_GROWN_SINCE_POLLINATION
	f	Lbwu;	cT	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cU	persistentAngerTarget
	f	F	cV	rollAmount
	f	F	cW	rollAmountO
	f	I	cX	timeSinceSting
	f	I	cY	ticksWithoutNectarSinceExitingHive
	f	I	cZ	stayOutOfHiveCountdown
	f	I	da	numCropsGrownSincePollination
	f	I	db	COOLDOWN_BEFORE_LOCATING_NEW_HIVE
	f	I	dc	remainingCooldownBeforeLocatingNewHive
	f	I	dd	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER
	f	I	de	MIN_FIND_FLOWER_RETRY_COOLDOWN
	f	I	df	MAX_FIND_FLOWER_RETRY_COOLDOWN
	f	I	dg	remainingCooldownBeforeLocatingNewFlower
	f	Ljb;	dh	savedFlowerPos
	f	Ljb;	di	hivePos
	f	Lcme$k;	dj	beePollinateGoal
	f	Lcme$e;	dk	goToHiveGoal
	f	Lcme$f;	dl	goToKnownFlowerGoal
	f	I	dm	underWaterTicks
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()V	H	registerGoals
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()V	g	tick
	m	(Ldmu;DDDDDLmc;)V	a	spawnFluidParticle
	m	(Ljb;)V	j	pathfindRandomlyTowards
	m	()Ljb;	m	getSavedFlowerPos
	m	()Z	n	hasSavedFlowerPos
	m	(Ljb;)V	h	setSavedFlowerPos
	m	()I	t	getTravellingTicks
	m	()Ljava/util/List;	gH	getBlacklistedHives
	m	()Z	gY	isTiredOfLookingForNectar
	m	()V	gZ	dropHive
	m	()V	ha	dropFlower
	m	()Z	hb	wantsToEnterHive
	m	(Ldmu;)Z	c	isNightOrRaining
	m	(I)V	s	setStayOutOfHiveCountdown
	m	(F)F	J	getRollAmount
	m	()V	hc	updateRollAmount
	m	(Laub;)V	a	customServerAiStep
	m	()V	gI	resetTicksWithoutNectarSinceExitingHive
	m	()Z	hd	isHiveNearFire
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()V	c	startPersistentAngerTimer
	m	(Ljb;)Z	k	doesHiveHaveSpace
	m	()Z	gJ	hasHive
	m	()Ljb;	gK	getHivePos
	m	()Lchj;	gL	getGoalSelector
	m	()V	ah	sendDebugPackets
	m	()I	he	getCropsGrownSincePollination
	m	()V	hf	resetNumCropsGrownSincePollination
	m	()V	hg	incrementNumCropsGrownSincePollination
	m	()V	e_	aiStep
	m	()Leaw;	hh	getBeehiveBlockEntity
	m	()Z	hi	isHiveValid
	m	()Z	gT	hasNectar
	m	(Z)V	x	setHasNectar
	m	()Z	gU	hasStung
	m	(Z)V	y	setHasStung
	m	()Z	hj	isRolling
	m	(Z)V	z	setRolling
	m	(Ljb;)Z	l	isTooFarAway
	m	(IZ)V	d	setFlag
	m	(I)Z	t	getFlag
	m	()Lcbr$a;	gV	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldcv;)Z	i	isFood
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	fk	getSoundVolume
	m	(Laub;Lbzc;)Lcme;	b	getBreedOffspring
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	bd	isFlapping
	m	()Z	gW	isFlying
	m	()V	gX	dropOffNectar
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbae;)V	c	jumpInLiquid
	m	()Lfis;	F	getLeashOffset
	m	(Ljb;I)Z	b	closerThan
	m	(Ljb;)V	i	setHivePos
	m	(Leeb;)Z	c	attractsBees
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	(Lcme;)Lcjw;	a	access$000
	m	(Lcme;)Lbck;	b	access$100
	m	(Lcme;)Lcjw;	c	access$200
	m	(Lcme;)Lcjw;	d	access$300
	m	(Lcme;)Lcjw;	e	access$400
	m	(Lcme;)Lcjw;	f	access$500
	m	(Lcme;)Lcjw;	g	access$600
	m	(Lcme;)Lcjw;	h	access$700
	m	(Lcme;)Lcjw;	i	access$800
	m	(Lcme;)Lcjw;	j	access$900
	m	(Lcme;)Lcjw;	k	access$1000
	m	(Lcme;)Lcjw;	l	access$1100
	m	(Lcme;)Lcjw;	m	access$1200
	m	(Lcme;)Lcjw;	n	access$1300
	m	(Lcme;)Lcjw;	o	access$1400
	m	(Lcme;)Lcjw;	p	access$1500
	m	(Lcme;)Lcjw;	q	access$1600
	m	(Lcme;)Lcjw;	r	access$1700
	m	(Lcme;)Lcjw;	s	access$1800
	m	(Lcme;)Lbck;	t	access$1900
	m	(Lcme;)Lbck;	u	access$2000
	m	(Lcme;)Lcjw;	v	access$2100
	m	(Lcme;)Lbck;	w	access$2200
	m	(Lcme;)Lcjw;	x	access$2300
	m	(Lcme;)Lbck;	y	access$2400
	m	(Lcme;)Lbck;	z	access$2500
	m	(Lcme;)Lcjw;	A	access$2600
	m	(Lcme;)Lbck;	B	access$2700
	m	(Lcme;)Lbck;	C	access$2800
	m	(Lcme;)Lbck;	D	access$2900
	m	(Lcme;)Lbck;	E	access$3000
	m	(Lcme;)Lbck;	F	access$3100
	m	()V	<clinit>	<clinit>
c	cme$1	net/minecraft/world/entity/animal/Bee$1
	f	Lcme;	p	this$0
	m	(Lcme;Lcao;Ldmu;)V	<init>	<init>
	m	(Ljb;)Z	a	isStableDestination
	m	()V	d	tick
c	cme$a	net/minecraft/world/entity/animal/Bee$BaseBeeGoal
	f	Lcme;	a	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cme$b	net/minecraft/world/entity/animal/Bee$BeeAttackGoal
	f	Lcme;	b	this$0
	m	(Lcme;Lcau;DZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cme$c	net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal
	m	(Lcme;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	i	beeCanTarget
c	cme$d	net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	d	start
c	cme$e	net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal
	f	I	b	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
	f	I	e	MAX_BLACKLISTED_TARGETS
	f	Ljava/util/List;	f	blacklistedTargets
	f	Lfaz;	g	lastPath
	f	I	h	TICKS_BEFORE_HIVE_DROP
	f	I	i	ticksStuck
	f	Lcme;	c	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Ljb;)Z	a	pathfindDirectlyTowards
	m	(Ljb;)Z	b	isTargetBlacklisted
	m	(Ljb;)V	c	blacklistTarget
	m	()V	k	clearBlacklist
	m	()V	l	dropAndBlacklistHive
	m	(Ljb;)Z	d	hasReachedTarget
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
c	cme$f	net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal
	f	I	c	MAX_TRAVELLING_TICKS
	f	I	d	travellingTicks
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()Z	k	wantsToGoToKnownFlower
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
c	cme$g	net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal
	f	I	b	GROW_CHANCE
	f	Lcme;	c	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	a	tick
c	cme$h	net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal
	f	Lcme;	a	this$0
	m	(Lcme;Lcme;)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	(Lcao;Lcam;)V	a	alertOther
c	cme$i	net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()V	d	start
	m	()Ljava/util/List;	k	findNearbyHivesWithSpace
	m	(Ljb;Ljb;)D	a	lambda$findNearbyHivesWithSpace$1
	m	(Ljl;)Z	a	lambda$findNearbyHivesWithSpace$0
c	cme$j	net/minecraft/world/entity/animal/Bee$BeeLookControl
	f	Lcme;	h	this$0
	m	(Lcme;Lcao;)V	<init>	<init>
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
c	cme$k	net/minecraft/world/entity/animal/Bee$BeePollinateGoal
	f	I	c	MIN_POLLINATION_TICKS
	f	D	d	ARRIVAL_THRESHOLD
	f	I	e	POSITION_CHANGE_CHANCE
	f	F	f	SPEED_MODIFIER
	f	F	g	HOVER_HEIGHT_WITHIN_FLOWER
	f	F	h	HOVER_POS_OFFSET
	f	I	i	FLOWER_SEARCH_RADIUS
	f	I	j	successfulPollinatingTicks
	f	I	k	lastSoundPlayedTick
	f	Z	l	pollinating
	f	Lfis;	m	hoverPos
	f	I	n	pollinatingTicks
	f	I	o	MAX_POLLINATING_TICKS
	f	Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;	p	unreachableFlowerCache
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	()Z	k	hasPollinatedLongEnough
	m	()Z	l	isPollinating
	m	()V	m	stopPollinating
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()V	n	setWantedPos
	m	()F	o	getOffset
	m	()Ljava/util/Optional;	p	findNearbyFlower
c	cme$l	net/minecraft/world/entity/animal/Bee$BeeWanderGoal
	f	Lcme;	a	this$0
	m	(Lcme;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Lfis;	h	findPos
	m	()I	i	getWanderThreshold
c	cme$m	net/minecraft/world/entity/animal/Bee$ValidateFlowerGoal
	f	I	c	validateFlowerCooldown
	f	J	d	lastValidateTick
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()V	d	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
	m	(Ljb;)Z	a	isFlower
c	cme$n	net/minecraft/world/entity/animal/Bee$ValidateHiveGoal
	f	I	c	VALIDATE_HIVE_COOLDOWN
	f	J	d	lastValidateTick
	f	Lcme;	b	this$0
	m	(Lcme;)V	<init>	<init>
	m	()V	d	start
	m	()Z	h	canBeeUse
	m	()Z	i	canBeeContinueToUse
c	cmf	net/minecraft/world/entity/animal/Bucketable
	m	()Z	m	fromBucket
	m	(Z)V	x	setFromBucket
	m	(Ldcv;)V	a_	saveToBucketTag
	m	(Lui;)V	a	loadFromBucketTag
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	n	getPickupSound
	m	(Lcao;Ldcv;)V	a	saveDefaultDataToBucketTag
	m	(Lcao;Lui;)V	a	loadDefaultDataFromBucketTag
	m	(Lcut;Lbxi;Lcam;)Ljava/util/Optional;	a	bucketMobPickup
	m	(Lcao;Lui;)V	b	lambda$saveDefaultDataToBucketTag$0
c	cmg	net/minecraft/world/entity/animal/Cat
	f	D	co	TEMPT_SPEED_MOD
	f	D	cp	WALK_SPEED_MOD
	f	D	cq	SPRINT_SPEED_MOD
	f	Lalh;	cr	DATA_VARIANT_ID
	f	Lalh;	cs	IS_LYING
	f	Lalh;	ct	RELAX_STATE_ONE
	f	Lalh;	cu	DATA_COLLAR_COLOR
	f	Lamd;	cv	DEFAULT_VARIANT
	f	Ldbt;	cw	DEFAULT_COLLAR_COLOR
	f	Lcmg$a;	cx	avoidPlayersGoal
	f	Lciq;	cy	temptGoal
	f	F	cz	lieDownAmount
	f	F	cA	lieDownAmountO
	f	F	cB	lieDownAmountTail
	f	F	cC	lieDownAmountOTail
	f	Z	cD	isLyingOnTopOfSleepingPlayer
	f	F	cE	relaxStateOneAmount
	f	F	cF	relaxStateOneAmountO
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Ljl;	gT	getVariant
	m	(Ljl;)V	b	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Z)V	A	setLying
	m	()Z	gU	isLying
	m	(Z)V	B	setRelaxStateOne
	m	()Z	ha	isRelaxStateOne
	m	()Ldbt;	gV	getCollarColor
	m	(Ldbt;)V	a	setCollarColor
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;)V	a	customServerAiStep
	m	()Layy;	p	getAmbientSound
	m	()I	W	getAmbientSoundInterval
	m	()V	gW	hiss
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Lcbr$a;	gX	createAttributes
	m	()V	gN	playEatingSound
	m	()V	g	tick
	m	()V	hb	handleLieDown
	m	()Z	gY	isLyingOnTopOfSleepingPlayer
	m	()V	hc	updateLieDownAmount
	m	()V	hd	updateRelaxStateOneAmount
	m	(F)F	J	getLieDownAmount
	m	(F)F	K	getLieDownAmountTail
	m	(F)F	L	getRelaxStateOneAmount
	m	(Laub;Lbzc;)Lcmg;	b	getBreedOffspring
	m	(Lcmd;)Z	a	canMate
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldcv;)Z	i	isFood
	m	(D)Z	h	removeWhenFarAway
	m	(ZZ)V	a	setTame
	m	()V	gZ	reassessTameGoals
	m	(Lcut;)V	i	tryToTame
	m	()Z	ch	isSteppingCarefully
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cmg$a	net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal
	f	Lcmg;	i	cat
	m	(Lcmg;Ljava/lang/Class;FDD)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cmg$b	net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal
	f	Lcmg;	a	cat
	f	Lcut;	b	ownerPlayer
	f	Ljb;	c	goalPos
	f	I	d	onBedTicks
	m	(Lcmg;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	spaceIsOccupied
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	i	giveMorningGift
	m	()V	a	tick
	m	(Ljb$a;Laub;Ldcv;)V	a	lambda$giveMorningGift$2
	m	(Ljb;)Ljb;	a	lambda$canUse$1
	m	(Ljb;Ljh;)Ljb;	a	lambda$canUse$0
c	cmg$c	net/minecraft/world/entity/animal/Cat$CatTemptGoal
	f	Lcut;	d	selectedPlayer
	f	Lcmg;	e	cat
	m	(Lcmg;DLjava/util/function/Predicate;Z)V	<init>	<init>
	m	()V	a	tick
	m	()Z	h	canScare
	m	()Z	b	canUse
c	cmh	net/minecraft/world/entity/animal/CatVariant
	f	Ljc;	e	assetInfo
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljc;)V	<init>	<init>
	m	(Ljc;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljc;	b	assetInfo
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cmi	net/minecraft/world/entity/animal/CatVariants
	f	Lamd;	a	TABBY
	f	Lamd;	b	BLACK
	f	Lamd;	c	RED
	f	Lamd;	d	SIAMESE
	f	Lamd;	e	BRITISH_SHORTHAIR
	f	Lamd;	f	CALICO
	f	Lamd;	g	PERSIAN
	f	Lamd;	h	RAGDOLL
	f	Lamd;	i	WHITE
	f	Lamd;	j	JELLIE
	f	Lamd;	k	ALL_BLACK
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Ljava/lang/String;)V	a	registerForAnyConditions
	m	(Lqq;Lamd;Ljava/lang/String;Lcxa;)V	a	register
	m	()V	<clinit>	<clinit>
c	cmj	net/minecraft/world/entity/animal/Chicken
	f	Lbzp;	cs	BABY_DIMENSIONS
	f	Lalh;	ct	DATA_VARIANT_ID
	f	Z	cu	DEFAULT_CHICKEN_JOCKEY
	f	F	ck	flap
	f	F	cl	flapSpeed
	f	F	cm	oFlapSpeed
	f	F	co	oFlap
	f	F	cp	flapping
	f	F	cv	nextFlap
	f	I	cq	eggTime
	f	Z	cr	isChickenJockey
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Lcbr$a;	m	createAttributes
	m	()V	e_	aiStep
	m	()Z	bd	isFlapping
	m	()V	bc	onFlap
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Laub;Lbzc;)Lcmj;	b	getBreedOffspring
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Ldcv;)Z	i	isFood
	m	(Laub;)I	e	getBaseExperienceReward
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Ljl;)V	b	setVariant
	m	()Ljl;	n	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(D)Z	h	removeWhenFarAway
	m	(Lbzm;Lbzm$b;)V	a	positionRider
	m	()Z	t	isChickenJockey
	m	(Z)V	x	setChickenJockey
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ljava/lang/Integer;)V	a	lambda$readAdditionalSaveData$1
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cmk	net/minecraft/world/entity/animal/ChickenVariant
	f	Lcwu;	e	modelAndTexture
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lcwu;)V	<init>	<init>
	m	(Lcwu;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcwu;	b	modelAndTexture
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cmk$a	net/minecraft/world/entity/animal/ChickenVariant$ModelType
	f	Lcmk$a;	a	NORMAL
	f	Lcmk$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lcmk$a;	e	$VALUES
	m	()[Lcmk$a;	values	values
	m	(Ljava/lang/String;)Lcmk$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcmk$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cml	net/minecraft/world/entity/animal/ChickenVariants
	f	Lamd;	a	TEMPERATE
	f	Lamd;	b	WARM
	f	Lamd;	c	COLD
	f	Lamd;	d	DEFAULT
	m	()V	<init>	<init>
	m	(Lame;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Lcmk$a;Ljava/lang/String;Lbae;)V	a	register
	m	(Lqq;Lamd;Lcmk$a;Ljava/lang/String;Lcxa;)V	a	register
	m	()V	<clinit>	<clinit>
c	cmm	net/minecraft/world/entity/animal/Cod
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	gH	getFlopSound
c	cmn	net/minecraft/world/entity/animal/Cow
	f	Lalh;	ck	DATA_VARIANT_ID
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbzc;)Lcmn;	b	getBreedOffspring
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Ljl;)V	b	setVariant
	m	()Ljl;	n	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()V	<clinit>	<clinit>
c	cmo	net/minecraft/world/entity/animal/CowVariant
	f	Lcwu;	e	modelAndTexture
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lcwu;)V	<init>	<init>
	m	(Lcwu;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcwu;	b	modelAndTexture
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cmo$a	net/minecraft/world/entity/animal/CowVariant$ModelType
	f	Lcmo$a;	a	NORMAL
	f	Lcmo$a;	b	COLD
	f	Lcmo$a;	c	WARM
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lcmo$a;	f	$VALUES
	m	()[Lcmo$a;	values	values
	m	(Ljava/lang/String;)Lcmo$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcmo$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cmp	net/minecraft/world/entity/animal/CowVariants
	f	Lamd;	a	TEMPERATE
	f	Lamd;	b	WARM
	f	Lamd;	c	COLD
	f	Lamd;	d	DEFAULT
	m	()V	<init>	<init>
	m	(Lame;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Lcmo$a;Ljava/lang/String;Lbae;)V	a	register
	m	(Lqq;Lamd;Lcmo$a;Ljava/lang/String;Lcxa;)V	a	register
	m	()V	<clinit>	<clinit>
c	cmq	net/minecraft/world/entity/animal/Dolphin
	f	Lalh;	cn	GOT_FISH
	f	Lalh;	co	MOISTNESS_LEVEL
	f	Lclc;	cp	SWIM_WITH_PLAYER_TARGETING
	f	I	ck	TOTAL_AIR_SUPPLY
	f	I	cq	TOTAL_MOISTNESS_LEVEL
	f	Ljava/util/function/Predicate;	cl	ALLOWED_ITEMS
	f	F	cm	BABY_SCALE
	f	Z	cr	DEFAULT_GOT_FISH
	f	Ljb;	cs	treasurePos
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzc;)Lcmq;	b	getBreedOffspring
	m	()F	ep	getAgeScale
	m	(I)V	r	handleAirSupply
	m	()Z	m	gotFish
	m	(Z)V	x	setGotFish
	m	()I	n	getMoistnessLevel
	m	(I)V	s	setMoisntessLevel
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	H	registerGoals
	m	()Lcbr$a;	t	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()V	gA	playAttackSound
	m	(Lcam;)Z	c	canAttack
	m	()I	cv	getMaxAirSupply
	m	(I)I	m	increaseAirSupply
	m	()I	gg	getMaxHeadXRot
	m	()I	gh	getMaxHeadYRot
	m	(Lbzm;)Z	p	canRide
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	()V	g	tick
	m	(B)V	b	handleEntityEvent
	m	(Lmc;)V	a	addParticlesAroundSelf
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	p	getAmbientSound
	m	()Layy;	aZ	getSwimSplashSound
	m	()Layy;	aY	getSwimSound
	m	()Z	gH	closeToNextPos
	m	(Lfis;)V	k	travel
	m	()Z	v	canBeLeashed
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Lcbe;	gI	lambda$finalizeSpawn$1
	m	(Lcqz;)Z	b	lambda$static$0
	m	(Lcmq;)Lbck;	a	access$000
	m	(Lcmq;)Lbck;	b	access$100
	m	(Lcmq;)Lbck;	c	access$200
	m	()V	<clinit>	<clinit>
c	cmq$a	net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal
	f	Lcmq;	a	dolphin
	f	Z	b	stuck
	m	(Lcmq;)V	<init>	<init>
	m	()Z	W_	isInterruptable
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cmq$b	net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal
	f	Lcmq;	a	dolphin
	f	D	b	speedModifier
	f	Lcut;	c	player
	m	(Lcmq;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cmq$c	net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal
	f	I	b	cooldown
	f	Lcmq;	a	this$0
	m	(Lcmq;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	(Ldcv;)V	a	drop
c	cmr	net/minecraft/world/entity/animal/FlyingAnimal
	m	()Z	gW	isFlying
c	cms	net/minecraft/world/entity/animal/Fox
	f	Lalh;	co	DATA_TYPE_ID
	f	Lalh;	cp	DATA_FLAGS_ID
	f	I	cq	FLAG_SITTING
	f	I	ck	FLAG_CROUCHING
	f	I	cl	FLAG_INTERESTED
	f	I	cm	FLAG_POUNCING
	f	I	cr	FLAG_SLEEPING
	f	I	cs	FLAG_FACEPLANTED
	f	I	ct	FLAG_DEFENDING
	f	Lalh;	cu	DATA_TRUSTED_ID_0
	f	Lalh;	cv	DATA_TRUSTED_ID_1
	f	Ljava/util/function/Predicate;	cw	ALLOWED_ITEMS
	f	Ljava/util/function/Predicate;	cx	TRUSTED_TARGET_SELECTOR
	f	Ljava/util/function/Predicate;	cy	STALKABLE_PREY
	f	Ljava/util/function/Predicate;	cz	AVOID_PLAYERS
	f	I	cA	MIN_TICKS_BEFORE_EAT
	f	Lbzp;	cB	BABY_DIMENSIONS
	f	Lcom/mojang/serialization/Codec;	cC	TRUSTED_LIST_CODEC
	f	Z	cD	DEFAULT_SLEEPING
	f	Z	cE	DEFAULT_SITTING
	f	Z	cF	DEFAULT_CROUCHING
	f	Lchi;	cG	landTargetGoal
	f	Lchi;	cH	turtleEggTargetGoal
	f	Lchi;	cI	fishTargetGoal
	f	F	cJ	interestedAngle
	f	F	cM	interestedAngleO
	f	F	cN	crouchAmount
	f	F	cO	crouchAmountO
	f	I	cP	ticksSinceEaten
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	H	registerGoals
	m	()V	e_	aiStep
	m	()Z	fm	isImmobile
	m	(Ldcv;)Z	j	canEat
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(B)V	b	handleEntityEvent
	m	()Lcbr$a;	m	createAttributes
	m	(Laub;Lbzc;)Lcms;	b	getBreedOffspring
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkFoxSpawnRules
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	gL	setTargetGoals
	m	()V	gN	playEatingSound
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Lcms$v;	n	getVariant
	m	(Lcms$v;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	()Ljava/util/stream/Stream;	gT	getTrustedEntities
	m	(Lcam;)V	i	addTrustedEntity
	m	(Lbzs;)V	a	addTrustedEntity
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	gU	clearTrusted
	m	()Z	t	isSitting
	m	(Z)V	x	setSitting
	m	()Z	gH	isFaceplanted
	m	(Z)V	B	setFaceplanted
	m	()Z	gV	isDefending
	m	(Z)V	C	setDefending
	m	()Z	fY	isSleeping
	m	(Z)V	D	setSleeping
	m	(IZ)V	d	setFlag
	m	(I)Z	s	getFlag
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Ldcv;)Z	g	canHoldItem
	m	(Ldcv;)V	k	spitOutItem
	m	(Ldcv;)V	l	dropItemStack
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	()V	g	tick
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Lcao;)V	a	onOffspringSpawnedFromEgg
	m	()Z	gI	isPouncing
	m	(Z)V	y	setIsPouncing
	m	()Z	gJ	isFullyCrouched
	m	(Z)V	z	setIsCrouching
	m	()Z	cl	isCrouching
	m	(Z)V	A	setIsInterested
	m	()Z	gK	isInterested
	m	(F)F	J	getHeadRollAngle
	m	(F)F	K	getCrouchAmount
	m	(Lcam;)V	g	setTarget
	m	()V	gW	wakeUp
	m	()V	gX	clearStates
	m	()Z	gY	canMove
	m	()V	X	playAmbientSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lcam;)Z	j	trusts
	m	(Laub;Lbyb;)V	b	dropAllDeathLoot
	m	(Lcms;Lcam;)Z	a	isPathClear
	m	()Lfis;	F	getLeashOffset
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lcam;Lbzs;)Z	a	lambda$trusts$10
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$9
	m	(Lcam;)Z	k	lambda$registerGoals$8
	m	(Lcam;)Z	l	lambda$registerGoals$7
	m	(Lcam;)Z	m	lambda$registerGoals$6
	m	(Lcam;Laub;)Z	b	lambda$registerGoals$5
	m	(Lcam;Laub;)Z	c	lambda$registerGoals$4
	m	(Lbzm;)Z	G	lambda$static$3
	m	(Lbzm;)Z	H	lambda$static$2
	m	(Lbzm;)Z	I	lambda$static$1
	m	(Lcqz;)Z	b	lambda$static$0
	m	(Lcms;)Z	a	access$000
	m	(Lcms;)Lbck;	b	access$100
	m	(Lcms;)Lbck;	c	access$200
	m	(Lcms;)Lbck;	d	access$300
	m	()V	<clinit>	<clinit>
c	cms$a	net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal
	f	Lcam;	j	trustedLastHurtBy
	f	Lcam;	k	trustedLastHurt
	f	I	l	timestamp
	f	Lcms;	i	this$0
	m	(Lcms;Ljava/lang/Class;ZZLclc$a;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cms$b	net/minecraft/world/entity/animal/Fox$FaceplantGoal
	f	I	a	countdown
	f	Lcms;	b	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cms$c	net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	(Lcam;Laub;)Z	test	test
c	cms$d	net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal
	f	Lclc;	b	alertableTargeting
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	h	hasShelter
	m	()Z	i	alertable
c	cms$e	net/minecraft/world/entity/animal/Fox$FoxBreedGoal
	m	(Lcms;D)V	<init>	<init>
	m	()V	d	start
	m	()V	g	breed
c	cms$f	net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal
	f	I	i	WAIT_TICKS
	f	I	g	ticksWaited
	f	Lcms;	h	this$0
	m	(Lcms;DII)V	<init>	<init>
	m	()D	i	acceptedDistance
	m	()Z	l	shouldRecalculatePath
	m	(Ldmx;Ljb;)Z	a	isValidTarget
	m	()V	a	tick
	m	()V	o	onReachedTarget
	m	(Leeb;)V	a	pickGlowBerry
	m	(Leeb;)V	b	pickSweetBerries
	m	()Z	b	canUse
	m	()V	d	start
c	cms$g	net/minecraft/world/entity/animal/Fox$FoxFloatGoal
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	()V	d	start
	m	()Z	b	canUse
c	cms$h	net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal
	f	Lcms;	d	fox
	m	(Lcms;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	cms$i	net/minecraft/world/entity/animal/Fox$FoxGroupData
	f	Lcms$v;	a	variant
	m	(Lcms$v;)V	<init>	<init>
c	cms$j	net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal
	f	Lcms;	h	this$0
	m	(Lcms;Lcao;Ljava/lang/Class;F)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cms$k	net/minecraft/world/entity/animal/Fox$FoxLookControl
	f	Lcms;	h	this$0
	m	(Lcms;)V	<init>	<init>
	m	()V	a	tick
	m	()Z	c	resetXRotOnTick
c	cms$l	net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal
	f	Lcms;	b	this$0
	m	(Lcms;DZ)V	<init>	<init>
	m	(Lcam;)V	a	checkAndPerformAttack
	m	()V	d	start
	m	()Z	b	canUse
c	cms$m	net/minecraft/world/entity/animal/Fox$FoxMoveControl
	f	Lcms;	l	this$0
	m	(Lcms;)V	<init>	<init>
	m	()V	a	tick
c	cms$n	net/minecraft/world/entity/animal/Fox$FoxPanicGoal
	f	Lcms;	a	this$0
	m	(Lcms;D)V	<init>	<init>
	m	()Z	h	shouldPanic
c	cms$o	net/minecraft/world/entity/animal/Fox$FoxPounceGoal
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	W_	isInterruptable
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cms$p	net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
	m	()V	d	start
c	cms$q	net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal
	f	Lcms;	a	this$0
	m	(Lcms;II)V	<init>	<init>
	m	()V	d	start
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	h	canFoxMove
c	cms$r	net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal
	f	D	c	relX
	f	D	d	relZ
	f	I	e	lookTime
	f	I	f	looksRemaining
	f	Lcms;	b	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()V	k	resetLook
c	cms$s	net/minecraft/world/entity/animal/Fox$SeekShelterGoal
	f	I	c	interval
	f	Lcms;	b	this$0
	m	(Lcms;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	cms$t	net/minecraft/world/entity/animal/Fox$SleepGoal
	f	I	c	WAIT_TIME_BEFORE_SLEEP
	f	I	d	countdown
	f	Lcms;	b	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	k	canSleep
	m	()V	e	stop
	m	()V	d	start
	m	()V	<clinit>	<clinit>
c	cms$u	net/minecraft/world/entity/animal/Fox$StalkPreyGoal
	f	Lcms;	a	this$0
	m	(Lcms;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cms$v	net/minecraft/world/entity/animal/Fox$Variant
	f	Lcms$v;	a	RED
	f	Lcms$v;	b	SNOW
	f	Lcms$v;	c	DEFAULT
	f	Lbda$a;	d	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lzm;	e	STREAM_CODEC
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Lcms$v;	i	$VALUES
	m	()[Lcms$v;	values	values
	m	(Ljava/lang/String;)Lcms$v;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	getId
	m	(I)Lcms$v;	a	byId
	m	(Ljl;)Lcms$v;	a	byBiome
	m	()[Lcms$v;	b	$values
	m	()V	<clinit>	<clinit>
c	cmt	net/minecraft/world/entity/animal/HappyGhast
	f	F	ck	BABY_SCALE
	f	I	cl	WANDER_GROUND_DISTANCE
	f	I	cm	SMALL_RESTRICTION_RADIUS
	f	I	co	LARGE_RESTRICTION_RADIUS
	f	I	cp	RESTRICTION_RADIUS_BUFFER
	f	I	cq	FAST_HEALING_TICKS
	f	I	cr	SLOW_HEALING_TICKS
	f	I	cs	MAX_PASSANGERS
	f	I	cv	STILL_TIMEOUT_ON_LOAD_GRACE_PERIOD
	f	I	cw	MAX_STILL_TIMEOUT
	f	F	ct	SPEED_MULTIPLIER_WHEN_PANICKING
	f	Ljava/util/function/Predicate;	cu	IS_FOOD
	f	I	cx	leashHolderTime
	f	I	cy	serverStillTimeout
	f	Lalh;	cz	IS_LEASH_HOLDER
	f	Lalh;	cA	STAYS_STILL
	f	F	cB	MAX_SCALE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(I)V	s	setServerStillTimeout
	m	(Ldmu;)Lcjw;	c	createBabyNavigation
	m	()V	H	registerGoals
	m	()V	gI	adultGhastSetup
	m	()V	gJ	babyGhastSetup
	m	()V	h	ageBoundaryReached
	m	()Lcbr$a;	m	createAttributes
	m	(F)F	c	sanitizeScale
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	eV	onClimbable
	m	(Lfis;)V	k	travel
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()Z	ek	canBreatheUnderwater
	m	()Z	gF	shouldStayCloseToLeashHolder
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()F	fl	getVoicePitch
	m	()Laza;	do	getSoundSource
	m	()I	W	getAmbientSoundInterval
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()I	gk	getMaxSpawnClusterSize
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Z	gO	canFallInLove
	m	()F	ep	getAgeScale
	m	(Ldcv;)Z	i	isFood
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcut;)V	g	doPlayerRide
	m	(Lbzm;)V	q	addPassenger
	m	(Lbzm;)V	r	removePassenger
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Lcam;	cY	getControllingPassenger
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	(Lcam;)Lfir;	i	getRiddenRotation
	m	(Lcut;Lfis;)V	a	tickRidden
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Laub;)V	a	customServerAiStep
	m	()V	g	tick
	m	()V	e_	aiStep
	m	()I	gK	getHappyGhastRestrictionRadius
	m	()V	gL	checkRestriction
	m	()V	gT	continuousHeal
	m	()V	ah	sendDebugPackets
	m	(Lall$a;)V	a	defineSynchedData
	m	(Z)V	x	setLeashHolder
	m	()Z	n	isLeashHolder
	m	()V	gU	syncStayStillFlag
	m	()Z	t	staysStill
	m	()Z	dL	supportQuadLeashAsHolder
	m	()[Lfis;	dK	getQuadLeashHolderOffsets
	m	()Lfis;	F	getLeashOffset
	m	()D	B	leashElasticDistance
	m	()D	A	leashSnapDistance
	m	()V	z	onElasticLeashPull
	m	(Lcak;)V	a	notifyLeashHolder
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gH	isOnStillTimeout
	m	()Z	gV	scanPlayerAboveGhast
	m	()Lcgg;	O	createBodyControl
	m	(Lbzm;)Z	j	canBeCollidedWith
	m	()Z	dZ	isFlyingVehicle
	m	(Lchi;)Z	a	lambda$babyGhastSetup$3
	m	(Lchi;)Z	b	lambda$adultGhastSetup$2
	m	(Ldcv;)Z	j	lambda$registerGoals$1
	m	(Ldcv;)Z	k	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cmt$a	net/minecraft/world/entity/animal/HappyGhast$BabyFlyingPathNavigation
	m	(Lcmt;Ldmu;)V	<init>	<init>
	m	(Lfis;Lfis;)Z	a	canMoveDirectly
c	cmt$b	net/minecraft/world/entity/animal/HappyGhast$HappyGhastBodyRotationControl
	f	Lcmt;	a	this$0
	m	(Lcmt;)V	<init>	<init>
	m	()V	a	clientTick
c	cmt$c	net/minecraft/world/entity/animal/HappyGhast$HappyGhastFloatGoal
	f	Lcmt;	a	this$0
	m	(Lcmt;)V	<init>	<init>
	m	()Z	b	canUse
c	cmt$d	net/minecraft/world/entity/animal/HappyGhast$HappyGhastLookControl
	f	Lcmt;	h	this$0
	m	(Lcmt;)V	<init>	<init>
	m	()V	a	tick
	m	(F)F	a	wrapDegrees90
c	cmu	net/minecraft/world/entity/animal/HappyGhastAi
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	c	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	D	d	BABY_GHAST_CLOSE_ENOUGH_DIST
	f	Lbwu;	e	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	f	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	g	MEMORY_TYPES
	m	()V	<init>	<init>
	m	()Lcbm$b;	a	brainProvider
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcbm;)V	d	initPanicActivity
	m	(Lcmt;)V	a	updateActivity
	m	(Lcam;)Ljava/lang/Float;	a	lambda$initIdleActivity$3
	m	(Lcam;)Ljava/lang/Float;	b	lambda$initIdleActivity$2
	m	(Lcam;)Ljava/lang/Double;	c	lambda$initIdleActivity$1
	m	(Lcam;)Ljava/lang/Float;	d	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	cmv	net/minecraft/world/entity/animal/IronGolem
	f	Lalh;	c	DATA_FLAGS_ID
	f	I	d	IRON_INGOT_HEAL_AMOUNT
	f	Z	e	DEFAULT_PLAYER_CREATED
	f	I	f	attackAnimationTick
	f	I	ck	offerFlowerTick
	f	Lbwu;	cl	PERSISTENT_ANGER_TIME
	f	I	cm	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cn	persistentAngerTarget
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	l	createAttributes
	m	(I)I	l	decreaseAirSupply
	m	(Lbzm;)V	E	doPush
	m	()V	e_	aiStep
	m	()Z	by	canSpawnSprintParticle
	m	(Lbzv;)Z	a	canAttackType
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()I	a	getRemainingPersistentAngerTime
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	()F	gI	getAttackDamage
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Lbzi$a;	m	getCrackiness
	m	(B)V	b	handleEntityEvent
	m	()I	n	getAttackAnimationTick
	m	(Z)V	x	offerFlower
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()I	t	getOfferFlowerTick
	m	()Z	gH	isPlayerCreated
	m	(Z)V	y	setPlayerCreated
	m	(Lbyb;)V	a	die
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()Lfis;	F	getLeashOffset
	m	(Lcam;Laub;)Z	b	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cmw	net/minecraft/world/entity/animal/MushroomCow
	f	Lalh;	ck	DATA_TYPE
	f	I	cl	MUTATE_CHANCE
	f	Ljava/lang/String;	cm	TAG_STEW_EFFECTS
	f	Ldfx;	co	stewEffects
	f	Ljava/util/UUID;	cp	lastLightningBoltUUID
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkMushroomSpawnRules
	m	(Laub;Lcal;)V	a	thunderHit
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Laub;Laza;Ldcv;)V	a	shear
	m	()Z	a	readyForShearing
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ldcv;)Ljava/util/Optional;	j	getEffectsFromItemStack
	m	(Lcmw$a;)V	a	setVariant
	m	()Lcmw$a;	n	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Laub;Lbzc;)Lcmw;	b	getBreedOffspring
	m	(Lcmw;)Lcmw$a;	a	getOffspringVariant
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Laub;Ldcv;Lcmn;)V	a	lambda$shear$1
	m	(Laub;Ldcv;)V	d	lambda$shear$0
	m	()V	<clinit>	<clinit>
c	cmw$a	net/minecraft/world/entity/animal/MushroomCow$Variant
	f	Lcmw$a;	a	RED
	f	Lcmw$a;	b	BROWN
	f	Lcmw$a;	c	DEFAULT
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lzm;	e	STREAM_CODEC
	f	Ljava/lang/String;	g	type
	f	I	h	id
	f	Leeb;	i	blockState
	f	[Lcmw$a;	j	$VALUES
	m	()[Lcmw$a;	values	values
	m	(Ljava/lang/String;)Lcmw$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ILeeb;)V	<init>	<init>
	m	()Leeb;	a	getBlockState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	b	id
	m	(I)Lcmw$a;	a	byId
	m	()[Lcmw$a;	d	$values
	m	()V	<clinit>	<clinit>
c	cmx	net/minecraft/world/entity/animal/Ocelot
	f	D	ck	CROUCH_SPEED_MOD
	f	D	cl	WALK_SPEED_MOD
	f	D	cm	SPRINT_SPEED_MOD
	f	Lalh;	co	DATA_TRUSTING
	f	Z	cp	DEFAULT_TRUSTING
	f	Lcmx$a;	cq	ocelotAvoidPlayersGoal
	f	Lcmx$b;	cr	temptGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	t	isTrusting
	m	(Z)V	x	setTrusting
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	H	registerGoals
	m	(Laub;)V	a	customServerAiStep
	m	(D)Z	h	removeWhenFarAway
	m	()Lcbr$a;	m	createAttributes
	m	()Layy;	p	getAmbientSound
	m	()I	W	getAmbientSoundInterval
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(B)V	b	handleEntityEvent
	m	(Z)V	y	spawnTrustingParticles
	m	()V	n	reassessTrustingGoals
	m	(Laub;Lbzc;)Lcmx;	b	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkOcelotSpawnRules
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Lfis;	F	getLeashOffset
	m	()Z	ch	isSteppingCarefully
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cmx$a	net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal
	f	Lcmx;	i	ocelot
	m	(Lcmx;Ljava/lang/Class;FDD)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	cmx$b	net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal
	f	Lcmx;	d	ocelot
	m	(Lcmx;DLjava/util/function/Predicate;Z)V	<init>	<init>
	m	()Z	h	canScare
c	cmy	net/minecraft/world/entity/animal/Panda
	f	Lalh;	cm	UNHAPPY_COUNTER
	f	Lalh;	co	SNEEZE_COUNTER
	f	Lalh;	cp	EAT_COUNTER
	f	Lalh;	cq	MAIN_GENE_ID
	f	Lalh;	cr	HIDDEN_GENE_ID
	f	Lalh;	cs	DATA_ID_FLAGS
	f	Lclc;	ct	BREED_TARGETING
	f	Lbzp;	cu	BABY_DIMENSIONS
	f	I	cv	FLAG_SNEEZE
	f	I	cw	FLAG_ROLL
	f	I	cx	FLAG_SIT
	f	I	cy	FLAG_ON_BACK
	f	I	cz	EAT_TICK_INTERVAL
	f	I	ck	TOTAL_ROLL_STEPS
	f	I	cA	TOTAL_UNHAPPY_TIME
	f	Z	cB	gotBamboo
	f	Z	cC	didBite
	f	I	cl	rollCounter
	f	Lfis;	cD	rollDelta
	f	F	cE	sitAmount
	f	F	cF	sitAmountO
	f	F	cG	onBackAmount
	f	F	cH	onBackAmountO
	f	F	cI	rollAmount
	f	F	cJ	rollAmountO
	f	Lcmy$g;	cM	lookAtPlayerGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	()I	m	getUnhappyCounter
	m	(I)V	s	setUnhappyCounter
	m	()Z	n	isSneezing
	m	()Z	t	isSitting
	m	(Z)V	x	sit
	m	()Z	gH	isOnBack
	m	(Z)V	y	setOnBack
	m	()Z	gI	isEating
	m	(Z)V	z	eat
	m	()I	he	getEatCounter
	m	(I)V	u	setEatCounter
	m	(Z)V	A	sneeze
	m	()I	gJ	getSneezeCounter
	m	(I)V	t	setSneezeCounter
	m	()Lcmy$a;	gK	getMainGene
	m	(Lcmy$a;)V	a	setMainGene
	m	()Lcmy$a;	gL	getHiddenGene
	m	(Lcmy$a;)V	b	setHiddenGene
	m	()Z	gT	isRolling
	m	(Z)V	B	roll
	m	(Lall$a;)V	a	defineSynchedData
	m	(I)Z	v	getFlag
	m	(IZ)V	d	setFlag
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()V	H	registerGoals
	m	()Lcbr$a;	gU	createAttributes
	m	()Lcmy$a;	gV	getVariant
	m	()Z	gW	isLazy
	m	()Z	gX	isWorried
	m	()Z	gY	isPlayful
	m	()Z	gZ	isBrown
	m	()Z	ha	isWeak
	m	()Z	gy	isAggressive
	m	()Z	v	canBeLeashed
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()V	gA	playAttackSound
	m	()V	g	tick
	m	()Z	hb	isScared
	m	()V	hf	handleEating
	m	()V	hg	addEatingParticles
	m	()V	hh	updateSitAmount
	m	()V	hi	updateOnBackAnimation
	m	()V	hj	updateRollAmount
	m	(F)F	J	getSitAmount
	m	(F)F	K	getLieOnBackAmount
	m	(F)F	L	getRollAmount
	m	()V	hk	handleRoll
	m	()V	hl	afterSneeze
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcmy;Lcmy;)V	a	setGeneFromParents
	m	()Lcmy$a;	hm	getOneOfGenesRandomly
	m	()V	hc	setAttributes
	m	()V	hn	tryToSit
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Layy;	p	getAmbientSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Ldcv;)Z	i	isFood
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Z	hd	canPerformAction
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Lcqz;)Z	b	canPickUpAndEat
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	(Lcmy;)Lbck;	a	access$000
	m	(Lcmy;)Lbck;	b	access$100
	m	(Lcmy;)Lbck;	c	access$200
	m	(Lcmy;)Lbck;	d	access$300
	m	(Lcmy;)Lbck;	e	access$400
	m	(Lcmy;)Lbck;	f	access$500
	m	(Lcmy;)Lbck;	g	access$600
	m	(Lcmy;)Lbck;	h	access$700
	m	(Lcmy;)Lbck;	i	access$800
	m	(Lcmy;)Lbck;	j	access$900
	m	(Lcmy;)Lbck;	k	access$1000
	m	()V	<clinit>	<clinit>
c	cmy$a	net/minecraft/world/entity/animal/Panda$Gene
	f	Lcmy$a;	a	NORMAL
	f	Lcmy$a;	b	LAZY
	f	Lcmy$a;	c	WORRIED
	f	Lcmy$a;	d	PLAYFUL
	f	Lcmy$a;	e	BROWN
	f	Lcmy$a;	f	WEAK
	f	Lcmy$a;	g	AGGRESSIVE
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	I	j	MAX_GENE
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Z	m	isRecessive
	f	[Lcmy$a;	n	$VALUES
	m	()[Lcmy$a;	values	values
	m	(Ljava/lang/String;)Lcmy$a;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
	m	()I	a	getId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	b	isRecessive
	m	(Lcmy$a;Lcmy$a;)Lcmy$a;	a	getVariantFromGenes
	m	(I)Lcmy$a;	a	byId
	m	(Lbck;)Lcmy$a;	a	getRandom
	m	()[Lcmy$a;	d	$values
	m	()V	<clinit>	<clinit>
c	cmy$b	net/minecraft/world/entity/animal/Panda$PandaAttackGoal
	f	Lcmy;	b	panda
	m	(Lcmy;DZ)V	<init>	<init>
	m	()Z	b	canUse
c	cmy$c	net/minecraft/world/entity/animal/Panda$PandaAvoidGoal
	f	Lcmy;	i	panda
	m	(Lcmy;Ljava/lang/Class;FDD)V	<init>	<init>
	m	()Z	b	canUse
c	cmy$d	net/minecraft/world/entity/animal/Panda$PandaBreedGoal
	f	Lcmy;	d	panda
	f	I	e	unhappyCooldown
	m	(Lcmy;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	canFindBamboo
c	cmy$e	net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal
	f	Lcmy;	a	panda
	m	(Lcmy;[Ljava/lang/Class;)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	(Lcao;Lcam;)V	a	alertOther
c	cmy$f	net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal
	f	Lcmy;	a	panda
	f	I	b	cooldown
	m	(Lcmy;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
c	cmy$g	net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal
	f	Lcmy;	h	panda
	m	(Lcmy;Ljava/lang/Class;F)V	<init>	<init>
	m	(Lcam;)V	a	setTarget
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	()V	a	tick
	m	(Lcam;)Z	b	lambda$canUse$0
c	cmy$h	net/minecraft/world/entity/animal/Panda$PandaMoveControl
	f	Lcmy;	l	panda
	m	(Lcmy;)V	<init>	<init>
	m	()V	a	tick
c	cmy$i	net/minecraft/world/entity/animal/Panda$PandaPanicGoal
	f	Lcmy;	a	panda
	m	(Lcmy;D)V	<init>	<init>
	m	()Z	c	canContinueToUse
c	cmy$j	net/minecraft/world/entity/animal/Panda$PandaRollGoal
	f	Lcmy;	a	panda
	m	(Lcmy;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Z	W_	isInterruptable
c	cmy$k	net/minecraft/world/entity/animal/Panda$PandaSitGoal
	f	I	b	cooldown
	f	Lcmy;	a	this$0
	m	(Lcmy;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	()V	d	start
	m	()V	e	stop
c	cmy$l	net/minecraft/world/entity/animal/Panda$PandaSneezeGoal
	f	Lcmy;	a	panda
	m	(Lcmy;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	cmz	net/minecraft/world/entity/animal/Parrot
	f	Lalh;	cs	DATA_VARIANT_ID
	f	Ljava/util/function/Predicate;	ct	NOT_PARROT_PREDICATE
	f	Ljava/util/Map;	cu	MOB_SOUND_MAP
	f	F	co	flap
	f	F	cp	flapSpeed
	f	F	cq	oFlapSpeed
	f	F	cr	oFlap
	f	F	cv	flapping
	f	F	cw	nextFlap
	f	Z	cx	partyParrot
	f	Ljb;	cy	jukebox
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Z	g_	isBaby
	m	()V	H	registerGoals
	m	()Lcbr$a;	gT	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()V	e_	aiStep
	m	(Ljb;Z)V	a	setRecordPlayingNearby
	m	()Z	gU	isPartyParrot
	m	()V	gY	calculateFlapping
	m	(Ldmu;Lbzm;)Z	a	imitateNearbyMobs
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldcv;)Z	i	isFood
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkParrotSpawnRules
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	(Lcmd;)Z	a	canMate
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Layy;	p	getAmbientSound
	m	(Ldmu;Lbck;)Layy;	a	getAmbient
	m	(Lbzv;)Layy;	b	getImitatedSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Z	bd	isFlapping
	m	()V	bc	onFlap
	m	()F	fl	getVoicePitch
	m	(Lbck;)F	a	getPitch
	m	()Laza;	do	getSoundSource
	m	()Z	bL	isPushable
	m	(Lbzm;)V	E	doPush
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Lcmz$b;	gV	getVariant
	m	(Lcmz$b;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gW	isFlying
	m	()Z	gL	canFlyToOwner
	m	()Lfis;	F	getLeashOffset
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cmz$1	net/minecraft/world/entity/animal/Parrot$1
	m	()V	<init>	<init>
	m	(Lcao;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
c	cmz$a	net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal
	m	(Lcau;D)V	<init>	<init>
	m	()Lfis;	h	getPosition
	m	()Lfis;	k	getTreePos
c	cmz$b	net/minecraft/world/entity/animal/Parrot$Variant
	f	Lcmz$b;	a	RED_BLUE
	f	Lcmz$b;	b	BLUE
	f	Lcmz$b;	c	GREEN
	f	Lcmz$b;	d	YELLOW_BLUE
	f	Lcmz$b;	e	GRAY
	f	Lcmz$b;	f	DEFAULT
	f	Ljava/util/function/IntFunction;	j	BY_ID
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Lcom/mojang/serialization/Codec;	h	LEGACY_CODEC
	f	Lzm;	i	STREAM_CODEC
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	[Lcmz$b;	m	$VALUES
	m	()[Lcmz$b;	values	values
	m	(Ljava/lang/String;)Lcmz$b;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	(I)Lcmz$b;	a	byId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcmz$b;	b	$values
	m	()V	<clinit>	<clinit>
c	cna	net/minecraft/world/entity/animal/Pig
	f	Lalh;	ck	DATA_BOOST_TIME
	f	Lalh;	cl	DATA_VARIANT_ID
	f	Lcai;	cm	steering
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	m	createAttributes
	m	()Lcam;	cY	getControllingPassenger
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Lbzw;Ldcv;Ldle;)Ljl;	a	getEquipSound
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	(Laub;Lcal;)V	a	thunderHit
	m	(Lcut;Lfis;)V	a	tickRidden
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	(Lcut;)F	c	getRiddenSpeed
	m	()Z	a	boost
	m	(Laub;Lbzc;)Lcna;	b	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	()Lfis;	F	getLeashOffset
	m	(Ljl;)V	b	setVariant
	m	()Ljl;	n	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lcsq;)V	a	lambda$thunderHit$2
	m	(Ldcv;)Z	j	lambda$registerGoals$1
	m	(Ldcv;)Z	k	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cnb	net/minecraft/world/entity/animal/PigVariant
	f	Lcwu;	e	modelAndTexture
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lcwu;)V	<init>	<init>
	m	(Lcwu;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcwu;	b	modelAndTexture
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cnb$a	net/minecraft/world/entity/animal/PigVariant$ModelType
	f	Lcnb$a;	a	NORMAL
	f	Lcnb$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lcnb$a;	e	$VALUES
	m	()[Lcnb$a;	values	values
	m	(Ljava/lang/String;)Lcnb$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcnb$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cnc	net/minecraft/world/entity/animal/PigVariants
	f	Lamd;	a	TEMPERATE
	f	Lamd;	b	WARM
	f	Lamd;	c	COLD
	f	Lamd;	d	DEFAULT
	m	()V	<init>	<init>
	m	(Lame;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Lcnb$a;Ljava/lang/String;Lbae;)V	a	register
	m	(Lqq;Lamd;Lcnb$a;Ljava/lang/String;Lcxa;)V	a	register
	m	()V	<clinit>	<clinit>
c	cnd	net/minecraft/world/entity/animal/PolarBear
	f	Lalh;	ck	DATA_STANDING_ID
	f	F	cl	STAND_ANIMATION_TICKS
	f	F	cm	clientSideStandAnimationO
	f	F	co	clientSideStandAnimation
	f	I	cp	warningSoundTicks
	f	Lbwu;	cq	PERSISTENT_ANGER_TIME
	f	I	cr	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cs	persistentAngerTarget
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	()V	H	registerGoals
	m	()Lcbr$a;	m	createAttributes
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkPolarBearSpawnRules
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()V	c	startPersistentAngerTimer
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()I	a	getRemainingPersistentAngerTime
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	n	playWarningSound
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Z	t	isStanding
	m	(Z)V	x	setStanding
	m	(F)F	J	getStandingAnimationScale
	m	()F	fq	getWaterSlowDown
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcau;)Lbae;	a	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cnd$a	net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal
	f	Lcnd;	i	this$0
	m	(Lcnd;)V	<init>	<init>
	m	()Z	b	canUse
	m	()D	l	getFollowDistance
c	cnd$b	net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal
	f	Lcnd;	a	this$0
	m	(Lcnd;)V	<init>	<init>
	m	()V	d	start
	m	(Lcao;Lcam;)V	a	alertOther
c	cnd$c	net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal
	f	Lcnd;	b	this$0
	m	(Lcnd;)V	<init>	<init>
	m	(Lcam;)V	a	checkAndPerformAttack
	m	()V	e	stop
c	cne	net/minecraft/world/entity/animal/Pufferfish
	f	Lalh;	e	PUFF_STATE
	f	I	f	inflateCounter
	f	I	ck	deflateTimer
	f	Lclc$a;	cl	SCARY_MOB
	f	Lclc;	cm	TARGETING_CONDITIONS
	f	I	a	STATE_SMALL
	f	I	b	STATE_MID
	f	I	c	STATE_FULL
	f	I	cn	DEFAULT_PUFF_STATE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()I	gI	getPuffState
	m	(I)V	b	setPuffState
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Ldcv;	a	getBucketItemStack
	m	()V	H	registerGoals
	m	()V	g	tick
	m	()V	e_	aiStep
	m	(Laub;Lcao;)V	a	touch
	m	(Lcut;)V	a_	playerTouch
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	gH	getFlopSound
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(I)F	c	getScale
	m	(Laub;Lcao;)Z	b	lambda$aiStep$1
	m	(Lcam;Laub;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cne$a	net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal
	f	Lcne;	a	fish
	m	(Lcne;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	(Lcam;)Z	a	lambda$canUse$0
c	cnf	net/minecraft/world/entity/animal/Rabbit
	f	D	ck	STROLL_SPEED_MOD
	f	D	cl	BREED_SPEED_MOD
	f	D	cm	FOLLOW_SPEED_MOD
	f	D	co	FLEE_SPEED_MOD
	f	D	cp	ATTACK_SPEED_MOD
	f	Lalh;	cq	DATA_TYPE_ID
	f	I	cr	DEFAULT_MORE_CARROT_TICKS
	f	Lame;	cs	KILLER_BUNNY
	f	I	ct	DEFAULT_ATTACK_POWER
	f	I	cu	EVIL_ATTACK_POWER_INCREMENT
	f	Lame;	cv	EVIL_ATTACK_POWER_MODIFIER
	f	I	cw	EVIL_ARMOR_VALUE
	f	I	cx	MORE_CARROTS_DELAY
	f	I	cy	jumpTicks
	f	I	cz	jumpDuration
	f	Z	cA	wasOnGround
	f	I	cB	jumpDelayTicks
	f	I	cC	moreCarrotTicks
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()F	fn	getJumpPower
	m	()V	s	jumpFromGround
	m	(F)F	J	getJumpCompletion
	m	(D)V	i	setSpeedModifier
	m	(Z)V	t	setJumping
	m	()V	m	startJumping
	m	(Lall$a;)V	a	defineSynchedData
	m	(Laub;)V	a	customServerAiStep
	m	()Z	by	canSpawnSprintParticle
	m	(DD)V	c	facePoint
	m	()V	gI	enableJumpControl
	m	()V	gJ	disableJumpControl
	m	()V	gK	setLandingDelay
	m	()V	gL	checkLandingDelay
	m	()V	e_	aiStep
	m	()Lcbr$a;	n	createAttributes
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	t	getJumpSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()V	gA	playAttackSound
	m	()Laza;	do	getSoundSource
	m	(Laub;Lbzc;)Lcnf;	b	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	()Lcnf$g;	gH	getVariant
	m	(Lcnf$g;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Ldmv;Ljb;)Lcnf$g;	a	getRandomRabbitVariant
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkRabbitSpawnRules
	m	()Z	gT	wantsMoreFood
	m	(B)V	b	handleEntityEvent
	m	()Lfis;	F	getLeashOffset
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	(Lcnf;)Z	a	access$000
	m	(Lcnf;)Lcgj;	b	access$100
	m	()V	<clinit>	<clinit>
c	cnf$a	net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal
	f	Lcnf;	i	rabbit
	m	(Lcnf;Ljava/lang/Class;FDD)V	<init>	<init>
	m	()Z	b	canUse
c	cnf$b	net/minecraft/world/entity/animal/Rabbit$RabbitGroupData
	f	Lcnf$g;	a	variant
	m	(Lcnf$g;)V	<init>	<init>
c	cnf$c	net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl
	f	Lcnf;	b	rabbit
	f	Z	c	canJump
	m	(Lcnf;)V	<init>	<init>
	m	()Z	c	wantJump
	m	()Z	d	canJump
	m	(Z)V	a	setCanJump
	m	()V	b	tick
c	cnf$d	net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl
	f	Lcnf;	l	rabbit
	f	D	m	nextJumpSpeed
	m	(Lcnf;)V	<init>	<init>
	m	()V	a	tick
	m	(DDDD)V	a	setWantedPosition
c	cnf$e	net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal
	f	Lcnf;	a	rabbit
	m	(Lcnf;D)V	<init>	<init>
	m	()V	a	tick
c	cnf$f	net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal
	f	Lcnf;	g	rabbit
	f	Z	h	wantsToRaid
	f	Z	i	canRaid
	m	(Lcnf;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	cnf$g	net/minecraft/world/entity/animal/Rabbit$Variant
	f	Lcnf$g;	a	BROWN
	f	Lcnf$g;	b	WHITE
	f	Lcnf$g;	c	BLACK
	f	Lcnf$g;	d	WHITE_SPLOTCHED
	f	Lcnf$g;	e	GOLD
	f	Lcnf$g;	f	SALT
	f	Lcnf$g;	g	EVIL
	f	Lcnf$g;	h	DEFAULT
	f	Ljava/util/function/IntFunction;	l	BY_ID
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	Lcom/mojang/serialization/Codec;	j	LEGACY_CODEC
	f	Lzm;	k	STREAM_CODEC
	f	I	m	id
	f	Ljava/lang/String;	n	name
	f	[Lcnf$g;	o	$VALUES
	m	()[Lcnf$g;	values	values
	m	(Ljava/lang/String;)Lcnf$g;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	id
	m	(I)Lcnf$g;	a	byId
	m	()[Lcnf$g;	b	$values
	m	()V	<clinit>	<clinit>
c	cng	net/minecraft/world/entity/animal/Salmon
	f	Ljava/lang/String;	a	TAG_TYPE
	f	Lalh;	b	DATA_TYPE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()I	gI	getMaxSchoolSize
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	gH	getFlopSound
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ldcv;)V	a_	saveToBucketTag
	m	(Lcng$a;)V	a	setVariant
	m	()Lcng$a;	gP	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()F	gQ	getSalmonScale
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()V	<clinit>	<clinit>
c	cng$a	net/minecraft/world/entity/animal/Salmon$Variant
	f	Lcng$a;	a	SMALL
	f	Lcng$a;	b	MEDIUM
	f	Lcng$a;	c	LARGE
	f	Lcng$a;	d	DEFAULT
	f	Lbda$a;	e	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	Ljava/lang/String;	h	name
	f	I	i	id
	f	F	j	boundingBoxScale
	f	[Lcng$a;	k	$VALUES
	m	()[Lcng$a;	values	values
	m	(Ljava/lang/String;)Lcng$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;IF)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	id
	m	()[Lcng$a;	b	$values
	m	()V	<clinit>	<clinit>
c	cnh	net/minecraft/world/entity/animal/ShoulderRidingEntity
	f	Lorg/slf4j/Logger;	co	LOGGER
	f	I	cp	RIDE_COOLDOWN
	f	I	cq	rideCooldownCounter
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lauc;)Z	b	setEntityOnShoulder
	m	()V	g	tick
	m	()Z	gX	canSitOnShoulder
	m	()V	<clinit>	<clinit>
c	cni	net/minecraft/world/entity/animal/SnowGolem
	f	Lalh;	a	DATA_PUMPKIN_ID
	f	B	b	PUMPKIN_FLAG
	f	Z	c	DEFAULT_PUMPKIN
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	fx	isSensitiveToWater
	m	()V	e_	aiStep
	m	(Lcam;F)V	a	performRangedAttack
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Laub;Laza;Ldcv;)V	a	shear
	m	()Z	a	readyForShearing
	m	()Z	m	hasPumpkin
	m	(Z)V	x	setPumpkin
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Lfis;	F	getLeashOffset
	m	(Laub;Ldcv;)V	d	lambda$shear$2
	m	(DDDDLcvt;)V	a	lambda$performRangedAttack$1
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cnj	net/minecraft/world/entity/animal/Squid
	f	F	ck	xBodyRot
	f	F	cl	xBodyRotO
	f	F	cm	zBodyRot
	f	F	cn	zBodyRotO
	f	F	co	tentacleMovement
	f	F	cp	oldTentacleMovement
	f	F	cq	tentacleAngle
	f	F	cr	oldTentacleAngle
	f	F	cs	speed
	f	F	ct	tentacleSpeed
	f	F	cu	rotateSpeed
	f	Lfis;	cv	movementVector
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	gH	createAttributes
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getSquirtSound
	m	()Z	v	canBeLeashed
	m	()F	fk	getSoundVolume
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()D	bg	getDefaultGravity
	m	()V	e_	aiStep
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lfis;)Lfis;	m	rotateVector
	m	()V	t	spawnInk
	m	()Lmc;	m	getInkParticle
	m	(Lfis;)V	k	travel
	m	(B)V	b	handleEntityEvent
	m	()Z	gI	hasMovementVector
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Lcbe;	gJ	lambda$finalizeSpawn$0
	m	(Lcnj;)Z	a	access$000
c	cnj$a	net/minecraft/world/entity/animal/Squid$SquidFleeGoal
	f	F	b	SQUID_FLEE_SPEED
	f	F	c	SQUID_FLEE_MIN_DISTANCE
	f	F	d	SQUID_FLEE_MAX_DISTANCE
	f	I	e	fleeTicks
	f	Lcnj;	a	this$0
	m	(Lcnj;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cnj$b	net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal
	f	Lcnj;	a	squid
	m	(Lcnj;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
c	cnk	net/minecraft/world/entity/animal/TemperatureVariants
	f	Lame;	a	TEMPERATE
	f	Lame;	b	WARM
	f	Lame;	c	COLD
	m	()V	<clinit>	<clinit>
c	cnl	net/minecraft/world/entity/animal/TropicalFish
	f	Lcnl$d;	a	DEFAULT_VARIANT
	f	Lalh;	c	DATA_ID_TYPE_VARIANT
	f	Ljava/util/List;	b	COMMON_VARIANTS
	f	Z	e	isSchool
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(I)Ljava/lang/String;	b	getPredefinedName
	m	(Lcnl$b;Ldbt;Ldbt;)I	a	packVariant
	m	(I)Ldbt;	c	getBaseColor
	m	(I)Ldbt;	r	getPatternColor
	m	(I)Lcnl$b;	s	getPattern
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(I)V	t	setPackedVariant
	m	(I)Z	q	isMaxGroupSizeReached
	m	()I	gS	getPackedVariant
	m	()Ldbt;	gP	getBaseColor
	m	()Ldbt;	gQ	getPatternColor
	m	()Lcnl$b;	gR	getPattern
	m	(Lcnl$b;)V	a	setPattern
	m	(Ldbt;)V	a	setBaseColor
	m	(Ldbt;)V	b	setPatternColor
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldcv;)V	a_	saveToBucketTag
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	gH	getFlopSound
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkTropicalFishSpawnRules
	m	()V	<clinit>	<clinit>
c	cnl$a	net/minecraft/world/entity/animal/TropicalFish$Base
	f	Lcnl$a;	a	SMALL
	f	Lcnl$a;	b	LARGE
	f	I	c	id
	f	[Lcnl$a;	d	$VALUES
	m	()[Lcnl$a;	values	values
	m	(Ljava/lang/String;)Lcnl$a;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()[Lcnl$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cnl$b	net/minecraft/world/entity/animal/TropicalFish$Pattern
	f	Lcnl$b;	a	KOB
	f	Lcnl$b;	b	SUNSTREAK
	f	Lcnl$b;	c	SNOOPER
	f	Lcnl$b;	d	DASHER
	f	Lcnl$b;	e	BRINELY
	f	Lcnl$b;	f	SPOTTY
	f	Lcnl$b;	g	FLOPPER
	f	Lcnl$b;	h	STRIPEY
	f	Lcnl$b;	i	GLITTER
	f	Lcnl$b;	j	BLOCKFISH
	f	Lcnl$b;	k	BETTY
	f	Lcnl$b;	l	CLAYFISH
	f	Lcom/mojang/serialization/Codec;	m	CODEC
	f	Ljava/util/function/IntFunction;	o	BY_ID
	f	Lzm;	n	STREAM_CODEC
	f	Ljava/lang/String;	p	name
	f	Lxo;	q	displayName
	f	Lcnl$a;	r	base
	f	I	s	packedId
	f	[Lcnl$b;	t	$VALUES
	m	()[Lcnl$b;	values	values
	m	(Ljava/lang/String;)Lcnl$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lcnl$a;I)V	<init>	<init>
	m	(I)Lcnl$b;	a	byId
	m	()Lcnl$a;	a	base
	m	()I	b	getPackedId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lxo;	d	displayName
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()[Lcnl$b;	e	$values
	m	()V	<clinit>	<clinit>
c	cnl$c	net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData
	f	Lcnl$d;	b	variant
	m	(Lcnl;Lcnl$d;)V	<init>	<init>
c	cnl$d	net/minecraft/world/entity/animal/TropicalFish$Variant
	f	Lcnl$b;	b	pattern
	f	Ldbt;	c	baseColor
	f	Ldbt;	d	patternColor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(I)V	<init>	<init>
	m	(Lcnl$b;Ldbt;Ldbt;)V	<init>	<init>
	m	()I	a	getPackedId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcnl$b;	b	pattern
	m	()Ldbt;	c	baseColor
	m	()Ldbt;	d	patternColor
	m	()V	<clinit>	<clinit>
c	cnm	net/minecraft/world/entity/animal/Turtle
	f	Lalh;	cl	HAS_EGG
	f	Lalh;	cm	LAYING_EGG
	f	F	co	BABY_SCALE
	f	Lbzp;	cp	BABY_DIMENSIONS
	f	Z	cq	DEFAULT_HAS_EGG
	f	I	cr	layEggCounter
	f	Lclc$a;	ck	BABY_ON_LAND_SELECTOR
	f	Ljb;	cs	homePos
	f	Ljb;	ct	travelPos
	f	Z	cu	goingHome
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;)V	h	setHomePos
	m	()Z	m	hasEgg
	m	(Z)V	x	setHasEgg
	m	()Z	n	isLayingEgg
	m	(Z)V	y	setLayingEgg
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkTurtleSpawnRules
	m	()V	H	registerGoals
	m	()Lcbr$a;	t	createAttributes
	m	()Z	cN	isPushedByFluid
	m	()I	W	getAmbientSoundInterval
	m	()Layy;	p	getAmbientSound
	m	(F)V	g	playSwimSound
	m	()Layy;	aY	getSwimSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Z	gO	canFallInLove
	m	()F	aX	nextStep
	m	()F	ep	getAgeScale
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()V	e_	aiStep
	m	()V	h	ageBoundaryReached
	m	(Lfis;)V	k	travel
	m	()Z	v	canBeLeashed
	m	(Laub;Lcal;)V	a	thunderHit
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Ldcv;)Z	j	lambda$registerGoals$1
	m	(Lcam;Laub;)Z	a	lambda$static$0
	m	(Lcnm;)Lbck;	a	access$000
	m	(Lcnm;)Lbck;	b	access$100
	m	()V	<clinit>	<clinit>
c	cnm$a	net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal
	f	Lcnm;	d	turtle
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	g	breed
c	cnm$b	net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal
	f	Lcnm;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	f	I	d	closeToHomeTryTicks
	f	I	e	GIVE_UP_TICKS
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	c	canContinueToUse
	m	()V	a	tick
c	cnm$c	net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal
	f	I	g	GIVE_UP_TICKS
	f	Lcnm;	h	turtle
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	()Z	l	shouldRecalculatePath
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	cnm$d	net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal
	f	Lcnm;	g	turtle
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	cnm$e	net/minecraft/world/entity/animal/Turtle$TurtleMoveControl
	f	Lcnm;	l	turtle
	m	(Lcnm;)V	<init>	<init>
	m	()V	h	updateSpeed
	m	()V	a	tick
c	cnm$f	net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	b	canUse
c	cnm$g	net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation
	m	(Lcnm;Ldmu;)V	<init>	<init>
	m	(Ljb;)Z	a	isStableDestination
c	cnm$h	net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal
	f	Lcnm;	i	turtle
	m	(Lcnm;DI)V	<init>	<init>
	m	()Z	b	canUse
c	cnm$i	net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal
	f	Lcnm;	a	turtle
	f	D	b	speedModifier
	f	Z	c	stuck
	m	(Lcnm;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	a	tick
	m	()Z	c	canContinueToUse
	m	()V	e	stop
c	cnn	net/minecraft/world/entity/animal/WaterAnimal
	f	I	d	AMBIENT_SOUND_INTERVAL
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()I	W	getAmbientSoundInterval
	m	(Laub;)I	e	getBaseExperienceReward
	m	(Laub;I)V	a	handleAirSupply
	m	()V	az	baseTick
	m	()Z	cN	isPushedByFluid
	m	()Z	v	canBeLeashed
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkSurfaceWaterAnimalSpawnRules
c	cno	net/minecraft/world/entity/animal/allay/Allay
	f	Lkg;	e	ITEM_PICKUP_REACH
	f	I	ck	LIFTING_ITEM_ANIMATION_DURATION
	f	F	cl	DANCING_LOOP_DURATION
	f	F	cm	SPINNING_ANIMATION_DURATION
	f	I	cn	DEFAULT_DUPLICATION_COOLDOWN
	f	I	co	DUPLICATION_COOLDOWN_TICKS
	f	I	cp	NUM_OF_DUPLICATION_HEARTS
	f	I	a	MAX_NOTEBLOCK_DISTANCE
	f	Lalh;	cq	DATA_DANCING
	f	Lalh;	cr	DATA_CAN_DUPLICATE
	f	Lcom/google/common/collect/ImmutableList;	b	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	c	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	d	THROW_SOUND_PITCHES
	f	Leiy;	cs	dynamicVibrationListener
	f	Lejk$a;	ct	vibrationData
	f	Lejk$d;	cu	vibrationUser
	f	Leiy;	cv	dynamicJukeboxListener
	f	Lbxr;	cw	inventory
	f	Ljb;	cx	jukeboxPos
	f	J	cy	duplicationCooldown
	f	F	cz	holdingItemAnimationTicks
	f	F	cA	holdingItemAnimationTicks0
	f	F	cB	dancingAnimationTicks
	f	F	cC	spinningAnimationTicks
	f	F	cD	spinningAnimationTicks0
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()Lcbr$a;	l	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfis;)V	k	travel
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbzm;)Z	u	considersEntityAsAlly
	m	(Lbzm;)Z	G	isLikedPlayer
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	fk	getSoundVolume
	m	(Laub;)V	a	customServerAiStep
	m	()V	e_	aiStep
	m	()V	g	tick
	m	()Z	fU	canPickUpLoot
	m	()Z	m	hasItemInHand
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	()Z	gK	isOnPickupCooldown
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ljb;Z)V	b	setJukeboxPlaying
	m	()Lbxr;	n	getInventory
	m	()Lkg;	ac	getPickupReach
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	(Ldcv;Ldcv;)Z	c	allayConsidersItemEqual
	m	(Ldcv;Ldcv;)Z	d	hasNonMatchingPotion
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	()V	ah	sendDebugPackets
	m	()Z	bd	isFlapping
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
	m	()Z	t	isDancing
	m	(Z)V	x	setDancing
	m	()Z	gL	shouldStopDancing
	m	(F)F	J	getHoldingItemAnimationProgress
	m	()Z	gH	isSpinning
	m	(F)F	K	getSpinningProgress
	m	(Ldcv;Ldcv;)Z	a	equipmentHasChanged
	m	(Laub;)V	f	dropEquipment
	m	(D)Z	h	removeWhenFarAway
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gF	shouldStayCloseToLeashHolder
	m	()V	gM	updateDuplicationCooldown
	m	(J)V	a	setDuplicationCooldown
	m	()V	gN	duplicateAllay
	m	()V	gO	resetDuplicationCooldown
	m	()Z	gP	canDuplicate
	m	(Lcut;Ldcv;)V	a	removeInteractionItem
	m	()Lfis;	F	getLeashOffset
	m	(B)V	b	handleEntityEvent
	m	()V	gQ	spawnHeartParticle
	m	()Lejk$a;	gI	getVibrationData
	m	()Lejk$d;	gJ	getVibrationUser
	m	(Laub;Ldcv;)V	d	lambda$dropEquipment$0
	m	()V	<clinit>	<clinit>
c	cno$a	net/minecraft/world/entity/animal/allay/Allay$JukeboxListener
	f	Lejf;	b	listenerSource
	f	I	c	listenerRadius
	f	Lcno;	a	this$0
	m	(Lcno;Lejf;I)V	<init>	<init>
	m	()Lejf;	a	getListenerSource
	m	()I	b	getListenerRadius
	m	(Laub;Ljl;Lejb$a;Lfis;)Z	a	handleGameEvent
c	cno$b	net/minecraft/world/entity/animal/allay/Allay$VibrationUser
	f	I	b	VIBRATION_EVENT_LISTENER_RANGE
	f	Lejf;	c	positionSource
	f	Lcno;	a	this$0
	m	(Lcno;)V	<init>	<init>
	m	()I	a	getListenerRadius
	m	()Lejf;	b	getPositionSource
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Laub;Ljb;Ljl;Lbzm;Lbzm;F)V	a	onReceiveVibration
	m	()Lbae;	c	getListenableEvents
c	cnp	net/minecraft/world/entity/animal/allay/AllayAi
	f	F	a	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	b	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET
	f	F	c	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM
	f	F	d	SPEED_MULTIPLIER_WHEN_PANICKING
	f	I	e	CLOSE_ENOUGH_TO_TARGET
	f	I	f	TOO_FAR_FROM_TARGET
	f	I	g	MAX_LOOK_DISTANCE
	f	I	h	MIN_WAIT_DURATION
	f	I	i	MAX_WAIT_DURATION
	f	I	j	TIME_TO_FORGET_NOTEBLOCK
	f	I	k	DISTANCE_TO_WANTED_ITEM
	f	I	l	GIVE_ITEM_TIMEOUT_DURATION
	m	()V	<init>	<init>
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcno;)V	a	updateActivity
	m	(Lcam;Ljb;)V	a	hearNoteblock
	m	(Lcam;)Ljava/util/Optional;	b	getItemDepositPosition
	m	(Lcam;)Z	c	hasWantedItem
	m	(Lcam;Lcbm;Ljk;)Z	a	shouldDepositItemsAtLikedNoteblock
	m	(Lcam;)Ljava/util/Optional;	d	getLikedPlayerPositionTracker
	m	(Lcam;)Ljava/util/Optional;	a	getLikedPlayer
	m	(Lauc;)Lcdr;	a	lambda$getLikedPlayerPositionTracker$1
	m	(Lcno;)Z	b	lambda$initIdleActivity$0
c	cnq	net/minecraft/world/entity/animal/allay/package-info
c	cnr	net/minecraft/world/entity/animal/armadillo/Armadillo
	f	F	ck	BABY_SCALE
	f	F	cl	MAX_HEAD_ROTATION_EXTENT
	f	I	cm	SCARE_CHECK_INTERVAL
	f	D	cr	SCARE_DISTANCE_HORIZONTAL
	f	D	cs	SCARE_DISTANCE_VERTICAL
	f	Lalh;	ct	ARMADILLO_STATE
	f	J	cu	inStateTicks
	f	Lbzd;	co	rollOutAnimationState
	f	Lbzd;	cp	rollUpAnimationState
	f	Lbzd;	cq	peekAnimationState
	f	I	cv	scuteTime
	f	Z	cw	peekReceivedClient
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Lcbr$a;	m	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	n	isScared
	m	()Z	t	shouldHideInShell
	m	()Z	gH	shouldSwitchToScaredState
	m	()Lcnr$a;	gI	getState
	m	()V	ah	sendDebugPackets
	m	(Lcnr$a;)V	a	switchToState
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Laub;)V	a	customServerAiStep
	m	()I	gU	pickNextScuteDropTime
	m	()V	g	tick
	m	()F	ep	getAgeScale
	m	()V	gV	setupAnimationStates
	m	(B)V	b	handleEntityEvent
	m	(Ldcv;)Z	i	isFood
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkArmadilloSpawnRules
	m	(Lcam;)Z	i	isScaredBy
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	gJ	rollUp
	m	()V	gK	rollOut
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Z	gL	brushOffScute
	m	()Z	gT	canStayRolledUp
	m	()Z	gO	canFallInLove
	m	()Layy;	p	getAmbientSound
	m	()V	gN	playEatingSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()I	gh	getMaxHeadYRot
	m	()Lcgg;	O	createBodyControl
	m	(Ljava/lang/Integer;)V	a	lambda$readAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	cnr$1	net/minecraft/world/entity/animal/armadillo/Armadillo$1
	f	Lcnr;	a	this$0
	m	(Lcnr;Lcao;)V	<init>	<init>
	m	()V	a	clientTick
c	cnr$a	net/minecraft/world/entity/animal/armadillo/Armadillo$ArmadilloState
	f	Lcnr$a;	a	IDLE
	f	Lcnr$a;	b	ROLLING
	f	Lcnr$a;	c	SCARED
	f	Lcnr$a;	d	UNROLLING
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	Lzm;	e	STREAM_CODEC
	f	Ljava/lang/String;	h	name
	f	Z	i	isThreatened
	f	I	j	animationDuration
	f	I	k	id
	f	[Lcnr$a;	l	$VALUES
	m	()[Lcnr$a;	values	values
	m	(Ljava/lang/String;)Lcnr$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	d	id
	m	(J)Z	a	shouldHideInShell
	m	()Z	a	isThreatened
	m	()I	b	animationDuration
	m	()[Lcnr$a;	e	$values
	m	()V	<clinit>	<clinit>
c	cnr$a$1	net/minecraft/world/entity/animal/armadillo/Armadillo$ArmadilloState$1
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
	m	(J)Z	a	shouldHideInShell
c	cnr$a$2	net/minecraft/world/entity/animal/armadillo/Armadillo$ArmadilloState$2
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
	m	(J)Z	a	shouldHideInShell
c	cnr$a$3	net/minecraft/world/entity/animal/armadillo/Armadillo$ArmadilloState$3
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
	m	(J)Z	a	shouldHideInShell
c	cnr$a$4	net/minecraft/world/entity/animal/armadillo/Armadillo$ArmadilloState$4
	m	(Ljava/lang/String;ILjava/lang/String;ZII)V	<init>	<init>
	m	(J)Z	a	shouldHideInShell
c	cns	net/minecraft/world/entity/animal/armadillo/ArmadilloAi
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	D	f	DEFAULT_CLOSE_ENOUGH_DIST
	f	D	g	BABY_CLOSE_ENOUGH_DIST
	f	Lbwu;	h	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	i	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	j	MEMORY_TYPES
	f	Lcdo;	k	ARMADILLO_ROLLING_OUT
	m	()V	<init>	<init>
	m	()Lcbm$b;	a	brainProvider
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcbm;)V	d	initScaredActivity
	m	(Lcnr;)V	a	updateActivity
	m	()Ljava/util/function/Predicate;	b	getTemptations
	m	(Ldcv;)Z	a	lambda$getTemptations$5
	m	(Lcam;)Ljava/lang/Double;	a	lambda$initIdleActivity$4
	m	(Lcam;)Ljava/lang/Float;	b	lambda$initIdleActivity$3
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcfr;)Lcft;	a	lambda$static$1
	m	(Laub;Lcnr;J)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cns$1	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$1
	m	()V	<init>	<init>
	m	(Laub;Lcao;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
c	cns$a	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$ArmadilloBallUp
	f	I	c	BALL_UP_STAY_IN_STATE
	f	I	d	TICKS_DELAY_TO_DETERMINE_IF_DANGER_IS_STILL_AROUND
	f	I	e	DANGER_DETECTED_RECENTLY_DANGER_THRESHOLD
	f	I	f	nextPeekTimer
	f	Z	g	dangerWasAround
	m	()V	<init>	<init>
	m	(Laub;Lcnr;J)V	a	tick
	m	(Lcnr;)I	a	pickNextPeekTimer
	m	(Laub;Lcnr;)Z	a	checkExtraStartConditions
	m	(Laub;Lcnr;J)Z	b	canStillUse
	m	(Laub;Lcnr;J)V	c	start
	m	(Laub;Lcnr;J)V	d	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	()V	<clinit>	<clinit>
c	cns$b	net/minecraft/world/entity/animal/armadillo/ArmadilloAi$ArmadilloPanic
	m	(F)V	<init>	<init>
	m	(Laub;Lcnr;J)V	a	start
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcam;J)V	d	start
	m	(Lcau;)Lbae;	a	lambda$new$0
c	cnt	net/minecraft/world/entity/animal/armadillo/package-info
c	cnu	net/minecraft/world/entity/animal/axolotl/Axolotl
	f	I	ck	TOTAL_PLAYDEAD_TIME
	f	I	cv	POSE_ANIMATION_TICKS
	f	Lcom/google/common/collect/ImmutableList;	cl	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cm	MEMORY_TYPES
	f	Lalh;	cw	DATA_VARIANT
	f	Lalh;	cx	DATA_PLAYING_DEAD
	f	Lalh;	cy	FROM_BUCKET
	f	D	co	PLAYER_REGEN_DETECTION_RANGE
	f	I	cp	RARE_VARIANT_CHANCE
	f	I	cz	AXOLOTL_TOTAL_AIR_SUPPLY
	f	Ljava/lang/String;	cq	VARIANT_TAG
	f	I	cA	REHYDRATE_AIR_SUPPLY
	f	I	cB	REGEN_BUFF_MAX_DURATION
	f	Z	cC	DEFAULT_FROM_BUCKET
	f	Lban;	cr	playingDeadAnimator
	f	Lban;	cs	inWaterAnimator
	f	Lban;	ct	onGroundAnimator
	f	Lban;	cu	movingAnimator
	f	I	cD	REGEN_BUFF_BASE_DURATION
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	X	playAmbientSound
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	az	baseTick
	m	()V	gK	tickAnimations
	m	(Laub;I)V	a	handleAirSupply
	m	()V	t	rehydrate
	m	()I	cv	getMaxAirSupply
	m	()Lcnu$e;	gH	getVariant
	m	(Lcnu$e;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Lbck;)Z	a	useRareVariant
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()Z	cN	isPushedByFluid
	m	(Z)V	y	setPlayingDead
	m	()Z	gI	isPlayingDead
	m	()Z	m	fromBucket
	m	(Z)V	x	setFromBucket
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	()Z	v	canBeLeashed
	m	(Laub;)V	a	customServerAiStep
	m	()Lcbr$a;	gJ	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()V	gA	playAttackSound
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()I	gg	getMaxHeadXRot
	m	()I	gh	getMaxHeadYRot
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldcv;)V	a_	saveToBucketTag
	m	(Lui;)V	a	loadFromBucketTag
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	n	getPickupSound
	m	()Z	eE	canBeSeenAsEnemy
	m	(Laub;Lcnu;Lcam;)V	a	onStopAttacking
	m	(Lcut;)V	g	applySupportingEffects
	m	()Z	af	requiresCustomPersistence
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	p	getAmbientSound
	m	()Layy;	aZ	getSwimSplashSound
	m	()Layy;	aY	getSwimSound
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()V	ah	sendDebugPackets
	m	(Lfis;)V	k	travel
	m	(Lcut;Lbxi;Ldcv;)V	a	usePlayerItem
	m	(D)Z	h	removeWhenFarAway
	m	()Lcam;	e	getTarget
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkAxolotlSpawnRules
	m	()V	gL	lambda$loadFromBucketTag$2
	m	(Lui;Ljava/lang/Long;)V	a	lambda$loadFromBucketTag$1
	m	(Lui;)V	b	lambda$saveToBucketTag$0
	m	()V	<clinit>	<clinit>
c	cnu$a	net/minecraft/world/entity/animal/axolotl/Axolotl$AnimationState
	f	Lcnu$a;	a	PLAYING_DEAD
	f	Lcnu$a;	b	IN_WATER
	f	Lcnu$a;	c	ON_GROUND
	f	Lcnu$a;	d	IN_AIR
	f	[Lcnu$a;	e	$VALUES
	m	()[Lcnu$a;	values	values
	m	(Ljava/lang/String;)Lcnu$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcnu$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cnu$b	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData
	f	[Lcnu$e;	a	types
	m	([Lcnu$e;)V	<init>	<init>
	m	(Lbck;)Lcnu$e;	a	getVariant
c	cnu$c	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl
	f	Lcnu;	h	this$0
	m	(Lcnu;Lcnu;I)V	<init>	<init>
	m	()V	a	tick
c	cnu$d	net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl
	f	Lcnu;	l	axolotl
	m	(Lcnu;)V	<init>	<init>
	m	()V	a	tick
c	cnu$e	net/minecraft/world/entity/animal/axolotl/Axolotl$Variant
	f	Lcnu$e;	a	LUCY
	f	Lcnu$e;	b	WILD
	f	Lcnu$e;	c	GOLD
	f	Lcnu$e;	d	CYAN
	f	Lcnu$e;	e	BLUE
	f	Lcnu$e;	f	DEFAULT
	f	Ljava/util/function/IntFunction;	j	BY_ID
	f	Lzm;	g	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Lcom/mojang/serialization/Codec;	i	LEGACY_CODEC
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Z	m	common
	f	[Lcnu$e;	n	$VALUES
	m	()[Lcnu$e;	values	values
	m	(Ljava/lang/String;)Lcnu$e;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Z)V	<init>	<init>
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)Lcnu$e;	a	byId
	m	(Lbck;)Lcnu$e;	a	getCommonSpawnVariant
	m	(Lbck;)Lcnu$e;	b	getRareSpawnVariant
	m	(Lbck;Z)Lcnu$e;	a	getSpawnVariant
	m	(I)[Lcnu$e;	b	lambda$getSpawnVariant$1
	m	(ZLcnu$e;)Z	a	lambda$getSpawnVariant$0
	m	()[Lcnu$e;	d	$values
	m	()V	<clinit>	<clinit>
c	cnv	net/minecraft/world/entity/animal/axolotl/AxolotlAi
	f	Lbwu;	a	ADULT_FOLLOW_RANGE
	f	F	b	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	e	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER
	f	F	f	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER
	m	()V	<init>	<init>
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initPlayDeadActivity
	m	(Lcbm;)V	c	initFightActivity
	m	(Lcbm;)V	d	initCoreActivity
	m	(Lcbm;)V	e	initIdleActivity
	m	(Lcam;)Z	a	canSetWalkTargetFromLookTarget
	m	(Lcnu;)V	a	updateActivity
	m	(Lcam;)F	b	getSpeedModifierChasing
	m	(Lcam;)F	c	getSpeedModifierFollowingAdult
	m	(Lcam;)F	d	getSpeedModifier
	m	(Laub;Lcnu;)Ljava/util/Optional;	a	findNearestValidAttackTarget
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Ldcv;)Z	a	lambda$getTemptations$0
	m	()V	<clinit>	<clinit>
c	cnw	net/minecraft/world/entity/animal/axolotl/PlayDead
	m	()V	<init>	<init>
	m	(Laub;Lcnu;)Z	a	checkExtraStartConditions
	m	(Laub;Lcnu;J)Z	a	canStillUse
	m	(Laub;Lcnu;J)V	b	start
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	d	start
c	cnx	net/minecraft/world/entity/animal/axolotl/ValidatePlayDead
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	cny	net/minecraft/world/entity/animal/axolotl/package-info
c	cnz	net/minecraft/world/entity/animal/camel/Camel
	f	F	ck	BABY_SCALE
	f	I	cl	DASH_COOLDOWN_TICKS
	f	I	cm	MAX_HEAD_Y_ROT
	f	F	cH	RUNNING_SPEED_BONUS
	f	F	cI	DASH_VERTICAL_MOMENTUM
	f	F	cJ	DASH_HORIZONTAL_MOMENTUM
	f	I	cM	DASH_MINIMUM_DURATION_TICKS
	f	I	cN	SITDOWN_DURATION_TICKS
	f	I	cO	STANDUP_DURATION_TICKS
	f	I	cP	IDLE_MINIMAL_DURATION_TICKS
	f	F	cQ	SITTING_HEIGHT_DIFFERENCE
	f	J	cR	DEFAULT_LAST_POSE_CHANGE_TICK
	f	Lalh;	co	DASH
	f	Lalh;	cp	LAST_POSE_CHANGE_TICK
	f	Lbzd;	cq	sitAnimationState
	f	Lbzd;	cr	sitPoseAnimationState
	f	Lbzd;	cs	sitUpAnimationState
	f	Lbzd;	ct	idleAnimationState
	f	Lbzd;	cu	dashAnimationState
	f	Lbzp;	cS	SITTING_DIMENSIONS
	f	I	cT	dashCooldown
	f	I	cU	idleAnimationTimeout
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Lcbr$a;	m	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkCamelSpawnRules
	m	()Lcbm$b;	ei	brainProvider
	m	()V	H	registerGoals
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Laub;)V	a	customServerAiStep
	m	()V	g	tick
	m	()V	hr	setupAnimationStates
	m	(F)V	A	updateWalkAnimation
	m	(Lfis;)V	k	travel
	m	(Lcut;Lfis;)V	a	tickRidden
	m	()Z	n	refuseToMove
	m	(Lcut;)F	c	getRiddenSpeed
	m	(Lcam;)Lfir;	i	getRiddenRotation
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	()Z	a	canJump
	m	(I)V	b	onPlayerJump
	m	()Z	dS	canSprint
	m	(FLfis;)V	b	executeRidersJump
	m	()Z	t	isDashing
	m	(Z)V	x	setDashing
	m	(I)V	c	handleStartJump
	m	()V	b	handleStopJump
	m	()I	c	getJumpCooldown
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	z	onElasticLeashPull
	m	()[Lfis;	E	getQuadLeashOffsets
	m	()Z	gH	canCamelChangePose
	m	(Lcut;Ldcv;)Z	a	handleEating
	m	()Z	gI	canPerformRearing
	m	(Lcmd;)Z	a	canMate
	m	(Laub;Lbzc;)Lcnz;	b	getBreedOffspring
	m	()Layy;	gJ	getEatingSound
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	()F	ep	getAgeScale
	m	(ZFLbzp;F)D	a	getBodyAnchorAnimationYOffset
	m	(F)Lfis;	a_	getLeashOffset
	m	()I	gh	getMaxHeadYRot
	m	(Lbzm;)Z	s	canAddPassenger
	m	()V	ah	sendDebugPackets
	m	()Z	gK	isCamelSitting
	m	()Z	gL	isCamelVisuallySitting
	m	()Z	gT	isInPoseTransition
	m	()Z	hs	isVisuallySittingDown
	m	()V	gU	sitDown
	m	()V	gV	standUp
	m	()V	gW	standUpInstantly
	m	(J)V	a	resetLastPoseChangeTick
	m	(J)V	b	resetLastPoseChangeTickToFullStand
	m	()J	gX	getPoseTime
	m	(Lbzw;Ldcv;Ldle;)Ljl;	a	getEquipSound
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Z	gY	isTamed
	m	(Lcut;)V	b	openCustomInventoryScreen
	m	()Lcgg;	O	createBodyControl
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()V	<clinit>	<clinit>
c	cnz$a	net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl
	f	Lcnz;	a	this$0
	m	(Lcnz;Lcnz;)V	<init>	<init>
	m	()V	a	clientTick
c	cnz$b	net/minecraft/world/entity/animal/camel/Camel$CamelLookControl
	f	Lcnz;	h	this$0
	m	(Lcnz;)V	<init>	<init>
	m	()V	a	tick
c	cnz$c	net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl
	f	Lcnz;	l	this$0
	m	(Lcnz;)V	<init>	<init>
	m	()V	a	tick
c	coa	net/minecraft/world/entity/animal/camel/CamelAi
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	d	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	e	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	Lbwu;	f	ADULT_FOLLOW_RANGE
	f	Lcom/google/common/collect/ImmutableList;	g	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	h	MEMORY_TYPES
	m	()V	<init>	<init>
	m	(Lcnz;Lbck;)V	a	initMemories
	m	()Lcbm$b;	a	brainProvider
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcnz;)V	a	updateActivity
	m	()Ljava/util/function/Predicate;	b	getTemptations
	m	(Ldcv;)Z	a	lambda$getTemptations$2
	m	(Lcam;)Ljava/lang/Double;	a	lambda$initIdleActivity$1
	m	(Lcam;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	coa$a	net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic
	m	(F)V	<init>	<init>
	m	(Laub;Lcnz;J)V	a	start
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcam;J)V	d	start
c	coa$b	net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting
	f	I	c	minimalPoseTicks
	m	(I)V	<init>	<init>
	m	(Laub;Lcnz;)Z	a	checkExtraStartConditions
	m	(Laub;Lcnz;J)V	a	start
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)V	d	start
c	cob	net/minecraft/world/entity/animal/camel/package-info
c	coc	net/minecraft/world/entity/animal/frog/Frog
	f	Lcom/google/common/collect/ImmutableList;	ck	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cl	MEMORY_TYPES
	f	Lalh;	cr	DATA_VARIANT_ID
	f	Lalh;	cs	DATA_TONGUE_TARGET_ID
	f	I	ct	FROG_FALL_DAMAGE_REDUCTION
	f	Lamd;	cu	DEFAULT_VARIANT
	f	Lbzd;	cm	jumpAnimationState
	f	Lbzd;	co	croakAnimationState
	f	Lbzd;	cp	tongueAnimationState
	f	Lbzd;	cq	swimIdleAnimationState
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	m	eraseTongueTarget
	m	()Ljava/util/Optional;	n	getTongueTarget
	m	(Lbzm;)V	G	setTongueTarget
	m	()I	gj	getHeadRotSpeed
	m	()I	gh	getMaxHeadYRot
	m	()Ljl;	t	getVariant
	m	(Ljl;)V	b	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;)V	a	customServerAiStep
	m	()V	g	tick
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(F)V	A	updateWalkAnimation
	m	()V	gN	playEatingSound
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Z	g_	isBaby
	m	(Z)V	a	setBaby
	m	(Laub;Lcmd;)V	a	spawnChildFromBreeding
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Lcbr$a;	gH	createAttributes
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Z	cN	isPushedByFluid
	m	()V	ah	sendDebugPackets
	m	(DF)I	a	calculateFallDamage
	m	(Lfis;)V	k	travel
	m	(Lcam;)Z	i	canEat
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()Lcam;	e	getTarget
	m	(Ldcv;)Z	i	isFood
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkFrogSpawnRules
	m	()V	<clinit>	<clinit>
c	coc$a	net/minecraft/world/entity/animal/frog/Frog$FrogLookControl
	f	Lcoc;	h	this$0
	m	(Lcoc;Lcao;)V	<init>	<init>
	m	()Z	c	resetXRotOnTick
c	coc$b	net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator
	f	Ljb$a;	a	belowPos
	m	(Z)V	<init>	<init>
	m	()Lfax;	a	getStart
	m	(Lfbe;III)Lfbc;	a	getPathType
c	coc$c	net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation
	m	(Lcoc;Ldmu;)V	<init>	<init>
	m	(Lfbc;)Z	b	canCutCorner
	m	(I)Lfbb;	a	createPathFinder
c	cod	net/minecraft/world/entity/animal/frog/FrogAi
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	c	SPEED_MULTIPLIER_ON_LAND
	f	F	d	SPEED_MULTIPLIER_IN_WATER
	f	Lbwu;	e	TIME_BETWEEN_LONG_JUMPS
	f	I	f	MAX_LONG_JUMP_HEIGHT
	f	I	g	MAX_LONG_JUMP_WIDTH
	f	F	h	MAX_JUMP_VELOCITY_MULTIPLIER
	f	F	i	SPEED_MULTIPLIER_WHEN_TEMPTED
	m	()V	<init>	<init>
	m	(Lcoc;Lbck;)V	a	initMemories
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcbm;)V	d	initSwimActivity
	m	(Lcbm;)V	e	initLaySpawnActivity
	m	(Lcbm;)V	f	initJumpActivity
	m	(Lcbm;)V	g	initTongueActivity
	m	(Lcao;Ljb;)Z	a	isAcceptableLandingSpot
	m	(Lcoc;)Z	b	canAttack
	m	(Lcoc;)V	a	updateActivity
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Ldcv;)Z	a	lambda$getTemptations$9
	m	(Lcoc;)Layy;	c	lambda$initJumpActivity$8
	m	(Laub;Lcoc;)Ljava/util/Optional;	a	lambda$initLaySpawnActivity$7
	m	(Laub;Lcoc;)Z	b	lambda$initLaySpawnActivity$6
	m	(Laub;Lcoc;)Ljava/util/Optional;	c	lambda$initSwimActivity$5
	m	(Laub;Lcoc;)Z	d	lambda$initSwimActivity$4
	m	(Lcam;)Ljava/lang/Float;	a	lambda$initSwimActivity$3
	m	(Laub;Lcoc;)Ljava/util/Optional;	e	lambda$initIdleActivity$2
	m	(Laub;Lcoc;)Z	f	lambda$initIdleActivity$1
	m	(Lcam;)Ljava/lang/Float;	b	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	coe	net/minecraft/world/entity/animal/frog/FrogVariant
	f	Ljc;	e	assetInfo
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljc;)V	<init>	<init>
	m	(Ljc;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljc;	b	assetInfo
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cof	net/minecraft/world/entity/animal/frog/FrogVariants
	f	Lamd;	a	TEMPERATE
	f	Lamd;	b	WARM
	f	Lamd;	c	COLD
	m	(Lame;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Ljava/lang/String;Lbae;)V	a	register
	m	(Lqq;Lamd;Ljava/lang/String;Lcxa;)V	a	register
	m	()V	<clinit>	<clinit>
c	cog	net/minecraft/world/entity/animal/frog/ShootTongue
	f	I	c	TIME_OUT_DURATION
	f	I	d	CATCH_ANIMATION_DURATION
	f	I	e	TONGUE_ANIMATION_DURATION
	f	F	h	EATING_DISTANCE
	f	F	i	EATING_MOVEMENT_FACTOR
	f	I	f	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION
	f	I	g	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY
	f	I	j	eatAnimationTimer
	f	I	k	calculatePathCounter
	f	Layy;	l	tongueSound
	f	Layy;	m	eatSound
	f	Lfis;	n	itemSpawnPos
	f	Lcog$a;	o	state
	m	(Layy;Layy;)V	<init>	<init>
	m	(Laub;Lcoc;)Z	a	checkExtraStartConditions
	m	(Laub;Lcoc;J)Z	a	canStillUse
	m	(Laub;Lcoc;J)V	b	start
	m	(Laub;Lcoc;J)V	c	stop
	m	(Laub;Lcoc;)V	b	eatEntity
	m	(Laub;Lcoc;J)V	d	tick
	m	(Lcoc;Lcam;)Z	a	canPathfindToTarget
	m	(Lcoc;Lcam;)V	b	addUnreachableTargetToMemory
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
c	cog$a	net/minecraft/world/entity/animal/frog/ShootTongue$State
	f	Lcog$a;	a	MOVE_TO_TARGET
	f	Lcog$a;	b	CATCH_ANIMATION
	f	Lcog$a;	c	EAT_ANIMATION
	f	Lcog$a;	d	DONE
	f	[Lcog$a;	e	$VALUES
	m	()[Lcog$a;	values	values
	m	(Ljava/lang/String;)Lcog$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcog$a;	a	$values
	m	()V	<clinit>	<clinit>
c	coh	net/minecraft/world/entity/animal/frog/Tadpole
	f	I	ck	DEFAULT_AGE
	f	I	a	ticksToBeFrog
	f	F	b	HITBOX_WIDTH
	f	F	c	HITBOX_HEIGHT
	f	I	cl	age
	f	Lcom/google/common/collect/ImmutableList;	e	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	f	MEMORY_TYPES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()Layy;	gH	getFlopSound
	m	(Laub;)V	a	customServerAiStep
	m	()Lcbr$a;	gI	createAttributes
	m	()V	e_	aiStep
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	ah	sendDebugPackets
	m	()Z	m	fromBucket
	m	(Z)V	x	setFromBucket
	m	(Ldcv;)V	a_	saveToBucketTag
	m	(Lui;)V	a	loadFromBucketTag
	m	()Ldcv;	a	getBucketItemStack
	m	()Layy;	n	getPickupSound
	m	(Ldcv;)Z	j	isFood
	m	(Lcut;Ldcv;)V	a	feed
	m	(Lcut;Ldcv;)V	b	usePlayerItem
	m	()I	gJ	getAge
	m	(I)V	b	ageUp
	m	(I)V	c	setAge
	m	()V	gK	ageUp
	m	()I	gL	getTicksLeftUntilAdult
	m	()Z	et	shouldDropExperience
	m	(Laub;Lcoc;)V	a	lambda$ageUp$1
	m	(Lui;)V	b	lambda$saveToBucketTag$0
	m	()V	<clinit>	<clinit>
c	coi	net/minecraft/world/entity/animal/frog/TadpoleAi
	f	F	a	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER
	f	F	c	SPEED_MULTIPLIER_WHEN_TEMPTED
	m	()V	<init>	<init>
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcoh;)V	a	updateActivity
	m	(Lcam;)Ljava/lang/Float;	a	lambda$initIdleActivity$0
c	coj	net/minecraft/world/entity/animal/frog/package-info
c	cok	net/minecraft/world/entity/animal/goat/Goat
	f	Lbzp;	ck	LONG_JUMPING_DIMENSIONS
	f	I	cr	ADULT_ATTACK_DAMAGE
	f	I	cs	BABY_ATTACK_DAMAGE
	f	Lcom/google/common/collect/ImmutableList;	cl	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cm	MEMORY_TYPES
	f	I	co	GOAT_FALL_DAMAGE_REDUCTION
	f	D	cp	GOAT_SCREAMING_CHANCE
	f	D	cq	UNIHORN_CHANCE
	f	Lalh;	ct	DATA_IS_SCREAMING_GOAT
	f	Lalh;	cu	DATA_HAS_LEFT_HORN
	f	Lalh;	cv	DATA_HAS_RIGHT_HORN
	f	Z	cw	DEFAULT_IS_SCREAMING
	f	Z	cx	DEFAULT_HAS_LEFT_HORN
	f	Z	cy	DEFAULT_HAS_RIGHT_HORN
	f	Z	cz	isLoweringHead
	f	I	cA	lowerHeadTick
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Ldcv;	m	createHorn
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbr$a;	n	createAttributes
	m	()V	h	ageBoundaryReached
	m	(DF)I	a	calculateFallDamage
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Layy;	t	getMilkingSound
	m	(Laub;Lbzc;)Lcok;	b	getBreedOffspring
	m	()Lcbm;	eh	getBrain
	m	(Laub;)V	a	customServerAiStep
	m	()I	gh	getMaxHeadYRot
	m	(F)V	r	setYHeadRot
	m	()V	gN	playEatingSound
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	ah	sendDebugPackets
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(B)V	b	handleEntityEvent
	m	()V	e_	aiStep
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	gH	hasLeftHorn
	m	()Z	gI	hasRightHorn
	m	()Z	gJ	dropHorn
	m	()V	gK	addHorns
	m	()V	gL	removeHorns
	m	()Z	gT	isScreamingGoat
	m	(Z)V	x	setScreamingGoat
	m	()F	gU	getRammingXHeadRot
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkGoatSpawnRules
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Ldcv;	gV	lambda$createHorn$1
	m	(Ljl;)Ldcv;	b	lambda$createHorn$0
	m	()V	<clinit>	<clinit>
c	col	net/minecraft/world/entity/animal/goat/GoatAi
	f	I	a	RAM_PREPARE_TIME
	f	I	b	RAM_MAX_DISTANCE
	f	Lbwu;	i	ADULT_FOLLOW_RANGE
	f	F	j	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	k	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	f	F	l	SPEED_MULTIPLIER_WHEN_TEMPTED
	f	F	m	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	n	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM
	f	Lbwu;	o	TIME_BETWEEN_LONG_JUMPS
	f	I	c	MAX_LONG_JUMP_HEIGHT
	f	I	d	MAX_LONG_JUMP_WIDTH
	f	F	e	MAX_JUMP_VELOCITY_MULTIPLIER
	f	Lbwu;	p	TIME_BETWEEN_RAMS
	f	Lbwu;	q	TIME_BETWEEN_RAMS_SCREAMER
	f	Lclc;	r	RAM_TARGET_CONDITIONS
	f	F	s	SPEED_MULTIPLIER_WHEN_RAMMING
	f	I	f	RAM_MIN_DISTANCE
	f	F	g	ADULT_RAM_KNOCKBACK_FORCE
	f	F	h	BABY_RAM_KNOCKBACK_FORCE
	m	()V	<init>	<init>
	m	(Lcok;Lbck;)V	a	initMemories
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcbm;)V	d	initLongJumpActivity
	m	(Lcbm;)V	e	initRamActivity
	m	(Lcok;)V	a	updateActivity
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Ldcv;)Z	a	lambda$getTemptations$9
	m	(Lcok;)Layy;	b	lambda$initRamActivity$8
	m	(Lcok;)I	c	lambda$initRamActivity$7
	m	(Lcok;)Layy;	d	lambda$initRamActivity$6
	m	(Lcok;)Layy;	e	lambda$initRamActivity$5
	m	(Lcok;)D	f	lambda$initRamActivity$4
	m	(Lcok;)Lbwu;	g	lambda$initRamActivity$3
	m	(Lcok;)Layy;	h	lambda$initLongJumpActivity$2
	m	(Lcam;)Ljava/lang/Float;	a	lambda$initIdleActivity$1
	m	(Lcam;Laub;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	coo	net/minecraft/world/entity/animal/goat/package-info
c	cop	net/minecraft/world/entity/animal/horse/AbstractChestedHorse
	f	Lalh;	ck	DATA_ID_CHEST
	f	Z	cl	DEFAULT_HAS_CHEST
	f	Lbzp;	cm	babyDimensions
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbck;)V	a	randomizeAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	m	createBaseChestedHorseAttributes
	m	()Z	n	hasChest
	m	(Z)V	x	setChest
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Laub;)V	f	dropEquipment
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(I)Lcbd;	a_	getSlot
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcut;Ldcv;)V	d	equipChest
	m	()[Lfis;	E	getQuadLeashOffsets
	m	()V	t	playChestEquipsSound
	m	()I	ac_	getInventoryColumns
	m	()V	<clinit>	<clinit>
c	cop$1	net/minecraft/world/entity/animal/horse/AbstractChestedHorse$1
	f	Lcop;	b	this$0
	m	(Lcop;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	coq	net/minecraft/world/entity/animal/horse/AbstractHorse
	f	I	cv	CHEST_SLOT_OFFSET
	f	I	cw	INVENTORY_SLOT_OFFSET
	f	D	cx	BREEDING_CROSS_FACTOR
	f	F	ck	MIN_MOVEMENT_SPEED
	f	F	cl	MAX_MOVEMENT_SPEED
	f	F	cm	MIN_JUMP_STRENGTH
	f	F	co	MAX_JUMP_STRENGTH
	f	F	cp	MIN_HEALTH
	f	F	cq	MAX_HEALTH
	f	F	cr	BACKWARDS_MOVE_SPEED_FACTOR
	f	F	cs	SIDEWAYS_MOVE_SPEED_FACTOR
	f	Lclc$a;	ct	PARENT_HORSE_SELECTOR
	f	Lclc;	cu	MOMMY_TARGETING
	f	Lalh;	cH	DATA_ID_FLAGS
	f	I	cI	FLAG_TAME
	f	I	cJ	FLAG_BRED
	f	I	cM	FLAG_EATING
	f	I	cN	FLAG_STANDING
	f	I	cO	FLAG_OPEN_MOUTH
	f	I	cy	INVENTORY_ROWS
	f	I	cP	DEFAULT_TEMPER
	f	Z	cQ	DEFAULT_EATING_HAYSTACK
	f	Z	cR	DEFAULT_BRED
	f	Z	cS	DEFAULT_TAME
	f	I	cT	eatingCounter
	f	I	cU	mouthCounter
	f	I	cV	standCounter
	f	I	cz	tailCounter
	f	I	cA	sprintCounter
	f	Lbxr;	cB	inventory
	f	I	cC	temper
	f	F	cD	playerJumpPendingScale
	f	Z	cE	allowStandSliding
	f	F	cW	eatAnim
	f	F	cX	eatAnimO
	f	F	cY	standAnim
	f	F	cZ	standAnimO
	f	F	da	mouthAnim
	f	F	db	mouthAnimO
	f	Z	cF	canGallop
	f	I	cG	gallopSoundCounter
	f	Lbzs;	dc	owner
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()V	gZ	addBehaviourGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	(I)Z	s	getFlag
	m	(IZ)V	d	setFlag
	m	()Z	gY	isTamed
	m	()Lbzs;	d	getOwnerReference
	m	(Lcam;)V	j	setOwner
	m	(Z)V	y	setTamed
	m	()V	z	onElasticLeashPull
	m	()Z	D	supportQuadLeash
	m	()[Lfis;	E	getQuadLeashOffsets
	m	()Z	ha	isEating
	m	()Z	hb	isStanding
	m	()Z	hc	isBred
	m	(Z)V	z	setBred
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lcut;Ldcv;)V	b	equipBodyArmor
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	()I	hd	getTemper
	m	(I)V	t	setTemper
	m	(I)I	u	modifyTemper
	m	()Z	bL	isPushable
	m	()V	m	eating
	m	(DFLbyb;)Z	a	causeFallDamage
	m	()I	he	getInventorySize
	m	(I)I	v	getInventorySize
	m	()V	hf	createInventory
	m	(Lbzw;Ldcv;Ldle;)Ljl;	a	getEquipSound
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Z	gI	canPerformRearing
	m	()Layy;	gJ	getEatingSound
	m	()Layy;	hg	getAngrySound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Ldxx;)Z	b	isWoodSoundType
	m	(Ldxx;)V	a	playGallopSound
	m	()Lcbr$a;	hh	createBaseHorseAttributes
	m	()I	gk	getMaxSpawnClusterSize
	m	()I	hi	getMaxTemper
	m	()F	fk	getSoundVolume
	m	()I	W	getAmbientSoundInterval
	m	(Lcut;)V	b	openCustomInventoryScreen
	m	(Lcut;Ldcv;)Lbxj;	c	fedFood
	m	(Lcut;Ldcv;)Z	a	handleEating
	m	(Lcut;)V	g	doPlayerRide
	m	()Z	fm	isImmobile
	m	(Ldcv;)Z	i	isFood
	m	()V	n	moveTail
	m	(Laub;)V	f	dropEquipment
	m	()V	e_	aiStep
	m	(Laub;)V	g	followMommy
	m	()Z	hj	canEatGrass
	m	()V	g	tick
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	t	openMouth
	m	(Z)V	A	setEating
	m	(I)V	w	setStanding
	m	()V	hk	clearStanding
	m	()Layy;	hl	getAmbientStandSound
	m	()V	hm	standIfPossible
	m	()V	hn	makeMad
	m	(Lcut;)Z	i	tameWithName
	m	(Lcut;Lfis;)V	a	tickRidden
	m	(Lcam;)Lfir;	i	getRiddenRotation
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	(Lcut;)F	c	getRiddenSpeed
	m	(FLfis;)V	b	executeRidersJump
	m	()V	ho	playJumpSound
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcmd;)Z	a	canMate
	m	()Z	hp	canParent
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lbzc;Lcoq;)V	a	setOffspringAttributes
	m	(Lbzc;Lcoq;Ljl;DD)V	a	setOffspringAttribute
	m	(DDDDLbck;)D	a	createOffspringAttribute
	m	(F)F	J	getEatAnim
	m	(F)F	K	getStandAnim
	m	(F)F	L	getMouthAnim
	m	(I)V	b	onPlayerJump
	m	()Z	a	canJump
	m	(I)V	c	handleStartJump
	m	()V	b	handleStopJump
	m	(Z)V	B	spawnTamingParticles
	m	(B)V	b	handleEntityEvent
	m	(Lbzm;Lbzm$b;)V	a	positionRider
	m	(Ljava/util/function/IntUnaryOperator;)F	a	generateMaxHealth
	m	(Ljava/util/function/DoubleSupplier;)D	a	generateJumpStrength
	m	(Ljava/util/function/DoubleSupplier;)D	b	generateSpeed
	m	()Z	eV	onClimbable
	m	(I)Lcbd;	a_	getSlot
	m	()Lcam;	cY	getControllingPassenger
	m	(Lfis;Lcam;)Lfis;	a	getDismountLocationInDirection
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	(Lbck;)V	a	randomizeAttributes
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbxc;)Z	a	hasInventoryChanged
	m	()I	hq	getAmbientStandInterval
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	()I	ac_	getInventoryColumns
	m	(Ldcv;)Z	j	lambda$addBehaviourGoals$7
	m	(Lcam;Laub;)Z	a	lambda$static$6
	m	(I)I	x	lambda$static$5
	m	(I)I	y	lambda$static$4
	m	()D	gK	lambda$static$3
	m	()D	gL	lambda$static$2
	m	()D	gT	lambda$static$1
	m	()D	gU	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cor	net/minecraft/world/entity/animal/horse/Donkey
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Layy;	p	getAmbientSound
	m	()Layy;	hg	getAngrySound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gJ	getEatingSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Lcmd;)Z	a	canMate
	m	()V	ho	playJumpSound
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
c	cos	net/minecraft/world/entity/animal/horse/Horse
	f	Lalh;	ck	DATA_ID_TYPE_VARIANT
	f	Lbzp;	cl	BABY_DIMENSIONS
	f	I	cm	DEFAULT_VARIANT
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbck;)V	a	randomizeAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(I)V	x	setTypeVariant
	m	()I	t	getTypeVariant
	m	(Lcoz;Lcou;)V	a	setVariantAndMarkings
	m	()Lcoz;	m	getVariant
	m	(Lcoz;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	()Lcou;	n	getMarkings
	m	(Ldxx;)V	a	playGallopSound
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gJ	getEatingSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	hg	getAngrySound
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcmd;)Z	a	canMate
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lbyb;F)V	c	hurtArmor
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()V	<clinit>	<clinit>
c	cos$a	net/minecraft/world/entity/animal/horse/Horse$HorseGroupData
	f	Lcoz;	a	variant
	m	(Lcoz;)V	<init>	<init>
c	cot	net/minecraft/world/entity/animal/horse/Llama
	f	I	ck	MAX_STRENGTH
	f	Lalh;	cl	DATA_STRENGTH_ID
	f	Lalh;	cm	DATA_VARIANT_ID
	f	Lbzp;	co	BABY_DIMENSIONS
	f	Z	cp	didSpit
	f	Lcot;	cq	caravanHead
	f	Lcot;	cr	caravanTail
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	gK	isTraderLlama
	m	(I)V	x	setStrength
	m	(Lbck;)V	b	setRandomStrength
	m	()I	gL	getStrength
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	H	registerGoals
	m	()Lcbr$a;	gT	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcot$d;	gU	getVariant
	m	(Lcot$d;)V	a	setVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Ldcv;)Z	a	handleEating
	m	()Z	fm	isImmobile
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Z	gI	canPerformRearing
	m	()Layy;	hg	getAngrySound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gJ	getEatingSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	t	playChestEquipsSound
	m	()I	ac_	getInventoryColumns
	m	(Lbzw;)Z	e	canUseSlot
	m	()I	hi	getMaxTemper
	m	(Lcmd;)Z	a	canMate
	m	(Laub;Lbzc;)Lcot;	b	getBreedOffspring
	m	()Lcot;	gV	makeNewLlama
	m	(Lcam;)V	k	spit
	m	(Z)V	C	setDidSpit
	m	(DFLbyb;)Z	a	causeFallDamage
	m	()V	gW	leaveCaravan
	m	(Lcot;)V	a	joinCaravan
	m	()Z	gX	hasCaravanTail
	m	()Z	hr	inCaravan
	m	()Lcot;	hs	getCaravanHead
	m	()D	gG	followLeashSpeed
	m	()Z	D	supportQuadLeash
	m	(Laub;)V	g	followMommy
	m	()Z	hj	canEatGrass
	m	(Lcam;F)V	a	performRangedAttack
	m	()Lfis;	F	getLeashOffset
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cot$a	net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal
	m	(Lcot;)V	<init>	<init>
	m	()D	l	getFollowDistance
	m	(Lcam;Laub;)Z	a	lambda$new$0
c	cot$b	net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData
	f	Lcot$d;	a	variant
	m	(Lcot$d;)V	<init>	<init>
c	cot$c	net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal
	m	(Lcot;)V	<init>	<init>
	m	()Z	c	canContinueToUse
c	cot$d	net/minecraft/world/entity/animal/horse/Llama$Variant
	f	Lcot$d;	a	CREAMY
	f	Lcot$d;	b	WHITE
	f	Lcot$d;	c	BROWN
	f	Lcot$d;	d	GRAY
	f	Lcot$d;	e	DEFAULT
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcom/mojang/serialization/Codec;	g	LEGACY_CODEC
	f	Lzm;	h	STREAM_CODEC
	f	I	j	id
	f	Ljava/lang/String;	k	name
	f	[Lcot$d;	l	$VALUES
	m	()[Lcot$d;	values	values
	m	(Ljava/lang/String;)Lcot$d;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	(I)Lcot$d;	a	byId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcot$d;	b	$values
	m	()V	<clinit>	<clinit>
c	cou	net/minecraft/world/entity/animal/horse/Markings
	f	Lcou;	a	NONE
	f	Lcou;	b	WHITE
	f	Lcou;	c	WHITE_FIELD
	f	Lcou;	d	WHITE_DOTS
	f	Lcou;	e	BLACK_DOTS
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	I	g	id
	f	[Lcou;	h	$VALUES
	m	()[Lcou;	values	values
	m	(Ljava/lang/String;)Lcou;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	getId
	m	(I)Lcou;	a	byId
	m	()[Lcou;	b	$values
	m	()V	<clinit>	<clinit>
c	cov	net/minecraft/world/entity/animal/horse/Mule
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Layy;	p	getAmbientSound
	m	()Layy;	hg	getAngrySound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gJ	getEatingSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()V	ho	playJumpSound
	m	()V	t	playChestEquipsSound
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
c	cow	net/minecraft/world/entity/animal/horse/SkeletonHorse
	f	Lcox;	ck	skeletonTrapGoal
	f	I	cl	TRAP_MAX_LIFE
	f	Z	cm	DEFAULT_IS_TRAP
	f	I	co	DEFAULT_TRAP_TIME
	f	Lbzp;	cp	BABY_DIMENSIONS
	f	Z	cq	isTrap
	f	I	cr	trapTime
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	m	createAttributes
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkSkeletonHorseSpawnRules
	m	(Lbck;)V	a	randomizeAttributes
	m	()V	gZ	addBehaviourGoals
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	aY	getSwimSound
	m	(F)V	g	playSwimSound
	m	()V	ho	playJumpSound
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()V	e_	aiStep
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()F	fq	getWaterSlowDown
	m	()Z	n	isTrap
	m	(Z)V	x	setTrap
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	<clinit>	<clinit>
c	cox	net/minecraft/world/entity/animal/horse/SkeletonTrapGoal
	f	Lcow;	a	horse
	m	(Lcow;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
	m	(Lbxh;)Lcoq;	a	createHorse
	m	(Lbxh;Lcoq;)Lcsd;	a	createSkeleton
	m	(Lcsd;Lbzw;Lbxh;)V	a	enchant
c	coy	net/minecraft/world/entity/animal/horse/TraderLlama
	f	I	ck	DEFAULT_DESPAWN_DELAY
	f	I	cl	despawnDelay
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	gK	isTraderLlama
	m	()Lcot;	gV	makeNewLlama
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	H	registerGoals
	m	(I)V	x	setDespawnDelay
	m	(Lcut;)V	g	doPlayerRide
	m	()V	e_	aiStep
	m	()V	hu	maybeDespawn
	m	()Z	hv	canDespawn
	m	()Z	hw	isLeashedToWanderingTrader
	m	()Z	hx	isLeashedToSomethingOtherThanTheWanderingTrader
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$0
c	coy$a	net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal
	f	Lcot;	a	llama
	f	Lcam;	b	ownerLastHurtBy
	f	I	c	timestamp
	m	(Lcot;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	coz	net/minecraft/world/entity/animal/horse/Variant
	f	Lcoz;	a	WHITE
	f	Lcoz;	b	CREAMY
	f	Lcoz;	c	CHESTNUT
	f	Lcoz;	d	BROWN
	f	Lcoz;	e	BLACK
	f	Lcoz;	f	GRAY
	f	Lcoz;	g	DARK_BROWN
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Ljava/util/function/IntFunction;	j	BY_ID
	f	Lzm;	i	STREAM_CODEC
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	[Lcoz;	m	$VALUES
	m	()[Lcoz;	values	values
	m	(Ljava/lang/String;)Lcoz;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	(I)Lcoz;	a	byId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcoz;	b	$values
	m	()V	<clinit>	<clinit>
c	cpa	net/minecraft/world/entity/animal/horse/ZombieHorse
	f	Lbzp;	ck	BABY_DIMENSIONS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	m	createAttributes
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkZombieHorseSpawnRules
	m	(Lbck;)V	a	randomizeAttributes
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	gZ	addBehaviourGoals
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()V	<clinit>	<clinit>
c	cpb	net/minecraft/world/entity/animal/horse/package-info
c	cpc	net/minecraft/world/entity/animal/package-info
c	cpd	net/minecraft/world/entity/animal/sheep/Sheep
	f	I	ck	EAT_ANIMATION_TICKS
	f	Lalh;	cl	DATA_WOOL_ID
	f	Ldbt;	cm	DEFAULT_COLOR
	f	Z	co	DEFAULT_SHEARED
	f	I	cp	eatAnimationTick
	f	Lcha;	cq	eatBlockGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Ldcv;)Z	i	isFood
	m	(Laub;)V	a	customServerAiStep
	m	()V	e_	aiStep
	m	()Lcbr$a;	m	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(B)V	b	handleEntityEvent
	m	(F)F	J	getHeadEatPositionScale
	m	(F)F	K	getHeadEatAngleScale
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Laub;Laza;Ldcv;)V	a	shear
	m	()Z	a	readyForShearing
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Ldbt;	n	getColor
	m	(Ldbt;)V	a	setColor
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	()Z	t	isSheared
	m	(Z)V	x	setSheared
	m	(Ldnl;Ljb;)Ldbt;	a	getRandomSheepColor
	m	(Laub;Lbzc;)Lcpd;	b	getBreedOffspring
	m	()V	V	ate
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Laub;Ldcv;)V	d	lambda$shear$1
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cpe	net/minecraft/world/entity/animal/sheep/SheepColorSpawnRules
	f	Lcpe$b;	a	TEMPERATE_SPAWN_CONFIGURATION
	f	Lcpe$b;	b	WARM_SPAWN_CONFIGURATION
	f	Lcpe$b;	c	COLD_SPAWN_CONFIGURATION
	m	()V	<init>	<init>
	m	(Ldbt;)Lcpe$a;	a	commonColors
	m	(Ljl;Lbck;)Ldbt;	a	getSheepColor
	m	(Ljl;)Lcpe$b;	a	getSheepColorConfiguration
	m	(Lbvt;)Lcpe$a;	a	weighted
	m	(Ldbt;)Lcpe$a;	b	single
	m	()Lbvt$a;	a	builder
	m	(Ldbt;Lbck;)Ldbt;	a	lambda$single$1
	m	(Lbvt;Lbck;)Ldbt;	a	lambda$weighted$0
	m	()V	<clinit>	<clinit>
c	cpe$a	net/minecraft/world/entity/animal/sheep/SheepColorSpawnRules$SheepColorProvider
	m	(Lbck;)Ldbt;	get	get
c	cpe$b	net/minecraft/world/entity/animal/sheep/SheepColorSpawnRules$SheepColorSpawnConfiguration
	f	Lcpe$a;	a	colors
	m	(Lcpe$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcpe$a;	a	colors
c	cpf	net/minecraft/world/entity/animal/sheep/package-info
c	cpg	net/minecraft/world/entity/animal/sniffer/Sniffer
	f	I	cq	DIGGING_PARTICLES_DELAY_TICKS
	f	I	cr	DIGGING_PARTICLES_DURATION_TICKS
	f	I	cs	DIGGING_PARTICLES_AMOUNT
	f	I	ct	DIGGING_DROP_SEED_OFFSET_TICKS
	f	I	cu	SNIFFER_BABY_AGE_TICKS
	f	F	cv	DIGGING_BB_HEIGHT_OFFSET
	f	Lbzp;	cw	DIGGING_DIMENSIONS
	f	Lalh;	cx	DATA_STATE
	f	Lalh;	cy	DATA_DROP_SEED_AT_TICK
	f	Lbzd;	ck	feelingHappyAnimationState
	f	Lbzd;	cl	scentingAnimationState
	f	Lbzd;	cm	sniffingAnimationState
	f	Lbzd;	co	diggingAnimationState
	f	Lbzd;	cp	risingAnimationState
	m	()Lcbr$a;	m	createAttributes
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	L	onPathfindingStart
	m	()V	N	onPathfindingDone
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Z	n	isSearching
	m	()Z	t	isTempted
	m	()Z	gH	canSniff
	m	()Z	gI	canPlayDiggingSound
	m	()Ljb;	gL	getHeadBlock
	m	()Lfis;	gT	getHeadPosition
	m	()Z	D	supportQuadLeash
	m	()[Lfis;	E	getQuadLeashOffsets
	m	()Lcpg$a;	gU	getState
	m	(Lcpg$a;)Lcpg;	b	setState
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	gV	resetAnimations
	m	(Lcpg$a;)Lcpg;	a	transitionTo
	m	()Lcpg;	gW	onScentingStart
	m	()Lcpg;	gX	onDiggingStart
	m	(Z)Lcpg;	x	onDiggingComplete
	m	()Ljava/util/Optional;	gJ	calculateDigPosition
	m	()Z	gK	canDig
	m	(Ljb;)Z	h	canDig
	m	()V	gY	dropSeed
	m	(Lbzd;)Lcpg;	a	emitDiggingParticles
	m	(Ljb;)Lcpg;	i	storeExploredPosition
	m	()Ljava/util/stream/Stream;	gZ	getExploredPositions
	m	()V	s	jumpFromGround
	m	(Laub;Lcmd;)V	a	spawnChildFromBreeding
	m	(Lbyb;)V	a	die
	m	()V	g	tick
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	gN	playEatingSound
	m	()V	ha	playSearchingSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()I	gh	getMaxHeadYRot
	m	(Z)V	a	setBaby
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lcmd;)Z	a	canMate
	m	(Ldcv;)Z	i	isFood
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()Lcbm$b;	ei	brainProvider
	m	(Laub;)V	a	customServerAiStep
	m	()V	ah	sendDebugPackets
	m	(Ljb;Laub;Ldcv;)V	a	lambda$dropSeed$3
	m	(Ljb;Ljk;)Z	a	lambda$canDig$2
	m	(Ljb;)Z	j	lambda$calculateDigPosition$1
	m	(I)Lfis;	s	lambda$calculateDigPosition$0
	m	()V	<clinit>	<clinit>
c	cpg$a	net/minecraft/world/entity/animal/sniffer/Sniffer$State
	f	Lcpg$a;	a	IDLING
	f	Lcpg$a;	b	FEELING_HAPPY
	f	Lcpg$a;	c	SCENTING
	f	Lcpg$a;	d	SNIFFING
	f	Lcpg$a;	e	SEARCHING
	f	Lcpg$a;	f	DIGGING
	f	Lcpg$a;	g	RISING
	f	Ljava/util/function/IntFunction;	h	BY_ID
	f	Lzm;	i	STREAM_CODEC
	f	I	j	id
	f	[Lcpg$a;	k	$VALUES
	m	()[Lcpg$a;	values	values
	m	(Ljava/lang/String;)Lcpg$a;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	id
	m	()[Lcpg$a;	b	$values
	m	()V	<clinit>	<clinit>
c	cph	net/minecraft/world/entity/animal/sniffer/SnifferAi
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	MAX_LOOK_DISTANCE
	f	Ljava/util/List;	a	SENSOR_TYPES
	f	Ljava/util/List;	b	MEMORY_TYPES
	f	I	e	SNIFFING_COOLDOWN_TICKS
	f	F	f	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	g	SPEED_MULTIPLIER_WHEN_PANICKING
	f	F	h	SPEED_MULTIPLIER_WHEN_SNIFFING
	f	F	i	SPEED_MULTIPLIER_WHEN_TEMPTED
	m	()V	<init>	<init>
	m	()Ljava/util/function/Predicate;	a	getTemptations
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcpg;)Lcpg;	b	resetSniffing
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initSniffingActivity
	m	(Lcbm;)V	d	initDigActivity
	m	(Lcbm;)V	e	initIdleActivity
	m	(Lcpg;)V	a	updateActivity
	m	(Lcam;)Ljava/lang/Double;	a	lambda$initIdleActivity$2
	m	(Lcam;)Ljava/lang/Float;	b	lambda$initIdleActivity$1
	m	(Ldcv;)Z	a	lambda$getTemptations$0
	m	()V	<clinit>	<clinit>
c	cph$1	net/minecraft/world/entity/animal/sniffer/SnifferAi$1
	m	(F)V	<init>	<init>
	m	(Laub;Lcpg;J)V	a	start
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcam;J)V	d	start
c	cph$2	net/minecraft/world/entity/animal/sniffer/SnifferAi$2
	m	(Lbzv;)V	<init>	<init>
	m	(Laub;Lcmd;J)V	a	start
	m	(Laub;Lcam;J)V	d	start
c	cph$3	net/minecraft/world/entity/animal/sniffer/SnifferAi$3
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)V	<init>	<init>
	m	(Laub;Lcau;J)V	b	start
	m	(Laub;Lcam;J)V	d	start
c	cph$a	net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging
	m	(II)V	<init>	<init>
	m	(Laub;Lcpg;)Z	a	checkExtraStartConditions
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cph$b	net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy
	m	(II)V	<init>	<init>
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cph$c	net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging
	m	(I)V	<init>	<init>
	m	(Laub;Lcpg;)Z	a	checkExtraStartConditions
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cph$d	net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting
	m	(II)V	<init>	<init>
	m	(Laub;Lcpg;)Z	a	checkExtraStartConditions
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cph$e	net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching
	m	()V	<init>	<init>
	m	(Laub;Lcpg;)Z	a	checkExtraStartConditions
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cph$f	net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing
	m	(II)V	<init>	<init>
	m	(Laub;Lcpg;)Z	a	checkExtraStartConditions
	m	(Laub;Lcpg;J)Z	a	canStillUse
	m	(Laub;Lcpg;J)V	b	start
	m	(Laub;Lcpg;J)V	c	stop
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
	m	(Lcpg;Ljb;)V	a	lambda$stop$0
c	cpi	net/minecraft/world/entity/animal/sniffer/package-info
c	cpj	net/minecraft/world/entity/animal/wolf/Wolf
	f	Lalh;	cq	DATA_INTERESTED_ID
	f	Lalh;	cr	DATA_COLLAR_COLOR
	f	Lalh;	cs	DATA_REMAINING_ANGER_TIME
	f	Lalh;	ct	DATA_VARIANT_ID
	f	Lalh;	cu	DATA_SOUND_VARIANT_ID
	f	Lclc$a;	co	PREY_SELECTOR
	f	F	cv	START_HEALTH
	f	F	cw	TAME_HEALTH
	f	F	cx	ARMOR_REPAIR_UNIT
	f	F	cp	DEFAULT_TAIL_ANGLE
	f	Ldbt;	cy	DEFAULT_COLLAR_COLOR
	f	F	cz	interestedAngle
	f	F	cA	interestedAngleO
	f	Z	cB	isWet
	f	Z	cC	isShaking
	f	F	cD	shakeAnim
	f	F	cE	shakeAnimO
	f	Lbwu;	cF	PERSISTENT_ANGER_TIME
	f	Ljava/util/UUID;	cG	persistentAngerTarget
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lame;	gT	getTexture
	m	()Ljl;	gY	getVariant
	m	(Ljl;)V	b	setVariant
	m	()Ljl;	gZ	getSoundVariant
	m	(Ljl;)V	k	setSoundVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	()Lcbr$a;	gU	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	fk	getSoundVolume
	m	()V	e_	aiStep
	m	()V	g	tick
	m	()V	ha	cancelShake
	m	(Lbyb;)V	a	die
	m	(F)F	J	getWetShade
	m	(F)F	K	getShakeAnim
	m	(F)F	L	getHeadRollAngle
	m	()I	gg	getMaxHeadXRot
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	(Lbyb;)Z	i	canArmorAbsorb
	m	()V	n	applyTamingSideEffects
	m	(Lbyb;F)V	c	hurtArmor
	m	(Lcut;)Z	a	canShearEquipment
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcut;)V	i	tryToTame
	m	(B)V	b	handleEntityEvent
	m	()F	gV	getTailAngle
	m	(Ldcv;)Z	i	isFood
	m	()I	gk	getMaxSpawnClusterSize
	m	()I	a	getRemainingPersistentAngerTime
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()V	c	startPersistentAngerTimer
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()Ldbt;	gW	getCollarColor
	m	(Ldbt;)V	a	setCollarColor
	m	(Laub;Lbzc;)Lcpj;	b	getBreedOffspring
	m	(Z)V	A	setIsInterested
	m	(Lcmd;)Z	a	canMate
	m	()Z	gX	isInterested
	m	(Lcam;Lcam;)Z	a	wantsToAttack
	m	()Z	v	canBeLeashed
	m	()Lfis;	F	getLeashOffset
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkWolfSpawnRules
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Lamd;)Ljava/util/Optional;	a	lambda$readAdditionalSaveData$2
	m	(Lfdc;Lamd;)V	a	lambda$addAdditionalSaveData$1
	m	(Lcam;Laub;)Z	b	lambda$static$0
	m	(Lcpj;)Lbck;	a	access$000
	m	()V	<clinit>	<clinit>
c	cpj$a	net/minecraft/world/entity/animal/wolf/Wolf$WolfAvoidEntityGoal
	f	Lcpj;	j	wolf
	f	Lcpj;	i	this$0
	m	(Lcpj;Lcpj;Ljava/lang/Class;FDD)V	<init>	<init>
	m	()Z	b	canUse
	m	(Lcot;)Z	a	avoidLlama
	m	()V	d	start
	m	()V	a	tick
c	cpj$b	net/minecraft/world/entity/animal/wolf/Wolf$WolfPackData
	f	Ljl;	a	type
	m	(Ljl;)V	<init>	<init>
c	cpk	net/minecraft/world/entity/animal/wolf/WolfSoundVariant
	f	Ljl;	e	ambientSound
	f	Ljl;	f	deathSound
	f	Ljl;	g	growlSound
	f	Ljl;	h	hurtSound
	f	Ljl;	i	pantSound
	f	Ljl;	j	whineSound
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljl;Ljl;Ljl;Ljl;Ljl;Ljl;)V	<init>	<init>
	m	()Lcom/mojang/serialization/Codec;	g	getWolfSoundVariantCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	ambientSound
	m	()Ljl;	b	deathSound
	m	()Ljl;	c	growlSound
	m	()Ljl;	d	hurtSound
	m	()Ljl;	e	pantSound
	m	()Ljl;	f	whineSound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$getWolfSoundVariantCodec$0
	m	()V	<clinit>	<clinit>
c	cpl	net/minecraft/world/entity/animal/wolf/WolfSoundVariants
	f	Lamd;	a	CLASSIC
	f	Lamd;	b	PUGLIN
	f	Lamd;	c	SAD
	f	Lamd;	d	ANGRY
	f	Lamd;	e	GRUMPY
	f	Lamd;	f	BIG
	f	Lamd;	g	CUTE
	m	()V	<init>	<init>
	m	(Lcpl$a;)Lamd;	a	createKey
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Lcpl$a;)V	a	register
	m	(Ljz;Lbck;)Ljl;	a	pickRandomSoundVariant
	m	()V	<clinit>	<clinit>
c	cpl$a	net/minecraft/world/entity/animal/wolf/WolfSoundVariants$SoundSet
	f	Lcpl$a;	a	CLASSIC
	f	Lcpl$a;	b	PUGLIN
	f	Lcpl$a;	c	SAD
	f	Lcpl$a;	d	ANGRY
	f	Lcpl$a;	e	GRUMPY
	f	Lcpl$a;	f	BIG
	f	Lcpl$a;	g	CUTE
	f	Ljava/lang/String;	h	identifier
	f	Ljava/lang/String;	i	soundEventSuffix
	f	[Lcpl$a;	j	$VALUES
	m	()[Lcpl$a;	values	values
	m	(Ljava/lang/String;)Lcpl$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getIdentifier
	m	()Ljava/lang/String;	b	getSoundEventSuffix
	m	()[Lcpl$a;	c	$values
	m	()V	<clinit>	<clinit>
c	cpm	net/minecraft/world/entity/animal/wolf/WolfVariant
	f	Lcpm$a;	e	assetInfo
	f	Lcxa;	f	spawnConditions
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lcpm$a;)V	<init>	<init>
	m	(Lcpm$a;Lcxa;)V	<init>	<init>
	m	()Ljava/util/List;	a	selectors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcpm$a;	b	assetInfo
	m	()Lcxa;	c	spawnConditions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cpm$a	net/minecraft/world/entity/animal/wolf/WolfVariant$AssetInfo
	f	Ljc;	b	wild
	f	Ljc;	c	tame
	f	Ljc;	d	angry
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljc;Ljc;Ljc;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljc;	a	wild
	m	()Ljc;	b	tame
	m	()Ljc;	c	angry
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cpn	net/minecraft/world/entity/animal/wolf/WolfVariants
	f	Lamd;	a	PALE
	f	Lamd;	b	SPOTTED
	f	Lamd;	c	SNOWY
	f	Lamd;	d	BLACK
	f	Lamd;	e	ASHEN
	f	Lamd;	f	RUSTY
	f	Lamd;	g	WOODS
	f	Lamd;	h	CHESTNUT
	f	Lamd;	i	STRIPED
	f	Lamd;	j	DEFAULT
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;Lamd;Ljava/lang/String;Lamd;)V	a	register
	m	(Lqq;Lamd;Ljava/lang/String;Lbae;)V	a	register
	m	(Ljp;)Lcxa;	a	highPrioBiome
	m	(Lqq;Lamd;Ljava/lang/String;Lcxa;)V	a	register
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	cpo	net/minecraft/world/entity/animal/wolf/package-info
c	cpp	net/minecraft/world/entity/boss/EnderDragonPart
	f	Lcps;	a	parentMob
	f	Ljava/lang/String;	b	name
	f	Lbzp;	c	size
	m	(Lcps;Ljava/lang/String;FF)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Z	bK	isPickable
	m	()Ldcv;	dM	getPickResult
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbzm;)Z	v	is
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lcay;)Lbzp;	a	getDimensions
	m	()Z	dX	shouldBeSaved
c	cpq	net/minecraft/world/entity/boss/enderdragon/DragonFlightHistory
	f	I	a	LENGTH
	f	I	b	MASK
	f	[Lcpq$a;	c	samples
	f	I	d	head
	m	()V	<init>	<init>
	m	(Lcpq;)V	a	copyFrom
	m	(DF)V	a	record
	m	(I)Lcpq$a;	a	get
	m	(IF)Lcpq$a;	a	get
c	cpq$a	net/minecraft/world/entity/boss/enderdragon/DragonFlightHistory$Sample
	f	D	a	y
	f	F	b	yRot
	m	(DF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	a	y
	m	()F	b	yRot
c	cpr	net/minecraft/world/entity/boss/enderdragon/EndCrystal
	f	Lalh;	b	DATA_BEAM_TARGET
	f	Lalh;	c	DATA_SHOW_BOTTOM
	f	Z	d	DEFAULT_SHOW_BOTTOM
	f	I	a	time
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDD)V	<init>	<init>
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	bK	isPickable
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;)V	c	kill
	m	(Laub;Lbyb;)V	a	onDestroyedBy
	m	(Ljb;)V	a	setBeamTarget
	m	()Ljb;	e	getBeamTarget
	m	(Z)V	a	setShowBottom
	m	()Z	f	showsBottom
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()Ldcv;	dM	getPickResult
	m	()V	<clinit>	<clinit>
c	cps	net/minecraft/world/entity/boss/enderdragon/EnderDragon
	f	Lorg/slf4j/Logger;	cm	LOGGER
	f	Lalh;	a	DATA_PHASE
	f	Lclc;	cn	CRYSTAL_DESTROY_TARGETING
	f	I	co	GROWL_INTERVAL_MIN
	f	I	cp	GROWL_INTERVAL_MAX
	f	F	cq	SITTING_ALLOWED_DAMAGE_PERCENTAGE
	f	Ljava/lang/String;	cr	DRAGON_DEATH_TIME_KEY
	f	Ljava/lang/String;	cs	DRAGON_PHASE_KEY
	f	I	ct	DEFAULT_DEATH_TIME
	f	Lcpq;	b	flightHistory
	f	[Lcpp;	cu	subEntities
	f	Lcpp;	c	head
	f	Lcpp;	cv	neck
	f	Lcpp;	cw	body
	f	Lcpp;	cx	tail1
	f	Lcpp;	cy	tail2
	f	Lcpp;	cz	tail3
	f	Lcpp;	cA	wing1
	f	Lcpp;	cB	wing2
	f	F	d	oFlapTime
	f	F	e	flapTime
	f	Z	f	inWall
	f	I	cj	dragonDeathTime
	f	F	ck	yRotA
	f	Lcpr;	cl	nearestCrystal
	f	Leib;	cC	dragonFight
	f	Ljb;	cD	fightOrigin
	f	Lcqj;	cE	phaseManager
	f	I	cF	growlTime
	f	F	cG	sittingDamageReceived
	f	[Lfax;	cH	nodes
	f	[I	cI	nodeAdjacency
	f	Lfav;	cJ	openSet
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Leib;)V	a	setDragonFight
	m	(Ljb;)V	c	setFightOrigin
	m	()Ljb;	l	getFightOrigin
	m	()Lcbr$a;	m	createAttributes
	m	()Z	bd	isFlapping
	m	()V	bc	onFlap
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	e_	aiStep
	m	(Lcpp;DDD)V	a	tickPart
	m	()F	gF	getHeadYOffset
	m	()V	gG	checkCrystals
	m	(Laub;Ljava/util/List;)V	a	knockBack
	m	(Laub;Ljava/util/List;)V	b	hurt
	m	(D)F	i	rotWrap
	m	(Laub;Lfin;)Z	a	checkWalls
	m	(Laub;Lcpp;Lbyb;F)Z	a	hurt
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;F)V	d	reallyHurt
	m	(Laub;)V	c	kill
	m	()V	es	tickDeath
	m	()I	n	findClosestNode
	m	(DDD)I	q	findClosestNode
	m	(IILfax;)Lfaz;	a	findPath
	m	(Lfax;Lfax;)Lfaz;	a	reconstructPath
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	dJ	checkDespawn
	m	()[Lcpp;	t	getSubEntities
	m	()Z	bK	isPickable
	m	()Laza;	do	getSoundSource
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()F	fk	getSoundVolume
	m	(F)Lfis;	J	getHeadLookVector
	m	(Laub;Lcpr;Ljb;Lbyb;)V	a	onCrystalDestroyed
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lcqj;	gD	getPhaseManager
	m	()Leib;	gE	getDragonFight
	m	(Lbyq;Lbzm;)Z	b	addEffect
	m	(Lbzm;)Z	p	canRide
	m	(Z)Z	o	canUsePortal
	m	(Lacr;)V	a	recreateFromPacket
	m	(Lcam;)Z	c	canAttack
	m	(F)F	c	sanitizeScale
	m	(Ljava/lang/Integer;)V	a	lambda$readAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	cpt	net/minecraft/world/entity/boss/enderdragon/package-info
c	cpu	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance
	f	Lcps;	a	dragon
	m	(Lcps;)V	<init>	<init>
	m	()Z	a	isSitting
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	(Lcpr;Ljb;Lbyb;Lcut;)V	a	onCrystalDestroyed
	m	()V	c	begin
	m	()V	d	end
	m	()F	e	getFlySpeed
	m	()Lfis;	f	getFlyTargetLocation
	m	(Lbyb;F)F	a	onHurt
	m	()F	g	getTurnSpeed
c	cpv	net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase
	m	(Lcps;)V	<init>	<init>
	m	()Z	a	isSitting
	m	(Lbyb;F)F	a	onHurt
c	cpw	net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	CHARGE_RECOVERY_TIME
	f	Lfis;	d	targetLocation
	f	I	e	timeSinceCharge
	m	(Lcps;)V	<init>	<init>
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	(Lfis;)V	a	setTarget
	m	()F	e	getFlySpeed
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
	m	()V	<clinit>	<clinit>
c	cpx	net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase
	f	Lfis;	b	targetLocation
	f	I	c	time
	m	(Lcps;)V	<init>	<init>
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()F	e	getFlySpeed
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
c	cpy	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase
	f	Lclc;	b	NEW_TARGET_TARGETING
	f	Lfaz;	c	currentPath
	f	Lfis;	d	targetLocation
	f	Z	e	clockwise
	m	(Lcps;)V	<init>	<init>
	m	()Lcqi;	h	getPhase
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()Lfis;	f	getFlyTargetLocation
	m	(Laub;)V	b	findNewTarget
	m	(Lcut;)V	a	strafePlayer
	m	()V	i	navigateToNextPathNode
	m	(Lcpr;Ljb;Lbyb;Lcut;)V	a	onCrystalDestroyed
	m	()V	<clinit>	<clinit>
c	cpz	net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase
	f	Lfis;	b	targetLocation
	m	(Lcps;)V	<init>	<init>
	m	(Laub;)V	a	doServerTick
	m	()Z	a	isSitting
	m	()V	c	begin
	m	()F	e	getFlySpeed
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
c	cqa	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase
	f	Lclc;	b	NEAR_EGG_TARGETING
	f	Lfaz;	c	currentPath
	f	Lfis;	d	targetLocation
	m	(Lcps;)V	<init>	<init>
	m	()Lcqi;	h	getPhase
	m	()V	c	begin
	m	(Laub;)V	a	doServerTick
	m	()Lfis;	f	getFlyTargetLocation
	m	(Laub;)V	b	findNewTarget
	m	()V	i	navigateToNextPathNode
	m	()V	<clinit>	<clinit>
c	cqb	net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase
	f	Lfis;	b	targetLocation
	m	(Lcps;)V	<init>	<init>
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	()F	e	getFlySpeed
	m	()F	g	getTurnSpeed
	m	()V	c	begin
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
c	cqc	net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance
	m	()Z	a	isSitting
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	(Lcpr;Ljb;Lbyb;Lcut;)V	a	onCrystalDestroyed
	m	()V	c	begin
	m	()V	d	end
	m	()F	e	getFlySpeed
	m	()F	g	getTurnSpeed
	m	()Lcqi;	h	getPhase
	m	()Lfis;	f	getFlyTargetLocation
	m	(Lbyb;F)F	a	onHurt
c	cqd	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase
	f	I	b	ROAR_DURATION
	f	I	c	attackingTicks
	m	(Lcps;)V	<init>	<init>
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()Lcqi;	h	getPhase
c	cqe	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase
	f	I	b	FLAME_DURATION
	f	I	c	SITTING_FLAME_ATTACKS_COUNT
	f	I	d	WARMUP_TIME
	f	I	e	flameTicks
	f	I	f	flameCount
	f	Lbze;	g	flame
	m	(Lcps;)V	<init>	<init>
	m	()V	b	doClientTick
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()V	d	end
	m	()Lcqi;	h	getPhase
	m	()V	i	resetFlameCount
c	cqf	net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase
	f	I	b	SITTING_SCANNING_IDLE_TICKS
	f	I	c	SITTING_ATTACK_Y_VIEW_RANGE
	f	I	d	SITTING_ATTACK_VIEW_RANGE
	f	I	e	SITTING_CHARGE_VIEW_RANGE
	f	Lclc;	f	CHARGE_TARGETING
	f	Lclc;	g	scanTargeting
	f	I	h	scanningTime
	m	(Lcps;)V	<init>	<init>
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()Lcqi;	h	getPhase
	m	(Lcps;Lcam;Laub;)Z	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	cqg	net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	FIREBALL_CHARGE_AMOUNT
	f	I	d	fireballCharge
	f	Lfaz;	e	currentPath
	f	Lfis;	f	targetLocation
	f	Lcam;	g	attackTarget
	f	Z	h	holdingPatternClockwise
	m	(Lcps;)V	<init>	<init>
	m	(Laub;)V	a	doServerTick
	m	()V	i	findNewTarget
	m	()V	j	navigateToNextPathNode
	m	()V	c	begin
	m	(Lcam;)V	a	setTarget
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
	m	()V	<clinit>	<clinit>
c	cqh	net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase
	f	Z	b	firstTick
	f	Lfaz;	c	currentPath
	f	Lfis;	d	targetLocation
	m	(Lcps;)V	<init>	<init>
	m	(Laub;)V	a	doServerTick
	m	()V	c	begin
	m	()V	i	findNewTarget
	m	()V	j	navigateToNextPathNode
	m	()Lfis;	f	getFlyTargetLocation
	m	()Lcqi;	h	getPhase
c	cqi	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase
	f	[Lcqi;	l	phases
	f	Lcqi;	a	HOLDING_PATTERN
	f	Lcqi;	b	STRAFE_PLAYER
	f	Lcqi;	c	LANDING_APPROACH
	f	Lcqi;	d	LANDING
	f	Lcqi;	e	TAKEOFF
	f	Lcqi;	f	SITTING_FLAMING
	f	Lcqi;	g	SITTING_SCANNING
	f	Lcqi;	h	SITTING_ATTACKING
	f	Lcqi;	i	CHARGING_PLAYER
	f	Lcqi;	j	DYING
	f	Lcqi;	k	HOVERING
	f	Ljava/lang/Class;	m	instanceClass
	f	I	n	id
	f	Ljava/lang/String;	o	name
	m	(ILjava/lang/Class;Ljava/lang/String;)V	<init>	<init>
	m	(Lcps;)Lcqc;	a	createInstance
	m	()Ljava/lang/reflect/Constructor;	a	getConstructor
	m	()I	b	getId
	m	()Ljava/lang/String;	toString	toString
	m	(I)Lcqi;	a	getById
	m	()I	c	getCount
	m	(Ljava/lang/Class;Ljava/lang/String;)Lcqi;	a	create
	m	()V	<clinit>	<clinit>
c	cqj	net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcps;	b	dragon
	f	[Lcqc;	c	phases
	f	Lcqc;	d	currentPhase
	m	(Lcps;)V	<init>	<init>
	m	(Lcqi;)V	a	setPhase
	m	()Lcqc;	a	getCurrentPhase
	m	(Lcqi;)Lcqc;	b	getPhase
	m	()V	<clinit>	<clinit>
c	cqk	net/minecraft/world/entity/boss/enderdragon/phases/package-info
c	cql	net/minecraft/world/entity/boss/package-info
c	cqm	net/minecraft/world/entity/boss/wither/WitherBoss
	f	Lalh;	a	DATA_TARGET_A
	f	Lalh;	b	DATA_TARGET_B
	f	Lalh;	c	DATA_TARGET_C
	f	Ljava/util/List;	d	DATA_TARGETS
	f	Lalh;	e	DATA_ID_INV
	f	I	f	INVULNERABLE_TICKS
	f	I	ck	DEFAULT_INVULNERABLE_TICKS
	f	[F	cl	xRotHeads
	f	[F	cm	yRotHeads
	f	[F	cn	xRotOHeads
	f	[F	co	yRotOHeads
	f	[I	cp	nextHeadUpdate
	f	[I	cq	idleHeadUpdates
	f	I	cr	destroyBlocksTick
	f	Latx;	cs	bossEvent
	f	Lclc$a;	ct	LIVING_ENTITY_SELECTOR
	f	Lclc;	cu	TARGETING_CONDITIONS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()V	H	registerGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lxo;)V	b	setCustomName
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()V	e_	aiStep
	m	(Laub;)V	a	customServerAiStep
	m	(Leeb;)Z	c	canDestroy
	m	()V	l	makeInvulnerable
	m	(Leeb;Lfis;)V	a	makeStuckInBlock
	m	(Lauc;)V	d	startSeenByPlayer
	m	(Lauc;)V	e	stopSeenByPlayer
	m	(I)D	r	getHeadX
	m	(I)D	s	getHeadY
	m	(I)D	t	getHeadZ
	m	(FFF)F	a	rotlerp
	m	(ILcam;)V	a	performRangedAttack
	m	(IDDDZ)V	a	performRangedAttack
	m	(Lcam;F)V	a	performRangedAttack
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	()V	dJ	checkDespawn
	m	(Lbyq;Lbzm;)Z	b	addEffect
	m	()Lcbr$a;	m	createAttributes
	m	()[F	n	getHeadYRots
	m	()[F	t	getHeadXRots
	m	()I	gH	getInvulnerableTicks
	m	(I)V	b	setInvulnerableTicks
	m	(I)I	c	getAlternativeTarget
	m	(II)V	a	setAlternativeTarget
	m	()Z	gI	isPowered
	m	(Lbzm;)Z	p	canRide
	m	(Z)Z	o	canUsePortal
	m	(Lbyq;)Z	b	canBeAffected
	m	(Lcam;Laub;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cqm$a	net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal
	f	Lcqm;	a	this$0
	m	(Lcqm;)V	<init>	<init>
	m	()Z	b	canUse
c	cqn	net/minecraft/world/entity/boss/wither/package-info
c	cqo	net/minecraft/world/entity/decoration/ArmorStand
	f	I	a	WOBBLE_TIME
	f	Z	ca	ENABLE_ARMS
	f	Lkd;	b	DEFAULT_HEAD_POSE
	f	Lkd;	c	DEFAULT_BODY_POSE
	f	Lkd;	d	DEFAULT_LEFT_ARM_POSE
	f	Lkd;	e	DEFAULT_RIGHT_ARM_POSE
	f	Lkd;	f	DEFAULT_LEFT_LEG_POSE
	f	Lkd;	g	DEFAULT_RIGHT_LEG_POSE
	f	Lbzp;	cb	MARKER_DIMENSIONS
	f	Lbzp;	cc	BABY_DIMENSIONS
	f	D	cd	FEET_OFFSET
	f	D	ce	CHEST_OFFSET
	f	D	cf	LEGS_OFFSET
	f	D	cg	HEAD_OFFSET
	f	I	h	DISABLE_TAKING_OFFSET
	f	I	i	DISABLE_PUTTING_OFFSET
	f	I	j	CLIENT_FLAG_SMALL
	f	I	k	CLIENT_FLAG_SHOW_ARMS
	f	I	bQ	CLIENT_FLAG_NO_BASEPLATE
	f	I	bR	CLIENT_FLAG_MARKER
	f	Lalh;	bS	DATA_CLIENT_FLAGS
	f	Lalh;	bT	DATA_HEAD_POSE
	f	Lalh;	bU	DATA_BODY_POSE
	f	Lalh;	bV	DATA_LEFT_ARM_POSE
	f	Lalh;	bW	DATA_RIGHT_ARM_POSE
	f	Lalh;	bX	DATA_LEFT_LEG_POSE
	f	Lalh;	bY	DATA_RIGHT_LEG_POSE
	f	Ljava/util/function/Predicate;	ch	RIDABLE_MINECARTS
	f	Z	ci	DEFAULT_INVISIBLE
	f	I	cj	DEFAULT_DISABLED_SLOTS
	f	Z	ck	DEFAULT_SMALL
	f	Z	cl	DEFAULT_SHOW_ARMS
	f	Z	cm	DEFAULT_NO_BASE_PLATE
	f	Z	cn	DEFAULT_MARKER
	f	Z	co	invisible
	f	J	bZ	lastHit
	f	I	cp	disabledSlots
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDD)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	()V	j_	refreshDimensions
	m	()Z	C	hasPhysics
	m	()Z	dl	isEffectiveAi
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	bL	isPushable
	m	(Lbzm;)V	E	doPush
	m	()V	o	pushEntities
	m	(Lcut;Lfis;Lbxi;)Lbxj;	a	interactAt
	m	(Lfis;)Lbzw;	a	getClickedSlot
	m	(Lbzw;)Z	g	isDisabled
	m	(Lcut;Lbzw;Ldcv;Lbxi;)Z	a	swapItem
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(B)V	b	handleEntityEvent
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()V	D	showBreakingParticles
	m	(Laub;Lbyb;F)V	d	causeDamage
	m	(Laub;Lbyb;)V	c	brokenByPlayer
	m	(Laub;Lbyb;)V	d	brokenByAnything
	m	()V	E	playBrokenSound
	m	(F)V	C	tickHeadTurn
	m	(Lfis;)V	k	travel
	m	(F)V	s	setYBodyRot
	m	(F)V	r	setYHeadRot
	m	()V	K	updateInvisibilityStatus
	m	(Z)V	l	setInvisible
	m	()Z	g_	isBaby
	m	(Laub;)V	c	kill
	m	(Ldmn;)Z	a	ignoreExplosion
	m	()Lfaq;	k_	getPistonPushReaction
	m	()Z	n_	isIgnoringBlockTriggers
	m	(Z)V	u	setSmall
	m	()Z	m	isSmall
	m	(Z)V	a	setShowArms
	m	()Z	n	showArms
	m	(Z)V	b	setNoBasePlate
	m	()Z	p	showBasePlate
	m	(Z)V	v	setMarker
	m	()Z	t	isMarker
	m	(BIZ)B	a	setBit
	m	(Lkd;)V	a	setHeadPose
	m	(Lkd;)V	b	setBodyPose
	m	(Lkd;)V	c	setLeftArmPose
	m	(Lkd;)V	d	setRightArmPose
	m	(Lkd;)V	e	setLeftLegPose
	m	(Lkd;)V	f	setRightLegPose
	m	()Lkd;	u	getHeadPose
	m	()Lkd;	v	getBodyPose
	m	()Lkd;	x	getLeftArmPose
	m	()Lkd;	y	getRightArmPose
	m	()Lkd;	z	getLeftLegPose
	m	()Lkd;	A	getRightLegPose
	m	()Z	bK	isPickable
	m	(Lbzm;)Z	w	skipAttackInteraction
	m	()Lcad;	fF	getMainArm
	m	()Lcam$a;	eT	getFallSounds
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Laub;Lcal;)V	a	thunderHit
	m	()Z	fS	isAffectedByPotions
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Z	fT	attackable
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Z)Lbzp;	w	getDimensionsMarker
	m	(F)Lfis;	o	getLightProbePosition
	m	()Ldcv;	dM	getPickResult
	m	()Z	eF	canBeSeenByAnyone
	m	(Lcqo$a;)V	a	setArmorStandPose
	m	()Lcqo$a;	B	getArmorStandPose
	m	(Lbzm;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cqo$a	net/minecraft/world/entity/decoration/ArmorStand$ArmorStandPose
	f	Lkd;	c	head
	f	Lkd;	d	body
	f	Lkd;	e	leftArm
	f	Lkd;	f	rightArm
	f	Lkd;	g	leftLeg
	f	Lkd;	h	rightLeg
	f	Lcqo$a;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Lkd;Lkd;Lkd;Lkd;Lkd;Lkd;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkd;	a	head
	m	()Lkd;	b	body
	m	()Lkd;	c	leftArm
	m	()Lkd;	d	rightArm
	m	()Lkd;	e	leftLeg
	m	()Lkd;	f	rightLeg
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cqp	net/minecraft/world/entity/decoration/BlockAttachedEntity
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	c	checkInterval
	f	Ljb;	a	pos
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;Ljb;)V	<init>	<init>
	m	()V	e	recalculateBoundingBox
	m	()V	g	tick
	m	()Z	f	survives
	m	()Z	bK	isPickable
	m	(Lbzm;)Z	w	skipAttackInteraction
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldmn;)Z	a	ignoreExplosion
	m	(Lcaq;Lfis;)V	a	move
	m	(DDD)V	i	push
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbzm;)V	a	dropItem
	m	()Z	bM	repositionEntityAfterLoad
	m	(DDD)V	a_	setPos
	m	()Ljb;	i	getPos
	m	(Laub;Lcal;)V	a	thunderHit
	m	()V	j_	refreshDimensions
	m	()V	<clinit>	<clinit>
c	cqq	net/minecraft/world/entity/decoration/GlowItemFrame
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Ljb;Ljh;)V	<init>	<init>
	m	()Layy;	l	getRemoveItemSound
	m	()Layy;	m	getBreakSound
	m	()Layy;	n	getPlaceSound
	m	()Layy;	p	getAddItemSound
	m	()Layy;	q	getRotateItemSound
	m	()Ldcv;	s	getFrameItemStack
c	cqr	net/minecraft/world/entity/decoration/HangingEntity
	f	Ljava/util/function/Predicate;	b	HANGING_ENTITY
	f	Lalh;	c	DATA_DIRECTION
	f	Ljh;	d	DEFAULT_DIRECTION
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;Ljb;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Ljh;	cS	getDirection
	m	(Ljh;)V	a	setDirectionRaw
	m	(Ljh;)V	b	setDirection
	m	()V	e	recalculateBoundingBox
	m	(Ljb;Ljh;)Lfin;	a	calculateBoundingBox
	m	()Z	f	survives
	m	()Lfin;	t	calculateSupportBox
	m	()V	u	playPlacementSound
	m	(Laub;Ldcv;F)Lcqz;	a	spawnAtLocation
	m	(Ldwu;)F	a	rotate
	m	(Ldvd;)F	a	mirror
	m	(Ljb;)Z	a	lambda$survives$1
	m	(Lbzm;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cqr$1	net/minecraft/world/entity/decoration/HangingEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	cqs	net/minecraft/world/entity/decoration/ItemFrame
	f	Lalh;	d	DATA_ITEM
	f	Lalh;	e	DATA_ROTATION
	f	I	c	NUM_ROTATIONS
	f	F	f	DEPTH
	f	F	g	WIDTH
	f	F	h	HEIGHT
	f	B	i	DEFAULT_ROTATION
	f	F	j	DEFAULT_DROP_CHANCE
	f	Z	k	DEFAULT_INVISIBLE
	f	Z	l	DEFAULT_FIXED
	f	F	m	dropChance
	f	Z	n	fixed
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Ljb;Ljh;)V	<init>	<init>
	m	(Lbzv;Ldmu;Ljb;Ljh;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Ljh;)V	b	setDirection
	m	()V	e	recalculateBoundingBox
	m	(Ljb;Ljh;)Lfin;	a	calculateBoundingBox
	m	()Z	f	survives
	m	(Lcaq;Lfis;)V	a	move
	m	(DDD)V	i	push
	m	(Laub;)V	c	kill
	m	(Lbyb;)Z	a	shouldDamageDropItem
	m	(Lbyb;)Z	e	canHurtWhenFixed
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Layy;	l	getRemoveItemSound
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Laub;Lbzm;)V	a	dropItem
	m	()Layy;	m	getBreakSound
	m	()V	u	playPlacementSound
	m	()Layy;	n	getPlaceSound
	m	(Laub;Lbzm;Z)V	a	dropItem
	m	(Ldcv;)V	d	removeFramedMap
	m	()Ldcv;	v	getItem
	m	(Ldcv;)Lfce;	a	getFramedMapId
	m	()Z	w	hasFramedMap
	m	(Ldcv;)V	b	setItem
	m	(Ldcv;Z)V	a	setItem
	m	()Layy;	p	getAddItemSound
	m	(I)Lcbd;	a_	getSlot
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ldcv;)V	e	onItemChanged
	m	()I	x	getRotation
	m	(I)V	b	setRotation
	m	(IZ)V	a	setRotation
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	()Layy;	q	getRotateItemSound
	m	()I	y	getAnalogOutput
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	()Ldcv;	dM	getPickResult
	m	()Ldcv;	s	getFrameItemStack
	m	()F	dQ	getVisualRotationYInDegrees
	m	()V	<clinit>	<clinit>
c	cqt	net/minecraft/world/entity/decoration/LeashFenceKnotEntity
	f	D	b	OFFSET_Y
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Ljb;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	e	recalculateBoundingBox
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Laub;Lbzm;)V	a	dropItem
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lcak;)V	b	notifyLeasheeRemoved
	m	()Z	f	survives
	m	(Ldmu;Ljb;)Lcqt;	b	getOrCreateKnot
	m	()V	l	playPlacementSound
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(F)Lfis;	u	getRopeHoldPosition
	m	()Ldcv;	dM	getPickResult
c	cqu	net/minecraft/world/entity/decoration/Painting
	f	Lalh;	d	DATA_PAINTING_VARIANT_ID
	f	F	c	DEPTH
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ljl;)V	a	setVariant
	m	()Ljl;	l	getVariant
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldmu;Ljb;Ljh;)Ljava/util/Optional;	a	create
	m	(Ljl;)I	b	variantArea
	m	(Ldmu;Ljb;)V	<init>	<init>
	m	(Ldmu;Ljb;Ljh;Ljl;)V	<init>	<init>
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ljb;Ljh;)Lfin;	a	calculateBoundingBox
	m	(I)D	b	offsetForPaintingSize
	m	(Laub;Lbzm;)V	a	dropItem
	m	()V	u	playPlacementSound
	m	(DDDFF)V	b	snapTo
	m	()Lfis;	dw	trackingPosition
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	()Ldcv;	dM	getPickResult
	m	(ILjl;)Z	a	lambda$create$1
	m	(Lcqu;Ljl;)Z	a	lambda$create$0
	m	()V	<clinit>	<clinit>
c	cqv	net/minecraft/world/entity/decoration/PaintingVariant
	f	I	e	width
	f	I	f	height
	f	Lame;	g	assetId
	f	Ljava/util/Optional;	h	title
	f	Ljava/util/Optional;	i	author
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(IILame;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()I	a	area
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	width
	m	()I	c	height
	m	()Lame;	d	assetId
	m	()Ljava/util/Optional;	e	title
	m	()Ljava/util/Optional;	f	author
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cqw	net/minecraft/world/entity/decoration/PaintingVariants
	f	Lamd;	a	KEBAB
	f	Lamd;	b	AZTEC
	f	Lamd;	c	ALBAN
	f	Lamd;	d	AZTEC2
	f	Lamd;	e	BOMB
	f	Lamd;	f	PLANT
	f	Lamd;	g	WASTELAND
	f	Lamd;	h	POOL
	f	Lamd;	i	COURBET
	f	Lamd;	j	SEA
	f	Lamd;	k	SUNSET
	f	Lamd;	l	CREEBET
	f	Lamd;	m	WANDERER
	f	Lamd;	n	GRAHAM
	f	Lamd;	o	MATCH
	f	Lamd;	p	BUST
	f	Lamd;	q	STAGE
	f	Lamd;	r	VOID
	f	Lamd;	s	SKULL_AND_ROSES
	f	Lamd;	t	WITHER
	f	Lamd;	u	FIGHTERS
	f	Lamd;	v	POINTER
	f	Lamd;	w	PIGSCENE
	f	Lamd;	x	BURNING_SKULL
	f	Lamd;	y	SKELETON
	f	Lamd;	z	DONKEY_KONG
	f	Lamd;	A	EARTH
	f	Lamd;	B	WIND
	f	Lamd;	C	WATER
	f	Lamd;	D	FIRE
	f	Lamd;	E	BAROQUE
	f	Lamd;	F	HUMBLE
	f	Lamd;	G	MEDITATIVE
	f	Lamd;	H	PRAIRIE_RIDE
	f	Lamd;	I	UNPACKED
	f	Lamd;	J	BACKYARD
	f	Lamd;	K	BOUQUET
	f	Lamd;	L	CAVEBIRD
	f	Lamd;	M	CHANGING
	f	Lamd;	N	COTAN
	f	Lamd;	O	ENDBOSS
	f	Lamd;	P	FERN
	f	Lamd;	Q	FINDING
	f	Lamd;	R	LOWMIST
	f	Lamd;	S	ORB
	f	Lamd;	T	OWLEMONS
	f	Lamd;	U	PASSAGE
	f	Lamd;	V	POND
	f	Lamd;	W	SUNFLOWERS
	f	Lamd;	X	TIDES
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;II)V	a	register
	m	(Lqq;Lamd;IIZ)V	a	register
	m	(Ljava/lang/String;)Lamd;	a	create
	m	()V	<clinit>	<clinit>
c	cqx	net/minecraft/world/entity/decoration/package-info
c	cqy	net/minecraft/world/entity/item/FallingBlockEntity
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Leeb;	g	DEFAULT_BLOCK_STATE
	f	I	h	DEFAULT_TIME
	f	F	i	DEFAULT_FALL_DAMAGE_PER_DISTANCE
	f	I	j	DEFAULT_MAX_FALL_DAMAGE
	f	Z	k	DEFAULT_DROP_ITEM
	f	Z	l	DEFAULT_CANCEL_DROP
	f	Leeb;	m	blockState
	f	I	a	time
	f	Z	b	dropItem
	f	Z	n	cancelDrop
	f	Z	o	hurtEntities
	f	I	p	fallDamageMax
	f	F	q	fallDamagePerDistance
	f	Lui;	c	blockData
	f	Z	d	forceTickAfterTeleportToDuplicate
	f	Lalh;	e	DATA_START_POS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDLeeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;)Lcqy;	a	fall
	m	()Z	cF	isAttackable
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ljb;)V	a	setStartPos
	m	()Ljb;	e	getStartPos
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	bK	isPickable
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	(Ldpz;Ljb;)V	a	callOnBrokenAfterFall
	m	(DFLbyb;)Z	a	causeFallDamage
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(FI)V	b	setHurtsEntities
	m	()V	f	disableDrop
	m	()Z	cJ	displayFireAnimation
	m	(Lq;)V	a	fillCrashReportCategory
	m	()Leeb;	i	getBlockState
	m	()Lxo;	cD	getTypeName
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	(Lfbl;)Lbzm;	b	teleport
	m	(Lbyb;FLbzm;)V	a	lambda$causeFallDamage$1
	m	(Lui;Ljava/lang/String;Lvi;)V	a	lambda$tick$0
	m	()V	<clinit>	<clinit>
c	cqz	net/minecraft/world/entity/item/ItemEntity
	f	Lalh;	c	DATA_ITEM
	f	F	d	FLOAT_HEIGHT
	f	F	a	EYE_HEIGHT
	f	I	e	LIFETIME
	f	I	f	INFINITE_PICKUP_DELAY
	f	I	g	INFINITE_LIFETIME
	f	I	h	DEFAULT_HEALTH
	f	S	i	DEFAULT_AGE
	f	S	j	DEFAULT_PICKUP_DELAY
	f	I	k	age
	f	I	l	pickupDelay
	f	I	m	health
	f	Lbzs;	n	thrower
	f	Ljava/util/UUID;	o	target
	f	F	b	bobOffs
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;DDD)V	<init>	<init>
	m	(Lcqz;)V	<init>	<init>
	m	()Z	bk	dampensVibrations
	m	()Lbzm;	ah_	getOwner
	m	(Lbzm;)V	y	restoreFrom
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	()Ljb;	aT	getBlockPosBelowThatAffectsMyMovement
	m	()V	v	setUnderwaterMovement
	m	()V	w	setUnderLavaMovement
	m	(D)V	h	setFluidMovement
	m	()V	x	mergeWithNeighbours
	m	()Z	y	isMergable
	m	(Lcqz;)V	a	tryToMerge
	m	(Ldcv;Ldcv;)Z	a	areMergable
	m	(Ldcv;Ldcv;I)Ldcv;	a	merge
	m	(Lcqz;Ldcv;Ldcv;)V	a	merge
	m	(Lcqz;Ldcv;Lcqz;Ldcv;)V	a	merge
	m	()Z	bl	fireImmune
	m	()Z	aG	shouldPlayLavaHurtSound
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldmn;)Z	a	ignoreExplosion
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;)V	a_	playerTouch
	m	()Lxo;	aj	getName
	m	()Z	cF	isAttackable
	m	(Lfbl;)Lbzm;	b	teleport
	m	()Ldcv;	e	getItem
	m	(Ldcv;)V	a	setItem
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ljava/util/UUID;)V	b	setTarget
	m	(Lbzm;)V	b	setThrower
	m	()I	f	getAge
	m	()V	i	setDefaultPickUpDelay
	m	()V	l	setNoPickUpDelay
	m	()V	m	setNeverPickUp
	m	(I)V	b	setPickUpDelay
	m	()Z	n	hasPickUpDelay
	m	()V	q	setUnlimitedLifetime
	m	()V	s	setExtendedLifetime
	m	()V	t	makeFakeItem
	m	(FF)F	f	getSpin
	m	()Lcqz;	u	copy
	m	()Laza;	do	getSoundSource
	m	()F	dQ	getVisualRotationYInDegrees
	m	(I)Lcbd;	a_	getSlot
	m	(Lcqz;)Z	b	lambda$mergeWithNeighbours$0
	m	()V	<clinit>	<clinit>
c	cra	net/minecraft/world/entity/item/PrimedTnt
	f	Lalh;	b	DATA_FUSE_ID
	f	Lalh;	c	DATA_BLOCK_STATE_ID
	f	S	d	DEFAULT_FUSE_TIME
	f	F	e	DEFAULT_EXPLOSION_POWER
	f	Leeb;	f	DEFAULT_BLOCK_STATE
	f	Ljava/lang/String;	g	TAG_BLOCK_STATE
	f	Ljava/lang/String;	a	TAG_FUSE
	f	Ljava/lang/String;	h	TAG_EXPLOSION_POWER
	f	Ldmo;	i	USED_PORTAL_DAMAGE_CALCULATOR
	f	Lbzs;	j	owner
	f	Z	k	usedPortal
	f	F	l	explosionPower
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDLcam;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Z	bK	isPickable
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	()V	l	explode
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Lcam;	e	getOwner
	m	(Lbzm;)V	y	restoreFrom
	m	(I)V	b	setFuse
	m	()I	f	getFuse
	m	(Leeb;)V	c	setBlockState
	m	()Leeb;	i	getBlockState
	m	(Z)V	a	setUsedPortal
	m	(Lfbl;)Lbzm;	b	teleport
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Lbzm;	ah_	getOwner
	m	()V	<clinit>	<clinit>
c	cra$1	net/minecraft/world/entity/item/PrimedTnt$1
	m	()V	<init>	<init>
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;)Ljava/util/Optional;	a	getBlockExplosionResistance
c	crb	net/minecraft/world/entity/item/package-info
c	crc	net/minecraft/world/entity/monster/AbstractIllager
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcrc$a;	l	getArmPose
	m	(Lcam;)Z	c	canAttack
	m	(Lbzm;)Z	u	considersEntityAsAlly
c	crc$a	net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose
	f	Lcrc$a;	a	CROSSED
	f	Lcrc$a;	b	ATTACKING
	f	Lcrc$a;	c	SPELLCASTING
	f	Lcrc$a;	d	BOW_AND_ARROW
	f	Lcrc$a;	e	CROSSBOW_HOLD
	f	Lcrc$a;	f	CROSSBOW_CHARGE
	f	Lcrc$a;	g	CELEBRATING
	f	Lcrc$a;	h	NEUTRAL
	f	[Lcrc$a;	i	$VALUES
	m	()[Lcrc$a;	values	values
	m	(Ljava/lang/String;)Lcrc$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcrc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	crc$b	net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal
	f	Lcrc;	a	this$0
	m	(Lcrc;Lcwk;)V	<init>	<init>
	m	()Z	b	canUse
c	crd	net/minecraft/world/entity/monster/AbstractSkeleton
	f	I	a	HARD_ATTACK_INTERVAL
	f	I	b	NORMAL_ATTACK_INTERVAL
	f	Lcii;	c	bowGoal
	f	Lchs;	d	meleeGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Layy;	m	getStepSound
	m	()V	e_	aiStep
	m	()V	r	rideTick
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	n	reassessWeaponGoal
	m	()I	t	getHardAttackInterval
	m	()I	gH	getAttackInterval
	m	(Lcam;F)V	a	performRangedAttack
	m	(Ldcv;FLdcv;)Lcvb;	a	getArrow
	m	(Lddq;)Z	a	canFireProjectileWeapon
	m	()Lbae;	ad	getPreferredWeaponType
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lbzw;Ldcv;Ldcv;)V	a	onEquipItem
	m	()Z	gI	isShaking
c	crd$1	net/minecraft/world/entity/monster/AbstractSkeleton$1
	f	Lcrd;	b	this$0
	m	(Lcrd;Lcau;DZ)V	<init>	<init>
	m	()V	e	stop
	m	()V	d	start
c	cre	net/minecraft/world/entity/monster/Blaze
	f	F	a	allowedHeightOffset
	f	I	b	nextHeightOffsetChangeTick
	f	Lalh;	c	DATA_FLAGS_ID
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	bB	getLightLevelDependentMagicValue
	m	()V	e_	aiStep
	m	()Z	fx	isSensitiveToWater
	m	(Laub;)V	a	customServerAiStep
	m	()Z	cb	isOnFire
	m	()Z	m	isCharged
	m	(Z)V	x	setCharged
	m	()V	<clinit>	<clinit>
c	cre$a	net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal
	f	Lcre;	a	blaze
	f	I	b	attackStep
	f	I	c	attackTime
	f	I	d	lastSeen
	m	(Lcre;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
	m	()D	h	getFollowDistance
c	crf	net/minecraft/world/entity/monster/Bogged
	f	I	a	HARD_ATTACK_INTERVAL
	f	I	b	NORMAL_ATTACK_INTERVAL
	f	Lalh;	c	DATA_SHEARED
	f	Ljava/lang/String;	d	SHEARED_TAG_NAME
	f	Z	e	DEFAULT_SHEARED
	m	()Lcbr$a;	gJ	createAttributes
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gK	isSheared
	m	(Z)V	x	setSheared
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	m	getStepSound
	m	(Ldcv;FLdcv;)Lcvb;	a	getArrow
	m	()I	t	getHardAttackInterval
	m	()I	gH	getAttackInterval
	m	(Laub;Laza;Ldcv;)V	a	shear
	m	(Laub;Ldcv;)V	d	spawnShearedMushrooms
	m	()Z	a	readyForShearing
	m	(Laub;Ldcv;)V	e	lambda$spawnShearedMushrooms$0
	m	()V	<clinit>	<clinit>
c	crg	net/minecraft/world/entity/monster/CaveSpider
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createCaveSpider
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzm;)Lfis;	m	getVehicleAttachmentPoint
c	crh	net/minecraft/world/entity/monster/Creeper
	f	Lalh;	a	DATA_SWELL_DIR
	f	Lalh;	b	DATA_IS_POWERED
	f	Lalh;	c	DATA_IS_IGNITED
	f	Z	d	DEFAULT_IGNITED
	f	Z	e	DEFAULT_POWERED
	f	S	f	DEFAULT_MAX_SWELL
	f	B	ck	DEFAULT_EXPLOSION_RADIUS
	f	I	cl	oldSwell
	f	I	cm	swell
	f	I	cn	maxSwell
	f	I	co	explosionRadius
	f	I	cp	droppedSkulls
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	()I	cI	getMaxFallDistance
	m	(DFLbyb;)Z	a	causeFallDamage
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	g	tick
	m	(Lcam;)V	g	setTarget
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()Z	m	isPowered
	m	(F)F	J	getSwelling
	m	()I	n	getSwellDir
	m	(I)V	b	setSwellDir
	m	(Laub;Lcal;)V	a	thunderHit
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	gK	explodeCreeper
	m	()V	gN	spawnLingeringCloud
	m	()Z	t	isIgnited
	m	()V	gH	ignite
	m	()Z	gI	canDropMobsSkull
	m	()V	gJ	increaseDroppedSkulls
	m	()V	<clinit>	<clinit>
c	cri	net/minecraft/world/entity/monster/CrossbowAttackMob
	m	(Z)V	b	setChargingCrossbow
	m	()Lcam;	e	getTarget
	m	()V	a	onCrossbowAttackPerformed
	m	(Lcam;F)V	b	performCrossbowAttack
c	crj	net/minecraft/world/entity/monster/Drowned
	f	F	a	NAUTILUS_SHELL_CHANCE
	f	Z	f	searchingForLand
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()V	m	addBehaviourGoals
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkDrownedSpawnRules
	m	(Ldmv;Ljb;)Z	a	isDeepEnoughToSpawn
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getStepSound
	m	()Layy;	aY	getSwimSound
	m	()Z	t	canSpawnInLiquids
	m	()Ldcv;	gH	getSkull
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Ldcv;Ldcv;Lbzw;)Z	a	canReplaceCurrentItem
	m	()Z	gI	convertsInWater
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Lcam;)Z	i	okTarget
	m	()Z	cN	isPushedByFluid
	m	()Z	gQ	wantsToSwim
	m	(Lfis;)V	k	travel
	m	()V	bs	updateSwimming
	m	()Z	co	isVisuallySwimming
	m	()Z	gJ	closeToNextPos
	m	(Lcam;F)V	a	performRangedAttack
	m	()Lbae;	ad	getPreferredWeaponType
	m	(Z)V	x	setSearchingForLand
	m	(Lcam;Laub;)Z	a	lambda$addBehaviourGoals$0
c	crj$a	net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal
	f	Lcrj;	b	drowned
	m	(Lcrj;DZ)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	crj$b	net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal
	f	Lcrj;	g	drowned
	m	(Lcrj;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	(Ldmx;Ljb;)Z	a	isValidTarget
	m	()V	d	start
	m	()V	e	stop
c	crj$c	net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal
	f	Lcau;	a	mob
	f	D	b	wantedX
	f	D	c	wantedY
	f	D	d	wantedZ
	f	D	e	speedModifier
	f	Ldmu;	f	level
	m	(Lcau;D)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()Lfis;	h	getWaterPos
c	crj$d	net/minecraft/world/entity/monster/Drowned$DrownedMoveControl
	f	Lcrj;	l	drowned
	m	(Lcrj;)V	<init>	<init>
	m	()V	a	tick
c	crj$e	net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal
	f	Lcrj;	a	drowned
	f	D	b	speedModifier
	f	I	c	seaLevel
	f	Z	d	stuck
	m	(Lcrj;DI)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	()V	d	start
	m	()V	e	stop
c	crj$f	net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal
	f	Lcrj;	a	drowned
	m	(Lcrz;DIF)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
c	crk	net/minecraft/world/entity/monster/ElderGuardian
	f	F	a	ELDER_SIZE_SCALE
	f	I	d	EFFECT_INTERVAL
	f	I	e	EFFECT_RADIUS
	f	I	f	EFFECT_DURATION
	f	I	ck	EFFECT_AMPLIFIER
	f	I	cl	EFFECT_DISPLAY_LIMIT
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	()I	m	getAttackDuration
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getFlopSound
	m	(Laub;)V	a	customServerAiStep
	m	(Lauc;)V	b	lambda$customServerAiStep$0
	m	()V	<clinit>	<clinit>
c	crl	net/minecraft/world/entity/monster/EnderMan
	f	Lame;	c	SPEED_MODIFIER_ATTACKING_ID
	f	Lcbq;	d	SPEED_MODIFIER_ATTACKING
	f	I	e	DELAY_BETWEEN_CREEPY_STARE_SOUND
	f	I	f	MIN_DEAGGRESSION_TIME
	f	Lalh;	ck	DATA_CARRY_STATE
	f	Lalh;	cl	DATA_CREEPY
	f	Lalh;	cm	DATA_STARED_AT
	f	I	cn	lastStareSound
	f	I	co	targetChangeTime
	f	Lbwu;	cp	PERSISTENT_ANGER_TIME
	f	I	cq	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cr	persistentAngerTarget
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	(Lcam;)V	g	setTarget
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	c	startPersistentAngerTimer
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()I	a	getRemainingPersistentAngerTime
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	()V	m	playStareSound
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;)Z	g	isBeingStaredBy
	m	()V	e_	aiStep
	m	()Z	fx	isSensitiveToWater
	m	(Laub;)V	a	customServerAiStep
	m	()Z	n	teleport
	m	(Lbzm;)Z	G	teleportTowards
	m	(DDD)Z	q	teleport
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	(Leeb;)V	c	setCarriedBlock
	m	()Leeb;	t	getCarriedBlock
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;Lcvd;F)Z	a	hurtWithCleanWater
	m	()Z	gH	isCreepy
	m	()Z	gI	hasBeenStaredAt
	m	()V	gJ	setBeingStaredAt
	m	()Z	af	requiresCustomPersistence
	m	(Leeb;)Z	d	lambda$readAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	crl$a	net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt
	f	Lcrl;	a	enderman
	f	Lcam;	b	target
	m	(Lcrl;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	a	tick
c	crl$b	net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal
	f	Lcrl;	a	enderman
	m	(Lcrl;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
	m	(Ldmu;Ljb;Leeb;Leeb;Leeb;Ljb;)Z	a	canPlaceBlock
c	crl$c	net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal
	f	Lcrl;	i	enderman
	f	Lcut;	j	pendingTarget
	f	I	k	aggroTime
	f	I	l	teleportTime
	f	Lclc;	m	startAggroTargetConditions
	f	Lclc;	n	continueAggroTargetConditions
	f	Lclc$a;	o	isAngerInducing
	m	(Lcrl;Lclc$a;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	c	canContinueToUse
	m	()V	a	tick
	m	(Lcrl;Lcam;Laub;)Z	a	lambda$new$0
c	crl$d	net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal
	f	Lcrl;	a	enderman
	m	(Lcrl;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
c	crm	net/minecraft/world/entity/monster/Endermite
	f	I	a	MAX_LIFE
	f	I	b	DEFAULT_LIFE
	f	I	c	life
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()V	g	tick
	m	(F)V	s	setYBodyRot
	m	()V	e_	aiStep
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkEndermiteSpawnRules
c	crn	net/minecraft/world/entity/monster/Enemy
	f	I	o_	XP_REWARD_NONE
	f	I	p_	XP_REWARD_SMALL
	f	I	q_	XP_REWARD_MEDIUM
	f	I	r_	XP_REWARD_LARGE
	f	I	s_	XP_REWARD_HUGE
	f	I	t_	XP_REWARD_BOSS
c	cro	net/minecraft/world/entity/monster/Evoker
	f	Lcpd;	a	wololoTarget
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	m	createAttributes
	m	()Layy;	ag_	getCelebrateSound
	m	(Lbzm;)Z	u	considersEntityAsAlly
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Lcpd;)V	a	setWololoTarget
	m	()Lcpd;	hb	getWololoTarget
	m	()Layy;	t	getCastingSoundEvent
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	(Lcro;)Lbck;	a	access$000
	m	(Lcro;)Lbck;	b	access$100
	m	(Lcro;)Lbck;	c	access$200
	m	(Lcro;)Lbck;	d	access$300
	m	(Lcro;)Lbck;	e	access$400
c	cro$a	net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal
	f	Lcro;	a	this$0
	m	(Lcro;)V	<init>	<init>
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	(DDDDFI)V	a	createSpellEntity
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
c	cro$b	net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal
	f	Lcro;	a	this$0
	m	(Lcro;)V	<init>	<init>
	m	()V	a	tick
c	cro$c	net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal
	f	Lclc;	e	vexCountTargeting
	f	Lcro;	a	this$0
	m	(Lcro;)V	<init>	<init>
	m	()Z	b	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
c	cro$d	net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal
	f	Lclc;	e	wololoTargeting
	f	Lcro;	a	this$0
	m	(Lcro;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	k	performSpellCasting
	m	()I	n	getCastWarmupTime
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
	m	()V	a	tick
	m	()V	d	start
	m	(Lcam;Laub;)Z	a	lambda$new$0
c	crp	net/minecraft/world/entity/monster/Ghast
	f	Lalh;	a	DATA_IS_CHARGING
	f	B	b	DEFAULT_EXPLOSION_POWER
	f	I	c	explosionPower
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Z	l	isCharging
	m	(Z)V	x	setCharging
	m	()I	m	getExplosionPower
	m	()Z	ag	shouldDespawnInPeaceful
	m	(Lbyb;)Z	i	isReflectedFireball
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	eV	onClimbable
	m	(Lfis;)V	k	travel
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	n	createAttributes
	m	()Laza;	do	getSoundSource
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	fk	getSoundVolume
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkGhastSpawnRules
	m	()I	gk	getMaxSpawnClusterSize
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	dL	supportQuadLeashAsHolder
	m	()D	B	leashElasticDistance
	m	()D	A	leashSnapDistance
	m	(Lcao;)V	a	faceMovementDirection
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$1
	m	()Z	t	lambda$new$0
	m	()V	<clinit>	<clinit>
c	crp$a	net/minecraft/world/entity/monster/Ghast$GhastLookGoal
	f	Lcao;	a	ghast
	m	(Lcao;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	crp$b	net/minecraft/world/entity/monster/Ghast$GhastMoveControl
	f	Lcao;	l	ghast
	f	I	m	floatDuration
	f	Z	n	careful
	f	Ljava/util/function/BooleanSupplier;	o	shouldBeStopped
	m	(Lcao;ZLjava/util/function/BooleanSupplier;)V	<init>	<init>
	m	()V	a	tick
	m	(Lfis;)Z	a	canReach
	m	(Ldly;Lfis;Lfis;Ljb;ZZ)Z	a	blockTraversalPossible
	m	(Lfin;Lfis;Lfis;ZZLjb;I)Z	a	lambda$canReach$0
c	crp$c	net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal
	f	Lcrp;	b	ghast
	f	I	a	chargeTime
	m	(Lcrp;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	crp$d	net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal
	f	I	a	MAX_ATTEMPTS
	f	Lcao;	b	ghast
	f	I	c	distanceToBlocks
	m	(Lcao;)V	<init>	<init>
	m	(Lcao;I)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	(Lcao;I)Lfis;	a	getSuitableFlyToPosition
	m	(Ldmu;Lfis;I)Z	a	isGoodTarget
	m	(Lfis;Lbck;)Lfis;	a	chooseRandomPosition
	m	(Lcao;Lfis;Lbck;)Lfis;	a	chooseRandomPositionWithRestriction
c	crq	net/minecraft/world/entity/monster/Giant
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
c	crr	net/minecraft/world/entity/monster/Guardian
	f	I	b	ATTACK_TIME
	f	Lalh;	a	DATA_ID_MOVING
	f	Lalh;	d	DATA_ID_ATTACK_TARGET
	f	F	e	clientSideTailAnimation
	f	F	f	clientSideTailAnimationO
	f	F	ck	clientSideTailAnimationSpeed
	f	F	cl	clientSideSpikesAnimation
	f	F	cm	clientSideSpikesAnimationO
	f	Lcam;	cn	clientSideCachedAttackTarget
	f	I	co	clientSideAttackTime
	f	Z	cp	clientSideTouchedGround
	f	Lcif;	c	randomStrollGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	t	createAttributes
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	gH	isMoving
	m	(Z)V	x	setMoving
	m	()I	m	getAttackDuration
	m	(I)V	b	setActiveAttackTarget
	m	()Z	gI	hasActiveAttackTarget
	m	()Lcam;	gJ	getActiveAttackTarget
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()I	W	getAmbientSoundInterval
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()V	e_	aiStep
	m	()Layy;	n	getFlopSound
	m	(F)F	J	getTailAnimation
	m	(F)F	K	getSpikesAnimation
	m	(F)F	L	getAttackAnimationScale
	m	()F	gK	getClientSideAttackTime
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkGuardianSpawnRules
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()I	gg	getMaxHeadXRot
	m	(Lfis;)V	k	travel
	m	()V	<clinit>	<clinit>
c	crr$a	net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal
	f	Lcrr;	a	guardian
	f	I	b	attackTime
	f	Z	c	elder
	m	(Lcrr;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	crr$b	net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector
	f	Lcrr;	a	guardian
	m	(Lcrr;)V	<init>	<init>
	m	(Lcam;Laub;)Z	test	test
c	crr$c	net/minecraft/world/entity/monster/Guardian$GuardianMoveControl
	f	Lcrr;	l	guardian
	m	(Lcrr;)V	<init>	<init>
	m	()V	a	tick
c	crs	net/minecraft/world/entity/monster/Husk
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkHuskSpawnRules
	m	()Z	af_	isSunSensitive
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getStepSound
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()Z	gI	convertsInWater
	m	()V	ae_	doUnderWaterConversion
	m	()Ldcv;	gH	getSkull
c	crt	net/minecraft/world/entity/monster/Illusioner
	f	I	e	NUM_ILLUSIONS
	f	I	f	ILLUSION_TRANSITION_TICKS
	f	I	a	ILLUSION_SPREAD
	f	I	ck	clientSideIllusionTicks
	f	[[Lfis;	cl	clientSideIllusionOffsets
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	m	createAttributes
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()V	e_	aiStep
	m	()Layy;	ag_	getCelebrateSound
	m	(F)[Lfis;	J	getIllusionOffsets
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	t	getCastingSoundEvent
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	(Lcam;F)V	a	performRangedAttack
	m	()Lcrc$a;	l	getArmPose
c	crt$a	net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal
	f	I	e	lastTargetId
	f	Lcrt;	a	this$0
	m	(Lcrt;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
c	crt$b	net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal
	f	Lcrt;	a	this$0
	m	(Lcrt;)V	<init>	<init>
	m	()Z	b	canUse
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()V	k	performSpellCasting
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
c	cru	net/minecraft/world/entity/monster/MagmaCube
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	l	createAttributes
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkMagmaCubeSpawnRules
	m	(IZ)V	a	setSize
	m	()F	bB	getLightLevelDependentMagicValue
	m	()Lmc;	m	getParticleType
	m	()Z	cb	isOnFire
	m	()I	n	getJumpDelay
	m	()V	t	decreaseSquish
	m	()V	s	jumpFromGround
	m	(Lbae;)V	c	jumpInLiquid
	m	()Z	gD	isDealsDamage
	m	()F	gE	getAttackDamage
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gF	getSquishSound
	m	()Layy;	gG	getJumpSound
c	crv	net/minecraft/world/entity/monster/Monster
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Laza;	do	getSoundSource
	m	()V	e_	aiStep
	m	()V	gL	updateNoActionTime
	m	()Z	ag	shouldDespawnInPeaceful
	m	()Layy;	aY	getSwimSound
	m	()Layy;	aZ	getSwimSplashSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Lcam$a;	eT	getFallSounds
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Ldnl;Ljb;Lbck;)Z	a	isDarkEnoughToSpawn
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	b	checkMonsterSpawnRules
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkAnyLightMonsterSpawnRules
	m	()Lcbr$a;	gM	createMonsterAttributes
	m	()Z	et	shouldDropExperience
	m	()Z	eu	shouldDropLoot
	m	(Laub;Lcut;)Z	a	isPreventingPlayerRest
	m	(Ldcv;)Ldcv;	d	getProjectile
c	crw	net/minecraft/world/entity/monster/PatrollingMonster
	f	Z	a	DEFAULT_PATROL_LEADER
	f	Z	b	DEFAULT_PATROLLING
	f	Ljb;	c	patrolTarget
	f	Z	d	patrolLeader
	f	Z	e	patrolling
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gH	canBeLeader
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkPatrollingMonsterSpawnRules
	m	(D)Z	h	removeWhenFarAway
	m	(Ljb;)V	h	setPatrolTarget
	m	()Ljb;	gI	getPatrolTarget
	m	()Z	gJ	hasPatrolTarget
	m	(Z)V	x	setPatrolLeader
	m	()Z	gK	isPatrolLeader
	m	()Z	gN	canJoinPatrol
	m	()V	gO	findPatrolTarget
	m	()Z	gP	isPatrolling
	m	(Z)V	y	setPatrolling
c	crw$a	net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal
	f	I	a	NAVIGATION_FAILED_COOLDOWN
	f	Lcrw;	b	mob
	f	D	c	speedModifier
	f	D	d	leaderSpeedModifier
	f	J	e	cooldownUntil
	m	(Lcrw;DD)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()Ljava/util/List;	h	findPatrolCompanions
	m	()Z	i	moveRandomly
	m	(Lcrw;)Z	a	lambda$findPatrolCompanions$0
c	crx	net/minecraft/world/entity/monster/Phantom
	f	F	a	FLAP_DEGREES_PER_TICK
	f	I	b	TICKS_PER_FLAP
	f	Lalh;	c	ID_SIZE
	f	Lfis;	d	moveTargetPoint
	f	Ljb;	e	anchorPoint
	f	Lcrx$a;	f	attackPhase
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	bd	isFlapping
	m	()Lcgg;	O	createBodyControl
	m	()V	H	registerGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	(I)V	b	setPhantomSize
	m	()V	n	updatePhantomSizeInfo
	m	()I	l	getPhantomSize
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()I	m	getUniqueFlapTickOffset
	m	()Z	ag	shouldDespawnInPeaceful
	m	()V	g	tick
	m	()V	e_	aiStep
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()Z	eV	onClimbable
	m	(Lfis;)V	k	travel
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()Laza;	do	getSoundSource
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()F	fk	getSoundVolume
	m	(Lbzv;)Z	a	canAttackType
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Laub;Lcam;Lclc;)Z	a	canAttack
	m	(Lcrx;)Lbck;	a	access$000
	m	(Lcrx;)Lbck;	b	access$100
	m	(Lcrx;)Lbck;	c	access$200
	m	(Lcrx;)Lbck;	d	access$300
	m	(Lcrx;)Lbck;	e	access$400
	m	(Lcrx;)Lbck;	f	access$500
	m	(Lcrx;)Lbck;	g	access$600
	m	(Lcrx;)Lbck;	h	access$700
	m	(Lcrx;)Lbck;	i	access$800
	m	(Lcrx;)Lbck;	j	access$900
	m	(Lcrx;)Lbck;	k	access$1000
	m	(Lcrx;)Lbck;	l	access$1100
	m	()V	<clinit>	<clinit>
c	crx$a	net/minecraft/world/entity/monster/Phantom$AttackPhase
	f	Lcrx$a;	a	CIRCLE
	f	Lcrx$a;	b	SWOOP
	f	[Lcrx$a;	c	$VALUES
	m	()[Lcrx$a;	values	values
	m	(Ljava/lang/String;)Lcrx$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcrx$a;	a	$values
	m	()V	<clinit>	<clinit>
c	crx$b	net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal
	f	Lclc;	b	attackTargeting
	f	I	c	nextScanTick
	f	Lcrx;	a	this$0
	m	(Lcrx;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	crx$c	net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal
	f	I	b	nextSweepTick
	f	Lcrx;	a	this$0
	m	(Lcrx;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
	m	()V	h	setAnchorAboveTarget
c	crx$d	net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl
	f	Lcrx;	a	this$0
	m	(Lcrx;Lcao;)V	<init>	<init>
	m	()V	a	clientTick
c	crx$e	net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal
	f	F	c	angle
	f	F	d	distance
	f	F	e	height
	f	F	f	clockwise
	f	Lcrx;	a	this$0
	m	(Lcrx;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	a	tick
	m	()V	i	selectNext
c	crx$f	net/minecraft/world/entity/monster/Phantom$PhantomLookControl
	m	(Lcao;)V	<init>	<init>
	m	()V	a	tick
c	crx$g	net/minecraft/world/entity/monster/Phantom$PhantomMoveControl
	f	F	m	speed
	f	Lcrx;	l	this$0
	m	(Lcrx;Lcao;)V	<init>	<init>
	m	()V	a	tick
c	crx$h	net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal
	f	Lcrx;	b	this$0
	m	(Lcrx;)V	<init>	<init>
	m	()Z	h	touchingTarget
c	crx$i	net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal
	f	I	c	CAT_SEARCH_TICK_DELAY
	f	Z	d	isScaredOfCat
	f	I	e	catSearchTick
	f	Lcrx;	a	this$0
	m	(Lcrx;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cry	net/minecraft/world/entity/monster/Pillager
	f	Lalh;	a	IS_CHARGING_CROSSBOW
	f	I	b	INVENTORY_SIZE
	f	I	e	SLOT_OFFSET
	f	Lbxr;	ck	inventory
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	m	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lddq;)Z	a	canFireProjectileWeapon
	m	()Z	t	isChargingCrossbow
	m	(Z)V	b	setChargingCrossbow
	m	()V	a	onCrossbowAttackPerformed
	m	()Lbae;	ad	getPreferredWeaponType
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lcrc$a;	l	getArmPose
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()I	gk	getMaxSpawnClusterSize
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Ldnl;Lbck;Lbxh;)V	b	enchantSpawnedWeapon
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Lcam;F)V	a	performRangedAttack
	m	()Lbxr;	n	getInventory
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(Ldcv;)Z	i	wantsItem
	m	(I)Lcbd;	a_	getSlot
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	()Layy;	ag_	getCelebrateSound
	m	()V	<clinit>	<clinit>
c	crz	net/minecraft/world/entity/monster/RangedAttackMob
	m	(Lcam;F)V	a	performRangedAttack
c	csa	net/minecraft/world/entity/monster/Ravager
	f	Ljava/util/function/Predicate;	e	ROAR_TARGET_WITH_GRIEFING
	f	Ljava/util/function/Predicate;	f	ROAR_TARGET_WITHOUT_GRIEFING
	f	Ljava/util/function/Predicate;	ck	ROAR_TARGET_ON_CLIENT
	f	D	cl	BASE_MOVEMENT_SPEED
	f	D	cm	ATTACK_MOVEMENT_SPEED
	f	I	cn	STUNNED_COLOR
	f	F	co	STUNNED_COLOR_BLUE
	f	F	cp	STUNNED_COLOR_GREEN
	f	F	cq	STUNNED_COLOR_RED
	f	I	a	ATTACK_DURATION
	f	I	b	STUN_DURATION
	f	I	cr	DEFAULT_ATTACK_TICK
	f	I	cs	DEFAULT_STUN_TICK
	f	I	ct	DEFAULT_ROAR_TICK
	f	I	cu	attackTick
	f	I	cv	stunnedTick
	f	I	cw	roarTick
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()V	Z	updateControlFlags
	m	()Lcbr$a;	l	createAttributes
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	ag_	getCelebrateSound
	m	()I	gh	getMaxHeadYRot
	m	()V	e_	aiStep
	m	()V	gR	stunEffect
	m	()Z	fm	isImmobile
	m	(Lbzm;)Z	F	hasLineOfSight
	m	(Lcam;)V	d	blockedByItem
	m	()V	gS	roar
	m	()V	hb	applyRoarKnockbackClient
	m	(Lbzm;)V	G	strongKnockback
	m	(B)V	b	handleEntityEvent
	m	()V	hc	addRoarParticleEffects
	m	()I	m	getAttackTick
	m	()I	t	getStunnedTick
	m	()I	gQ	getRoarTick
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	()Z	gH	canBeLeader
	m	()Lfin;	gz	getAttackBoundingBox
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$3
	m	(Lcam;)Z	i	lambda$static$2
	m	(Lbzm;)Z	H	lambda$static$1
	m	(Lbzm;)Z	I	lambda$static$0
	m	()V	<clinit>	<clinit>
c	csb	net/minecraft/world/entity/monster/Shulker
	f	Lame;	d	COVERED_ARMOR_MODIFIER_ID
	f	Lcbq;	e	COVERED_ARMOR_MODIFIER
	f	Lalh;	a	DATA_ATTACH_FACE_ID
	f	Lalh;	b	DATA_PEEK_ID
	f	Lalh;	c	DATA_COLOR_ID
	f	I	f	TELEPORT_STEPS
	f	B	ck	NO_COLOR
	f	B	cl	DEFAULT_COLOR
	f	I	cm	MAX_TELEPORT_DISTANCE
	f	I	cn	OTHER_SHULKER_SCAN_RADIUS
	f	I	co	OTHER_SHULKER_LIMIT
	f	F	cp	PEEK_PER_TICK
	f	B	cq	DEFAULT_PEEK
	f	Ljh;	cr	DEFAULT_ATTACH_FACE
	f	Lorg/joml/Vector3f;	cs	FORWARD
	f	F	ct	MAX_SCALE
	f	F	cu	currentPeekAmountO
	f	F	cv	currentPeekAmount
	f	Ljb;	cw	clientOldAttachPosition
	f	I	cx	clientSideTeleportInterpolation
	f	F	cy	MAX_LID_OPEN
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Laza;	do	getSoundSource
	m	()Layy;	p	getAmbientSound
	m	()V	X	playAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	l	createAttributes
	m	()Lcgg;	O	createBodyControl
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()V	g	tick
	m	()V	gI	findNewAttachment
	m	(Lfis;)Lfin;	c	makeBoundingBox
	m	(F)F	L	getPhysicalPeek
	m	()Z	gJ	updatePeekAmount
	m	()V	gK	onPeekAmountChange
	m	(FLjh;FLfis;)Lfin;	a	getProgressAabb
	m	(FLjh;FFLfis;)Lfin;	a	getProgressDeltaAabb
	m	(Lbzm;Z)Z	a	startRiding
	m	()V	bS	stopRiding
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcaq;Lfis;)V	a	move
	m	()Lfis;	dA	getDeltaMovement
	m	(Lfis;)V	i	setDeltaMovement
	m	(DDD)V	a_	setPos
	m	(Ljb;)Ljh;	h	findAttachableSurface
	m	(Ljb;Ljh;)Z	a	canStayAt
	m	(Ljb;)Z	i	isPositionBlocked
	m	()Z	m	teleportSomewhere
	m	()Lcah;	l_	getInterpolation
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Z	gL	isClosed
	m	()V	gM	hitByShulkerBullet
	m	(Lbzm;)Z	j	canBeCollidedWith
	m	()Ljh;	n	getAttachFace
	m	(Ljh;)V	a	setAttachFace
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()I	gN	getRawPeekAmount
	m	(I)V	b	setRawPeekAmount
	m	(F)F	J	getClientPeekAmount
	m	(Lacr;)V	a	recreateFromPacket
	m	()I	gg	getMaxHeadXRot
	m	()I	gh	getMaxHeadYRot
	m	(Lbzm;)V	h	push
	m	(F)Lfis;	K	getRenderPosition
	m	(F)F	c	sanitizeScale
	m	(Ljava/util/Optional;)V	a	setVariant
	m	()Ljava/util/Optional;	t	getVariant
	m	()Ldbt;	gH	getColor
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Ldbt;)Ljava/lang/Byte;	a	lambda$setVariant$2
	m	(Lbzm;)Z	G	lambda$onPeekAmountChange$1
	m	()Lorg/joml/Vector3f;	gO	lambda$static$0
	m	(Lcsb;)Lbck;	a	access$000
	m	(Lcsb;)Lbck;	b	access$100
	m	(Lcsb;)Lbck;	c	access$200
	m	(Lcsb;)Lbck;	d	access$300
	m	(Lcsb;)Lbck;	e	access$400
	m	()V	<clinit>	<clinit>
c	csb$a	net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal
	f	I	b	attackTime
	f	Lcsb;	a	this$0
	m	(Lcsb;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	csb$b	net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl
	m	(Lcao;)V	<init>	<init>
	m	()V	a	clientTick
c	csb$c	net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal
	m	(Lcsb;)V	<init>	<init>
	m	()Z	b	canUse
	m	(D)Lfin;	a	getTargetSearchArea
	m	(Lcam;Laub;)Z	a	lambda$new$0
c	csb$d	net/minecraft/world/entity/monster/Shulker$ShulkerLookControl
	f	Lcsb;	h	this$0
	m	(Lcsb;Lcao;)V	<init>	<init>
	m	()V	b	clampHeadRotationToBody
	m	()Ljava/util/Optional;	i	getYRotD
	m	()Ljava/util/Optional;	h	getXRotD
c	csb$e	net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal
	f	Lcsb;	i	this$0
	m	(Lcsb;Lcsb;)V	<init>	<init>
	m	()Z	b	canUse
	m	(D)Lfin;	a	getTargetSearchArea
c	csb$f	net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal
	f	I	b	peekTime
	f	Lcsb;	a	this$0
	m	(Lcsb;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	csc	net/minecraft/world/entity/monster/Silverfish
	f	Lcsc$b;	a	friendsGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()V	g	tick
	m	(F)V	s	setYBodyRot
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkSilverfishSpawnRules
c	csc$a	net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal
	f	Ljh;	i	selectedDirection
	f	Z	j	doMerge
	m	(Lcsc;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
c	csc$b	net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal
	f	Lcsc;	a	silverfish
	f	I	b	lookForFriends
	m	(Lcsc;)V	<init>	<init>
	m	()V	h	notifyHurt
	m	()Z	b	canUse
	m	()V	a	tick
c	csd	net/minecraft/world/entity/monster/Skeleton
	f	I	b	TOTAL_CONVERSION_TIME
	f	Lalh;	c	DATA_STRAY_CONVERSION_ID
	f	Ljava/lang/String;	a	CONVERSION_TAG
	f	I	d	NOT_CONVERTING
	f	I	e	inPowderSnowTime
	f	I	f	conversionTime
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	gJ	isFreezeConverting
	m	(Z)V	x	setFreezeConverting
	m	()Z	gI	isShaking
	m	()V	g	tick
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(I)V	b	startFreezeConversion
	m	()V	gK	doFreezeConversion
	m	()Z	dN	canFreeze
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	m	getStepSound
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	(Lcsh;)V	a	lambda$doFreezeConversion$0
	m	()V	<clinit>	<clinit>
c	cse	net/minecraft/world/entity/monster/Slime
	f	Lalh;	cj	ID_SIZE
	f	I	a	MIN_SIZE
	f	I	b	MAX_SIZE
	f	I	c	MAX_NATURAL_SIZE
	f	Z	ck	DEFAULT_WAS_ON_GROUND
	f	F	d	targetSquish
	f	F	e	squish
	f	F	f	oSquish
	f	Z	cl	wasOnGround
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Laza;	do	getSoundSource
	m	(Lall$a;)V	a	defineSynchedData
	m	(IZ)V	a	setSize
	m	()I	gH	getSize
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	gI	isTiny
	m	()Lmc;	m	getParticleType
	m	()Z	ag	shouldDespawnInPeaceful
	m	()V	g	tick
	m	()V	t	decreaseSquish
	m	()I	n	getJumpDelay
	m	()V	j_	refreshDimensions
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lbzv;	ap	getType
	m	(Lbzm$e;)V	a	remove
	m	(Lbzm;)V	h	push
	m	(Lcut;)V	a_	playerTouch
	m	(Lcam;)V	i	dealDamage
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	()Z	gD	isDealsDamage
	m	()F	gE	getAttackDamage
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	gF	getSquishSound
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkSlimeSpawnRules
	m	()F	fk	getSoundVolume
	m	()I	gg	getMaxHeadXRot
	m	()Z	gJ	doPlayJumpSound
	m	()V	s	jumpFromGround
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()F	l	getSoundPitch
	m	()Layy;	gG	getJumpSound
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(IFFLcse;)V	a	lambda$remove$1
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	cse$a	net/minecraft/world/entity/monster/Slime$SlimeAttackGoal
	f	Lcse;	a	slime
	f	I	b	growTiredTimer
	m	(Lcse;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()Z	c	canContinueToUse
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cse$b	net/minecraft/world/entity/monster/Slime$SlimeFloatGoal
	f	Lcse;	a	slime
	m	(Lcse;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cse$c	net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal
	f	Lcse;	a	slime
	m	(Lcse;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
c	cse$d	net/minecraft/world/entity/monster/Slime$SlimeMoveControl
	f	F	l	yRot
	f	I	m	jumpDelay
	f	Lcse;	n	slime
	f	Z	o	isAggressive
	m	(Lcse;)V	<init>	<init>
	m	(FZ)V	a	setDirection
	m	(D)V	a	setWantedMovement
	m	()V	a	tick
c	cse$e	net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal
	f	Lcse;	a	slime
	f	F	b	chosenDegrees
	f	I	c	nextRandomizeTime
	m	(Lcse;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	a	tick
c	csf	net/minecraft/world/entity/monster/SpellcasterIllager
	f	Lalh;	a	DATA_SPELL_CASTING_ID
	f	I	e	DEFAULT_SPELLCASTING_TICKS
	f	I	b	spellCastingTickCount
	f	Lcsf$a;	f	currentSpell
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lcrc$a;	l	getArmPose
	m	()Z	gQ	isCastingSpell
	m	(Lcsf$a;)V	a	setIsCastingSpell
	m	()Lcsf$a;	gR	getCurrentSpell
	m	(Laub;)V	a	customServerAiStep
	m	()V	g	tick
	m	()I	gS	getSpellCastingTime
	m	()Layy;	t	getCastingSoundEvent
	m	(Lcsf;)Lcjw;	a	access$000
	m	()V	<clinit>	<clinit>
c	csf$a	net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell
	f	Lcsf$a;	a	NONE
	f	Lcsf$a;	b	SUMMON_VEX
	f	Lcsf$a;	c	FANGS
	f	Lcsf$a;	d	WOLOLO
	f	Lcsf$a;	e	DISAPPEAR
	f	Lcsf$a;	f	BLINDNESS
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	I	h	id
	f	[D	i	spellColor
	f	[Lcsf$a;	j	$VALUES
	m	()[Lcsf$a;	values	values
	m	(Ljava/lang/String;)Lcsf$a;	valueOf	valueOf
	m	(Ljava/lang/String;IIDDD)V	<init>	<init>
	m	(I)Lcsf$a;	a	byId
	m	(Lcsf$a;)I	a	lambda$static$0
	m	()[Lcsf$a;	a	$values
	m	()V	<clinit>	<clinit>
c	csf$b	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal
	f	Lcsf;	b	this$0
	m	(Lcsf;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	csf$c	net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal
	f	I	b	attackWarmupDelay
	f	I	c	nextAttackTickCount
	f	Lcsf;	d	this$0
	m	(Lcsf;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	a	tick
	m	()V	k	performSpellCasting
	m	()I	n	getCastWarmupTime
	m	()I	h	getCastingTime
	m	()I	i	getCastingInterval
	m	()Layy;	l	getSpellPrepareSound
	m	()Lcsf$a;	m	getSpell
c	csg	net/minecraft/world/entity/monster/Spider
	f	Lalh;	a	DATA_FLAGS_ID
	f	F	b	SPIDER_SPECIAL_EFFECT_CHANCE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	()Lcbr$a;	m	createAttributes
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Z	eV	onClimbable
	m	(Leeb;Lfis;)V	a	makeStuckInBlock
	m	(Lbyq;)Z	b	canBeAffected
	m	()Z	n	isClimbing
	m	(Z)V	x	setClimbing
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbzm;)Lfis;	m	getVehicleAttachmentPoint
	m	(Lcam;)Z	i	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	csg$a	net/minecraft/world/entity/monster/Spider$SpiderAttackGoal
	m	(Lcsg;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
c	csg$b	net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData
	f	Ljl;	a	effect
	m	()V	<init>	<init>
	m	(Lbck;)V	a	setRandomEffect
c	csg$c	net/minecraft/world/entity/monster/Spider$SpiderTargetGoal
	m	(Lcsg;Ljava/lang/Class;)V	<init>	<init>
	m	()Z	b	canUse
c	csh	net/minecraft/world/entity/monster/Stray
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldnl;Lbzu;Ljb;Lbck;)Z	a	checkStraySpawnRules
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	m	getStepSound
	m	(Ldcv;FLdcv;)Lcvb;	a	getArrow
c	csi	net/minecraft/world/entity/monster/Strider
	f	Lame;	ck	SUFFOCATING_MODIFIER_ID
	f	Lcbq;	cl	SUFFOCATING_MODIFIER
	f	F	cm	SUFFOCATE_STEERING_MODIFIER
	f	F	co	STEERING_MODIFIER
	f	Lalh;	cp	DATA_BOOST_TIME
	f	Lalh;	cq	DATA_SUFFOCATING
	f	Lcai;	cr	steering
	f	Lciq;	cs	temptGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkStriderSpawnRules
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lbzw;)Z	e	canUseSlot
	m	(Lbzw;)Z	f	canDispenserEquipIntoSlot
	m	(Lbzw;Ldcv;Ldle;)Ljl;	a	getEquipSound
	m	()V	H	registerGoals
	m	(Z)V	x	setSuffocating
	m	()Z	m	isSuffocating
	m	(Lfal;)Z	a	canStandOnFluid
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	()Lcam;	cY	getControllingPassenger
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	(Lcut;Lfis;)V	a	tickRidden
	m	(Lcut;Lfis;)Lfis;	b	getRiddenInput
	m	(Lcut;)F	c	getRiddenSpeed
	m	()F	aX	nextStep
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Z	a	boost
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	()V	g	tick
	m	()Z	t	isBeingTempted
	m	()Z	J	shouldPassengersInheritMalus
	m	()V	gH	floatStrider
	m	()Lcbr$a;	n	createAttributes
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Z	fx	isSensitiveToWater
	m	()Z	cb	isOnFire
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Laub;Lbzc;)Lcsi;	b	getBreedOffspring
	m	(Ldcv;)Z	i	isFood
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Lfis;	F	getLeashOffset
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Ldnl;Lbxh;Lcao;Lcbe;)Lcbe;	a	spawnJockey
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(Ldcv;)Z	j	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	csi$a	net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal
	f	Lcsi;	g	strider
	m	(Lcsi;D)V	<init>	<init>
	m	()Ljb;	k	getMoveToTarget
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	()Z	l	shouldRecalculatePath
	m	(Ldmx;Ljb;)Z	a	isValidTarget
c	csi$b	net/minecraft/world/entity/monster/Strider$StriderPathNavigation
	m	(Lcsi;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
	m	(Lfbc;)Z	a	hasValidPathType
	m	(Ljb;)Z	a	isStableDestination
c	csj	net/minecraft/world/entity/monster/Vex
	f	F	a	FLAP_DEGREES_PER_TICK
	f	I	b	TICKS_PER_FLAP
	f	Lalh;	c	DATA_FLAGS_ID
	f	I	d	FLAG_IS_CHARGING
	f	Lbzs;	e	owner
	f	Ljb;	f	boundOrigin
	f	Z	ck	hasLimitedLife
	f	I	cl	limitedLifeTicks
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	bd	isFlapping
	m	()Z	aO	isAffectedByBlocks
	m	()V	g	tick
	m	()V	H	registerGoals
	m	()Lcbr$a;	l	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lbzm;)V	y	restoreFrom
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lcao;	m	getOwner
	m	()Ljb;	n	getBoundOrigin
	m	(Ljb;)V	h	setBoundOrigin
	m	(I)Z	c	getVexFlag
	m	(IZ)V	a	setVexFlag
	m	()Z	t	isCharging
	m	(Z)V	x	setIsCharging
	m	(Lcao;)V	a	setOwner
	m	(I)V	b	setLimitedLife
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()F	bB	getLightLevelDependentMagicValue
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	()Lbzm;	ah_	getOwner
	m	()V	gH	lambda$readAdditionalSaveData$0
	m	(Lcsj;)Lbck;	a	access$000
	m	(Lcsj;)Lcgl;	b	access$100
	m	(Lcsj;)Lcgl;	c	access$200
	m	(Lcsj;)Lbck;	d	access$300
	m	(Lcsj;)Lbck;	e	access$400
	m	(Lcsj;)Lbck;	f	access$500
	m	(Lcsj;)Lbck;	g	access$600
	m	(Lcsj;)Lcgl;	h	access$700
	m	()V	<clinit>	<clinit>
c	csj$a	net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal
	f	Lcsj;	a	this$0
	m	(Lcsj;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	csj$b	net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal
	f	Lclc;	b	copyOwnerTargeting
	f	Lcsj;	a	this$0
	m	(Lcsj;Lcau;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
c	csj$c	net/minecraft/world/entity/monster/Vex$VexMoveControl
	f	Lcsj;	l	this$0
	m	(Lcsj;Lcsj;)V	<init>	<init>
	m	()V	a	tick
c	csj$d	net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal
	f	Lcsj;	a	this$0
	m	(Lcsj;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()V	a	tick
c	csk	net/minecraft/world/entity/monster/Vindicator
	f	Ljava/lang/String;	a	TAG_JOHNNY
	f	Ljava/util/function/Predicate;	b	DOOR_BREAKING_PREDICATE
	f	Z	e	DEFAULT_JOHNNY
	f	Z	f	isJohnny
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Laub;)V	a	customServerAiStep
	m	()Lcbr$a;	m	createAttributes
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Lcrc$a;	l	getArmPose
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Layy;	ag_	getCelebrateSound
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Lxo;)V	b	setCustomName
	m	()Layy;	p	getAmbientSound
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	(Lbxg;)Z	a	lambda$static$0
	m	(Lcsk;)Lbck;	a	access$000
	m	()V	<clinit>	<clinit>
c	csk$a	net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal
	m	(Lcao;)V	<init>	<init>
	m	()Z	c	canContinueToUse
	m	()Z	b	canUse
	m	()V	d	start
c	csk$b	net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal
	m	(Lcsk;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	(Lcam;Laub;)Z	a	lambda$new$0
c	csl	net/minecraft/world/entity/monster/Witch
	f	Lame;	a	SPEED_MODIFIER_DRINKING_ID
	f	Lcbq;	b	SPEED_MODIFIER_DRINKING
	f	Lalh;	e	DATA_USING_ITEM
	f	I	f	usingTime
	f	Lcjd;	ck	healRaidersGoal
	f	Lcjc;	cl	attackPlayersGoal
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Z)V	z	setUsingItem
	m	()Z	l	isDrinkingPotion
	m	()Lcbr$a;	m	createAttributes
	m	()V	e_	aiStep
	m	()Layy;	ag_	getCelebrateSound
	m	(B)V	b	handleEntityEvent
	m	(Lbyb;F)F	f	getDamageAfterMagicAbsorb
	m	(Lcam;F)V	a	performRangedAttack
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	()Z	gH	canBeLeader
	m	(Lcam;Laub;)Z	a	lambda$registerGoals$0
	m	()V	<clinit>	<clinit>
c	csm	net/minecraft/world/entity/monster/WitherSkeleton
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	m	getStepSound
	m	()Lbae;	ad	getPreferredWeaponType
	m	(Ldcv;)Z	g	canHoldItem
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Ldnl;Lbck;Lbxh;)V	a	populateDefaultEquipmentEnchantments
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Ldcv;FLdcv;)Lcvb;	a	getArrow
	m	(Lbyq;)Z	b	canBeAffected
c	csn	net/minecraft/world/entity/monster/Zoglin
	f	Lalh;	e	DATA_BABY_ID
	f	I	f	MAX_HEALTH
	f	I	ck	ATTACK_KNOCKBACK
	f	F	cl	KNOCKBACK_RESISTANCE
	f	I	cm	ATTACK_DAMAGE
	f	F	cn	BABY_ATTACK_DAMAGE
	f	I	co	ATTACK_INTERVAL
	f	I	cp	BABY_ATTACK_INTERVAL
	f	I	cq	ATTACK_DURATION
	f	F	cr	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	cs	SPEED_MULTIPLIER_WHEN_IDLING
	f	Z	ct	DEFAULT_BABY
	f	I	cu	attackAnimationRemainingTicks
	f	Lcom/google/common/collect/ImmutableList;	a	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	b	MEMORY_TYPES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	a	initCoreActivity
	m	(Lcbm;)V	b	initIdleActivity
	m	(Lcbm;)V	c	initFightActivity
	m	(Laub;)Ljava/util/Optional;	g	findNearestValidAttackTarget
	m	(Laub;Lcam;)Z	c	isTargetable
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Lcbr$a;	l	createAttributes
	m	()Z	m	isAdult
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()Z	v	canBeLeashed
	m	(Lcam;)V	d	blockedByItem
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lcam;)V	i	setAttackTarget
	m	()Lcbm;	eh	getBrain
	m	()V	n	updateActivity
	m	(Laub;)V	a	customServerAiStep
	m	(Z)V	a	setBaby
	m	()Z	g_	isBaby
	m	()V	e_	aiStep
	m	(B)V	b	handleEntityEvent
	m	()I	t	getAttackAnimationRemainingTicks
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	gH	playAngrySound
	m	()Lcam;	e	getTarget
	m	()V	ah	sendDebugPackets
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lcam;)Z	d	lambda$findNearestValidAttackTarget$1
	m	(Laub;Lcsn;)Ljava/util/Optional;	a	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	cso	net/minecraft/world/entity/monster/Zombie
	f	Lame;	a	SPEED_MODIFIER_BABY_ID
	f	Lcbq;	f	SPEED_MODIFIER_BABY
	f	Lame;	ck	REINFORCEMENT_CALLER_CHARGE_ID
	f	Lcbq;	cl	ZOMBIE_REINFORCEMENT_CALLEE_CHARGE
	f	Lame;	cm	LEADER_ZOMBIE_BONUS_ID
	f	Lame;	cn	ZOMBIE_RANDOM_SPAWN_BONUS_ID
	f	Lalh;	co	DATA_BABY_ID
	f	Lalh;	cp	DATA_SPECIAL_TYPE_ID
	f	Lalh;	cq	DATA_DROWNED_CONVERSION_ID
	f	F	b	ZOMBIE_LEADER_CHANCE
	f	I	c	REINFORCEMENT_ATTEMPTS
	f	I	d	REINFORCEMENT_RANGE_MAX
	f	I	e	REINFORCEMENT_RANGE_MIN
	f	I	cr	NOT_CONVERTING
	f	Lbzp;	cs	BABY_DIMENSIONS
	f	F	ct	BREAK_DOOR_CHANCE
	f	Ljava/util/function/Predicate;	cu	DOOR_BREAKING_PREDICATE
	f	Z	cv	DEFAULT_BABY
	f	Z	cw	DEFAULT_CAN_BREAK_DOORS
	f	I	cx	DEFAULT_IN_WATER_TIME
	f	Lcgs;	cy	breakDoorGoal
	f	Z	cz	canBreakDoors
	f	I	cA	inWaterTime
	f	I	cB	conversionTime
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	()V	m	addBehaviourGoals
	m	()Lcbr$a;	gK	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	gN	isUnderWaterConverting
	m	()Z	gO	canBreakDoors
	m	(Z)V	y	setCanBreakDoors
	m	()Z	g_	isBaby
	m	(Laub;)I	e	getBaseExperienceReward
	m	(Z)V	a	setBaby
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Z	gI	convertsInWater
	m	()V	g	tick
	m	()V	e_	aiStep
	m	(I)V	r	startUnderWaterConversion
	m	()V	ae_	doUnderWaterConversion
	m	(Lbzv;)V	b	convertToZombieType
	m	(Laub;Lcuf;)Z	a	convertVillagerToZombieVillager
	m	()Z	af_	isSunSensitive
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getStepSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Lbzv;	ap	getType
	m	()Z	t	canSpawnInLiquids
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lcam;)Z	a	killedEntity
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Ldcv;)Z	g	canHoldItem
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(I)V	b	setInWaterTime
	m	(I)V	c	setConversionTime
	m	(Lbck;)Z	a	getSpawnAsBabyOdds
	m	(F)V	J	handleAttributes
	m	()V	gP	randomizeReinforcementsChance
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	()Ldcv;	gH	getSkull
	m	(Laub;Lcuf;Lcsp;)V	a	lambda$convertVillagerToZombieVillager$2
	m	(Lcso;)V	b	lambda$convertToZombieType$1
	m	(Lbxg;)Z	a	lambda$static$0
	m	(Lcso;)Lbck;	a	access$000
	m	()V	<clinit>	<clinit>
c	cso$a	net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal
	f	Lcso;	g	this$0
	m	(Lcso;Lcau;DI)V	<init>	<init>
	m	(Ldmv;Ljb;)V	a	playDestroyProgressSound
	m	(Ldmu;Ljb;)V	a	playBreakSound
	m	()D	i	acceptedDistance
c	cso$b	net/minecraft/world/entity/monster/Zombie$ZombieGroupData
	f	Z	a	isBaby
	f	Z	b	canSpawnJockey
	m	(ZZ)V	<init>	<init>
c	csp	net/minecraft/world/entity/monster/ZombieVillager
	f	Lalh;	a	DATA_CONVERTING_ID
	f	Lalh;	f	DATA_VILLAGER_DATA
	f	I	ck	VILLAGER_CONVERSION_WAIT_MIN
	f	I	cl	VILLAGER_CONVERSION_WAIT_MAX
	f	I	cm	MAX_SPECIAL_BLOCKS_COUNT
	f	I	cn	SPECIAL_BLOCK_RADIUS
	f	I	co	NOT_CONVERTING
	f	I	cp	DEFAULT_XP
	f	I	cq	villagerConversionTime
	f	Ljava/util/UUID;	cr	conversionStarter
	f	Lcjk;	cs	gossips
	f	Ldlr;	ct	tradeOffers
	f	I	cu	villagerXp
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	g	tick
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()Z	gI	convertsInWater
	m	(D)Z	h	removeWhenFarAway
	m	()Z	gQ	isConverting
	m	(Ljava/util/UUID;I)V	b	startConverting
	m	(B)V	b	handleEntityEvent
	m	(Laub;)V	g	finishConversion
	m	(I)V	r	setVillagerConversionTime
	m	()I	gT	getConversionProgress
	m	()F	fl	getVoicePitch
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	n	getStepSound
	m	()Ldcv;	gH	getSkull
	m	(Ldlr;)V	a	setTradeOffers
	m	(Lcjk;)V	a	setGossips
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lcug;)V	a	setVillagerData
	m	()Lcug;	gR	getVillagerData
	m	()I	gS	getVillagerXp
	m	(I)V	s	setVillagerXp
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Laub;Lcuf;)V	b	lambda$finishConversion$1
	m	(Ldcv;)Z	i	lambda$finishConversion$0
	m	()V	<clinit>	<clinit>
c	csq	net/minecraft/world/entity/monster/ZombifiedPiglin
	f	Lbzp;	f	BABY_DIMENSIONS
	f	Lame;	ck	SPEED_MODIFIER_ATTACKING_ID
	f	Lcbq;	cl	SPEED_MODIFIER_ATTACKING
	f	Lbwu;	cm	FIRST_ANGER_SOUND_DELAY
	f	I	cn	playFirstAngerSoundIn
	f	Lbwu;	co	PERSISTENT_ANGER_TIME
	f	I	cp	remainingPersistentAngerTime
	f	Ljava/util/UUID;	cq	persistentAngerTarget
	f	I	cr	ALERT_RANGE_Y
	f	Lbwu;	cs	ALERT_INTERVAL
	f	I	ct	ticksUntilNextAlert
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljava/util/UUID;)V	a	setPersistentAngerTarget
	m	()V	m	addBehaviourGoals
	m	()Lcbr$a;	gQ	createAttributes
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Z	gI	convertsInWater
	m	(Laub;)V	a	customServerAiStep
	m	()V	gR	maybePlayFirstAngerSound
	m	()V	gS	maybeAlertOthers
	m	()V	gT	alertOthers
	m	()V	gU	playAngerSound
	m	(Lcam;)V	g	setTarget
	m	()V	c	startPersistentAngerTimer
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkZombifiedPiglinSpawnRules
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(I)V	a	setRemainingPersistentAngerTime
	m	()I	a	getRemainingPersistentAngerTime
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	()Ldcv;	gH	getSkull
	m	()V	gP	randomizeReinforcementsChance
	m	()Ljava/util/UUID;	b	getPersistentAngerTarget
	m	(Laub;Lcut;)Z	a	isPreventingPlayerRest
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	(Lcsq;)V	a	lambda$alertOthers$3
	m	(Lcsq;)Z	b	lambda$alertOthers$2
	m	(Lcsq;)Z	c	lambda$alertOthers$1
	m	(Lcsq;)Z	d	lambda$alertOthers$0
	m	()V	<clinit>	<clinit>
c	csr	net/minecraft/world/entity/monster/breeze/Breeze
	f	I	ck	SLIDE_PARTICLES_AMOUNT
	f	I	cl	IDLE_PARTICLES_AMOUNT
	f	I	cm	JUMP_DUST_PARTICLES_AMOUNT
	f	I	cn	JUMP_TRAIL_PARTICLES_AMOUNT
	f	I	co	JUMP_TRAIL_DURATION_TICKS
	f	I	cp	JUMP_CIRCLE_DISTANCE_Y
	f	F	cq	FALL_DISTANCE_SOUND_TRIGGER_THRESHOLD
	f	I	cr	WHIRL_SOUND_FREQUENCY_MIN
	f	I	cs	WHIRL_SOUND_FREQUENCY_MAX
	f	Lbzd;	a	idle
	f	Lbzd;	b	slide
	f	Lbzd;	c	slideBack
	f	Lbzd;	d	longJump
	f	Lbzd;	e	shoot
	f	Lbzd;	f	inhale
	f	I	ct	jumpTrailStartedTick
	f	I	cu	soundTick
	f	Lcvp;	cv	PROJECTILE_DEFLECTION
	m	()Lcbr$a;	l	createAttributes
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()Lcbm$b;	ei	brainProvider
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	gJ	resetAnimations
	m	()V	g	tick
	m	()Lcsr;	m	resetJumpTrail
	m	()V	n	emitJumpTrailParticles
	m	(I)V	b	emitGroundParticles
	m	()V	X	playAmbientSound
	m	()V	t	playWhirlSound
	m	(Lcvo;)Lcvp;	a	deflection
	m	()Laza;	do	getSoundSource
	m	()Layy;	f_	getDeathSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	p	getAmbientSound
	m	()Ljava/util/Optional;	gH	getHurtBy
	m	(Lfis;)Z	m	withinInnerCircleRange
	m	(Laub;)V	a	customServerAiStep
	m	()V	ah	sendDebugPackets
	m	(Lbzv;)Z	a	canAttackType
	m	()I	gh	getMaxHeadYRot
	m	()I	gj	getHeadRotSpeed
	m	()D	gI	getFiringYPosition
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	()D	dr	getFluidJumpThreshold
	m	(DFLbyb;)Z	a	causeFallDamage
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Lcam;	e	getTarget
	m	(Lbzm;)Lcam;	G	lambda$getHurtBy$2
	m	(Lbzm;)Z	H	lambda$getHurtBy$1
	m	(Lcvo;Lbzm;Lbck;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	csr$1	net/minecraft/world/entity/monster/breeze/Breeze$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
	m	()V	<clinit>	<clinit>
c	css	net/minecraft/world/entity/monster/breeze/BreezeAi
	f	F	a	SPEED_MULTIPLIER_WHEN_SLIDING
	f	F	b	JUMP_CIRCLE_INNER_RADIUS
	f	F	c	JUMP_CIRCLE_MIDDLE_RADIUS
	f	F	d	JUMP_CIRCLE_OUTER_RADIUS
	f	Ljava/util/List;	e	SENSOR_TYPES
	f	Ljava/util/List;	f	MEMORY_TYPES
	f	I	g	TICKS_TO_REMEMBER_SEEN_TARGET
	m	()V	<init>	<init>
	m	(Lcsr;Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	a	initCoreActivity
	m	(Lcbm;)V	b	initIdleActivity
	m	(Lcsr;Lcbm;)V	b	initFightActivity
	m	(Lcsr;)V	a	updateActivity
	m	(Laub;Lcsr;)Ljava/util/Optional;	a	lambda$initIdleActivity$1
	m	(Laub;Lcsr;)Ljava/util/Optional;	b	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	css$a	net/minecraft/world/entity/monster/breeze/BreezeAi$SlideToTargetSink
	m	(II)V	<init>	<init>
	m	(Laub;Lcao;J)V	c	start
	m	(Laub;Lcao;J)V	b	stop
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	d	start
c	cst	net/minecraft/world/entity/monster/breeze/BreezeUtil
	f	D	a	MAX_LINE_OF_SIGHT_TEST_RANGE
	m	()V	<init>	<init>
	m	(Lcam;Lbck;)Lfis;	a	randomPointBehindTarget
	m	(Lcsr;Lfis;)Z	a	hasLineOfSight
	m	(Lcsr;)D	a	getMaxLineOfSightTestRange
c	csu	net/minecraft/world/entity/monster/breeze/LongJump
	f	I	c	REQUIRED_AIR_BLOCKS_ABOVE
	f	I	d	JUMP_COOLDOWN_TICKS
	f	I	e	JUMP_COOLDOWN_WHEN_HURT_TICKS
	f	I	f	INHALING_DURATION_TICKS
	f	F	g	DEFAULT_FOLLOW_RANGE
	f	F	h	DEFAULT_MAX_JUMP_VELOCITY
	f	F	i	MAX_JUMP_VELOCITY_MULTIPLIER
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	j	ALLOWED_ANGLES
	m	()V	<init>	<init>
	m	(Laub;Lcsr;)Z	a	canRun
	m	(Laub;Lcsr;)Z	b	checkExtraStartConditions
	m	(Laub;Lcsr;J)Z	a	canStillUse
	m	(Laub;Lcsr;J)V	b	start
	m	(Laub;Lcsr;J)V	c	tick
	m	(Laub;Lcsr;J)V	d	stop
	m	(Lcsr;)Z	a	isFinishedInhaling
	m	(Lcsr;)Z	b	isFinishedJumping
	m	(Lcam;Lfis;)Ljb;	a	snapToSurface
	m	(Lcsr;Lcam;)Z	a	outOfAggroRange
	m	(Lcsr;Lcam;)Z	b	tooCloseForJump
	m	(Laub;Lcsr;)Z	c	canJumpFromCurrentPosition
	m	(Lcsr;Lbck;Lfis;)Ljava/util/Optional;	a	calculateOptimalJumpVector
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(DLfis;)Lfis;	a	lambda$calculateOptimalJumpVector$2
	m	(Lcsr;Ljb;)Ljava/util/Optional;	a	lambda$tick$1
	m	(Lcsr;Ljb;)V	b	lambda$start$0
	m	()V	<clinit>	<clinit>
c	csv	net/minecraft/world/entity/monster/breeze/Shoot
	f	I	c	ATTACK_RANGE_MAX_SQRT
	f	I	d	UNCERTAINTY_BASE
	f	I	e	UNCERTAINTY_MULTIPLIER
	f	F	f	PROJECTILE_MOVEMENT_SCALE
	f	I	g	SHOOT_INITIAL_DELAY_TICKS
	f	I	h	SHOOT_RECOVER_DELAY_TICKS
	f	I	i	SHOOT_COOLDOWN_TICKS
	m	()V	<init>	<init>
	m	(Laub;Lcsr;)Z	a	checkExtraStartConditions
	m	(Laub;Lcsr;J)Z	a	canStillUse
	m	(Laub;Lcsr;J)V	b	start
	m	(Laub;Lcsr;J)V	c	stop
	m	(Laub;Lcsr;J)V	d	tick
	m	(Lcsr;Lcam;)Z	a	isTargetWithinRange
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	b	stop
	m	(Laub;Lcam;J)V	c	tick
	m	(Laub;Lcam;J)V	d	start
	m	(Lcsr;Lcam;)V	b	lambda$start$2
	m	(Lcsr;Ljava/lang/Boolean;)Ljava/lang/Boolean;	a	lambda$checkExtraStartConditions$1
	m	(Lcsr;Lcam;)Ljava/lang/Boolean;	c	lambda$checkExtraStartConditions$0
	m	()V	<clinit>	<clinit>
c	csw	net/minecraft/world/entity/monster/breeze/ShootWhenStuck
	m	()V	<init>	<init>
	m	(Laub;Lcsr;)Z	a	checkExtraStartConditions
	m	(Laub;Lcsr;J)Z	a	canStillUse
	m	(Laub;Lcsr;J)V	b	start
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)Z	a	canStillUse
	m	(Laub;Lcam;J)V	d	start
c	csx	net/minecraft/world/entity/monster/breeze/Slide
	m	()V	<init>	<init>
	m	(Laub;Lcsr;)Z	a	checkExtraStartConditions
	m	(Laub;Lcsr;J)V	a	start
	m	(Lcsr;Lcam;)Lfis;	a	randomPointInMiddleCircle
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;J)V	d	start
c	csy	net/minecraft/world/entity/monster/breeze/package-info
c	csz	net/minecraft/world/entity/monster/creaking/Creaking
	f	Lalh;	cn	CAN_MOVE
	f	Lalh;	co	IS_ACTIVE
	f	Lalh;	cp	IS_TEARING_DOWN
	f	Lalh;	cq	HOME_POS
	f	I	cr	ATTACK_ANIMATION_DURATION
	f	I	cs	MAX_HEALTH
	f	F	ct	ATTACK_DAMAGE
	f	F	cu	FOLLOW_RANGE
	f	F	cv	ACTIVATION_RANGE_SQ
	f	I	a	ATTACK_INTERVAL
	f	F	cw	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	b	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	c	CREAKING_ORANGE
	f	I	d	CREAKING_GRAY
	f	I	e	INVULNERABILITY_ANIMATION_DURATION
	f	I	f	TWITCH_DEATH_DURATION
	f	I	cx	MAX_PLAYER_STUCK_COUNTER
	f	I	cy	attackAnimationRemainingTicks
	f	Lbzd;	ck	attackAnimationState
	f	Lbzd;	cl	invulnerabilityAnimationState
	f	Lbzd;	cm	deathAnimationState
	f	I	cz	invulnerabilityAnimationRemainingTicks
	f	Z	cA	eyesGlowing
	f	I	cB	nextFlickerTime
	f	I	cC	playerStuckCounter
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ljb;)V	h	setTransient
	m	()Z	l	isHeartBound
	m	()Lcgg;	O	createBodyControl
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcbr$a;	m	createAttributes
	m	()Z	n	canMove
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbyb;)Lcut;	i	blameSourceForDamage
	m	()Z	bL	isPushable
	m	(DDD)V	i	push
	m	()Lcbm;	eh	getBrain
	m	(Laub;)V	a	customServerAiStep
	m	()V	e_	aiStep
	m	()V	g	tick
	m	()V	es	tickDeath
	m	(F)V	A	updateWalkAnimation
	m	()V	gS	setupAnimationStates
	m	()V	t	tearDown
	m	(Lbyb;)V	j	creakingDeathEffects
	m	(B)V	b	handleEntityEvent
	m	()Z	bl	fireImmune
	m	(Lbzm;)Z	s	canAddPassenger
	m	()Z	bT	couldAcceptPassenger
	m	(Lbzm;)V	q	addPassenger
	m	(Z)Z	o	canUsePortal
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()Z	gH	playerIsStuckInYou
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Ljb;)V	i	setHomePos
	m	()Ljb;	gI	getHomePos
	m	()V	gJ	setTearingDown
	m	()Z	gK	isTearingDown
	m	()Z	gN	hasGlowingEyes
	m	()V	gO	checkEyeBlink
	m	()V	gA	playAttackSound
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Lcam;	e	getTarget
	m	()V	ah	sendDebugPackets
	m	(DDD)V	p	knockback
	m	()Z	gP	checkCanMove
	m	(Lcut;)V	g	activate
	m	()V	gQ	deactivate
	m	(Z)V	x	setIsActive
	m	()Z	gR	isActive
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	()V	<clinit>	<clinit>
c	csz$a	net/minecraft/world/entity/monster/creaking/Creaking$CreakingBodyRotationControl
	f	Lcsz;	a	this$0
	m	(Lcsz;Lcsz;)V	<init>	<init>
	m	()V	a	clientTick
c	csz$b	net/minecraft/world/entity/monster/creaking/Creaking$CreakingJumpControl
	f	Lcsz;	b	this$0
	m	(Lcsz;Lcsz;)V	<init>	<init>
	m	()V	b	tick
c	csz$c	net/minecraft/world/entity/monster/creaking/Creaking$CreakingLookControl
	f	Lcsz;	h	this$0
	m	(Lcsz;Lcsz;)V	<init>	<init>
	m	()V	a	tick
c	csz$d	net/minecraft/world/entity/monster/creaking/Creaking$CreakingMoveControl
	f	Lcsz;	l	this$0
	m	(Lcsz;Lcsz;)V	<init>	<init>
	m	()V	a	tick
c	csz$e	net/minecraft/world/entity/monster/creaking/Creaking$CreakingPathNavigation
	f	Lcsz;	p	this$0
	m	(Lcsz;Lcsz;Ldmu;)V	<init>	<init>
	m	()V	d	tick
	m	(I)Lfbb;	a	createPathFinder
c	csz$f	net/minecraft/world/entity/monster/creaking/Creaking$HomeNodeEvaluator
	f	I	m	MAX_DISTANCE_TO_HOME_SQ
	f	Lcsz;	a	this$0
	m	(Lcsz;)V	<init>	<init>
	m	(Lfbe;III)Lfbc;	a	getPathType
c	cta	net/minecraft/world/entity/monster/creaking/CreakingAi
	f	Lcom/google/common/collect/ImmutableList;	a	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	b	MEMORY_TYPES
	m	()V	<init>	<init>
	m	(Lcbm;)V	a	initCoreActivity
	m	(Lcbm;)V	b	initIdleActivity
	m	(Lcsz;Lcbm;)V	a	initFightActivity
	m	(Lcsz;Lcam;)Z	a	isAttackTargetStillReachable
	m	()Lcbm$b;	a	brainProvider
	m	(Lcsz;Lcbm;)Lcbm;	b	makeBrain
	m	(Lcsz;)V	a	updateActivity
	m	(Lcam;Ljava/util/List;)Ljava/lang/Boolean;	a	lambda$isAttackTargetStillReachable$3
	m	(Lcsz;Laub;Lcam;)Z	a	lambda$initFightActivity$2
	m	(Laub;Lcsz;)Ljava/util/Optional;	a	lambda$initIdleActivity$1
	m	(Laub;Lcsz;)Z	b	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	cta$1	net/minecraft/world/entity/monster/creaking/CreakingAi$1
	m	(F)V	<init>	<init>
	m	(Laub;Lcsz;)Z	a	checkExtraStartConditions
	m	(Laub;Lcam;)Z	a	checkExtraStartConditions
c	ctb	net/minecraft/world/entity/monster/creaking/package-info
c	ctc	net/minecraft/world/entity/monster/hoglin/Hoglin
	f	Lalh;	co	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	cp	MAX_HEALTH
	f	F	cq	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cr	ATTACK_KNOCKBACK
	f	F	cs	KNOCKBACK_RESISTANCE
	f	I	ct	ATTACK_DAMAGE
	f	F	cu	BABY_ATTACK_DAMAGE
	f	Z	cv	DEFAULT_IMMUNE_TO_ZOMBIFICATION
	f	I	cw	DEFAULT_TIME_IN_OVERWORLD
	f	Z	cx	DEFAULT_CANNOT_BE_HUNTED
	f	I	ck	CONVERSION_TIME
	f	I	cy	attackAnimationRemainingTicks
	f	I	cz	timeInOverworld
	f	Z	cA	cannotBeHunted
	f	Lcom/google/common/collect/ImmutableList;	cl	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cm	MEMORY_TYPES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(I)V	s	setTimeInOverworld
	m	()Z	v	canBeLeashed
	m	()Lcbr$a;	m	createAttributes
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Lcam;)V	d	blockedByItem
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	(Laub;)V	a	customServerAiStep
	m	()V	e_	aiStep
	m	()V	h	ageBoundaryReached
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	c	checkHoglinSpawnRules
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(D)Z	h	removeWhenFarAway
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(B)V	b	handleEntityEvent
	m	()I	t	getAttackAnimationRemainingTicks
	m	()Z	et	shouldDropExperience
	m	(Laub;)I	e	getBaseExperienceReward
	m	()V	gJ	finishConversion
	m	(Ldcv;)Z	i	isFood
	m	()Z	n	isAdult
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Z)V	x	setImmuneToZombification
	m	()Z	gK	isImmuneToZombification
	m	()Z	gH	isConverting
	m	(Z)V	y	setCannotBeHunted
	m	()Z	gI	canBeHunted
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Z	gO	canFallInLove
	m	()Laza;	do	getSoundSource
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()Layy;	aY	getSwimSound
	m	()Layy;	aZ	getSwimSplashSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	ah	sendDebugPackets
	m	()Lcam;	e	getTarget
	m	(Lcsn;)V	a	lambda$finishConversion$0
	m	()V	<clinit>	<clinit>
c	ctd	net/minecraft/world/entity/monster/hoglin/HoglinAi
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Lbwu;	c	RETREAT_DURATION
	f	I	d	ATTACK_DURATION
	f	I	e	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING
	f	I	f	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING
	f	I	g	ATTACK_INTERVAL
	f	I	h	BABY_ATTACK_INTERVAL
	f	I	i	REPELLENT_PACIFY_TIME
	f	Lbwu;	j	ADULT_FOLLOW_RANGE
	f	F	k	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT
	f	F	l	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	m	SPEED_MULTIPLIER_WHEN_MAKING_LOVE
	f	F	n	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	o	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT
	m	()V	<init>	<init>
	m	(Lcbm;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	b	initCoreActivity
	m	(Lcbm;)V	c	initIdleActivity
	m	(Lcbm;)V	d	initFightActivity
	m	(Lcbm;)V	e	initRetreatActivity
	m	()Lcea;	a	createIdleMovementBehaviors
	m	(Lctc;)V	a	updateActivity
	m	(Lctc;Lcam;)V	a	onHitTarget
	m	(Lctc;Lcam;)V	b	broadcastRetreat
	m	(Lctc;Lcam;)V	c	retreatFromNearestTarget
	m	(Lctc;Lcam;)V	d	setAvoidTarget
	m	(Laub;Lctc;)Ljava/util/Optional;	a	findNearestValidAttackTarget
	m	(Lctc;Ljb;)Z	a	isPosNearNearestRepellent
	m	(Lctc;)Z	d	wantsToStopFleeing
	m	(Lctc;)Z	e	piglinsOutnumberHoglins
	m	(Laub;Lctc;Lcam;)V	a	wasHurtBy
	m	(Laub;Lctc;Lcam;)V	b	maybeRetaliate
	m	(Lctc;Lcam;)V	e	setAttackTarget
	m	(Lctc;Lcam;)V	f	broadcastAttackTarget
	m	(Lctc;Lcam;)V	g	setAttackTargetIfCloserThanCurrent
	m	(Lctc;)Ljava/util/Optional;	b	getSoundForCurrentActivity
	m	(Lctc;Lcwn;)Layy;	a	getSoundForActivity
	m	(Lctc;)Ljava/util/List;	f	getVisibleAdultHoglins
	m	(Lctc;)Z	g	isNearRepellent
	m	(Lctc;)Z	h	isBreeding
	m	(Lctc;)Z	c	isPacified
	m	(Lctc;Lcwn;)Layy;	b	lambda$getSoundForCurrentActivity$2
	m	(Lcam;Lctc;)V	a	lambda$broadcastAttackTarget$1
	m	(Lcam;Lctc;)V	b	lambda$broadcastRetreat$0
	m	()V	<clinit>	<clinit>
c	cte	net/minecraft/world/entity/monster/hoglin/HoglinBase
	f	I	u_	ATTACK_ANIMATION_DURATION
	f	F	v_	PROBABILITY_OF_SPAWNING_AS_BABY
	m	()I	t	getAttackAnimationRemainingTicks
	m	(Laub;Lcam;Lcam;)Z	a	hurtAndThrowTarget
	m	(Lcam;Lcam;)V	a	throwTarget
c	ctf	net/minecraft/world/entity/monster/hoglin/package-info
c	ctg	net/minecraft/world/entity/monster/package-info
c	cth	net/minecraft/world/entity/monster/piglin/AbstractPiglin
	f	Lalh;	a	DATA_IMMUNE_TO_ZOMBIFICATION
	f	I	b	CONVERSION_TIME
	f	Z	d	DEFAULT_IMMUNE_TO_ZOMBIFICATION
	f	Z	e	DEFAULT_PICK_UP_LOOT
	f	I	f	DEFAULT_TIME_IN_OVERWORLD
	f	I	c	timeInOverworld
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	n	applyOpenDoorsAbility
	m	()Z	l	canHunt
	m	(Z)V	x	setImmuneToZombification
	m	()Z	m	isImmuneToZombification
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;)V	a	customServerAiStep
	m	(I)V	b	setTimeInOverworld
	m	()Z	t	isConverting
	m	(Laub;)V	g	finishConversion
	m	()Z	gH	isAdult
	m	()Lctk;	gI	getArmPose
	m	()Lcam;	e	getTarget
	m	()Z	gJ	isHoldingMeleeWeapon
	m	()V	X	playAmbientSound
	m	()V	ah	sendDebugPackets
	m	()V	gK	playConvertedSound
	m	(Lcsq;)V	a	lambda$finishConversion$0
	m	()V	<clinit>	<clinit>
c	cti	net/minecraft/world/entity/monster/piglin/Piglin
	f	Lalh;	ck	DATA_BABY_ID
	f	Lalh;	cl	DATA_IS_CHARGING_CROSSBOW
	f	Lalh;	cm	DATA_IS_DANCING
	f	Lame;	cn	SPEED_MODIFIER_BABY_ID
	f	Lcbq;	co	SPEED_MODIFIER_BABY
	f	I	cp	MAX_HEALTH
	f	F	cq	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cr	ATTACK_DAMAGE
	f	F	cs	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM
	f	I	ct	MAX_PASSENGERS_ON_ONE_HOGLIN
	f	F	cu	PROBABILITY_OF_SPAWNING_AS_BABY
	f	Lbzp;	cv	BABY_DIMENSIONS
	f	D	cw	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD
	f	Z	cx	DEFAULT_IS_BABY
	f	Z	cy	DEFAULT_CANNOT_HUNT
	f	Lbxr;	cz	inventory
	f	Z	cA	cannotHunt
	f	Lcom/google/common/collect/ImmutableList;	d	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	e	MEMORY_TYPES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Lbxr;	n	getInventory
	m	(Laub;Lbyb;Z)V	a	dropCustomDeathLoot
	m	(Ldcv;)Ldcv;	i	addToInventory
	m	(Ldcv;)Z	j	canAddToInventory
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()Lcbr$a;	gN	createAttributes
	m	(Lbzv;Ldmv;Lbzu;Ljb;Lbck;)Z	b	checkPiglinSpawnRules
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Z	ag	shouldDespawnInPeaceful
	m	(D)Z	h	removeWhenFarAway
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	(Lbzw;Ldcv;Lbck;)V	a	maybeWearArmor
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	(Z)V	a	setBaby
	m	()Z	g_	isBaby
	m	(Z)V	z	setCannotHunt
	m	()Z	l	canHunt
	m	(Laub;)V	a	customServerAiStep
	m	(Laub;)I	e	getBaseExperienceReward
	m	(Laub;)V	g	finishConversion
	m	()Ldcv;	gP	createSpawnWeapon
	m	()Lbae;	ad	getPreferredWeaponType
	m	()Z	gQ	isChargingCrossbow
	m	(Z)V	b	setChargingCrossbow
	m	()V	a	onCrossbowAttackPerformed
	m	()Lctk;	gI	getArmPose
	m	()Z	gO	isDancing
	m	(Z)V	y	setDancing
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lcam;F)V	a	performRangedAttack
	m	(Lddq;)Z	a	canFireProjectileWeapon
	m	(Ldcv;)V	k	holdInMainHand
	m	(Ldcv;)V	l	holdInOffHand
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	(Ldcv;)Z	m	canReplaceCurrentItem
	m	(Ldcv;Ldcv;Lbzw;)Z	a	canReplaceCurrentItem
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(Lbzm;Z)Z	a	startRiding
	m	(Lbzm;I)Lbzm;	b	getTopPassenger
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	gK	playConvertedSound
	m	(Laub;Ldcv;)V	d	lambda$finishConversion$1
	m	(Laub;Ldcv;)V	e	lambda$dropCustomDeathLoot$0
	m	()V	<clinit>	<clinit>
c	ctj	net/minecraft/world/entity/monster/piglin/PiglinAi
	f	I	a	REPELLENT_DETECTION_RANGE_HORIZONTAL
	f	I	b	REPELLENT_DETECTION_RANGE_VERTICAL
	f	Ldcr;	c	BARTERING_ITEM
	f	I	e	PLAYER_ANGER_RANGE
	f	I	f	ANGER_DURATION
	f	I	g	ADMIRE_DURATION
	f	I	h	MAX_DISTANCE_TO_WALK_TO_ITEM
	f	I	i	MAX_TIME_TO_WALK_TO_ITEM
	f	I	j	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM
	f	I	k	CELEBRATION_TIME
	f	Lbwu;	d	TIME_BETWEEN_HUNTS
	f	I	l	BABY_FLEE_DURATION_AFTER_GETTING_HIT
	f	I	m	HIT_BY_PLAYER_MEMORY_TIMEOUT
	f	I	n	MAX_WALK_DISTANCE_TO_START_RIDING
	f	Lbwu;	o	RIDE_START_INTERVAL
	f	Lbwu;	p	RIDE_DURATION
	f	Lbwu;	q	RETREAT_DURATION
	f	I	r	MELEE_ATTACK_COOLDOWN
	f	I	s	EAT_COOLDOWN
	f	I	t	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING
	f	I	u	MAX_LOOK_DIST
	f	I	v	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM
	f	I	w	INTERACTION_RANGE
	f	I	x	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW
	f	F	y	SPEED_WHEN_STRAFING_BACK_FROM_TARGET
	f	I	z	DESIRED_DISTANCE_FROM_ZOMBIFIED
	f	Lbwu;	A	AVOID_ZOMBIFIED_DURATION
	f	Lbwu;	B	BABY_AVOID_NEMESIS_DURATION
	f	F	C	PROBABILITY_OF_CELEBRATION_DANCE
	f	F	D	SPEED_MULTIPLIER_WHEN_AVOIDING
	f	F	E	SPEED_MULTIPLIER_WHEN_RETREATING
	f	F	F	SPEED_MULTIPLIER_WHEN_MOUNTING
	f	F	G	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM
	f	F	H	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION
	f	F	I	SPEED_MULTIPLIER_WHEN_DANCING
	f	F	J	SPEED_MULTIPLIER_WHEN_IDLING
	m	()V	<init>	<init>
	m	(Lcti;Lcbm;)Lcbm;	a	makeBrain
	m	(Lcti;Lbck;)V	a	initMemories
	m	(Lcbm;)V	a	initCoreActivity
	m	(Lcbm;)V	b	initIdleActivity
	m	(Lcti;Lcbm;)V	b	initFightActivity
	m	(Lcbm;)V	c	initCelebrateActivity
	m	(Lcbm;)V	d	initAdmireItemActivity
	m	(Lcbm;)V	e	initRetreatActivity
	m	(Lcbm;)V	f	initRideHoglinActivity
	m	()Lcom/google/common/collect/ImmutableList;	a	createLookBehaviors
	m	()Lcea;	b	createIdleLookBehaviors
	m	()Lcea;	c	createIdleMovementBehaviors
	m	()Lcce;	d	avoidRepellent
	m	()Lcce;	e	babyAvoidNemesis
	m	()Lcce;	f	avoidZombified
	m	(Lcti;)V	a	updateActivity
	m	(Lcti;)Z	e	isBabyRidingBaby
	m	(Laub;Lcti;Lcqz;)V	a	pickUpItem
	m	(Laub;Lcti;Ldcv;)V	a	holdInOffhand
	m	(Lcqz;)Ldcv;	a	removeOneItemFromItemEntity
	m	(Laub;Lcti;Z)V	a	stopHoldingOffHandItem
	m	(Laub;Lcti;)V	a	cancelAdmiring
	m	(Lcti;Ldcv;)V	c	putInInventory
	m	(Lcti;Ljava/util/List;)V	a	throwItems
	m	(Lcti;Ljava/util/List;)V	b	throwItemsTowardRandomPos
	m	(Lcti;Lcut;Ljava/util/List;)V	a	throwItemsTowardPlayer
	m	(Lcti;Ljava/util/List;Lfis;)V	a	throwItemsTowardPos
	m	(Lcti;)Ljava/util/List;	f	getBarterResponseItems
	m	(Lcam;Lcam;)Z	a	wantsToDance
	m	(Lcti;Ldcv;)Z	a	wantsToPickup
	m	(Ldcv;)Z	a	isLovedItem
	m	(Lcti;Lbzm;)Z	a	wantsToStopRiding
	m	(Laub;Lcti;Lcam;)Z	b	isNearestValidAttackTarget
	m	(Lcti;)Z	g	isNearZombified
	m	(Laub;Lcti;)Ljava/util/Optional;	b	findNearestValidAttackTarget
	m	(Laub;Lcut;Z)V	a	angerNearbyPiglins
	m	(Laub;Lcti;Lcut;Lbxi;)Lbxj;	a	mobInteract
	m	(Lcti;Ldcv;)Z	b	canAdmire
	m	(Laub;Lcti;Lcam;)V	a	wasHurtBy
	m	(Laub;Lcth;Lcam;)V	a	maybeRetaliate
	m	(Lcti;)Ljava/util/Optional;	b	getSoundForCurrentActivity
	m	(Lcti;Lcwn;)Layy;	a	getSoundForActivity
	m	(Lcti;)Z	h	isNearAvoidTarget
	m	(Lcti;)Ljava/util/List;	c	getVisibleAdultPiglins
	m	(Lcth;)Ljava/util/List;	d	getAdultPiglins
	m	(Lcam;)Z	a	isWearingSafeArmor
	m	(Lcti;)V	i	stopWalking
	m	()Lcce;	g	babySometimesRideBabyHoglin
	m	(Laub;Lcth;Lcam;)V	b	broadcastAngerTarget
	m	(Laub;Lcth;)V	a	broadcastUniversalAnger
	m	(Laub;Lcth;Lcam;)V	c	setAngerTarget
	m	(Laub;Lcth;Lcam;)V	d	setAngerTargetToNearestTargetablePlayerIfFound
	m	(Laub;Lcth;Lcam;)V	e	setAngerTargetIfCloserThanCurrent
	m	(Lcth;)Ljava/util/Optional;	e	getAngerTarget
	m	(Lcti;)Ljava/util/Optional;	d	getAvoidTarget
	m	(Lcth;)Ljava/util/Optional;	a	getNearestVisibleTargetablePlayer
	m	(Lcti;Lcam;)V	a	broadcastRetreat
	m	(Lcti;Lcam;)V	b	retreatFromNearestTarget
	m	(Lcti;)Z	j	wantsToStopFleeing
	m	(Lcti;)Z	k	piglinsEqualOrOutnumberHoglins
	m	(Lcti;)Z	l	hoglinsOutnumberPiglins
	m	(Lcti;Lcam;)V	c	setAvoidTargetAndDontHuntForAWhile
	m	(Lcth;)V	b	dontKillAnyMoreHoglinsForAWhile
	m	(Lcti;)V	m	eat
	m	(Lcti;)Lfis;	n	getRandomNearbyPos
	m	(Lcti;)Z	o	hasEatenRecently
	m	(Lcth;)Z	c	isIdle
	m	(Lcam;)Z	c	hasCrossbow
	m	(Lcam;)V	d	admireGoldItem
	m	(Lcti;)Z	p	isAdmiringItem
	m	(Ldcv;)Z	b	isBarterCurrency
	m	(Ldcv;)Z	c	isFood
	m	(Lcti;)Z	q	isNearRepellent
	m	(Lcam;)Z	e	seesPlayerHoldingLovedItem
	m	(Lcam;)Z	f	doesntSeeAnyPlayerHoldingLovedItem
	m	(Lcam;)Z	b	isPlayerHoldingLovedItem
	m	(Lcti;)Z	r	isAdmiringDisabled
	m	(Lcam;)Z	g	wasHurtRecently
	m	(Lcti;)Z	s	isHoldingItemInOffHand
	m	(Lcti;)Z	t	isNotHoldingLovedItemInOffHand
	m	(Lbzv;)Z	a	isZombified
	m	(Lcam;Lcth;)V	a	lambda$broadcastRetreat$15
	m	(Lcth;)Z	f	lambda$broadcastRetreat$14
	m	(Laub;Lcth;)V	b	lambda$broadcastUniversalAnger$13
	m	(Laub;Lcth;Lcut;)V	a	lambda$broadcastUniversalAnger$12
	m	(Lcam;Laub;Lcth;)V	a	lambda$broadcastAngerTarget$11
	m	(Lced$a;Lcam;)Z	a	lambda$babySometimesRideBabyHoglin$10
	m	(Lcti;Lcwn;)Layy;	b	lambda$getSoundForCurrentActivity$9
	m	(Lcam;Lcbm;Lcam;)V	a	lambda$wasHurtBy$8
	m	(Laub;Lcut;Lcti;)V	a	lambda$angerNearbyPiglins$7
	m	(ZLcut;Lcti;)Z	a	lambda$angerNearbyPiglins$6
	m	(Lcam;Lcam;)Z	b	lambda$isNearestValidAttackTarget$5
	m	(Lcti;)Z	u	lambda$initRideHoglinActivity$4
	m	(Lcti;)Z	v	lambda$initCelebrateActivity$3
	m	(Laub;Lcti;)Z	c	lambda$initCelebrateActivity$2
	m	(Lcti;Laub;Lcam;)Z	a	lambda$initFightActivity$1
	m	(Laub;Lcti;)Z	d	lambda$initIdleActivity$0
	m	()V	<clinit>	<clinit>
c	ctk	net/minecraft/world/entity/monster/piglin/PiglinArmPose
	f	Lctk;	a	ATTACKING_WITH_MELEE_WEAPON
	f	Lctk;	b	CROSSBOW_HOLD
	f	Lctk;	c	CROSSBOW_CHARGE
	f	Lctk;	d	ADMIRING_ITEM
	f	Lctk;	e	DANCING
	f	Lctk;	f	DEFAULT
	f	[Lctk;	g	$VALUES
	m	()[Lctk;	values	values
	m	(Ljava/lang/String;)Lctk;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lctk;	a	$values
	m	()V	<clinit>	<clinit>
c	ctl	net/minecraft/world/entity/monster/piglin/PiglinBrute
	f	I	f	MAX_HEALTH
	f	F	ck	MOVEMENT_SPEED_WHEN_FIGHTING
	f	I	cl	ATTACK_DAMAGE
	f	D	cm	TARGETING_RANGE
	f	Lcom/google/common/collect/ImmutableList;	d	SENSOR_TYPES
	f	Lcom/google/common/collect/ImmutableList;	e	MEMORY_TYPES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Lcbr$a;	n	createAttributes
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Lbck;Lbxh;)V	a	populateDefaultEquipmentSlots
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()Z	l	canHunt
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	(Laub;)V	a	customServerAiStep
	m	()Lctk;	gI	getArmPose
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()V	gN	playAngrySound
	m	()V	gK	playConvertedSound
	m	()V	<clinit>	<clinit>
c	ctm	net/minecraft/world/entity/monster/piglin/PiglinBruteAi
	f	I	a	ANGER_DURATION
	f	I	b	MELEE_ATTACK_COOLDOWN
	f	D	c	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK
	f	I	d	MAX_LOOK_DIST
	f	I	e	INTERACTION_RANGE
	f	F	f	SPEED_MULTIPLIER_WHEN_IDLING
	f	I	g	HOME_CLOSE_ENOUGH_DISTANCE
	f	I	h	HOME_TOO_FAR_DISTANCE
	f	I	i	HOME_STROLL_AROUND_DISTANCE
	m	()V	<init>	<init>
	m	(Lctl;Lcbm;)Lcbm;	a	makeBrain
	m	(Lctl;)V	a	initMemories
	m	(Lctl;Lcbm;)V	b	initCoreActivity
	m	(Lctl;Lcbm;)V	c	initIdleActivity
	m	(Lctl;Lcbm;)V	d	initFightActivity
	m	()Lcea;	a	createIdleLookBehaviors
	m	()Lcea;	b	createIdleMovementBehaviors
	m	(Lctl;)V	b	updateActivity
	m	(Laub;Lcth;Lcam;)Z	a	isNearestValidAttackTarget
	m	(Laub;Lcth;)Ljava/util/Optional;	a	findNearestValidAttackTarget
	m	(Laub;Lctl;Lcam;)V	a	wasHurtBy
	m	(Lctl;Lcam;)V	a	setAngerTarget
	m	(Lctl;)V	c	maybePlayActivitySound
	m	(Lctl;)V	d	playActivitySound
	m	(Lctl;Lcwn;)V	a	lambda$playActivitySound$2
	m	(Lcam;Lcam;)Z	a	lambda$isNearestValidAttackTarget$1
	m	(Lctl;Laub;Lcam;)Z	a	lambda$initFightActivity$0
c	ctn	net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	cto	net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen
	m	()V	<init>	<init>
	m	(I)Lcce;	a	create
	m	(ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;Lcfr;ILaub;Lcam;J)Z	a	lambda$create$0
c	ctp	net/minecraft/world/entity/monster/piglin/StartHuntingHoglin
	m	()V	<init>	<init>
	m	()Lcdo;	a	create
	m	(Lcth;)Z	a	hasHuntedRecently
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$4
	m	(Lcfq$b;Lcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$3
	m	(Lcfq$b;Lcfr;Lcfr;Laub;Lcti;J)Z	a	lambda$create$2
	m	(Ljava/util/List;)V	a	lambda$create$1
	m	(Ljava/util/List;)Ljava/lang/Boolean;	b	lambda$create$0
c	ctq	net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway
	m	()V	<init>	<init>
	m	(I)Lcce;	a	create
	m	(ILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;ILcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ILcfr;Laub;Lcam;J)Z	a	lambda$create$0
c	ctr	net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem
	m	()V	<init>	<init>
	m	(II)Lcce;	a	create
	m	(IILcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfq$b;IILcfr;Lcfr;Lcfr;Lcfr;)Lcft;	a	lambda$create$1
	m	(Lcfq$b;Lcfr;ILcfr;Lcfr;ILaub;Lcam;J)Z	a	lambda$create$0
c	cts	net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring
	m	()V	<init>	<init>
	m	()Lcce;	a	create
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$create$2
	m	(Lcfr;)Lcft;	a	lambda$create$1
	m	(Laub;Lcti;J)Z	a	lambda$create$0
c	ctt	net/minecraft/world/entity/monster/piglin/package-info
c	ctu	net/minecraft/world/entity/monster/warden/AngerLevel
	f	Lctu;	a	CALM
	f	Lctu;	b	AGITATED
	f	Lctu;	c	ANGRY
	f	[Lctu;	d	SORTED_LEVELS
	f	I	e	minimumAnger
	f	Layy;	f	ambientSound
	f	Layy;	g	listeningSound
	f	[Lctu;	h	$VALUES
	m	()[Lctu;	values	values
	m	(Ljava/lang/String;)Lctu;	valueOf	valueOf
	m	(Ljava/lang/String;IILayy;Layy;)V	<init>	<init>
	m	()I	a	getMinimumAnger
	m	()Layy;	b	getAmbientSound
	m	()Layy;	c	getListeningSound
	m	(I)Lctu;	a	byAnger
	m	()Z	d	isAngry
	m	([Lctu;)V	a	lambda$static$1
	m	(Lctu;Lctu;)I	a	lambda$static$0
	m	()[Lctu;	e	$values
	m	()V	<clinit>	<clinit>
c	ctv	net/minecraft/world/entity/monster/warden/AngerManagement
	f	I	a	CONVERSION_DELAY
	f	I	b	MAX_ANGER
	f	I	f	DEFAULT_ANGER_DECREASE
	f	I	g	conversionDelay
	f	I	h	highestAnger
	f	Lcom/mojang/serialization/Codec;	i	SUSPECT_ANGER_PAIR
	f	Ljava/util/function/Predicate;	j	filter
	f	Ljava/util/ArrayList;	c	suspects
	f	Lctv$a;	k	suspectSorter
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	angerBySuspect
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	angerByUuid
	m	(Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/function/Predicate;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	b	createUuidAngerPairs
	m	(Laub;Ljava/util/function/Predicate;)V	a	tick
	m	()V	c	sortAndUpdateHighestAnger
	m	(Laub;)V	a	convertFromUuids
	m	(Lbzm;I)I	a	increaseAnger
	m	(Lbzm;)V	a	clearAnger
	m	()Lbzm;	d	getTopSuspect
	m	(Lbzm;)I	b	getActiveAnger
	m	()Ljava/util/Optional;	a	getActiveEntity
	m	(Lbzm;)Lcam;	c	lambda$getActiveEntity$8
	m	(Lbzm;)Z	d	lambda$getActiveEntity$7
	m	(ILbzm;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$increaseAnger$6
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap$Entry;)Lcom/mojang/datafixers/util/Pair;	a	lambda$createUuidAngerPairs$5
	m	(Lbzm;)Lcom/mojang/datafixers/util/Pair;	e	lambda$createUuidAngerPairs$4
	m	(Lcom/mojang/datafixers/util/Pair;)V	a	lambda$new$3
	m	(Ljava/util/function/Predicate;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
	m	(Ljava/util/function/Predicate;Ljava/util/List;)Lctv;	a	lambda$codec$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ctv$1	net/minecraft/world/entity/monster/warden/AngerManagement$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Entity$RemovalReason
	m	()V	<clinit>	<clinit>
c	ctv$a	net/minecraft/world/entity/monster/warden/AngerManagement$Sorter
	f	Lctv;	a	angerManagement
	m	(Lctv;)V	<init>	<init>
	m	(Lbzm;Lbzm;)I	a	compare
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lctv;	a	angerManagement
	m	(Ljava/lang/Object;Ljava/lang/Object;)I	compare	compare
c	ctw	net/minecraft/world/entity/monster/warden/Warden
	f	I	ck	VIBRATION_COOLDOWN_TICKS
	f	I	cl	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM
	f	I	cm	MAX_HEALTH
	f	F	cn	MOVEMENT_SPEED_WHEN_FIGHTING
	f	F	co	KNOCKBACK_RESISTANCE
	f	F	cp	ATTACK_KNOCKBACK
	f	I	cq	ATTACK_DAMAGE
	f	I	cr	FOLLOW_RANGE
	f	Lalh;	cs	CLIENT_ANGER_LEVEL
	f	I	ct	DARKNESS_DISPLAY_LIMIT
	f	I	cu	DARKNESS_DURATION
	f	I	cv	DARKNESS_RADIUS
	f	I	cw	DARKNESS_INTERVAL
	f	I	cx	ANGERMANAGEMENT_TICK_DELAY
	f	I	cy	DEFAULT_ANGER
	f	I	cz	PROJECTILE_ANGER
	f	I	cA	ON_HURT_ANGER_BOOST
	f	I	cB	RECENT_PROJECTILE_TICK_THRESHOLD
	f	I	cC	TOUCH_COOLDOWN_TICKS
	f	I	cD	DIGGING_PARTICLES_AMOUNT
	f	F	cE	DIGGING_PARTICLES_DURATION
	f	F	cF	DIGGING_PARTICLES_OFFSET
	f	I	cG	PROJECTILE_ANGER_DISTANCE
	f	I	cH	tendrilAnimation
	f	I	cI	tendrilAnimationO
	f	I	cJ	heartAnimation
	f	I	cM	heartAnimationO
	f	Lbzd;	a	roarAnimationState
	f	Lbzd;	b	sniffAnimationState
	f	Lbzd;	c	emergeAnimationState
	f	Lbzd;	d	diggingAnimationState
	f	Lbzd;	e	attackAnimationState
	f	Lbzd;	f	sonicBoomAnimationState
	f	Leiy;	cN	dynamicGameEventListener
	f	Lejk$d;	cO	vibrationUser
	f	Lejk$a;	cP	vibrationData
	f	Lctv;	cQ	angerManagement
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	(Ldmx;)Z	a	checkSpawnObstruction
	m	(Ljb;Ldmx;)F	a	getWalkTargetValue
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	()Z	gK	isDiggingOrEmerging
	m	(Lbzm;)Z	p	canRide
	m	()F	gb	getSecondsToDisableBlocking
	m	()F	aX	nextStep
	m	()Lcbr$a;	l	createAttributes
	m	()Z	bk	dampensVibrations
	m	()F	fk	getSoundVolume
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ljb;Leeb;)V	b	playStepSound
	m	(Laub;Lbzm;)Z	c	doHurtTarget
	m	(Lall$a;)V	a	defineSynchedData
	m	()I	m	getClientAngerLevel
	m	()V	gN	syncClientAngerLevel
	m	()V	g	tick
	m	(Laub;)V	a	customServerAiStep
	m	(B)V	b	handleEntityEvent
	m	()I	gO	getHeartBeatDelay
	m	(F)F	J	getTendrilAnimation
	m	(F)F	K	getHeartAnimation
	m	(Lbzd;)V	a	clientDiggingParticles
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(Ldmn;)Z	a	ignoreExplosion
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	()Lcbm;	eh	getBrain
	m	()V	ah	sendDebugPackets
	m	(Ljava/util/function/BiConsumer;)V	a	updateDynamicGameEventListener
	m	(Lbzm;)Z	G	canTargetEntity
	m	(Laub;Lfis;Lbzm;I)V	a	applyDarknessAround
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	gP	playListeningSound
	m	()Lctu;	n	getAngerLevel
	m	()I	gQ	getActiveAnger
	m	(Lbzm;)V	H	clearAnger
	m	(Lbzm;)V	I	increaseAngerAt
	m	(Lbzm;IZ)V	a	increaseAngerAt
	m	()Ljava/util/Optional;	t	getEntityAngryAt
	m	()Lcam;	e	getTarget
	m	(D)Z	h	removeWhenFarAway
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lcam;)V	i	setAttackTarget
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Z	bL	isPushable
	m	(Lbzm;)V	E	doPush
	m	()Lctv;	gH	getAngerManagement
	m	(Ldmu;)Lcjw;	b	createNavigation
	m	()Lejk$a;	gI	getVibrationData
	m	()Lejk$d;	gJ	getVibrationUser
	m	()Lctv;	gR	lambda$readAdditionalSaveData$0
	m	(Lctw;)Lcbm;	a	access$000
	m	()V	<clinit>	<clinit>
c	ctw$1	net/minecraft/world/entity/monster/warden/Warden$1
	m	(Lctw;Lcao;Ldmu;)V	<init>	<init>
	m	(I)Lfbb;	a	createPathFinder
c	ctw$1$1	net/minecraft/world/entity/monster/warden/Warden$1$1
	m	(Lctw$1;Lfay;I)V	<init>	<init>
	m	(Lfax;Lfax;)F	a	distance
c	ctw$2	net/minecraft/world/entity/monster/warden/Warden$2
	f	[I	a	$SwitchMap$net$minecraft$world$entity$Pose
	m	()V	<clinit>	<clinit>
c	ctw$a	net/minecraft/world/entity/monster/warden/Warden$VibrationUser
	f	I	b	GAME_EVENT_LISTENER_RANGE
	f	Lejf;	c	positionSource
	f	Lctw;	a	this$0
	m	(Lctw;)V	<init>	<init>
	m	()I	a	getListenerRadius
	m	()Lejf;	b	getPositionSource
	m	()Lbae;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Laub;Ljb;Ljl;Lbzm;Lbzm;F)V	a	onReceiveVibration
c	ctx	net/minecraft/world/entity/monster/warden/WardenAi
	f	F	d	SPEED_MULTIPLIER_WHEN_IDLING
	f	F	e	SPEED_MULTIPLIER_WHEN_INVESTIGATING
	f	F	f	SPEED_MULTIPLIER_WHEN_FIGHTING
	f	I	g	MELEE_ATTACK_COOLDOWN
	f	I	h	DIGGING_DURATION
	f	I	a	EMERGE_DURATION
	f	I	b	ROAR_DURATION
	f	I	i	SNIFFING_DURATION
	f	I	c	DIGGING_COOLDOWN
	f	I	j	DISTURBANCE_LOCATION_EXPIRY_TIME
	f	Ljava/util/List;	k	SENSOR_TYPES
	f	Ljava/util/List;	l	MEMORY_TYPES
	f	Lcce;	m	DIG_COOLDOWN_SETTER
	m	()V	<init>	<init>
	m	(Lctw;)V	a	updateActivity
	m	(Lctw;Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Lcbm;)V	a	initCoreActivity
	m	(Lcbm;)V	b	initEmergeActivity
	m	(Lcbm;)V	c	initDiggingActivity
	m	(Lcbm;)V	d	initIdleActivity
	m	(Lcbm;)V	e	initInvestigateActivity
	m	(Lcbm;)V	f	initSniffingActivity
	m	(Lcbm;)V	g	initRoarActivity
	m	(Lctw;Lcbm;)V	a	initFightActivity
	m	(Lctw;Lcam;)Z	a	isTarget
	m	(Laub;Lctw;Lcam;)V	a	onTargetInvalid
	m	(Lcam;)V	a	setDigCooldown
	m	(Lctw;Ljb;)V	a	setDisturbanceLocation
	m	(Lcam;Lcam;)Z	a	lambda$isTarget$5
	m	(Lctw;Lcam;)Z	b	lambda$initFightActivity$4
	m	(Lctw;Laub;Lcam;)Z	a	lambda$initFightActivity$3
	m	(Lcfq$b;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lcfq$b;Lcfr;)Lcft;	a	lambda$static$1
	m	(Lcfq$b;Lcfr;Laub;Lctw;J)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cty	net/minecraft/world/entity/monster/warden/WardenSpawnTracker
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WARNING_LEVEL
	f	D	c	PLAYER_SEARCH_RADIUS
	f	I	d	WARNING_CHECK_DIAMETER
	f	I	e	DECREASE_WARNING_LEVEL_EVERY_INTERVAL
	f	I	f	WARNING_LEVEL_INCREASE_COOLDOWN
	f	I	g	ticksSinceLastWarning
	f	I	h	warningLevel
	f	I	i	cooldownTicks
	m	(III)V	<init>	<init>
	m	()V	<init>	<init>
	m	()V	a	tick
	m	()V	b	reset
	m	(Laub;Ljb;Lauc;)Ljava/util/OptionalInt;	a	tryWarn
	m	()Z	d	onCooldown
	m	(Laub;Ljb;)Z	a	hasNearbyWarden
	m	(Laub;Ljb;)Ljava/util/List;	b	getNearbyPlayers
	m	()V	e	increaseWarningLevel
	m	()V	f	decreaseWarningLevel
	m	(I)V	a	setWarningLevel
	m	()I	c	getWarningLevel
	m	(Lcty;)V	a	copyData
	m	(Lfis;Lauc;)Z	a	lambda$getNearbyPlayers$8
	m	(Lcty;Lauc;)V	a	lambda$tryWarn$7
	m	(Lcty;Lcty;)V	a	lambda$tryWarn$6
	m	(Lauc;)Ljava/util/stream/Stream;	a	lambda$tryWarn$5
	m	(Lauc;)Z	b	lambda$tryWarn$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcty;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Lcty;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lcty;)Ljava/lang/Integer;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ctz	net/minecraft/world/entity/monster/warden/package-info
c	cua	net/minecraft/world/entity/npc/AbstractVillager
	f	Lalh;	cm	DATA_UNHAPPY_COUNTER
	f	I	ck	VILLAGER_SLOT_OFFSET
	f	I	cn	VILLAGER_INVENTORY_SIZE
	f	Lcut;	co	tradingPlayer
	f	Ldlr;	cl	offers
	f	Lbxr;	cp	inventory
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()I	m	getUnhappyCounter
	m	(I)V	r	setUnhappyCounter
	m	()I	t	getVillagerXp
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lcut;)V	g	setTradingPlayer
	m	()Lcut;	gH	getTradingPlayer
	m	()Z	gI	isTrading
	m	()Ldlr;	gJ	getOffers
	m	(Ldlr;)V	a	overrideOffers
	m	(I)V	s	overrideXp
	m	(Ldlq;)V	a	notifyTrade
	m	(Ldlq;)V	b	rewardTradeXp
	m	()Z	gK	showProgressBar
	m	(Ldcv;)V	i	notifyTradeUpdated
	m	()Layy;	gL	getNotifyTradeSound
	m	(Z)Layy;	x	getTradeUpdatedSound
	m	()V	gM	playCelebrateSound
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfbl;)Lbzm;	b	teleport
	m	()V	gN	stopTrading
	m	(Lbyb;)V	a	die
	m	(Lmc;)V	a	addParticlesAroundSelf
	m	()Z	v	canBeLeashed
	m	()Lbxr;	n	getInventory
	m	(I)Lcbd;	a_	getSlot
	m	()V	gO	updateTrades
	m	(Ldlr;[Lcuj$g;I)V	a	addOffersFromItemListings
	m	(F)Lfis;	u	getRopeHoldPosition
	m	()Z	gP	isClientSide
	m	(Lcut;)Z	h	stillValid
	m	()V	<clinit>	<clinit>
c	cub	net/minecraft/world/entity/npc/CatSpawner
	f	I	a	TICK_DELAY
	f	I	b	nextTick
	m	()V	<init>	<init>
	m	(Laub;ZZ)V	a	tick
	m	(Laub;Ljb;)V	a	spawnInVillage
	m	(Laub;Ljb;)V	b	spawnInHut
	m	(Ljb;Laub;Z)V	a	spawnCat
	m	(Ljl;)Z	a	lambda$spawnInVillage$0
c	cuc	net/minecraft/world/entity/npc/ClientSideMerchant
	f	Lcut;	a	source
	f	Ldlr;	b	offers
	f	I	c	xp
	m	(Lcut;)V	<init>	<init>
	m	()Lcut;	gH	getTradingPlayer
	m	(Lcut;)V	g	setTradingPlayer
	m	()Ldlr;	gJ	getOffers
	m	(Ldlr;)V	a	overrideOffers
	m	(Ldlq;)V	a	notifyTrade
	m	(Ldcv;)V	i	notifyTradeUpdated
	m	()Z	gP	isClientSide
	m	(Lcut;)Z	h	stillValid
	m	()I	t	getVillagerXp
	m	(I)V	s	overrideXp
	m	()Z	gK	showProgressBar
	m	()Layy;	gL	getNotifyTradeSound
c	cud	net/minecraft/world/entity/npc/InventoryCarrier
	f	Ljava/lang/String;	w_	TAG_INVENTORY
	m	()Lbxr;	n	getInventory
	m	(Laub;Lcao;Lcud;Lcqz;)V	a	pickUpItem
	m	(Lfda;)V	a_	readInventoryFromTag
	m	(Lfdc;)V	b_	writeInventoryToTag
	m	(Lfda$a;)V	a	lambda$readInventoryFromTag$0
c	cue	net/minecraft/world/entity/npc/Npc
c	cuf	net/minecraft/world/entity/npc/Villager
	f	Lorg/slf4j/Logger;	cq	LOGGER
	f	Lalh;	cr	DATA_VILLAGER_DATA
	f	I	cm	BREEDING_FOOD_THRESHOLD
	f	Ljava/util/Map;	cn	FOOD_POINTS
	f	I	cs	TRADES_PER_LEVEL
	f	I	ct	MAX_GOSSIP_TOPICS
	f	I	cu	GOSSIP_COOLDOWN
	f	I	cv	GOSSIP_DECAY_INTERVAL
	f	I	cw	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS
	f	I	cx	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM
	f	J	cy	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING
	f	F	co	SPEED_MODIFIER
	f	I	cz	DEFAULT_XP
	f	B	cA	DEFAULT_FOOD_LEVEL
	f	I	cB	DEFAULT_LAST_RESTOCK
	f	I	cC	DEFAULT_LAST_GOSSIP_DECAY
	f	I	cD	DEFAULT_RESTOCKS_TODAY
	f	Z	cE	DEFAULT_ASSIGN_PROFESSION_WHEN_SPAWNED
	f	I	cF	updateMerchantTimer
	f	Z	cG	increaseProfessionLevelOnUpdate
	f	Lcut;	cH	lastTradedPlayer
	f	Z	cI	chasing
	f	I	cJ	foodLevel
	f	Lcjk;	cM	gossips
	f	J	cN	lastGossipTime
	f	J	cO	lastGossipDecayTime
	f	I	cP	villagerXp
	f	J	cQ	lastRestockGameTime
	f	I	cR	numberOfRestocksToday
	f	J	cS	lastRestockCheckDayTime
	f	Z	cT	assignProfessionWhenSpawned
	f	Lcom/google/common/collect/ImmutableList;	cU	MEMORY_TYPES
	f	Lcom/google/common/collect/ImmutableList;	cV	SENSOR_TYPES
	f	Ljava/util/Map;	cp	POI_MEMORIES
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;Lamd;)V	<init>	<init>
	m	(Lbzv;Ldmu;Ljl;)V	<init>	<init>
	m	()Lcbm;	eh	getBrain
	m	()Lcbm$b;	ei	brainProvider
	m	(Lcom/mojang/serialization/Dynamic;)Lcbm;	a	makeBrain
	m	(Laub;)V	g	refreshBrain
	m	(Lcbm;)V	a	registerBrainGoals
	m	()V	h	ageBoundaryReached
	m	()Lcbr$a;	gQ	createAttributes
	m	()Z	gS	assignProfessionWhenSpawned
	m	(Laub;)V	a	customServerAiStep
	m	()V	g	tick
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	hd	setUnhappy
	m	(Lcut;)V	j	startTrading
	m	(Lcut;)V	g	setTradingPlayer
	m	()V	gN	stopTrading
	m	()V	he	resetSpecialPrices
	m	()Z	gT	canRestock
	m	()V	gU	restock
	m	()V	hf	resendOffersToTradingPlayer
	m	()Z	hg	needsToRestock
	m	()Z	hh	allowedToRestock
	m	()Z	gV	shouldRestock
	m	()V	hi	catchUpDemand
	m	()V	hj	updateDemand
	m	(Lcut;)V	k	updateSpecialPrices
	m	(Lall$a;)V	a	defineSynchedData
	m	()Lcug;	gW	createDefaultVillagerData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(D)Z	h	removeWhenFarAway
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	()V	gX	playWorkSound
	m	(Lcug;)V	a	setVillagerData
	m	()Lcug;	gR	getVillagerData
	m	(Ldlq;)V	b	rewardTradeXp
	m	(Lcam;)V	a	setLastHurtByMob
	m	(Lbyb;)V	a	die
	m	()V	hk	releaseAllPois
	m	(Lbzm;)V	G	tellWitnessesThatIWasMurdered
	m	(Lcjo;)V	a	releasePoi
	m	()Z	Y_	canBreed
	m	()Z	hl	hungry
	m	()V	hm	eatUntilFull
	m	(Lcut;)I	i	getPlayerReputation
	m	(I)V	u	digestFood
	m	()V	gY	eatAndDigestFood
	m	(Ldlr;)V	b	setOffers
	m	()Z	hn	shouldIncreaseLevel
	m	()V	ho	increaseMerchantCareer
	m	()Lxo;	cD	getTypeName
	m	(B)V	b	handleEntityEvent
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	(Laub;Lbzc;)Lcuf;	b	getBreedOffspring
	m	(Laub;Lcal;)V	a	thunderHit
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(Laub;Ldcv;)Z	c	wantsToPickUp
	m	()Z	gZ	hasExcessFood
	m	()Z	ha	wantsMoreFood
	m	()I	hp	countFoodPointsInInventory
	m	()Z	hb	hasFarmSeeds
	m	()V	gO	updateTrades
	m	(Laub;Lcuf;J)V	a	gossip
	m	()V	hq	maybeDecayGossip
	m	(Laub;JI)V	a	spawnGolemIfNeeded
	m	(J)Z	a	wantsToSpawnGolem
	m	(Lclm;Lbzm;)V	a	onReputationEventFrom
	m	()I	t	getVillagerXp
	m	(I)V	t	setVillagerXp
	m	()V	hr	resetNumberOfRestocks
	m	()Lcjk;	hc	getGossips
	m	(Lcjk;)V	a	setGossips
	m	()V	ah	sendDebugPackets
	m	(Ljb;)V	b	startSleeping
	m	()V	fZ	stopSleeping
	m	(J)Z	b	golemSpawnConditionsMet
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkp;Ljava/lang/Object;)Z	b	applyImplicitComponent
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	(JLjava/lang/Long;)Z	a	lambda$golemSpawnConditionsMet$11
	m	(JLcuf;)Z	a	lambda$spawnGolemIfNeeded$10
	m	(Ldcv;)Z	j	lambda$hasFarmSeeds$9
	m	(Lbxr;Ljava/util/Map$Entry;)I	a	lambda$countFoodPointsInInventory$8
	m	(Laub;Lcsl;)V	a	lambda$thunderHit$7
	m	(Lcjl;)Z	a	lambda$getPlayerReputation$6
	m	(Lnet/minecraft/server/MinecraftServer;Lcjo;Ljk;)V	a	lambda$releasePoi$5
	m	(Laub;Lbzm;Lcam;)V	a	lambda$tellWitnessesThatIWasMurdered$4
	m	(Lcuf;Ljl;)Z	a	lambda$static$3
	m	(Lcuf;Ljl;)Z	b	lambda$static$2
	m	(Lcuf;Ljl;)Z	c	lambda$static$1
	m	(Lcuf;Ljl;)Z	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cug	net/minecraft/world/entity/npc/VillagerData
	f	Ljl;	e	type
	f	Ljl;	f	profession
	f	I	g	level
	f	I	a	MIN_VILLAGER_LEVEL
	f	I	b	MAX_VILLAGER_LEVEL
	f	[I	h	NEXT_LEVEL_XP_THRESHOLDS
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljl;Ljl;I)V	<init>	<init>
	m	(Ljl;)Lcug;	a	withType
	m	(Ljm$a;Lamd;)Lcug;	a	withType
	m	(Ljl;)Lcug;	b	withProfession
	m	(Ljm$a;Lamd;)Lcug;	b	withProfession
	m	(I)Lcug;	a	withLevel
	m	(I)I	b	getMinXpPerLevel
	m	(I)I	c	getMaxXpPerLevel
	m	(I)Z	d	canLevelUp
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	type
	m	()Ljl;	b	profession
	m	()I	c	level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lcug;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lcug;)Ljl;	b	lambda$static$3
	m	()Ljl;	d	lambda$static$2
	m	(Lcug;)Ljl;	c	lambda$static$1
	m	()Ljl;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cuh	net/minecraft/world/entity/npc/VillagerDataHolder
	m	()Lcug;	gR	getVillagerData
	m	(Lcug;)V	a	setVillagerData
c	cui	net/minecraft/world/entity/npc/VillagerProfession
	f	Lxo;	q	name
	f	Ljava/util/function/Predicate;	r	heldJobSite
	f	Ljava/util/function/Predicate;	s	acquirableJobSite
	f	Lcom/google/common/collect/ImmutableSet;	t	requestedItems
	f	Lcom/google/common/collect/ImmutableSet;	u	secondaryPoi
	f	Layy;	v	workSound
	f	Ljava/util/function/Predicate;	a	ALL_ACQUIRABLE_JOBS
	f	Lamd;	b	NONE
	f	Lamd;	c	ARMORER
	f	Lamd;	d	BUTCHER
	f	Lamd;	e	CARTOGRAPHER
	f	Lamd;	f	CLERIC
	f	Lamd;	g	FARMER
	f	Lamd;	h	FISHERMAN
	f	Lamd;	i	FLETCHER
	f	Lamd;	j	LEATHERWORKER
	f	Lamd;	k	LIBRARIAN
	f	Lamd;	l	MASON
	f	Lamd;	m	NITWIT
	f	Lamd;	n	SHEPHERD
	f	Lamd;	o	TOOLSMITH
	f	Lamd;	p	WEAPONSMITH
	m	(Lxo;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Layy;)V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljy;Lamd;Lamd;Layy;)Lcui;	a	register
	m	(Ljy;Lamd;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Layy;)Lcui;	a	register
	m	(Ljy;Lamd;Lamd;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Layy;)Lcui;	a	register
	m	(Ljy;Lamd;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Layy;)Lcui;	a	register
	m	(Ljy;)Lcui;	a	bootstrap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	a	name
	m	()Ljava/util/function/Predicate;	b	heldJobSite
	m	()Ljava/util/function/Predicate;	c	acquirableJobSite
	m	()Lcom/google/common/collect/ImmutableSet;	d	requestedItems
	m	()Lcom/google/common/collect/ImmutableSet;	e	secondaryPoi
	m	()Layy;	f	workSound
	m	(Lamd;Ljl;)Z	a	lambda$register$4
	m	(Lamd;Ljl;)Z	b	lambda$register$3
	m	(Lamd;Ljl;)Z	c	lambda$register$2
	m	(Lamd;Ljl;)Z	d	lambda$register$1
	m	(Ljl;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cuj	net/minecraft/world/entity/npc/VillagerTrades
	f	I	d	DEFAULT_SUPPLY
	f	I	e	COMMON_ITEMS_SUPPLY
	f	I	f	UNCOMMON_ITEMS_SUPPLY
	f	I	g	XP_LEVEL_1_SELL
	f	I	h	XP_LEVEL_1_BUY
	f	I	i	XP_LEVEL_2_SELL
	f	I	j	XP_LEVEL_2_BUY
	f	I	k	XP_LEVEL_3_SELL
	f	I	l	XP_LEVEL_3_BUY
	f	I	m	XP_LEVEL_4_SELL
	f	I	n	XP_LEVEL_4_BUY
	f	I	o	XP_LEVEL_5_TRADE
	f	F	p	LOW_TIER_PRICE_MULTIPLIER
	f	F	q	HIGH_TIER_PRICE_MULTIPLIER
	f	Ljava/util/Map;	a	TRADES
	f	Ljava/util/List;	b	WANDERING_TRADER_TRADES
	f	Ljava/util/Map;	c	EXPERIMENTAL_TRADES
	m	()V	<init>	<init>
	m	(I)Lcuj$g;	a	commonBooks
	m	()Lcuj$g;	a	specialBooks
	m	(Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	toIntMap
	m	(Ljl;)Ldlo;	a	potionCost
	m	(Ljl;)Ldcv;	b	potion
	m	(Ljl;Lkk$a;)Lkk$a;	a	lambda$potionCost$1
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cuj$a	net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds
	f	Ldcr;	a	item
	f	I	b	value
	f	I	c	maxUses
	f	I	d	villagerXp
	m	(Ldcr;I)V	<init>	<init>
	m	(Ldcr;III)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	(Lbck;)Ldbu;	a	getRandomDye
c	cuj$b	net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems
	f	Ldlo;	a	itemStack
	f	I	b	maxUses
	f	I	c	villagerXp
	f	I	d	emeraldAmount
	f	F	e	priceMultiplier
	m	(Ldmt;III)V	<init>	<init>
	m	(Ldmt;IIII)V	<init>	<init>
	m	(Ldlo;III)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$c	net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem
	f	Ljava/util/Map;	a	trades
	f	I	b	cost
	f	I	c	maxUses
	f	I	d	villagerXp
	m	(IIILjava/util/Map;)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	(Lamd;)V	a	lambda$new$1
	m	(Ljava/util/Map;Lamd;)Z	a	lambda$new$0
c	cuj$d	net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds
	f	I	a	villagerXp
	f	Lbae;	b	tradeableEnchantments
	f	I	c	minLevel
	f	I	d	maxLevel
	m	(ILbae;)V	<init>	<init>
	m	(IIILbae;)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$e	net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds
	f	Ldcv;	a	itemStack
	f	I	b	baseEmeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
	m	(Ldcr;III)V	<init>	<init>
	m	(Ldcr;IIIF)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$f	net/minecraft/world/entity/npc/VillagerTrades$FailureItemListing
	m	()V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$g	net/minecraft/world/entity/npc/VillagerTrades$ItemListing
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$h	net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems
	f	Ldlo;	a	fromItem
	f	I	b	emeraldCost
	f	Ldcv;	c	toItem
	f	I	d	maxUses
	f	I	e	villagerXp
	f	F	f	priceMultiplier
	f	Ljava/util/Optional;	g	enchantmentProvider
	m	(Ldmt;IILdcr;IIIF)V	<init>	<init>
	m	(Ldmt;IILdcv;IIIF)V	<init>	<init>
	m	(Ldmt;IILdmt;IIIFLamd;)V	<init>	<init>
	m	(Ldlo;ILdcv;IIFLjava/util/Optional;)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	(Ldcv;Ldmu;Lbzm;Lbck;Lamd;)V	a	lambda$getOffer$0
c	cuj$i	net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds
	f	Ldcv;	a	itemStack
	f	I	b	emeraldCost
	f	I	c	maxUses
	f	I	d	villagerXp
	f	F	e	priceMultiplier
	f	Ljava/util/Optional;	f	enchantmentProvider
	m	(Ldpz;IIII)V	<init>	<init>
	m	(Ldcr;III)V	<init>	<init>
	m	(Ldcr;IIII)V	<init>	<init>
	m	(Ldcv;IIII)V	<init>	<init>
	m	(Ldcr;IIIIF)V	<init>	<init>
	m	(Ldcr;IIIIFLamd;)V	<init>	<init>
	m	(Ldcv;IIIIF)V	<init>	<init>
	m	(Ldcv;IIIIFLjava/util/Optional;)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	(Ldcv;Ldmu;Lbzm;Lbck;Lamd;)V	a	lambda$getOffer$0
c	cuj$j	net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald
	f	Ldfx;	a	effects
	f	I	b	xp
	f	F	c	priceMultiplier
	m	(Ljl;II)V	<init>	<init>
	m	(Ldfx;IF)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$k	net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds
	f	Ldcv;	a	toItem
	f	I	b	toCount
	f	I	c	emeraldCost
	f	I	d	maxUses
	f	I	e	villagerXp
	f	Ldcr;	f	fromItem
	f	I	g	fromCount
	f	F	h	priceMultiplier
	m	(Ldcr;ILdcr;IIII)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	(Lbzm;Ljl$c;)Z	a	lambda$getOffer$0
c	cuj$l	net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds
	f	I	a	emeraldCost
	f	Lbae;	b	destination
	f	Ljava/lang/String;	c	displayName
	f	Ljl;	d	destinationType
	f	I	e	maxUses
	f	I	f	villagerXp
	m	(ILbae;Ljava/lang/String;Ljl;II)V	<init>	<init>
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
c	cuj$m	net/minecraft/world/entity/npc/VillagerTrades$TypeSpecificTrade
	f	Ljava/util/Map;	a	trades
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lcuj$g;[Lamd;)Lcuj$m;	a	oneTradeInBiomes
	m	(Lbzm;Lbck;)Ldlq;	a	getOffer
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	trades
	m	(Lcuj$g;Lamd;)Lcuj$g;	a	lambda$oneTradeInBiomes$1
	m	(Lamd;)Lamd;	a	lambda$oneTradeInBiomes$0
c	cuk	net/minecraft/world/entity/npc/VillagerType
	f	Lamd;	a	DESERT
	f	Lamd;	b	JUNGLE
	f	Lamd;	c	PLAINS
	f	Lamd;	d	SAVANNA
	f	Lamd;	e	SNOW
	f	Lamd;	f	SWAMP
	f	Lamd;	g	TAIGA
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	Lzm;	i	STREAM_CODEC
	f	Ljava/util/Map;	j	BY_BIOME
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljy;Lamd;)Lcuk;	a	register
	m	(Ljy;)Lcuk;	a	bootstrap
	m	(Ljl;)Lamd;	a	byBiome
	m	(Ljava/util/HashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cul	net/minecraft/world/entity/npc/WanderingTrader
	f	I	cm	DEFAULT_DESPAWN_DELAY
	f	Ljb;	cn	wanderTarget
	f	I	co	despawnDelay
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Laub;Lbzc;)Lbzc;	a	getBreedOffspring
	m	()Z	gK	showProgressBar
	m	(Lcut;Lbxi;)Lbxj;	b	mobInteract
	m	()V	gO	updateTrades
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(D)Z	h	removeWhenFarAway
	m	(Ldlq;)V	b	rewardTradeXp
	m	()Layy;	p	getAmbientSound
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ldcv;)Layy;	j	getConsumeSound
	m	(Z)Layy;	x	getTradeUpdatedSound
	m	()Layy;	gL	getNotifyTradeSound
	m	(I)V	t	setDespawnDelay
	m	()I	gQ	getDespawnDelay
	m	()V	e_	aiStep
	m	()V	gR	maybeDespawn
	m	(Ljb;)V	h	setWanderTarget
	m	()Ljb;	gS	getWanderTarget
	m	(Lcul;)Z	e	lambda$registerGoals$1
	m	(Lcul;)Z	f	lambda$registerGoals$0
	m	(Lcul;)Lcjw;	a	access$000
	m	(Lcul;)Lcjw;	b	access$100
	m	(Lcul;)Lcjw;	c	access$200
	m	(Lcul;)Lcjw;	d	access$300
c	cul$a	net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal
	f	Lcul;	a	trader
	f	D	b	stopDistance
	f	D	c	speedModifier
	f	Lcul;	d	this$0
	m	(Lcul;Lcul;DD)V	<init>	<init>
	m	()V	e	stop
	m	()Z	b	canUse
	m	()V	a	tick
	m	(Ljb;D)Z	a	isTooFarAway
c	cum	net/minecraft/world/entity/npc/WanderingTraderSpawner
	f	I	b	DEFAULT_TICK_DELAY
	f	I	a	DEFAULT_SPAWN_DELAY
	f	I	c	MIN_SPAWN_CHANCE
	f	I	d	MAX_SPAWN_CHANCE
	f	I	e	SPAWN_CHANCE_INCREASE
	f	I	f	SPAWN_ONE_IN_X_CHANCE
	f	I	g	NUMBER_OF_SPAWN_ATTEMPTS
	f	Lbck;	h	random
	f	Lfcx;	i	serverLevelData
	f	I	j	tickDelay
	f	I	k	spawnDelay
	f	I	l	spawnChance
	m	(Lfcx;)V	<init>	<init>
	m	(Laub;ZZ)V	a	tick
	m	(Laub;)Z	a	spawn
	m	(Laub;Lcul;I)V	a	tryToSpawnLlamaFor
	m	(Ldmx;Ljb;I)Ljb;	a	findSpawnPositionNear
	m	(Ldly;Ljb;)Z	a	hasEnoughSpace
	m	(Ljb;)Z	a	lambda$spawn$1
	m	(Ljl;)Z	a	lambda$spawn$0
c	cun	net/minecraft/world/entity/npc/package-info
c	cuo	net/minecraft/world/entity/package-info
c	cup	net/minecraft/world/entity/player/Abilities
	f	Z	f	DEFAULT_INVULNERABLE
	f	Z	g	DEFAULY_FLYING
	f	Z	h	DEFAULT_MAY_FLY
	f	Z	i	DEFAULT_INSTABUILD
	f	Z	j	DEFAULT_MAY_BUILD
	f	F	k	DEFAULT_FLYING_SPEED
	f	F	l	DEFAULT_WALKING_SPEED
	f	Z	a	invulnerable
	f	Z	b	flying
	f	Z	c	mayfly
	f	Z	d	instabuild
	f	Z	e	mayBuild
	f	F	m	flyingSpeed
	f	F	n	walkingSpeed
	m	()V	<init>	<init>
	m	()F	a	getFlyingSpeed
	m	(F)V	a	setFlyingSpeed
	m	()F	b	getWalkingSpeed
	m	(F)V	b	setWalkingSpeed
	m	()Lcup$a;	c	pack
	m	(Lcup$a;)V	a	apply
c	cup$a	net/minecraft/world/entity/player/Abilities$Packed
	f	Z	b	invulnerable
	f	Z	c	flying
	f	Z	d	mayFly
	f	Z	e	instabuild
	f	Z	f	mayBuild
	f	F	g	flyingSpeed
	f	F	h	walkingSpeed
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ZZZZZFF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	invulnerable
	m	()Z	b	flying
	m	()Z	c	mayFly
	m	()Z	d	instabuild
	m	()Z	e	mayBuild
	m	()F	f	flyingSpeed
	m	()F	g	walkingSpeed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cuq	net/minecraft/world/entity/player/ChatVisiblity
	f	Lcuq;	a	FULL
	f	Lcuq;	b	SYSTEM
	f	Lcuq;	c	HIDDEN
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	I	e	id
	f	Ljava/lang/String;	f	key
	f	[Lcuq;	g	$VALUES
	m	()[Lcuq;	values	values
	m	(Ljava/lang/String;)Lcuq;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	b	getId
	m	()Ljava/lang/String;	a	getKey
	m	(I)Lcuq;	a	byId
	m	()[Lcuq;	c	$values
	m	()V	<clinit>	<clinit>
c	cur	net/minecraft/world/entity/player/Input
	f	Z	c	forward
	f	Z	d	backward
	f	Z	e	left
	f	Z	f	right
	f	Z	g	jump
	f	Z	h	shift
	f	Z	i	sprint
	f	B	j	FLAG_FORWARD
	f	B	k	FLAG_BACKWARD
	f	B	l	FLAG_LEFT
	f	B	m	FLAG_RIGHT
	f	B	n	FLAG_JUMP
	f	B	o	FLAG_SHIFT
	f	B	p	FLAG_SPRINT
	f	Lzm;	a	STREAM_CODEC
	f	Lcur;	b	EMPTY
	m	(ZZZZZZZ)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	forward
	m	()Z	b	backward
	m	()Z	c	left
	m	()Z	d	right
	m	()Z	e	jump
	m	()Z	f	shift
	m	()Z	g	sprint
	m	()V	<clinit>	<clinit>
c	cur$1	net/minecraft/world/entity/player/Input$1
	m	()V	<init>	<init>
	m	(Lwg;Lcur;)V	a	encode
	m	(Lwg;)Lcur;	a	decode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	cus	net/minecraft/world/entity/player/Inventory
	f	I	b	POP_TIME_DURATION
	f	I	c	INVENTORY_SIZE
	f	I	d	SELECTION_SIZE
	f	I	e	SLOT_OFFHAND
	f	I	f	SLOT_BODY_ARMOR
	f	I	g	SLOT_SADDLE
	f	I	h	NOT_FOUND_INDEX
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	i	EQUIPMENT_SLOT_MAPPING
	f	Lju;	k	items
	f	I	l	selected
	f	Lcut;	j	player
	f	Lbzq;	m	equipment
	f	I	n	timesChanged
	m	(Lcut;Lbzq;)V	<init>	<init>
	m	()I	f	getSelectedSlot
	m	(I)V	c	setSelectedSlot
	m	()Ldcv;	g	getSelectedItem
	m	(Ldcv;)Ldcv;	b	setSelectedItem
	m	()I	h	getSelectionSize
	m	()Lju;	i	getNonEquipmentItems
	m	(Ldcv;Ldcv;)Z	a	hasRemainingSpaceForItem
	m	()I	j	getFreeSlot
	m	(Ldcv;)V	c	addAndPickItem
	m	(I)V	d	pickSlot
	m	(I)Z	e	isHotbarSlot
	m	(Ldcv;)I	d	findSlotMatchingItem
	m	(Ldcv;)Z	e	isUsableForCrafting
	m	(Ljl;Ldcv;)I	a	findSlotMatchingCraftingIngredient
	m	()I	k	getSuitableHotbarSlot
	m	(Ljava/util/function/Predicate;ILbxc;)I	a	clearOrCountMatchingItems
	m	(Ldcv;)I	k	addResource
	m	(ILdcv;)I	d	addResource
	m	(Ldcv;)I	f	getSlotWithRemainingSpace
	m	()V	l	tick
	m	(Ldcv;)Z	g	add
	m	(ILdcv;)Z	c	add
	m	(Ldcv;)V	h	placeItemBackInInventory
	m	(Ldcv;Z)V	a	placeItemBackInInventory
	m	(I)Lagi;	f	createInventoryUpdatePacket
	m	(II)Ldcv;	a	removeItem
	m	(Ldcv;)V	i	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(Lfdc$a;)V	a	save
	m	(Lfda$a;)V	a	load
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	()Lxo;	aj	getName
	m	()V	m	dropAll
	m	()V	e	setChanged
	m	()I	n	getTimesChanged
	m	(Lcut;)Z	a	stillValid
	m	(Ldcv;)Z	j	contains
	m	(Lbae;)Z	a	contains
	m	(Ljava/util/function/Predicate;)Z	b	contains
	m	(Lcus;)V	a	replaceWith
	m	()V	a	clearContent
	m	(Lcuz;)V	a	fillStackedContents
	m	(Z)Ldcv;	a	removeFromSelected
	m	(Ldcv;)Ljava/lang/String;	l	lambda$add$0
	m	()V	<clinit>	<clinit>
c	cut	net/minecraft/world/entity/player/Player
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcad;	bQ	DEFAULT_MAIN_HAND
	f	I	bR	DEFAULT_MODEL_CUSTOMIZATION
	f	I	bS	MAX_HEALTH
	f	I	bT	SLEEP_DURATION
	f	I	bU	WAKE_UP_DURATION
	f	I	bV	ENDER_SLOT_OFFSET
	f	I	bW	HELD_ITEM_SLOT
	f	I	bX	CRAFTING_SLOT_OFFSET
	f	F	bY	DEFAULT_BLOCK_INTERACTION_RANGE
	f	F	bZ	DEFAULT_ENTITY_INTERACTION_RANGE
	f	F	ca	CROUCH_BB_HEIGHT
	f	F	cb	SWIMMING_BB_WIDTH
	f	F	cc	SWIMMING_BB_HEIGHT
	f	F	cd	DEFAULT_EYE_HEIGHT
	f	I	b	CURRENT_IMPULSE_CONTEXT_RESET_GRACE_TIME_TICKS
	f	Lfis;	ce	DEFAULT_VEHICLE_ATTACHMENT
	f	Lbzp;	cf	STANDING_DIMENSIONS
	f	Ljava/util/Map;	c	POSES
	f	Lalh;	d	DATA_PLAYER_ABSORPTION_ID
	f	Lalh;	e	DATA_SCORE_ID
	f	Lalh;	cg	DATA_PLAYER_MODE_CUSTOMISATION
	f	Lalh;	ch	DATA_PLAYER_MAIN_HAND
	f	Lalh;	ci	DATA_SHOULDER_LEFT
	f	Lalh;	cj	DATA_SHOULDER_RIGHT
	f	I	ck	CLIENT_LOADED_TIMEOUT_TIME
	f	S	f	DEFAULT_SLEEP_TIMER
	f	F	g	DEFAULT_EXPERIENCE_PROGRESS
	f	I	h	DEFAULT_EXPERIENCE_LEVEL
	f	I	i	DEFAULT_TOTAL_EXPERIENCE
	f	I	j	NO_ENCHANTMENT_SEED
	f	I	k	DEFAULT_SELECTED_SLOT
	f	I	cM	DEFAULT_SCORE
	f	Z	cN	DEFAULT_IGNORE_FALL_DAMAGE_FROM_CURRENT_IMPULSE
	f	I	cO	DEFAULT_CURRENT_IMPULSE_CONTEXT_RESET_GRACE_TIME
	f	J	cP	timeEntitySatOnShoulder
	f	Lcus;	cQ	inventory
	f	Ldaa;	cl	enderChestInventory
	f	Lczp;	cm	inventoryMenu
	f	Lcym;	cn	containerMenu
	f	Lcyi;	co	foodData
	f	I	cp	jumpTriggerTime
	f	Z	cR	clientLoaded
	f	I	cq	clientLoadedTimeoutTimer
	f	F	cr	oBob
	f	F	cs	bob
	f	I	ct	takeXpDelay
	f	D	cu	xCloakO
	f	D	cv	yCloakO
	f	D	cw	zCloakO
	f	D	cx	xCloak
	f	D	cy	yCloak
	f	D	cz	zCloak
	f	I	cS	sleepCounter
	f	Z	cA	wasUnderwater
	f	Lcup;	cT	abilities
	f	I	cB	experienceLevel
	f	I	cC	totalExperience
	f	F	cD	experienceProgress
	f	I	cE	enchantmentSeed
	f	F	cF	defaultFlySpeed
	f	I	cU	lastLevelUpTime
	f	Lcom/mojang/authlib/GameProfile;	cV	gameProfile
	f	Z	cW	reducedDebugInfo
	f	Ldcv;	cX	lastItemInMainHand
	f	Ldcs;	cY	cooldowns
	f	Ljava/util/Optional;	cZ	lastDeathLocation
	f	Lcvk;	cG	fishing
	f	F	cH	hurtDir
	f	Lfis;	cI	currentImpulseImpactPos
	f	Lbzm;	cJ	currentExplosionCause
	f	Z	da	ignoreFallDamageFromCurrentImpulse
	f	I	db	currentImpulseContextResetGraceTime
	m	(Ldmu;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	()Lbzq;	eg	createEquipment
	m	(Ldmu;Ljb;Ldmr;)Z	a	blockActionRestricted
	m	()Lcbr$a;	gg	createAttributes
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	()F	fv	getMaxHeadRotationRelativeToBody
	m	()Z	gh	isSecondaryUseActive
	m	()Z	gi	wantsToStopRiding
	m	()Z	gj	isStayingOnGroundSurface
	m	()Z	gk	updateIsUnderwater
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Z)V	m	onInsideBubbleColumn
	m	()V	l	turtleHelmetTick
	m	(Ldcr;)Z	c	isEquipped
	m	()Ldcs;	f	createItemCooldowns
	m	()V	m	moveCloak
	m	()V	gl	updatePlayerPose
	m	()Lcay;	n	getDesiredPose
	m	(Lcay;)Z	h	canPlayerFitWithinBlocksAndEntitiesWhen
	m	()Layy;	aY	getSwimSound
	m	()Layy;	aZ	getSwimSplashSound
	m	()Layy;	ba	getSwimHighSpeedSplashSound
	m	()I	ca	getDimensionChangingDelay
	m	(Layy;FF)V	a	playSound
	m	(Layy;Laza;FF)V	a	playNotifySound
	m	()Laza;	do	getSoundSource
	m	()I	dp	getFireImmuneTicks
	m	(B)V	b	handleEntityEvent
	m	()V	p	closeContainer
	m	()V	q	doCloseContainer
	m	()V	r	rideTick
	m	()V	e_	aiStep
	m	()V	i	tickRegeneration
	m	(Lui;)V	d	playShoulderEntityAmbientSound
	m	(Lbzm;)V	d	touch
	m	()I	gm	getScore
	m	(I)V	q	setScore
	m	(I)V	r	increaseScore
	m	(IFLdcv;)V	a	startAutoSpinAttack
	m	()Ldcv;	ed	getWeaponItem
	m	(Lbyb;)V	a	die
	m	(Laub;)V	f	dropEquipment
	m	()V	gn	destroyVanishingCursedItems
	m	(Lbyb;)Layy;	e	getHurtSound
	m	()Layy;	f_	getDeathSound
	m	(Ldcv;)V	g	handleCreativeModeItemDrop
	m	(Ldcv;Z)Lcqz;	a	drop
	m	(Leeb;)F	c	getDestroySpeed
	m	(Leeb;)Z	d	hasCorrectToolForDrops
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Laub;Lbyb;)Z	a	isInvulnerableTo
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lcam;)V	b	blockUsingItem
	m	()Z	eE	canBeSeenAsEnemy
	m	(Lcut;)Z	a	canHarmPlayer
	m	(Lbyb;F)V	c	hurtArmor
	m	(Lbyb;F)V	d	hurtHelmet
	m	(Laub;Lbyb;F)V	c	actuallyHurt
	m	()Z	X	isTextFilteringEnabled
	m	(Lecn;Z)V	a	openTextEdit
	m	(Ldlt;)V	a	openMinecartCommandBlock
	m	(Lebk;)V	a	openCommandBlock
	m	(Lecs;)V	a	openStructureBlock
	m	(Lect;)V	a	openTestBlock
	m	(Lecu;)V	a	openTestInstanceBlock
	m	(Lecd;)V	a	openJigsawBlock
	m	(Lcoq;Lbxc;)V	a	openHorseInventory
	m	(Lbxm;)Ljava/util/OptionalInt;	a	openMenu
	m	(Ljl;)V	b	openDialog
	m	(ILdlr;IIZZ)V	a	sendMerchantOffers
	m	(Ldcv;Lbxi;)V	a	openItemGui
	m	(Lbzm;Lbxi;)Lbxj;	a	interactOn
	m	()V	ab	removeVehicle
	m	()Z	fm	isImmobile
	m	()Z	er	isAffectedByFluids
	m	(Lfis;Lcaq;)Lfis;	a	maybeBackOffFromEdge
	m	(F)Z	H	isAboveGround
	m	(DDD)Z	q	canFallAtLeast
	m	(Lbzm;)V	e	attack
	m	(Lbzm;FLbyb;)F	a	getEnchantedDamage
	m	(Lcam;)V	f	doAutoAttackOnTouch
	m	(Lbzm;)V	b	crit
	m	(Lbzm;)V	c	magicCrit
	m	()V	go	sweepAttack
	m	()V	gp	respawn
	m	(Lbzm$e;)V	a	remove
	m	()Z	aa_	isClientAuthoritative
	m	()Z	dj	isLocalClientAuthoritative
	m	()Z	gq	isLocalPlayer
	m	()Z	dk	canSimulateMovement
	m	()Z	dl	isEffectiveAi
	m	()Lcom/mojang/authlib/GameProfile;	gr	getGameProfile
	m	()Lcus;	gs	getInventory
	m	()Lcup;	gt	getAbilities
	m	()Z	gc	hasInfiniteMaterials
	m	()Z	gu	preventsBlockDrops
	m	(Ldcv;Ldcv;Lcyw;)V	a	updateTutorialInventoryAction
	m	()Z	gv	hasContainerOpen
	m	()Z	gw	canDropItems
	m	(Ljb;)Lcom/mojang/datafixers/util/Either;	a	startSleepInBed
	m	(ZZ)V	a	stopSleepInBed
	m	()V	fZ	stopSleeping
	m	()Z	gx	isSleepingLongEnough
	m	()I	gy	getSleepTimer
	m	(Lxo;Z)V	a	displayClientMessage
	m	(Lame;)V	a	awardStat
	m	(Lame;I)V	a	awardStat
	m	(Lazg;)V	b	awardStat
	m	(Lazg;I)V	a	awardStat
	m	(Lazg;)V	a	resetStat
	m	(Ljava/util/Collection;)I	a	awardRecipes
	m	(Ldhr;Ljava/util/List;)V	a	triggerRecipeCrafted
	m	(Ljava/util/List;)V	b	awardRecipesByKey
	m	(Ljava/util/Collection;)I	b	resetRecipes
	m	(Lfis;)V	k	travel
	m	()Z	fA	canGlide
	m	()V	bs	updateSwimming
	m	(Ljb;)Z	h	freeAt
	m	()F	fu	getSpeed
	m	(DFLbyb;)Z	a	causeFallDamage
	m	()Z	gz	tryToStartFallFlying
	m	()V	gA	startFallFlying
	m	()V	bv	doWaterSplashEffect
	m	(Ljb;Leeb;)V	b	playStepSound
	m	()Lcam$a;	eT	getFallSounds
	m	(Laub;Lcam;)Z	a	killedEntity
	m	(Leeb;Lfis;)V	a	makeStuckInBlock
	m	(I)V	d	giveExperiencePoints
	m	()I	gB	getEnchantmentSeed
	m	(Ldcv;I)V	a	onEnchantmentPerformed
	m	(I)V	c	giveExperienceLevels
	m	()I	gC	getXpNeededForNextLevel
	m	(F)V	a	causeFoodExhaustion
	m	()Ljava/util/Optional;	Z	getWardenSpawnTracker
	m	()Lcyi;	gD	getFoodData
	m	(Z)Z	u	canEat
	m	()Z	gE	isHurt
	m	()Z	gF	mayBuild
	m	(Ljb;Ljh;Ldcv;)Z	a	mayUseItemAt
	m	(Laub;)I	e	getBaseExperienceReward
	m	()Z	ev	isAlwaysExperienceDropper
	m	()Z	cQ	shouldShowName
	m	()Lbzm$d;	bj	getMovementEmission
	m	()V	x	onUpdateAbilities
	m	()Lxo;	aj	getName
	m	()Ldaa;	gG	getEnderChestInventory
	m	(Lbzw;)Z	b	doesEmitEquipEvent
	m	(Ldcv;)Z	h	addItem
	m	(Lui;)Z	a	setEntityOnShoulder
	m	()V	gH	removeEntitiesOnShoulder
	m	(Lui;)V	e	respawnEntityOnShoulder
	m	()Ldmr;	a	gameMode
	m	()Z	am	isSpectator
	m	()Z	bJ	canBeHitByProjectile
	m	()Z	cn	isSwimming
	m	()Z	gI	isCreative
	m	()Z	cN	isPushedByFluid
	m	()Lfjx;	gJ	getScoreboard
	m	()Lxo;	Q_	getDisplayName
	m	(Lyc;)Lyc;	a	decorateDisplayNameComponent
	m	()Ljava/lang/String;	cM	getScoreboardName
	m	(F)V	F	internalSetAbsorptionAmount
	m	()F	fD	getAbsorptionAmount
	m	(Lcuv;)Z	a	isModelPartShown
	m	(I)Lcbd;	a_	getSlot
	m	()Z	gK	isReducedDebugInfo
	m	(Z)V	v	setReducedDebugInfo
	m	(I)V	h	setRemainingFireTicks
	m	()Lcad;	fF	getMainArm
	m	(Lcad;)V	b	setMainArm
	m	()Lui;	gL	getShoulderEntityLeft
	m	(Lui;)V	b	setShoulderEntityLeft
	m	()Lui;	gM	getShoulderEntityRight
	m	(Lui;)V	c	setShoulderEntityRight
	m	()F	gN	getCurrentItemAttackStrengthDelay
	m	(F)F	G	getAttackStrengthScale
	m	()V	gO	resetAttackStrengthTicker
	m	()Ldcs;	gP	getCooldowns
	m	()F	aW	getBlockSpeedFactor
	m	()F	em	getLuck
	m	()Z	gQ	canUseGameMasterBlocks
	m	()I	G	getPermissionLevel
	m	(I)Z	s	hasPermissions
	m	(Lcay;)Lbzp;	e	getDefaultDimensions
	m	()Lcom/google/common/collect/ImmutableList;	fV	getDismountPoses
	m	(Ldcv;)Ldcv;	d	getProjectile
	m	(F)Lfis;	u	getRopeHoldPosition
	m	()Z	dY	isAlwaysTicking
	m	()Z	gR	isScoping
	m	()Z	dX	shouldBeSaved
	m	()Ljava/util/Optional;	gS	getLastDeathLocation
	m	(Ljava/util/Optional;)V	a	setLastDeathLocation
	m	()F	eR	getHurtDir
	m	(F)V	q	animateHurt
	m	()Z	dS	canSprint
	m	()F	ft	getFlyingSpeed
	m	()Z	gT	hasClientLoaded
	m	()V	gU	tickClientLoadTimeout
	m	(Z)V	w	setClientLoaded
	m	()D	gV	blockInteractionRange
	m	()D	gW	entityInteractionRange
	m	(Lbzm;D)Z	b	canInteractWithEntity
	m	(Lfin;D)Z	a	canInteractWithEntity
	m	(Ljb;D)Z	a	canInteractWithBlock
	m	(Z)V	x	setIgnoreFallDamageFromCurrentImpulse
	m	()Z	gX	isIgnoringFallDamageFromCurrentImpulse
	m	()V	gY	tryResetCurrentImpulseContext
	m	()V	gZ	resetCurrentImpulseContext
	m	()Z	ha	shouldRotateWithMinecart
	m	()Z	eV	onClimbable
	m	()Ljava/lang/String;	hb	debugInfo
	m	(Ljava/lang/String;Lyl;)Lyl;	a	lambda$decorateDisplayNameComponent$3
	m	(Laub;Lbzm;)V	d	lambda$respawnEntityOnShoulder$2
	m	()Ljava/lang/String;	t	lambda$respawnEntityOnShoulder$1
	m	(Lfdc;Ljk;)V	a	lambda$addAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	cut$1	net/minecraft/world/entity/player/Player$1
	f	Lcut;	b	this$0
	m	(Lcut;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cut$2	net/minecraft/world/entity/player/Player$2
	f	I	b	val$craftSlot
	f	Lcut;	c	this$0
	m	(Lcut;I)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cut$a	net/minecraft/world/entity/player/Player$BedSleepingProblem
	f	Lcut$a;	a	NOT_POSSIBLE_HERE
	f	Lcut$a;	b	NOT_POSSIBLE_NOW
	f	Lcut$a;	c	TOO_FAR_AWAY
	f	Lcut$a;	d	OBSTRUCTED
	f	Lcut$a;	e	OTHER_PROBLEM
	f	Lcut$a;	f	NOT_SAFE
	f	Lxo;	g	message
	f	[Lcut$a;	h	$VALUES
	m	()[Lcut$a;	values	values
	m	(Ljava/lang/String;)Lcut$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljava/lang/String;ILxo;)V	<init>	<init>
	m	()Lxo;	a	getMessage
	m	()[Lcut$a;	b	$values
	m	()V	<clinit>	<clinit>
c	cuu	net/minecraft/world/entity/player/PlayerEquipment
	f	Lcut;	b	player
	m	(Lcut;)V	<init>	<init>
	m	(Lbzw;Ldcv;)Ldcv;	a	set
	m	(Lbzw;)Ldcv;	a	get
	m	()Z	a	isEmpty
c	cuv	net/minecraft/world/entity/player/PlayerModelPart
	f	Lcuv;	a	CAPE
	f	Lcuv;	b	JACKET
	f	Lcuv;	c	LEFT_SLEEVE
	f	Lcuv;	d	RIGHT_SLEEVE
	f	Lcuv;	e	LEFT_PANTS_LEG
	f	Lcuv;	f	RIGHT_PANTS_LEG
	f	Lcuv;	g	HAT
	f	I	h	bit
	f	I	i	mask
	f	Ljava/lang/String;	j	id
	f	Lxo;	k	name
	f	[Lcuv;	l	$VALUES
	m	()[Lcuv;	values	values
	m	(Ljava/lang/String;)Lcuv;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getMask
	m	()I	b	getBit
	m	()Ljava/lang/String;	c	getId
	m	()Lxo;	d	getName
	m	()[Lcuv;	e	$values
	m	()V	<clinit>	<clinit>
c	cuw	net/minecraft/world/entity/player/ProfileKeyPair
	f	Ljava/security/PrivateKey;	b	privateKey
	f	Lcux;	c	publicKey
	f	Ljava/time/Instant;	d	refreshedAfter
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/security/PrivateKey;Lcux;Ljava/time/Instant;)V	<init>	<init>
	m	()Z	a	dueRefresh
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/security/PrivateKey;	b	privateKey
	m	()Lcux;	c	publicKey
	m	()Ljava/time/Instant;	d	refreshedAfter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cux	net/minecraft/world/entity/player/ProfilePublicKey
	f	Lcux$a;	d	data
	f	Lxo;	a	EXPIRED_PROFILE_PUBLIC_KEY
	f	Lxo;	e	INVALID_SIGNATURE
	f	Ljava/time/Duration;	b	EXPIRY_GRACE_PERIOD
	f	Lcom/mojang/serialization/Codec;	c	TRUSTED_CODEC
	m	(Lcux$a;)V	<init>	<init>
	m	(Lbcq;Ljava/util/UUID;Lcux$a;)Lcux;	a	createValidated
	m	()Lbcq;	a	createSignatureValidator
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcux$a;	b	data
	m	()V	<clinit>	<clinit>
c	cux$a	net/minecraft/world/entity/player/ProfilePublicKey$Data
	f	Ljava/time/Instant;	b	expiresAt
	f	Ljava/security/PublicKey;	c	key
	f	[B	d	keySignature
	f	I	e	MAX_KEY_SIGNATURE_SIZE
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lwg;)V	<init>	<init>
	m	(Ljava/time/Instant;Ljava/security/PublicKey;[B)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lbcq;Ljava/util/UUID;)Z	a	validateSignature
	m	(Ljava/util/UUID;)[B	a	signedPayload
	m	()Z	a	hasExpired
	m	(Ljava/time/Duration;)Z	a	hasExpired
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	()Ljava/time/Instant;	b	expiresAt
	m	()Ljava/security/PublicKey;	c	key
	m	()[B	d	keySignature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cux$b	net/minecraft/world/entity/player/ProfilePublicKey$ValidationException
	m	(Lxo;)V	<init>	<init>
c	cuy	net/minecraft/world/entity/player/StackedContents
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;	a	amounts
	m	()V	<init>	<init>
	m	(Ljava/lang/Object;I)Z	b	hasAtLeast
	m	(Ljava/lang/Object;I)V	c	take
	m	(Ljava/lang/Object;I)V	d	put
	m	(Ljava/util/List;ILcuy$b;)Z	a	tryPick
	m	(Ljava/util/List;ILcuy$b;)I	b	tryPickAll
	m	()V	a	clear
	m	(Ljava/lang/Object;I)V	a	account
	m	(Ljava/lang/Iterable;)Ljava/util/List;	a	getUniqueAvailableIngredientItems
	m	(Ljava/lang/Iterable;Ljava/lang/Object;)Z	a	anyIngredientMatches
	m	(Ljava/util/List;)I	a	getResultUpperBound
c	cuy$a	net/minecraft/world/entity/player/StackedContents$IngredientInfo
	m	(Ljava/lang/Object;)Z	acceptsItem	acceptsItem
c	cuy$b	net/minecraft/world/entity/player/StackedContents$Output
	m	(Ljava/lang/Object;)V	accept	accept
c	cuy$c	net/minecraft/world/entity/player/StackedContents$RecipePicker
	f	Ljava/util/List;	c	ingredients
	f	I	d	ingredientCount
	f	Ljava/util/List;	e	items
	f	I	f	itemCount
	f	Ljava/util/BitSet;	g	data
	f	Lit/unimi/dsi/fastutil/ints/IntList;	h	path
	f	Z	a	$assertionsDisabled
	f	Lcuy;	b	this$0
	m	(Lcuy;Ljava/util/List;)V	<init>	<init>
	m	()V	a	setInitialConnections
	m	(ILcuy$b;)Z	a	tryPick
	m	(I)Z	a	isPathIndexItem
	m	(I)Lit/unimi/dsi/fastutil/ints/IntList;	b	tryAssigningNewItem
	m	(I)Lit/unimi/dsi/fastutil/ints/IntList;	c	findNewItemAssignmentPath
	m	()I	b	visitedIngredientOffset
	m	()I	c	visitedIngredientCount
	m	()I	d	visitedItemOffset
	m	()I	e	visitedItemCount
	m	()I	f	satisfiedOffset
	m	()I	g	satisfiedCount
	m	()I	h	connectionOffset
	m	()I	i	connectionCount
	m	()I	j	residualOffset
	m	()I	k	residualCount
	m	(I)Z	d	isSatisfied
	m	(I)V	e	setSatisfied
	m	(I)I	f	getSatisfiedIndex
	m	()V	l	clearSatisfied
	m	(II)V	a	setConnection
	m	(II)Z	b	hasConnection
	m	(II)I	c	getConnectionIndex
	m	(II)Z	d	isAssigned
	m	(II)V	e	assign
	m	(II)V	f	unassign
	m	(II)I	g	getResidualIndex
	m	(I)V	g	visitIngredient
	m	(I)Z	h	hasVisitedIngredient
	m	(I)I	i	getVisitedIngredientIndex
	m	(I)V	j	visitItem
	m	(I)Z	k	hasVisitedItem
	m	(I)I	l	getVisitiedItemIndex
	m	()V	m	clearAllVisited
	m	(II)V	h	clearRange
	m	(ILcuy$b;)I	b	tryPickAll
	m	()V	<clinit>	<clinit>
c	cuz	net/minecraft/world/entity/player/StackedItemContents
	f	Lcuy;	a	raw
	m	()V	<init>	<init>
	m	(Ldcv;)V	a	accountSimpleStack
	m	(Ldcv;)V	b	accountStack
	m	(Ldcv;I)V	a	accountStack
	m	(Ldhm;Lcuy$b;)Z	a	canCraft
	m	(Ldhm;ILcuy$b;)Z	a	canCraft
	m	(Ljava/util/List;Lcuy$b;)Z	a	canCraft
	m	(Ljava/util/List;ILcuy$b;)Z	a	canCraft
	m	(Ldhm;Lcuy$b;)I	b	getBiggestCraftableStack
	m	(Ldhm;ILcuy$b;)I	b	getBiggestCraftableStack
	m	()V	a	clear
c	cva	net/minecraft/world/entity/player/package-info
c	cvb	net/minecraft/world/entity/projectile/AbstractArrow
	f	D	d	ARROW_BASE_DAMAGE
	f	I	f	SHAKE_TIME
	f	F	g	WATER_INERTIA
	f	F	h	INERTIA
	f	S	i	DEFAULT_LIFE
	f	B	j	DEFAULT_SHAKE
	f	Z	k	DEFAULT_IN_GROUND
	f	Z	l	DEFAULT_CRIT
	f	B	m	DEFAULT_PIERCE_LEVEL
	f	Lalh;	n	ID_FLAGS
	f	Lalh;	o	PIERCE_LEVEL
	f	Lalh;	p	IN_GROUND
	f	I	q	FLAG_CRIT
	f	I	r	FLAG_NOPHYSICS
	f	Leeb;	s	lastState
	f	I	a	inGroundTime
	f	Lcvb$a;	b	pickup
	f	I	c	shakeTime
	f	I	t	life
	f	D	u	baseDamage
	f	Layy;	aM	soundEvent
	f	Lit/unimi/dsi/fastutil/ints/IntOpenHashSet;	aN	piercingIgnoreEntityIds
	f	Ljava/util/List;	aO	piercedAndKilledEntities
	f	Ldcv;	aP	pickupItemStack
	f	Ldcv;	aQ	firedFromWeapon
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;DDDLdmu;Ldcv;Ldcv;)V	<init>	<init>
	m	(Lbzv;Lcam;Ldmu;Ldcv;Ldcv;)V	<init>	<init>
	m	(Layy;)V	b	setSoundEvent
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lall$a;)V	a	defineSynchedData
	m	(DDDFF)V	c	shoot
	m	(DDD)V	k	lerpMotion
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	g	tick
	m	(Lfio;)V	b	stepMoveAndHit
	m	(F)V	b	applyInertia
	m	(Lfis;)V	a	addBubbleParticles
	m	()D	bg	getDefaultGravity
	m	()Z	x	shouldFall
	m	()V	A	startFalling
	m	()Z	e	isInGround
	m	(Z)V	a	setInGround
	m	()Z	cN	isPushedByFluid
	m	(Lcaq;Lfis;)V	a	move
	m	()V	f	tickDespawn
	m	()V	B	resetPiercedEntities
	m	(Ldcr;)V	b	onItemBreak
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Z)V	m	onInsideBubbleColumn
	m	(DDD)V	i	push
	m	(Lfip;)V	a	onHitEntity
	m	(Lcam;Lbyb;)V	a	doKnockback
	m	(Lfio;)V	a	onHitBlock
	m	(Laub;Lfio;Ldcv;)V	a	hitBlockEnchantmentEffects
	m	()Ldcv;	ed	getWeaponItem
	m	()Layy;	i	getDefaultHitGroundSoundEvent
	m	()Layy;	l	getHitGroundSoundEvent
	m	(Lcam;)V	a	doPostHurtEffects
	m	(Lfis;Lfis;)Lfip;	b	findHitEntity
	m	(Lbzm;)Z	b	canHitEntity
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lbzm;)V	c	setOwner
	m	(Lcut;)V	a_	playerTouch
	m	(Lcut;)Z	a	tryPickup
	m	()Ldcv;	m	getPickupItem
	m	()Ldcv;	n	getDefaultPickupItem
	m	()Lbzm$d;	bj	getMovementEmission
	m	()Ldcv;	q	getPickupItemStackOrigin
	m	(D)V	h	setBaseDamage
	m	()Z	cF	isAttackable
	m	(Z)V	b	setCritArrow
	m	(B)V	a	setPierceLevel
	m	(IZ)V	a	setFlag
	m	(Ldcv;)V	a	setPickupItemStack
	m	()Z	s	isCritArrow
	m	()B	t	getPierceLevel
	m	(F)V	a	setBaseDamageFromMob
	m	()F	u	getWaterInertia
	m	(Z)V	r	setNoPhysics
	m	()Z	v	isNoPhysics
	m	()Z	bK	isPickable
	m	(I)Lcbd;	a_	getSlot
	m	()Z	w	shouldBounceOnWorldBorder
	m	(Ldcr;)V	c	lambda$hitBlockEnchantmentEffects$0
	m	()V	<clinit>	<clinit>
c	cvb$a	net/minecraft/world/entity/projectile/AbstractArrow$Pickup
	f	Lcvb$a;	a	DISALLOWED
	f	Lcvb$a;	b	ALLOWED
	f	Lcvb$a;	c	CREATIVE_ONLY
	f	Lcom/mojang/serialization/Codec;	d	LEGACY_CODEC
	f	[Lcvb$a;	e	$VALUES
	m	()[Lcvb$a;	values	values
	m	(Ljava/lang/String;)Lcvb$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(I)Lcvb$a;	a	byOrdinal
	m	(Lcvb$a;)Ljava/lang/Byte;	a	lambda$static$0
	m	()[Lcvb$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cvc	net/minecraft/world/entity/projectile/AbstractHurtingProjectile
	f	D	a	INITAL_ACCELERATION_POWER
	f	D	b	DEFLECTION_SCALE
	f	D	c	accelerationPower
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;DDDLdmu;)V	<init>	<init>
	m	(Lbzv;DDDLfis;Ldmu;)V	<init>	<init>
	m	(Lbzv;Lcam;Lfis;Ldmu;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()Ldmb$a;	ai_	getClipType
	m	()V	g	tick
	m	()V	n	applyInertia
	m	()V	q	createParticleTrail
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbzm;)Z	b	canHitEntity
	m	()Z	f	shouldBurn
	m	()Lmc;	i	getTrailParticle
	m	()F	l	getInertia
	m	()F	m	getLiquidInertia
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()F	bB	getLightLevelDependentMagicValue
	m	(Lfis;D)V	a	assignDirectionalMovement
	m	(Lbzm;Z)V	c	onDeflection
c	cvd	net/minecraft/world/entity/projectile/AbstractThrownPotion
	f	D	a	SPLASH_RANGE
	f	D	b	SPLASH_RANGE_SQ
	f	Ljava/util/function/Predicate;	c	WATER_SENSITIVE_OR_ON_FIRE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Lbzv;Ldmu;DDDLdcv;)V	<init>	<init>
	m	()D	bg	getDefaultGravity
	m	(Lfio;)V	a	onHitBlock
	m	(Lfiq;)V	a	onHit
	m	(Laub;)V	b	onHitAsWater
	m	(Laub;Ldcv;Lfiq;)V	a	onHitAsPotion
	m	(Ljb;)V	a	dowseFire
	m	(Lcam;Lbyb;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
	m	(Lcam;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cve	net/minecraft/world/entity/projectile/Arrow
	f	I	d	EXPOSED_POTION_DECAY_TIME
	f	I	f	NO_EFFECT_COLOR
	f	Lalh;	g	ID_EFFECT_COLOR
	f	B	h	EVENT_POTION_PUFF
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;Ldcv;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;Ldcv;)V	<init>	<init>
	m	()Lder;	A	getPotionContents
	m	()F	B	getPotionDurationScale
	m	(Lder;)V	a	setPotionContents
	m	(Ldcv;)V	a	setPickupItemStack
	m	()V	C	updateColor
	m	(Lbyq;)V	a	addEffect
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	(I)V	b	makeParticle
	m	()I	x	getColor
	m	(Lcam;)V	a	doPostHurtEffects
	m	()Ldcv;	n	getDefaultPickupItem
	m	(B)V	b	handleEntityEvent
	m	(Lcam;Lbzm;Lbyq;)V	a	lambda$doPostHurtEffects$0
	m	()V	<clinit>	<clinit>
c	cvf	net/minecraft/world/entity/projectile/DragonFireball
	f	F	d	SPLASH_RANGE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Lfis;)V	<init>	<init>
	m	(Lfiq;)V	a	onHit
	m	()Lmc;	i	getTrailParticle
	m	()Z	f	shouldBurn
c	cvg	net/minecraft/world/entity/projectile/EvokerFangs
	f	I	a	ATTACK_DURATION
	f	I	b	LIFE_OFFSET
	f	I	c	ATTACK_TRIGGER_TICKS
	f	I	d	DEFAULT_WARMUP_DELAY
	f	I	e	warmupDelayTicks
	f	Z	f	sentSpikeEvent
	f	I	g	lifeTicks
	f	Z	h	clientSideAttackStarted
	f	Lbzs;	i	owner
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDFILcam;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lcam;)V	a	setOwner
	m	()Lcam;	e	getOwner
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()V	g	tick
	m	(Lcam;)V	c	dealDamageTo
	m	(B)V	b	handleEntityEvent
	m	(F)F	a	getAnimationProgress
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()Lbzm;	ah_	getOwner
c	cvh	net/minecraft/world/entity/projectile/EyeOfEnder
	f	F	a	MIN_CAMERA_DISTANCE_SQUARED
	f	F	b	TOO_FAR_SIGNAL_HEIGHT
	f	F	c	TOO_FAR_DISTANCE
	f	Lalh;	d	DATA_ITEM_STACK
	f	Lfis;	e	target
	f	I	f	life
	f	Z	g	surviveAfterDeath
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDD)V	<init>	<init>
	m	(Ldcv;)V	a	setItem
	m	()Ldcv;	e	getItem
	m	(Lall$a;)V	a	defineSynchedData
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Lfis;)V	a	signalTo
	m	()V	g	tick
	m	(Lfis;Lfis;)V	b	spawnParticles
	m	(Lfis;Lfis;Lfis;)Lfis;	a	updateDeltaMovement
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Ldcv;	f	getDefaultItem
	m	()F	bB	getLightLevelDependentMagicValue
	m	()Z	cF	isAttackable
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	()V	<clinit>	<clinit>
c	cvi	net/minecraft/world/entity/projectile/Fireball
	f	F	d	MIN_CAMERA_DISTANCE_SQUARED
	f	Lalh;	f	DATA_ITEM_STACK
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;DDDLfis;Ldmu;)V	<init>	<init>
	m	(Lbzv;Lcam;Lfis;Ldmu;)V	<init>	<init>
	m	(Ldcv;)V	a	setItem
	m	()V	aP	playEntityOnFireExtinguishedSound
	m	()Ldcv;	e	getItem
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Ldcv;	n	getDefaultItem
	m	(I)Lcbd;	a_	getSlot
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()V	<clinit>	<clinit>
c	cvj	net/minecraft/world/entity/projectile/FireworkRocketEntity
	f	Lalh;	a	DATA_ID_FIREWORKS_ITEM
	f	Lalh;	b	DATA_ATTACHED_TO_TARGET
	f	Lalh;	c	DATA_SHOT_AT_ANGLE
	f	I	d	DEFAULT_LIFE
	f	I	f	DEFAULT_LIFE_TIME
	f	Z	g	DEFAULT_SHOT_AT_ANGLE
	f	I	h	life
	f	I	i	lifetime
	f	Lcam;	j	attachedToEntity
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	(Ldmu;Lbzm;DDDLdcv;)V	<init>	<init>
	m	(Ldmu;Ldcv;Lcam;)V	<init>	<init>
	m	(Ldmu;Ldcv;DDDZ)V	<init>	<init>
	m	(Ldmu;Ldcv;Lbzm;DDDZ)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(DDD)Z	j	shouldRender
	m	()V	g	tick
	m	(Laub;)V	b	explode
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	()Z	i	hasExplosion
	m	(Laub;)V	e	dealExplosionDamage
	m	()Z	l	isAttachedToEntity
	m	()Z	f	isShotAtAngle
	m	(B)V	b	handleEntityEvent
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Ljava/util/List;	m	getExplosions
	m	()Ldcv;	e	getItem
	m	()Z	cF	isAttackable
	m	()Ldcv;	n	getDefaultItem
	m	(Lcam;Lbyb;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
	m	(I)V	b	lambda$tick$0
	m	()V	<clinit>	<clinit>
c	cvk	net/minecraft/world/entity/projectile/FishingHook
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbck;	b	syncronizedRandom
	f	Z	c	biting
	f	I	d	outOfWaterTime
	f	I	f	MAX_OUT_OF_WATER_TIME
	f	Lalh;	g	DATA_HOOKED_ENTITY
	f	Lalh;	h	DATA_BITING
	f	I	i	life
	f	I	j	nibble
	f	I	k	timeUntilLured
	f	I	l	timeUntilHooked
	f	F	m	fishAngle
	f	Z	n	openWater
	f	Lbzm;	o	hookedIn
	f	Lcvk$a;	p	currentState
	f	I	q	luck
	f	I	r	lureSpeed
	f	Lcah;	s	interpolationHandler
	m	(Lbzv;Ldmu;II)V	<init>	<init>
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lcut;Ldmu;II)V	<init>	<init>
	m	()Lcah;	l_	getInterpolation
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	w	shouldBounceOnWorldBorder
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()V	g	tick
	m	(Lcut;)Z	a	shouldStopFishing
	m	()V	l	checkCollision
	m	(Lbzm;)Z	b	canHitEntity
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	(Lbzm;)V	C	setHookedEntity
	m	(Ljb;)V	a	catchingFish
	m	(Ljb;)Z	b	calculateOpenWater
	m	(Ljb;Ljb;)Lcvk$b;	a	getOpenWaterTypeForArea
	m	(Ljb;)Lcvk$b;	c	getOpenWaterTypeForBlock
	m	()Z	e	isOpenWaterFishing
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Ldcv;)I	a	retrieve
	m	(B)V	b	handleEntityEvent
	m	(Lbzm;)V	d	pullEntity
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lbzm$e;)V	a	remove
	m	()V	av	onClientRemoval
	m	(Lbzm;)V	c	setOwner
	m	(Lcvk;)V	a	updateOwnerInfo
	m	()Lcut;	f	getPlayerOwner
	m	()Lbzm;	i	getHookedIn
	m	(Z)Z	o	canUsePortal
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	(Lcvk$b;Lcvk$b;)Lcvk$b;	a	lambda$getOpenWaterTypeForArea$0
	m	()V	<clinit>	<clinit>
c	cvk$a	net/minecraft/world/entity/projectile/FishingHook$FishHookState
	f	Lcvk$a;	a	FLYING
	f	Lcvk$a;	b	HOOKED_IN_ENTITY
	f	Lcvk$a;	c	BOBBING
	f	[Lcvk$a;	d	$VALUES
	m	()[Lcvk$a;	values	values
	m	(Ljava/lang/String;)Lcvk$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcvk$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cvk$b	net/minecraft/world/entity/projectile/FishingHook$OpenWaterType
	f	Lcvk$b;	a	ABOVE_WATER
	f	Lcvk$b;	b	INSIDE_WATER
	f	Lcvk$b;	c	INVALID
	f	[Lcvk$b;	d	$VALUES
	m	()[Lcvk$b;	values	values
	m	(Ljava/lang/String;)Lcvk$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcvk$b;	a	$values
	m	()V	<clinit>	<clinit>
c	cvl	net/minecraft/world/entity/projectile/ItemSupplier
	m	()Ldcv;	e	getItem
c	cvm	net/minecraft/world/entity/projectile/LargeFireball
	f	B	d	DEFAULT_EXPLOSION_POWER
	f	I	f	explosionPower
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Lfis;I)V	<init>	<init>
	m	(Lfiq;)V	a	onHit
	m	(Lfip;)V	a	onHitEntity
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
c	cvn	net/minecraft/world/entity/projectile/LlamaSpit
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcot;)V	<init>	<init>
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lacr;)V	a	recreateFromPacket
c	cvo	net/minecraft/world/entity/projectile/Projectile
	f	Z	a	DEFAULT_LEFT_OWNER
	f	Z	b	DEFAULT_HAS_BEEN_SHOT
	f	Lbzs;	e	owner
	f	Z	c	leftOwner
	f	Z	d	hasBeenShot
	f	Lbzm;	f	lastDeflectedBy
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzs;)V	a	setOwner
	m	(Lbzm;)V	c	setOwner
	m	()Lbzm;	ah_	getOwner
	m	()Lbzm;	y	getEffectSource
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lbzm;)Z	e	ownedBy
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lbzm;)V	y	restoreFrom
	m	()V	g	tick
	m	()Z	f	checkLeftOwner
	m	(DDDFF)Lfis;	d	getMovementToShoot
	m	(DDDFF)V	c	shoot
	m	(Lbzm;FFFFF)V	a	shootFromRotation
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Z)V	m	onInsideBubbleColumn
	m	(Lcvo$a;Laub;Ldcv;Lcam;FFF)Lcvo;	a	spawnProjectileFromRotation
	m	(Lcvo$a;Laub;Ldcv;Lcam;DDDFF)Lcvo;	a	spawnProjectileUsingShoot
	m	(Lcvo;Laub;Ldcv;DDDFF)Lcvo;	a	spawnProjectileUsingShoot
	m	(Lcvo;Laub;Ldcv;)Lcvo;	a	spawnProjectile
	m	(Lcvo;Laub;Ldcv;Ljava/util/function/Consumer;)Lcvo;	a	spawnProjectile
	m	(Laub;Ldcv;)V	b	applyOnProjectileSpawned
	m	(Lfiq;)Lcvp;	b	hitTargetOrDeflectSelf
	m	()Z	w	shouldBounceOnWorldBorder
	m	(Lcvp;Lbzm;Lbzm;Z)Z	a	deflect
	m	(Lbzm;Z)V	c	onDeflection
	m	(Ldcr;)V	b	onItemBreak
	m	(Lfiq;)V	a	onHit
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	(Lbzm;)Z	b	canHitEntity
	m	()V	z	updateRotation
	m	(FF)F	f	lerpRotation
	m	(Latz;)Lzw;	a	getAddEntityPacket
	m	(Lacr;)V	a	recreateFromPacket
	m	(Laub;Ljb;)Z	c	mayInteract
	m	(Laub;)Z	a	mayBreak
	m	()Z	bK	isPickable
	m	()F	bV	getPickRadius
	m	(Lcam;Lbyb;)Lit/unimi/dsi/fastutil/doubles/DoubleDoubleImmutablePair;	a_	calculateHorizontalHurtKnockbackDirection
	m	()I	ca	getDimensionChangingDelay
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldcr;)V	c	lambda$applyOnProjectileSpawned$5
	m	(Lcvo;)V	b	lambda$spawnProjectile$4
	m	(Lcvo;DDDFFLcvo;)V	a	lambda$spawnProjectileUsingShoot$3
	m	(DDDFFLcvo;)V	a	lambda$spawnProjectileUsingShoot$2
	m	(Lcam;FFFLcvo;)V	a	lambda$spawnProjectileFromRotation$1
	m	(Lfin;Lbzm;)Z	a	lambda$checkLeftOwner$0
c	cvo$a	net/minecraft/world/entity/projectile/Projectile$ProjectileFactory
	m	(Laub;Lcam;Ldcv;)Lcvo;	create	create
c	cvp	net/minecraft/world/entity/projectile/ProjectileDeflection
	f	Lcvp;	a	NONE
	f	Lcvp;	b	REVERSE
	f	Lcvp;	c	AIM_DEFLECT
	f	Lcvp;	d	MOMENTUM_DEFLECT
	m	(Lcvo;Lbzm;Lbck;)V	deflect	deflect
	m	(Lcvo;Lbzm;Lbck;)V	a	lambda$static$3
	m	(Lcvo;Lbzm;Lbck;)V	b	lambda$static$2
	m	(Lcvo;Lbzm;Lbck;)V	c	lambda$static$1
	m	(Lcvo;Lbzm;Lbck;)V	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cvq	net/minecraft/world/entity/projectile/ProjectileUtil
	f	F	a	DEFAULT_ENTITY_HIT_RESULT_MARGIN
	m	()V	<init>	<init>
	m	(Lbzm;Ljava/util/function/Predicate;)Lfiq;	a	getHitResultOnMoveVector
	m	(Lbzm;Ljava/util/function/Predicate;Ldmb$a;)Lfiq;	a	getHitResultOnMoveVector
	m	(Lbzm;Ljava/util/function/Predicate;D)Lfiq;	a	getHitResultOnViewVector
	m	(Lfis;Lbzm;Ljava/util/function/Predicate;Lfis;Ldmu;FLdmb$a;)Lfiq;	a	getHitResult
	m	(Lbzm;Lfis;Lfis;Lfin;Ljava/util/function/Predicate;D)Lfip;	a	getEntityHitResult
	m	(Ldmu;Lcvo;Lfis;Lfis;Lfin;Ljava/util/function/Predicate;)Lfip;	a	getEntityHitResult
	m	(Lbzm;)F	a	computeMargin
	m	(Ldmu;Lbzm;Lfis;Lfis;Lfin;Ljava/util/function/Predicate;F)Lfip;	a	getEntityHitResult
	m	(Lbzm;F)V	a	rotateTowardsMovement
	m	(Lcam;Ldcr;)Lbxi;	a	getWeaponHoldingHand
	m	(Lcam;Ldcv;FLdcv;)Lcvb;	a	getMobArrow
c	cvr	net/minecraft/world/entity/projectile/ShulkerBullet
	f	D	a	SPEED
	f	Lbzs;	b	finalTarget
	f	Ljh;	c	currentMoveDirection
	f	I	d	flightSteps
	f	D	f	targetDeltaX
	f	D	g	targetDeltaY
	f	D	h	targetDeltaZ
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Lbzm;Ljh$a;)V	<init>	<init>
	m	()Laza;	do	getSoundSource
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lall$a;)V	a	defineSynchedData
	m	()Ljh;	e	getMoveDirection
	m	(Ljh;)V	a	setMoveDirection
	m	(Ljh$a;Lbzm;)V	a	selectNextMoveDirection
	m	()V	dJ	checkDespawn
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	()Z	aO	isAffectedByBlocks
	m	(Lbzm;)Z	b	canHitEntity
	m	()Z	cb	isOnFire
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()F	bB	getLightLevelDependentMagicValue
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	()V	f	destroy
	m	(Lfiq;)V	a	onHit
	m	()Z	bK	isPickable
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lacr;)V	a	recreateFromPacket
c	cvs	net/minecraft/world/entity/projectile/SmallFireball
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Lfis;)V	<init>	<init>
	m	(Ldmu;DDDLfis;)V	<init>	<init>
	m	(Lfip;)V	a	onHitEntity
	m	(Lfio;)V	a	onHitBlock
	m	(Lfiq;)V	a	onHit
c	cvt	net/minecraft/world/entity/projectile/Snowball
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	()Ldcr;	f	getDefaultItem
	m	()Lmc;	i	getParticle
	m	(B)V	b	handleEntityEvent
	m	(Lfip;)V	a	onHitEntity
	m	(Lfiq;)V	a	onHit
c	cvu	net/minecraft/world/entity/projectile/SpectralArrow
	f	I	d	DEFAULT_DURATION
	f	I	f	duration
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;Ldcv;)V	<init>	<init>
	m	()V	g	tick
	m	(Lcam;)V	a	doPostHurtEffects
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Ldcv;	n	getDefaultPickupItem
c	cvv	net/minecraft/world/entity/projectile/ThrowableItemProjectile
	f	Lalh;	a	DATA_ITEM_STACK
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;DDDLdmu;Ldcv;)V	<init>	<init>
	m	(Lbzv;Lcam;Ldmu;Ldcv;)V	<init>	<init>
	m	(Ldcv;)V	a	setItem
	m	()Ldcr;	f	getDefaultItem
	m	()Ldcv;	e	getItem
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Ldcv;	i	lambda$readAdditionalSaveData$0
	m	()V	<clinit>	<clinit>
c	cvw	net/minecraft/world/entity/projectile/ThrowableProjectile
	f	F	a	MIN_CAMERA_DISTANCE_SQUARED
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;DDDLdmu;)V	<init>	<init>
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	(Z)Z	o	canUsePortal
	m	()V	g	tick
	m	()V	f	applyInertia
	m	()V	i	handleFirstTickBubbleColumn
	m	()D	bg	getDefaultGravity
c	cvx	net/minecraft/world/entity/projectile/ThrownEgg
	f	Lbzp;	a	ZERO_SIZED_DIMENSIONS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	(B)V	b	handleEntityEvent
	m	(Lfip;)V	a	onHitEntity
	m	(Lfiq;)V	a	onHit
	m	()Ldcr;	f	getDefaultItem
	m	(Ldbw;)Ljava/util/Optional;	a	lambda$onHit$0
	m	()V	<clinit>	<clinit>
c	cvy	net/minecraft/world/entity/projectile/ThrownEnderpearl
	f	J	a	ticketTimer
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	()Ldcr;	f	getDefaultItem
	m	(Lbzs;)V	a	setOwner
	m	()V	i	deregisterFromCurrentOwner
	m	()V	l	registerToCurrentOwner
	m	()Lbzm;	ah_	getOwner
	m	(Laub;Ljava/util/UUID;)Lbzm;	a	findOwnerInAnyDimension
	m	(Lfip;)V	a	onHitEntity
	m	(Lfiq;)V	a	onHit
	m	(Lbzm;Ldmu;)Z	a	isAllowedToTeleportOwner
	m	()V	g	tick
	m	(Ldmu;Lfis;)V	a	playSound
	m	(Lfbl;)Lbzm;	b	teleport
	m	(Ldmu;Ldmu;)Z	a	canTeleport
	m	(Leeb;)V	a	onInsideBlock
	m	(Lbzm$e;)V	b	onRemoval
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Z)V	m	onInsideBubbleColumn
	m	(Laub;Ljava/util/UUID;)Lbzm;	b	lambda$getOwner$0
c	cvz	net/minecraft/world/entity/projectile/ThrownExperienceBottle
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	()Ldcr;	f	getDefaultItem
	m	()D	bg	getDefaultGravity
	m	(Lfiq;)V	a	onHit
c	cwa	net/minecraft/world/entity/projectile/ThrownLingeringPotion
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	()Ldcr;	f	getDefaultItem
	m	(Laub;Ldcv;Lfiq;)V	a	onHitAsPotion
c	cwb	net/minecraft/world/entity/projectile/ThrownSplashPotion
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	()Ldcr;	f	getDefaultItem
	m	(Laub;Ldcv;Lfiq;)V	a	onHitAsPotion
	m	(DFI)I	a	lambda$onHitAsPotion$0
c	cwc	net/minecraft/world/entity/projectile/ThrownTrident
	f	Lalh;	f	ID_LOYALTY
	f	Lalh;	g	ID_FOIL
	f	F	h	WATER_INERTIA
	f	Z	i	DEFAULT_DEALT_DAMAGE
	f	Z	j	dealtDamage
	f	I	d	clientSideReturnTridentTickCount
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;)V	<init>	<init>
	m	(Ldmu;DDDLdcv;)V	<init>	<init>
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	()Z	A	isAcceptibleReturnOwner
	m	()Z	x	isFoil
	m	(Lfis;Lfis;)Lfip;	b	findHitEntity
	m	(Lfip;)V	a	onHitEntity
	m	(Laub;Lfio;Ldcv;)V	a	hitBlockEnchantmentEffects
	m	()Ldcv;	ed	getWeaponItem
	m	(Lcut;)Z	a	tryPickup
	m	()Ldcv;	n	getDefaultPickupItem
	m	()Layy;	i	getDefaultHitGroundSoundEvent
	m	(Lcut;)V	a_	playerTouch
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Ldcv;)B	b	getLoyaltyFromItem
	m	()V	f	tickDespawn
	m	()F	u	getWaterInertia
	m	(DDD)Z	j	shouldRender
	m	(Laub;Ldcr;)V	a	lambda$hitBlockEnchantmentEffects$1
	m	(Laub;Ldcr;)V	b	lambda$onHitEntity$0
	m	()V	<clinit>	<clinit>
c	cwd	net/minecraft/world/entity/projectile/WitherSkull
	f	Lalh;	d	DATA_DANGEROUS
	f	Z	f	DEFAULT_DANGEROUS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Ldmu;Lcam;Lfis;)V	<init>	<init>
	m	()F	l	getInertia
	m	()Z	cb	isOnFire
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;F)F	a	getBlockExplosionResistance
	m	(Lfip;)V	a	onHitEntity
	m	(Lfiq;)V	a	onHit
	m	(Lall$a;)V	a	defineSynchedData
	m	()Z	n	isDangerous
	m	(Z)V	a	setDangerous
	m	()Z	f	shouldBurn
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()V	<clinit>	<clinit>
c	cwe	net/minecraft/world/entity/projectile/package-info
c	cwf	net/minecraft/world/entity/projectile/windcharge/AbstractWindCharge
	f	Ldmo;	d	EXPLOSION_DAMAGE_CALCULATOR
	f	D	f	JUMP_SCALE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;Lbzm;DDD)V	<init>	<init>
	m	(Lbzv;DDDLfis;Ldmu;)V	<init>	<init>
	m	(Lfis;)Lfin;	c	makeBoundingBox
	m	(Lbzm;)Z	i	canCollideWith
	m	(Lbzm;)Z	b	canHitEntity
	m	(Lfip;)V	a	onHitEntity
	m	(DDD)V	i	push
	m	(Lfis;)V	a	explode
	m	(Lfio;)V	a	onHitBlock
	m	(Lfiq;)V	a	onHit
	m	()Z	f	shouldBurn
	m	()Ldcv;	e	getItem
	m	()F	l	getInertia
	m	()F	m	getLiquidInertia
	m	()Lmc;	i	getTrailParticle
	m	()V	g	tick
	m	()V	<clinit>	<clinit>
c	cwg	net/minecraft/world/entity/projectile/windcharge/BreezeWindCharge
	f	F	g	RADIUS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lcsr;Ldmu;)V	<init>	<init>
	m	(Lfis;)V	a	explode
c	cwh	net/minecraft/world/entity/projectile/windcharge/WindCharge
	f	Ldmo;	g	EXPLOSION_DAMAGE_CALCULATOR
	f	F	h	RADIUS
	f	F	i	MIN_CAMERA_DISTANCE_SQUARED
	f	I	j	noDeflectTicks
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lcut;Ldmu;DDD)V	<init>	<init>
	m	(Ldmu;DDDLfis;)V	<init>	<init>
	m	()V	g	tick
	m	(Lcvp;Lbzm;Lbzm;Z)Z	a	deflect
	m	(Lfis;)V	a	explode
	m	(D)Z	a	shouldRenderAtSqrDistance
	m	()V	<clinit>	<clinit>
c	cwi	net/minecraft/world/entity/projectile/windcharge/package-info
c	cwj	net/minecraft/world/entity/raid/Raid
	f	Lcbf;	a	RAVAGER_SPAWN_PLACEMENT_TYPE
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	I	j	ALLOW_SPAWNING_WITHIN_VILLAGE_SECONDS_THRESHOLD
	f	I	k	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER
	f	I	l	VILLAGE_SEARCH_RADIUS
	f	I	m	RAID_TIMEOUT_TICKS
	f	I	n	NUM_SPAWN_ATTEMPTS
	f	Lxo;	o	OMINOUS_BANNER_PATTERN_NAME
	f	Ljava/lang/String;	p	RAIDERS_REMAINING
	f	I	c	VILLAGE_RADIUS_BUFFER
	f	I	q	POST_RAID_TICK_LIMIT
	f	I	r	DEFAULT_PRE_RAID_TICKS
	f	I	d	MAX_NO_ACTION_TIME
	f	I	e	MAX_CELEBRATION_TICKS
	f	I	s	OUTSIDE_RAID_BOUNDS_TIMEOUT
	f	I	f	TICKS_PER_DAY
	f	I	g	DEFAULT_MAX_RAID_OMEN_LEVEL
	f	I	t	LOW_MOB_THRESHOLD
	f	Lxo;	u	RAID_NAME_COMPONENT
	f	Lxo;	v	RAID_BAR_VICTORY_COMPONENT
	f	Lxo;	w	RAID_BAR_DEFEAT_COMPONENT
	f	I	x	HERO_OF_THE_VILLAGE_DURATION
	f	I	y	VALID_RAID_RADIUS
	f	I	h	VALID_RAID_RADIUS_SQR
	f	I	i	RAID_REMOVAL_THRESHOLD_SQR
	f	Ljava/util/Map;	z	groupToLeaderMap
	f	Ljava/util/Map;	A	groupRaiderMap
	f	Ljava/util/Set;	B	heroesOfTheVillage
	f	J	C	ticksActive
	f	Ljb;	D	center
	f	Z	E	started
	f	F	F	totalHealth
	f	I	G	raidOmenLevel
	f	Z	H	active
	f	I	I	groupsSpawned
	f	Latx;	J	raidEvent
	f	I	K	postRaidTicks
	f	I	L	raidCooldownTicks
	f	Lbck;	M	random
	f	I	N	numGroups
	f	Lcwj$a;	O	status
	f	I	P	celebrationTicks
	f	Ljava/util/Optional;	Q	waveSpawnPos
	m	(Ljb;Lbxg;)V	<init>	<init>
	m	(ZZJIIIIFILcwj$a;Ljb;Ljava/util/Set;)V	<init>	<init>
	m	()Z	a	isOver
	m	()Z	b	isBetweenWaves
	m	()Z	c	hasFirstWaveSpawned
	m	()Z	d	isStopped
	m	()Z	e	isVictory
	m	()Z	f	isLoss
	m	()F	g	getTotalHealth
	m	()Ljava/util/Set;	h	getAllRaiders
	m	()Z	i	isStarted
	m	()I	j	getGroupsSpawned
	m	()Ljava/util/function/Predicate;	t	validPlayer
	m	(Laub;)V	b	updatePlayers
	m	()I	k	getMaxRaidOmenLevel
	m	()I	l	getRaidOmenLevel
	m	(I)V	a	setRaidOmenLevel
	m	(Lauc;)Z	a	absorbRaidOmen
	m	()V	m	stop
	m	(Laub;)V	a	tick
	m	(Laub;)V	c	moveRaidCenterToNearbyVillageSection
	m	(Laub;)Ljava/util/Optional;	d	getValidSpawnPos
	m	()Z	u	hasMoreWaves
	m	()Z	v	isFinalWave
	m	()Z	w	hasBonusWave
	m	()Z	x	hasSpawnedBonusWave
	m	()Z	y	shouldSpawnBonusGroup
	m	(Laub;)V	e	updateRaiders
	m	(Laub;Ljb;)V	a	playSound
	m	(Laub;Ljb;)V	b	spawnGroup
	m	(Laub;ILcwk;Ljb;Z)V	a	joinRaid
	m	()V	n	updateBossbar
	m	()F	o	getHealthOfLivingRaiders
	m	()Z	z	shouldSpawnGroup
	m	()I	p	getTotalRaidersAlive
	m	(Laub;Lcwk;Z)V	a	removeFromRaid
	m	(Laub;)V	f	setDirty
	m	(Ljm;)Ldcv;	a	getOminousBannerInstance
	m	(I)Lcwk;	b	getLeader
	m	(Laub;I)Ljb;	a	findRandomSpawnPos
	m	(Laub;ILcwk;)Z	a	addWaveMob
	m	(Laub;ILcwk;Z)Z	a	addWaveMob
	m	(ILcwk;)V	a	setLeader
	m	(I)V	c	removeLeader
	m	()Ljb;	q	getCenter
	m	(Ljb;)V	a	setCenter
	m	(Lcwj$b;IZ)I	a	getDefaultNumSpawns
	m	(Lcwj$b;Lbck;ILbxh;Z)I	a	getPotentialBonusSpawns
	m	()Z	r	isActive
	m	(Lbxg;)I	a	getNumGroups
	m	()F	s	getEnchantOdds
	m	(Lbzm;)V	a	addHeroOfTheVillage
	m	(Ljava/lang/Integer;)Ljava/util/Set;	a	lambda$addWaveMob$16
	m	(Ljb;)D	b	lambda$moveRaidCenterToNearbyVillageSection$15
	m	(Laub;)Ljb;	g	lambda$tick$14
	m	(Lauc;)Z	b	lambda$validPlayer$13
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$12
	m	(Lcwj;)Ljava/util/Set;	a	lambda$static$11
	m	(Lcwj;)Ljb;	b	lambda$static$10
	m	(Lcwj;)Lcwj$a;	c	lambda$static$9
	m	(Lcwj;)Ljava/lang/Integer;	d	lambda$static$8
	m	(Lcwj;)Ljava/lang/Float;	e	lambda$static$7
	m	(Lcwj;)Ljava/lang/Integer;	f	lambda$static$6
	m	(Lcwj;)Ljava/lang/Integer;	g	lambda$static$5
	m	(Lcwj;)Ljava/lang/Integer;	h	lambda$static$4
	m	(Lcwj;)Ljava/lang/Integer;	i	lambda$static$3
	m	(Lcwj;)Ljava/lang/Long;	j	lambda$static$2
	m	(Lcwj;)Ljava/lang/Boolean;	k	lambda$static$1
	m	(Lcwj;)Ljava/lang/Boolean;	l	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cwj$1	net/minecraft/world/entity/raid/Raid$1
	f	[I	a	$SwitchMap$net$minecraft$world$Difficulty
	m	()V	<clinit>	<clinit>
c	cwj$a	net/minecraft/world/entity/raid/Raid$RaidStatus
	f	Lcwj$a;	a	ONGOING
	f	Lcwj$a;	b	VICTORY
	f	Lcwj$a;	c	LOSS
	f	Lcwj$a;	d	STOPPED
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Lcwj$a;	g	$VALUES
	m	()[Lcwj$a;	values	values
	m	(Ljava/lang/String;)Lcwj$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lcwj$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cwj$b	net/minecraft/world/entity/raid/Raid$RaiderType
	f	Lcwj$b;	a	VINDICATOR
	f	Lcwj$b;	b	EVOKER
	f	Lcwj$b;	c	PILLAGER
	f	Lcwj$b;	d	WITCH
	f	Lcwj$b;	e	RAVAGER
	f	[Lcwj$b;	f	VALUES
	f	Lbzv;	g	entityType
	f	[I	h	spawnsPerWaveBeforeBonus
	f	[Lcwj$b;	i	$VALUES
	m	()[Lcwj$b;	values	values
	m	(Ljava/lang/String;)Lcwj$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILbzv;[I)V	<init>	<init>
	m	()[Lcwj$b;	a	$values
	m	()V	<clinit>	<clinit>
c	cwk	net/minecraft/world/entity/raid/Raider
	f	Lalh;	c	IS_CELEBRATING
	f	Ljava/util/function/Predicate;	a	ALLOWED_ITEMS
	f	I	b	DEFAULT_WAVE
	f	Z	e	DEFAULT_CAN_JOIN_RAID
	f	Lcwj;	d	raid
	f	I	f	wave
	f	Z	ck	canJoinRaid
	f	I	cl	ticksOutsideRaid
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()V	H	registerGoals
	m	(Lall$a;)V	a	defineSynchedData
	m	(Laub;IZ)V	a	applyRaidBuffs
	m	()Z	gT	canJoinRaid
	m	(Z)V	A	setCanJoinRaid
	m	()V	e_	aiStep
	m	()V	gL	updateNoActionTime
	m	(Lbyb;)V	a	die
	m	()Z	gN	canJoinPatrol
	m	(Lcwj;)V	a	setCurrentRaid
	m	()Lcwj;	gU	getCurrentRaid
	m	()Z	gV	isCaptain
	m	()Z	gW	hasRaid
	m	()Z	gX	hasActiveRaid
	m	(I)V	b	setWave
	m	()I	gY	getWave
	m	()Z	gZ	isCelebrating
	m	(Z)V	B	setCelebrating
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lcqz;)V	a	pickUpItem
	m	(D)Z	h	removeWhenFarAway
	m	()Z	af	requiresCustomPersistence
	m	()I	ha	getTicksOutsideRaid
	m	(I)V	c	setTicksOutsideRaid
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Ldnl;Lbxh;Lbzu;Lcbe;)Lcbe;	a	finalizeSpawn
	m	()Layy;	ag_	getCelebrateSound
	m	(Laub;Ljava/lang/Integer;)V	a	lambda$readAdditionalSaveData$2
	m	(Lfdc;I)V	a	lambda$addAdditionalSaveData$1
	m	(Lcqz;)Z	b	lambda$static$0
	m	(Lcwk;)Lbck;	a	access$000
	m	(Lcwk;)Lbck;	b	access$100
	m	(Lcwk;)Z	c	access$200
	m	(Lcwk;)Lbck;	d	access$300
	m	(Lcwk;)Lbck;	e	access$400
	m	()V	<clinit>	<clinit>
c	cwk$a	net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal
	f	Lcwk;	b	mob
	f	F	c	hostileRadiusSqr
	f	Lclc;	a	shoutTargeting
	m	(Lcrc;F)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()Z	X_	requiresUpdateEveryTick
	m	()V	a	tick
c	cwk$b	net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal
	f	Lcwk;	b	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2LongOpenHashMap;	c	unreachableBannerCache
	f	Lfaz;	d	pathToBanner
	f	Lcqz;	e	pursuedBannerItemEntity
	f	Lcwk;	a	this$0
	m	(Lcwk;Lcwk;)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	c	canContinueToUse
	m	()Z	h	cannotPickUpBanner
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cwk$c	net/minecraft/world/entity/raid/Raider$RaiderCelebration
	f	Lcwk;	b	mob
	f	Lcwk;	a	this$0
	m	(Lcwk;Lcwk;)V	<init>	<init>
	m	()Z	b	canUse
	m	()V	d	start
	m	()V	e	stop
	m	()V	a	tick
c	cwk$d	net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal
	f	Lcwk;	a	raider
	f	D	b	speedModifier
	f	Ljb;	c	poiPos
	f	Ljava/util/List;	d	visited
	f	I	e	distanceToPoi
	f	Z	f	stuck
	m	(Lcwk;DI)V	<init>	<init>
	m	()Z	b	canUse
	m	()Z	h	isValidRaid
	m	()Z	i	hasSuitablePoi
	m	()Z	c	canContinueToUse
	m	()V	e	stop
	m	()V	d	start
	m	()V	a	tick
	m	(Ljb;)Z	a	hasNotVisited
	m	()V	k	updateVisited
	m	(Ljl;)Z	a	lambda$hasSuitablePoi$0
c	cwl	net/minecraft/world/entity/raid/Raids
	f	Ljava/lang/String;	d	RAID_FILE_ID
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfby;	b	TYPE
	f	Lfby;	c	TYPE_END
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	e	raidMap
	f	I	f	nextId
	f	I	g	tick
	m	(Ljl;)Lfby;	a	getType
	m	()V	<init>	<init>
	m	(Ljava/util/List;II)V	<init>	<init>
	m	(I)Lcwj;	a	get
	m	(Lcwj;)Ljava/util/OptionalInt;	a	getId
	m	(Laub;)V	a	tick
	m	(Lcwk;)Z	a	canJoinRaid
	m	(Lauc;Ljb;)Lcwj;	a	createOrExtendRaid
	m	(Laub;Ljb;)Lcwj;	a	getOrCreateRaid
	m	(Lui;)Lcwl;	a	load
	m	()I	a	getUniqueId
	m	(Ljb;I)Lcwj;	a	getNearbyRaid
	m	(Ljl;)Z	b	lambda$createOrExtendRaid$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lcwl;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lcwl;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lcwl;)Ljava/util/List;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cwl$a	net/minecraft/world/entity/raid/Raids$RaidWithId
	f	I	b	id
	f	Lcwj;	c	raid
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ILcwj;)V	<init>	<init>
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap$Entry;)Lcwl$a;	a	from
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	id
	m	()Lcwj;	b	raid
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cwm	net/minecraft/world/entity/raid/package-info
c	cwn	net/minecraft/world/entity/schedule/Activity
	f	Lcwn;	a	CORE
	f	Lcwn;	b	IDLE
	f	Lcwn;	c	WORK
	f	Lcwn;	d	PLAY
	f	Lcwn;	e	REST
	f	Lcwn;	f	MEET
	f	Lcwn;	g	PANIC
	f	Lcwn;	h	RAID
	f	Lcwn;	i	PRE_RAID
	f	Lcwn;	j	HIDE
	f	Lcwn;	k	FIGHT
	f	Lcwn;	l	CELEBRATE
	f	Lcwn;	m	ADMIRE_ITEM
	f	Lcwn;	n	AVOID
	f	Lcwn;	o	RIDE
	f	Lcwn;	p	PLAY_DEAD
	f	Lcwn;	q	LONG_JUMP
	f	Lcwn;	r	RAM
	f	Lcwn;	s	TONGUE
	f	Lcwn;	t	SWIM
	f	Lcwn;	u	LAY_SPAWN
	f	Lcwn;	v	SNIFF
	f	Lcwn;	w	INVESTIGATE
	f	Lcwn;	x	ROAR
	f	Lcwn;	y	EMERGE
	f	Lcwn;	z	DIG
	f	Ljava/lang/String;	A	name
	f	I	B	hashCode
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lcwn;	a	register
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	cwo	net/minecraft/world/entity/schedule/Keyframe
	f	I	a	timeStamp
	f	F	b	value
	m	(IF)V	<init>	<init>
	m	()I	a	getTimeStamp
	m	()F	b	getValue
c	cwp	net/minecraft/world/entity/schedule/Schedule
	f	I	a	WORK_START_TIME
	f	I	b	TOTAL_WORK_TIME
	f	Lcwp;	c	EMPTY
	f	Lcwp;	d	SIMPLE
	f	Lcwp;	e	VILLAGER_BABY
	f	Lcwp;	f	VILLAGER_DEFAULT
	f	Ljava/util/Map;	g	timelines
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lcwq;	a	register
	m	(Lcwn;)V	a	ensureTimelineExistsFor
	m	(Lcwn;)Lcwr;	b	getTimelineFor
	m	(Lcwn;)Ljava/util/List;	c	getAllTimelinesExceptFor
	m	(I)Lcwn;	a	getActivityAt
	m	(ILjava/util/Map$Entry;)D	a	lambda$getActivityAt$1
	m	(Lcwn;Ljava/util/Map$Entry;)Z	a	lambda$getAllTimelinesExceptFor$0
	m	()V	<clinit>	<clinit>
c	cwq	net/minecraft/world/entity/schedule/ScheduleBuilder
	f	Lcwp;	a	schedule
	f	Ljava/util/List;	b	transitions
	m	(Lcwp;)V	<init>	<init>
	m	(ILcwn;)Lcwq;	a	changeActivityAt
	m	()Lcwp;	a	build
	m	(Lcwq$a;)V	a	lambda$build$1
	m	(Lcwq$a;Lcwr;)V	a	lambda$build$0
c	cwq$a	net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition
	f	I	a	time
	f	Lcwn;	b	activity
	m	(ILcwn;)V	<init>	<init>
	m	()I	a	getTime
	m	()Lcwn;	b	getActivity
c	cwr	net/minecraft/world/entity/schedule/Timeline
	f	Ljava/util/List;	a	keyframes
	f	I	b	previousIndex
	m	()V	<init>	<init>
	m	()Lcom/google/common/collect/ImmutableList;	a	getKeyframes
	m	(IF)Lcwr;	a	addKeyframe
	m	(Ljava/util/Collection;)Lcwr;	a	addKeyframes
	m	()V	b	sortAndDeduplicateKeyframes
	m	(I)F	a	getValueAt
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectSortedMap;Lcwo;)V	a	lambda$sortAndDeduplicateKeyframes$0
c	cws	net/minecraft/world/entity/schedule/package-info
c	cwt	net/minecraft/world/entity/variant/BiomeCheck
	f	Ljp;	c	requiredBiomes
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Ljp;)V	<init>	<init>
	m	(Lcwz;)Z	a	test
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	requiredBiomes
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cwu	net/minecraft/world/entity/variant/ModelAndTexture
	f	Ljava/lang/Object;	a	model
	f	Ljc;	b	asset
	m	(Ljava/lang/Object;Lame;)V	<init>	<init>
	m	(Ljava/lang/Object;Ljc;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lzm;)Lzm;	a	streamCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	model
	m	()Ljc;	b	asset
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	cwv	net/minecraft/world/entity/variant/MoonBrightnessCheck
	f	Lcx$c;	c	range
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Lcx$c;)V	<init>	<init>
	m	(Lcwz;)Z	a	test
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcx$c;	b	range
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cww	net/minecraft/world/entity/variant/PriorityProvider
	m	()Ljava/util/List;	a	selectors
	m	(Ljava/util/stream/Stream;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/util/stream/Stream;	a	select
	m	(Ljava/util/stream/Stream;Ljava/util/function/Function;Lbck;Ljava/lang/Object;)Ljava/util/Optional;	a	pick
	m	(Lcww$b;I)Ljava/util/List;	a	single
	m	(I)Ljava/util/List;	a	alwaysTrue
	m	(Ljava/util/function/Function;Ljava/util/List;Ljava/lang/Object;)V	a	lambda$select$0
c	cww$a	net/minecraft/world/entity/variant/PriorityProvider$Selector
	f	Ljava/util/Optional;	a	condition
	f	I	b	priority
	m	(Lcww$b;I)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Ljava/util/Optional;I)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	condition
	m	()I	b	priority
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	cww$b	net/minecraft/world/entity/variant/PriorityProvider$SelectorCondition
	m	()Lcww$b;	alwaysTrue	alwaysTrue
	m	(Ljava/lang/Object;)Z	a	lambda$alwaysTrue$0
c	cww$c	net/minecraft/world/entity/variant/PriorityProvider$UnpackedEntry
	f	Ljava/lang/Object;	b	entry
	f	I	c	priority
	f	Lcww$b;	d	condition
	f	Ljava/util/Comparator;	a	HIGHEST_PRIORITY_FIRST
	m	(Ljava/lang/Object;ILcww$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	entry
	m	()I	b	priority
	m	()Lcww$b;	c	condition
	m	()V	<clinit>	<clinit>
c	cwx	net/minecraft/world/entity/variant/SpawnCondition
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cwy	net/minecraft/world/entity/variant/SpawnConditions
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	cwz	net/minecraft/world/entity/variant/SpawnContext
	f	Ljb;	a	pos
	f	Ldnl;	b	level
	f	Ljl;	c	biome
	m	(Ljb;Ldnl;Ljl;)V	<init>	<init>
	m	(Ldnl;Ljb;)Lcwz;	a	create
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ldnl;	b	level
	m	()Ljl;	c	biome
c	cxa	net/minecraft/world/entity/variant/SpawnPrioritySelectors
	f	Ljava/util/List;	c	selectors
	f	Lcxa;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lcwx;I)Lcxa;	a	single
	m	(I)Lcxa;	a	fallback
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	selectors
	m	()V	<clinit>	<clinit>
c	cxb	net/minecraft/world/entity/variant/StructureCheck
	f	Ljp;	c	requiredStructures
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Ljp;)V	<init>	<init>
	m	(Lcwz;)Z	a	test
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	requiredStructures
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cxc	net/minecraft/world/entity/variant/VariantUtils
	f	Ljava/lang/String;	a	TAG_VARIANT
	m	()V	<init>	<init>
	m	(Ljz;Lamd;)Ljl;	a	getDefaultOrAny
	m	(Ljz;Lamd;)Ljl;	b	getAny
	m	(Lfdc;Ljl;)V	a	writeVariant
	m	(Lfda;Lamd;)Ljava/util/Optional;	a	readVariant
	m	(Lcwz;Lamd;)Ljava/util/Optional;	a	selectVariantToSpawn
	m	(Lamd;Lame;)Lamd;	a	lambda$readVariant$1
	m	(Lfdc;Lamd;)V	a	lambda$writeVariant$0
c	cxd	net/minecraft/world/entity/variant/package-info
c	cxe	net/minecraft/world/entity/vehicle/AbstractBoat
	f	Lalh;	r	DATA_ID_PADDLE_LEFT
	f	Lalh;	s	DATA_ID_PADDLE_RIGHT
	f	Lalh;	t	DATA_ID_BUBBLE_TIME
	f	I	a	PADDLE_LEFT
	f	I	b	PADDLE_RIGHT
	f	I	u	TIME_TO_EJECT
	f	F	aM	PADDLE_SPEED
	f	D	c	PADDLE_SOUND_TIME
	f	I	d	BUBBLE_TIME
	f	[F	aN	paddlePositions
	f	F	aO	outOfControlTicks
	f	F	aP	deltaRotation
	f	Lcah;	aQ	interpolation
	f	Z	aR	inputLeft
	f	Z	aS	inputRight
	f	Z	aT	inputUp
	f	Z	aU	inputDown
	f	D	aV	waterLevel
	f	F	aW	landFriction
	f	Lcxe$a;	aX	status
	f	Lcxe$a;	aY	oldStatus
	f	D	aZ	lastYd
	f	Z	ba	isAboveBubbleColumn
	f	Z	bb	bubbleColumnDirectionIsDown
	f	F	bc	bubbleMultiplier
	f	F	bd	bubbleAngle
	f	F	be	bubbleAngleO
	f	Lcak$a;	bf	leashData
	f	Ljava/util/function/Supplier;	bg	dropItem
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(DDD)V	p	setInitialPos
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lbzm;)Z	i	canCollideWith
	m	(Lbzm;Lbzm;)Z	a	canVehicleCollide
	m	(Lbzm;)Z	j	canBeCollidedWith
	m	()Z	bL	isPushable
	m	(Ljh$a;Lm$a;)Lfis;	a	getRelativePortalPosition
	m	(Lbzp;)D	b	rideHeight
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	(ZLjb;)V	a	onAboveBubbleColumn
	m	(Lbzm;)V	h	push
	m	(F)V	q	animateHurt
	m	()Z	bK	isPickable
	m	()Lcah;	l_	getInterpolation
	m	()Ljh;	cT	getMotionDirection
	m	()V	g	tick
	m	()V	K	tickBubbleColumn
	m	()Layy;	f	getPaddleSound
	m	(ZZ)V	a	setPaddleState
	m	(IF)F	a	getRowingTime
	m	()Lcak$a;	T_	getLeashData
	m	(Lcak$a;)V	a	setLeashData
	m	()Lfis;	F	getLeashOffset
	m	()Z	D	supportQuadLeash
	m	()[Lfis;	E	getQuadLeashOffsets
	m	()Lcxe$a;	L	getStatus
	m	()F	i	getWaterLevelAbove
	m	()F	l	getGroundFriction
	m	()Z	N	checkInWater
	m	()Lcxe$a;	O	isUnderwater
	m	()D	bg	getDefaultGravity
	m	()V	P	floatBoat
	m	()V	Q	controlBoat
	m	()F	m	getSinglePassengerXOffset
	m	(Lbzm;)Z	C	hasEnoughSpaceFor
	m	(Lbzm;Lbzm$b;)V	a	positionRider
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	(Lbzm;)V	D	clampRotation
	m	(Lbzm;)V	l	onPassengerTurned
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lbzm$e;)V	a	remove
	m	(DZLeeb;Ljb;)V	a	checkFallDamage
	m	(I)Z	c	getPaddleState
	m	(I)V	m	setBubbleTime
	m	()I	R	getBubbleTime
	m	(F)F	b	getBubbleAngle
	m	(Lbzm;)Z	s	canAddPassenger
	m	()I	n	getMaxPassengers
	m	()Lcam;	cY	getControllingPassenger
	m	(ZZZZ)V	a	setInput
	m	()Z	bq	isUnderWater
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(Lbzm;)Z	E	lambda$tickBubbleColumn$0
	m	()V	<clinit>	<clinit>
c	cxe$a	net/minecraft/world/entity/vehicle/AbstractBoat$Status
	f	Lcxe$a;	a	IN_WATER
	f	Lcxe$a;	b	UNDER_WATER
	f	Lcxe$a;	c	UNDER_FLOWING_WATER
	f	Lcxe$a;	d	ON_LAND
	f	Lcxe$a;	e	IN_AIR
	f	[Lcxe$a;	f	$VALUES
	m	()[Lcxe$a;	values	values
	m	(Ljava/lang/String;)Lcxe$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcxe$a;	a	$values
	m	()V	<clinit>	<clinit>
c	cxf	net/minecraft/world/entity/vehicle/AbstractChestBoat
	f	I	r	CONTAINER_SIZE
	f	Lju;	s	itemStacks
	f	Lamd;	t	lootTable
	f	J	u	lootTableSeed
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	()F	m	getSinglePassengerXOffset
	m	()I	n	getMaxPassengers
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Laub;Lbyb;)V	a	destroy
	m	(Lbzm$e;)V	a	remove
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lcut;)V	b	openCustomInventoryScreen
	m	()V	a	clearContent
	m	()I	b	getContainerSize
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(I)Lcbd;	a_	getSlot
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	(Lcut;)V	g	unpackLootTable
	m	()Lamd;	q	getContainerLootTable
	m	(Lamd;)V	a	setContainerLootTable
	m	()J	s	getContainerLootTableSeed
	m	(J)V	a	setContainerLootTableSeed
	m	()Lju;	t	getItemStacks
	m	()V	H	clearItemStacks
	m	(Lcut;)V	c	stopOpen
c	cxg	net/minecraft/world/entity/vehicle/AbstractMinecart
	f	Lfis;	b	LOWERED_PASSENGER_ATTACHMENT
	f	Lalh;	c	DATA_ID_CUSTOM_DISPLAY_BLOCK
	f	Lalh;	d	DATA_ID_DISPLAY_OFFSET
	f	Lcom/google/common/collect/ImmutableMap;	h	POSE_DISMOUNT_HEIGHTS
	f	F	a	WATER_SLOWDOWN_FACTOR
	f	Z	i	DEFAULT_FLIPPED_ROTATION
	f	Z	j	onRails
	f	Z	k	flipped
	f	Lcxo;	l	behavior
	f	Ljava/util/Map;	m	EXITS
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbzv;Ldmu;DDD)V	<init>	<init>
	m	(DDD)V	p	setInitialPos
	m	(Ldmu;DDDLbzv;Lbzu;Ldcv;Lcut;)Lcxg;	a	createMinecart
	m	()Lcxo;	f	getBehavior
	m	()Lbzm$d;	bj	getMovementEmission
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lbzm;)Z	i	canCollideWith
	m	()Z	bL	isPushable
	m	(Ljh$a;Lm$a;)Lfis;	a	getRelativePortalPosition
	m	(Lbzm;Lbzp;F)Lfis;	a	getPassengerAttachmentPoint
	m	(Lcam;)Lfis;	b	getDismountLocationForPassenger
	m	()F	aW	getBlockSpeedFactor
	m	(F)V	q	animateHurt
	m	()Z	bK	isPickable
	m	(Leff;)Lcom/mojang/datafixers/util/Pair;	a	exits
	m	()Ljh;	cT	getMotionDirection
	m	()D	bg	getDefaultGravity
	m	()V	g	tick
	m	()Z	i	isFirstTick
	m	()Ljb;	l	getCurrentBlockPosOrRailBelow
	m	(Laub;)D	a	getMaxSpeed
	m	(IIIZ)V	a	activateMinecart
	m	(IDDDDD)V	a	lerpPositionAndRotationStep
	m	()V	bi	applyGravity
	m	()V	ay	reapplyPosition
	m	()Z	bt	updateInWaterStateAndDoFluidPushing
	m	()Lfis;	ae	getKnownMovement
	m	()Lcah;	l_	getInterpolation
	m	(Lacr;)V	a	recreateFromPacket
	m	(DDD)V	k	lerpMotion
	m	(Laub;)V	b	moveAlongTrack
	m	(Laub;)V	e	comeOffTrack
	m	(Ljb;Leff;D)D	a	makeStepAlongTrack
	m	(Lcaq;Lfis;)V	a	move
	m	()V	aL	applyEffectsFromBlocks
	m	()Z	ct	isOnRails
	m	(Z)V	a	setOnRails
	m	()Z	m	isFlipped
	m	(Z)V	b	setFlipped
	m	(Ljb;)Lfis;	a	getRedstoneDirection
	m	(Ljb;)Z	b	isRedstoneConductor
	m	(Lfis;)Lfis;	a	applyNaturalSlowdown
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lbzm;)V	h	push
	m	(Lcxg;DD)V	a	pushOtherMinecart
	m	()Leeb;	n	getDisplayBlockState
	m	()Ljava/util/Optional;	z	getCustomDisplayBlockState
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()I	v	getDisplayOffset
	m	()I	w	getDefaultDisplayOffset
	m	(Ljava/util/Optional;)V	a	setCustomDisplayBlockState
	m	(I)V	c	setDisplayOffset
	m	(Ldmu;)Z	b	useExperimentalMovement
	m	()Ldcv;	dM	getPickResult
	m	()Z	x	isRideable
	m	()Z	y	isFurnace
	m	(Lfdc;Leeb;)V	a	lambda$addAdditionalSaveData$3
	m	()Lcom/google/common/collect/ImmutableMap;	A	lambda$static$2
	m	(Ljb;)Lfjm;	c	lambda$getDismountLocationForPassenger$1
	m	(Ljb$a;)Lfjm;	a	lambda$getDismountLocationForPassenger$0
	m	()V	<clinit>	<clinit>
c	cxh	net/minecraft/world/entity/vehicle/AbstractMinecartContainer
	f	Lju;	b	itemStacks
	f	Lamd;	c	lootTable
	f	J	d	lootTableSeed
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Laub;Lbyb;)V	a	destroy
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(I)Lcbd;	a_	getSlot
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	(Lbzm$e;)V	a	remove
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lfis;)Lfis;	a	applyNaturalSlowdown
	m	()V	a	clearContent
	m	(Lamd;J)V	a	setLootTable
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	(ILcus;)Lcym;	a	createMenu
	m	()Lamd;	q	getContainerLootTable
	m	(Lamd;)V	a	setContainerLootTable
	m	()J	s	getContainerLootTableSeed
	m	(J)V	a	setContainerLootTableSeed
	m	()Lju;	t	getItemStacks
	m	()V	H	clearItemStacks
c	cxi	net/minecraft/world/entity/vehicle/Boat
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lbzp;)D	b	rideHeight
c	cxj	net/minecraft/world/entity/vehicle/ChestBoat
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lbzp;)D	b	rideHeight
c	cxk	net/minecraft/world/entity/vehicle/ChestRaft
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lbzp;)D	b	rideHeight
c	cxl	net/minecraft/world/entity/vehicle/ContainerEntity
	m	()Lfis;	dv	position
	m	()Lfin;	cV	getBoundingBox
	m	()Lamd;	q	getContainerLootTable
	m	(Lamd;)V	a	setContainerLootTable
	m	()J	s	getContainerLootTableSeed
	m	(J)V	a	setContainerLootTableSeed
	m	()Lju;	t	getItemStacks
	m	()V	H	clearItemStacks
	m	()Ldmu;	ai	level
	m	()Z	dU	isRemoved
	m	()Z	c	isEmpty
	m	(Lfdc;)V	c_	addChestVehicleSaveData
	m	(Lfda;)V	b_	readChestVehicleSaveData
	m	(Lbyb;Laub;Lbzm;)V	a	chestVehicleDestroyed
	m	(Lcut;)Lbxj;	b_	interactWithContainerVehicle
	m	(Lcut;)V	c_	unpackChestVehicleLootTable
	m	()V	ak_	clearChestVehicleContent
	m	()Z	h	isChestVehicleEmpty
	m	(I)Ldcv;	f_	removeChestVehicleItemNoUpdate
	m	(I)Ldcv;	g_	getChestVehicleItem
	m	(II)Ldcv;	b	removeChestVehicleItem
	m	(ILdcv;)V	c	setChestVehicleItem
	m	(I)Lcbd;	h_	getChestVehicleSlot
	m	(Lcut;)Z	d_	isChestVehicleStillValid
c	cxl$1	net/minecraft/world/entity/vehicle/ContainerEntity$1
	f	I	b	val$slot
	f	Lcxl;	c	this$0
	m	(Lcxl;I)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cxm	net/minecraft/world/entity/vehicle/DismountHelper
	m	()V	<init>	<init>
	m	(Ljh;)[[I	a	offsetsForDirection
	m	(D)Z	a	isBlockFloorValid
	m	(Ldmc;Lcam;Lfin;)Z	a	canDismountTo
	m	(Ldmc;Lfis;Lcam;Lcay;)Z	a	canDismountTo
	m	(Ldly;Ljb;)Lfjm;	a	nonClimbableShape
	m	(Ljb;ILjava/util/function/Function;)D	a	findCeilingFrom
	m	(Lbzv;Ldmc;Ljb;Z)Lfis;	a	findSafeDismountLocation
	m	(Ldmc;Ljb;)Lfjm;	a	lambda$findSafeDismountLocation$0
c	cxn	net/minecraft/world/entity/vehicle/Minecart
	f	F	b	rotationOffset
	f	F	c	playerRotationOffset
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(IIIZ)V	a	activateMinecart
	m	()Z	x	isRideable
	m	()V	g	tick
	m	(Lbzm;Lbzm$b;)V	a	positionRider
c	cxo	net/minecraft/world/entity/vehicle/MinecartBehavior
	f	Lcxg;	a	minecart
	m	(Lcxg;)V	<init>	<init>
	m	()Lcah;	a	getInterpolation
	m	(DDD)V	a	lerpMotion
	m	()V	b	tick
	m	()Ldmu;	c	level
	m	(Laub;)V	a	moveAlongTrack
	m	(Ljb;Leff;D)D	a	stepAlongTrack
	m	()Z	d	pushAndPickupEntities
	m	()Lfis;	e	getDeltaMovement
	m	(Lfis;)V	a	setDeltaMovement
	m	(DDD)V	b	setDeltaMovement
	m	()Lfis;	f	position
	m	()D	g	getX
	m	()D	h	getY
	m	()D	i	getZ
	m	(Lfis;)V	b	setPos
	m	(DDD)V	c	setPos
	m	()F	j	getXRot
	m	(F)V	a	setXRot
	m	()F	k	getYRot
	m	(F)V	b	setYRot
	m	()Ljh;	l	getMotionDirection
	m	(Lfis;)Lfis;	c	getKnownMovement
	m	(Laub;)D	b	getMaxSpeed
	m	()D	m	getSlowdownFactor
c	cxp	net/minecraft/world/entity/vehicle/MinecartChest
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	()I	b	getContainerSize
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()I	w	getDefaultDisplayOffset
	m	(ILcus;)Lcym;	a	createMenu
	m	(Lcut;)V	c	stopOpen
	m	(Lcut;Lbxi;)Lbxj;	a	interact
c	cxq	net/minecraft/world/entity/vehicle/MinecartCommandBlock
	f	Lalh;	b	DATA_ID_COMMAND_NAME
	f	Lalh;	c	DATA_ID_LAST_OUTPUT
	f	Ldlt;	d	commandBlock
	f	I	h	ACTIVATION_DELAY
	f	I	i	lastActivated
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(Lall$a;)V	a	defineSynchedData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()Ldlt;	e	getCommandBlock
	m	(IIIZ)V	a	activateMinecart
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lalh;)V	a	onSyncedDataUpdated
	m	()V	<clinit>	<clinit>
c	cxq$a	net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase
	f	Lcxq;	b	this$0
	m	(Lcxq;)V	<init>	<init>
	m	()Laub;	e	getLevel
	m	()V	f	onUpdated
	m	()Lfis;	g	getPosition
	m	()Lcxq;	h	getMinecart
	m	()Lek;	i	createCommandSourceStack
	m	()Z	j	isValid
c	cxr	net/minecraft/world/entity/vehicle/MinecartFurnace
	f	Lalh;	c	DATA_ID_FUEL
	f	I	d	FUEL_TICKS_PER_ITEM
	f	I	h	MAX_FUEL_TICKS
	f	S	i	DEFAULT_FUEL
	f	Lfis;	j	DEFAULT_PUSH
	f	I	k	fuel
	f	Lfis;	b	push
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Z	y	isFurnace
	m	(Lall$a;)V	a	defineSynchedData
	m	()V	g	tick
	m	(Laub;)D	a	getMaxSpeed
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(Lfis;)Lfis;	a	applyNaturalSlowdown
	m	(Lfis;)Lfis;	k	calculateNewPushAlong
	m	(Lcut;Lbxi;)Lbxj;	a	interact
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	()Z	e	hasFuel
	m	(Z)V	r	setHasFuel
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()V	<clinit>	<clinit>
c	cxs	net/minecraft/world/entity/vehicle/MinecartHopper
	f	Z	c	DEFAULT_ENABLED
	f	Z	d	enabled
	f	Z	h	consumedItemThisFrame
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()I	w	getDefaultDisplayOffset
	m	()I	b	getContainerSize
	m	(IIIZ)V	a	activateMinecart
	m	()Z	z	isEnabled
	m	(Z)V	r	setEnabled
	m	()D	A	getLevelX
	m	()D	B	getLevelY
	m	()D	C	getLevelZ
	m	()Z	D	isGridAligned
	m	()V	g	tick
	m	(Ljb;Leff;D)D	a	makeStepAlongTrack
	m	()V	F	tryConsumeItems
	m	()Z	E	suckInItems
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(ILcus;)Lcym;	a	createMenu
c	cxt	net/minecraft/world/entity/vehicle/MinecartSpawner
	f	Ldlu;	b	spawner
	f	Ljava/lang/Runnable;	c	ticker
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(Ldmu;)Ljava/lang/Runnable;	c	createTicker
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(B)V	b	handleEntityEvent
	m	()V	g	tick
	m	()Ldlu;	e	getSpawner
	m	(Ldmu;)V	d	lambda$createTicker$1
	m	(Ldmu;)V	e	lambda$createTicker$0
c	cxt$1	net/minecraft/world/entity/vehicle/MinecartSpawner$1
	f	Lcxt;	a	this$0
	m	(Lcxt;)V	<init>	<init>
	m	(Ldmu;Ljb;I)V	a	broadcastEvent
c	cxu	net/minecraft/world/entity/vehicle/MinecartTNT
	f	B	b	EVENT_PRIME
	f	Ljava/lang/String;	c	TAG_EXPLOSION_POWER
	f	Ljava/lang/String;	d	TAG_EXPLOSION_SPEED_FACTOR
	f	Ljava/lang/String;	h	TAG_FUSE
	f	F	i	DEFAULT_EXPLOSION_POWER_BASE
	f	F	j	DEFAULT_EXPLOSION_SPEED_FACTOR
	f	I	k	NO_FUSE
	f	Lbyb;	l	ignitionSource
	f	I	m	fuse
	f	F	n	explosionPowerBase
	f	F	o	explosionSpeedFactor
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	()Leeb;	u	getDefaultDisplayBlockState
	m	()V	g	tick
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Laub;Lbyb;)V	a	destroy
	m	()Ldcr;	p	getDropItem
	m	()Ldcv;	dM	getPickResult
	m	(D)V	h	explode
	m	(Lbyb;D)V	a	explode
	m	(DFLbyb;)Z	a	causeFallDamage
	m	(IIIZ)V	a	activateMinecart
	m	(B)V	b	handleEntityEvent
	m	(Lbyb;)V	a	primeFuse
	m	()I	e	getFuse
	m	()Z	q	isPrimed
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;F)F	a	getBlockExplosionResistance
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	(Lbyb;)Z	e	shouldSourceDestroy
	m	(Lbyb;)Z	f	damageSourceIgnitesTnt
c	cxv	net/minecraft/world/entity/vehicle/NewMinecartBehavior
	f	I	b	POS_ROT_LERP_TICKS
	f	D	c	ON_RAIL_Y_OFFSET
	f	D	d	OPPOSING_SLOPES_REST_AT_SPEED_THRESHOLD
	f	Lcxv$b;	i	cacheIndexAlpha
	f	I	j	cachedLerpDelay
	f	F	k	cachedPartialTick
	f	I	l	lerpDelay
	f	Ljava/util/List;	e	lerpSteps
	f	Ljava/util/List;	f	currentLerpSteps
	f	D	g	currentLerpStepsTotalWeight
	f	Lcxv$a;	h	oldLerp
	m	(Lcxg;)V	<init>	<init>
	m	()V	b	tick
	m	()V	p	lerpClientPositionAndRotation
	m	()V	n	setOldLerpValues
	m	()Z	o	cartHasPosRotLerp
	m	(F)F	c	getCartLerpXRot
	m	(F)F	d	getCartLerpYRot
	m	(F)Lfis;	e	getCartLerpPosition
	m	(F)Lfis;	f	getCartLerpMovements
	m	(F)Lcxv$b;	g	getCurrentLerpStep
	m	(Ljb;Leeb;Z)V	a	adjustToRails
	m	(FF)V	a	setRotation
	m	(Laub;)V	a	moveAlongTrack
	m	(Laub;Lfis;Lcxv$c;Ljb;Leeb;Leff;)Lfis;	a	calculateTrackSpeed
	m	(Lfis;Leff;)Lfis;	a	calculateSlopeSpeed
	m	(Lfis;)Lfis;	d	calculatePlayerInputSpeed
	m	(Lfis;Leeb;)Lfis;	a	calculateHaltTrackSpeed
	m	(Lfis;Ljb;Leeb;)Lfis;	a	calculateBoostTrackSpeed
	m	(Ljb;Leff;D)D	a	stepAlongTrack
	m	(Leff;Leff;)Z	a	restAtVShape
	m	(Laub;)D	b	getMaxSpeed
	m	(Lfis;Leff;)Z	b	isDecending
	m	()D	m	getSlowdownFactor
	m	()Z	d	pushAndPickupEntities
	m	(Lfin;)Z	a	pickupEntities
	m	(Lfin;)Z	b	pushEntities
c	cxv$1	net/minecraft/world/entity/vehicle/NewMinecartBehavior$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	m	()V	<clinit>	<clinit>
c	cxv$a	net/minecraft/world/entity/vehicle/NewMinecartBehavior$MinecartStep
	f	Lfis;	c	position
	f	Lfis;	d	movement
	f	F	e	yRot
	f	F	f	xRot
	f	F	g	weight
	f	Lzm;	a	STREAM_CODEC
	f	Lcxv$a;	b	ZERO
	m	(Lfis;Lfis;FFF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfis;	a	position
	m	()Lfis;	b	movement
	m	()F	c	yRot
	m	()F	d	xRot
	m	()F	e	weight
	m	()V	<clinit>	<clinit>
c	cxv$b	net/minecraft/world/entity/vehicle/NewMinecartBehavior$StepPartialTicks
	f	F	a	partialTicksInStep
	f	Lcxv$a;	b	currentStep
	f	Lcxv$a;	c	previousStep
	m	(FLcxv$a;Lcxv$a;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	partialTicksInStep
	m	()Lcxv$a;	b	currentStep
	m	()Lcxv$a;	c	previousStep
c	cxv$c	net/minecraft/world/entity/vehicle/NewMinecartBehavior$TrackIteration
	f	D	a	movementLeft
	f	Z	b	firstIteration
	f	Z	c	hasGainedSlopeSpeed
	f	Z	d	hasHalted
	f	Z	e	hasBoosted
	m	()V	<init>	<init>
	m	()Z	a	shouldIterate
c	cxw	net/minecraft/world/entity/vehicle/OldMinecartBehavior
	f	D	b	MINECART_RIDABLE_THRESHOLD
	f	D	c	MAX_SPEED_IN_WATER
	f	D	d	MAX_SPEED_ON_LAND
	f	D	e	ABSOLUTE_MAX_SPEED
	f	Lcah;	f	interpolation
	f	Lfis;	g	targetDeltaMovement
	m	(Lcxg;)V	<init>	<init>
	m	()Lcah;	a	getInterpolation
	m	(Lcah;)V	a	onInterpolation
	m	(DDD)V	a	lerpMotion
	m	()V	b	tick
	m	(Laub;)V	a	moveAlongTrack
	m	(DDDD)Lfis;	a	getPosOffs
	m	(DDD)Lfis;	d	getPos
	m	(Ljb;Leff;D)D	a	stepAlongTrack
	m	()Z	d	pushAndPickupEntities
	m	()Ljh;	l	getMotionDirection
	m	(Lfis;)Lfis;	c	getKnownMovement
	m	(Laub;)D	b	getMaxSpeed
	m	()D	m	getSlowdownFactor
c	cxw$1	net/minecraft/world/entity/vehicle/OldMinecartBehavior$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	m	()V	<clinit>	<clinit>
c	cxx	net/minecraft/world/entity/vehicle/Raft
	m	(Lbzv;Ldmu;Ljava/util/function/Supplier;)V	<init>	<init>
	m	(Lbzp;)D	b	rideHeight
c	cxy	net/minecraft/world/entity/vehicle/VehicleEntity
	f	Lalh;	e	DATA_ID_HURT
	f	Lalh;	f	DATA_ID_HURTDIR
	f	Lalh;	g	DATA_ID_DAMAGE
	m	(Lbzv;Ldmu;)V	<init>	<init>
	m	(Lbyb;)Z	b	hurtClient
	m	(Laub;Lbyb;F)Z	a	hurtServer
	m	(Lbyb;)Z	e	shouldSourceDestroy
	m	(Ldmn;)Z	a	ignoreExplosion
	m	(Laub;Ldcr;)V	a	destroy
	m	(Lall$a;)V	a	defineSynchedData
	m	(I)V	d	setHurtTime
	m	(I)V	l	setHurtDir
	m	(F)V	a	setDamage
	m	()F	G	getDamage
	m	()I	I	getHurtTime
	m	()I	J	getHurtDir
	m	(Laub;Lbyb;)V	a	destroy
	m	()I	ca	getDimensionChangingDelay
	m	()Ldcr;	p	getDropItem
	m	()V	<clinit>	<clinit>
c	cxz	net/minecraft/world/entity/vehicle/package-info
c	cya	net/minecraft/world/flag/FeatureElement
	f	Ljava/util/Set;	bW	FILTERED_REGISTRIES
	m	()Lcyd;	k	requiredFeatures
	m	(Lcyd;)Z	a	isEnabled
	m	()V	<clinit>	<clinit>
c	cyb	net/minecraft/world/flag/FeatureFlag
	f	Lcye;	a	universe
	f	J	b	mask
	m	(Lcye;I)V	<init>	<init>
c	cyc	net/minecraft/world/flag/FeatureFlagRegistry
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcye;	b	universe
	f	Ljava/util/Map;	c	names
	f	Lcyd;	d	allFlags
	m	(Lcye;Lcyd;Ljava/util/Map;)V	<init>	<init>
	m	(Lcyd;)Z	a	isSubset
	m	()Lcyd;	a	allFlags
	m	(Ljava/lang/Iterable;)Lcyd;	a	fromNames
	m	([Lcyb;)Lcyd;	a	subset
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lcyd;	a	fromNames
	m	(Lcyd;)Ljava/util/Set;	b	toNames
	m	()Lcom/mojang/serialization/Codec;	b	codec
	m	(Lcyd;)Ljava/util/List;	c	lambda$codec$4
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$3
	m	(Ljava/util/Set;)Ljava/lang/String;	a	lambda$codec$2
	m	(Lcyd;Ljava/util/Set;Lame;Lcyb;)V	a	lambda$toNames$1
	m	(Lame;)V	a	lambda$fromNames$0
	m	()V	<clinit>	<clinit>
c	cyc$a	net/minecraft/world/flag/FeatureFlagRegistry$Builder
	f	Lcye;	a	universe
	f	I	b	id
	f	Ljava/util/Map;	c	flags
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lcyb;	a	createVanilla
	m	(Lame;)Lcyb;	a	create
	m	()Lcyc;	a	build
c	cyd	net/minecraft/world/flag/FeatureFlagSet
	f	Lcyd;	b	EMPTY
	f	I	a	MAX_CONTAINER_SIZE
	f	Lcye;	c	universe
	f	J	d	mask
	m	(Lcye;J)V	<init>	<init>
	m	(Lcye;Ljava/util/Collection;)Lcyd;	a	create
	m	()Lcyd;	a	of
	m	(Lcyb;)Lcyd;	a	of
	m	(Lcyb;[Lcyb;)Lcyd;	a	of
	m	(Lcye;JLjava/lang/Iterable;)J	a	computeMask
	m	(Lcyb;)Z	b	contains
	m	()Z	b	isEmpty
	m	(Lcyd;)Z	a	isSubsetOf
	m	(Lcyd;)Z	b	intersects
	m	(Lcyd;)Lcyd;	c	join
	m	(Lcyd;)Lcyd;	d	subtract
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	cye	net/minecraft/world/flag/FeatureFlagUniverse
	f	Ljava/lang/String;	a	id
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	cyf	net/minecraft/world/flag/FeatureFlags
	f	Lcyb;	a	VANILLA
	f	Lcyb;	b	TRADE_REBALANCE
	f	Lcyb;	c	REDSTONE_EXPERIMENTS
	f	Lcyb;	d	MINECART_IMPROVEMENTS
	f	Lcyc;	e	REGISTRY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lcyd;	g	VANILLA_SET
	f	Lcyd;	h	DEFAULT_FLAGS
	m	()V	<init>	<init>
	m	(Lcyd;Lcyd;)Ljava/lang/String;	a	printMissingFlags
	m	(Lcyc;Lcyd;Lcyd;)Ljava/lang/String;	a	printMissingFlags
	m	(Lcyd;)Z	a	isExperimental
	m	(Ljava/util/Set;Lame;)Z	a	lambda$printMissingFlags$0
	m	()V	<clinit>	<clinit>
c	cyg	net/minecraft/world/flag/package-info
c	cyh	net/minecraft/world/food/FoodConstants
	f	I	a	MAX_FOOD
	f	F	b	MAX_SATURATION
	f	F	c	START_SATURATION
	f	F	d	SATURATION_FLOOR
	f	F	e	EXHAUSTION_DROP
	f	I	f	HEALTH_TICK_COUNT
	f	I	g	HEALTH_TICK_COUNT_SATURATED
	f	I	h	HEAL_LEVEL
	f	I	i	SPRINT_LEVEL
	f	I	j	STARVE_LEVEL
	f	F	k	FOOD_SATURATION_POOR
	f	F	l	FOOD_SATURATION_LOW
	f	F	m	FOOD_SATURATION_NORMAL
	f	F	n	FOOD_SATURATION_GOOD
	f	F	o	FOOD_SATURATION_MAX
	f	F	p	FOOD_SATURATION_SUPERNATURAL
	f	F	q	EXHAUSTION_HEAL
	f	F	r	EXHAUSTION_JUMP
	f	F	s	EXHAUSTION_SPRINT_JUMP
	f	F	t	EXHAUSTION_MINE
	f	F	u	EXHAUSTION_ATTACK
	f	F	v	EXHAUSTION_WALK
	f	F	w	EXHAUSTION_CROUCH
	f	F	x	EXHAUSTION_SPRINT
	f	F	y	EXHAUSTION_SWIM
	m	()V	<init>	<init>
	m	(IF)F	a	saturationByModifier
c	cyi	net/minecraft/world/food/FoodData
	f	I	a	DEFAULT_TICK_TIMER
	f	F	b	DEFAULT_EXHAUSTION_LEVEL
	f	I	c	foodLevel
	f	F	d	saturationLevel
	f	F	e	exhaustionLevel
	f	I	f	tickTimer
	m	()V	<init>	<init>
	m	(IF)V	b	add
	m	(IF)V	a	eat
	m	(Lcyj;)V	a	eat
	m	(Lauc;)V	a	tick
	m	(Lfda;)V	a	readAdditionalSaveData
	m	(Lfdc;)V	a	addAdditionalSaveData
	m	()I	a	getFoodLevel
	m	()Z	b	needsFood
	m	(F)V	a	addExhaustion
	m	()F	c	getSaturationLevel
	m	(I)V	a	setFoodLevel
	m	(F)V	b	setSaturation
c	cyj	net/minecraft/world/food/FoodProperties
	f	I	c	nutrition
	f	F	d	saturation
	f	Z	e	canAlwaysEat
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	m	(IFZ)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;Ldfa;)V	a	onConsume
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	nutrition
	m	()F	b	saturation
	m	()Z	c	canAlwaysEat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	cyj$a	net/minecraft/world/food/FoodProperties$Builder
	f	I	a	nutrition
	f	F	b	saturationModifier
	f	Z	c	canAlwaysEat
	m	()V	<init>	<init>
	m	(I)Lcyj$a;	a	nutrition
	m	(F)Lcyj$a;	a	saturationModifier
	m	()Lcyj$a;	a	alwaysEdible
	m	()Lcyj;	b	build
c	cyk	net/minecraft/world/food/Foods
	f	Lcyj;	a	APPLE
	f	Lcyj;	b	BAKED_POTATO
	f	Lcyj;	c	BEEF
	f	Lcyj;	d	BEETROOT
	f	Lcyj;	e	BEETROOT_SOUP
	f	Lcyj;	f	BREAD
	f	Lcyj;	g	CARROT
	f	Lcyj;	h	CHICKEN
	f	Lcyj;	i	CHORUS_FRUIT
	f	Lcyj;	j	COD
	f	Lcyj;	k	COOKED_BEEF
	f	Lcyj;	l	COOKED_CHICKEN
	f	Lcyj;	m	COOKED_COD
	f	Lcyj;	n	COOKED_MUTTON
	f	Lcyj;	o	COOKED_PORKCHOP
	f	Lcyj;	p	COOKED_RABBIT
	f	Lcyj;	q	COOKED_SALMON
	f	Lcyj;	r	COOKIE
	f	Lcyj;	s	DRIED_KELP
	f	Lcyj;	t	ENCHANTED_GOLDEN_APPLE
	f	Lcyj;	u	GOLDEN_APPLE
	f	Lcyj;	v	GOLDEN_CARROT
	f	Lcyj;	w	HONEY_BOTTLE
	f	Lcyj;	x	MELON_SLICE
	f	Lcyj;	y	MUSHROOM_STEW
	f	Lcyj;	z	MUTTON
	f	Lcyj;	A	POISONOUS_POTATO
	f	Lcyj;	B	PORKCHOP
	f	Lcyj;	C	POTATO
	f	Lcyj;	D	PUFFERFISH
	f	Lcyj;	E	PUMPKIN_PIE
	f	Lcyj;	F	RABBIT
	f	Lcyj;	G	RABBIT_STEW
	f	Lcyj;	H	ROTTEN_FLESH
	f	Lcyj;	I	SALMON
	f	Lcyj;	J	SPIDER_EYE
	f	Lcyj;	K	SUSPICIOUS_STEW
	f	Lcyj;	L	SWEET_BERRIES
	f	Lcyj;	M	GLOW_BERRIES
	f	Lcyj;	N	TROPICAL_FISH
	m	()V	<init>	<init>
	m	(I)Lcyj$a;	a	stew
	m	()V	<clinit>	<clinit>
c	cyl	net/minecraft/world/food/package-info
c	cym	net/minecraft/world/inventory/AbstractContainerMenu
	f	Lorg/slf4j/Logger;	m	LOGGER
	f	I	a	SLOT_CLICKED_OUTSIDE
	f	I	b	QUICKCRAFT_TYPE_CHARITABLE
	f	I	c	QUICKCRAFT_TYPE_GREEDY
	f	I	d	QUICKCRAFT_TYPE_CLONE
	f	I	e	QUICKCRAFT_HEADER_START
	f	I	f	QUICKCRAFT_HEADER_CONTINUE
	f	I	g	QUICKCRAFT_HEADER_END
	f	I	h	CARRIED_SLOT_SIZE
	f	I	i	SLOTS_PER_ROW
	f	I	j	SLOT_SIZE
	f	Lju;	n	lastSlots
	f	Lju;	k	slots
	f	Ljava/util/List;	o	dataSlots
	f	Ldcv;	p	carried
	f	Lju;	q	remoteSlots
	f	Lit/unimi/dsi/fastutil/ints/IntList;	r	remoteDataSlots
	f	Ldae;	s	remoteCarried
	f	I	t	stateId
	f	Lczv;	u	menuType
	f	I	l	containerId
	f	I	v	quickcraftType
	f	I	w	quickcraftStatus
	f	Ljava/util/Set;	x	quickcraftSlots
	f	Ljava/util/List;	y	containerListeners
	f	Lczb;	z	synchronizer
	f	Z	A	suppressRemoteUpdates
	m	(Lczv;I)V	<init>	<init>
	m	(Lbxc;II)V	a	addInventoryHotbarSlots
	m	(Lbxc;II)V	b	addInventoryExtendedSlots
	m	(Lbxc;II)V	c	addStandardInventorySlots
	m	(Lcyz;Lcut;Ldpz;)Z	a	stillValid
	m	()Lczv;	a	getType
	m	(Lbxc;I)V	a	checkContainerSize
	m	(Lcyy;I)V	a	checkContainerDataCount
	m	(I)Z	a	isValidSlotIndex
	m	(Ldak;)Ldak;	a	addSlot
	m	(Lczg;)Lczg;	a	addDataSlot
	m	(Lcyy;)V	a	addDataSlots
	m	(Lcza;)V	a	addSlotListener
	m	(Lczb;)V	a	setSynchronizer
	m	()V	b	sendAllDataToRemote
	m	(Lcza;)V	b	removeSlotListener
	m	()Lju;	c	getItems
	m	()V	d	broadcastChanges
	m	()V	e	broadcastFullState
	m	(II)V	d	updateDataSlotListeners
	m	(ILdcv;Ljava/util/function/Supplier;)V	a	triggerSlotListeners
	m	(ILdcv;Ljava/util/function/Supplier;)V	b	synchronizeSlotToRemote
	m	(II)V	e	synchronizeDataSlotToRemote
	m	()V	l	synchronizeCarriedToRemote
	m	(ILdcv;)V	a	setRemoteSlot
	m	(ILwj;)V	a	setRemoteSlotUnsafe
	m	(Lwj;)V	a	setRemoteCarried
	m	(Lcut;I)Z	a	clickMenuButton
	m	(I)Ldak;	b	getSlot
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(II)V	a	setSelectedBundleItemIndex
	m	(IILcyx;Lcut;)V	a	clicked
	m	(IILcyx;Lcut;)V	b	doClick
	m	(Lcut;Lcyw;Ldak;Ldcv;Ldcv;)Z	a	tryItemClickBehaviourOverride
	m	()Lcbd;	m	createCarriedSlotAccess
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	(Lcut;)V	a	removed
	m	(Lcut;Ldcv;)V	a	dropOrPlaceInInventory
	m	(Lcut;Lbxc;)V	a	clearContainer
	m	(Lbxc;)V	a	slotsChanged
	m	(IILdcv;)V	a	setItem
	m	(ILjava/util/List;Ldcv;)V	a	initializeContents
	m	(II)V	b	setData
	m	(Lcut;)Z	b	stillValid
	m	(Ldcv;IIZ)Z	a	moveItemStackTo
	m	(I)I	c	getQuickcraftType
	m	(I)I	d	getQuickcraftHeader
	m	(II)I	c	getQuickcraftMask
	m	(ILcut;)Z	a	isValidQuickcraftType
	m	()V	f	resetQuickCraft
	m	(Ldak;Ldcv;Z)Z	a	canItemQuickReplace
	m	(Ljava/util/Set;ILdcv;)I	a	getQuickCraftPlaceCount
	m	(Ldak;)Z	b	canDragTo
	m	(Leaz;)I	a	getRedstoneSignalFromBlockEntity
	m	(Lbxc;)I	b	getRedstoneSignalFromContainer
	m	(Ldcv;)V	a	setCarried
	m	()Ldcv;	g	getCarried
	m	()V	h	suppressRemoteUpdates
	m	()V	i	resumeRemoteUpdates
	m	(Lcym;)V	a	transferState
	m	(Lbxc;I)Ljava/util/OptionalInt;	b	findSlot
	m	()I	j	getStateId
	m	()I	k	incrementStateId
	m	(Ldcv;Ldak;Lcut;Ldcv;)V	a	lambda$doClick$5
	m	(Ldak;Lcut;Ldcv;)V	a	lambda$doClick$4
	m	()Ljava/lang/String;	n	lambda$clicked$3
	m	()Ljava/lang/String;	o	lambda$clicked$2
	m	(Lczb;Ldae;)Ldae;	a	lambda$setSynchronizer$1
	m	(Ldpz;Lcut;Ldmu;Ljb;)Ljava/lang/Boolean;	a	lambda$stillValid$0
	m	()V	<clinit>	<clinit>
c	cym$1	net/minecraft/world/inventory/AbstractContainerMenu$1
	f	Lcym;	b	this$0
	m	(Lcym;)V	<init>	<init>
	m	()Ldcv;	a	get
	m	(Ldcv;)Z	a	set
c	cyn	net/minecraft/world/inventory/AbstractCraftingMenu
	f	I	o	width
	f	I	p	height
	f	Lcze;	m	craftSlots
	f	Ldaf;	n	resultSlots
	m	(Lczv;III)V	<init>	<init>
	m	(Lcut;II)Ldak;	a	addResultSlot
	m	(II)V	d	addCraftingGridSlots
	m	(ZZLdhr;Laub;Lcus;)Ldab$a;	a	handlePlacement
	m	()V	l	beginPlacingRecipe
	m	(Laub;Ldhr;)V	a	finishPlacingRecipe
	m	()Ldak;	m	getResultSlot
	m	()Ljava/util/List;	n	getInputGridSlots
	m	()I	o	getGridWidth
	m	()I	p	getGridHeight
	m	()Lcut;	q	owner
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
c	cyn$1	net/minecraft/world/inventory/AbstractCraftingMenu$1
	f	Lcyn;	a	this$0
	m	(Lcyn;)V	<init>	<init>
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
	m	()V	a	clearCraftingContent
	m	(Ldhr;)Z	a	recipeMatches
c	cyo	net/minecraft/world/inventory/AbstractFurnaceMenu
	f	I	m	INGREDIENT_SLOT
	f	I	n	FUEL_SLOT
	f	I	o	RESULT_SLOT
	f	I	p	SLOT_COUNT
	f	I	q	DATA_COUNT
	f	I	s	INV_SLOT_START
	f	I	t	INV_SLOT_END
	f	I	u	USE_ROW_SLOT_START
	f	I	v	USE_ROW_SLOT_END
	f	Lbxc;	w	container
	f	Lcyy;	x	data
	f	Ldmu;	r	level
	f	Ldhx;	y	recipeType
	f	Ldhv;	z	acceptedInputs
	f	Ldac;	A	recipeBookType
	m	(Lczv;Ldhx;Lamd;Ldac;ILcus;)V	<init>	<init>
	m	(Lczv;Ldhx;Lamd;Ldac;ILcus;Lbxc;Lcyy;)V	<init>	<init>
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
	m	()Ldak;	l	getResultSlot
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Ldcv;)Z	b	canSmelt
	m	(Ldcv;)Z	c	isFuel
	m	()F	m	getBurnProgress
	m	()F	n	getLitProgress
	m	()Z	o	isLit
	m	()Ldac;	am_	getRecipeBookType
	m	(ZZLdhr;Laub;Lcus;)Ldab$a;	a	handlePlacement
c	cyo$1	net/minecraft/world/inventory/AbstractFurnaceMenu$1
	f	Ljava/util/List;	a	val$slotsToClear
	f	Laub;	b	val$level
	f	Lcyo;	c	this$0
	m	(Lcyo;Ljava/util/List;Laub;)V	<init>	<init>
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
	m	()V	a	clearCraftingContent
	m	(Ldhr;)Z	a	recipeMatches
	m	(Ldak;)V	a	lambda$clearCraftingContent$0
c	cyp	net/minecraft/world/inventory/AnvilMenu
	f	I	m	INPUT_SLOT
	f	I	n	ADDITIONAL_SLOT
	f	I	o	RESULT_SLOT
	f	Lorg/slf4j/Logger;	u	LOGGER
	f	Z	v	DEBUG_COST
	f	I	p	MAX_NAME_LENGTH
	f	I	w	repairItemCountCost
	f	Ljava/lang/String;	x	itemName
	f	Lczg;	y	cost
	f	Z	z	onlyRenaming
	f	I	A	COST_FAIL
	f	I	B	COST_BASE
	f	I	C	COST_ADDED_BASE
	f	I	D	COST_REPAIR_MATERIAL
	f	I	E	COST_REPAIR_SACRIFICE
	f	I	F	COST_INCOMPATIBLE_PENALTY
	f	I	G	COST_RENAME
	f	I	H	INPUT_SLOT_X_PLACEMENT
	f	I	I	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	J	RESULT_SLOT_X_PLACEMENT
	f	I	K	SLOT_Y_PLACEMENT
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	()Lczr;	o	createInputSlotDefinitions
	m	(Leeb;)Z	a	isValidBlock
	m	(Lcut;Z)Z	a	mayPickup
	m	(Lcut;Ldcv;)V	a	onTake
	m	()V	l	createResult
	m	(I)I	e	calculateIncreasedRepairCost
	m	(Ljava/lang/String;)Z	a	setItemName
	m	(Ljava/lang/String;)Ljava/lang/String;	b	validateName
	m	()I	m	getCost
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$onTake$2
	m	(Ldcv;)Z	c	lambda$createInputSlotDefinitions$1
	m	(Ldcv;)Z	d	lambda$createInputSlotDefinitions$0
	m	()V	<clinit>	<clinit>
c	cyq	net/minecraft/world/inventory/ArmorSlot
	f	Lcam;	a	owner
	f	Lbzw;	b	slot
	f	Lame;	g	emptyIcon
	m	(Lbxc;Lcam;Lbzw;IIILame;)V	<init>	<init>
	m	(Ldcv;Ldcv;)V	a	setByPlayer
	m	()I	a	getMaxStackSize
	m	(Ldcv;)Z	a	mayPlace
	m	()Z	b	isActive
	m	(Lcut;)Z	a	mayPickup
	m	()Lame;	c	getNoItemIcon
c	cyr	net/minecraft/world/inventory/BeaconMenu
	f	I	m	PAYMENT_SLOT
	f	I	n	SLOT_COUNT
	f	I	o	DATA_COUNT
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	I	t	NO_EFFECT
	f	Lbxc;	u	beacon
	f	Lcyr$a;	v	paymentSlot
	f	Lcyz;	w	access
	f	Lcyy;	x	beaconData
	m	(ILbxc;)V	<init>	<init>
	m	(ILbxc;Lcyy;Lcyz;)V	<init>	<init>
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(II)V	b	setData
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	()I	l	getLevels
	m	(Ljl;)I	a	encodeEffect
	m	(I)Ljl;	e	decodeEffect
	m	()Ljl;	m	getPrimaryEffect
	m	()Ljl;	n	getSecondaryEffect
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	a	updateEffects
	m	()Z	o	hasPayment
c	cyr$1	net/minecraft/world/inventory/BeaconMenu$1
	m	(Lcyr;I)V	<init>	<init>
	m	(ILdcv;)Z	b	canPlaceItem
	m	()I	an_	getMaxStackSize
c	cyr$a	net/minecraft/world/inventory/BeaconMenu$PaymentSlot
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	()I	a	getMaxStackSize
c	cys	net/minecraft/world/inventory/BlastFurnaceMenu
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;Lcyy;)V	<init>	<init>
c	cyt	net/minecraft/world/inventory/BrewingStandMenu
	f	Lame;	m	EMPTY_SLOT_FUEL
	f	Lame;	n	EMPTY_SLOT_POTION
	f	I	o	BOTTLE_SLOT_START
	f	I	p	BOTTLE_SLOT_END
	f	I	q	INGREDIENT_SLOT
	f	I	r	FUEL_SLOT
	f	I	s	SLOT_COUNT
	f	I	t	DATA_COUNT
	f	I	u	INV_SLOT_START
	f	I	v	INV_SLOT_END
	f	I	w	USE_ROW_SLOT_START
	f	I	x	USE_ROW_SLOT_END
	f	Lbxc;	y	brewingStand
	f	Lcyy;	z	brewingStandData
	f	Ldak;	A	ingredientSlot
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;Lcyy;)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	()I	l	getFuel
	m	()I	m	getBrewingTicks
	m	()V	<clinit>	<clinit>
c	cyt$a	net/minecraft/world/inventory/BrewingStandMenu$FuelSlot
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Ldcv;)Z	b	mayPlaceItem
	m	()Lame;	c	getNoItemIcon
c	cyt$b	net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot
	f	Ldeq;	a	potionBrewing
	m	(Ldeq;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	cyt$c	net/minecraft/world/inventory/BrewingStandMenu$PotionSlot
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	()I	a	getMaxStackSize
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldcv;)Z	b	mayPlaceItem
	m	()Lame;	c	getNoItemIcon
c	cyu	net/minecraft/world/inventory/CartographyTableMenu
	f	I	m	MAP_SLOT
	f	I	n	ADDITIONAL_SLOT
	f	I	o	RESULT_SLOT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lcyz;	u	access
	f	J	v	lastSoundTime
	f	Lbxc;	p	container
	f	Ldaf;	w	resultContainer
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lbxc;)V	a	slotsChanged
	m	(Ldcv;Ldcv;Ldcv;)V	a	setupResultSlot
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$1
	m	(Ldcv;Ldcv;Ldcv;Ldmu;Ljb;)V	a	lambda$setupResultSlot$0
c	cyu$1	net/minecraft/world/inventory/CartographyTableMenu$1
	f	Lcyu;	b	this$0
	m	(Lcyu;I)V	<init>	<init>
	m	()V	e	setChanged
c	cyu$2	net/minecraft/world/inventory/CartographyTableMenu$2
	f	Lcyu;	b	this$0
	m	(Lcyu;)V	<init>	<init>
	m	()V	e	setChanged
c	cyu$3	net/minecraft/world/inventory/CartographyTableMenu$3
	m	(Lcyu;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	cyu$4	net/minecraft/world/inventory/CartographyTableMenu$4
	m	(Lcyu;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	cyu$5	net/minecraft/world/inventory/CartographyTableMenu$5
	f	Lcyz;	a	val$access
	f	Lcyu;	b	this$0
	m	(Lcyu;Lbxc;IIILcyz;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldmu;Ljb;)V	a	lambda$onTake$0
c	cyv	net/minecraft/world/inventory/ChestMenu
	f	Lbxc;	m	container
	f	I	n	containerRows
	m	(Lczv;ILcus;I)V	<init>	<init>
	m	(ILcus;)Lcyv;	a	oneRow
	m	(ILcus;)Lcyv;	b	twoRows
	m	(ILcus;)Lcyv;	c	threeRows
	m	(ILcus;)Lcyv;	d	fourRows
	m	(ILcus;)Lcyv;	e	fiveRows
	m	(ILcus;)Lcyv;	f	sixRows
	m	(ILcus;Lbxc;)Lcyv;	a	threeRows
	m	(ILcus;Lbxc;)Lcyv;	b	sixRows
	m	(Lczv;ILcus;Lbxc;I)V	<init>	<init>
	m	(Lbxc;II)V	d	addChestGrid
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
	m	()Lbxc;	l	getContainer
	m	()I	m	getRowCount
c	cyw	net/minecraft/world/inventory/ClickAction
	f	Lcyw;	a	PRIMARY
	f	Lcyw;	b	SECONDARY
	f	[Lcyw;	c	$VALUES
	m	()[Lcyw;	values	values
	m	(Ljava/lang/String;)Lcyw;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lcyw;	a	$values
	m	()V	<clinit>	<clinit>
c	cyx	net/minecraft/world/inventory/ClickType
	f	Lcyx;	a	PICKUP
	f	Lcyx;	b	QUICK_MOVE
	f	Lcyx;	c	SWAP
	f	Lcyx;	d	CLONE
	f	Lcyx;	e	THROW
	f	Lcyx;	f	QUICK_CRAFT
	f	Lcyx;	g	PICKUP_ALL
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	h	STREAM_CODEC
	f	I	j	id
	f	[Lcyx;	k	$VALUES
	m	()[Lcyx;	values	values
	m	(Ljava/lang/String;)Lcyx;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	id
	m	()[Lcyx;	b	$values
	m	()V	<clinit>	<clinit>
c	cyy	net/minecraft/world/inventory/ContainerData
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	cyz	net/minecraft/world/inventory/ContainerLevelAccess
	f	Lcyz;	a	NULL
	m	(Ldmu;Ljb;)Lcyz;	a	create
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
	m	(Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object;	a	evaluate
	m	(Ljava/util/function/BiConsumer;)V	a	execute
	m	(Ljava/util/function/BiConsumer;Ldmu;Ljb;)Ljava/util/Optional;	a	lambda$execute$0
	m	()V	<clinit>	<clinit>
c	cyz$1	net/minecraft/world/inventory/ContainerLevelAccess$1
	m	()V	<init>	<init>
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
c	cyz$2	net/minecraft/world/inventory/ContainerLevelAccess$2
	f	Ldmu;	b	val$level
	f	Ljb;	c	val$pos
	m	(Ldmu;Ljb;)V	<init>	<init>
	m	(Ljava/util/function/BiFunction;)Ljava/util/Optional;	a	evaluate
c	cza	net/minecraft/world/inventory/ContainerListener
	m	(Lcym;ILdcv;)V	a	slotChanged
	m	(Lcym;II)V	a	dataChanged
c	czb	net/minecraft/world/inventory/ContainerSynchronizer
	m	(Lcym;Ljava/util/List;Ldcv;[I)V	a	sendInitialData
	m	(Lcym;ILdcv;)V	a	sendSlotChange
	m	(Lcym;Ldcv;)V	a	sendCarriedChange
	m	(Lcym;II)V	a	sendDataChange
	m	()Ldae;	a	createSlot
c	czc	net/minecraft/world/inventory/CrafterMenu
	f	I	m	SLOT_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Ldaf;	r	resultContainer
	f	Lcyy;	s	containerData
	f	Lcut;	t	player
	f	Lcze;	u	container
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcze;Lcyy;)V	<init>	<init>
	m	(Lcus;)V	a	addSlots
	m	(IZ)V	a	setSlotState
	m	(I)Z	e	isSlotDisabled
	m	()Z	l	isPowered
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)Z	b	stillValid
	m	()V	n	refreshRecipeResult
	m	()Lbxc;	m	getContainer
	m	(Lcym;ILdcv;)V	a	slotChanged
	m	(Lcym;II)V	a	dataChanged
	m	(Ldha;Laub;Ldhr;)Ldcv;	a	lambda$refreshRecipeResult$0
c	czd	net/minecraft/world/inventory/CrafterSlot
	f	Lczc;	a	menu
	m	(Lbxc;IIILczc;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	()V	d	setChanged
c	cze	net/minecraft/world/inventory/CraftingContainer
	m	()I	ay_	getWidth
	m	()I	g	getHeight
	m	()Ljava/util/List;	h	getItems
	m	()Ldha;	aB_	asCraftInput
	m	()Ldha$a;	aC_	asPositionedCraftInput
c	czf	net/minecraft/world/inventory/CraftingMenu
	f	I	p	CRAFTING_GRID_WIDTH
	f	I	q	CRAFTING_GRID_HEIGHT
	f	I	o	RESULT_SLOT
	f	I	r	CRAFT_SLOT_START
	f	I	s	CRAFT_SLOT_COUNT
	f	I	t	CRAFT_SLOT_END
	f	I	u	INV_SLOT_START
	f	I	v	INV_SLOT_END
	f	I	w	USE_ROW_SLOT_START
	f	I	x	USE_ROW_SLOT_END
	f	Lcyz;	y	access
	f	Lcut;	z	player
	f	Z	A	placingRecipe
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(Lcym;Laub;Lcut;Lcze;Ldaf;Ldhr;)V	a	slotChangedCraftingGrid
	m	(Lbxc;)V	a	slotsChanged
	m	()V	l	beginPlacingRecipe
	m	(Laub;Ldhr;)V	a	finishPlacingRecipe
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	()Ldak;	m	getResultSlot
	m	()Ljava/util/List;	n	getInputGridSlots
	m	()Ldac;	am_	getRecipeBookType
	m	()Lcut;	q	owner
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$1
	m	(Ldmu;Ljb;)V	a	lambda$slotsChanged$0
c	czg	net/minecraft/world/inventory/DataSlot
	f	I	a	prevValue
	m	()V	<init>	<init>
	m	(Lcyy;I)Lczg;	a	forContainer
	m	([II)Lczg;	a	shared
	m	()Lczg;	a	standalone
	m	()I	b	get
	m	(I)V	a	set
	m	()Z	c	checkAndClearUpdateFlag
c	czg$1	net/minecraft/world/inventory/DataSlot$1
	f	Lcyy;	a	val$container
	f	I	b	val$dataId
	m	(Lcyy;I)V	<init>	<init>
	m	()I	b	get
	m	(I)V	a	set
c	czg$2	net/minecraft/world/inventory/DataSlot$2
	f	[I	a	val$storage
	f	I	b	val$index
	m	([II)V	<init>	<init>
	m	()I	b	get
	m	(I)V	a	set
c	czg$3	net/minecraft/world/inventory/DataSlot$3
	f	I	a	value
	m	()V	<init>	<init>
	m	()I	b	get
	m	(I)V	a	set
c	czh	net/minecraft/world/inventory/DispenserMenu
	f	I	m	SLOT_COUNT
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lbxc;	r	dispenser
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;)V	<init>	<init>
	m	(Lbxc;II)V	d	add3x3GridSlots
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
c	czi	net/minecraft/world/inventory/EnchantmentMenu
	f	Lame;	p	EMPTY_SLOT_LAPIS_LAZULI
	f	Lbxc;	q	enchantSlots
	f	Lcyz;	r	access
	f	Lbck;	s	random
	f	Lczg;	t	enchantmentSeed
	f	[I	m	costs
	f	[I	n	enchantClue
	f	[I	o	levelClue
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(Lbxc;)V	a	slotsChanged
	m	(Lcut;I)Z	a	clickMenuButton
	m	(Ljz;Ldcv;II)Ljava/util/List;	a	getEnchantmentList
	m	()I	l	getGoldCount
	m	()I	m	getEnchantmentSeed
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$2
	m	(Ldcv;ILcut;ILdcv;Ldmu;Ljb;)V	a	lambda$clickMenuButton$1
	m	(Ldcv;Ldmu;Ljb;)V	a	lambda$slotsChanged$0
	m	()V	<clinit>	<clinit>
c	czi$1	net/minecraft/world/inventory/EnchantmentMenu$1
	f	Lczi;	b	this$0
	m	(Lczi;I)V	<init>	<init>
	m	()V	e	setChanged
c	czi$2	net/minecraft/world/inventory/EnchantmentMenu$2
	m	(Lczi;Lbxc;III)V	<init>	<init>
	m	()I	a	getMaxStackSize
c	czi$3	net/minecraft/world/inventory/EnchantmentMenu$3
	m	(Lczi;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	()Lame;	c	getNoItemIcon
c	czj	net/minecraft/world/inventory/FurnaceFuelSlot
	f	Lcyo;	a	menu
	m	(Lcyo;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Ldcv;)I	b_	getMaxStackSize
	m	(Ldcv;)Z	c	isBucket
c	czk	net/minecraft/world/inventory/FurnaceMenu
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;Lcyy;)V	<init>	<init>
c	czl	net/minecraft/world/inventory/FurnaceResultSlot
	f	Lcut;	a	player
	f	I	b	removeCount
	m	(Lcut;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(I)Ldcv;	a	remove
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldcv;I)V	a	onQuickCraft
	m	(Ldcv;)V	c_	checkTakeAchievements
c	czm	net/minecraft/world/inventory/GrindstoneMenu
	f	I	m	MAX_NAME_LENGTH
	f	I	n	INPUT_SLOT
	f	I	o	ADDITIONAL_SLOT
	f	I	p	RESULT_SLOT
	f	I	q	INV_SLOT_START
	f	I	r	INV_SLOT_END
	f	I	s	USE_ROW_SLOT_START
	f	I	t	USE_ROW_SLOT_END
	f	Lbxc;	u	resultSlots
	f	Lbxc;	v	repairSlots
	f	Lcyz;	w	access
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(Lbxc;)V	a	slotsChanged
	m	()V	l	createResult
	m	(Ldcv;Ldcv;)Ldcv;	a	computeResult
	m	(Ldcv;Ldcv;)Ldcv;	b	mergeItems
	m	(Ldcv;Ldcv;)V	c	mergeEnchantsFrom
	m	(Ldcv;)Ldcv;	b	removeNonCursesFrom
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$3
	m	(Ldjo$a;)V	a	lambda$removeNonCursesFrom$2
	m	(Ljl;)Z	a	lambda$removeNonCursesFrom$1
	m	(Ldcv;Ldjo$a;)V	a	lambda$mergeEnchantsFrom$0
c	czm$1	net/minecraft/world/inventory/GrindstoneMenu$1
	f	Lczm;	b	this$0
	m	(Lczm;I)V	<init>	<init>
	m	()V	e	setChanged
c	czm$2	net/minecraft/world/inventory/GrindstoneMenu$2
	m	(Lczm;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czm$3	net/minecraft/world/inventory/GrindstoneMenu$3
	m	(Lczm;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czm$4	net/minecraft/world/inventory/GrindstoneMenu$4
	f	Lcyz;	a	val$access
	f	Lczm;	b	this$0
	m	(Lczm;Lbxc;IIILcyz;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldmu;)I	a	getExperienceAmount
	m	(Ldcv;)I	g	getExperienceFromItem
	m	(Ldmu;Ljb;)V	a	lambda$onTake$0
c	czn	net/minecraft/world/inventory/HopperMenu
	f	I	m	CONTAINER_SIZE
	f	Lbxc;	n	hopper
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
c	czo	net/minecraft/world/inventory/HorseInventoryMenu
	f	Lame;	m	SADDLE_SLOT_SPRITE
	f	Lame;	n	LLAMA_ARMOR_SLOT_SPRITE
	f	Lame;	o	ARMOR_SLOT_SPRITE
	f	Lbxc;	p	horseContainer
	f	Lcoq;	q	horse
	f	I	r	SLOT_SADDLE
	f	I	s	SLOT_BODY_ARMOR
	f	I	t	SLOT_HORSE_INVENTORY_START
	m	(ILcus;Lbxc;Lcoq;I)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
	m	()V	<clinit>	<clinit>
c	czo$1	net/minecraft/world/inventory/HorseInventoryMenu$1
	f	Lcoq;	a	val$horse
	m	(Lczo;Lbxc;Lcam;Lbzw;IIILame;Lcoq;)V	<init>	<init>
	m	()Z	b	isActive
c	czo$2	net/minecraft/world/inventory/HorseInventoryMenu$2
	f	Lcoq;	a	val$horse
	f	Z	b	val$isLlama
	m	(Lczo;Lbxc;Lcam;Lbzw;IIILame;Lcoq;Z)V	<init>	<init>
	m	()Z	b	isActive
c	czp	net/minecraft/world/inventory/InventoryMenu
	f	I	o	CONTAINER_ID
	f	I	p	RESULT_SLOT
	f	I	H	CRAFTING_GRID_WIDTH
	f	I	I	CRAFTING_GRID_HEIGHT
	f	I	q	CRAFT_SLOT_START
	f	I	r	CRAFT_SLOT_COUNT
	f	I	s	CRAFT_SLOT_END
	f	I	t	ARMOR_SLOT_START
	f	I	u	ARMOR_SLOT_COUNT
	f	I	v	ARMOR_SLOT_END
	f	I	w	INV_SLOT_START
	f	I	x	INV_SLOT_END
	f	I	y	USE_ROW_SLOT_START
	f	I	z	USE_ROW_SLOT_END
	f	I	A	SHIELD_SLOT
	f	Lame;	B	EMPTY_ARMOR_SLOT_HELMET
	f	Lame;	C	EMPTY_ARMOR_SLOT_CHESTPLATE
	f	Lame;	D	EMPTY_ARMOR_SLOT_LEGGINGS
	f	Lame;	E	EMPTY_ARMOR_SLOT_BOOTS
	f	Lame;	F	EMPTY_ARMOR_SLOT_SHIELD
	f	Ljava/util/Map;	J	TEXTURE_EMPTY_SLOTS
	f	[Lbzw;	K	SLOT_IDS
	f	Z	G	active
	f	Lcut;	L	owner
	m	(Lcus;ZLcut;)V	<init>	<init>
	m	(I)Z	e	isHotbarSlot
	m	(Lbxc;)V	a	slotsChanged
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	()Ldak;	m	getResultSlot
	m	()Ljava/util/List;	n	getInputGridSlots
	m	()Lcze;	r	getCraftSlots
	m	()Ldac;	am_	getRecipeBookType
	m	()Lcut;	q	owner
	m	()V	<clinit>	<clinit>
c	czp$1	net/minecraft/world/inventory/InventoryMenu$1
	f	Lcut;	a	val$owner
	m	(Lczp;Lbxc;IIILcut;)V	<init>	<init>
	m	(Ldcv;Ldcv;)V	a	setByPlayer
	m	()Lame;	c	getNoItemIcon
c	czq	net/minecraft/world/inventory/ItemCombinerMenu
	f	I	m	INVENTORY_SLOTS_PER_ROW
	f	I	n	INVENTORY_ROWS
	f	I	o	INPUT_SLOT_START
	f	Lcyz;	q	access
	f	Lcut;	r	player
	f	Lbxc;	s	inputSlots
	f	Ldaf;	t	resultSlots
	f	I	p	resultSlotIndex
	m	(Lcut;Z)Z	a	mayPickup
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Leeb;)Z	a	isValidBlock
	m	(Lczv;ILcus;Lcyz;Lczr;)V	<init>	<init>
	m	(Lczr;)V	a	createInputSlots
	m	(Lczr;)V	b	createResultSlot
	m	()V	l	createResult
	m	(I)Lbxr;	e	createContainer
	m	(Lbxc;)V	a	slotsChanged
	m	(Lcut;)V	a	removed
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Ldcv;)Z	b	canMoveIntoInputSlots
	m	()I	n	getResultSlot
	m	()I	m	getInventorySlotStart
	m	()I	o	getInventorySlotEnd
	m	()I	p	getUseRowStart
	m	()I	q	getUseRowEnd
	m	(Lcut;Ldmu;Ljb;)Ljava/lang/Boolean;	a	lambda$stillValid$1
	m	(Lcut;Ldmu;Ljb;)V	b	lambda$removed$0
c	czq$1	net/minecraft/world/inventory/ItemCombinerMenu$1
	f	Lczq;	b	this$0
	m	(Lczq;)V	<init>	<init>
	m	()V	e	setChanged
c	czq$2	net/minecraft/world/inventory/ItemCombinerMenu$2
	f	Lczr$b;	a	val$slot
	m	(Lczq;Lbxc;IIILczr$b;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czq$3	net/minecraft/world/inventory/ItemCombinerMenu$3
	f	Lczq;	a	this$0
	m	(Lczq;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Lcut;)Z	a	mayPickup
	m	(Lcut;Ldcv;)V	a	onTake
c	czq$4	net/minecraft/world/inventory/ItemCombinerMenu$4
	f	Lczq;	b	this$0
	m	(Lczq;I)V	<init>	<init>
	m	()V	e	setChanged
c	czr	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition
	f	Ljava/util/List;	a	slots
	f	Lczr$b;	b	resultSlot
	m	(Ljava/util/List;Lczr$b;)V	<init>	<init>
	m	()Lczr$a;	a	create
	m	(I)Lczr$b;	a	getSlot
	m	()Lczr$b;	b	getResultSlot
	m	()Ljava/util/List;	c	getSlots
	m	()I	d	getNumOfInputSlots
	m	()I	e	getResultSlotIndex
c	czr$a	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder
	f	Ljava/util/List;	a	inputSlots
	f	Lczr$b;	b	resultSlot
	m	()V	<init>	<init>
	m	(IIILjava/util/function/Predicate;)Lczr$a;	a	withSlot
	m	(III)Lczr$a;	a	withResultSlot
	m	()Lczr;	a	build
	m	(Ldcv;)Z	a	lambda$withResultSlot$0
c	czr$b	net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition
	f	I	a	slotIndex
	f	I	b	x
	f	I	c	y
	f	Ljava/util/function/Predicate;	d	mayPlace
	f	Lczr$b;	e	EMPTY
	m	(IIILjava/util/function/Predicate;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	slotIndex
	m	()I	b	x
	m	()I	c	y
	m	()Ljava/util/function/Predicate;	d	mayPlace
	m	(Ldcv;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	czs	net/minecraft/world/inventory/LecternMenu
	f	I	q	DATA_COUNT
	f	I	r	SLOT_COUNT
	f	I	m	BUTTON_PREV_PAGE
	f	I	n	BUTTON_NEXT_PAGE
	f	I	o	BUTTON_TAKE_BOOK
	f	I	p	BUTTON_PAGE_JUMP_RANGE_START
	f	Lbxc;	s	lectern
	f	Lcyy;	t	lecternData
	m	(I)V	<init>	<init>
	m	(ILbxc;Lcyy;)V	<init>	<init>
	m	(Lcut;I)Z	a	clickMenuButton
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(II)V	b	setData
	m	(Lcut;)Z	b	stillValid
	m	()Ldcv;	l	getBook
	m	()I	m	getPage
c	czs$1	net/minecraft/world/inventory/LecternMenu$1
	f	Lczs;	a	this$0
	m	(Lczs;Lbxc;III)V	<init>	<init>
	m	()V	d	setChanged
c	czt	net/minecraft/world/inventory/LoomMenu
	f	I	m	PATTERN_NOT_SET
	f	I	n	INV_SLOT_START
	f	I	o	INV_SLOT_END
	f	I	p	USE_ROW_SLOT_START
	f	I	q	USE_ROW_SLOT_END
	f	Lcyz;	r	access
	f	Lczg;	s	selectedBannerPatternIndex
	f	Ljava/util/List;	t	selectablePatterns
	f	Ljava/lang/Runnable;	u	slotUpdateListener
	f	Ljm;	v	patternGetter
	f	Ldak;	w	bannerSlot
	f	Ldak;	x	dyeSlot
	f	Ldak;	y	patternSlot
	f	Ldak;	z	resultSlot
	f	J	A	lastSoundTime
	f	Lbxc;	B	inputContainer
	f	Lbxc;	C	outputContainer
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Z	a	clickMenuButton
	m	(Ldcv;)Ljava/util/List;	b	getSelectablePatterns
	m	(I)Z	e	isValidPatternIndex
	m	(Lbxc;)V	a	slotsChanged
	m	()Ljava/util/List;	l	getSelectablePatterns
	m	()I	m	getSelectedBannerPatternIndex
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
	m	(Ljl;)V	a	setupResultSlot
	m	()Ldak;	n	getBannerSlot
	m	()Ldak;	o	getDyeSlot
	m	()Ldak;	p	getPatternSlot
	m	()Ldak;	q	getResultSlot
	m	(Ljl;Ldbt;Leap;)Leap;	a	lambda$setupResultSlot$2
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$1
	m	()V	r	lambda$new$0
c	czt$1	net/minecraft/world/inventory/LoomMenu$1
	f	Lczt;	b	this$0
	m	(Lczt;I)V	<init>	<init>
	m	()V	e	setChanged
c	czt$2	net/minecraft/world/inventory/LoomMenu$2
	f	Lczt;	b	this$0
	m	(Lczt;I)V	<init>	<init>
	m	()V	e	setChanged
c	czt$3	net/minecraft/world/inventory/LoomMenu$3
	m	(Lczt;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czt$4	net/minecraft/world/inventory/LoomMenu$4
	m	(Lczt;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czt$5	net/minecraft/world/inventory/LoomMenu$5
	m	(Lczt;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	czt$6	net/minecraft/world/inventory/LoomMenu$6
	f	Lcyz;	a	val$access
	f	Lczt;	b	this$0
	m	(Lczt;Lbxc;IIILcyz;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldmu;Ljb;)V	a	lambda$onTake$0
c	czu	net/minecraft/world/inventory/MenuConstructor
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
c	czv	net/minecraft/world/inventory/MenuType
	f	Lczv;	a	GENERIC_9x1
	f	Lczv;	b	GENERIC_9x2
	f	Lczv;	c	GENERIC_9x3
	f	Lczv;	d	GENERIC_9x4
	f	Lczv;	e	GENERIC_9x5
	f	Lczv;	f	GENERIC_9x6
	f	Lczv;	g	GENERIC_3x3
	f	Lczv;	h	CRAFTER_3x3
	f	Lczv;	i	ANVIL
	f	Lczv;	j	BEACON
	f	Lczv;	k	BLAST_FURNACE
	f	Lczv;	l	BREWING_STAND
	f	Lczv;	m	CRAFTING
	f	Lczv;	n	ENCHANTMENT
	f	Lczv;	o	FURNACE
	f	Lczv;	p	GRINDSTONE
	f	Lczv;	q	HOPPER
	f	Lczv;	r	LECTERN
	f	Lczv;	s	LOOM
	f	Lczv;	t	MERCHANT
	f	Lczv;	u	SHULKER_BOX
	f	Lczv;	v	SMITHING
	f	Lczv;	w	SMOKER
	f	Lczv;	x	CARTOGRAPHY_TABLE
	f	Lczv;	y	STONECUTTER
	f	Lcyd;	z	requiredFeatures
	f	Lczv$a;	A	constructor
	m	(Ljava/lang/String;Lczv$a;)Lczv;	a	register
	m	(Ljava/lang/String;Lczv$a;[Lcyb;)Lczv;	a	register
	m	(Lczv$a;Lcyd;)V	<init>	<init>
	m	(ILcus;)Lcym;	a	create
	m	()Lcyd;	k	requiredFeatures
	m	(ILcus;)Lczs;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	czv$a	net/minecraft/world/inventory/MenuType$MenuSupplier
	m	(ILcus;)Lcym;	create	create
c	czw	net/minecraft/world/inventory/MerchantContainer
	f	Ldlp;	b	merchant
	f	Lju;	c	itemStacks
	f	Ldlq;	d	activeOffer
	f	I	e	selectionHint
	f	I	f	futureXp
	m	(Ldlp;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Z	d	isPaymentSlot
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(Lcut;)Z	a	stillValid
	m	()V	e	setChanged
	m	()V	f	updateSellItem
	m	()Ldlq;	g	getActiveOffer
	m	(I)V	c	setSelectionHint
	m	()V	a	clearContent
	m	()I	h	getFutureXp
c	czx	net/minecraft/world/inventory/MerchantMenu
	f	I	m	PAYMENT1_SLOT
	f	I	n	PAYMENT2_SLOT
	f	I	o	RESULT_SLOT
	f	I	p	INV_SLOT_START
	f	I	q	INV_SLOT_END
	f	I	r	USE_ROW_SLOT_START
	f	I	s	USE_ROW_SLOT_END
	f	I	t	SELLSLOT1_X
	f	I	u	SELLSLOT2_X
	f	I	v	BUYSLOT_X
	f	I	w	ROW_Y
	f	Ldlp;	x	trader
	f	Lczw;	y	tradeContainer
	f	I	z	merchantLevel
	f	Z	A	showProgressBar
	f	Z	B	canRestock
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Ldlp;)V	<init>	<init>
	m	(Z)V	a	setShowProgressBar
	m	(Lbxc;)V	a	slotsChanged
	m	(I)V	e	setSelectionHint
	m	(Lcut;)Z	b	stillValid
	m	()I	l	getTraderXp
	m	()I	m	getFutureTraderXp
	m	(I)V	f	setXp
	m	()I	n	getTraderLevel
	m	(I)V	g	setMerchantLevel
	m	(Z)V	b	setCanRestock
	m	()Z	o	canRestock
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	()V	r	playTradeSound
	m	(Lcut;)V	a	removed
	m	(I)V	h	tryMoveItems
	m	(ILdlo;)V	a	moveFromInventoryToPaymentSlot
	m	(Ldlr;)V	a	setOffers
	m	()Ldlr;	p	getOffers
	m	()Z	q	showProgressBar
	m	(Ldlo;)V	a	lambda$tryMoveItems$0
c	czy	net/minecraft/world/inventory/MerchantResultSlot
	f	Lczw;	a	slots
	f	Lcut;	b	player
	f	I	g	removeCount
	f	Ldlp;	h	merchant
	m	(Lcut;Ldlp;Lczw;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(I)Ldcv;	a	remove
	m	(Ldcv;I)V	a	onQuickCraft
	m	(Ldcv;)V	c_	checkTakeAchievements
	m	(Lcut;Ldcv;)V	a	onTake
c	czz	net/minecraft/world/inventory/NonInteractiveResultSlot
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;Ldcv;)V	b	onQuickCraft
	m	(Lcut;)Z	a	mayPickup
	m	(IILcut;)Ljava/util/Optional;	a	tryRemove
	m	(IILcut;)Ldcv;	b	safeTake
	m	(Ldcv;)Ldcv;	d	safeInsert
	m	(Ldcv;I)Ldcv;	b	safeInsert
	m	(Lcut;)Z	b	allowModification
	m	(Ldcv;)Z	a	mayPlace
	m	(I)Ldcv;	a	remove
	m	(Lcut;Ldcv;)V	a	onTake
	m	()Z	e	isHighlightable
	m	()Z	f	isFake
c	daa	net/minecraft/world/inventory/PlayerEnderChestContainer
	f	Lebx;	b	activeChest
	m	()V	<init>	<init>
	m	(Lebx;)V	a	setActiveChest
	m	(Lebx;)Z	b	isActiveChest
	m	(Lfda$a;)V	b	fromSlots
	m	(Lfdc$a;)V	b	storeAsSlots
	m	(Lcut;)Z	a	stillValid
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
c	dab	net/minecraft/world/inventory/RecipeBookMenu
	m	(Lczv;I)V	<init>	<init>
	m	(ZZLdhr;Laub;Lcus;)Ldab$a;	a	handlePlacement
	m	(Lcuz;)V	a	fillCraftSlotsStackedContents
	m	()Ldac;	am_	getRecipeBookType
c	dab$a	net/minecraft/world/inventory/RecipeBookMenu$PostPlaceAction
	f	Ldab$a;	a	NOTHING
	f	Ldab$a;	b	PLACE_GHOST_RECIPE
	f	[Ldab$a;	c	$VALUES
	m	()[Ldab$a;	values	values
	m	(Ljava/lang/String;)Ldab$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldab$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dac	net/minecraft/world/inventory/RecipeBookType
	f	Ldac;	a	CRAFTING
	f	Ldac;	b	FURNACE
	f	Ldac;	c	BLAST_FURNACE
	f	Ldac;	d	SMOKER
	f	[Ldac;	e	$VALUES
	m	()[Ldac;	values	values
	m	(Ljava/lang/String;)Ldac;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldac;	a	$values
	m	()V	<clinit>	<clinit>
c	dad	net/minecraft/world/inventory/RecipeCraftingHolder
	m	(Ldhr;)V	a	setRecipeUsed
	m	()Ldhr;	d	getRecipeUsed
	m	(Lcut;Ljava/util/List;)V	a	awardUsedRecipes
	m	(Lauc;Ldhr;)Z	a	setRecipeUsed
c	dae	net/minecraft/world/inventory/RemoteSlot
	f	Ldae;	a	PLACEHOLDER
	m	(Ldcv;)V	a	force
	m	(Lwj;)V	a	receive
	m	(Ldcv;)Z	b	matches
	m	()V	<clinit>	<clinit>
c	dae$1	net/minecraft/world/inventory/RemoteSlot$1
	m	()V	<init>	<init>
	m	(Lwj;)V	a	receive
	m	(Ldcv;)V	a	force
	m	(Ldcv;)Z	b	matches
c	dae$a	net/minecraft/world/inventory/RemoteSlot$Synchronized
	f	Lwi$a;	b	hasher
	f	Ldcv;	c	remoteStack
	f	Lwj;	d	remoteHash
	m	(Lwi$a;)V	<init>	<init>
	m	(Ldcv;)V	a	force
	m	(Lwj;)V	a	receive
	m	(Ldcv;)Z	b	matches
	m	(Ldae$a;)V	a	copyFrom
c	daf	net/minecraft/world/inventory/ResultContainer
	f	Lju;	b	itemStacks
	f	Ldhr;	c	recipeUsed
	m	()V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	()V	a	clearContent
	m	(Ldhr;)V	a	setRecipeUsed
	m	()Ldhr;	d	getRecipeUsed
c	dag	net/minecraft/world/inventory/ResultSlot
	f	Lcze;	a	craftSlots
	f	Lcut;	b	player
	f	I	g	removeCount
	m	(Lcut;Lcze;Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(I)Ldcv;	a	remove
	m	(Ldcv;I)V	a	onQuickCraft
	m	(I)V	b	onSwapCraft
	m	(Ldcv;)V	c_	checkTakeAchievements
	m	(Ldha;)Lju;	a	copyAllInputItems
	m	(Ldha;Ldmu;)Lju;	a	getRemainingItems
	m	(Lcut;Ldcv;)V	a	onTake
	m	()Z	f	isFake
	m	(Ldha;)Lju;	b	lambda$getRemainingItems$1
	m	(Ldha;Ldhr;)Lju;	a	lambda$getRemainingItems$0
c	dah	net/minecraft/world/inventory/ShulkerBoxMenu
	f	I	m	CONTAINER_SIZE
	f	Lbxc;	n	container
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;)V	<init>	<init>
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
c	dai	net/minecraft/world/inventory/ShulkerBoxSlot
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
c	daj	net/minecraft/world/inventory/SimpleContainerData
	f	[I	a	ints
	m	(I)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	dak	net/minecraft/world/inventory/Slot
	f	I	a	slot
	f	Lbxc;	c	container
	f	I	d	index
	f	I	e	x
	f	I	f	y
	m	(Lbxc;III)V	<init>	<init>
	m	(Ldcv;Ldcv;)V	b	onQuickCraft
	m	(Ldcv;I)V	a	onQuickCraft
	m	(I)V	b	onSwapCraft
	m	(Ldcv;)V	c_	checkTakeAchievements
	m	(Lcut;Ldcv;)V	a	onTake
	m	(Ldcv;)Z	a	mayPlace
	m	()Ldcv;	g	getItem
	m	()Z	h	hasItem
	m	(Ldcv;)V	e	setByPlayer
	m	(Ldcv;Ldcv;)V	a	setByPlayer
	m	(Ldcv;)V	f	set
	m	()V	d	setChanged
	m	()I	a	getMaxStackSize
	m	(Ldcv;)I	b_	getMaxStackSize
	m	()Lame;	c	getNoItemIcon
	m	(I)Ldcv;	a	remove
	m	(Lcut;)Z	a	mayPickup
	m	()Z	b	isActive
	m	(IILcut;)Ljava/util/Optional;	a	tryRemove
	m	(IILcut;)Ldcv;	b	safeTake
	m	(Ldcv;)Ldcv;	d	safeInsert
	m	(Ldcv;I)Ldcv;	b	safeInsert
	m	(Lcut;)Z	b	allowModification
	m	()I	i	getContainerSlot
	m	()Z	e	isHighlightable
	m	()Z	f	isFake
	m	(Lcut;Ldcv;)V	b	lambda$safeTake$0
c	dal	net/minecraft/world/inventory/SlotRange
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	slots
	m	()I	b	size
	m	(Ljava/lang/String;Lit/unimi/dsi/fastutil/ints/IntList;)Ldal;	a	of
c	dal$1	net/minecraft/world/inventory/SlotRange$1
	f	Lit/unimi/dsi/fastutil/ints/IntList;	a	val$slots
	f	Ljava/lang/String;	b	val$name
	m	(Lit/unimi/dsi/fastutil/ints/IntList;Ljava/lang/String;)V	<init>	<init>
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	slots
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ljava/lang/String;	toString	toString
c	dam	net/minecraft/world/inventory/SlotRanges
	f	Ljava/util/List;	b	SLOTS
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Function;	c	NAME_LOOKUP
	m	()V	<init>	<init>
	m	(Ljava/lang/String;I)Ldal;	a	create
	m	(Ljava/lang/String;Lit/unimi/dsi/fastutil/ints/IntList;)Ldal;	a	create
	m	(Ljava/lang/String;[I)Ldal;	a	create
	m	(Ljava/util/List;Ljava/lang/String;I)V	a	addSingleSlot
	m	(Ljava/util/List;Ljava/lang/String;II)V	a	addSlotRange
	m	(Ljava/util/List;Ljava/lang/String;[I)V	a	addSlots
	m	(Ljava/lang/String;)Ldal;	a	nameToIds
	m	()Ljava/util/stream/Stream;	a	allNames
	m	()Ljava/util/stream/Stream;	b	singleSlotNames
	m	(Ldal;)Z	a	lambda$singleSlotNames$3
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$2
	m	()[Ldal;	c	lambda$static$1
	m	(Ljava/util/ArrayList;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dan	net/minecraft/world/inventory/SmithingMenu
	f	I	m	TEMPLATE_SLOT
	f	I	n	BASE_SLOT
	f	I	o	ADDITIONAL_SLOT
	f	I	p	RESULT_SLOT
	f	I	u	TEMPLATE_SLOT_X_PLACEMENT
	f	I	v	BASE_SLOT_X_PLACEMENT
	f	I	w	ADDITIONAL_SLOT_X_PLACEMENT
	f	I	y	RESULT_SLOT_X_PLACEMENT
	f	I	x	SLOT_Y_PLACEMENT
	f	Ldmu;	z	level
	f	Ldhv;	A	baseItemTest
	f	Ldhv;	B	templateItemTest
	f	Ldhv;	C	additionItemTest
	f	Lczg;	D	hasRecipeError
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	(ILcus;Lcyz;Ldmu;)V	<init>	<init>
	m	(Ldhn;)Lczr;	a	createInputSlotDefinitions
	m	(Leeb;)Z	a	isValidBlock
	m	(Lcut;Ldcv;)V	a	onTake
	m	()Ljava/util/List;	o	getRelevantItems
	m	()Ldii;	p	createRecipeInput
	m	(I)V	e	shrinkStackInSlot
	m	(Lbxc;)V	a	slotsChanged
	m	()V	l	createResult
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	(Ldcv;)Z	b	canMoveIntoInputSlots
	m	()Z	m	hasRecipeError
	m	()V	q	lambda$createResult$2
	m	(Ldii;Ldhr;)V	a	lambda$createResult$1
	m	(Ldmu;Ljb;)V	a	lambda$onTake$0
c	dao	net/minecraft/world/inventory/SmokerMenu
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lbxc;Lcyy;)V	<init>	<init>
c	dap	net/minecraft/world/inventory/StackedContentsCompatible
	m	(Lcuz;)V	fillStackedContents	fillStackedContents
c	daq	net/minecraft/world/inventory/StonecutterMenu
	f	I	m	INPUT_SLOT
	f	I	n	RESULT_SLOT
	f	I	r	INV_SLOT_START
	f	I	s	INV_SLOT_END
	f	I	t	USE_ROW_SLOT_START
	f	I	u	USE_ROW_SLOT_END
	f	Lcyz;	v	access
	f	Lczg;	w	selectedRecipeIndex
	f	Ldmu;	x	level
	f	Ldhz$b;	y	recipesForInput
	f	Ldcv;	z	input
	f	J	A	lastSoundTime
	f	Ldak;	o	inputSlot
	f	Ldak;	p	resultSlot
	f	Ljava/lang/Runnable;	B	slotUpdateListener
	f	Lbxc;	q	container
	f	Ldaf;	C	resultContainer
	m	(ILcus;)V	<init>	<init>
	m	(ILcus;Lcyz;)V	<init>	<init>
	m	()I	l	getSelectedRecipeIndex
	m	()Ldhz$b;	m	getVisibleRecipes
	m	()I	n	getNumberOfVisibleRecipes
	m	()Z	o	hasInputItem
	m	(Lcut;)Z	b	stillValid
	m	(Lcut;I)Z	a	clickMenuButton
	m	(I)Z	e	isValidRecipeIndex
	m	(Lbxc;)V	a	slotsChanged
	m	(Ldcv;)V	b	setupRecipeList
	m	(I)V	f	setupResultSlot
	m	()Lczv;	a	getType
	m	(Ljava/lang/Runnable;)V	a	registerUpdateListener
	m	(Ldcv;Ldak;)Z	a	canTakeItemForPickAll
	m	(Lcut;I)Ldcv;	b	quickMoveStack
	m	(Lcut;)V	a	removed
	m	(Lcut;Ldmu;Ljb;)V	a	lambda$removed$3
	m	()V	p	lambda$setupResultSlot$2
	m	(Ldhr;)V	a	lambda$setupResultSlot$1
	m	()V	q	lambda$new$0
c	daq$1	net/minecraft/world/inventory/StonecutterMenu$1
	f	Ldaq;	b	this$0
	m	(Ldaq;I)V	<init>	<init>
	m	()V	e	setChanged
c	daq$2	net/minecraft/world/inventory/StonecutterMenu$2
	f	Lcyz;	a	val$access
	f	Ldaq;	b	this$0
	m	(Ldaq;Lbxc;IIILcyz;)V	<init>	<init>
	m	(Ldcv;)Z	a	mayPlace
	m	(Lcut;Ldcv;)V	a	onTake
	m	()Ljava/util/List;	j	getRelevantItems
	m	(Ldmu;Ljb;)V	a	lambda$onTake$0
c	dar	net/minecraft/world/inventory/TransientCraftingContainer
	f	Lju;	b	items
	f	I	c	width
	f	I	d	height
	f	Lcym;	e	menu
	m	(Lcym;II)V	<init>	<init>
	m	(Lcym;IILju;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(II)Ldcv;	a	removeItem
	m	(ILdcv;)V	a	setItem
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	()V	a	clearContent
	m	()I	g	getHeight
	m	()I	ay_	getWidth
	m	()Ljava/util/List;	h	getItems
	m	(Lcuz;)V	fillStackedContents	fillStackedContents
c	das	net/minecraft/world/inventory/package-info
c	dat	net/minecraft/world/inventory/tooltip/BundleTooltip
	f	Ldey;	a	contents
	m	(Ldey;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldey;	a	contents
c	dau	net/minecraft/world/inventory/tooltip/TooltipComponent
c	dav	net/minecraft/world/inventory/tooltip/package-info
c	daw	net/minecraft/world/item/AdventureModePredicate
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lxo;	c	CAN_BREAK_HEADER
	f	Lxo;	d	CAN_PLACE_HEADER
	f	Lxo;	f	UNKNOWN_USE
	f	Ljava/util/List;	g	predicates
	f	Ljava/util/List;	h	cachedTooltip
	f	Leef;	i	lastCheckedBlock
	f	Z	j	lastResult
	f	Z	k	checksBlockEntity
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Leef;Leef;Z)Z	a	areSameBlocks
	m	(Leaz;Ljz;Lbci;)Lui;	a	saveBlockEntity
	m	(Leef;)Z	a	test
	m	()Ljava/util/List;	a	tooltip
	m	(Ljava/util/function/Consumer;)V	a	addToTooltip
	m	(Ljava/util/List;)Ljava/util/List;	a	computeTooltip
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Ljl;)Lxo;	a	lambda$computeTooltip$3
	m	(Laz;)Ljava/util/stream/Stream;	a	lambda$computeTooltip$2
	m	(Ldaw;)Ljava/util/List;	a	lambda$static$1
	m	(Ldaw;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dax	net/minecraft/world/item/AirItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldcv;)Lxo;	a	getName
c	day	net/minecraft/world/item/ArmorStandItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
c	daz	net/minecraft/world/item/ArrowItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Ldcv;Lcam;Ldcv;)Lcvb;	a	createArrow
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
c	dba	net/minecraft/world/item/AxeItem
	f	Ljava/util/Map;	a	STRIPPABLES
	m	(Ldej;FFLdcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldgq;)Z	b	playerHasBlockingItemUseIntent
	m	(Ldmu;Ljb;Lcut;Leeb;)Ljava/util/Optional;	a	evaluateNewBlockState
	m	(Leeb;)Ljava/util/Optional;	a	getStripped
	m	(Leeb;Ldpz;)Leeb;	a	lambda$getStripped$1
	m	(Leeb;Ldpz;)Leeb;	b	lambda$evaluateNewBlockState$0
	m	()V	<clinit>	<clinit>
c	dbb	net/minecraft/world/item/BannerItem
	m	(Ldpz;Ldpz;Ldcr$a;)V	<init>	<init>
	m	()Ldbt;	a	getColor
c	dbc	net/minecraft/world/item/BedItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgo;Leeb;)Z	a	placeBlock
c	dbd	net/minecraft/world/item/BlockItem
	f	Ldpz;	a	block
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldgo;)Lbxj;	a	place
	m	(Leeb;)Layy;	a	getPlaceSound
	m	(Ldgo;)Ldgo;	b	updatePlacementContext
	m	(Ldmu;Ljb;Ldcv;)V	a	updateBlockEntityComponents
	m	(Ljb;Ldmu;Lcut;Ldcv;Leeb;)Z	a	updateCustomBlockEntityTag
	m	(Ldgo;)Leeb;	c	getPlacementState
	m	(Ljb;Ldmu;Ldcv;Leeb;)Leeb;	a	updateBlockStateFromTag
	m	(Ldgo;Leeb;)Z	b	canPlace
	m	()Z	b	mustSurvive
	m	(Ldgo;Leeb;)Z	a	placeBlock
	m	(Ldmu;Lcut;Ljb;Ldcv;)Z	a	updateCustomBlockEntityTag
	m	(Ldcv;Lcut;)Z	a	shouldPrintOpWarning
	m	()Ldpz;	c	getBlock
	m	(Ljava/util/Map;Ldcr;)V	a	registerBlocks
	m	()Z	d	canFitInsideContainerItems
	m	(Lcqz;)V	a	onDestroyed
	m	(Ldcv;Lebb;Lfcz;)V	a	setBlockEntityData
	m	()Lcyd;	k	requiredFeatures
c	dbe	net/minecraft/world/item/BoatItem
	f	Lbzv;	a	entityType
	m	(Lbzv;Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Lfiq;Ldcv;Lcut;)Lcxe;	a	getBoat
c	dbf	net/minecraft/world/item/BoneMealItem
	f	I	a	GRASS_SPREAD_WIDTH
	f	I	b	GRASS_SPREAD_HEIGHT
	f	I	c	GRASS_COUNT_MULTIPLIER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;Ldmu;Ljb;)Z	a	growCrop
	m	(Ldcv;Ldmu;Ljb;Ljh;)Z	a	growWaterPlant
	m	(Ldmv;Ljb;I)V	a	addGrowthParticles
	m	(Leea$a;)Z	a	lambda$growWaterPlant$2
	m	(Ljl;)Leeb;	a	lambda$growWaterPlant$1
	m	(Ljl;)Leeb;	b	lambda$growWaterPlant$0
c	dbf$1	net/minecraft/world/item/BoneMealItem$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$BonemealableBlock$Type
	m	()V	<clinit>	<clinit>
c	dbg	net/minecraft/world/item/BottleItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldcv;Lcut;Ldcv;)Ldcv;	a	turnBottleIntoItem
	m	(Lbze;)Z	a	lambda$use$0
c	dbh	net/minecraft/world/item/BowItem
	f	I	a	MAX_DRAW_DURATION
	f	I	b	DEFAULT_RANGE
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Ldmu;Lcam;I)Z	a	releaseUsing
	m	(Lcam;Lcvo;IFFFLcam;)V	a	shootProjectile
	m	(I)F	a	getPowerForTime
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	()Ljava/util/function/Predicate;	a	getAllSupportedProjectiles
	m	()I	b	getDefaultProjectileRange
c	dbi	net/minecraft/world/item/BrushItem
	f	I	a	ANIMATION_DURATION
	f	I	b	USE_DURATION
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldmu;Lcam;Ldcv;I)V	a	onUseTick
	m	(Lcut;)Lfiq;	a	calculateHitResult
	m	(Ldmu;Lfio;Leeb;Lfis;Lcad;)V	a	spawnDustParticles
c	dbi$1	net/minecraft/world/item/BrushItem$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	dbi$a	net/minecraft/world/item/BrushItem$DustParticlesDelta
	f	D	a	xd
	f	D	b	yd
	f	D	c	zd
	f	D	d	ALONG_SIDE_DELTA
	f	D	e	OUT_FROM_SIDE_DELTA
	m	(DDD)V	<init>	<init>
	m	(Lfis;Ljh;)Ldbi$a;	a	fromDirection
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	a	xd
	m	()D	b	yd
	m	()D	c	zd
c	dbj	net/minecraft/world/item/BucketItem
	f	Lfak;	a	content
	m	(Lfak;Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldcv;Lcut;)Ldcv;	b	getEmptySuccessItem
	m	(Lcam;Ldmu;Ldcv;Ljb;)V	a	checkExtraContent
	m	(Lcam;Ldmu;Ljb;Lfio;)Z	a	emptyContents
	m	(Lcam;Ldmv;Ljb;)V	a	playEmptySound
	m	(Lcut;Layy;)V	a	lambda$use$0
c	dbk	net/minecraft/world/item/BundleItem
	f	I	a	MAX_SHOWN_GRID_ITEMS_X
	f	I	b	MAX_SHOWN_GRID_ITEMS_Y
	f	I	c	MAX_SHOWN_GRID_ITEMS
	f	I	d	OVERFLOWING_MAX_SHOWN_GRID_ITEMS
	f	I	o	FULL_BAR_COLOR
	f	I	p	BAR_COLOR
	f	I	q	TICKS_AFTER_FIRST_THROW
	f	I	r	TICKS_BETWEEN_THROWS
	f	I	s	TICKS_MAX_THROW_DURATION
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;)F	c	getFullnessDisplay
	m	(Ldcv;Ldak;Lcyw;Lcut;)Z	a	overrideStackedOnOther
	m	(Ldcv;Ldcv;Ldak;Lcyw;Lcut;Lcbd;)Z	a	overrideOtherStackedOnMe
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Lcut;Ldcv;)V	a	dropContent
	m	(Ldcv;)Z	d	isBarVisible
	m	(Ldcv;)I	e	getBarWidth
	m	(Ldcv;)I	f	getBarColor
	m	(Ldcv;I)V	a	toggleSelectedItem
	m	(Ldcv;)Z	g	hasSelectedItem
	m	(Ldcv;)I	h	getSelectedItem
	m	(Ldcv;)Ldcv;	i	getSelectedItemStack
	m	(Ldcv;)I	j	getNumberOfItemsToShow
	m	(Ldcv;Lcut;)Z	b	dropContent
	m	(Ldcv;Lcut;Ldey;)Ljava/util/Optional;	a	removeOneItemFromBundle
	m	(Ldmu;Lcam;Ldcv;I)V	a	onUseTick
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldcv;)Ljava/util/Optional;	k	getTooltipImage
	m	(Lcqz;)V	a	onDestroyed
	m	()Ljava/util/List;	a	getAllBundleItemColors
	m	(Ldbt;)Ldcr;	a	getByColor
	m	(Lbzm;)V	a	playRemoveOneSound
	m	(Lbzm;)V	b	playInsertSound
	m	(Lbzm;)V	c	playInsertFailSound
	m	(Ldmu;Lbzm;)V	a	playDropContentsSound
	m	(Lcut;)V	a	broadcastChangesOnContainerMenu
	m	(Ldcr;)Ldbk;	b	lambda$getAllBundleItemColors$0
	m	()V	<clinit>	<clinit>
c	dbk$1	net/minecraft/world/item/BundleItem$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
	m	()V	<clinit>	<clinit>
c	dbl	net/minecraft/world/item/CompassItem
	f	Lxo;	a	LODESTONE_COMPASS_NAME
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;)Z	d_	isFoil
	m	(Ldcv;Laub;Lbzm;Lbzw;)V	a	inventoryTick
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;)Lxo;	a	getName
	m	()V	<clinit>	<clinit>
c	dbm	net/minecraft/world/item/CreativeModeTab
	f	Lame;	a	DEFAULT_BACKGROUND
	f	Lxo;	b	displayName
	f	Lame;	c	backgroundTexture
	f	Z	d	canScroll
	f	Z	e	showTitle
	f	Z	f	alignedRight
	f	Ldbm$f;	g	row
	f	I	h	column
	f	Ldbm$h;	i	type
	f	Ldcv;	j	iconItemStack
	f	Ljava/util/Collection;	k	displayItems
	f	Ljava/util/Set;	l	displayItemsSearchTab
	f	Ljava/util/function/Supplier;	m	iconGenerator
	f	Ldbm$b;	n	displayItemsGenerator
	m	(Ldbm$f;ILdbm$h;Lxo;Ljava/util/function/Supplier;Ldbm$b;)V	<init>	<init>
	m	(Ljava/lang/String;)Lame;	a	createTextureLocation
	m	(Ldbm$f;I)Ldbm$a;	a	builder
	m	()Lxo;	a	getDisplayName
	m	()Ldcv;	b	getIconItem
	m	()Lame;	c	getBackgroundTexture
	m	()Z	d	showTitle
	m	()Z	e	canScroll
	m	()I	f	column
	m	()Ldbm$f;	g	row
	m	()Z	h	hasAnyItems
	m	()Z	i	shouldDisplay
	m	()Z	j	isAlignedRight
	m	()Ldbm$h;	k	getType
	m	(Ldbm$d;)V	a	buildContents
	m	()Ljava/util/Collection;	l	getDisplayItems
	m	()Ljava/util/Collection;	m	getSearchTabDisplayItems
	m	(Ldcv;)Z	a	contains
	m	()Ljava/lang/IllegalStateException;	n	lambda$buildContents$0
	m	()V	<clinit>	<clinit>
c	dbm$a	net/minecraft/world/item/CreativeModeTab$Builder
	f	Ldbm$b;	a	EMPTY_GENERATOR
	f	Ldbm$f;	b	row
	f	I	c	column
	f	Lxo;	d	displayName
	f	Ljava/util/function/Supplier;	e	iconGenerator
	f	Ldbm$b;	f	displayItemsGenerator
	f	Z	g	canScroll
	f	Z	h	showTitle
	f	Z	i	alignedRight
	f	Ldbm$h;	j	type
	f	Lame;	k	backgroundTexture
	m	(Ldbm$f;I)V	<init>	<init>
	m	(Lxo;)Ldbm$a;	a	title
	m	(Ljava/util/function/Supplier;)Ldbm$a;	a	icon
	m	(Ldbm$b;)Ldbm$a;	a	displayItems
	m	()Ldbm$a;	a	alignedRight
	m	()Ldbm$a;	b	hideTitle
	m	()Ldbm$a;	c	noScrollBar
	m	(Ldbm$h;)Ldbm$a;	a	type
	m	(Lame;)Ldbm$a;	a	backgroundTexture
	m	()Ldbm;	d	build
	m	()Ldcv;	e	lambda$new$1
	m	(Ldbm$d;Ldbm$e;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dbm$b	net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator
	m	(Ldbm$d;Ldbm$e;)V	accept	accept
c	dbm$c	net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder
	f	Ljava/util/Collection;	a	tabContents
	f	Ljava/util/Set;	b	searchTabContents
	f	Ldbm;	c	tab
	f	Lcyd;	d	featureFlagSet
	m	(Ldbm;Lcyd;)V	<init>	<init>
	m	(Ldcv;Ldbm$g;)V	a	accept
c	dbm$d	net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters
	f	Lcyd;	a	enabledFeatures
	f	Z	b	hasPermissions
	f	Ljn$a;	c	holders
	m	(Lcyd;ZLjn$a;)V	<init>	<init>
	m	(Lcyd;ZLjn$a;)Z	a	needsUpdate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcyd;	a	enabledFeatures
	m	()Z	b	hasPermissions
	m	()Ljn$a;	c	holders
c	dbm$e	net/minecraft/world/item/CreativeModeTab$Output
	m	(Ldcv;Ldbm$g;)V	a	accept
	m	(Ldcv;)V	a	accept
	m	(Ldmt;Ldbm$g;)V	a	accept
	m	(Ldmt;)V	a	accept
	m	(Ljava/util/Collection;Ldbm$g;)V	a	acceptAll
	m	(Ljava/util/Collection;)V	a	acceptAll
	m	(Ldbm$g;Ldcv;)V	a	lambda$acceptAll$0
c	dbm$f	net/minecraft/world/item/CreativeModeTab$Row
	f	Ldbm$f;	a	TOP
	f	Ldbm$f;	b	BOTTOM
	f	[Ldbm$f;	c	$VALUES
	m	()[Ldbm$f;	values	values
	m	(Ljava/lang/String;)Ldbm$f;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldbm$f;	a	$values
	m	()V	<clinit>	<clinit>
c	dbm$g	net/minecraft/world/item/CreativeModeTab$TabVisibility
	f	Ldbm$g;	a	PARENT_AND_SEARCH_TABS
	f	Ldbm$g;	b	PARENT_TAB_ONLY
	f	Ldbm$g;	c	SEARCH_TAB_ONLY
	f	[Ldbm$g;	d	$VALUES
	m	()[Ldbm$g;	values	values
	m	(Ljava/lang/String;)Ldbm$g;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldbm$g;	a	$values
	m	()V	<clinit>	<clinit>
c	dbm$h	net/minecraft/world/item/CreativeModeTab$Type
	f	Ldbm$h;	a	CATEGORY
	f	Ldbm$h;	b	INVENTORY
	f	Ldbm$h;	c	HOTBAR
	f	Ldbm$h;	d	SEARCH
	f	[Ldbm$h;	e	$VALUES
	m	()[Ldbm$h;	values	values
	m	(Ljava/lang/String;)Ldbm$h;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldbm$h;	a	$values
	m	()V	<clinit>	<clinit>
c	dbn	net/minecraft/world/item/CreativeModeTabs
	f	Lame;	a	INVENTORY_BACKGROUND
	f	Lame;	b	SEARCH_BACKGROUND
	f	Lamd;	c	BUILDING_BLOCKS
	f	Lamd;	d	COLORED_BLOCKS
	f	Lamd;	e	NATURAL_BLOCKS
	f	Lamd;	f	FUNCTIONAL_BLOCKS
	f	Lamd;	g	REDSTONE_BLOCKS
	f	Lamd;	h	HOTBAR
	f	Lamd;	i	SEARCH
	f	Lamd;	j	TOOLS_AND_UTILITIES
	f	Lamd;	k	COMBAT
	f	Lamd;	l	FOOD_AND_DRINKS
	f	Lamd;	m	INGREDIENTS
	f	Lamd;	n	SPAWN_EGGS
	f	Lamd;	o	OP_BLOCKS
	f	Lamd;	p	INVENTORY
	f	Ljava/util/Comparator;	q	PAINTING_COMPARATOR
	f	Ldbm$d;	r	CACHED_PARAMETERS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljy;)Ldbm;	a	bootstrap
	m	()V	a	validate
	m	()Ldbm;	b	getDefaultTab
	m	(Ldbm$e;Ljn;Ldcr;Ldbm$g;Lcyd;)V	a	generatePotionEffectTypes
	m	(Ldbm$e;Ljn;Ldbm$g;)V	a	generateEnchantmentBookTypesOnlyMaxLevel
	m	(Ldbm$e;Ljn;Ldbm$g;)V	b	generateEnchantmentBookTypesAllLevels
	m	(Ldbm$e;Ljn;Ldcr;Lbae;Ldbm$g;)V	a	generateInstrumentTypes
	m	(Ldbm$e;Ldbm$g;)V	a	generateSuspiciousStews
	m	(Ldbm$e;Ldbm$g;)V	b	generateOminousBottles
	m	(Ldbm$e;Ldbm$g;)V	c	generateFireworksAllDurations
	m	(Ldbm$e;Ljn$a;Ljn$b;Ljava/util/function/Predicate;Ldbm$g;)V	a	generatePresetPaintings
	m	()Ljava/util/List;	c	tabs
	m	()Ljava/util/List;	d	allTabs
	m	()Ljava/util/stream/Stream;	f	streamAllTabs
	m	()Ldbm;	e	searchTab
	m	(Ldbm$d;)V	a	buildAllTabContents
	m	(Lcyd;ZLjn$a;)Z	a	tryRebuildTabContents
	m	(Ldbm$d;Ldbm;)V	a	lambda$buildAllTabContents$49
	m	(Ldbm;)Z	a	lambda$buildAllTabContents$48
	m	(Ldbm$d;Ldbm;)V	b	lambda$buildAllTabContents$47
	m	(Ldbm;)Z	b	lambda$buildAllTabContents$46
	m	(Ldbm$e;Ldbm$g;Ljl$c;)V	a	lambda$generatePresetPaintings$45
	m	(Ldcr;Ldbm$e;Ldbm$g;Ljp$c;)V	a	lambda$generateInstrumentTypes$44
	m	(Ldbm$e;Ldbm$g;Ldcv;)V	a	lambda$generateInstrumentTypes$43
	m	(Ldcr;Ljl;)Ldcv;	a	lambda$generateInstrumentTypes$42
	m	(Ldbm$e;Ldbm$g;Ldcv;)V	b	lambda$generateEnchantmentBookTypesAllLevels$41
	m	(Ljl$c;)Ljava/util/stream/Stream;	a	lambda$generateEnchantmentBookTypesAllLevels$40
	m	(Ljl$c;I)Ldcv;	a	lambda$generateEnchantmentBookTypesAllLevels$39
	m	(Ldbm$e;Ldbm$g;Ldcv;)V	c	lambda$generateEnchantmentBookTypesOnlyMaxLevel$38
	m	(Ljl$c;)Ldcv;	b	lambda$generateEnchantmentBookTypesOnlyMaxLevel$37
	m	(Ldbm$e;Ldbm$g;Ldcv;)V	d	lambda$generatePotionEffectTypes$36
	m	(Ldcr;Ljl$c;)Ldcv;	a	lambda$generatePotionEffectTypes$35
	m	(Lcyd;Ljl$c;)Z	a	lambda$generatePotionEffectTypes$34
	m	()Ldcv;	g	lambda$bootstrap$33
	m	(Ldbm$d;Ldbm$e;)V	a	lambda$bootstrap$32
	m	(Ldbm$e;Ldbm$d;Ljn$b;)V	a	lambda$bootstrap$31
	m	(Ljl;)Z	a	lambda$bootstrap$30
	m	()Ldcv;	h	lambda$bootstrap$29
	m	(Ldbm$d;Ldbm$e;)V	b	lambda$bootstrap$28
	m	()Ldcv;	i	lambda$bootstrap$27
	m	(Ldbm$d;Ldbm$e;)V	c	lambda$bootstrap$26
	m	(Ldbm$e;Ljn$b;)V	a	lambda$bootstrap$25
	m	()Ldcv;	j	lambda$bootstrap$24
	m	(Ldbm$d;Ldbm$e;)V	d	lambda$bootstrap$23
	m	(Ldbm$e;Ldbm$d;Ljn$b;)V	b	lambda$bootstrap$22
	m	()Ldcv;	k	lambda$bootstrap$21
	m	(Ldbm$d;Ldbm$e;)V	e	lambda$bootstrap$20
	m	(Ldbm$e;Ldbm$d;Ljn$b;)V	c	lambda$bootstrap$19
	m	()Ldcv;	l	lambda$bootstrap$18
	m	(Ldbm$d;Ldbm$e;)V	f	lambda$bootstrap$17
	m	(Ldbm$e;Ljn$b;)V	b	lambda$bootstrap$16
	m	()Ldcv;	m	lambda$bootstrap$15
	m	(Ljy;Ldbm$d;Ldbm$e;)V	a	lambda$bootstrap$14
	m	()Ldcv;	n	lambda$bootstrap$13
	m	()Ldcv;	o	lambda$bootstrap$12
	m	(Ldbm$d;Ldbm$e;)V	g	lambda$bootstrap$11
	m	()Ldcv;	p	lambda$bootstrap$10
	m	(Ldbm$d;Ldbm$e;)V	h	lambda$bootstrap$9
	m	(Ldbm$e;Ldbm$d;Ljn$b;)V	d	lambda$bootstrap$8
	m	(Ljl;)Z	b	lambda$bootstrap$7
	m	()Ldcv;	q	lambda$bootstrap$6
	m	(Ldbm$d;Ldbm$e;)V	i	lambda$bootstrap$5
	m	()Ldcv;	r	lambda$bootstrap$4
	m	(Ldbm$d;Ldbm$e;)V	j	lambda$bootstrap$3
	m	()Ldcv;	s	lambda$bootstrap$2
	m	(Ldbm$d;Ldbm$e;)V	k	lambda$bootstrap$1
	m	()Ldcv;	t	lambda$bootstrap$0
	m	()V	<clinit>	<clinit>
c	dbo	net/minecraft/world/item/CrossbowItem
	f	F	o	MAX_CHARGE_DURATION
	f	I	a	DEFAULT_RANGE
	f	Z	p	startSoundPlayed
	f	Z	q	midLoadSoundPlayed
	f	F	r	START_SOUND_PERCENT
	f	F	s	MID_SOUND_PERCENT
	f	F	t	ARROW_POWER
	f	F	u	FIREWORK_POWER
	f	F	b	MOB_ARROW_POWER
	f	Ldbo$b;	v	DEFAULT_SOUNDS
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ljava/util/function/Predicate;	c	getSupportedHeldProjectiles
	m	()Ljava/util/function/Predicate;	a	getAllSupportedProjectiles
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldez;)F	a	getShootingPower
	m	(Ldcv;Ldmu;Lcam;I)Z	a	releaseUsing
	m	(Lcam;Ldcv;)Z	a	tryLoadProjectiles
	m	(Ldcv;)Z	g	isCharged
	m	(Lcam;Lcvo;IFFFLcam;)V	a	shootProjectile
	m	(Lcam;Lfis;F)Lorg/joml/Vector3f;	a	getProjectileShotVector
	m	(Ldmu;Lcam;Ldcv;Ldcv;Z)Lcvo;	a	createProjectile
	m	(Ldcv;)I	h	getDurabilityUse
	m	(Ldmu;Lcam;Lbxi;Ldcv;FFLcam;)V	a	performShooting
	m	(Lbck;I)F	a	getShotPitch
	m	(ZLbck;)F	a	getRandomShotPitch
	m	(Ldmu;Lcam;Ldcv;I)V	a	onUseTick
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;Lcam;)I	b	getChargeDuration
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldcv;)Ldbo$b;	i	getChargingSounds
	m	(ILdcv;Lcam;)F	a	getPowerForTime
	m	(Ldcv;)Z	e_	useOnRelease
	m	()I	b	getDefaultProjectileRange
	m	(Ldmu;Lcam;Ljl;)V	a	lambda$onUseTick$2
	m	(Ldmu;Lcam;Ljl;)V	b	lambda$onUseTick$1
	m	(Ldmu;Lcam;Ljl;)V	c	lambda$onUseTick$0
	m	()V	<clinit>	<clinit>
c	dbo$a	net/minecraft/world/item/CrossbowItem$ChargeType
	f	Ldbo$a;	a	NONE
	f	Ldbo$a;	b	ARROW
	f	Ldbo$a;	c	ROCKET
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Ldbo$a;	f	$VALUES
	m	()[Ldbo$a;	values	values
	m	(Ljava/lang/String;)Ldbo$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldbo$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dbo$b	net/minecraft/world/item/CrossbowItem$ChargingSounds
	f	Ljava/util/Optional;	b	start
	f	Ljava/util/Optional;	c	mid
	f	Ljava/util/Optional;	d	end
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	start
	m	()Ljava/util/Optional;	b	mid
	m	()Ljava/util/Optional;	c	end
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dbp	net/minecraft/world/item/DebugStickItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcam;)Z	a	canDestroyBlock
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Lcut;Leeb;Ldmv;Ljb;ZLdcv;)Z	a	handleInteraction
	m	(Leeb;Lefe;Z)Leeb;	a	cycleState
	m	(Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object;	a	getRelative
	m	(Lcut;Lxo;)V	a	message
	m	(Leeb;Lefe;)Ljava/lang/String;	a	getNameHelper
c	dbq	net/minecraft/world/item/DiscFragmentItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Ldcr$b;Ldfz;Ljava/util/function/Consumer;Ldek;)V	a	appendHoverText
	m	()Lyc;	a	getDisplayName
c	dbr	net/minecraft/world/item/DispensibleContainerItem
	m	(Lcam;Ldmu;Ldcv;Ljb;)V	a	checkExtraContent
	m	(Lcam;Ldmu;Ljb;Lfio;)Z	a	emptyContents
c	dbs	net/minecraft/world/item/DoubleHighBlockItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgo;Leeb;)Z	a	placeBlock
c	dbt	net/minecraft/world/item/DyeColor
	f	Ldbt;	a	WHITE
	f	Ldbt;	b	ORANGE
	f	Ldbt;	c	MAGENTA
	f	Ldbt;	d	LIGHT_BLUE
	f	Ldbt;	e	YELLOW
	f	Ldbt;	f	LIME
	f	Ldbt;	g	PINK
	f	Ldbt;	h	GRAY
	f	Ldbt;	i	LIGHT_GRAY
	f	Ldbt;	j	CYAN
	f	Ldbt;	k	PURPLE
	f	Ldbt;	l	BLUE
	f	Ldbt;	m	BROWN
	f	Ldbt;	n	GREEN
	f	Ldbt;	o	RED
	f	Ldbt;	p	BLACK
	f	Ljava/util/function/IntFunction;	t	BY_ID
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;	u	BY_FIREWORK_COLOR
	f	Lbda$a;	q	CODEC
	f	Lzm;	r	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	s	LEGACY_ID_CODEC
	f	I	v	id
	f	Ljava/lang/String;	w	name
	f	Lfap;	x	mapColor
	f	I	y	textureDiffuseColor
	f	I	z	fireworkColor
	f	I	A	textColor
	f	[Ldbt;	B	$VALUES
	m	()[Ldbt;	values	values
	m	(Ljava/lang/String;)Ldbt;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;ILfap;II)V	<init>	<init>
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getName
	m	()I	d	getTextureDiffuseColor
	m	()Lfap;	e	getMapColor
	m	()I	f	getFireworkColor
	m	()I	g	getTextColor
	m	(I)Ldbt;	a	byId
	m	(Ljava/lang/String;Ldbt;)Ldbt;	a	byName
	m	(I)Ldbt;	b	byFireworkColor
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Laub;Ldbt;Ldbt;)Ldbt;	a	getMixedColor
	m	(Ldbt;Ldbt;)Ldha;	a	makeCraftColorInput
	m	(Laub;Ldbt;Ldbt;)Ldbt;	b	lambda$getMixedColor$4
	m	(Ldha;Laub;Ldhr;)Ldcv;	a	lambda$getMixedColor$3
	m	(Ldbt;)Ljava/lang/Byte;	a	lambda$static$2
	m	(Ldbt;)Ldbt;	b	lambda$static$1
	m	(Ldbt;)Ljava/lang/Integer;	c	lambda$static$0
	m	()[Ldbt;	h	$values
	m	()V	<clinit>	<clinit>
c	dbu	net/minecraft/world/item/DyeItem
	f	Ljava/util/Map;	a	ITEM_BY_COLOR
	f	Ldbt;	b	dyeColor
	m	(Ldbt;Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Lcut;Lcam;Lbxi;)Lbxj;	a	interactLivingEntity
	m	()Ldbt;	a	getDyeColor
	m	(Ldbt;)Ldbu;	a	byColor
	m	(Ldmu;Lecn;ZLcut;)Z	a	tryApplyToSign
	m	(Leco;)Leco;	a	lambda$tryApplyToSign$0
	m	()V	<clinit>	<clinit>
c	dbv	net/minecraft/world/item/EggItem
	f	F	a	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
c	dbw	net/minecraft/world/item/EitherHolder
	f	Lcom/mojang/datafixers/util/Either;	a	contents
	m	(Ljl;)V	<init>	<init>
	m	(Lamd;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
	m	(Lamd;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lamd;Lzm;)Lzm;	a	streamCodec
	m	(Ljy;)Ljava/util/Optional;	a	unwrap
	m	(Ljn$a;)Ljava/util/Optional;	a	unwrap
	m	()Ljava/util/Optional;	a	key
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/datafixers/util/Either;	b	contents
	m	(Ljn$a;Lamd;)Ljava/util/Optional;	a	lambda$unwrap$4
	m	(Ljl$c;)Ljl;	a	lambda$unwrap$3
	m	(Ljl;)Ljava/util/Optional;	a	lambda$unwrap$2
	m	(Lamd;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$1
	m	()Ljava/lang/String;	c	lambda$codec$0
c	dbx	net/minecraft/world/item/EmptyMapItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	dby	net/minecraft/world/item/EndCrystalItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
c	dbz	net/minecraft/world/item/EnderEyeItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	dca	net/minecraft/world/item/EnderpearlItem
	f	F	a	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	()V	<clinit>	<clinit>
c	dcb	net/minecraft/world/item/ExperienceBottleItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	()Lddp$a;	a	createDispenseConfig
c	dcc	net/minecraft/world/item/FireChargeItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldmu;Ljb;)V	a	playSound
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	(Lcvo;DDDFF)V	a	shoot
	m	()Lddp$a;	a	createDispenseConfig
	m	(Llk;Ljh;)Ljv;	a	lambda$createDispenseConfig$0
c	dcd	net/minecraft/world/item/FireworkRocketItem
	f	[B	a	CRAFTABLE_DURATIONS
	f	D	b	ROCKET_PLACEMENT_OFFSET
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	()Lddp$a;	a	createDispenseConfig
	m	(Llk;Ljh;)Lfis;	a	getEntityJustOutsideOfBlockPos
	m	()V	<clinit>	<clinit>
c	dce	net/minecraft/world/item/FishingRodItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	dcf	net/minecraft/world/item/FlintAndSteelItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
c	dcg	net/minecraft/world/item/FoodOnAStickItem
	f	Lbzv;	a	canInteractWith
	f	I	b	consumeItemDamage
	m	(Lbzv;ILdcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	dch	net/minecraft/world/item/GameMasterBlockItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgo;)Leeb;	c	getPlacementState
c	dci	net/minecraft/world/item/GlowInkSacItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lecn;ZLcut;)Z	a	tryApplyToSign
	m	(Leco;)Leco;	a	lambda$tryApplyToSign$0
c	dcj	net/minecraft/world/item/HangingEntityItem
	f	Lxo;	a	TOOLTIP_RANDOM_VARIANT
	f	Lbzv;	b	type
	m	(Lbzv;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Lcut;Ljh;Ldcv;Ljb;)Z	a	mayPlace
	m	(Ldcv;Ldcr$b;Ldfz;Ljava/util/function/Consumer;Ldek;)V	a	appendHoverText
	m	()V	<clinit>	<clinit>
c	dck	net/minecraft/world/item/HangingSignItem
	m	(Ldpz;Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldmx;Leeb;Ljb;)Z	a	canPlace
c	dcl	net/minecraft/world/item/HoeItem
	f	Ljava/util/Map;	a	TILLABLES
	m	(Ldej;FFLdcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Leeb;)Ljava/util/function/Consumer;	a	changeIntoState
	m	(Leeb;Ldmt;)Ljava/util/function/Consumer;	a	changeIntoStateAndDropItem
	m	(Ldgq;)Z	b	onlyIfAirAbove
	m	(Leeb;Ldmt;Ldgq;)V	a	lambda$changeIntoStateAndDropItem$2
	m	(Leeb;Ldgq;)V	a	lambda$changeIntoState$1
	m	(Ldgq;)Z	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcm	net/minecraft/world/item/HoneycombItem
	f	Ljava/util/function/Supplier;	a	WAXABLES
	f	Ljava/util/function/Supplier;	b	WAX_OFF_BY_BLOCK
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Leeb;)Ljava/util/Optional;	a	getWaxed
	m	(Ldmu;Lecn;ZLcut;)Z	a	tryApplyToSign
	m	(Leco;Lcut;)Z	a	canApplyToSign
	m	(Leeb;Ldpz;)Leeb;	a	lambda$getWaxed$3
	m	(Ldgq;Ljb;Ldmu;Leeb;)Lbxj;	a	lambda$useOn$2
	m	()Lcom/google/common/collect/BiMap;	a	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcn	net/minecraft/world/item/InkSacItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lecn;ZLcut;)Z	a	tryApplyToSign
	m	(Leco;)Leco;	a	lambda$tryApplyToSign$0
c	dco	net/minecraft/world/item/Instrument
	f	Ljl;	e	soundEvent
	f	F	f	useDuration
	f	F	g	range
	f	Lxo;	h	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljl;FFLxo;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	soundEvent
	m	()F	b	useDuration
	m	()F	c	range
	m	()Lxo;	d	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcp	net/minecraft/world/item/InstrumentItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcr;Ljl;)Ldcv;	a	create
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;Ljn$a;)Ljava/util/Optional;	a	getInstrument
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldmu;Lcut;Ldco;)V	a	play
	m	(Ljl;)Ljava/lang/Integer;	a	lambda$getUseDuration$0
c	dcq	net/minecraft/world/item/Instruments
	f	I	a	GOAT_HORN_RANGE_BLOCKS
	f	F	b	GOAT_HORN_DURATION
	f	Lamd;	c	PONDER_GOAT_HORN
	f	Lamd;	d	SING_GOAT_HORN
	f	Lamd;	e	SEEK_GOAT_HORN
	f	Lamd;	f	FEEL_GOAT_HORN
	f	Lamd;	g	ADMIRE_GOAT_HORN
	f	Lamd;	h	CALL_GOAT_HORN
	f	Lamd;	i	YEARN_GOAT_HORN
	f	Lamd;	j	DREAM_GOAT_HORN
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Ljl;FF)V	a	register
	m	()V	<clinit>	<clinit>
c	dcr	net/minecraft/world/item/Item
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lzm;	f	STREAM_CODEC
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	g	BY_BLOCK
	f	Lame;	h	BASE_ATTACK_DAMAGE_ID
	f	Lame;	i	BASE_ATTACK_SPEED_ID
	f	I	j	DEFAULT_MAX_STACK_SIZE
	f	I	k	ABSOLUTE_MAX_STACK_SIZE
	f	I	l	MAX_BAR_WIDTH
	f	I	m	APPROXIMATELY_INFINITE_USE_DURATION
	f	Ljl$c;	b	builtInRegistryHolder
	f	Lkn;	c	components
	f	Ldcr;	d	craftingRemainingItem
	f	Ljava/lang/String;	n	descriptionId
	f	Lcyd;	o	requiredFeatures
	m	(Ldcr;)I	a	getId
	m	(I)Ldcr;	b	byId
	m	(Ldpz;)Ldcr;	a	byBlock
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ljl$c;	e	builtInRegistryHolder
	m	()Lkn;	f	components
	m	()I	g	getDefaultMaxStackSize
	m	(Ldmu;Lcam;Ldcv;I)V	a	onUseTick
	m	(Lcqz;)V	a	onDestroyed
	m	(Ldcv;)V	l	verifyComponentsAfterLoad
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcam;)Z	a	canDestroyBlock
	m	()Ldcr;	h	asItem
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;Leeb;)F	a	getDestroySpeed
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldcv;Ldmu;Lcam;)Ldcv;	a	finishUsingItem
	m	(Ldcv;)Z	d	isBarVisible
	m	(Ldcv;)I	e	getBarWidth
	m	(Ldcv;)I	f	getBarColor
	m	(Ldcv;Ldak;Lcyw;Lcut;)Z	a	overrideStackedOnOther
	m	(Ldcv;Ldcv;Ldak;Lcyw;Lcut;Lcbd;)Z	a	overrideOtherStackedOnMe
	m	(Lbzm;FLbyb;)F	a	getAttackDamageBonus
	m	(Lcam;)Lbyb;	a	getDamageSource
	m	(Ldcv;Lcam;Lcam;)V	a	hurtEnemy
	m	(Ldcv;Lcam;Lcam;)V	b	postHurtEnemy
	m	(Ldcv;Ldmu;Leeb;Ljb;Lcam;)Z	a	mineBlock
	m	(Ldcv;Leeb;)Z	b	isCorrectToolForDrops
	m	(Ldcv;Lcut;Lcam;Lbxi;)Lbxj;	a	interactLivingEntity
	m	()Ljava/lang/String;	toString	toString
	m	()Ldcv;	i	getCraftingRemainder
	m	(Ldcv;Laub;Lbzm;Lbzw;)V	a	inventoryTick
	m	(Ldcv;Lcut;)V	c	onCraftedBy
	m	(Ldcv;Ldmu;)V	a	onCraftedPostProcess
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;Ldmu;Lcam;I)Z	a	releaseUsing
	m	(Ldcv;Ldcr$b;Ldfz;Ljava/util/function/Consumer;Ldek;)V	a	appendHoverText
	m	(Ldcv;)Ljava/util/Optional;	k	getTooltipImage
	m	()Ljava/lang/String;	j	getDescriptionId
	m	()Lxo;	l	getName
	m	(Ldcv;)Lxo;	a	getName
	m	(Ldcv;)Z	d_	isFoil
	m	(Ldmu;Lcut;Ldmb$b;)Lfio;	a	getPlayerPOVHitResult
	m	(Ldcv;)Z	e_	useOnRelease
	m	()Ldcv;	m	getDefaultInstance
	m	()Z	d	canFitInsideContainerItems
	m	()Lcyd;	k	requiredFeatures
	m	(Ldcv;Lcut;)Z	a	shouldPrintOpWarning
	m	(Ljl;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcr$a	net/minecraft/world/item/Item$Properties
	f	Lalw;	a	BLOCK_DESCRIPTION_ID
	f	Lalw;	b	ITEM_DESCRIPTION_ID
	f	Lkn$a;	c	components
	f	Ldcr;	d	craftingRemainingItem
	f	Lcyd;	e	requiredFeatures
	f	Lamd;	f	id
	f	Lalw;	g	descriptionId
	f	Lalw;	h	model
	m	()V	<init>	<init>
	m	(Lcyj;)Ldcr$a;	a	food
	m	(Lcyj;Ldfa;)Ldcr$a;	a	food
	m	(Ldcr;)Ldcr$a;	a	usingConvertsTo
	m	(F)Ldcr$a;	a	useCooldown
	m	(I)Ldcr$a;	a	stacksTo
	m	(I)Ldcr$a;	b	durability
	m	(Ldcr;)Ldcr$a;	b	craftRemainder
	m	(Lddr;)Ldcr$a;	a	rarity
	m	()Ldcr$a;	a	fireResistant
	m	(Lamd;)Ldcr$a;	a	jukeboxPlayable
	m	(I)Ldcr$a;	c	enchantable
	m	(Ldcr;)Ldcr$a;	c	repairable
	m	(Lbae;)Ldcr$a;	a	repairable
	m	(Lbzw;)Ldcr$a;	a	equippable
	m	(Lbzw;)Ldcr$a;	b	equippableUnswappable
	m	(Ldej;Lbae;FFF)Ldcr$a;	a	tool
	m	(Ldej;FF)Ldcr$a;	a	pickaxe
	m	(Ldej;FF)Ldcr$a;	b	axe
	m	(Ldej;FF)Ldcr$a;	c	hoe
	m	(Ldej;FF)Ldcr$a;	d	shovel
	m	(Ldej;FF)Ldcr$a;	e	sword
	m	(Ldkz;Ldlb;)Ldcr$a;	a	humanoidArmor
	m	(Ldkz;)Ldcr$a;	a	wolfArmor
	m	(Ldkz;)Ldcr$a;	b	horseArmor
	m	(Lamd;)Ldcr$a;	b	trimMaterial
	m	([Lcyb;)Ldcr$a;	a	requiredFeatures
	m	(Lamd;)Ldcr$a;	c	setId
	m	(Ljava/lang/String;)Ldcr$a;	a	overrideDescription
	m	()Ldcr$a;	b	useBlockDescriptionPrefix
	m	()Ldcr$a;	c	useItemDescriptionPrefix
	m	()Ljava/lang/String;	d	effectiveDescriptionId
	m	()Lame;	e	effectiveModel
	m	(Lkp;Ljava/lang/Object;)Ldcr$a;	a	component
	m	(Ldfm;)Ldcr$a;	a	attributes
	m	(Lxo;Lame;)Lkn;	a	buildAndValidateComponents
	m	(Lamd;)Ljava/lang/String;	d	lambda$static$1
	m	(Lamd;)Ljava/lang/String;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcr$b	net/minecraft/world/item/Item$TooltipContext
	f	Ldcr$b;	a	EMPTY
	m	()Ljn$a;	a	registries
	m	()F	b	tickRate
	m	(Lfce;)Lfcg;	a	mapData
	m	(Ldmu;)Ldcr$b;	a	of
	m	(Ljn$a;)Ldcr$b;	a	of
	m	()V	<clinit>	<clinit>
c	dcr$b$1	net/minecraft/world/item/Item$TooltipContext$1
	m	()V	<init>	<init>
	m	()Ljn$a;	a	registries
	m	()F	b	tickRate
	m	(Lfce;)Lfcg;	a	mapData
c	dcr$b$2	net/minecraft/world/item/Item$TooltipContext$2
	f	Ldmu;	b	val$level
	m	(Ldmu;)V	<init>	<init>
	m	()Ljn$a;	a	registries
	m	()F	b	tickRate
	m	(Lfce;)Lfcg;	a	mapData
c	dcr$b$3	net/minecraft/world/item/Item$TooltipContext$3
	f	Ljn$a;	b	val$registries
	m	(Ljn$a;)V	<init>	<init>
	m	()Ljn$a;	a	registries
	m	()F	b	tickRate
	m	(Lfce;)Lfcg;	a	mapData
c	dcs	net/minecraft/world/item/ItemCooldowns
	f	Ljava/util/Map;	a	cooldowns
	f	I	b	tickCount
	m	()V	<init>	<init>
	m	(Ldcv;)Z	a	isOnCooldown
	m	(Ldcv;F)F	a	getCooldownPercent
	m	()V	a	tick
	m	(Ldcv;)Lame;	b	getCooldownGroup
	m	(Ldcv;I)V	a	addCooldown
	m	(Lame;I)V	a	addCooldown
	m	(Lame;)V	a	removeCooldown
	m	(Lame;I)V	b	onCooldownStarted
	m	(Lame;)V	b	onCooldownEnded
c	dcs$a	net/minecraft/world/item/ItemCooldowns$CooldownInstance
	f	I	a	startTime
	f	I	b	endTime
	m	(II)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	startTime
	m	()I	b	endTime
c	dct	net/minecraft/world/item/ItemDisplayContext
	f	Ldct;	a	NONE
	f	Ldct;	b	THIRD_PERSON_LEFT_HAND
	f	Ldct;	c	THIRD_PERSON_RIGHT_HAND
	f	Ldct;	d	FIRST_PERSON_LEFT_HAND
	f	Ldct;	e	FIRST_PERSON_RIGHT_HAND
	f	Ldct;	f	HEAD
	f	Ldct;	g	GUI
	f	Ldct;	h	GROUND
	f	Ldct;	i	FIXED
	f	Lcom/mojang/serialization/Codec;	j	CODEC
	f	Ljava/util/function/IntFunction;	k	BY_ID
	f	B	l	id
	f	Ljava/lang/String;	m	name
	f	[Ldct;	n	$VALUES
	m	()[Ldct;	values	values
	m	(Ljava/lang/String;)Ldct;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()B	a	getId
	m	()Z	b	firstPerson
	m	()Z	d	leftHand
	m	()[Ldct;	e	$values
	m	()V	<clinit>	<clinit>
c	dcu	net/minecraft/world/item/ItemFrameItem
	m	(Lbzv;Ldcr$a;)V	<init>	<init>
	m	(Lcut;Ljh;Ldcv;Ljb;)Z	a	mayPlace
c	dcv	net/minecraft/world/item/ItemStack
	f	Ljava/util/List;	m	OP_NBT_WARNING
	f	Lxo;	n	UNBREAKABLE_TOOLTIP
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	SINGLE_ITEM_CODEC
	f	Lcom/mojang/serialization/Codec;	d	STRICT_CODEC
	f	Lcom/mojang/serialization/Codec;	e	STRICT_SINGLE_ITEM_CODEC
	f	Lcom/mojang/serialization/Codec;	f	OPTIONAL_CODEC
	f	Lcom/mojang/serialization/Codec;	g	SIMPLE_ITEM_CODEC
	f	Lzm;	h	OPTIONAL_STREAM_CODEC
	f	Lzm;	i	OPTIONAL_UNTRUSTED_STREAM_CODEC
	f	Lzm;	j	STREAM_CODEC
	f	Lzm;	k	OPTIONAL_LIST_STREAM_CODEC
	f	Lorg/slf4j/Logger;	o	LOGGER
	f	Ldcv;	l	EMPTY
	f	Lxo;	p	DISABLED_ITEM_TOOLTIP
	f	I	q	count
	f	I	r	popTime
	f	Ldcr;	s	item
	f	Lkr;	t	components
	f	Lbzm;	u	entityRepresentation
	m	(Ldcv;)Lcom/mojang/serialization/DataResult;	a	validateStrict
	m	(Lzm;)Lzm;	b	createOptionalStreamCodec
	m	(Lzm;)Lzm;	a	validatedStreamCodec
	m	()Ljava/util/Optional;	b	getTooltipImage
	m	()Lkn;	a	getComponents
	m	()Lkn;	c	getPrototype
	m	()Lko;	d	getComponentsPatch
	m	()Lkn;	e	immutableComponents
	m	(Lkp;)Z	d	hasNonDefault
	m	(Ldmt;)V	<init>	<init>
	m	(Ljl;)V	<init>	<init>
	m	(Ljl;ILko;)V	<init>	<init>
	m	(Ljl;I)V	<init>	<init>
	m	(Ldmt;I)V	<init>	<init>
	m	(Ldmt;ILkr;)V	<init>	<init>
	m	(Ljava/lang/Void;)V	<init>	<init>
	m	(Lkn;)Lcom/mojang/serialization/DataResult;	a	validateComponents
	m	()Z	f	isEmpty
	m	(Lcyd;)Z	a	isItemEnabled
	m	(I)Ldcv;	a	split
	m	()Ldcv;	g	copyAndClear
	m	()Ldcr;	h	getItem
	m	()Ljl;	i	getItemHolder
	m	(Lbae;)Z	a	is
	m	(Ldcr;)Z	a	is
	m	(Ljava/util/function/Predicate;)Z	a	is
	m	(Ljl;)Z	a	is
	m	(Ljp;)Z	a	is
	m	()Ljava/util/stream/Stream;	j	getTags
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Leeb;)F	a	getDestroySpeed
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Lcam;)Ldcv;	a	finishUsingItem
	m	(Lcam;Ldcv;)Ldcv;	a	applyAfterUseComponentSideEffects
	m	()I	k	getMaxStackSize
	m	()Z	l	isStackable
	m	()Z	m	isDamageableItem
	m	()Z	n	isDamaged
	m	()I	o	getDamageValue
	m	(I)V	b	setDamageValue
	m	()I	p	getMaxDamage
	m	()Z	q	isBroken
	m	()Z	r	nextDamageWillBreak
	m	(ILaub;Lauc;Ljava/util/function/Consumer;)V	a	hurtAndBreak
	m	(ILaub;Lauc;)I	a	processDurabilityChange
	m	(ILauc;Ljava/util/function/Consumer;)V	a	applyDamage
	m	(ILcut;)V	a	hurtWithoutBreaking
	m	(ILcam;Lbxi;)V	a	hurtAndBreak
	m	(ILcam;Lbzw;)V	a	hurtAndBreak
	m	(ILdmt;Lcam;Lbzw;)Ldcv;	a	hurtAndConvertOnBreak
	m	()Z	s	isBarVisible
	m	()I	t	getBarWidth
	m	()I	u	getBarColor
	m	(Ldak;Lcyw;Lcut;)Z	a	overrideStackedOnOther
	m	(Ldcv;Ldak;Lcyw;Lcut;Lcbd;)Z	a	overrideOtherStackedOnMe
	m	(Lcam;Lcam;)Z	a	hurtEnemy
	m	(Lcam;Lcam;)V	b	postHurtEnemy
	m	(Ldmu;Leeb;Ljb;Lcut;)V	a	mineBlock
	m	(Leeb;)Z	b	isCorrectToolForDrops
	m	(Lcut;Lcam;Lbxi;)Lbxj;	a	interactLivingEntity
	m	()Ldcv;	v	copy
	m	(I)Ldcv;	c	copyWithCount
	m	(Ldmt;)Ldcv;	a	transmuteCopy
	m	(Ldmt;I)Ldcv;	a	transmuteCopy
	m	(Ldmt;I)Ldcv;	b	transmuteCopyIgnoreEmpty
	m	(Ldcv;Ldcv;)Z	a	matches
	m	(Ljava/util/List;Ljava/util/List;)Z	a	listMatches
	m	(Ldcv;Ldcv;)Z	b	isSameItem
	m	(Ldcv;Ldcv;)Z	c	isSameItemSameComponents
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	lenientOptionalFieldOf
	m	(Ldcv;)I	b	hashItemAndComponents
	m	(Ljava/util/List;)I	a	hashStackList
	m	()Ljava/lang/String;	toString	toString
	m	(Ldmu;Lbzm;Lbzw;)V	a	inventoryTick
	m	(Lcut;I)V	a	onCraftedBy
	m	(Ldmu;)V	a	onCraftedBySystem
	m	(Lcam;)I	a	getUseDuration
	m	()Ldcx;	w	getUseAnimation
	m	(Ldmu;Lcam;I)V	a	releaseUsing
	m	()Z	x	useOnRelease
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	b	set
	m	(Lkp;Lkl;)V	a	copyFrom
	m	(Lkp;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;	a	update
	m	(Lkp;Ljava/lang/Object;Ljava/util/function/UnaryOperator;)Ljava/lang/Object;	a	update
	m	(Lkp;)Ljava/lang/Object;	e	remove
	m	(Lko;)V	a	applyComponentsAndValidate
	m	(Lko;)V	b	applyComponents
	m	(Lkn;)V	b	applyComponents
	m	()Lxo;	y	getHoverName
	m	()Lxo;	z	getCustomName
	m	()Lxo;	A	getItemName
	m	()Lxo;	B	getStyledHoverName
	m	(Lkp;Ldcr$b;Ldfz;Ljava/util/function/Consumer;Ldek;)V	a	addToTooltip
	m	(Ldcr$b;Lcut;Ldek;)Ljava/util/List;	a	getTooltipLines
	m	(Ldcr$b;Ldfz;Lcut;Ldek;Ljava/util/function/Consumer;)V	a	addDetailsToTooltip
	m	(Ljava/util/function/Consumer;Ldfz;Lcut;)V	a	addAttributeTooltips
	m	()Z	C	hasFoil
	m	()Lddr;	D	getRarity
	m	()Z	E	isEnchantable
	m	(Ljl;I)V	a	enchant
	m	()Z	F	isEnchanted
	m	()Ldjo;	G	getEnchantments
	m	()Z	H	isFramed
	m	(Lbzm;)V	a	setEntityRepresentation
	m	()Lcqs;	I	getFrame
	m	()Lbzm;	J	getEntityRepresentation
	m	(Lbzx;Lorg/apache/commons/lang3/function/TriConsumer;)V	a	forEachModifier
	m	(Lbzw;Ljava/util/function/BiConsumer;)V	a	forEachModifier
	m	()Lxo;	K	getDisplayName
	m	(Leef;)Z	a	canPlaceOnBlockInAdventureMode
	m	(Leef;)Z	b	canBreakBlockInAdventureMode
	m	()I	L	getPopTime
	m	(I)V	d	setPopTime
	m	()I	M	getCount
	m	(I)V	e	setCount
	m	(I)V	f	limitSize
	m	(I)V	g	grow
	m	(I)V	h	shrink
	m	(ILcam;)V	a	consume
	m	(ILcam;)Ldcv;	b	consumeAndReturn
	m	(Ldmu;Lcam;I)V	b	onUseTick
	m	(Lcqz;)V	a	onDestroyed
	m	(Lbyb;)Z	a	canBeHurtBy
	m	(Ldcv;)Z	c	isValidRepairItem
	m	(Leeb;Ldmu;Ljb;Lcut;)Z	a	canDestroyBlock
	m	(Lyl;)Lyl;	a	lambda$getDisplayName$20
	m	(Lorg/apache/commons/lang3/function/TriConsumer;Ljl;Lcbq;)V	a	lambda$forEachModifier$19
	m	(Ljl;ILdjo$a;)V	a	lambda$enchant$18
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Consumer;Lbzx;Lcut;Ljl;Lcbq;Ldfm$b;)V	a	lambda$addAttributeTooltips$17
	m	(Ldcv;)Ljava/util/Optional;	d	lambda$lenientOptionalFieldOf$16
	m	(Ljava/util/Optional;)Ldcv;	a	lambda$lenientOptionalFieldOf$15
	m	(Lcam;Lbzw;Ldcr;)V	a	lambda$hurtAndBreak$14
	m	(Ldcr;)V	b	lambda$hurtWithoutBreaking$13
	m	(II)Ljava/lang/String;	a	lambda$validateComponents$12
	m	()Ljava/lang/String;	N	lambda$validateComponents$11
	m	(Ldcv;)Ljava/util/Optional;	e	lambda$static$10
	m	(Ljava/util/Optional;)Ldcv;	b	lambda$static$9
	m	(Ldcv;)Ljava/lang/String;	f	lambda$validateStrict$8
	m	(Ldcv;Lbdk;)Ldcv;	a	lambda$validateStrict$7
	m	()Lcom/mojang/serialization/Codec;	O	lambda$static$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ljl;Lko;)Ldcv;	a	lambda$static$4
	m	(Ldcv;)Lko;	g	lambda$static$3
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Ldcv;)Lko;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dcv$1	net/minecraft/world/item/ItemStack$1
	f	Lzm;	a	val$patchCodec
	m	(Lzm;)V	<init>	<init>
	m	(Lwx;)Ldcv;	a	decode
	m	(Lwx;Ldcv;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	dcv$2	net/minecraft/world/item/ItemStack$2
	m	()V	<init>	<init>
	m	(Lwx;)Ldcv;	a	decode
	m	(Lwx;Ldcv;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	dcv$3	net/minecraft/world/item/ItemStack$3
	f	Lzm;	a	val$codec
	m	(Lzm;)V	<init>	<init>
	m	(Lwx;)Ldcv;	a	decode
	m	(Lwx;Ldcv;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	dcv$4	net/minecraft/world/item/ItemStack$4
	f	[I	a	$SwitchMap$net$minecraft$world$item$Rarity
	m	()V	<clinit>	<clinit>
c	dcw	net/minecraft/world/item/ItemStackLinkedSet
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	TYPE_AND_TAG
	m	()V	<init>	<init>
	m	()Ljava/util/Set;	a	createTypeAndComponentsSet
	m	()V	<clinit>	<clinit>
c	dcw$1	net/minecraft/world/item/ItemStackLinkedSet$1
	m	()V	<init>	<init>
	m	(Ldcv;)I	a	hashCode
	m	(Ldcv;Ldcv;)Z	a	equals
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	equals	equals
	m	(Ljava/lang/Object;)I	hashCode	hashCode
c	dcx	net/minecraft/world/item/ItemUseAnimation
	f	Ldcx;	a	NONE
	f	Ldcx;	b	EAT
	f	Ldcx;	c	DRINK
	f	Ldcx;	d	BLOCK
	f	Ldcx;	e	BOW
	f	Ldcx;	f	SPEAR
	f	Ldcx;	g	CROSSBOW
	f	Ldcx;	h	SPYGLASS
	f	Ldcx;	i	TOOT_HORN
	f	Ldcx;	j	BRUSH
	f	Ldcx;	k	BUNDLE
	f	Ljava/util/function/IntFunction;	n	BY_ID
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Lzm;	m	STREAM_CODEC
	f	I	o	id
	f	Ljava/lang/String;	p	name
	f	[Ldcx;	q	$VALUES
	m	()[Ldcx;	values	values
	m	(Ljava/lang/String;)Ldcx;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldcx;	b	$values
	m	()V	<clinit>	<clinit>
c	dcy	net/minecraft/world/item/ItemUtils
	m	()V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	startUsingInstantly
	m	(Ldcv;Lcut;Ldcv;Z)Ldcv;	a	createFilledResult
	m	(Ldcv;Lcut;Ldcv;)Ldcv;	a	createFilledResult
	m	(Lcqz;Ljava/lang/Iterable;)V	a	onContainerDestroyed
	m	(Ldmu;Lcqz;Ldcv;)V	a	lambda$onContainerDestroyed$0
c	dcz	net/minecraft/world/item/Items
	f	Ldcr;	a	AIR
	f	Ldcr;	b	STONE
	f	Ldcr;	c	GRANITE
	f	Ldcr;	d	POLISHED_GRANITE
	f	Ldcr;	e	DIORITE
	f	Ldcr;	f	POLISHED_DIORITE
	f	Ldcr;	g	ANDESITE
	f	Ldcr;	h	POLISHED_ANDESITE
	f	Ldcr;	i	DEEPSLATE
	f	Ldcr;	j	COBBLED_DEEPSLATE
	f	Ldcr;	k	POLISHED_DEEPSLATE
	f	Ldcr;	l	CALCITE
	f	Ldcr;	m	TUFF
	f	Ldcr;	n	TUFF_SLAB
	f	Ldcr;	o	TUFF_STAIRS
	f	Ldcr;	p	TUFF_WALL
	f	Ldcr;	q	CHISELED_TUFF
	f	Ldcr;	r	POLISHED_TUFF
	f	Ldcr;	s	POLISHED_TUFF_SLAB
	f	Ldcr;	t	POLISHED_TUFF_STAIRS
	f	Ldcr;	u	POLISHED_TUFF_WALL
	f	Ldcr;	v	TUFF_BRICKS
	f	Ldcr;	w	TUFF_BRICK_SLAB
	f	Ldcr;	x	TUFF_BRICK_STAIRS
	f	Ldcr;	y	TUFF_BRICK_WALL
	f	Ldcr;	z	CHISELED_TUFF_BRICKS
	f	Ldcr;	A	DRIPSTONE_BLOCK
	f	Ldcr;	B	GRASS_BLOCK
	f	Ldcr;	C	DIRT
	f	Ldcr;	D	COARSE_DIRT
	f	Ldcr;	E	PODZOL
	f	Ldcr;	F	ROOTED_DIRT
	f	Ldcr;	G	MUD
	f	Ldcr;	H	CRIMSON_NYLIUM
	f	Ldcr;	I	WARPED_NYLIUM
	f	Ldcr;	J	COBBLESTONE
	f	Ldcr;	K	OAK_PLANKS
	f	Ldcr;	L	SPRUCE_PLANKS
	f	Ldcr;	M	BIRCH_PLANKS
	f	Ldcr;	N	JUNGLE_PLANKS
	f	Ldcr;	O	ACACIA_PLANKS
	f	Ldcr;	P	CHERRY_PLANKS
	f	Ldcr;	Q	DARK_OAK_PLANKS
	f	Ldcr;	R	PALE_OAK_PLANKS
	f	Ldcr;	S	MANGROVE_PLANKS
	f	Ldcr;	T	BAMBOO_PLANKS
	f	Ldcr;	U	CRIMSON_PLANKS
	f	Ldcr;	V	WARPED_PLANKS
	f	Ldcr;	W	BAMBOO_MOSAIC
	f	Ldcr;	X	OAK_SAPLING
	f	Ldcr;	Y	SPRUCE_SAPLING
	f	Ldcr;	Z	BIRCH_SAPLING
	f	Ldcr;	aa	JUNGLE_SAPLING
	f	Ldcr;	ab	ACACIA_SAPLING
	f	Ldcr;	ac	CHERRY_SAPLING
	f	Ldcr;	ad	DARK_OAK_SAPLING
	f	Ldcr;	ae	PALE_OAK_SAPLING
	f	Ldcr;	af	MANGROVE_PROPAGULE
	f	Ldcr;	ag	BEDROCK
	f	Ldcr;	ah	SAND
	f	Ldcr;	ai	SUSPICIOUS_SAND
	f	Ldcr;	aj	SUSPICIOUS_GRAVEL
	f	Ldcr;	ak	RED_SAND
	f	Ldcr;	al	GRAVEL
	f	Ldcr;	am	COAL_ORE
	f	Ldcr;	an	DEEPSLATE_COAL_ORE
	f	Ldcr;	ao	IRON_ORE
	f	Ldcr;	ap	DEEPSLATE_IRON_ORE
	f	Ldcr;	aq	COPPER_ORE
	f	Ldcr;	ar	DEEPSLATE_COPPER_ORE
	f	Ldcr;	as	GOLD_ORE
	f	Ldcr;	at	DEEPSLATE_GOLD_ORE
	f	Ldcr;	au	REDSTONE_ORE
	f	Ldcr;	av	DEEPSLATE_REDSTONE_ORE
	f	Ldcr;	aw	EMERALD_ORE
	f	Ldcr;	ax	DEEPSLATE_EMERALD_ORE
	f	Ldcr;	ay	LAPIS_ORE
	f	Ldcr;	az	DEEPSLATE_LAPIS_ORE
	f	Ldcr;	aA	DIAMOND_ORE
	f	Ldcr;	aB	DEEPSLATE_DIAMOND_ORE
	f	Ldcr;	aC	NETHER_GOLD_ORE
	f	Ldcr;	aD	NETHER_QUARTZ_ORE
	f	Ldcr;	aE	ANCIENT_DEBRIS
	f	Ldcr;	aF	COAL_BLOCK
	f	Ldcr;	aG	RAW_IRON_BLOCK
	f	Ldcr;	aH	RAW_COPPER_BLOCK
	f	Ldcr;	aI	RAW_GOLD_BLOCK
	f	Ldcr;	aJ	HEAVY_CORE
	f	Ldcr;	aK	AMETHYST_BLOCK
	f	Ldcr;	aL	BUDDING_AMETHYST
	f	Ldcr;	aM	IRON_BLOCK
	f	Ldcr;	aN	COPPER_BLOCK
	f	Ldcr;	aO	GOLD_BLOCK
	f	Ldcr;	aP	DIAMOND_BLOCK
	f	Ldcr;	aQ	NETHERITE_BLOCK
	f	Ldcr;	aR	EXPOSED_COPPER
	f	Ldcr;	aS	WEATHERED_COPPER
	f	Ldcr;	aT	OXIDIZED_COPPER
	f	Ldcr;	aU	CHISELED_COPPER
	f	Ldcr;	aV	EXPOSED_CHISELED_COPPER
	f	Ldcr;	aW	WEATHERED_CHISELED_COPPER
	f	Ldcr;	aX	OXIDIZED_CHISELED_COPPER
	f	Ldcr;	aY	CUT_COPPER
	f	Ldcr;	aZ	EXPOSED_CUT_COPPER
	f	Ldcr;	ba	WEATHERED_CUT_COPPER
	f	Ldcr;	bb	OXIDIZED_CUT_COPPER
	f	Ldcr;	bc	CUT_COPPER_STAIRS
	f	Ldcr;	bd	EXPOSED_CUT_COPPER_STAIRS
	f	Ldcr;	be	WEATHERED_CUT_COPPER_STAIRS
	f	Ldcr;	bf	OXIDIZED_CUT_COPPER_STAIRS
	f	Ldcr;	bg	CUT_COPPER_SLAB
	f	Ldcr;	bh	EXPOSED_CUT_COPPER_SLAB
	f	Ldcr;	bi	WEATHERED_CUT_COPPER_SLAB
	f	Ldcr;	bj	OXIDIZED_CUT_COPPER_SLAB
	f	Ldcr;	bk	WAXED_COPPER_BLOCK
	f	Ldcr;	bl	WAXED_EXPOSED_COPPER
	f	Ldcr;	bm	WAXED_WEATHERED_COPPER
	f	Ldcr;	bn	WAXED_OXIDIZED_COPPER
	f	Ldcr;	bo	WAXED_CHISELED_COPPER
	f	Ldcr;	bp	WAXED_EXPOSED_CHISELED_COPPER
	f	Ldcr;	bq	WAXED_WEATHERED_CHISELED_COPPER
	f	Ldcr;	br	WAXED_OXIDIZED_CHISELED_COPPER
	f	Ldcr;	bs	WAXED_CUT_COPPER
	f	Ldcr;	bt	WAXED_EXPOSED_CUT_COPPER
	f	Ldcr;	bu	WAXED_WEATHERED_CUT_COPPER
	f	Ldcr;	bv	WAXED_OXIDIZED_CUT_COPPER
	f	Ldcr;	bw	WAXED_CUT_COPPER_STAIRS
	f	Ldcr;	bx	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Ldcr;	by	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Ldcr;	bz	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Ldcr;	bA	WAXED_CUT_COPPER_SLAB
	f	Ldcr;	bB	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Ldcr;	bC	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Ldcr;	bD	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Ldcr;	bE	OAK_LOG
	f	Ldcr;	bF	SPRUCE_LOG
	f	Ldcr;	bG	BIRCH_LOG
	f	Ldcr;	bH	JUNGLE_LOG
	f	Ldcr;	bI	ACACIA_LOG
	f	Ldcr;	bJ	CHERRY_LOG
	f	Ldcr;	bK	PALE_OAK_LOG
	f	Ldcr;	bL	DARK_OAK_LOG
	f	Ldcr;	bM	MANGROVE_LOG
	f	Ldcr;	bN	MANGROVE_ROOTS
	f	Ldcr;	bO	MUDDY_MANGROVE_ROOTS
	f	Ldcr;	bP	CRIMSON_STEM
	f	Ldcr;	bQ	WARPED_STEM
	f	Ldcr;	bR	BAMBOO_BLOCK
	f	Ldcr;	bS	STRIPPED_OAK_LOG
	f	Ldcr;	bT	STRIPPED_SPRUCE_LOG
	f	Ldcr;	bU	STRIPPED_BIRCH_LOG
	f	Ldcr;	bV	STRIPPED_JUNGLE_LOG
	f	Ldcr;	bW	STRIPPED_ACACIA_LOG
	f	Ldcr;	bX	STRIPPED_CHERRY_LOG
	f	Ldcr;	bY	STRIPPED_DARK_OAK_LOG
	f	Ldcr;	bZ	STRIPPED_PALE_OAK_LOG
	f	Ldcr;	ca	STRIPPED_MANGROVE_LOG
	f	Ldcr;	cb	STRIPPED_CRIMSON_STEM
	f	Ldcr;	cc	STRIPPED_WARPED_STEM
	f	Ldcr;	cd	STRIPPED_OAK_WOOD
	f	Ldcr;	ce	STRIPPED_SPRUCE_WOOD
	f	Ldcr;	cf	STRIPPED_BIRCH_WOOD
	f	Ldcr;	cg	STRIPPED_JUNGLE_WOOD
	f	Ldcr;	ch	STRIPPED_ACACIA_WOOD
	f	Ldcr;	ci	STRIPPED_CHERRY_WOOD
	f	Ldcr;	cj	STRIPPED_DARK_OAK_WOOD
	f	Ldcr;	ck	STRIPPED_PALE_OAK_WOOD
	f	Ldcr;	cl	STRIPPED_MANGROVE_WOOD
	f	Ldcr;	cm	STRIPPED_CRIMSON_HYPHAE
	f	Ldcr;	cn	STRIPPED_WARPED_HYPHAE
	f	Ldcr;	co	STRIPPED_BAMBOO_BLOCK
	f	Ldcr;	cp	OAK_WOOD
	f	Ldcr;	cq	SPRUCE_WOOD
	f	Ldcr;	cr	BIRCH_WOOD
	f	Ldcr;	cs	JUNGLE_WOOD
	f	Ldcr;	ct	ACACIA_WOOD
	f	Ldcr;	cu	CHERRY_WOOD
	f	Ldcr;	cv	PALE_OAK_WOOD
	f	Ldcr;	cw	DARK_OAK_WOOD
	f	Ldcr;	cx	MANGROVE_WOOD
	f	Ldcr;	cy	CRIMSON_HYPHAE
	f	Ldcr;	cz	WARPED_HYPHAE
	f	Ldcr;	cA	OAK_LEAVES
	f	Ldcr;	cB	SPRUCE_LEAVES
	f	Ldcr;	cC	BIRCH_LEAVES
	f	Ldcr;	cD	JUNGLE_LEAVES
	f	Ldcr;	cE	ACACIA_LEAVES
	f	Ldcr;	cF	CHERRY_LEAVES
	f	Ldcr;	cG	DARK_OAK_LEAVES
	f	Ldcr;	cH	PALE_OAK_LEAVES
	f	Ldcr;	cI	MANGROVE_LEAVES
	f	Ldcr;	cJ	AZALEA_LEAVES
	f	Ldcr;	cK	FLOWERING_AZALEA_LEAVES
	f	Ldcr;	cL	SPONGE
	f	Ldcr;	cM	WET_SPONGE
	f	Ldcr;	cN	GLASS
	f	Ldcr;	cO	TINTED_GLASS
	f	Ldcr;	cP	LAPIS_BLOCK
	f	Ldcr;	cQ	SANDSTONE
	f	Ldcr;	cR	CHISELED_SANDSTONE
	f	Ldcr;	cS	CUT_SANDSTONE
	f	Ldcr;	cT	COBWEB
	f	Ldcr;	cU	SHORT_GRASS
	f	Ldcr;	cV	FERN
	f	Ldcr;	cW	BUSH
	f	Ldcr;	cX	AZALEA
	f	Ldcr;	cY	FLOWERING_AZALEA
	f	Ldcr;	cZ	DEAD_BUSH
	f	Ldcr;	da	FIREFLY_BUSH
	f	Ldcr;	db	DRY_SHORT_GRASS
	f	Ldcr;	dc	DRY_TALL_GRASS
	f	Ldcr;	dd	SEAGRASS
	f	Ldcr;	de	SEA_PICKLE
	f	Ldcr;	df	WHITE_WOOL
	f	Ldcr;	dg	ORANGE_WOOL
	f	Ldcr;	dh	MAGENTA_WOOL
	f	Ldcr;	di	LIGHT_BLUE_WOOL
	f	Ldcr;	dj	YELLOW_WOOL
	f	Ldcr;	dk	LIME_WOOL
	f	Ldcr;	dl	PINK_WOOL
	f	Ldcr;	dm	GRAY_WOOL
	f	Ldcr;	dn	LIGHT_GRAY_WOOL
	f	Ldcr;	do	CYAN_WOOL
	f	Ldcr;	dp	PURPLE_WOOL
	f	Ldcr;	dq	BLUE_WOOL
	f	Ldcr;	dr	BROWN_WOOL
	f	Ldcr;	ds	GREEN_WOOL
	f	Ldcr;	dt	RED_WOOL
	f	Ldcr;	du	BLACK_WOOL
	f	Ldcr;	dv	DANDELION
	f	Ldcr;	dw	OPEN_EYEBLOSSOM
	f	Ldcr;	dx	CLOSED_EYEBLOSSOM
	f	Ldcr;	dy	POPPY
	f	Ldcr;	dz	BLUE_ORCHID
	f	Ldcr;	dA	ALLIUM
	f	Ldcr;	dB	AZURE_BLUET
	f	Ldcr;	dC	RED_TULIP
	f	Ldcr;	dD	ORANGE_TULIP
	f	Ldcr;	dE	WHITE_TULIP
	f	Ldcr;	dF	PINK_TULIP
	f	Ldcr;	dG	OXEYE_DAISY
	f	Ldcr;	dH	CORNFLOWER
	f	Ldcr;	dI	LILY_OF_THE_VALLEY
	f	Ldcr;	dJ	WITHER_ROSE
	f	Ldcr;	dK	TORCHFLOWER
	f	Ldcr;	dL	PITCHER_PLANT
	f	Ldcr;	dM	SPORE_BLOSSOM
	f	Ldcr;	dN	BROWN_MUSHROOM
	f	Ldcr;	dO	RED_MUSHROOM
	f	Ldcr;	dP	CRIMSON_FUNGUS
	f	Ldcr;	dQ	WARPED_FUNGUS
	f	Ldcr;	dR	CRIMSON_ROOTS
	f	Ldcr;	dS	WARPED_ROOTS
	f	Ldcr;	dT	NETHER_SPROUTS
	f	Ldcr;	dU	WEEPING_VINES
	f	Ldcr;	dV	TWISTING_VINES
	f	Ldcr;	dW	SUGAR_CANE
	f	Ldcr;	dX	KELP
	f	Ldcr;	dY	PINK_PETALS
	f	Ldcr;	dZ	WILDFLOWERS
	f	Ldcr;	ea	LEAF_LITTER
	f	Ldcr;	eb	MOSS_CARPET
	f	Ldcr;	ec	MOSS_BLOCK
	f	Ldcr;	ed	PALE_MOSS_CARPET
	f	Ldcr;	ee	PALE_HANGING_MOSS
	f	Ldcr;	ef	PALE_MOSS_BLOCK
	f	Ldcr;	eg	HANGING_ROOTS
	f	Ldcr;	eh	BIG_DRIPLEAF
	f	Ldcr;	ei	SMALL_DRIPLEAF
	f	Ldcr;	ej	BAMBOO
	f	Ldcr;	ek	OAK_SLAB
	f	Ldcr;	el	SPRUCE_SLAB
	f	Ldcr;	em	BIRCH_SLAB
	f	Ldcr;	en	JUNGLE_SLAB
	f	Ldcr;	eo	ACACIA_SLAB
	f	Ldcr;	ep	CHERRY_SLAB
	f	Ldcr;	eq	DARK_OAK_SLAB
	f	Ldcr;	er	PALE_OAK_SLAB
	f	Ldcr;	es	MANGROVE_SLAB
	f	Ldcr;	et	BAMBOO_SLAB
	f	Ldcr;	eu	BAMBOO_MOSAIC_SLAB
	f	Ldcr;	ev	CRIMSON_SLAB
	f	Ldcr;	ew	WARPED_SLAB
	f	Ldcr;	ex	STONE_SLAB
	f	Ldcr;	ey	SMOOTH_STONE_SLAB
	f	Ldcr;	ez	SANDSTONE_SLAB
	f	Ldcr;	eA	CUT_STANDSTONE_SLAB
	f	Ldcr;	eB	PETRIFIED_OAK_SLAB
	f	Ldcr;	eC	COBBLESTONE_SLAB
	f	Ldcr;	eD	BRICK_SLAB
	f	Ldcr;	eE	STONE_BRICK_SLAB
	f	Ldcr;	eF	MUD_BRICK_SLAB
	f	Ldcr;	eG	NETHER_BRICK_SLAB
	f	Ldcr;	eH	QUARTZ_SLAB
	f	Ldcr;	eI	RED_SANDSTONE_SLAB
	f	Ldcr;	eJ	CUT_RED_SANDSTONE_SLAB
	f	Ldcr;	eK	PURPUR_SLAB
	f	Ldcr;	eL	PRISMARINE_SLAB
	f	Ldcr;	eM	PRISMARINE_BRICK_SLAB
	f	Ldcr;	eN	DARK_PRISMARINE_SLAB
	f	Ldcr;	eO	SMOOTH_QUARTZ
	f	Ldcr;	eP	SMOOTH_RED_SANDSTONE
	f	Ldcr;	eQ	SMOOTH_SANDSTONE
	f	Ldcr;	eR	SMOOTH_STONE
	f	Ldcr;	eS	BRICKS
	f	Ldcr;	eT	BOOKSHELF
	f	Ldcr;	eU	CHISELED_BOOKSHELF
	f	Ldcr;	eV	DECORATED_POT
	f	Ldcr;	eW	MOSSY_COBBLESTONE
	f	Ldcr;	eX	OBSIDIAN
	f	Ldcr;	eY	TORCH
	f	Ldcr;	eZ	END_ROD
	f	Ldcr;	fa	CHORUS_PLANT
	f	Ldcr;	fb	CHORUS_FLOWER
	f	Ldcr;	fc	PURPUR_BLOCK
	f	Ldcr;	fd	PURPUR_PILLAR
	f	Ldcr;	fe	PURPUR_STAIRS
	f	Ldcr;	ff	SPAWNER
	f	Ldcr;	fg	CREAKING_HEART
	f	Ldcr;	fh	CHEST
	f	Ldcr;	fi	CRAFTING_TABLE
	f	Ldcr;	fj	FARMLAND
	f	Ldcr;	fk	FURNACE
	f	Ldcr;	fl	LADDER
	f	Ldcr;	fm	COBBLESTONE_STAIRS
	f	Ldcr;	fn	SNOW
	f	Ldcr;	fo	ICE
	f	Ldcr;	fp	SNOW_BLOCK
	f	Ldcr;	fq	CACTUS
	f	Ldcr;	fr	CACTUS_FLOWER
	f	Ldcr;	fs	CLAY
	f	Ldcr;	ft	JUKEBOX
	f	Ldcr;	fu	OAK_FENCE
	f	Ldcr;	fv	SPRUCE_FENCE
	f	Ldcr;	fw	BIRCH_FENCE
	f	Ldcr;	fx	JUNGLE_FENCE
	f	Ldcr;	fy	ACACIA_FENCE
	f	Ldcr;	fz	CHERRY_FENCE
	f	Ldcr;	fA	DARK_OAK_FENCE
	f	Ldcr;	fB	PALE_OAK_FENCE
	f	Ldcr;	fC	MANGROVE_FENCE
	f	Ldcr;	fD	BAMBOO_FENCE
	f	Ldcr;	fE	CRIMSON_FENCE
	f	Ldcr;	fF	WARPED_FENCE
	f	Ldcr;	fG	PUMPKIN
	f	Ldcr;	fH	CARVED_PUMPKIN
	f	Ldcr;	fI	JACK_O_LANTERN
	f	Ldcr;	fJ	NETHERRACK
	f	Ldcr;	fK	SOUL_SAND
	f	Ldcr;	fL	SOUL_SOIL
	f	Ldcr;	fM	BASALT
	f	Ldcr;	fN	POLISHED_BASALT
	f	Ldcr;	fO	SMOOTH_BASALT
	f	Ldcr;	fP	SOUL_TORCH
	f	Ldcr;	fQ	GLOWSTONE
	f	Ldcr;	fR	INFESTED_STONE
	f	Ldcr;	fS	INFESTED_COBBLESTONE
	f	Ldcr;	fT	INFESTED_STONE_BRICKS
	f	Ldcr;	fU	INFESTED_MOSSY_STONE_BRICKS
	f	Ldcr;	fV	INFESTED_CRACKED_STONE_BRICKS
	f	Ldcr;	fW	INFESTED_CHISELED_STONE_BRICKS
	f	Ldcr;	fX	INFESTED_DEEPSLATE
	f	Ldcr;	fY	STONE_BRICKS
	f	Ldcr;	fZ	MOSSY_STONE_BRICKS
	f	Ldcr;	ga	CRACKED_STONE_BRICKS
	f	Ldcr;	gb	CHISELED_STONE_BRICKS
	f	Ldcr;	gc	PACKED_MUD
	f	Ldcr;	gd	MUD_BRICKS
	f	Ldcr;	ge	DEEPSLATE_BRICKS
	f	Ldcr;	gf	CRACKED_DEEPSLATE_BRICKS
	f	Ldcr;	gg	DEEPSLATE_TILES
	f	Ldcr;	gh	CRACKED_DEEPSLATE_TILES
	f	Ldcr;	gi	CHISELED_DEEPSLATE
	f	Ldcr;	gj	REINFORCED_DEEPSLATE
	f	Ldcr;	gk	BROWN_MUSHROOM_BLOCK
	f	Ldcr;	gl	RED_MUSHROOM_BLOCK
	f	Ldcr;	gm	MUSHROOM_STEM
	f	Ldcr;	gn	IRON_BARS
	f	Ldcr;	go	CHAIN
	f	Ldcr;	gp	GLASS_PANE
	f	Ldcr;	gq	MELON
	f	Ldcr;	gr	VINE
	f	Ldcr;	gs	GLOW_LICHEN
	f	Ldcr;	gt	RESIN_CLUMP
	f	Ldcr;	gu	RESIN_BLOCK
	f	Ldcr;	gv	RESIN_BRICKS
	f	Ldcr;	gw	RESIN_BRICK_STAIRS
	f	Ldcr;	gx	RESIN_BRICK_SLAB
	f	Ldcr;	gy	RESIN_BRICK_WALL
	f	Ldcr;	gz	CHISELED_RESIN_BRICKS
	f	Ldcr;	gA	BRICK_STAIRS
	f	Ldcr;	gB	STONE_BRICK_STAIRS
	f	Ldcr;	gC	MUD_BRICK_STAIRS
	f	Ldcr;	gD	MYCELIUM
	f	Ldcr;	gE	LILY_PAD
	f	Ldcr;	gF	NETHER_BRICKS
	f	Ldcr;	gG	CRACKED_NETHER_BRICKS
	f	Ldcr;	gH	CHISELED_NETHER_BRICKS
	f	Ldcr;	gI	NETHER_BRICK_FENCE
	f	Ldcr;	gJ	NETHER_BRICK_STAIRS
	f	Ldcr;	gK	SCULK
	f	Ldcr;	gL	SCULK_VEIN
	f	Ldcr;	gM	SCULK_CATALYST
	f	Ldcr;	gN	SCULK_SHRIEKER
	f	Ldcr;	gO	ENCHANTING_TABLE
	f	Ldcr;	gP	END_PORTAL_FRAME
	f	Ldcr;	gQ	END_STONE
	f	Ldcr;	gR	END_STONE_BRICKS
	f	Ldcr;	gS	DRAGON_EGG
	f	Ldcr;	gT	SANDSTONE_STAIRS
	f	Ldcr;	gU	ENDER_CHEST
	f	Ldcr;	gV	EMERALD_BLOCK
	f	Ldcr;	gW	OAK_STAIRS
	f	Ldcr;	gX	SPRUCE_STAIRS
	f	Ldcr;	gY	BIRCH_STAIRS
	f	Ldcr;	gZ	JUNGLE_STAIRS
	f	Ldcr;	ha	ACACIA_STAIRS
	f	Ldcr;	hb	CHERRY_STAIRS
	f	Ldcr;	hc	DARK_OAK_STAIRS
	f	Ldcr;	hd	PALE_OAK_STAIRS
	f	Ldcr;	he	MANGROVE_STAIRS
	f	Ldcr;	hf	BAMBOO_STAIRS
	f	Ldcr;	hg	BAMBOO_MOSAIC_STAIRS
	f	Ldcr;	hh	CRIMSON_STAIRS
	f	Ldcr;	hi	WARPED_STAIRS
	f	Ldcr;	hj	COMMAND_BLOCK
	f	Ldcr;	hk	BEACON
	f	Ldcr;	hl	COBBLESTONE_WALL
	f	Ldcr;	hm	MOSSY_COBBLESTONE_WALL
	f	Ldcr;	hn	BRICK_WALL
	f	Ldcr;	ho	PRISMARINE_WALL
	f	Ldcr;	hp	RED_SANDSTONE_WALL
	f	Ldcr;	hq	MOSSY_STONE_BRICK_WALL
	f	Ldcr;	hr	GRANITE_WALL
	f	Ldcr;	hs	STONE_BRICK_WALL
	f	Ldcr;	ht	MUD_BRICK_WALL
	f	Ldcr;	hu	NETHER_BRICK_WALL
	f	Ldcr;	hv	ANDESITE_WALL
	f	Ldcr;	hw	RED_NETHER_BRICK_WALL
	f	Ldcr;	hx	SANDSTONE_WALL
	f	Ldcr;	hy	END_STONE_BRICK_WALL
	f	Ldcr;	hz	DIORITE_WALL
	f	Ldcr;	hA	BLACKSTONE_WALL
	f	Ldcr;	hB	POLISHED_BLACKSTONE_WALL
	f	Ldcr;	hC	POLISHED_BLACKSTONE_BRICK_WALL
	f	Ldcr;	hD	COBBLED_DEEPSLATE_WALL
	f	Ldcr;	hE	POLISHED_DEEPSLATE_WALL
	f	Ldcr;	hF	DEEPSLATE_BRICK_WALL
	f	Ldcr;	hG	DEEPSLATE_TILE_WALL
	f	Ldcr;	hH	ANVIL
	f	Ldcr;	hI	CHIPPED_ANVIL
	f	Ldcr;	hJ	DAMAGED_ANVIL
	f	Ldcr;	hK	CHISELED_QUARTZ_BLOCK
	f	Ldcr;	hL	QUARTZ_BLOCK
	f	Ldcr;	hM	QUARTZ_BRICKS
	f	Ldcr;	hN	QUARTZ_PILLAR
	f	Ldcr;	hO	QUARTZ_STAIRS
	f	Ldcr;	hP	WHITE_TERRACOTTA
	f	Ldcr;	hQ	ORANGE_TERRACOTTA
	f	Ldcr;	hR	MAGENTA_TERRACOTTA
	f	Ldcr;	hS	LIGHT_BLUE_TERRACOTTA
	f	Ldcr;	hT	YELLOW_TERRACOTTA
	f	Ldcr;	hU	LIME_TERRACOTTA
	f	Ldcr;	hV	PINK_TERRACOTTA
	f	Ldcr;	hW	GRAY_TERRACOTTA
	f	Ldcr;	hX	LIGHT_GRAY_TERRACOTTA
	f	Ldcr;	hY	CYAN_TERRACOTTA
	f	Ldcr;	hZ	PURPLE_TERRACOTTA
	f	Ldcr;	ia	BLUE_TERRACOTTA
	f	Ldcr;	ib	BROWN_TERRACOTTA
	f	Ldcr;	ic	GREEN_TERRACOTTA
	f	Ldcr;	id	RED_TERRACOTTA
	f	Ldcr;	ie	BLACK_TERRACOTTA
	f	Ldcr;	if	BARRIER
	f	Ldcr;	ig	LIGHT
	f	Ldcr;	ih	HAY_BLOCK
	f	Ldcr;	ii	WHITE_CARPET
	f	Ldcr;	ij	ORANGE_CARPET
	f	Ldcr;	ik	MAGENTA_CARPET
	f	Ldcr;	il	LIGHT_BLUE_CARPET
	f	Ldcr;	im	YELLOW_CARPET
	f	Ldcr;	in	LIME_CARPET
	f	Ldcr;	io	PINK_CARPET
	f	Ldcr;	ip	GRAY_CARPET
	f	Ldcr;	iq	LIGHT_GRAY_CARPET
	f	Ldcr;	ir	CYAN_CARPET
	f	Ldcr;	is	PURPLE_CARPET
	f	Ldcr;	it	BLUE_CARPET
	f	Ldcr;	iu	BROWN_CARPET
	f	Ldcr;	iv	GREEN_CARPET
	f	Ldcr;	iw	RED_CARPET
	f	Ldcr;	ix	BLACK_CARPET
	f	Ldcr;	iy	TERRACOTTA
	f	Ldcr;	iz	PACKED_ICE
	f	Ldcr;	iA	DIRT_PATH
	f	Ldcr;	iB	SUNFLOWER
	f	Ldcr;	iC	LILAC
	f	Ldcr;	iD	ROSE_BUSH
	f	Ldcr;	iE	PEONY
	f	Ldcr;	iF	TALL_GRASS
	f	Ldcr;	iG	LARGE_FERN
	f	Ldcr;	iH	WHITE_STAINED_GLASS
	f	Ldcr;	iI	ORANGE_STAINED_GLASS
	f	Ldcr;	iJ	MAGENTA_STAINED_GLASS
	f	Ldcr;	iK	LIGHT_BLUE_STAINED_GLASS
	f	Ldcr;	iL	YELLOW_STAINED_GLASS
	f	Ldcr;	iM	LIME_STAINED_GLASS
	f	Ldcr;	iN	PINK_STAINED_GLASS
	f	Ldcr;	iO	GRAY_STAINED_GLASS
	f	Ldcr;	iP	LIGHT_GRAY_STAINED_GLASS
	f	Ldcr;	iQ	CYAN_STAINED_GLASS
	f	Ldcr;	iR	PURPLE_STAINED_GLASS
	f	Ldcr;	iS	BLUE_STAINED_GLASS
	f	Ldcr;	iT	BROWN_STAINED_GLASS
	f	Ldcr;	iU	GREEN_STAINED_GLASS
	f	Ldcr;	iV	RED_STAINED_GLASS
	f	Ldcr;	iW	BLACK_STAINED_GLASS
	f	Ldcr;	iX	WHITE_STAINED_GLASS_PANE
	f	Ldcr;	iY	ORANGE_STAINED_GLASS_PANE
	f	Ldcr;	iZ	MAGENTA_STAINED_GLASS_PANE
	f	Ldcr;	ja	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Ldcr;	jb	YELLOW_STAINED_GLASS_PANE
	f	Ldcr;	jc	LIME_STAINED_GLASS_PANE
	f	Ldcr;	jd	PINK_STAINED_GLASS_PANE
	f	Ldcr;	je	GRAY_STAINED_GLASS_PANE
	f	Ldcr;	jf	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Ldcr;	jg	CYAN_STAINED_GLASS_PANE
	f	Ldcr;	jh	PURPLE_STAINED_GLASS_PANE
	f	Ldcr;	ji	BLUE_STAINED_GLASS_PANE
	f	Ldcr;	jj	BROWN_STAINED_GLASS_PANE
	f	Ldcr;	jk	GREEN_STAINED_GLASS_PANE
	f	Ldcr;	jl	RED_STAINED_GLASS_PANE
	f	Ldcr;	jm	BLACK_STAINED_GLASS_PANE
	f	Ldcr;	jn	PRISMARINE
	f	Ldcr;	jo	PRISMARINE_BRICKS
	f	Ldcr;	jp	DARK_PRISMARINE
	f	Ldcr;	jq	PRISMARINE_STAIRS
	f	Ldcr;	jr	PRISMARINE_BRICK_STAIRS
	f	Ldcr;	js	DARK_PRISMARINE_STAIRS
	f	Ldcr;	jt	SEA_LANTERN
	f	Ldcr;	ju	RED_SANDSTONE
	f	Ldcr;	jv	CHISELED_RED_SANDSTONE
	f	Ldcr;	jw	CUT_RED_SANDSTONE
	f	Ldcr;	jx	RED_SANDSTONE_STAIRS
	f	Ldcr;	jy	REPEATING_COMMAND_BLOCK
	f	Ldcr;	jz	CHAIN_COMMAND_BLOCK
	f	Ldcr;	jA	MAGMA_BLOCK
	f	Ldcr;	jB	NETHER_WART_BLOCK
	f	Ldcr;	jC	WARPED_WART_BLOCK
	f	Ldcr;	jD	RED_NETHER_BRICKS
	f	Ldcr;	jE	BONE_BLOCK
	f	Ldcr;	jF	STRUCTURE_VOID
	f	Ldcr;	jG	SHULKER_BOX
	f	Ldcr;	jH	WHITE_SHULKER_BOX
	f	Ldcr;	jI	ORANGE_SHULKER_BOX
	f	Ldcr;	jJ	MAGENTA_SHULKER_BOX
	f	Ldcr;	jK	LIGHT_BLUE_SHULKER_BOX
	f	Ldcr;	jL	YELLOW_SHULKER_BOX
	f	Ldcr;	jM	LIME_SHULKER_BOX
	f	Ldcr;	jN	PINK_SHULKER_BOX
	f	Ldcr;	jO	GRAY_SHULKER_BOX
	f	Ldcr;	jP	LIGHT_GRAY_SHULKER_BOX
	f	Ldcr;	jQ	CYAN_SHULKER_BOX
	f	Ldcr;	jR	PURPLE_SHULKER_BOX
	f	Ldcr;	jS	BLUE_SHULKER_BOX
	f	Ldcr;	jT	BROWN_SHULKER_BOX
	f	Ldcr;	jU	GREEN_SHULKER_BOX
	f	Ldcr;	jV	RED_SHULKER_BOX
	f	Ldcr;	jW	BLACK_SHULKER_BOX
	f	Ldcr;	jX	WHITE_GLAZED_TERRACOTTA
	f	Ldcr;	jY	ORANGE_GLAZED_TERRACOTTA
	f	Ldcr;	jZ	MAGENTA_GLAZED_TERRACOTTA
	f	Ldcr;	ka	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Ldcr;	kb	YELLOW_GLAZED_TERRACOTTA
	f	Ldcr;	kc	LIME_GLAZED_TERRACOTTA
	f	Ldcr;	kd	PINK_GLAZED_TERRACOTTA
	f	Ldcr;	ke	GRAY_GLAZED_TERRACOTTA
	f	Ldcr;	kf	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Ldcr;	kg	CYAN_GLAZED_TERRACOTTA
	f	Ldcr;	kh	PURPLE_GLAZED_TERRACOTTA
	f	Ldcr;	ki	BLUE_GLAZED_TERRACOTTA
	f	Ldcr;	kj	BROWN_GLAZED_TERRACOTTA
	f	Ldcr;	kk	GREEN_GLAZED_TERRACOTTA
	f	Ldcr;	kl	RED_GLAZED_TERRACOTTA
	f	Ldcr;	km	BLACK_GLAZED_TERRACOTTA
	f	Ldcr;	kn	WHITE_CONCRETE
	f	Ldcr;	ko	ORANGE_CONCRETE
	f	Ldcr;	kp	MAGENTA_CONCRETE
	f	Ldcr;	kq	LIGHT_BLUE_CONCRETE
	f	Ldcr;	kr	YELLOW_CONCRETE
	f	Ldcr;	ks	LIME_CONCRETE
	f	Ldcr;	kt	PINK_CONCRETE
	f	Ldcr;	ku	GRAY_CONCRETE
	f	Ldcr;	kv	LIGHT_GRAY_CONCRETE
	f	Ldcr;	kw	CYAN_CONCRETE
	f	Ldcr;	kx	PURPLE_CONCRETE
	f	Ldcr;	ky	BLUE_CONCRETE
	f	Ldcr;	kz	BROWN_CONCRETE
	f	Ldcr;	kA	GREEN_CONCRETE
	f	Ldcr;	kB	RED_CONCRETE
	f	Ldcr;	kC	BLACK_CONCRETE
	f	Ldcr;	kD	WHITE_CONCRETE_POWDER
	f	Ldcr;	kE	ORANGE_CONCRETE_POWDER
	f	Ldcr;	kF	MAGENTA_CONCRETE_POWDER
	f	Ldcr;	kG	LIGHT_BLUE_CONCRETE_POWDER
	f	Ldcr;	kH	YELLOW_CONCRETE_POWDER
	f	Ldcr;	kI	LIME_CONCRETE_POWDER
	f	Ldcr;	kJ	PINK_CONCRETE_POWDER
	f	Ldcr;	kK	GRAY_CONCRETE_POWDER
	f	Ldcr;	kL	LIGHT_GRAY_CONCRETE_POWDER
	f	Ldcr;	kM	CYAN_CONCRETE_POWDER
	f	Ldcr;	kN	PURPLE_CONCRETE_POWDER
	f	Ldcr;	kO	BLUE_CONCRETE_POWDER
	f	Ldcr;	kP	BROWN_CONCRETE_POWDER
	f	Ldcr;	kQ	GREEN_CONCRETE_POWDER
	f	Ldcr;	kR	RED_CONCRETE_POWDER
	f	Ldcr;	kS	BLACK_CONCRETE_POWDER
	f	Ldcr;	kT	TURTLE_EGG
	f	Ldcr;	kU	SNIFFER_EGG
	f	Ldcr;	kV	DRIED_GHAST
	f	Ldcr;	kW	DEAD_TUBE_CORAL_BLOCK
	f	Ldcr;	kX	DEAD_BRAIN_CORAL_BLOCK
	f	Ldcr;	kY	DEAD_BUBBLE_CORAL_BLOCK
	f	Ldcr;	kZ	DEAD_FIRE_CORAL_BLOCK
	f	Ldcr;	la	DEAD_HORN_CORAL_BLOCK
	f	Ldcr;	lb	TUBE_CORAL_BLOCK
	f	Ldcr;	lc	BRAIN_CORAL_BLOCK
	f	Ldcr;	ld	BUBBLE_CORAL_BLOCK
	f	Ldcr;	le	FIRE_CORAL_BLOCK
	f	Ldcr;	lf	HORN_CORAL_BLOCK
	f	Ldcr;	lg	TUBE_CORAL
	f	Ldcr;	lh	BRAIN_CORAL
	f	Ldcr;	li	BUBBLE_CORAL
	f	Ldcr;	lj	FIRE_CORAL
	f	Ldcr;	lk	HORN_CORAL
	f	Ldcr;	ll	DEAD_BRAIN_CORAL
	f	Ldcr;	lm	DEAD_BUBBLE_CORAL
	f	Ldcr;	ln	DEAD_FIRE_CORAL
	f	Ldcr;	lo	DEAD_HORN_CORAL
	f	Ldcr;	lp	DEAD_TUBE_CORAL
	f	Ldcr;	lq	TUBE_CORAL_FAN
	f	Ldcr;	lr	BRAIN_CORAL_FAN
	f	Ldcr;	ls	BUBBLE_CORAL_FAN
	f	Ldcr;	lt	FIRE_CORAL_FAN
	f	Ldcr;	lu	HORN_CORAL_FAN
	f	Ldcr;	lv	DEAD_TUBE_CORAL_FAN
	f	Ldcr;	lw	DEAD_BRAIN_CORAL_FAN
	f	Ldcr;	lx	DEAD_BUBBLE_CORAL_FAN
	f	Ldcr;	ly	DEAD_FIRE_CORAL_FAN
	f	Ldcr;	lz	DEAD_HORN_CORAL_FAN
	f	Ldcr;	lA	BLUE_ICE
	f	Ldcr;	lB	CONDUIT
	f	Ldcr;	lC	POLISHED_GRANITE_STAIRS
	f	Ldcr;	lD	SMOOTH_RED_SANDSTONE_STAIRS
	f	Ldcr;	lE	MOSSY_STONE_BRICK_STAIRS
	f	Ldcr;	lF	POLISHED_DIORITE_STAIRS
	f	Ldcr;	lG	MOSSY_COBBLESTONE_STAIRS
	f	Ldcr;	lH	END_STONE_BRICK_STAIRS
	f	Ldcr;	lI	STONE_STAIRS
	f	Ldcr;	lJ	SMOOTH_SANDSTONE_STAIRS
	f	Ldcr;	lK	SMOOTH_QUARTZ_STAIRS
	f	Ldcr;	lL	GRANITE_STAIRS
	f	Ldcr;	lM	ANDESITE_STAIRS
	f	Ldcr;	lN	RED_NETHER_BRICK_STAIRS
	f	Ldcr;	lO	POLISHED_ANDESITE_STAIRS
	f	Ldcr;	lP	DIORITE_STAIRS
	f	Ldcr;	lQ	COBBLED_DEEPSLATE_STAIRS
	f	Ldcr;	lR	POLISHED_DEEPSLATE_STAIRS
	f	Ldcr;	lS	DEEPSLATE_BRICK_STAIRS
	f	Ldcr;	lT	DEEPSLATE_TILE_STAIRS
	f	Ldcr;	lU	POLISHED_GRANITE_SLAB
	f	Ldcr;	lV	SMOOTH_RED_SANDSTONE_SLAB
	f	Ldcr;	lW	MOSSY_STONE_BRICK_SLAB
	f	Ldcr;	lX	POLISHED_DIORITE_SLAB
	f	Ldcr;	lY	MOSSY_COBBLESTONE_SLAB
	f	Ldcr;	lZ	END_STONE_BRICK_SLAB
	f	Ldcr;	ma	SMOOTH_SANDSTONE_SLAB
	f	Ldcr;	mb	SMOOTH_QUARTZ_SLAB
	f	Ldcr;	mc	GRANITE_SLAB
	f	Ldcr;	md	ANDESITE_SLAB
	f	Ldcr;	me	RED_NETHER_BRICK_SLAB
	f	Ldcr;	mf	POLISHED_ANDESITE_SLAB
	f	Ldcr;	mg	DIORITE_SLAB
	f	Ldcr;	mh	COBBLED_DEEPSLATE_SLAB
	f	Ldcr;	mi	POLISHED_DEEPSLATE_SLAB
	f	Ldcr;	mj	DEEPSLATE_BRICK_SLAB
	f	Ldcr;	mk	DEEPSLATE_TILE_SLAB
	f	Ldcr;	ml	SCAFFOLDING
	f	Ldcr;	mm	REDSTONE
	f	Ldcr;	mn	REDSTONE_TORCH
	f	Ldcr;	mo	REDSTONE_BLOCK
	f	Ldcr;	mp	REPEATER
	f	Ldcr;	mq	COMPARATOR
	f	Ldcr;	mr	PISTON
	f	Ldcr;	ms	STICKY_PISTON
	f	Ldcr;	mt	SLIME_BLOCK
	f	Ldcr;	mu	HONEY_BLOCK
	f	Ldcr;	mv	OBSERVER
	f	Ldcr;	mw	HOPPER
	f	Ldcr;	mx	DISPENSER
	f	Ldcr;	my	DROPPER
	f	Ldcr;	mz	LECTERN
	f	Ldcr;	mA	TARGET
	f	Ldcr;	mB	LEVER
	f	Ldcr;	mC	LIGHTNING_ROD
	f	Ldcr;	mD	DAYLIGHT_DETECTOR
	f	Ldcr;	mE	SCULK_SENSOR
	f	Ldcr;	mF	CALIBRATED_SCULK_SENSOR
	f	Ldcr;	mG	TRIPWIRE_HOOK
	f	Ldcr;	mH	TRAPPED_CHEST
	f	Ldcr;	mI	TNT
	f	Ldcr;	mJ	REDSTONE_LAMP
	f	Ldcr;	mK	NOTE_BLOCK
	f	Ldcr;	mL	STONE_BUTTON
	f	Ldcr;	mM	POLISHED_BLACKSTONE_BUTTON
	f	Ldcr;	mN	OAK_BUTTON
	f	Ldcr;	mO	SPRUCE_BUTTON
	f	Ldcr;	mP	BIRCH_BUTTON
	f	Ldcr;	mQ	JUNGLE_BUTTON
	f	Ldcr;	mR	ACACIA_BUTTON
	f	Ldcr;	mS	CHERRY_BUTTON
	f	Ldcr;	mT	DARK_OAK_BUTTON
	f	Ldcr;	mU	PALE_OAK_BUTTON
	f	Ldcr;	mV	MANGROVE_BUTTON
	f	Ldcr;	mW	BAMBOO_BUTTON
	f	Ldcr;	mX	CRIMSON_BUTTON
	f	Ldcr;	mY	WARPED_BUTTON
	f	Ldcr;	mZ	STONE_PRESSURE_PLATE
	f	Ldcr;	na	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Ldcr;	nb	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Ldcr;	nc	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Ldcr;	nd	OAK_PRESSURE_PLATE
	f	Ldcr;	ne	SPRUCE_PRESSURE_PLATE
	f	Ldcr;	nf	BIRCH_PRESSURE_PLATE
	f	Ldcr;	ng	JUNGLE_PRESSURE_PLATE
	f	Ldcr;	nh	ACACIA_PRESSURE_PLATE
	f	Ldcr;	ni	CHERRY_PRESSURE_PLATE
	f	Ldcr;	nj	DARK_OAK_PRESSURE_PLATE
	f	Ldcr;	nk	PALE_OAK_PRESSURE_PLATE
	f	Ldcr;	nl	MANGROVE_PRESSURE_PLATE
	f	Ldcr;	nm	BAMBOO_PRESSURE_PLATE
	f	Ldcr;	nn	CRIMSON_PRESSURE_PLATE
	f	Ldcr;	no	WARPED_PRESSURE_PLATE
	f	Ldcr;	np	IRON_DOOR
	f	Ldcr;	nq	OAK_DOOR
	f	Ldcr;	nr	SPRUCE_DOOR
	f	Ldcr;	ns	BIRCH_DOOR
	f	Ldcr;	nt	JUNGLE_DOOR
	f	Ldcr;	nu	ACACIA_DOOR
	f	Ldcr;	nv	CHERRY_DOOR
	f	Ldcr;	nw	DARK_OAK_DOOR
	f	Ldcr;	nx	PALE_OAK_DOOR
	f	Ldcr;	ny	MANGROVE_DOOR
	f	Ldcr;	nz	BAMBOO_DOOR
	f	Ldcr;	nA	CRIMSON_DOOR
	f	Ldcr;	nB	WARPED_DOOR
	f	Ldcr;	nC	COPPER_DOOR
	f	Ldcr;	nD	EXPOSED_COPPER_DOOR
	f	Ldcr;	nE	WEATHERED_COPPER_DOOR
	f	Ldcr;	nF	OXIDIZED_COPPER_DOOR
	f	Ldcr;	nG	WAXED_COPPER_DOOR
	f	Ldcr;	nH	WAXED_EXPOSED_COPPER_DOOR
	f	Ldcr;	nI	WAXED_WEATHERED_COPPER_DOOR
	f	Ldcr;	nJ	WAXED_OXIDIZED_COPPER_DOOR
	f	Ldcr;	nK	IRON_TRAPDOOR
	f	Ldcr;	nL	OAK_TRAPDOOR
	f	Ldcr;	nM	SPRUCE_TRAPDOOR
	f	Ldcr;	nN	BIRCH_TRAPDOOR
	f	Ldcr;	nO	JUNGLE_TRAPDOOR
	f	Ldcr;	nP	ACACIA_TRAPDOOR
	f	Ldcr;	nQ	CHERRY_TRAPDOOR
	f	Ldcr;	nR	DARK_OAK_TRAPDOOR
	f	Ldcr;	nS	PALE_OAK_TRAPDOOR
	f	Ldcr;	nT	MANGROVE_TRAPDOOR
	f	Ldcr;	nU	BAMBOO_TRAPDOOR
	f	Ldcr;	nV	CRIMSON_TRAPDOOR
	f	Ldcr;	nW	WARPED_TRAPDOOR
	f	Ldcr;	nX	COPPER_TRAPDOOR
	f	Ldcr;	nY	EXPOSED_COPPER_TRAPDOOR
	f	Ldcr;	nZ	WEATHERED_COPPER_TRAPDOOR
	f	Ldcr;	oa	OXIDIZED_COPPER_TRAPDOOR
	f	Ldcr;	ob	WAXED_COPPER_TRAPDOOR
	f	Ldcr;	oc	WAXED_EXPOSED_COPPER_TRAPDOOR
	f	Ldcr;	od	WAXED_WEATHERED_COPPER_TRAPDOOR
	f	Ldcr;	oe	WAXED_OXIDIZED_COPPER_TRAPDOOR
	f	Ldcr;	of	OAK_FENCE_GATE
	f	Ldcr;	og	SPRUCE_FENCE_GATE
	f	Ldcr;	oh	BIRCH_FENCE_GATE
	f	Ldcr;	oi	JUNGLE_FENCE_GATE
	f	Ldcr;	oj	ACACIA_FENCE_GATE
	f	Ldcr;	ok	CHERRY_FENCE_GATE
	f	Ldcr;	ol	DARK_OAK_FENCE_GATE
	f	Ldcr;	om	PALE_OAK_FENCE_GATE
	f	Ldcr;	on	MANGROVE_FENCE_GATE
	f	Ldcr;	oo	BAMBOO_FENCE_GATE
	f	Ldcr;	op	CRIMSON_FENCE_GATE
	f	Ldcr;	oq	WARPED_FENCE_GATE
	f	Ldcr;	or	POWERED_RAIL
	f	Ldcr;	os	DETECTOR_RAIL
	f	Ldcr;	ot	RAIL
	f	Ldcr;	ou	ACTIVATOR_RAIL
	f	Ldcr;	ov	SADDLE
	f	Ldcr;	ow	WHITE_HARNESS
	f	Ldcr;	ox	ORANGE_HARNESS
	f	Ldcr;	oy	MAGENTA_HARNESS
	f	Ldcr;	oz	LIGHT_BLUE_HARNESS
	f	Ldcr;	oA	YELLOW_HARNESS
	f	Ldcr;	oB	LIME_HARNESS
	f	Ldcr;	oC	PINK_HARNESS
	f	Ldcr;	oD	GRAY_HARNESS
	f	Ldcr;	oE	LIGHT_GRAY_HARNESS
	f	Ldcr;	oF	CYAN_HARNESS
	f	Ldcr;	oG	PURPLE_HARNESS
	f	Ldcr;	oH	BLUE_HARNESS
	f	Ldcr;	oI	BROWN_HARNESS
	f	Ldcr;	oJ	GREEN_HARNESS
	f	Ldcr;	oK	RED_HARNESS
	f	Ldcr;	oL	BLACK_HARNESS
	f	Ldcr;	oM	MINECART
	f	Ldcr;	oN	CHEST_MINECART
	f	Ldcr;	oO	FURNACE_MINECART
	f	Ldcr;	oP	TNT_MINECART
	f	Ldcr;	oQ	HOPPER_MINECART
	f	Ldcr;	oR	CARROT_ON_A_STICK
	f	Ldcr;	oS	WARPED_FUNGUS_ON_A_STICK
	f	Ldcr;	oT	PHANTOM_MEMBRANE
	f	Ldcr;	oU	ELYTRA
	f	Ldcr;	oV	OAK_BOAT
	f	Ldcr;	oW	OAK_CHEST_BOAT
	f	Ldcr;	oX	SPRUCE_BOAT
	f	Ldcr;	oY	SPRUCE_CHEST_BOAT
	f	Ldcr;	oZ	BIRCH_BOAT
	f	Ldcr;	pa	BIRCH_CHEST_BOAT
	f	Ldcr;	pb	JUNGLE_BOAT
	f	Ldcr;	pc	JUNGLE_CHEST_BOAT
	f	Ldcr;	pd	ACACIA_BOAT
	f	Ldcr;	pe	ACACIA_CHEST_BOAT
	f	Ldcr;	pf	CHERRY_BOAT
	f	Ldcr;	pg	CHERRY_CHEST_BOAT
	f	Ldcr;	ph	DARK_OAK_BOAT
	f	Ldcr;	pi	DARK_OAK_CHEST_BOAT
	f	Ldcr;	pj	PALE_OAK_BOAT
	f	Ldcr;	pk	PALE_OAK_CHEST_BOAT
	f	Ldcr;	pl	MANGROVE_BOAT
	f	Ldcr;	pm	MANGROVE_CHEST_BOAT
	f	Ldcr;	pn	BAMBOO_RAFT
	f	Ldcr;	po	BAMBOO_CHEST_RAFT
	f	Ldcr;	pp	STRUCTURE_BLOCK
	f	Ldcr;	pq	JIGSAW
	f	Ldcr;	pr	TEST_BLOCK
	f	Ldcr;	ps	TEST_INSTANCE_BLOCK
	f	Ldcr;	pt	TURTLE_HELMET
	f	Ldcr;	pu	TURTLE_SCUTE
	f	Ldcr;	pv	ARMADILLO_SCUTE
	f	Ldcr;	pw	WOLF_ARMOR
	f	Ldcr;	px	FLINT_AND_STEEL
	f	Ldcr;	py	BOWL
	f	Ldcr;	pz	APPLE
	f	Ldcr;	pA	BOW
	f	Ldcr;	pB	ARROW
	f	Ldcr;	pC	COAL
	f	Ldcr;	pD	CHARCOAL
	f	Ldcr;	pE	DIAMOND
	f	Ldcr;	pF	EMERALD
	f	Ldcr;	pG	LAPIS_LAZULI
	f	Ldcr;	pH	QUARTZ
	f	Ldcr;	pI	AMETHYST_SHARD
	f	Ldcr;	pJ	RAW_IRON
	f	Ldcr;	pK	IRON_INGOT
	f	Ldcr;	pL	RAW_COPPER
	f	Ldcr;	pM	COPPER_INGOT
	f	Ldcr;	pN	RAW_GOLD
	f	Ldcr;	pO	GOLD_INGOT
	f	Ldcr;	pP	NETHERITE_INGOT
	f	Ldcr;	pQ	NETHERITE_SCRAP
	f	Ldcr;	pR	WOODEN_SWORD
	f	Ldcr;	pS	WOODEN_SHOVEL
	f	Ldcr;	pT	WOODEN_PICKAXE
	f	Ldcr;	pU	WOODEN_AXE
	f	Ldcr;	pV	WOODEN_HOE
	f	Ldcr;	pW	STONE_SWORD
	f	Ldcr;	pX	STONE_SHOVEL
	f	Ldcr;	pY	STONE_PICKAXE
	f	Ldcr;	pZ	STONE_AXE
	f	Ldcr;	qa	STONE_HOE
	f	Ldcr;	qb	GOLDEN_SWORD
	f	Ldcr;	qc	GOLDEN_SHOVEL
	f	Ldcr;	qd	GOLDEN_PICKAXE
	f	Ldcr;	qe	GOLDEN_AXE
	f	Ldcr;	qf	GOLDEN_HOE
	f	Ldcr;	qg	IRON_SWORD
	f	Ldcr;	qh	IRON_SHOVEL
	f	Ldcr;	qi	IRON_PICKAXE
	f	Ldcr;	qj	IRON_AXE
	f	Ldcr;	qk	IRON_HOE
	f	Ldcr;	ql	DIAMOND_SWORD
	f	Ldcr;	qm	DIAMOND_SHOVEL
	f	Ldcr;	qn	DIAMOND_PICKAXE
	f	Ldcr;	qo	DIAMOND_AXE
	f	Ldcr;	qp	DIAMOND_HOE
	f	Ldcr;	qq	NETHERITE_SWORD
	f	Ldcr;	qr	NETHERITE_SHOVEL
	f	Ldcr;	qs	NETHERITE_PICKAXE
	f	Ldcr;	qt	NETHERITE_AXE
	f	Ldcr;	qu	NETHERITE_HOE
	f	Ldcr;	qv	STICK
	f	Ldcr;	qw	MUSHROOM_STEW
	f	Ldcr;	qx	STRING
	f	Ldcr;	qy	FEATHER
	f	Ldcr;	qz	GUNPOWDER
	f	Ldcr;	qA	WHEAT_SEEDS
	f	Ldcr;	qB	WHEAT
	f	Ldcr;	qC	BREAD
	f	Ldcr;	qD	LEATHER_HELMET
	f	Ldcr;	qE	LEATHER_CHESTPLATE
	f	Ldcr;	qF	LEATHER_LEGGINGS
	f	Ldcr;	qG	LEATHER_BOOTS
	f	Ldcr;	qH	CHAINMAIL_HELMET
	f	Ldcr;	qI	CHAINMAIL_CHESTPLATE
	f	Ldcr;	qJ	CHAINMAIL_LEGGINGS
	f	Ldcr;	qK	CHAINMAIL_BOOTS
	f	Ldcr;	qL	IRON_HELMET
	f	Ldcr;	qM	IRON_CHESTPLATE
	f	Ldcr;	qN	IRON_LEGGINGS
	f	Ldcr;	qO	IRON_BOOTS
	f	Ldcr;	qP	DIAMOND_HELMET
	f	Ldcr;	qQ	DIAMOND_CHESTPLATE
	f	Ldcr;	qR	DIAMOND_LEGGINGS
	f	Ldcr;	qS	DIAMOND_BOOTS
	f	Ldcr;	qT	GOLDEN_HELMET
	f	Ldcr;	qU	GOLDEN_CHESTPLATE
	f	Ldcr;	qV	GOLDEN_LEGGINGS
	f	Ldcr;	qW	GOLDEN_BOOTS
	f	Ldcr;	qX	NETHERITE_HELMET
	f	Ldcr;	qY	NETHERITE_CHESTPLATE
	f	Ldcr;	qZ	NETHERITE_LEGGINGS
	f	Ldcr;	ra	NETHERITE_BOOTS
	f	Ldcr;	rb	FLINT
	f	Ldcr;	rc	PORKCHOP
	f	Ldcr;	rd	COOKED_PORKCHOP
	f	Ldcr;	re	PAINTING
	f	Ldcr;	rf	GOLDEN_APPLE
	f	Ldcr;	rg	ENCHANTED_GOLDEN_APPLE
	f	Ldcr;	rh	OAK_SIGN
	f	Ldcr;	ri	SPRUCE_SIGN
	f	Ldcr;	rj	BIRCH_SIGN
	f	Ldcr;	rk	JUNGLE_SIGN
	f	Ldcr;	rl	ACACIA_SIGN
	f	Ldcr;	rm	CHERRY_SIGN
	f	Ldcr;	rn	DARK_OAK_SIGN
	f	Ldcr;	ro	PALE_OAK_SIGN
	f	Ldcr;	rp	MANGROVE_SIGN
	f	Ldcr;	rq	BAMBOO_SIGN
	f	Ldcr;	rr	CRIMSON_SIGN
	f	Ldcr;	rs	WARPED_SIGN
	f	Ldcr;	rt	OAK_HANGING_SIGN
	f	Ldcr;	ru	SPRUCE_HANGING_SIGN
	f	Ldcr;	rv	BIRCH_HANGING_SIGN
	f	Ldcr;	rw	JUNGLE_HANGING_SIGN
	f	Ldcr;	rx	ACACIA_HANGING_SIGN
	f	Ldcr;	ry	CHERRY_HANGING_SIGN
	f	Ldcr;	rz	DARK_OAK_HANGING_SIGN
	f	Ldcr;	rA	PALE_OAK_HANGING_SIGN
	f	Ldcr;	rB	MANGROVE_HANGING_SIGN
	f	Ldcr;	rC	BAMBOO_HANGING_SIGN
	f	Ldcr;	rD	CRIMSON_HANGING_SIGN
	f	Ldcr;	rE	WARPED_HANGING_SIGN
	f	Ldcr;	rF	BUCKET
	f	Ldcr;	rG	WATER_BUCKET
	f	Ldcr;	rH	LAVA_BUCKET
	f	Ldcr;	rI	POWDER_SNOW_BUCKET
	f	Ldcr;	rJ	SNOWBALL
	f	Ldcr;	rK	LEATHER
	f	Ldcr;	rL	MILK_BUCKET
	f	Ldcr;	rM	PUFFERFISH_BUCKET
	f	Ldcr;	rN	SALMON_BUCKET
	f	Ldcr;	rO	COD_BUCKET
	f	Ldcr;	rP	TROPICAL_FISH_BUCKET
	f	Ldcr;	rQ	AXOLOTL_BUCKET
	f	Ldcr;	rR	TADPOLE_BUCKET
	f	Ldcr;	rS	BRICK
	f	Ldcr;	rT	CLAY_BALL
	f	Ldcr;	rU	DRIED_KELP_BLOCK
	f	Ldcr;	rV	PAPER
	f	Ldcr;	rW	BOOK
	f	Ldcr;	rX	SLIME_BALL
	f	Ldcr;	rY	EGG
	f	Ldcr;	rZ	BLUE_EGG
	f	Ldcr;	sa	BROWN_EGG
	f	Ldcr;	sb	COMPASS
	f	Ldcr;	sc	RECOVERY_COMPASS
	f	Ldcr;	sd	BUNDLE
	f	Ldcr;	se	WHITE_BUNDLE
	f	Ldcr;	sf	ORANGE_BUNDLE
	f	Ldcr;	sg	MAGENTA_BUNDLE
	f	Ldcr;	sh	LIGHT_BLUE_BUNDLE
	f	Ldcr;	si	YELLOW_BUNDLE
	f	Ldcr;	sj	LIME_BUNDLE
	f	Ldcr;	sk	PINK_BUNDLE
	f	Ldcr;	sl	GRAY_BUNDLE
	f	Ldcr;	sm	LIGHT_GRAY_BUNDLE
	f	Ldcr;	sn	CYAN_BUNDLE
	f	Ldcr;	so	PURPLE_BUNDLE
	f	Ldcr;	sp	BLUE_BUNDLE
	f	Ldcr;	sq	BROWN_BUNDLE
	f	Ldcr;	sr	GREEN_BUNDLE
	f	Ldcr;	ss	RED_BUNDLE
	f	Ldcr;	st	BLACK_BUNDLE
	f	Ldcr;	su	FISHING_ROD
	f	Ldcr;	sv	CLOCK
	f	Ldcr;	sw	SPYGLASS
	f	Ldcr;	sx	GLOWSTONE_DUST
	f	Ldcr;	sy	COD
	f	Ldcr;	sz	SALMON
	f	Ldcr;	sA	TROPICAL_FISH
	f	Ldcr;	sB	PUFFERFISH
	f	Ldcr;	sC	COOKED_COD
	f	Ldcr;	sD	COOKED_SALMON
	f	Ldcr;	sE	INK_SAC
	f	Ldcr;	sF	GLOW_INK_SAC
	f	Ldcr;	sG	COCOA_BEANS
	f	Ldcr;	sH	WHITE_DYE
	f	Ldcr;	sI	ORANGE_DYE
	f	Ldcr;	sJ	MAGENTA_DYE
	f	Ldcr;	sK	LIGHT_BLUE_DYE
	f	Ldcr;	sL	YELLOW_DYE
	f	Ldcr;	sM	LIME_DYE
	f	Ldcr;	sN	PINK_DYE
	f	Ldcr;	sO	GRAY_DYE
	f	Ldcr;	sP	LIGHT_GRAY_DYE
	f	Ldcr;	sQ	CYAN_DYE
	f	Ldcr;	sR	PURPLE_DYE
	f	Ldcr;	sS	BLUE_DYE
	f	Ldcr;	sT	BROWN_DYE
	f	Ldcr;	sU	GREEN_DYE
	f	Ldcr;	sV	RED_DYE
	f	Ldcr;	sW	BLACK_DYE
	f	Ldcr;	sX	BONE_MEAL
	f	Ldcr;	sY	BONE
	f	Ldcr;	sZ	SUGAR
	f	Ldcr;	ta	CAKE
	f	Ldcr;	tb	WHITE_BED
	f	Ldcr;	tc	ORANGE_BED
	f	Ldcr;	td	MAGENTA_BED
	f	Ldcr;	te	LIGHT_BLUE_BED
	f	Ldcr;	tf	YELLOW_BED
	f	Ldcr;	tg	LIME_BED
	f	Ldcr;	th	PINK_BED
	f	Ldcr;	ti	GRAY_BED
	f	Ldcr;	tj	LIGHT_GRAY_BED
	f	Ldcr;	tk	CYAN_BED
	f	Ldcr;	tl	PURPLE_BED
	f	Ldcr;	tm	BLUE_BED
	f	Ldcr;	tn	BROWN_BED
	f	Ldcr;	to	GREEN_BED
	f	Ldcr;	tp	RED_BED
	f	Ldcr;	tq	BLACK_BED
	f	Ldcr;	tr	COOKIE
	f	Ldcr;	ts	CRAFTER
	f	Ldcr;	tt	FILLED_MAP
	f	Ldcr;	tu	SHEARS
	f	Ldcr;	tv	MELON_SLICE
	f	Ldcr;	tw	DRIED_KELP
	f	Ldcr;	tx	PUMPKIN_SEEDS
	f	Ldcr;	ty	MELON_SEEDS
	f	Ldcr;	tz	BEEF
	f	Ldcr;	tA	COOKED_BEEF
	f	Ldcr;	tB	CHICKEN
	f	Ldcr;	tC	COOKED_CHICKEN
	f	Ldcr;	tD	ROTTEN_FLESH
	f	Ldcr;	tE	ENDER_PEARL
	f	Ldcr;	tF	BLAZE_ROD
	f	Ldcr;	tG	GHAST_TEAR
	f	Ldcr;	tH	GOLD_NUGGET
	f	Ldcr;	tI	NETHER_WART
	f	Ldcr;	tJ	GLASS_BOTTLE
	f	Ldcr;	tK	POTION
	f	Ldcr;	tL	SPIDER_EYE
	f	Ldcr;	tM	FERMENTED_SPIDER_EYE
	f	Ldcr;	tN	BLAZE_POWDER
	f	Ldcr;	tO	MAGMA_CREAM
	f	Ldcr;	tP	BREWING_STAND
	f	Ldcr;	tQ	CAULDRON
	f	Ldcr;	tR	ENDER_EYE
	f	Ldcr;	tS	GLISTERING_MELON_SLICE
	f	Ldcr;	tT	ARMADILLO_SPAWN_EGG
	f	Ldcr;	tU	ALLAY_SPAWN_EGG
	f	Ldcr;	tV	AXOLOTL_SPAWN_EGG
	f	Ldcr;	tW	BAT_SPAWN_EGG
	f	Ldcr;	tX	BEE_SPAWN_EGG
	f	Ldcr;	tY	BLAZE_SPAWN_EGG
	f	Ldcr;	tZ	BOGGED_SPAWN_EGG
	f	Ldcr;	ua	BREEZE_SPAWN_EGG
	f	Ldcr;	ub	CAT_SPAWN_EGG
	f	Ldcr;	uc	CAMEL_SPAWN_EGG
	f	Ldcr;	ud	CAVE_SPIDER_SPAWN_EGG
	f	Ldcr;	ue	CHICKEN_SPAWN_EGG
	f	Ldcr;	uf	COD_SPAWN_EGG
	f	Ldcr;	ug	COW_SPAWN_EGG
	f	Ldcr;	uh	CREEPER_SPAWN_EGG
	f	Ldcr;	ui	DOLPHIN_SPAWN_EGG
	f	Ldcr;	uj	DONKEY_SPAWN_EGG
	f	Ldcr;	uk	DROWNED_SPAWN_EGG
	f	Ldcr;	ul	ELDER_GUARDIAN_SPAWN_EGG
	f	Ldcr;	um	ENDER_DRAGON_SPAWN_EGG
	f	Ldcr;	un	ENDERMAN_SPAWN_EGG
	f	Ldcr;	uo	ENDERMITE_SPAWN_EGG
	f	Ldcr;	up	EVOKER_SPAWN_EGG
	f	Ldcr;	uq	FOX_SPAWN_EGG
	f	Ldcr;	ur	FROG_SPAWN_EGG
	f	Ldcr;	us	GHAST_SPAWN_EGG
	f	Ldcr;	ut	HAPPY_GHAST_SPAWN_EGG
	f	Ldcr;	uu	GLOW_SQUID_SPAWN_EGG
	f	Ldcr;	uv	GOAT_SPAWN_EGG
	f	Ldcr;	uw	GUARDIAN_SPAWN_EGG
	f	Ldcr;	ux	HOGLIN_SPAWN_EGG
	f	Ldcr;	uy	HORSE_SPAWN_EGG
	f	Ldcr;	uz	HUSK_SPAWN_EGG
	f	Ldcr;	uA	IRON_GOLEM_SPAWN_EGG
	f	Ldcr;	uB	LLAMA_SPAWN_EGG
	f	Ldcr;	uC	MAGMA_CUBE_SPAWN_EGG
	f	Ldcr;	uD	MOOSHROOM_SPAWN_EGG
	f	Ldcr;	uE	MULE_SPAWN_EGG
	f	Ldcr;	uF	OCELOT_SPAWN_EGG
	f	Ldcr;	uG	PANDA_SPAWN_EGG
	f	Ldcr;	uH	PARROT_SPAWN_EGG
	f	Ldcr;	uI	PHANTOM_SPAWN_EGG
	f	Ldcr;	uJ	PIG_SPAWN_EGG
	f	Ldcr;	uK	PIGLIN_SPAWN_EGG
	f	Ldcr;	uL	PIGLIN_BRUTE_SPAWN_EGG
	f	Ldcr;	uM	PILLAGER_SPAWN_EGG
	f	Ldcr;	uN	POLAR_BEAR_SPAWN_EGG
	f	Ldcr;	uO	PUFFERFISH_SPAWN_EGG
	f	Ldcr;	uP	RABBIT_SPAWN_EGG
	f	Ldcr;	uQ	RAVAGER_SPAWN_EGG
	f	Ldcr;	uR	SALMON_SPAWN_EGG
	f	Ldcr;	uS	SHEEP_SPAWN_EGG
	f	Ldcr;	uT	SHULKER_SPAWN_EGG
	f	Ldcr;	uU	SILVERFISH_SPAWN_EGG
	f	Ldcr;	uV	SKELETON_SPAWN_EGG
	f	Ldcr;	uW	SKELETON_HORSE_SPAWN_EGG
	f	Ldcr;	uX	SLIME_SPAWN_EGG
	f	Ldcr;	uY	SNIFFER_SPAWN_EGG
	f	Ldcr;	uZ	SNOW_GOLEM_SPAWN_EGG
	f	Ldcr;	va	SPIDER_SPAWN_EGG
	f	Ldcr;	vb	SQUID_SPAWN_EGG
	f	Ldcr;	vc	STRAY_SPAWN_EGG
	f	Ldcr;	vd	STRIDER_SPAWN_EGG
	f	Ldcr;	ve	TADPOLE_SPAWN_EGG
	f	Ldcr;	vf	TRADER_LLAMA_SPAWN_EGG
	f	Ldcr;	vg	TROPICAL_FISH_SPAWN_EGG
	f	Ldcr;	vh	TURTLE_SPAWN_EGG
	f	Ldcr;	vi	VEX_SPAWN_EGG
	f	Ldcr;	vj	VILLAGER_SPAWN_EGG
	f	Ldcr;	vk	VINDICATOR_SPAWN_EGG
	f	Ldcr;	vl	WANDERING_TRADER_SPAWN_EGG
	f	Ldcr;	vm	WARDEN_SPAWN_EGG
	f	Ldcr;	vn	WITCH_SPAWN_EGG
	f	Ldcr;	vo	WITHER_SPAWN_EGG
	f	Ldcr;	vp	WITHER_SKELETON_SPAWN_EGG
	f	Ldcr;	vq	WOLF_SPAWN_EGG
	f	Ldcr;	vr	ZOGLIN_SPAWN_EGG
	f	Ldcr;	vs	CREAKING_SPAWN_EGG
	f	Ldcr;	vt	ZOMBIE_SPAWN_EGG
	f	Ldcr;	vu	ZOMBIE_HORSE_SPAWN_EGG
	f	Ldcr;	vv	ZOMBIE_VILLAGER_SPAWN_EGG
	f	Ldcr;	vw	ZOMBIFIED_PIGLIN_SPAWN_EGG
	f	Ldcr;	vx	EXPERIENCE_BOTTLE
	f	Ldcr;	vy	FIRE_CHARGE
	f	Ldcr;	vz	WIND_CHARGE
	f	Ldcr;	vA	WRITABLE_BOOK
	f	Ldcr;	vB	WRITTEN_BOOK
	f	Ldcr;	vC	BREEZE_ROD
	f	Ldcr;	vD	MACE
	f	Ldcr;	vE	ITEM_FRAME
	f	Ldcr;	vF	GLOW_ITEM_FRAME
	f	Ldcr;	vG	FLOWER_POT
	f	Ldcr;	vH	CARROT
	f	Ldcr;	vI	POTATO
	f	Ldcr;	vJ	BAKED_POTATO
	f	Ldcr;	vK	POISONOUS_POTATO
	f	Ldcr;	vL	MAP
	f	Ldcr;	vM	GOLDEN_CARROT
	f	Ldcr;	vN	SKELETON_SKULL
	f	Ldcr;	vO	WITHER_SKELETON_SKULL
	f	Ldcr;	vP	PLAYER_HEAD
	f	Ldcr;	vQ	ZOMBIE_HEAD
	f	Ldcr;	vR	CREEPER_HEAD
	f	Ldcr;	vS	DRAGON_HEAD
	f	Ldcr;	vT	PIGLIN_HEAD
	f	Ldcr;	vU	NETHER_STAR
	f	Ldcr;	vV	PUMPKIN_PIE
	f	Ldcr;	vW	FIREWORK_ROCKET
	f	Ldcr;	vX	FIREWORK_STAR
	f	Ldcr;	vY	ENCHANTED_BOOK
	f	Ldcr;	vZ	NETHER_BRICK
	f	Ldcr;	wa	RESIN_BRICK
	f	Ldcr;	wb	PRISMARINE_SHARD
	f	Ldcr;	wc	PRISMARINE_CRYSTALS
	f	Ldcr;	wd	RABBIT
	f	Ldcr;	we	COOKED_RABBIT
	f	Ldcr;	wf	RABBIT_STEW
	f	Ldcr;	wg	RABBIT_FOOT
	f	Ldcr;	wh	RABBIT_HIDE
	f	Ldcr;	wi	ARMOR_STAND
	f	Ldcr;	wj	IRON_HORSE_ARMOR
	f	Ldcr;	wk	GOLDEN_HORSE_ARMOR
	f	Ldcr;	wl	DIAMOND_HORSE_ARMOR
	f	Ldcr;	wm	LEATHER_HORSE_ARMOR
	f	Ldcr;	wn	LEAD
	f	Ldcr;	wo	NAME_TAG
	f	Ldcr;	wp	COMMAND_BLOCK_MINECART
	f	Ldcr;	wq	MUTTON
	f	Ldcr;	wr	COOKED_MUTTON
	f	Ldcr;	ws	WHITE_BANNER
	f	Ldcr;	wt	ORANGE_BANNER
	f	Ldcr;	wu	MAGENTA_BANNER
	f	Ldcr;	wv	LIGHT_BLUE_BANNER
	f	Ldcr;	ww	YELLOW_BANNER
	f	Ldcr;	wx	LIME_BANNER
	f	Ldcr;	wy	PINK_BANNER
	f	Ldcr;	wz	GRAY_BANNER
	f	Ldcr;	wA	LIGHT_GRAY_BANNER
	f	Ldcr;	wB	CYAN_BANNER
	f	Ldcr;	wC	PURPLE_BANNER
	f	Ldcr;	wD	BLUE_BANNER
	f	Ldcr;	wE	BROWN_BANNER
	f	Ldcr;	wF	GREEN_BANNER
	f	Ldcr;	wG	RED_BANNER
	f	Ldcr;	wH	BLACK_BANNER
	f	Ldcr;	wI	END_CRYSTAL
	f	Ldcr;	wJ	CHORUS_FRUIT
	f	Ldcr;	wK	POPPED_CHORUS_FRUIT
	f	Ldcr;	wL	TORCHFLOWER_SEEDS
	f	Ldcr;	wM	PITCHER_POD
	f	Ldcr;	wN	BEETROOT
	f	Ldcr;	wO	BEETROOT_SEEDS
	f	Ldcr;	wP	BEETROOT_SOUP
	f	Ldcr;	wQ	DRAGON_BREATH
	f	Ldcr;	wR	SPLASH_POTION
	f	Ldcr;	wS	SPECTRAL_ARROW
	f	Ldcr;	wT	TIPPED_ARROW
	f	Ldcr;	wU	LINGERING_POTION
	f	Ldcr;	wV	SHIELD
	f	Ldcr;	wW	TOTEM_OF_UNDYING
	f	Ldcr;	wX	SHULKER_SHELL
	f	Ldcr;	wY	IRON_NUGGET
	f	Ldcr;	wZ	KNOWLEDGE_BOOK
	f	Ldcr;	xa	DEBUG_STICK
	f	Ldcr;	xb	MUSIC_DISC_13
	f	Ldcr;	xc	MUSIC_DISC_CAT
	f	Ldcr;	xd	MUSIC_DISC_BLOCKS
	f	Ldcr;	xe	MUSIC_DISC_CHIRP
	f	Ldcr;	xf	MUSIC_DISC_CREATOR
	f	Ldcr;	xg	MUSIC_DISC_CREATOR_MUSIC_BOX
	f	Ldcr;	xh	MUSIC_DISC_FAR
	f	Ldcr;	xi	MUSIC_DISC_MALL
	f	Ldcr;	xj	MUSIC_DISC_MELLOHI
	f	Ldcr;	xk	MUSIC_DISC_STAL
	f	Ldcr;	xl	MUSIC_DISC_STRAD
	f	Ldcr;	xm	MUSIC_DISC_WARD
	f	Ldcr;	xn	MUSIC_DISC_11
	f	Ldcr;	xo	MUSIC_DISC_WAIT
	f	Ldcr;	xp	MUSIC_DISC_OTHERSIDE
	f	Ldcr;	xq	MUSIC_DISC_RELIC
	f	Ldcr;	xr	MUSIC_DISC_5
	f	Ldcr;	xs	MUSIC_DISC_PIGSTEP
	f	Ldcr;	xt	MUSIC_DISC_PRECIPICE
	f	Ldcr;	xu	MUSIC_DISC_TEARS
	f	Ldcr;	xv	DISC_FRAGMENT_5
	f	Ldcr;	xw	TRIDENT
	f	Ldcr;	xx	NAUTILUS_SHELL
	f	Ldcr;	xy	HEART_OF_THE_SEA
	f	Ldcr;	xz	CROSSBOW
	f	Ldcr;	xA	SUSPICIOUS_STEW
	f	Ldcr;	xB	LOOM
	f	Ldcr;	xC	FLOWER_BANNER_PATTERN
	f	Ldcr;	xD	CREEPER_BANNER_PATTERN
	f	Ldcr;	xE	SKULL_BANNER_PATTERN
	f	Ldcr;	xF	MOJANG_BANNER_PATTERN
	f	Ldcr;	xG	GLOBE_BANNER_PATTERN
	f	Ldcr;	xH	PIGLIN_BANNER_PATTERN
	f	Ldcr;	xI	FLOW_BANNER_PATTERN
	f	Ldcr;	xJ	GUSTER_BANNER_PATTERN
	f	Ldcr;	xK	FIELD_MASONED_BANNER_PATTERN
	f	Ldcr;	xL	BORDURE_INDENTED_BANNER_PATTERN
	f	Ldcr;	xM	GOAT_HORN
	f	Ldcr;	xN	COMPOSTER
	f	Ldcr;	xO	BARREL
	f	Ldcr;	xP	SMOKER
	f	Ldcr;	xQ	BLAST_FURNACE
	f	Ldcr;	xR	CARTOGRAPHY_TABLE
	f	Ldcr;	xS	FLETCHING_TABLE
	f	Ldcr;	xT	GRINDSTONE
	f	Ldcr;	xU	SMITHING_TABLE
	f	Ldcr;	xV	STONECUTTER
	f	Ldcr;	xW	BELL
	f	Ldcr;	xX	LANTERN
	f	Ldcr;	xY	SOUL_LANTERN
	f	Ldcr;	xZ	SWEET_BERRIES
	f	Ldcr;	ya	GLOW_BERRIES
	f	Ldcr;	yb	CAMPFIRE
	f	Ldcr;	yc	SOUL_CAMPFIRE
	f	Ldcr;	yd	SHROOMLIGHT
	f	Ldcr;	ye	HONEYCOMB
	f	Ldcr;	yf	BEE_NEST
	f	Ldcr;	yg	BEEHIVE
	f	Ldcr;	yh	HONEY_BOTTLE
	f	Ldcr;	yi	HONEYCOMB_BLOCK
	f	Ldcr;	yj	LODESTONE
	f	Ldcr;	yk	CRYING_OBSIDIAN
	f	Ldcr;	yl	BLACKSTONE
	f	Ldcr;	ym	BLACKSTONE_SLAB
	f	Ldcr;	yn	BLACKSTONE_STAIRS
	f	Ldcr;	yo	GILDED_BLACKSTONE
	f	Ldcr;	yp	POLISHED_BLACKSTONE
	f	Ldcr;	yq	POLISHED_BLACKSTONE_SLAB
	f	Ldcr;	yr	POLISHED_BLACKSTONE_STAIRS
	f	Ldcr;	ys	CHISELED_POLISHED_BLACKSTONE
	f	Ldcr;	yt	POLISHED_BLACKSTONE_BRICKS
	f	Ldcr;	yu	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Ldcr;	yv	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Ldcr;	yw	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Ldcr;	yx	RESPAWN_ANCHOR
	f	Ldcr;	yy	CANDLE
	f	Ldcr;	yz	WHITE_CANDLE
	f	Ldcr;	yA	ORANGE_CANDLE
	f	Ldcr;	yB	MAGENTA_CANDLE
	f	Ldcr;	yC	LIGHT_BLUE_CANDLE
	f	Ldcr;	yD	YELLOW_CANDLE
	f	Ldcr;	yE	LIME_CANDLE
	f	Ldcr;	yF	PINK_CANDLE
	f	Ldcr;	yG	GRAY_CANDLE
	f	Ldcr;	yH	LIGHT_GRAY_CANDLE
	f	Ldcr;	yI	CYAN_CANDLE
	f	Ldcr;	yJ	PURPLE_CANDLE
	f	Ldcr;	yK	BLUE_CANDLE
	f	Ldcr;	yL	BROWN_CANDLE
	f	Ldcr;	yM	GREEN_CANDLE
	f	Ldcr;	yN	RED_CANDLE
	f	Ldcr;	yO	BLACK_CANDLE
	f	Ldcr;	yP	SMALL_AMETHYST_BUD
	f	Ldcr;	yQ	MEDIUM_AMETHYST_BUD
	f	Ldcr;	yR	LARGE_AMETHYST_BUD
	f	Ldcr;	yS	AMETHYST_CLUSTER
	f	Ldcr;	yT	POINTED_DRIPSTONE
	f	Ldcr;	yU	OCHRE_FROGLIGHT
	f	Ldcr;	yV	VERDANT_FROGLIGHT
	f	Ldcr;	yW	PEARLESCENT_FROGLIGHT
	f	Ldcr;	yX	FROGSPAWN
	f	Ldcr;	yY	ECHO_SHARD
	f	Ldcr;	yZ	BRUSH
	f	Ldcr;	za	NETHERITE_UPGRADE_SMITHING_TEMPLATE
	f	Ldcr;	zb	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zc	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zd	COAST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	ze	WILD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zf	WARD_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zg	EYE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zh	VEX_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zi	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zj	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zk	RIB_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zl	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zm	WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zn	SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zo	SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zp	RAISER_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zq	HOST_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zr	FLOW_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zs	BOLT_ARMOR_TRIM_SMITHING_TEMPLATE
	f	Ldcr;	zt	ANGLER_POTTERY_SHERD
	f	Ldcr;	zu	ARCHER_POTTERY_SHERD
	f	Ldcr;	zv	ARMS_UP_POTTERY_SHERD
	f	Ldcr;	zw	BLADE_POTTERY_SHERD
	f	Ldcr;	zx	BREWER_POTTERY_SHERD
	f	Ldcr;	zy	BURN_POTTERY_SHERD
	f	Ldcr;	zz	DANGER_POTTERY_SHERD
	f	Ldcr;	zA	EXPLORER_POTTERY_SHERD
	f	Ldcr;	zB	FLOW_POTTERY_SHERD
	f	Ldcr;	zC	FRIEND_POTTERY_SHERD
	f	Ldcr;	zD	GUSTER_POTTERY_SHERD
	f	Ldcr;	zE	HEART_POTTERY_SHERD
	f	Ldcr;	zF	HEARTBREAK_POTTERY_SHERD
	f	Ldcr;	zG	HOWL_POTTERY_SHERD
	f	Ldcr;	zH	MINER_POTTERY_SHERD
	f	Ldcr;	zI	MOURNER_POTTERY_SHERD
	f	Ldcr;	zJ	PLENTY_POTTERY_SHERD
	f	Ldcr;	zK	PRIZE_POTTERY_SHERD
	f	Ldcr;	zL	SCRAPE_POTTERY_SHERD
	f	Ldcr;	zM	SHEAF_POTTERY_SHERD
	f	Ldcr;	zN	SHELTER_POTTERY_SHERD
	f	Ldcr;	zO	SKULL_POTTERY_SHERD
	f	Ldcr;	zP	SNORT_POTTERY_SHERD
	f	Ldcr;	zQ	COPPER_GRATE
	f	Ldcr;	zR	EXPOSED_COPPER_GRATE
	f	Ldcr;	zS	WEATHERED_COPPER_GRATE
	f	Ldcr;	zT	OXIDIZED_COPPER_GRATE
	f	Ldcr;	zU	WAXED_COPPER_GRATE
	f	Ldcr;	zV	WAXED_EXPOSED_COPPER_GRATE
	f	Ldcr;	zW	WAXED_WEATHERED_COPPER_GRATE
	f	Ldcr;	zX	WAXED_OXIDIZED_COPPER_GRATE
	f	Ldcr;	zY	COPPER_BULB
	f	Ldcr;	zZ	EXPOSED_COPPER_BULB
	f	Ldcr;	Aa	WEATHERED_COPPER_BULB
	f	Ldcr;	Ab	OXIDIZED_COPPER_BULB
	f	Ldcr;	Ac	WAXED_COPPER_BULB
	f	Ldcr;	Ad	WAXED_EXPOSED_COPPER_BULB
	f	Ldcr;	Ae	WAXED_WEATHERED_COPPER_BULB
	f	Ldcr;	Af	WAXED_OXIDIZED_COPPER_BULB
	f	Ldcr;	Ag	TRIAL_SPAWNER
	f	Ldcr;	Ah	TRIAL_KEY
	f	Ldcr;	Ai	OMINOUS_TRIAL_KEY
	f	Ldcr;	Aj	VAULT
	f	Ldcr;	Ak	OMINOUS_BOTTLE
	m	()V	<init>	<init>
	m	(Ldpz;)Ljava/util/function/Function;	b	createBlockItemWithCustomItemName
	m	(Ljava/lang/String;)Lamd;	b	vanillaItemId
	m	(Lamd;)Lamd;	a	blockIdToItemId
	m	(Ldpz;)Ldcr;	a	registerBlock
	m	(Ldpz;Ldcr$a;)Ldcr;	a	registerBlock
	m	(Ldpz;Ljava/util/function/UnaryOperator;)Ldcr;	a	registerBlock
	m	(Ldpz;[Ldpz;)Ldcr;	a	registerBlock
	m	(Ldpz;Ljava/util/function/BiFunction;)Ldcr;	a	registerBlock
	m	(Ldpz;Ljava/util/function/BiFunction;Ldcr$a;)Ldcr;	a	registerBlock
	m	(Ljava/lang/String;Ljava/util/function/Function;)Ldcr;	a	registerItem
	m	(Ljava/lang/String;Ljava/util/function/Function;Ldcr$a;)Ldcr;	a	registerItem
	m	(Ljava/lang/String;Ldcr$a;)Ldcr;	a	registerItem
	m	(Ljava/lang/String;)Ldcr;	a	registerItem
	m	(Lamd;Ljava/util/function/Function;)Ldcr;	a	registerItem
	m	(Lamd;Ljava/util/function/Function;Ldcr$a;)Ldcr;	a	registerItem
	m	(Ljava/util/function/BiFunction;Ldpz;Ldcr$a;)Ldcr;	a	lambda$registerBlock$252
	m	(Ljava/util/function/UnaryOperator;Ldpz;Ldcr$a;)Ldcr;	a	lambda$registerBlock$251
	m	(Ldpz;Ldcr$a;)Ldcr;	b	lambda$createBlockItemWithCustomItemName$250
	m	(Ldcr$a;)Ldcr$a;	a	lambda$static$249
	m	(Ldcr$a;)Ldcr$a;	b	lambda$static$248
	m	(Ldcr$a;)Ldcr$a;	c	lambda$static$247
	m	(Ldcr$a;)Ldcr$a;	d	lambda$static$246
	m	(Ldcr$a;)Ldcr$a;	e	lambda$static$245
	m	(Ldpz;Ldcr$a;)Ldcr;	c	lambda$static$244
	m	(Ldpz;Ldcr$a;)Ldcr;	d	lambda$static$243
	m	(Ldpz;Ldcr$a;)Ldcr;	e	lambda$static$242
	m	(Ldpz;Ldcr$a;)Ldcr;	f	lambda$static$241
	m	(Ldpz;Ldcr$a;)Ldcr;	g	lambda$static$240
	m	(Ldpz;Ldcr$a;)Ldcr;	h	lambda$static$239
	m	(Ldpz;Ldcr$a;)Ldcr;	i	lambda$static$238
	m	(Ldpz;Ldcr$a;)Ldcr;	j	lambda$static$237
	m	(Ldpz;Ldcr$a;)Ldcr;	k	lambda$static$236
	m	(Ldpz;Ldcr$a;)Ldcr;	l	lambda$static$235
	m	(Ldpz;Ldcr$a;)Ldcr;	m	lambda$static$234
	m	(Ldpz;Ldcr$a;)Ldcr;	n	lambda$static$233
	m	(Ldpz;Ldcr$a;)Ldcr;	o	lambda$static$232
	m	(Ldpz;Ldcr$a;)Ldcr;	p	lambda$static$231
	m	(Ldpz;Ldcr$a;)Ldcr;	q	lambda$static$230
	m	(Ldpz;Ldcr$a;)Ldcr;	r	lambda$static$229
	m	(Ldcr$a;)Ldcr;	f	lambda$static$228
	m	(Ldpz;Ldcr$a;)Ldcr;	s	lambda$static$227
	m	(Ldpz;Ldcr$a;)Ldcr;	t	lambda$static$226
	m	(Ldpz;Ldcr$a;)Ldcr;	u	lambda$static$225
	m	(Ldpz;Ldcr$a;)Ldcr;	v	lambda$static$224
	m	(Ldpz;Ldcr$a;)Ldcr;	w	lambda$static$223
	m	(Ldpz;Ldcr$a;)Ldcr;	x	lambda$static$222
	m	(Ldpz;Ldcr$a;)Ldcr;	y	lambda$static$221
	m	(Ldcr$a;)Ldcr;	g	lambda$static$220
	m	(Ldcr$a;)Ldcr;	h	lambda$static$219
	m	(Ldcr$a;)Ldcr;	i	lambda$static$218
	m	(Ldcr$a;)Ldcr;	j	lambda$static$217
	m	(Ldcr$a;)Ldcr;	k	lambda$static$216
	m	(Ldcr$a;)Ldcr;	l	lambda$static$215
	m	(Ldcr$a;)Ldcr;	m	lambda$static$214
	m	(Ldcr$a;)Ldcr;	n	lambda$static$213
	m	(Ldcr$a;)Ldcr;	o	lambda$static$212
	m	(Ldcr$a;)Ldcr;	p	lambda$static$211
	m	(Ldcr$a;)Ldcr;	q	lambda$static$210
	m	(Ldcr$a;)Ldcr;	r	lambda$static$209
	m	(Ldcr$a;)Ldcr;	s	lambda$static$208
	m	(Ldcr$a;)Ldcr;	t	lambda$static$207
	m	(Ldcr$a;)Ldcr;	u	lambda$static$206
	m	(Ldcr$a;)Ldcr;	v	lambda$static$205
	m	(Ldcr$a;)Ldcr;	w	lambda$static$204
	m	(Ldcr$a;)Ldcr;	x	lambda$static$203
	m	(Ldcr$a;)Ldcr;	y	lambda$static$202
	m	(Ldcr$a;)Ldcr;	z	lambda$static$201
	m	(Ldcr$a;)Ldcr;	A	lambda$static$200
	m	(Ldcr$a;)Ldcr;	B	lambda$static$199
	m	(Ldcr$a;)Ldcr;	C	lambda$static$198
	m	(Ldcr$a;)Ldcr;	D	lambda$static$197
	m	(Ldcr$a;)Ldcr;	E	lambda$static$196
	m	(Ldcr$a;)Ldcr;	F	lambda$static$195
	m	(Ldcr$a;)Ldcr;	G	lambda$static$194
	m	(Ldcr$a;)Ldcr;	H	lambda$static$193
	m	(Ldcr$a;)Ldcr;	I	lambda$static$192
	m	(Ldcr$a;)Ldcr;	J	lambda$static$191
	m	(Ldcr$a;)Ldcr;	K	lambda$static$190
	m	(Ldcr$a;)Ldcr;	L	lambda$static$189
	m	(Ldcr$a;)Ldcr;	M	lambda$static$188
	m	(Ldcr$a;)Ldcr;	N	lambda$static$187
	m	(Ldcr$a;)Ldcr;	O	lambda$static$186
	m	(Ldcr$a;)Ldcr;	P	lambda$static$185
	m	(Ldcr$a;)Ldcr;	Q	lambda$static$184
	m	(Ldcr$a;)Ldcr;	R	lambda$static$183
	m	(Ldcr$a;)Ldcr;	S	lambda$static$182
	m	(Ldcr$a;)Ldcr;	T	lambda$static$181
	m	(Ldcr$a;)Ldcr;	U	lambda$static$180
	m	(Ldcr$a;)Ldcr;	V	lambda$static$179
	m	(Ldcr$a;)Ldcr;	W	lambda$static$178
	m	(Ldcr$a;)Ldcr;	X	lambda$static$177
	m	(Ldcr$a;)Ldcr;	Y	lambda$static$176
	m	(Ldcr$a;)Ldcr;	Z	lambda$static$175
	m	(Ldcr$a;)Ldcr;	aa	lambda$static$174
	m	(Ldcr$a;)Ldcr;	ab	lambda$static$173
	m	(Ldcr$a;)Ldcr;	ac	lambda$static$172
	m	(Ldcr$a;)Ldcr;	ad	lambda$static$171
	m	(Ldcr$a;)Ldcr;	ae	lambda$static$170
	m	(Ldcr$a;)Ldcr;	af	lambda$static$169
	m	(Ldcr$a;)Ldcr;	ag	lambda$static$168
	m	(Ldcr$a;)Ldcr;	ah	lambda$static$167
	m	(Ldcr$a;)Ldcr;	ai	lambda$static$166
	m	(Ldcr$a;)Ldcr;	aj	lambda$static$165
	m	(Ldcr$a;)Ldcr;	ak	lambda$static$164
	m	(Ldcr$a;)Ldcr;	al	lambda$static$163
	m	(Ldcr$a;)Ldcr;	am	lambda$static$162
	m	(Ldcr$a;)Ldcr;	an	lambda$static$161
	m	(Ldcr$a;)Ldcr;	ao	lambda$static$160
	m	(Ldcr$a;)Ldcr;	ap	lambda$static$159
	m	(Ldcr$a;)Ldcr;	aq	lambda$static$158
	m	(Ldcr$a;)Ldcr;	ar	lambda$static$157
	m	(Ldcr$a;)Ldcr;	as	lambda$static$156
	m	(Ldcr$a;)Ldcr;	at	lambda$static$155
	m	(Ldcr$a;)Ldcr;	au	lambda$static$154
	m	(Ldcr$a;)Ldcr;	av	lambda$static$153
	m	(Ldcr$a;)Ldcr;	aw	lambda$static$152
	m	(Ldcr$a;)Ldcr;	ax	lambda$static$151
	m	(Ldcr$a;)Ldcr;	ay	lambda$static$150
	m	(Ldcr$a;)Ldcr;	az	lambda$static$149
	m	(Ldcr$a;)Ldcr;	aA	lambda$static$148
	m	(Ldcr$a;)Ldcr;	aB	lambda$static$147
	m	(Ldcr$a;)Ldcr;	aC	lambda$static$146
	m	(Ldcr$a;)Ldcr;	aD	lambda$static$145
	m	(Ldcr$a;)Ldcr;	aE	lambda$static$144
	m	(Ldcr$a;)Ldcr;	aF	lambda$static$143
	m	(Ldcr$a;)Ldcr;	aG	lambda$static$142
	m	(Ldcr$a;)Ldcr;	aH	lambda$static$141
	m	(Ldcr$a;)Ldcr;	aI	lambda$static$140
	m	(Ldcr$a;)Ldcr;	aJ	lambda$static$139
	m	(Ldcr$a;)Ldcr;	aK	lambda$static$138
	m	(Ldcr$a;)Ldcr;	aL	lambda$static$137
	m	(Ldcr$a;)Ldcr$a;	aM	lambda$static$136
	m	(Ldcr$a;)Ldcr$a;	aN	lambda$static$135
	m	(Ldcr$a;)Ldcr;	aO	lambda$static$134
	m	(Ldcr$a;)Ldcr;	aP	lambda$static$133
	m	(Ldcr$a;)Ldcr;	aQ	lambda$static$132
	m	(Ldcr$a;)Ldcr;	aR	lambda$static$131
	m	(Ldcr$a;)Ldcr;	aS	lambda$static$130
	m	(Ldcr$a;)Ldcr;	aT	lambda$static$129
	m	(Ldcr$a;)Ldcr;	aU	lambda$static$128
	m	(Ldcr$a;)Ldcr;	aV	lambda$static$127
	m	(Ldcr$a;)Ldcr;	aW	lambda$static$126
	m	(Ldcr$a;)Ldcr;	aX	lambda$static$125
	m	(Ldcr$a;)Ldcr;	aY	lambda$static$124
	m	(Ldcr$a;)Ldcr;	aZ	lambda$static$123
	m	(Ldcr$a;)Ldcr;	ba	lambda$static$122
	m	(Ldcr$a;)Ldcr;	bb	lambda$static$121
	m	(Ldcr$a;)Ldcr;	bc	lambda$static$120
	m	(Ldcr$a;)Ldcr;	bd	lambda$static$119
	m	(Ldcr$a;)Ldcr;	be	lambda$static$118
	m	(Ldcr$a;)Ldcr;	bf	lambda$static$117
	m	(Ldcr$a;)Ldcr;	bg	lambda$static$116
	m	(Ldcr$a;)Ldcr;	bh	lambda$static$115
	m	(Ldcr$a;)Ldcr;	bi	lambda$static$114
	m	(Ldcr$a;)Ldcr;	bj	lambda$static$113
	m	(Ldcr$a;)Ldcr;	bk	lambda$static$112
	m	(Ldcr$a;)Ldcr;	bl	lambda$static$111
	m	(Ldcr$a;)Ldcr;	bm	lambda$static$110
	m	(Ldcr$a;)Ldcr;	bn	lambda$static$109
	m	(Ldpz;Ldcr$a;)Ldcr;	z	lambda$static$108
	m	(Ldpz;Ldcr$a;)Ldcr;	A	lambda$static$107
	m	(Ldpz;Ldcr$a;)Ldcr;	B	lambda$static$106
	m	(Ldpz;Ldcr$a;)Ldcr;	C	lambda$static$105
	m	(Ldpz;Ldcr$a;)Ldcr;	D	lambda$static$104
	m	(Ldpz;Ldcr$a;)Ldcr;	E	lambda$static$103
	m	(Ldpz;Ldcr$a;)Ldcr;	F	lambda$static$102
	m	(Ldpz;Ldcr$a;)Ldcr;	G	lambda$static$101
	m	(Ldpz;Ldcr$a;)Ldcr;	H	lambda$static$100
	m	(Ldpz;Ldcr$a;)Ldcr;	I	lambda$static$99
	m	(Ldpz;Ldcr$a;)Ldcr;	J	lambda$static$98
	m	(Ldpz;Ldcr$a;)Ldcr;	K	lambda$static$97
	m	(Ldpz;Ldcr$a;)Ldcr;	L	lambda$static$96
	m	(Ldpz;Ldcr$a;)Ldcr;	M	lambda$static$95
	m	(Ldpz;Ldcr$a;)Ldcr;	N	lambda$static$94
	m	(Ldpz;Ldcr$a;)Ldcr;	O	lambda$static$93
	m	(Ldpz;Ldcr$a;)Ldcr;	P	lambda$static$92
	m	(Ldpz;Ldcr$a;)Ldcr;	Q	lambda$static$91
	m	(Ldpz;Ldcr$a;)Ldcr;	R	lambda$static$90
	m	(Ldpz;Ldcr$a;)Ldcr;	S	lambda$static$89
	m	(Ldpz;Ldcr$a;)Ldcr;	T	lambda$static$88
	m	(Ldpz;Ldcr$a;)Ldcr;	U	lambda$static$87
	m	(Ldpz;Ldcr$a;)Ldcr;	V	lambda$static$86
	m	(Ldpz;Ldcr$a;)Ldcr;	W	lambda$static$85
	m	(Ldcr$a;)Ldcr;	bo	lambda$static$84
	m	(Ldcr$a;)Ldcr;	bp	lambda$static$83
	m	(Ldcr$a;)Ldcr;	bq	lambda$static$82
	m	(Ldcr$a;)Ldcr;	br	lambda$static$81
	m	(Ldcr$a;)Ldcr;	bs	lambda$static$80
	m	(Ldcr$a;)Ldcr;	bt	lambda$static$79
	m	(Ldcr$a;)Ldcr;	bu	lambda$static$78
	m	(Ldcr$a;)Ldcr;	bv	lambda$static$77
	m	(Ldcr$a;)Ldcr;	bw	lambda$static$76
	m	(Ldcr$a;)Ldcr;	bx	lambda$static$75
	m	(Ldcr$a;)Ldcr;	by	lambda$static$74
	m	(Ldcr$a;)Ldcr;	bz	lambda$static$73
	m	(Ldcr$a;)Ldcr;	bA	lambda$static$72
	m	(Ldcr$a;)Ldcr;	bB	lambda$static$71
	m	(Ldcr$a;)Ldcr;	bC	lambda$static$70
	m	(Ldcr$a;)Ldcr;	bD	lambda$static$69
	m	(Ldcr$a;)Ldcr;	bE	lambda$static$68
	m	(Ldcr$a;)Ldcr;	bF	lambda$static$67
	m	(Ldcr$a;)Ldcr;	bG	lambda$static$66
	m	(Ldcr$a;)Ldcr;	bH	lambda$static$65
	m	(Ldcr$a;)Ldcr;	bI	lambda$static$64
	m	(Ldcr$a;)Ldcr;	bJ	lambda$static$63
	m	(Ldcr$a;)Ldcr;	bK	lambda$static$62
	m	(Ldcr$a;)Ldcr;	bL	lambda$static$61
	m	(Ldcr$a;)Ldcr;	bM	lambda$static$60
	m	(Ldcr$a;)Ldcr;	bN	lambda$static$59
	m	(Ldcr$a;)Ldcr;	bO	lambda$static$58
	m	(Ldcr$a;)Ldcr;	bP	lambda$static$57
	m	(Ldcr$a;)Ldcr;	bQ	lambda$static$56
	m	(Ldcr$a;)Ldcr;	bR	lambda$static$55
	m	(Ldcr$a;)Ldcr;	bS	lambda$static$54
	m	(Ldcr$a;)Ldcr;	bT	lambda$static$53
	m	(Ldcr$a;)Ldcr;	bU	lambda$static$52
	m	(Ldcr$a;)Ldcr;	bV	lambda$static$51
	m	(Ldcr$a;)Ldcr;	bW	lambda$static$50
	m	(Ldcr$a;)Ldcr;	bX	lambda$static$49
	m	(Ldcr$a;)Ldcr;	bY	lambda$static$48
	m	(Ldcr$a;)Ldcr;	bZ	lambda$static$47
	m	(Ldcr$a;)Ldcr;	ca	lambda$static$46
	m	(Ldcr$a;)Ldcr;	cb	lambda$static$45
	m	(Ldcr$a;)Ldcr;	cc	lambda$static$44
	m	(Ldcr$a;)Ldcr;	cd	lambda$static$43
	m	(Ldcr$a;)Ldcr;	ce	lambda$static$42
	m	(Ldcr$a;)Ldcr;	cf	lambda$static$41
	m	(Ldcr$a;)Ldcr;	cg	lambda$static$40
	m	(Ldcr$a;)Ldcr;	ch	lambda$static$39
	m	(Ldcr$a;)Ldcr$a;	ci	lambda$static$38
	m	(Ldcr$a;)Ldcr$a;	cj	lambda$static$37
	m	(Ldcr$a;)Ldcr$a;	ck	lambda$static$36
	m	(Ldcr$a;)Ldcr$a;	cl	lambda$static$35
	m	(Ldpz;Ldcr$a;)Ldcr;	X	lambda$static$34
	m	(Ldpz;Ldcr$a;)Ldcr;	Y	lambda$static$33
	m	(Ldpz;Ldcr$a;)Ldcr;	Z	lambda$static$32
	m	(Ldpz;Ldcr$a;)Ldcr;	aa	lambda$static$31
	m	(Ldpz;Ldcr$a;)Ldcr;	ab	lambda$static$30
	m	(Ldpz;Ldcr$a;)Ldcr;	ac	lambda$static$29
	m	(Ldpz;Ldcr$a;)Ldcr;	ad	lambda$static$28
	m	(Ldpz;Ldcr$a;)Ldcr;	ae	lambda$static$27
	m	(Ldpz;Ldcr$a;)Ldcr;	af	lambda$static$26
	m	(Ldpz;Ldcr$a;)Ldcr;	ag	lambda$static$25
	m	(Ldpz;Ldcr$a;)Ldcr;	ah	lambda$static$24
	m	(Ldcr$a;)Ldcr$a;	cm	lambda$static$23
	m	(Ldcr$a;)Ldcr$a;	cn	lambda$static$22
	m	(Ldcr$a;)Ldcr$a;	co	lambda$static$21
	m	(Ldcr$a;)Ldcr$a;	cp	lambda$static$20
	m	(Ldcr$a;)Ldcr$a;	cq	lambda$static$19
	m	(Ldcr$a;)Ldcr$a;	cr	lambda$static$18
	m	(Ldcr$a;)Ldcr$a;	cs	lambda$static$17
	m	(Ldcr$a;)Ldcr$a;	ct	lambda$static$16
	m	(Ldcr$a;)Ldcr$a;	cu	lambda$static$15
	m	(Ldcr$a;)Ldcr$a;	cv	lambda$static$14
	m	(Ldcr$a;)Ldcr$a;	cw	lambda$static$13
	m	(Ldcr$a;)Ldcr$a;	cx	lambda$static$12
	m	(Ldcr$a;)Ldcr$a;	cy	lambda$static$11
	m	(Ldcr$a;)Ldcr$a;	cz	lambda$static$10
	m	(Ldcr$a;)Ldcr$a;	cA	lambda$static$9
	m	(Ldcr$a;)Ldcr$a;	cB	lambda$static$8
	m	(Ldcr$a;)Ldcr$a;	cC	lambda$static$7
	m	(Ldcr$a;)Ldcr$a;	cD	lambda$static$6
	m	(Ldpz;Ldcr$a;)Ldcr;	ai	lambda$static$5
	m	(Ldcr$a;)Ldcr$a;	cE	lambda$static$4
	m	(Ldcr$a;)Ldcr$a;	cF	lambda$static$3
	m	(Ldcr$a;)Ldcr$a;	cG	lambda$static$2
	m	(Ldpz;Ldcr$a;)Ldcr;	aj	lambda$static$1
	m	(Ldcr$a;)Ldcr$a;	cH	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dda	net/minecraft/world/item/JukeboxPlayable
	f	Ldbw;	c	song
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ldbw;)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ldmu;Ljb;Ldcv;Lcut;)Lbxj;	a	tryInsertIntoJukebox
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldbw;	a	song
	m	(Ljava/util/function/Consumer;Ljl;)V	a	lambda$addToTooltip$0
	m	()V	<clinit>	<clinit>
c	ddb	net/minecraft/world/item/JukeboxSong
	f	Ljl;	e	soundEvent
	f	Lxo;	f	description
	f	F	g	lengthInSeconds
	f	I	h	comparatorOutput
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	f	I	i	SONG_END_PADDING_TICKS
	m	(Ljl;Lxo;FI)V	<init>	<init>
	m	()I	a	lengthInTicks
	m	(J)Z	a	hasFinished
	m	(Ljn$a;Ldcv;)Ljava/util/Optional;	a	fromStack
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	soundEvent
	m	()Lxo;	c	description
	m	()F	d	lengthInSeconds
	m	()I	e	comparatorOutput
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ddc	net/minecraft/world/item/JukeboxSongPlayer
	f	I	a	PLAY_EVENT_INTERVAL_TICKS
	f	J	b	ticksSinceSongStarted
	f	Ljl;	c	song
	f	Ljb;	d	blockPos
	f	Lddc$a;	e	onSongChanged
	m	(Lddc$a;Ljb;)V	<init>	<init>
	m	()Z	a	isPlaying
	m	()Lddb;	b	getSong
	m	()J	c	getTicksSinceSongStarted
	m	(Ljl;J)V	a	setSongWithoutPlaying
	m	(Ldmv;Ljl;)V	a	play
	m	(Ldmv;Leeb;)V	a	stop
	m	(Ldmv;Leeb;)V	b	tick
	m	()Z	d	shouldEmitJukeboxPlayingEvent
	m	(Ldmv;Ljb;)V	a	spawnMusicParticles
c	ddc$a	net/minecraft/world/item/JukeboxSongPlayer$OnSongChanged
	m	()V	notifyChange	notifyChange
c	ddd	net/minecraft/world/item/JukeboxSongs
	f	Lamd;	a	THIRTEEN
	f	Lamd;	b	CAT
	f	Lamd;	c	BLOCKS
	f	Lamd;	d	CHIRP
	f	Lamd;	e	FAR
	f	Lamd;	f	MALL
	f	Lamd;	g	MELLOHI
	f	Lamd;	h	STAL
	f	Lamd;	i	STRAD
	f	Lamd;	j	WARD
	f	Lamd;	k	ELEVEN
	f	Lamd;	l	WAIT
	f	Lamd;	m	PIGSTEP
	f	Lamd;	n	OTHERSIDE
	f	Lamd;	o	FIVE
	f	Lamd;	p	RELIC
	f	Lamd;	q	PRECIPICE
	f	Lamd;	r	CREATOR
	f	Lamd;	s	CREATOR_MUSIC_BOX
	f	Lamd;	t	TEARS
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;Lamd;Ljl$c;II)V	a	register
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	dde	net/minecraft/world/item/KnowledgeBookItem
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	()V	<clinit>	<clinit>
c	ddf	net/minecraft/world/item/LeadItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Lcut;Ldmu;Ljb;)Lbxj;	a	bindPlayerMobs
	m	(Lcut;Lcak;)Z	a	lambda$bindPlayerMobs$0
c	ddg	net/minecraft/world/item/LingeringPotionItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Laub;Lcam;Ldcv;)Lcvd;	a	createPotion
	m	(Ldmu;Ljv;Ldcv;)Lcvd;	a	createPotion
c	ddh	net/minecraft/world/item/MaceItem
	f	I	c	DEFAULT_ATTACK_DAMAGE
	f	F	d	DEFAULT_ATTACK_SPEED
	f	F	a	SMASH_ATTACK_FALL_THRESHOLD
	f	F	o	SMASH_ATTACK_HEAVY_THRESHOLD
	f	F	b	SMASH_ATTACK_KNOCKBACK_RADIUS
	f	F	p	SMASH_ATTACK_KNOCKBACK_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ldfm;	a	createAttributes
	m	()Ldfy;	b	createToolProperties
	m	(Ldcv;Lcam;Lcam;)V	a	hurtEnemy
	m	(Lauc;)Lfis;	a	calculateImpactPosition
	m	(Ldcv;Lcam;Lcam;)V	b	postHurtEnemy
	m	(Lbzm;FLbyb;)F	a	getAttackDamageBonus
	m	(Ldmu;Lbzm;Lbzm;)V	a	knockback
	m	(Lbzm;Lbzm;)Ljava/util/function/Predicate;	a	knockbackPredicate
	m	(Lbzm;Lcam;Lfis;)D	a	getKnockbackPower
	m	(Lcam;)Z	b	canSmashAttack
	m	(Lcam;)Lbyb;	a	getDamageSource
	m	(Lbzm;Lbzm;Lcam;)Z	a	lambda$knockbackPredicate$1
	m	(Lbzm;Lbzm;Lcam;)V	b	lambda$knockback$0
c	ddi	net/minecraft/world/item/MapItem
	f	I	a	IMAGE_WIDTH
	f	I	b	IMAGE_HEIGHT
	m	(Ldcr$a;)V	<init>	<init>
	m	(Laub;IIBZZ)Ldcv;	a	create
	m	(Lfce;Ldmu;)Lfcg;	a	getSavedData
	m	(Ldcv;Ldmu;)Lfcg;	b	getSavedData
	m	(Laub;IIIZZLamd;)Lfce;	a	createNewSavedData
	m	(Ldmu;Lbzm;Lfcg;)V	a	update
	m	(Ldmu;Leeb;Ljb;)Leeb;	a	getCorrectStateForFluidBlock
	m	([ZII)Z	a	isBiomeWatery
	m	(Laub;Ldcv;)V	a	renderBiomePreviewMap
	m	(Ldcv;Laub;Lbzm;Lbzw;)V	a	inventoryTick
	m	(Ldcv;Ldmu;)V	a	onCraftedPostProcess
	m	(Ldcv;Laub;)V	a	scaleMap
	m	(Ldcv;Laub;)V	b	lockMap
	m	(Ldgq;)Lbxj;	a	useOn
c	ddi$1	net/minecraft/world/item/MapItem$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$component$MapPostProcessing
	m	()V	<clinit>	<clinit>
c	ddj	net/minecraft/world/item/MinecartItem
	f	Lbzv;	a	type
	m	(Lbzv;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
c	ddk	net/minecraft/world/item/MobBucketItem
	f	Lbzv;	a	type
	f	Layy;	b	emptySound
	m	(Lbzv;Lfak;Layy;Ldcr$a;)V	<init>	<init>
	m	(Lcam;Ldmu;Ldcv;Ljb;)V	a	checkExtraContent
	m	(Lcam;Ldmv;Ljb;)V	a	playEmptySound
	m	(Laub;Ldcv;Ljb;)V	a	spawn
c	ddl	net/minecraft/world/item/NameTagItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Lcut;Lcam;Lbxi;)Lbxj;	a	interactLivingEntity
c	ddm	net/minecraft/world/item/PlaceOnWaterBlockItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	ddn	net/minecraft/world/item/PlayerHeadItem
	m	(Ldpz;Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldcv;)Lxo;	a	getName
	m	(Ldcv;)V	l	verifyComponentsAfterLoad
	m	(Ldcv;Ldfv;)V	a	lambda$verifyComponentsAfterLoad$0
c	ddo	net/minecraft/world/item/PotionItem
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ldcv;	m	getDefaultInstance
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldcv;)Lxo;	a	getName
c	ddp	net/minecraft/world/item/ProjectileItem
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	()Lddp$a;	a	createDispenseConfig
	m	(Lcvo;DDDFF)V	a	shoot
c	ddp$a	net/minecraft/world/item/ProjectileItem$DispenseConfig
	f	Lddp$b;	b	positionFunction
	f	F	c	uncertainty
	f	F	d	power
	f	Ljava/util/OptionalInt;	e	overrideDispenseEvent
	f	Lddp$a;	a	DEFAULT
	m	(Lddp$b;FFLjava/util/OptionalInt;)V	<init>	<init>
	m	()Lddp$a$a;	a	builder
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lddp$b;	b	positionFunction
	m	()F	c	uncertainty
	m	()F	d	power
	m	()Ljava/util/OptionalInt;	e	overrideDispenseEvent
	m	()V	<clinit>	<clinit>
c	ddp$a$a	net/minecraft/world/item/ProjectileItem$DispenseConfig$Builder
	f	Lddp$b;	a	positionFunction
	f	F	b	uncertainty
	f	F	c	power
	f	Ljava/util/OptionalInt;	d	overrideDispenseEvent
	m	()V	<init>	<init>
	m	(Lddp$b;)Lddp$a$a;	a	positionFunction
	m	(F)Lddp$a$a;	a	uncertainty
	m	(F)Lddp$a$a;	b	power
	m	(I)Lddp$a$a;	a	overrideDispenseEvent
	m	()Lddp$a;	a	build
	m	(Llk;Ljh;)Ljv;	a	lambda$new$0
c	ddp$b	net/minecraft/world/item/ProjectileItem$PositionFunction
	m	(Llk;Ljh;)Ljv;	getDispensePosition	getDispensePosition
c	ddq	net/minecraft/world/item/ProjectileWeaponItem
	f	Ljava/util/function/Predicate;	c	ARROW_ONLY
	f	Ljava/util/function/Predicate;	d	ARROW_OR_FIREWORK
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ljava/util/function/Predicate;	c	getSupportedHeldProjectiles
	m	()Ljava/util/function/Predicate;	a	getAllSupportedProjectiles
	m	(Lcam;Ljava/util/function/Predicate;)Ldcv;	a	getHeldProjectile
	m	()I	b	getDefaultProjectileRange
	m	(Laub;Lcam;Lbxi;Ldcv;Ljava/util/List;FFZLcam;)V	a	shoot
	m	(Ldcv;)I	h	getDurabilityUse
	m	(Lcam;Lcvo;IFFFLcam;)V	a	shootProjectile
	m	(Ldmu;Lcam;Ldcv;Ldcv;Z)Lcvo;	a	createProjectile
	m	(Ldcv;Ldcv;Lcam;)Ljava/util/List;	a	draw
	m	(Ldcv;Ldcv;Lcam;Z)Ldcv;	a	useAmmo
	m	(Lcam;IFFFLcam;Lcvo;)V	a	lambda$shoot$2
	m	(Ldcv;)Z	g	lambda$static$1
	m	(Ldcv;)Z	i	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ddr	net/minecraft/world/item/Rarity
	f	Lddr;	a	COMMON
	f	Lddr;	b	UNCOMMON
	f	Lddr;	c	RARE
	f	Lddr;	d	EPIC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lzm;	g	STREAM_CODEC
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Lo;	j	color
	f	[Lddr;	k	$VALUES
	m	()[Lddr;	values	values
	m	(Ljava/lang/String;)Lddr;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Lo;)V	<init>	<init>
	m	()Lo;	a	color
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lddr;)I	a	lambda$static$1
	m	(Lddr;)I	b	lambda$static$0
	m	()[Lddr;	b	$values
	m	()V	<clinit>	<clinit>
c	dds	net/minecraft/world/item/ScaffoldingBlockItem
	m	(Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldgo;)Ldgo;	b	updatePlacementContext
	m	()Z	b	mustSurvive
c	ddt	net/minecraft/world/item/ServerItemCooldowns
	f	Lauc;	a	player
	m	(Lauc;)V	<init>	<init>
	m	(Lame;I)V	b	onCooldownStarted
	m	(Lame;)V	b	onCooldownEnded
c	ddu	net/minecraft/world/item/ShearsItem
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ldfy;	a	createToolProperties
	m	(Ldcv;Ldmu;Leeb;Ljb;Lcam;)Z	a	mineBlock
	m	(Ldgq;)Lbxj;	a	useOn
c	ddv	net/minecraft/world/item/ShieldItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;)Lxo;	a	getName
c	ddw	net/minecraft/world/item/ShovelItem
	f	Ljava/util/Map;	a	FLATTENABLES
	m	(Ldej;FFLdcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	()V	<clinit>	<clinit>
c	ddx	net/minecraft/world/item/SignApplicator
	m	(Ldmu;Lecn;ZLcut;)Z	a	tryApplyToSign
	m	(Leco;Lcut;)Z	a	canApplyToSign
c	ddy	net/minecraft/world/item/SignItem
	m	(Ldpz;Ldpz;Ldcr$a;)V	<init>	<init>
	m	(Ldcr$a;Ldpz;Ldpz;Ljh;)V	<init>	<init>
	m	(Ljb;Ldmu;Lcut;Ldcv;Leeb;)Z	a	updateCustomBlockEntityTag
c	ddz	net/minecraft/world/item/SmithingTemplateItem
	f	Lo;	a	TITLE_FORMAT
	f	Lo;	b	DESCRIPTION_FORMAT
	f	Lxo;	c	INGREDIENTS_TITLE
	f	Lxo;	d	APPLIES_TO_TITLE
	f	Lxo;	o	SMITHING_TEMPLATE_SUFFIX
	f	Lxo;	p	ARMOR_TRIM_APPLIES_TO
	f	Lxo;	q	ARMOR_TRIM_INGREDIENTS
	f	Lxo;	r	ARMOR_TRIM_BASE_SLOT_DESCRIPTION
	f	Lxo;	s	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION
	f	Lxo;	t	NETHERITE_UPGRADE_APPLIES_TO
	f	Lxo;	u	NETHERITE_UPGRADE_INGREDIENTS
	f	Lxo;	v	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION
	f	Lxo;	w	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION
	f	Lame;	x	EMPTY_SLOT_HELMET
	f	Lame;	y	EMPTY_SLOT_CHESTPLATE
	f	Lame;	z	EMPTY_SLOT_LEGGINGS
	f	Lame;	A	EMPTY_SLOT_BOOTS
	f	Lame;	B	EMPTY_SLOT_HOE
	f	Lame;	C	EMPTY_SLOT_AXE
	f	Lame;	D	EMPTY_SLOT_SWORD
	f	Lame;	E	EMPTY_SLOT_SHOVEL
	f	Lame;	F	EMPTY_SLOT_PICKAXE
	f	Lame;	G	EMPTY_SLOT_INGOT
	f	Lame;	H	EMPTY_SLOT_REDSTONE_DUST
	f	Lame;	I	EMPTY_SLOT_QUARTZ
	f	Lame;	J	EMPTY_SLOT_EMERALD
	f	Lame;	K	EMPTY_SLOT_DIAMOND
	f	Lame;	L	EMPTY_SLOT_LAPIS_LAZULI
	f	Lame;	M	EMPTY_SLOT_AMETHYST_SHARD
	f	Lxo;	N	appliesTo
	f	Lxo;	O	ingredients
	f	Lxo;	P	baseSlotDescription
	f	Lxo;	Q	additionsSlotDescription
	f	Ljava/util/List;	R	baseSlotEmptyIcons
	f	Ljava/util/List;	S	additionalSlotEmptyIcons
	m	(Lxo;Lxo;Lxo;Lxo;Ljava/util/List;Ljava/util/List;Ldcr$a;)V	<init>	<init>
	m	(Ldcr$a;)Lddz;	a	createArmorTrimTemplate
	m	(Ldcr$a;)Lddz;	b	createNetheriteUpgradeTemplate
	m	()Ljava/util/List;	o	createTrimmableArmorIconList
	m	()Ljava/util/List;	p	createTrimmableMaterialIconList
	m	()Ljava/util/List;	q	createNetheriteUpgradeIconList
	m	()Ljava/util/List;	r	createNetheriteUpgradeMaterialList
	m	(Ldcv;Ldcr$b;Ldfz;Ljava/util/function/Consumer;Ldek;)V	a	appendHoverText
	m	()Lxo;	a	getBaseSlotDescription
	m	()Lxo;	b	getAdditionSlotDescription
	m	()Ljava/util/List;	c	getBaseSlotEmptyIcons
	m	()Ljava/util/List;	n	getAdditionalSlotEmptyIcons
	m	()V	<clinit>	<clinit>
c	dea	net/minecraft/world/item/SnowballItem
	f	F	a	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	()V	<clinit>	<clinit>
c	deb	net/minecraft/world/item/SolidBucketItem
	f	Layy;	a	placeSound
	m	(Ldpz;Layy;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Leeb;)Layy;	a	getPlaceSound
	m	(Lcam;Ldmu;Ljb;Lfio;)Z	a	emptyContents
c	dec	net/minecraft/world/item/SpawnEggItem
	f	Ljava/util/Map;	a	BY_ID
	f	Lbzv;	b	defaultType
	m	(Lbzv;Ldcr$a;)V	<init>	<init>
	m	(Ldgq;)Lbxj;	a	useOn
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ljn$a;Ldcv;Lbzv;)Z	a	spawnsEntity
	m	(Lbzv;)Ldec;	a	byId
	m	()Ljava/lang/Iterable;	a	eggs
	m	(Ljn$a;Ldcv;)Lbzv;	a	getType
	m	()Lcyd;	k	requiredFeatures
	m	(Lcut;Lcao;Lbzv;Laub;Lfis;Ldcv;)Ljava/util/Optional;	a	spawnOffspringFromSpawnEgg
	m	(Ldcv;Lcut;)Z	a	shouldPrintOpWarning
	m	()V	<clinit>	<clinit>
c	ded	net/minecraft/world/item/SpectralArrowItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Ldcv;Lcam;Ldcv;)Lcvb;	a	createArrow
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
c	dee	net/minecraft/world/item/SplashPotionItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Laub;Lcam;Ldcv;)Lcvd;	a	createPotion
	m	(Ldmu;Ljv;Ldcv;)Lcvd;	a	createPotion
c	def	net/minecraft/world/item/SpyglassItem
	f	I	a	USE_DURATION
	f	F	b	ZOOM_FOV_MODIFIER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldcv;Ldmu;Lcam;)Ldcv;	a	finishUsingItem
	m	(Ldcv;Ldmu;Lcam;I)Z	a	releaseUsing
	m	(Lcam;)V	b	stopUsing
c	deg	net/minecraft/world/item/StandingAndWallBlockItem
	f	Ldpz;	a	wallBlock
	f	Ljh;	b	attachmentDirection
	m	(Ldpz;Ldpz;Ljh;Ldcr$a;)V	<init>	<init>
	m	(Ldmx;Leeb;Ljb;)Z	a	canPlace
	m	(Ldgo;)Leeb;	c	getPlacementState
	m	(Ljava/util/Map;Ldcr;)V	a	registerBlocks
c	deh	net/minecraft/world/item/ThrowablePotionItem
	f	F	a	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Laub;Lcam;Ldcv;)Lcvd;	a	createPotion
	m	(Ldmu;Ljv;Ldcv;)Lcvd;	a	createPotion
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	()Lddp$a;	a	createDispenseConfig
	m	()V	<clinit>	<clinit>
c	dei	net/minecraft/world/item/TippedArrowItem
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ldcv;	m	getDefaultInstance
	m	(Ldcv;)Lxo;	a	getName
c	dej	net/minecraft/world/item/ToolMaterial
	f	Lbae;	g	incorrectBlocksForDrops
	f	I	h	durability
	f	F	i	speed
	f	F	j	attackDamageBonus
	f	I	k	enchantmentValue
	f	Lbae;	l	repairItems
	f	Ldej;	a	WOOD
	f	Ldej;	b	STONE
	f	Ldej;	c	IRON
	f	Ldej;	d	DIAMOND
	f	Ldej;	e	GOLD
	f	Ldej;	f	NETHERITE
	m	(Lbae;IFFILbae;)V	<init>	<init>
	m	(Ldcr$a;)Ldcr$a;	a	applyCommonProperties
	m	(Ldcr$a;Lbae;FFF)Ldcr$a;	a	applyToolProperties
	m	(FF)Ldfm;	a	createToolAttributes
	m	(Ldcr$a;FF)Ldcr$a;	a	applySwordProperties
	m	(FF)Ldfm;	b	createSwordAttributes
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbae;	a	incorrectBlocksForDrops
	m	()I	b	durability
	m	()F	c	speed
	m	()F	d	attackDamageBonus
	m	()I	e	enchantmentValue
	m	()Lbae;	f	repairItems
	m	()V	<clinit>	<clinit>
c	dek	net/minecraft/world/item/TooltipFlag
	f	Ldek$a;	a	NORMAL
	f	Ldek$a;	b	ADVANCED
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	m	()V	<clinit>	<clinit>
c	dek$a	net/minecraft/world/item/TooltipFlag$Default
	f	Z	c	advanced
	f	Z	d	creative
	m	(ZZ)V	<init>	<init>
	m	()Z	a	isAdvanced
	m	()Z	b	isCreative
	m	()Ldek$a;	c	asCreative
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	d	advanced
	m	()Z	e	creative
c	del	net/minecraft/world/item/TridentItem
	f	I	a	THROW_THRESHOLD_TIME
	f	F	b	BASE_DAMAGE
	f	F	c	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	()Ldfm;	b	createAttributes
	m	()Ldfy;	c	createToolProperties
	m	(Ldcv;)Ldcx;	b	getUseAnimation
	m	(Ldcv;Lcam;)I	a	getUseDuration
	m	(Ldcv;Ldmu;Lcam;I)Z	a	releaseUsing
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
c	dem	net/minecraft/world/item/WindChargeItem
	f	F	a	PROJECTILE_SHOOT_POWER
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
	m	(Ldmu;Ljv;Ldcv;Ljh;)Lcvo;	a	asProjectile
	m	(Lcvo;DDDFF)V	a	shoot
	m	()Lddp$a;	a	createDispenseConfig
	m	(Llk;Ljh;)Ljv;	a	lambda$createDispenseConfig$1
	m	(Lcut;Ldmu;Laub;Lcam;Ldcv;)Lcwh;	a	lambda$use$0
	m	()V	<clinit>	<clinit>
c	den	net/minecraft/world/item/WritableBookItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	deo	net/minecraft/world/item/WrittenBookItem
	m	(Ldcr$a;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;)Lbxj;	a	use
c	dep	net/minecraft/world/item/alchemy/Potion
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ljava/lang/String;	c	name
	f	Ljava/util/List;	d	effects
	f	Lcyd;	e	requiredFeatures
	m	(Ljava/lang/String;[Lbyq;)V	<init>	<init>
	m	([Lcyb;)Ldep;	a	requiredFeatures
	m	()Lcyd;	k	requiredFeatures
	m	()Ljava/util/List;	a	getEffects
	m	()Ljava/lang/String;	b	name
	m	()Z	c	hasInstantEffects
	m	()V	<clinit>	<clinit>
c	deq	net/minecraft/world/item/alchemy/PotionBrewing
	f	I	a	BREWING_TIME_SECONDS
	f	Ldeq;	b	EMPTY
	f	Ljava/util/List;	c	containers
	f	Ljava/util/List;	d	potionMixes
	f	Ljava/util/List;	e	containerMixes
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Ldcv;)Z	a	isIngredient
	m	(Ldcv;)Z	d	isContainer
	m	(Ldcv;)Z	b	isContainerIngredient
	m	(Ldcv;)Z	c	isPotionIngredient
	m	(Ljl;)Z	a	isBrewablePotion
	m	(Ldcv;Ldcv;)Z	a	hasMix
	m	(Ldcv;Ldcv;)Z	b	hasContainerMix
	m	(Ldcv;Ldcv;)Z	c	hasPotionMix
	m	(Ldcv;Ldcv;)Ldcv;	d	mix
	m	(Lcyd;)Ldeq;	a	bootstrap
	m	(Ldeq$a;)V	a	addVanillaMixes
	m	()V	<clinit>	<clinit>
c	deq$a	net/minecraft/world/item/alchemy/PotionBrewing$Builder
	f	Ljava/util/List;	a	containers
	f	Ljava/util/List;	b	potionMixes
	f	Ljava/util/List;	c	containerMixes
	f	Lcyd;	d	enabledFeatures
	m	(Lcyd;)V	<init>	<init>
	m	(Ldcr;)V	b	expectPotion
	m	(Ldcr;Ldcr;Ldcr;)V	a	addContainerRecipe
	m	(Ldcr;)V	a	addContainer
	m	(Ljl;Ldcr;Ljl;)V	a	addMix
	m	(Ldcr;Ljl;)V	a	addStartMix
	m	()Ldeq;	a	build
c	deq$b	net/minecraft/world/item/alchemy/PotionBrewing$Mix
	f	Ljl;	a	from
	f	Ldhi;	b	ingredient
	f	Ljl;	c	to
	m	(Ljl;Ldhi;Ljl;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	from
	m	()Ldhi;	b	ingredient
	m	()Ljl;	c	to
c	der	net/minecraft/world/item/alchemy/PotionContents
	f	Ljava/util/Optional;	e	potion
	f	Ljava/util/Optional;	f	customColor
	f	Ljava/util/List;	g	customEffects
	f	Ljava/util/Optional;	h	customName
	f	Lder;	a	EMPTY
	f	Lxo;	i	NO_EFFECT
	f	I	b	BASE_POTION_COLOR
	f	Lcom/mojang/serialization/Codec;	j	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldcr;Ljl;)Ldcv;	a	createItemStack
	m	(Ljl;)Z	a	is
	m	()Ljava/lang/Iterable;	a	getAllEffects
	m	(Ljava/util/function/Consumer;F)V	a	forEachEffect
	m	(Ljl;)Lder;	b	withPotion
	m	(Lbyq;)Lder;	a	withEffectAdded
	m	()I	b	getColor
	m	(I)I	a	getColorOr
	m	(Ljava/lang/String;)Lxo;	a	getName
	m	(Ljava/lang/Iterable;)Ljava/util/OptionalInt;	a	getColorOptional
	m	()Z	c	hasEffects
	m	()Ljava/util/List;	d	customEffects
	m	(Lcam;F)V	a	applyToLivingEntity
	m	(Ljava/lang/Iterable;Ljava/util/function/Consumer;FF)V	a	addPotionTooltip
	m	(Ljl;I)Lyc;	a	getPotionDescription
	m	(Ldmu;Lcam;Ldcv;Ldfa;)V	a	onConsume
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	e	potion
	m	()Ljava/util/Optional;	f	customColor
	m	()Ljava/util/Optional;	g	customName
	m	(Ljava/util/List;Ljl;Lcbq;)V	a	lambda$addPotionTooltip$4
	m	(Laub;Lcut;Lcam;Lbyq;)V	a	lambda$applyToLivingEntity$3
	m	()Ljava/util/Optional;	h	lambda$getName$2
	m	(Ljl;)Ljava/lang/String;	c	lambda$getName$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	des	net/minecraft/world/item/alchemy/Potions
	f	Ljl;	a	WATER
	f	Ljl;	b	MUNDANE
	f	Ljl;	c	THICK
	f	Ljl;	d	AWKWARD
	f	Ljl;	e	NIGHT_VISION
	f	Ljl;	f	LONG_NIGHT_VISION
	f	Ljl;	g	INVISIBILITY
	f	Ljl;	h	LONG_INVISIBILITY
	f	Ljl;	i	LEAPING
	f	Ljl;	j	LONG_LEAPING
	f	Ljl;	k	STRONG_LEAPING
	f	Ljl;	l	FIRE_RESISTANCE
	f	Ljl;	m	LONG_FIRE_RESISTANCE
	f	Ljl;	n	SWIFTNESS
	f	Ljl;	o	LONG_SWIFTNESS
	f	Ljl;	p	STRONG_SWIFTNESS
	f	Ljl;	q	SLOWNESS
	f	Ljl;	r	LONG_SLOWNESS
	f	Ljl;	s	STRONG_SLOWNESS
	f	Ljl;	t	TURTLE_MASTER
	f	Ljl;	u	LONG_TURTLE_MASTER
	f	Ljl;	v	STRONG_TURTLE_MASTER
	f	Ljl;	w	WATER_BREATHING
	f	Ljl;	x	LONG_WATER_BREATHING
	f	Ljl;	y	HEALING
	f	Ljl;	z	STRONG_HEALING
	f	Ljl;	A	HARMING
	f	Ljl;	B	STRONG_HARMING
	f	Ljl;	C	POISON
	f	Ljl;	D	LONG_POISON
	f	Ljl;	E	STRONG_POISON
	f	Ljl;	F	REGENERATION
	f	Ljl;	G	LONG_REGENERATION
	f	Ljl;	H	STRONG_REGENERATION
	f	Ljl;	I	STRENGTH
	f	Ljl;	J	LONG_STRENGTH
	f	Ljl;	K	STRONG_STRENGTH
	f	Ljl;	L	WEAKNESS
	f	Ljl;	M	LONG_WEAKNESS
	f	Ljl;	N	LUCK
	f	Ljl;	O	SLOW_FALLING
	f	Ljl;	P	LONG_SLOW_FALLING
	f	Ljl;	Q	WIND_CHARGED
	f	Ljl;	R	WEAVING
	f	Ljl;	S	OOZING
	f	Ljl;	T	INFESTED
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Ldep;)Ljl;	a	register
	m	(Ljy;)Ljl;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	det	net/minecraft/world/item/alchemy/package-info
c	deu	net/minecraft/world/item/component/Bees
	f	Ljava/util/List;	d	bees
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldeu;	c	EMPTY
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	bees
	m	()V	<clinit>	<clinit>
c	dev	net/minecraft/world/item/component/BlockItemStateProperties
	f	Ljava/util/Map;	d	properties
	f	Ldev;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	e	PROPERTIES_STREAM_CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Lefe;Ljava/lang/Comparable;)Ldev;	a	with
	m	(Lefe;Leeb;)Ldev;	a	with
	m	(Lefe;)Ljava/lang/Comparable;	a	get
	m	(Leeb;)Leeb;	a	apply
	m	(Leeb;Lefe;Ljava/lang/String;)Leeb;	a	updateState
	m	()Z	a	isEmpty
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	b	properties
	m	(Leeb;Lefe;Ljava/lang/Comparable;)Leeb;	a	lambda$updateState$0
	m	()V	<clinit>	<clinit>
c	dew	net/minecraft/world/item/component/BlocksAttacks
	f	F	c	blockDelaySeconds
	f	F	d	disableCooldownScale
	f	Ljava/util/List;	e	damageReductions
	f	Ldew$b;	f	itemDamage
	f	Ljava/util/Optional;	g	bypassedBy
	f	Ljava/util/Optional;	h	blockSound
	f	Ljava/util/Optional;	i	disableSound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(FFLjava/util/List;Ldew$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;Lcam;)V	a	onBlocked
	m	(Laub;Lcam;FLdcv;)V	a	disable
	m	(Ldmu;Ldcv;Lcam;Lbxi;F)V	a	hurtBlockingItem
	m	(F)I	a	disableBlockingForTicks
	m	()I	a	blockDelayTicks
	m	(Lbyb;FD)F	a	resolveBlockedDamage
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	blockDelaySeconds
	m	()F	c	disableCooldownScale
	m	()Ljava/util/List;	d	damageReductions
	m	()Ldew$b;	e	itemDamage
	m	()Ljava/util/Optional;	f	bypassedBy
	m	()Ljava/util/Optional;	g	blockSound
	m	()Ljava/util/Optional;	h	disableSound
	m	(Laub;Lcam;Ljl;)V	a	lambda$disable$2
	m	(Laub;Lcam;Ljl;)V	b	lambda$onBlocked$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dew$a	net/minecraft/world/item/component/BlocksAttacks$DamageReduction
	f	F	c	horizontalBlockingAngle
	f	Ljava/util/Optional;	d	type
	f	F	e	base
	f	F	f	factor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(FLjava/util/Optional;FF)V	<init>	<init>
	m	(Lbyb;FD)F	a	resolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	horizontalBlockingAngle
	m	()Ljava/util/Optional;	b	type
	m	()F	c	base
	m	()F	d	factor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dew$b	net/minecraft/world/item/component/BlocksAttacks$ItemDamageFunction
	f	F	d	threshold
	f	F	e	base
	f	F	f	factor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldew$b;	c	DEFAULT
	m	(FFF)V	<init>	<init>
	m	(F)I	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	threshold
	m	()F	b	base
	m	()F	c	factor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dex	net/minecraft/world/item/component/BookContent
	m	()Ljava/util/List;	a	pages
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
c	dey	net/minecraft/world/item/component/BundleContents
	f	Ldey;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lorg/apache/commons/lang3/math/Fraction;	e	BUNDLE_IN_BUNDLE_WEIGHT
	f	I	f	NO_STACK_INDEX
	f	I	d	NO_SELECTED_ITEM_INDEX
	f	Ljava/util/List;	g	items
	f	Lorg/apache/commons/lang3/math/Fraction;	h	weight
	f	I	i	selectedItem
	m	(Ljava/util/List;Lorg/apache/commons/lang3/math/Fraction;I)V	<init>	<init>
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	checkAndCreate
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Lorg/apache/commons/lang3/math/Fraction;	b	computeContentWeight
	m	(Ldcv;)Lorg/apache/commons/lang3/math/Fraction;	b	getWeight
	m	(Ldcv;)Z	a	canItemBeInBundle
	m	()I	a	getNumberOfItemsToShow
	m	(I)Ldcv;	a	getItemUnsafe
	m	()Ljava/util/stream/Stream;	b	itemCopyStream
	m	()Ljava/lang/Iterable;	c	items
	m	()Ljava/lang/Iterable;	d	itemsCopy
	m	()I	e	size
	m	()Lorg/apache/commons/lang3/math/Fraction;	f	weight
	m	()Z	g	isEmpty
	m	()I	h	getSelectedItem
	m	()Z	i	hasSelectedItem
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	j	lambda$checkAndCreate$2
	m	(Ldey;)Ljava/util/List;	a	lambda$static$1
	m	(Ldey;)Lcom/mojang/serialization/DataResult;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dey$a	net/minecraft/world/item/component/BundleContents$Mutable
	f	Ljava/util/List;	a	items
	f	Lorg/apache/commons/lang3/math/Fraction;	b	weight
	f	I	c	selectedItem
	m	(Ldey;)V	<init>	<init>
	m	()Ldey$a;	a	clearItems
	m	(Ldcv;)I	b	findStackIndex
	m	(Ldcv;)I	c	getMaxAmountToAdd
	m	(Ldcv;)I	a	tryInsert
	m	(Ldak;Lcut;)I	a	tryTransfer
	m	(I)V	a	toggleSelectedItem
	m	(I)Z	b	indexIsOutsideAllowedBounds
	m	()Ldcv;	b	removeOne
	m	()Lorg/apache/commons/lang3/math/Fraction;	c	weight
	m	()Ldey;	d	toImmutable
c	dez	net/minecraft/world/item/component/ChargedProjectiles
	f	Ldez;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Ljava/util/List;	d	items
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldcv;)Ldez;	a	of
	m	(Ljava/util/List;)Ldez;	a	of
	m	(Ldcr;)Z	a	contains
	m	()Ljava/util/List;	a	getItems
	m	()Z	b	isEmpty
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldcv;I)V	a	addProjectileTooltip
	m	(Ljava/util/function/Consumer;Lxo;)V	a	lambda$addProjectileTooltip$2
	m	(Ldez;)Ljava/util/List;	a	lambda$static$1
	m	(Ldez;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfa	net/minecraft/world/item/component/Consumable
	f	F	d	consumeSeconds
	f	Ldcx;	e	animation
	f	Ljl;	f	sound
	f	Z	g	hasConsumeParticles
	f	Ljava/util/List;	h	onConsumeEffects
	f	F	a	DEFAULT_CONSUME_SECONDS
	f	I	i	CONSUME_EFFECTS_INTERVAL
	f	F	j	CONSUME_EFFECTS_START_FRACTION
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(FLdcx;Ljl;ZLjava/util/List;)V	<init>	<init>
	m	(Lcam;Ldcv;Lbxi;)Lbxj;	a	startConsuming
	m	(Ldmu;Lcam;Ldcv;)Ldcv;	a	onConsume
	m	(Lcam;Ldcv;)Z	a	canConsume
	m	()I	a	consumeTicks
	m	(Lbck;Lcam;Ldcv;I)V	a	emitParticlesAndSounds
	m	(I)Z	a	shouldEmitParticlesAndSounds
	m	()Ldfa$a;	b	builder
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	c	consumeSeconds
	m	()Ldcx;	d	animation
	m	()Ljl;	e	sound
	m	()Z	f	hasConsumeParticles
	m	()Ljava/util/List;	g	onConsumeEffects
	m	(Ldmu;Ldcv;Lcam;Ldgj;)V	a	lambda$onConsume$2
	m	(Ldmu;Lcam;Ldcv;Ldfb;)V	a	lambda$onConsume$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfa$a	net/minecraft/world/item/component/Consumable$Builder
	f	F	a	consumeSeconds
	f	Ldcx;	b	animation
	f	Ljl;	c	sound
	f	Z	d	hasConsumeParticles
	f	Ljava/util/List;	e	onConsumeEffects
	m	()V	<init>	<init>
	m	(F)Ldfa$a;	a	consumeSeconds
	m	(Ldcx;)Ldfa$a;	a	animation
	m	(Ljl;)Ldfa$a;	a	sound
	m	(Ljl;)Ldfa$a;	b	soundAfterConsume
	m	(Z)Ldfa$a;	a	hasConsumeParticles
	m	(Ldgj;)Ldfa$a;	a	onConsume
	m	()Ldfa;	a	build
c	dfa$b	net/minecraft/world/item/component/Consumable$OverrideConsumeSound
	m	(Ldcv;)Layy;	j	getConsumeSound
c	dfb	net/minecraft/world/item/component/ConsumableListener
	m	(Ldmu;Lcam;Ldcv;Ldfa;)V	a	onConsume
c	dfc	net/minecraft/world/item/component/Consumables
	f	Ldfa;	a	DEFAULT_FOOD
	f	Ldfa;	b	DEFAULT_DRINK
	f	Ldfa;	c	HONEY_BOTTLE
	f	Ldfa;	d	OMINOUS_BOTTLE
	f	Ldfa;	e	DRIED_KELP
	f	Ldfa;	f	CHICKEN
	f	Ldfa;	g	ENCHANTED_GOLDEN_APPLE
	f	Ldfa;	h	GOLDEN_APPLE
	f	Ldfa;	i	POISONOUS_POTATO
	f	Ldfa;	j	PUFFERFISH
	f	Ldfa;	k	ROTTEN_FLESH
	f	Ldfa;	l	SPIDER_EYE
	f	Ldfa;	m	MILK_BUCKET
	f	Ldfa;	n	CHORUS_FRUIT
	m	()V	<init>	<init>
	m	()Ldfa$a;	a	defaultFood
	m	()Ldfa$a;	b	defaultDrink
	m	()V	<clinit>	<clinit>
c	dfd	net/minecraft/world/item/component/CustomData
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Ldfd;	a	EMPTY
	f	Ljava/lang/String;	f	TYPE_TAG
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC_WITH_ID
	f	Lzm;	d	STREAM_CODEC
	f	Lui;	g	tag
	m	(Lui;)V	<init>	<init>
	m	(Lui;)Ldfd;	a	of
	m	(Lui;)Z	b	matchedBy
	m	(Lkp;Ldcv;Ljava/util/function/Consumer;)V	a	update
	m	(Lkp;Ldcv;Lui;)V	a	set
	m	(Ljava/util/function/Consumer;)Ldfd;	a	update
	m	()Lame;	a	parseEntityId
	m	(Ljn$a;Lamd;)Ljava/lang/Object;	a	parseEntityType
	m	(Lbzm;)V	a	loadInto
	m	(Leaz;Ljn$a;)Z	a	loadInto
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapEncoder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	update
	m	(Lcom/mojang/serialization/MapDecoder;)Lcom/mojang/serialization/DataResult;	a	read
	m	(Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapDecoder;)Lcom/mojang/serialization/DataResult;	a	read
	m	()I	b	size
	m	()Z	c	isEmpty
	m	()Lui;	d	copyTag
	m	(Ljava/lang/String;)Z	a	contains
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Lui;	e	getUnsafe
	m	(Lvi;)Ldfd;	a	lambda$update$6
	m	()Ljava/lang/String;	f	lambda$loadInto$5
	m	(Lamd;Lame;Ljn$b;)Ljava/util/Optional;	a	lambda$parseEntityType$4
	m	(Ldfd;)Lui;	a	lambda$static$3
	m	(Ldfd;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Ldfd;)Ljava/lang/String;	c	lambda$static$1
	m	(Ldfd;)Lui;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfe	net/minecraft/world/item/component/CustomModelData
	f	Ljava/util/List;	d	floats
	f	Ljava/util/List;	e	flags
	f	Ljava/util/List;	f	strings
	f	Ljava/util/List;	g	colors
	f	Ldfe;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;I)Ljava/lang/Object;	a	getSafe
	m	(I)Ljava/lang/Float;	a	getFloat
	m	(I)Ljava/lang/Boolean;	b	getBoolean
	m	(I)Ljava/lang/String;	c	getString
	m	(I)Ljava/lang/Integer;	d	getColor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	floats
	m	()Ljava/util/List;	b	flags
	m	()Ljava/util/List;	c	strings
	m	()Ljava/util/List;	d	colors
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dff	net/minecraft/world/item/component/DamageResistant
	f	Lbae;	c	types
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Lbae;)V	<init>	<init>
	m	(Lbyb;)Z	a	isResistantTo
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbae;	a	types
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfg	net/minecraft/world/item/component/DeathProtection
	f	Ljava/util/List;	d	deathEffects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldfg;	c	TOTEM_OF_UNDYING
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldcv;Lcam;)V	a	applyEffects
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	deathEffects
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfh	net/minecraft/world/item/component/DebugStickState
	f	Ljava/util/Map;	c	properties
	f	Ldfh;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljl;Lefe;)Ldfh;	a	withProperty
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	properties
	m	(Ljl;)Lcom/mojang/serialization/Codec;	a	lambda$static$2
	m	(Ljl;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljl;Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfi	net/minecraft/world/item/component/DyedItemColor
	f	I	d	rgb
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	I	c	LEATHER_COLOR
	m	(I)V	<init>	<init>
	m	(Ldcv;I)I	a	getOrDefault
	m	(Ldcv;Ljava/util/List;)Ldcv;	a	applyDyes
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	rgb
	m	()V	<clinit>	<clinit>
c	dfj	net/minecraft/world/item/component/FireworkExplosion
	f	Ldfj$a;	e	shape
	f	Lit/unimi/dsi/fastutil/ints/IntList;	f	colors
	f	Lit/unimi/dsi/fastutil/ints/IntList;	g	fadeColors
	f	Z	h	hasTrail
	f	Z	i	hasTwinkle
	f	Ldfj;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	COLOR_LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	j	COLOR_LIST_STREAM_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Lxo;	k	CUSTOM_COLOR_NAME
	m	(Ldfj$a;Lit/unimi/dsi/fastutil/ints/IntList;Lit/unimi/dsi/fastutil/ints/IntList;ZZ)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljava/util/function/Consumer;)V	a	addAdditionalTooltip
	m	(Lyc;Lit/unimi/dsi/fastutil/ints/IntList;)Lxo;	a	appendColors
	m	(I)Lxo;	a	getColorName
	m	(Lit/unimi/dsi/fastutil/ints/IntList;)Ldfj;	a	withFadeColors
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldfj$a;	a	shape
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	b	colors
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	c	fadeColors
	m	()Z	d	hasTrail
	m	()Z	e	hasTwinkle
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfj$a	net/minecraft/world/item/component/FireworkExplosion$Shape
	f	Ldfj$a;	a	SMALL_BALL
	f	Ldfj$a;	b	LARGE_BALL
	f	Ldfj$a;	c	STAR
	f	Ldfj$a;	d	CREEPER
	f	Ldfj$a;	e	BURST
	f	Ljava/util/function/IntFunction;	h	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	I	i	id
	f	Ljava/lang/String;	j	name
	f	[Ldfj$a;	k	$VALUES
	m	()[Ldfj$a;	values	values
	m	(Ljava/lang/String;)Ldfj$a;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Lyc;	a	getName
	m	()I	b	getId
	m	(I)Ldfj$a;	a	byId
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldfj$a;	d	$values
	m	()V	<clinit>	<clinit>
c	dfk	net/minecraft/world/item/component/Fireworks
	f	I	d	flightDuration
	f	Ljava/util/List;	e	explosions
	f	I	a	MAX_EXPLOSIONS
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(ILjava/util/List;)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljava/util/function/Consumer;Ldfj;I)V	a	addExplosionTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	flightDuration
	m	()Ljava/util/List;	b	explosions
	m	(Ljava/util/function/Consumer;Lxo;)V	a	lambda$addExplosionTooltip$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfl	net/minecraft/world/item/component/InstrumentComponent
	f	Ldbw;	c	instrument
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	(Lamd;)V	<init>	<init>
	m	(Ldbw;)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljn$a;)Ljava/util/Optional;	a	unwrap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldbw;	a	instrument
	m	()V	<clinit>	<clinit>
c	dfm	net/minecraft/world/item/component/ItemAttributeModifiers
	f	Ljava/util/List;	e	modifiers
	f	Ldfm;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Ljava/text/DecimalFormat;	d	ATTRIBUTE_MODIFIER_FORMAT
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ldfm$a;	a	builder
	m	(Ljl;Lcbq;Lbzx;)Ldfm;	a	withModifierAdded
	m	(Lbzx;Lorg/apache/commons/lang3/function/TriConsumer;)V	a	forEach
	m	(Lbzx;Ljava/util/function/BiConsumer;)V	a	forEach
	m	(Lbzw;Ljava/util/function/BiConsumer;)V	a	forEach
	m	(DLbzw;)D	a	compute
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	modifiers
	m	(Ljava/text/DecimalFormat;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfm$1	net/minecraft/world/item/component/ItemAttributeModifiers$1
	f	[I	a	$SwitchMap$net$minecraft$world$entity$ai$attributes$AttributeModifier$Operation
	m	()V	<clinit>	<clinit>
c	dfm$a	net/minecraft/world/item/component/ItemAttributeModifiers$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	m	()V	<init>	<init>
	m	(Ljl;Lcbq;Lbzx;)Ldfm$a;	a	add
	m	(Ljl;Lcbq;Lbzx;Ldfm$b;)Ldfm$a;	a	add
	m	()Ldfm;	a	build
c	dfm$b	net/minecraft/world/item/component/ItemAttributeModifiers$Display
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()Ldfm$b;	a	attributeModifiers
	m	()Ldfm$b;	b	hidden
	m	(Lxo;)Ldfm$b;	a	override
	m	()Ldfm$b$d;	c	type
	m	(Ljava/util/function/Consumer;Lcut;Ljl;Lcbq;)V	a	apply
	m	(Ldfm$b$d;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfm$b$a	net/minecraft/world/item/component/ItemAttributeModifiers$Display$Default
	f	Ldfm$b$a;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Ldfm$b$d;	c	type
	m	(Ljava/util/function/Consumer;Lcut;Ljl;Lcbq;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	dfm$b$b	net/minecraft/world/item/component/ItemAttributeModifiers$Display$Hidden
	f	Ldfm$b$b;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Ldfm$b$d;	c	type
	m	(Ljava/util/function/Consumer;Lcut;Ljl;Lcbq;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	dfm$b$c	net/minecraft/world/item/component/ItemAttributeModifiers$Display$OverrideText
	f	Lxo;	c	component
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	(Lxo;)V	<init>	<init>
	m	()Ldfm$b$d;	c	type
	m	(Ljava/util/function/Consumer;Lcut;Ljl;Lcbq;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	d	component
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfm$b$d	net/minecraft/world/item/component/ItemAttributeModifiers$Display$Type
	f	Ldfm$b$d;	a	DEFAULT
	f	Ldfm$b$d;	b	HIDDEN
	f	Ldfm$b$d;	c	OVERRIDE
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/util/function/IntFunction;	e	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	Ljava/lang/String;	g	name
	f	I	h	id
	f	Lcom/mojang/serialization/MapCodec;	i	codec
	f	Lzm;	j	streamCodec
	f	[Ldfm$b$d;	k	$VALUES
	m	()[Ldfm$b$d;	values	values
	m	(Ljava/lang/String;)Ldfm$b$d;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ILcom/mojang/serialization/MapCodec;Lzm;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	id
	m	()Lzm;	b	streamCodec
	m	()[Ldfm$b$d;	d	$values
	m	()V	<clinit>	<clinit>
c	dfm$c	net/minecraft/world/item/component/ItemAttributeModifiers$Entry
	f	Ljl;	c	attribute
	f	Lcbq;	d	modifier
	f	Lbzx;	e	slot
	f	Ldfm$b;	f	display
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;Lcbq;Lbzx;)V	<init>	<init>
	m	(Ljl;Lcbq;Lbzx;Ldfm$b;)V	<init>	<init>
	m	(Ljl;Lame;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	attribute
	m	()Lcbq;	b	modifier
	m	()Lbzx;	c	slot
	m	()Ldfm$b;	d	display
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfn	net/minecraft/world/item/component/ItemContainerContents
	f	I	d	NO_SLOT
	f	I	e	MAX_SIZE
	f	Ldfn;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lju;	f	items
	f	I	g	hashCode
	m	(Lju;)V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Ldfn;	b	fromSlots
	m	(Ljava/util/List;)Ldfn;	a	fromItems
	m	(Ljava/util/List;)I	c	findLastNonEmptySlot
	m	()Ljava/util/List;	f	asSlots
	m	(Lju;)V	a	copyInto
	m	()Ldcv;	a	copyOne
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/stream/Stream;	c	nonEmptyStream
	m	()Ljava/lang/Iterable;	d	nonEmptyItems
	m	()Ljava/lang/Iterable;	e	nonEmptyItemsCopy
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ldcv;)Z	a	lambda$nonEmptyItems$2
	m	(Ldcv;)Z	b	lambda$nonEmptyStream$1
	m	(Ldfn;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfn$a	net/minecraft/world/item/component/ItemContainerContents$Slot
	f	I	b	index
	f	Ldcv;	c	item
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(ILdcv;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	index
	m	()Ldcv;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfo	net/minecraft/world/item/component/ItemLore
	f	Ljava/util/List;	e	lines
	f	Ljava/util/List;	f	styledLines
	f	Ldfo;	a	EMPTY
	f	I	b	MAX_LINES
	f	Lyl;	g	LORE_STYLE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Lxo;)Ldfo;	a	withLineAdded
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	lines
	m	()Ljava/util/List;	b	styledLines
	m	(Lxo;)Lxo;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	dfp	net/minecraft/world/item/component/LodestoneTracker
	f	Ljava/util/Optional;	c	target
	f	Z	d	tracked
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Z)V	<init>	<init>
	m	(Laub;)Ldfp;	a	tick
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	target
	m	()Z	b	tracked
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfq	net/minecraft/world/item/component/MapDecorations
	f	Ljava/util/Map;	c	decorations
	f	Ldfq;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/lang/String;Ldfq$a;)Ldfq;	a	withDecoration
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	decorations
	m	()V	<clinit>	<clinit>
c	dfq$a	net/minecraft/world/item/component/MapDecorations$Entry
	f	Ljl;	b	type
	f	D	c	x
	f	D	d	z
	f	F	e	rotation
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;DDF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	type
	m	()D	b	x
	m	()D	c	z
	m	()F	d	rotation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfr	net/minecraft/world/item/component/MapItemColor
	f	I	d	rgb
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldfr;	c	DEFAULT
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	rgb
	m	()V	<clinit>	<clinit>
c	dfs	net/minecraft/world/item/component/MapPostProcessing
	f	Ldfs;	a	LOCK
	f	Ldfs;	b	SCALE
	f	Ljava/util/function/IntFunction;	c	ID_MAP
	f	Lzm;	d	STREAM_CODEC
	f	I	e	id
	f	[Ldfs;	f	$VALUES
	m	()[Ldfs;	values	values
	m	(Ljava/lang/String;)Ldfs;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	id
	m	()[Ldfs;	b	$values
	m	()V	<clinit>	<clinit>
c	dft	net/minecraft/world/item/component/OminousBottleAmplifier
	f	I	f	value
	f	I	a	EFFECT_DURATION
	f	I	b	MIN_AMPLIFIER
	f	I	c	MAX_AMPLIFIER
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	(I)V	<init>	<init>
	m	(Ldmu;Lcam;Ldcv;Ldfa;)V	a	onConsume
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	value
	m	()V	<clinit>	<clinit>
c	dfu	net/minecraft/world/item/component/ProvidesTrimMaterial
	f	Ldbw;	c	material
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	(Lamd;)V	<init>	<init>
	m	(Ldbw;)V	<init>	<init>
	m	(Ljn$a;)Ljava/util/Optional;	a	unwrap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldbw;	a	material
	m	()V	<clinit>	<clinit>
c	dfv	net/minecraft/world/item/component/ResolvableProfile
	f	Ljava/util/Optional;	c	name
	f	Ljava/util/Optional;	d	id
	f	Lcom/mojang/authlib/properties/PropertyMap;	e	properties
	f	Lcom/mojang/authlib/GameProfile;	f	gameProfile
	f	Lcom/mojang/serialization/Codec;	g	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/authlib/properties/PropertyMap;)V	<init>	<init>
	m	(Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/authlib/properties/PropertyMap;Lcom/mojang/authlib/GameProfile;)V	<init>	<init>
	m	()Ldfv;	a	pollResolve
	m	()Ljava/util/concurrent/CompletableFuture;	b	resolve
	m	(Ljava/util/Optional;)Ldfv;	a	createProfile
	m	(Ljava/util/Optional;Ljava/util/Optional;)Lcom/mojang/authlib/GameProfile;	a	createGameProfile
	m	(Ljava/util/Optional;Ljava/util/Optional;Lcom/mojang/authlib/properties/PropertyMap;)Lcom/mojang/authlib/GameProfile;	a	createGameProfile
	m	()Z	c	isResolved
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	d	name
	m	()Ljava/util/Optional;	e	id
	m	()Lcom/mojang/authlib/properties/PropertyMap;	f	properties
	m	()Lcom/mojang/authlib/GameProfile;	g	gameProfile
	m	()Lcom/mojang/authlib/GameProfile;	h	lambda$createProfile$2
	m	(Ljava/lang/String;)Ldfv;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfw	net/minecraft/world/item/component/SeededContainerLoot
	f	Lamd;	b	lootTable
	f	J	c	seed
	f	Lxo;	d	UNKNOWN_CONTENTS
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lamd;J)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	lootTable
	m	()J	b	seed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfx	net/minecraft/world/item/component/SuspiciousStewEffects
	f	Ljava/util/List;	e	effects
	f	Ldfx;	a	EMPTY
	f	I	b	DEFAULT_DURATION
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldfx$a;)Ldfx;	a	withEffectAdded
	m	(Ldmu;Lcam;Ldcv;Ldfa;)V	a	onConsume
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	effects
	m	()V	<clinit>	<clinit>
c	dfx$a	net/minecraft/world/item/component/SuspiciousStewEffects$Entry
	f	Ljl;	c	effect
	f	I	d	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;I)V	<init>	<init>
	m	()Lbyq;	a	createEffectInstance
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	effect
	m	()I	c	duration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfy	net/minecraft/world/item/component/Tool
	f	Ljava/util/List;	c	rules
	f	F	d	defaultMiningSpeed
	f	I	e	damagePerBlock
	f	Z	f	canDestroyBlocksInCreative
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/List;FIZ)V	<init>	<init>
	m	(Leeb;)F	a	getMiningSpeed
	m	(Leeb;)Z	b	isCorrectForDrops
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	rules
	m	()F	b	defaultMiningSpeed
	m	()I	c	damagePerBlock
	m	()Z	d	canDestroyBlocksInCreative
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfy$a	net/minecraft/world/item/component/Tool$Rule
	f	Ljp;	c	blocks
	f	Ljava/util/Optional;	d	speed
	f	Ljava/util/Optional;	e	correctForDrops
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljp;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljp;F)Ldfy$a;	a	minesAndDrops
	m	(Ljp;)Ldfy$a;	a	deniesDrops
	m	(Ljp;F)Ldfy$a;	b	overrideSpeed
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	blocks
	m	()Ljava/util/Optional;	b	speed
	m	()Ljava/util/Optional;	c	correctForDrops
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dfz	net/minecraft/world/item/component/TooltipDisplay
	f	Z	d	hideTooltip
	f	Ljava/util/SequencedSet;	e	hiddenComponents
	f	Lcom/mojang/serialization/Codec;	f	COMPONENT_SET_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldfz;	c	DEFAULT
	m	(ZLjava/util/SequencedSet;)V	<init>	<init>
	m	(Lkp;Z)Ldfz;	a	withHidden
	m	(Lkp;)Z	a	shows
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	hideTooltip
	m	()Ljava/util/SequencedSet;	b	hiddenComponents
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dga	net/minecraft/world/item/component/TooltipProvider
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
c	dgb	net/minecraft/world/item/component/UseCooldown
	f	F	c	seconds
	f	Ljava/util/Optional;	d	cooldownGroup
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(F)V	<init>	<init>
	m	(FLjava/util/Optional;)V	<init>	<init>
	m	()I	a	ticks
	m	(Ldcv;Lcam;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	seconds
	m	()Ljava/util/Optional;	c	cooldownGroup
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgc	net/minecraft/world/item/component/UseRemainder
	f	Ldcv;	c	convertInto
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ldcv;)V	<init>	<init>
	m	(Ldcv;IZLdgc$a;)Ldcv;	a	convertIntoRemainder
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ldcv;	a	convertInto
	m	()V	<clinit>	<clinit>
c	dgc$a	net/minecraft/world/item/component/UseRemainder$OnExtraCreatedRemainder
	m	(Ldcv;)V	apply	apply
c	dgd	net/minecraft/world/item/component/Weapon
	f	I	d	itemDamagePerAttack
	f	F	e	disableBlockingForSeconds
	f	F	a	AXE_DISABLES_BLOCKING_FOR_SECONDS
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(I)V	<init>	<init>
	m	(IF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	itemDamagePerAttack
	m	()F	b	disableBlockingForSeconds
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dge	net/minecraft/world/item/component/WritableBookContent
	f	Ljava/util/List;	g	pages
	f	Ldge;	a	EMPTY
	f	I	b	PAGE_EDIT_LENGTH
	f	I	c	MAX_PAGES
	f	Lcom/mojang/serialization/Codec;	h	PAGE_CODEC
	f	Lcom/mojang/serialization/Codec;	d	PAGES_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lzm;	f	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Z)Ljava/util/stream/Stream;	a	getPages
	m	(Ljava/util/List;)Ldge;	b	withReplacedPages
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	pages
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
	m	(ZLaut;)Ljava/lang/String;	a	lambda$getPages$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgf	net/minecraft/world/item/component/WrittenBookContent
	f	Laut;	k	title
	f	Ljava/lang/String;	l	author
	f	I	m	generation
	f	Ljava/util/List;	n	pages
	f	Z	o	resolved
	f	Ldgf;	a	EMPTY
	f	I	b	PAGE_LENGTH
	f	I	c	TITLE_LENGTH
	f	I	d	TITLE_MAX_LENGTH
	f	I	e	MAX_GENERATION
	f	I	f	MAX_CRAFTABLE_GENERATION
	f	Lcom/mojang/serialization/Codec;	g	CONTENT_CODEC
	f	Lcom/mojang/serialization/Codec;	h	PAGES_CODEC
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	Lzm;	j	STREAM_CODEC
	m	(Laut;Ljava/lang/String;ILjava/util/List;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	b	pageCodec
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	pagesCodec
	m	()Ldgf;	b	tryCraftCopy
	m	(Ldcv;Lek;Lcut;)Z	a	resolveForItem
	m	(Lek;Lcut;)Ldgf;	a	resolve
	m	()Ldgf;	c	markResolved
	m	(Lek;Lcut;Laut;)Ljava/util/Optional;	a	resolvePage
	m	(Lxo;Ljn$a;)Z	a	isPageTooLarge
	m	(Z)Ljava/util/List;	a	getPages
	m	(Ljava/util/List;)Ldgf;	b	withReplacedPages
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laut;	d	title
	m	()Ljava/lang/String;	e	author
	m	()I	f	generation
	m	()Ljava/util/List;	a	pages
	m	()Z	g	resolved
	m	(Ljava/util/List;)Ljava/lang/Object;	a	withReplacedPages
	m	(ZLaut;)Lxo;	a	lambda$getPages$2
	m	(Lek;Lcut;Lxo;)Ljava/util/Optional;	a	lambda$resolvePage$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgg	net/minecraft/world/item/component/package-info
c	dgh	net/minecraft/world/item/consume_effects/ApplyStatusEffectsConsumeEffect
	f	Ljava/util/List;	c	effects
	f	F	f	probability
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Lbyq;F)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lbyq;)V	<init>	<init>
	m	(Ljava/util/List;F)V	<init>	<init>
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	effects
	m	()F	c	probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgi	net/minecraft/world/item/consume_effects/ClearAllStatusEffectsConsumeEffect
	f	Ldgi;	a	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	dgj	net/minecraft/world/item/consume_effects/ConsumeEffect
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()V	<clinit>	<clinit>
c	dgj$a	net/minecraft/world/item/consume_effects/ConsumeEffect$Type
	f	Lcom/mojang/serialization/MapCodec;	f	codec
	f	Lzm;	g	streamCodec
	f	Ldgj$a;	a	APPLY_EFFECTS
	f	Ldgj$a;	b	REMOVE_EFFECTS
	f	Ldgj$a;	c	CLEAR_ALL_EFFECTS
	f	Ldgj$a;	d	TELEPORT_RANDOMLY
	f	Ldgj$a;	e	PLAY_SOUND
	m	(Lcom/mojang/serialization/MapCodec;Lzm;)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;Lzm;)Ldgj$a;	a	register
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	()V	<clinit>	<clinit>
c	dgk	net/minecraft/world/item/consume_effects/PlaySoundConsumeEffect
	f	Ljl;	c	sound
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	sound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgl	net/minecraft/world/item/consume_effects/RemoveStatusEffectsConsumeEffect
	f	Ljp;	c	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;)V	<init>	<init>
	m	(Ljp;)V	<init>	<init>
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	effects
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgm	net/minecraft/world/item/consume_effects/TeleportRandomlyConsumeEffect
	f	F	c	diameter
	f	F	f	DEFAULT_DIAMETER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	(F)V	<init>	<init>
	m	()Ldgj$a;	a	getType
	m	(Ldmu;Ldcv;Lcam;)Z	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	diameter
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dgn	net/minecraft/world/item/consume_effects/package-info
c	dgo	net/minecraft/world/item/context/BlockPlaceContext
	f	Ljb;	b	relativePos
	f	Z	a	replaceClicked
	m	(Lcut;Lbxi;Ldcv;Lfio;)V	<init>	<init>
	m	(Ldgq;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;Ldcv;Lfio;)V	<init>	<init>
	m	(Ldgo;Ljb;Ljh;)Ldgo;	a	at
	m	()Ljb;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Ljh;	d	getNearestLookingDirection
	m	()Ljh;	e	getNearestLookingVerticalDirection
	m	()[Ljh;	f	getNearestLookingDirections
c	dgp	net/minecraft/world/item/context/DirectionalPlaceContext
	f	Ljh;	b	direction
	m	(Ldmu;Ljb;Ljh;Ldcv;Ljh;)V	<init>	<init>
	m	()Ljb;	a	getClickedPos
	m	()Z	b	canPlace
	m	()Z	c	replacingClickedOnBlock
	m	()Ljh;	d	getNearestLookingDirection
	m	()[Ljh;	f	getNearestLookingDirections
	m	()Ljh;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
c	dgp$1	net/minecraft/world/item/context/DirectionalPlaceContext$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	dgq	net/minecraft/world/item/context/UseOnContext
	f	Lcut;	a	player
	f	Lbxi;	b	hand
	f	Lfio;	c	hitResult
	f	Ldmu;	d	level
	f	Ldcv;	e	itemStack
	m	(Lcut;Lbxi;Lfio;)V	<init>	<init>
	m	(Ldmu;Lcut;Lbxi;Ldcv;Lfio;)V	<init>	<init>
	m	()Lfio;	j	getHitResult
	m	()Ljb;	a	getClickedPos
	m	()Ljh;	k	getClickedFace
	m	()Lfis;	l	getClickLocation
	m	()Z	m	isInside
	m	()Ldcv;	n	getItemInHand
	m	()Lcut;	o	getPlayer
	m	()Lbxi;	p	getHand
	m	()Ldmu;	q	getLevel
	m	()Ljh;	g	getHorizontalDirection
	m	()Z	h	isSecondaryUseActive
	m	()F	i	getRotation
c	dgr	net/minecraft/world/item/context/package-info
c	dgs	net/minecraft/world/item/crafting/AbstractCookingRecipe
	f	Ldgy;	d	category
	f	F	e	experience
	f	I	f	cookingTime
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)V	<init>	<init>
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	()F	c	experience
	m	()I	d	cookingTime
	m	()Ldgy;	e	category
	m	()Ldcr;	f	furnaceIcon
	m	()Ljava/util/List;	g	display
c	dgs$a	net/minecraft/world/item/crafting/AbstractCookingRecipe$Factory
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)Ldgs;	create	create
c	dgs$b	net/minecraft/world/item/crafting/AbstractCookingRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	w	codec
	f	Lzm;	x	streamCodec
	m	(Ldgs$a;I)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(ILdgs$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
c	dgt	net/minecraft/world/item/crafting/ArmorDyeRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dgu	net/minecraft/world/item/crafting/BannerDuplicateRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	(Ldha;)Lju;	a	getRemainingItems
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dgv	net/minecraft/world/item/crafting/BlastingRecipe
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)V	<init>	<init>
	m	()Ldcr;	f	furnaceIcon
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	()Ldhp;	h	recipeBookCategory
c	dgv$1	net/minecraft/world/item/crafting/BlastingRecipe$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$crafting$CookingBookCategory
	m	()V	<clinit>	<clinit>
c	dgw	net/minecraft/world/item/crafting/BookCloningRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	(Ldha;)Lju;	a	getRemainingItems
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dgx	net/minecraft/world/item/crafting/CampfireCookingRecipe
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)V	<init>	<init>
	m	()Ldcr;	f	furnaceIcon
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	()Ldhp;	h	recipeBookCategory
c	dgy	net/minecraft/world/item/crafting/CookingBookCategory
	f	Ldgy;	a	FOOD
	f	Ldgy;	b	BLOCKS
	f	Ldgy;	c	MISC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	f	I	g	id
	f	Ljava/lang/String;	h	name
	f	[Ldgy;	i	$VALUES
	m	()[Ldgy;	values	values
	m	(Ljava/lang/String;)Ldgy;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ldgy;)I	a	lambda$static$1
	m	(Ldgy;)I	b	lambda$static$0
	m	()[Ldgy;	a	$values
	m	()V	<clinit>	<clinit>
c	dgz	net/minecraft/world/item/crafting/CraftingBookCategory
	f	Ldgz;	a	BUILDING
	f	Ldgz;	b	REDSTONE
	f	Ldgz;	c	EQUIPMENT
	f	Ldgz;	d	MISC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	f	BY_ID
	f	Lzm;	g	STREAM_CODEC
	f	Ljava/lang/String;	h	name
	f	I	i	id
	f	[Ldgz;	j	$VALUES
	m	()[Ldgz;	values	values
	m	(Ljava/lang/String;)Ldgz;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	id
	m	()[Ldgz;	b	$values
	m	()V	<clinit>	<clinit>
c	dha	net/minecraft/world/item/crafting/CraftingInput
	f	Ldha;	a	EMPTY
	f	I	b	width
	f	I	c	height
	f	Ljava/util/List;	d	items
	f	Lcuz;	e	stackedContents
	f	I	f	ingredientCount
	m	(IILjava/util/List;)V	<init>	<init>
	m	(IILjava/util/List;)Ldha;	a	of
	m	(IILjava/util/List;)Ldha$a;	b	ofPositioned
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	getItem
	m	()I	a	size
	m	()Z	b	isEmpty
	m	()Lcuz;	c	stackedContents
	m	()Ljava/util/List;	d	items
	m	()I	e	ingredientCount
	m	()I	f	width
	m	()I	g	height
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()V	<clinit>	<clinit>
c	dha$a	net/minecraft/world/item/crafting/CraftingInput$Positioned
	f	Ldha;	b	input
	f	I	c	left
	f	I	d	top
	f	Ldha$a;	a	EMPTY
	m	(Ldha;II)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldha;	a	input
	m	()I	b	left
	m	()I	c	top
	m	()V	<clinit>	<clinit>
c	dhb	net/minecraft/world/item/crafting/CraftingRecipe
	m	()Ldhx;	b	getType
	m	()Ldhw;	a	getSerializer
	m	()Ldgz;	c	category
	m	(Ldha;)Lju;	a	getRemainingItems
	m	(Ldha;)Lju;	b	defaultCraftingReminder
	m	()Ldhp;	h	recipeBookCategory
c	dhb$1	net/minecraft/world/item/crafting/CraftingRecipe$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$crafting$CraftingBookCategory
	m	()V	<clinit>	<clinit>
c	dhc	net/minecraft/world/item/crafting/CustomRecipe
	f	Ldgz;	d	category
	m	(Ldgz;)V	<init>	<init>
	m	()Z	ap_	isSpecial
	m	()Ldgz;	c	category
	m	()Ldhl;	ao_	placementInfo
	m	()Ldhw;	a	getSerializer
c	dhc$a	net/minecraft/world/item/crafting/CustomRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	w	codec
	f	Lzm;	x	streamCodec
	m	(Ldhc$a$a;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldhc$a$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
c	dhc$a$a	net/minecraft/world/item/crafting/CustomRecipe$Serializer$Factory
	m	(Ldgz;)Ldhb;	create	create
c	dhd	net/minecraft/world/item/crafting/DecoratedPotRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;)Ldcv;	c	back
	m	(Ldha;)Ldcv;	d	left
	m	(Ldha;)Ldcv;	e	right
	m	(Ldha;)Ldcv;	f	front
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dhe	net/minecraft/world/item/crafting/ExtendedRecipeBookCategory
c	dhf	net/minecraft/world/item/crafting/FireworkRocketRecipe
	f	Ldhi;	d	PAPER_INGREDIENT
	f	Ldhi;	e	GUNPOWDER_INGREDIENT
	f	Ldhi;	f	STAR_INGREDIENT
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	dhg	net/minecraft/world/item/crafting/FireworkStarFadeRecipe
	f	Ldhi;	d	STAR_INGREDIENT
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	dhh	net/minecraft/world/item/crafting/FireworkStarRecipe
	f	Ljava/util/Map;	d	SHAPE_BY_ITEM
	f	Ldhi;	e	TRAIL_INGREDIENT
	f	Ldhi;	f	TWINKLE_INGREDIENT
	f	Ldhi;	g	GUNPOWDER_INGREDIENT
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
	m	()V	<clinit>	<clinit>
c	dhi	net/minecraft/world/item/crafting/Ingredient
	f	Lzm;	a	CONTENTS_STREAM_CODEC
	f	Lzm;	b	OPTIONAL_CONTENTS_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	NON_AIR_HOLDER_SET_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljp;	e	values
	m	(Ljp;)V	<init>	<init>
	m	(Ljava/util/Optional;Ldcv;)Z	a	testOptionalIngredient
	m	()Ljava/util/stream/Stream;	a	items
	m	()Z	b	isEmpty
	m	(Ldcv;)Z	a	test
	m	(Ljl;)Z	a	acceptsItem
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Ldmt;)Ldhi;	a	of
	m	([Ldmt;)Ldhi;	a	of
	m	(Ljava/util/stream/Stream;)Ldhi;	a	of
	m	(Ljp;)Ldhi;	a	of
	m	()Ldiy;	c	display
	m	(Ljava/util/Optional;)Ldiy;	a	optionalIngredientToDisplay
	m	(Ljl;)Ldiy;	b	displayForSingleItem
	m	(Ljava/lang/Object;)Z	test	test
	m	(Ljava/lang/Object;)Z	acceptsItem	acceptsItem
	m	(Ljava/util/List;)Ljava/lang/Record;	a	lambda$display$8
	m	(Ldmt;)Ljl$c;	b	lambda$of$7
	m	(Ldcv;Ldhi;)Ljava/lang/Boolean;	a	lambda$testOptionalIngredient$6
	m	(Ljava/util/List;)V	b	lambda$new$5
	m	(Ldhi;)Ljp;	a	lambda$static$4
	m	(Ljava/util/Optional;)Ljp;	b	lambda$static$3
	m	(Ldhi;)Ljp;	b	lambda$static$2
	m	(Ljp;)Ljava/util/Optional;	b	lambda$static$1
	m	(Ldhi;)Ljp;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dhj	net/minecraft/world/item/crafting/MapCloningRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dhk	net/minecraft/world/item/crafting/MapExtendingRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	(Ldha;)Ldcv;	c	findFilledMap
	m	()Z	ap_	isSpecial
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dhl	net/minecraft/world/item/crafting/PlacementInfo
	f	I	a	EMPTY_SLOT
	f	Ldhl;	b	NOT_PLACEABLE
	f	Ljava/util/List;	c	ingredients
	f	Lit/unimi/dsi/fastutil/ints/IntList;	d	slotsToIngredientIndex
	m	(Ljava/util/List;Lit/unimi/dsi/fastutil/ints/IntList;)V	<init>	<init>
	m	(Ldhi;)Ldhl;	a	create
	m	(Ljava/util/List;)Ldhl;	a	createFromOptionals
	m	(Ljava/util/List;)Ldhl;	b	create
	m	()Lit/unimi/dsi/fastutil/ints/IntList;	a	slotsToIngredientIndex
	m	()Ljava/util/List;	b	ingredients
	m	()Z	c	isImpossibleToPlace
	m	()V	<clinit>	<clinit>
c	dhm	net/minecraft/world/item/crafting/Recipe
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	KEY_CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ldhs;Ldmu;)Z	a	matches
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	()Z	ap_	isSpecial
	m	()Z	i	showNotification
	m	()Ljava/lang/String;	j	group
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	()Ldhl;	ao_	placementInfo
	m	()Ljava/util/List;	g	display
	m	()Ldhp;	h	recipeBookCategory
	m	()V	<clinit>	<clinit>
c	dhn	net/minecraft/world/item/crafting/RecipeAccess
	m	(Lamd;)Ldhv;	a	propertySet
	m	()Ldhz$b;	a	stonecutterRecipes
c	dho	net/minecraft/world/item/crafting/RecipeBookCategories
	f	Ldhp;	a	CRAFTING_BUILDING_BLOCKS
	f	Ldhp;	b	CRAFTING_REDSTONE
	f	Ldhp;	c	CRAFTING_EQUIPMENT
	f	Ldhp;	d	CRAFTING_MISC
	f	Ldhp;	e	FURNACE_FOOD
	f	Ldhp;	f	FURNACE_BLOCKS
	f	Ldhp;	g	FURNACE_MISC
	f	Ldhp;	h	BLAST_FURNACE_BLOCKS
	f	Ldhp;	i	BLAST_FURNACE_MISC
	f	Ldhp;	j	SMOKER_FOOD
	f	Ldhp;	k	STONECUTTER
	f	Ldhp;	l	SMITHING
	f	Ldhp;	m	CAMPFIRE
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ldhp;	a	register
	m	(Ljy;)Ldhp;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	dhp	net/minecraft/world/item/crafting/RecipeBookCategory
	m	()V	<init>	<init>
c	dhq	net/minecraft/world/item/crafting/RecipeCache
	f	[Ldhq$a;	a	entries
	f	Ljava/lang/ref/WeakReference;	b	cachedRecipeManager
	m	(I)V	<init>	<init>
	m	(Laub;Ldha;)Ljava/util/Optional;	a	get
	m	(Laub;)V	a	validateRecipeManager
	m	(Ldha;Laub;)Ljava/util/Optional;	a	compute
	m	(I)V	a	moveEntryToFront
	m	(Ldha;Ldhr;)V	a	insert
c	dhq$a	net/minecraft/world/item/crafting/RecipeCache$Entry
	f	Lju;	a	key
	f	I	b	width
	f	I	c	height
	f	Ldhr;	d	value
	m	(Lju;IILdhr;)V	<init>	<init>
	m	(Ldha;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lju;	a	key
	m	()I	b	width
	m	()I	c	height
	m	()Ldhr;	d	value
c	dhr	net/minecraft/world/item/crafting/RecipeHolder
	f	Lamd;	b	id
	f	Ldhm;	c	value
	f	Lzm;	a	STREAM_CODEC
	m	(Lamd;Ldhm;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Lamd;	a	id
	m	()Ldhm;	b	value
	m	()V	<clinit>	<clinit>
c	dhs	net/minecraft/world/item/crafting/RecipeInput
	m	(I)Ldcv;	a	getItem
	m	()I	a	size
	m	()Z	b	isEmpty
c	dht	net/minecraft/world/item/crafting/RecipeManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Map;	b	RECIPE_PROPERTY_SETS
	f	Lalx;	c	RECIPE_LISTER
	f	Ljn$a;	d	registries
	f	Ldhu;	e	recipes
	f	Ljava/util/Map;	f	propertySets
	f	Ldhz$b;	g	stonecutterRecipes
	f	Ljava/util/List;	h	allDisplays
	f	Ljava/util/Map;	i	recipeToDisplay
	m	(Ljn$a;)V	<init>	<init>
	m	(Laxo;Lbtt;)Ldhu;	a	prepare
	m	(Ldhu;Laxo;Lbtt;)V	a	apply
	m	(Lcyd;)V	a	finalizeRecipeLoading
	m	(Lcyd;Ljava/util/List;)Ljava/util/List;	a	filterDisabled
	m	(Lcyd;Ldhi;)Z	a	isIngredientEnabled
	m	(Ldhx;Ldhs;Ldmu;Lamd;)Ljava/util/Optional;	a	getRecipeFor
	m	(Ldhx;Ldhs;Ldmu;Ldhr;)Ljava/util/Optional;	a	getRecipeFor
	m	(Ldhx;Ldhs;Ldmu;)Ljava/util/Optional;	a	getRecipeFor
	m	(Lamd;)Ljava/util/Optional;	b	byKey
	m	(Ldhx;Lamd;)Ldhr;	a	byKeyTyped
	m	()Ljava/util/Map;	b	getSynchronizedItemProperties
	m	()Ldhz$b;	c	getSynchronizedStonecutterRecipes
	m	(Lamd;)Ldhv;	a	propertySet
	m	()Ldhz$b;	a	stonecutterRecipes
	m	()Ljava/util/Collection;	d	getRecipes
	m	(Ldiu;)Ldht$d;	a	getRecipeFromDisplay
	m	(Lamd;Ljava/util/function/Consumer;)V	a	listDisplaysForRecipe
	m	(Lamd;Lcom/google/gson/JsonObject;Ljn$a;)Ldhr;	a	fromJson
	m	(Ldhx;)Ldht$a;	a	createCheck
	m	(Ljava/lang/Iterable;Lcyd;)Ljava/util/List;	a	unpackRecipeInfo
	m	(Ldhx;)Ldht$c;	b	forSingleInput
	m	(Ljava/lang/Object;Laxo;Lbtt;)V	a	apply
	m	(Laxo;Lbtt;)Ljava/lang/Object;	b	prepare
	m	(Ldhx;Ldhm;)Ljava/util/Optional;	a	lambda$forSingleInput$14
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ljava/lang/Object;)I	a	lambda$unpackRecipeInfo$13
	m	(Ljava/util/function/Consumer;Ldht$d;)V	a	lambda$listDisplaysForRecipe$12
	m	(Lcyd;Ljl;)Z	a	lambda$isIngredientEnabled$11
	m	(Lcyd;Ldhi;)Z	b	lambda$filterDisabled$10
	m	(Ldht$d;)Lamd;	a	lambda$finalizeRecipeLoading$9
	m	(Lcyd;Ldht$b;)Ldhv;	a	lambda$finalizeRecipeLoading$8
	m	(Ldht$b;)Lamd;	a	lambda$finalizeRecipeLoading$7
	m	(Ljava/util/List;Lcyd;Ljava/util/List;Ldhr;)V	a	lambda$finalizeRecipeLoading$6
	m	(Ldhm;Ldht$b;)V	a	lambda$finalizeRecipeLoading$5
	m	(Ljava/util/Map$Entry;)Ldht$b;	a	lambda$finalizeRecipeLoading$4
	m	(Ljava/util/List;Lame;Ldhm;)V	a	lambda$prepare$3
	m	(Ldhm;)Ljava/util/Optional;	a	lambda$static$2
	m	(Ldhm;)Ljava/util/Optional;	b	lambda$static$1
	m	(Ldhm;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dht$1	net/minecraft/world/item/crafting/RecipeManager$1
	f	Lamd;	b	lastRecipe
	f	Ldhx;	a	val$type
	m	(Ldhx;)V	<init>	<init>
	m	(Ldhs;Laub;)Ljava/util/Optional;	a	getRecipeFor
c	dht$a	net/minecraft/world/item/crafting/RecipeManager$CachedCheck
	m	(Ldhs;Laub;)Ljava/util/Optional;	a	getRecipeFor
c	dht$b	net/minecraft/world/item/crafting/RecipeManager$IngredientCollector
	f	Lamd;	a	key
	f	Ldht$c;	b	extractor
	f	Ljava/util/List;	c	ingredients
	m	(Lamd;Ldht$c;)V	<init>	<init>
	m	(Ldhm;)V	a	accept
	m	(Lcyd;)Ldhv;	a	asPropertySet
	m	(Ljava/lang/Object;)V	accept	accept
c	dht$c	net/minecraft/world/item/crafting/RecipeManager$IngredientExtractor
	m	(Ldhm;)Ljava/util/Optional;	apply	apply
c	dht$d	net/minecraft/world/item/crafting/RecipeManager$ServerDisplayInfo
	f	Ldit;	a	display
	f	Ldhr;	b	parent
	m	(Ldit;Ldhr;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldit;	a	display
	m	()Ldhr;	b	parent
c	dhu	net/minecraft/world/item/crafting/RecipeMap
	f	Ldhu;	a	EMPTY
	f	Lcom/google/common/collect/Multimap;	b	byType
	f	Ljava/util/Map;	c	byKey
	m	(Lcom/google/common/collect/Multimap;Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/lang/Iterable;)Ldhu;	a	create
	m	(Ldhx;)Ljava/util/Collection;	a	byType
	m	()Ljava/util/Collection;	a	values
	m	(Lamd;)Ldhr;	a	byKey
	m	(Ldhx;Ldhs;Ldmu;)Ljava/util/stream/Stream;	a	getRecipesFor
	m	(Ldhs;Ldmu;Ldhr;)Z	a	lambda$getRecipesFor$0
	m	()V	<clinit>	<clinit>
c	dhv	net/minecraft/world/item/crafting/RecipePropertySet
	f	Lamd;	a	TYPE_KEY
	f	Lamd;	b	SMITHING_BASE
	f	Lamd;	c	SMITHING_TEMPLATE
	f	Lamd;	d	SMITHING_ADDITION
	f	Lamd;	e	FURNACE_INPUT
	f	Lamd;	f	BLAST_FURNACE_INPUT
	f	Lamd;	g	SMOKER_INPUT
	f	Lamd;	h	CAMPFIRE_INPUT
	f	Lzm;	i	STREAM_CODEC
	f	Ldhv;	j	EMPTY
	f	Ljava/util/Set;	k	items
	m	(Ljava/util/Set;)V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	registerVanilla
	m	(Ldcv;)Z	a	test
	m	(Ljava/util/Collection;)Ldhv;	a	create
	m	(Ldhv;)Ljava/util/List;	a	lambda$static$1
	m	(Ljava/util/List;)Ldhv;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dhw	net/minecraft/world/item/crafting/RecipeSerializer
	f	Ldhw;	a	SHAPED_RECIPE
	f	Ldhw;	b	SHAPELESS_RECIPE
	f	Ldhw;	c	ARMOR_DYE
	f	Ldhw;	d	BOOK_CLONING
	f	Ldhw;	e	MAP_CLONING
	f	Ldhw;	f	MAP_EXTENDING
	f	Ldhw;	g	FIREWORK_ROCKET
	f	Ldhw;	h	FIREWORK_STAR
	f	Ldhw;	i	FIREWORK_STAR_FADE
	f	Ldhw;	j	TIPPED_ARROW
	f	Ldhw;	k	BANNER_DUPLICATE
	f	Ldhw;	l	SHIELD_DECORATION
	f	Ldhw;	m	TRANSMUTE
	f	Ldhw;	n	REPAIR_ITEM
	f	Ldhw;	o	SMELTING_RECIPE
	f	Ldhw;	p	BLASTING_RECIPE
	f	Ldhw;	q	SMOKING_RECIPE
	f	Ldhw;	r	CAMPFIRE_COOKING_RECIPE
	f	Ldhw;	s	STONECUTTER
	f	Ldhw;	t	SMITHING_TRANSFORM
	f	Ldhw;	u	SMITHING_TRIM
	f	Ldhw;	v	DECORATED_POT_RECIPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ljava/lang/String;Ldhw;)Ldhw;	a	register
	m	()V	<clinit>	<clinit>
c	dhx	net/minecraft/world/item/crafting/RecipeType
	f	Ldhx;	a	CRAFTING
	f	Ldhx;	b	SMELTING
	f	Ldhx;	c	BLASTING
	f	Ldhx;	d	SMOKING
	f	Ldhx;	e	CAMPFIRE_COOKING
	f	Ldhx;	f	STONECUTTING
	f	Ldhx;	g	SMITHING
	m	(Ljava/lang/String;)Ldhx;	a	register
	m	()V	<clinit>	<clinit>
c	dhx$1	net/minecraft/world/item/crafting/RecipeType$1
	f	Ljava/lang/String;	h	val$name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
c	dhy	net/minecraft/world/item/crafting/RepairItemRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;)Lcom/mojang/datafixers/util/Pair;	c	getItemsToCombine
	m	(Ldcv;Ldcv;)Z	a	canCombine
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
	m	(Ljn$a;Ldjo;Ldjo;Ldjo$a;)V	a	lambda$assemble$2
	m	(Ldjo;Ldjo;Ldjo$a;Ljl$c;)V	a	lambda$assemble$1
	m	(Ljl$c;)Z	a	lambda$assemble$0
c	dhz	net/minecraft/world/item/crafting/SelectableRecipe
	f	Ldiy;	a	optionDisplay
	f	Ljava/util/Optional;	b	recipe
	m	(Ldiy;Ljava/util/Optional;)V	<init>	<init>
	m	()Lzm;	a	noRecipeCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	optionDisplay
	m	()Ljava/util/Optional;	c	recipe
	m	(Ldiy;)Ldhz;	a	lambda$noRecipeCodec$0
c	dhz$a	net/minecraft/world/item/crafting/SelectableRecipe$SingleInputEntry
	f	Ldhi;	a	input
	f	Ldhz;	b	recipe
	m	(Ldhi;Ldhz;)V	<init>	<init>
	m	()Lzm;	a	noRecipeCodec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldhi;	b	input
	m	()Ldhz;	c	recipe
c	dhz$b	net/minecraft/world/item/crafting/SelectableRecipe$SingleInputSet
	f	Ljava/util/List;	a	entries
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ldhz$b;	a	empty
	m	()Lzm;	b	noRecipeCodec
	m	(Ldcv;)Z	a	acceptsInput
	m	(Ldcv;)Ldhz$b;	b	selectByInput
	m	()Z	c	isEmpty
	m	()I	d	size
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	e	entries
	m	(Ldcv;Ldhz$a;)Z	a	lambda$selectByInput$1
	m	(Ldcv;Ldhz$a;)Z	b	lambda$acceptsInput$0
c	dia	net/minecraft/world/item/crafting/ShapedRecipe
	f	Ldib;	d	pattern
	f	Ldcv;	e	result
	f	Ljava/lang/String;	f	group
	f	Ldgz;	g	category
	f	Z	h	showNotification
	f	Ldhl;	i	placementInfo
	m	(Ljava/lang/String;Ldgz;Ldib;Ldcv;Z)V	<init>	<init>
	m	(Ljava/lang/String;Ldgz;Ldib;Ldcv;)V	<init>	<init>
	m	()Ldhw;	a	getSerializer
	m	()Ljava/lang/String;	j	group
	m	()Ldgz;	c	category
	m	()Ljava/util/List;	f	getIngredients
	m	()Ldhl;	ao_	placementInfo
	m	()Z	i	showNotification
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()I	k	getWidth
	m	()I	l	getHeight
	m	()Ljava/util/List;	g	display
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
	m	(Ljava/util/Optional;)Ldiy;	a	lambda$display$0
c	dia$a	net/minecraft/world/item/crafting/ShapedRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	w	CODEC
	f	Lzm;	x	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Lwx;)Ldia;	a	fromNetwork
	m	(Lwx;Ldia;)V	a	toNetwork
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldia;)Ljava/lang/Boolean;	a	lambda$static$4
	m	(Ldia;)Ldcv;	b	lambda$static$3
	m	(Ldia;)Ldib;	c	lambda$static$2
	m	(Ldia;)Ldgz;	d	lambda$static$1
	m	(Ldia;)Ljava/lang/String;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dib	net/minecraft/world/item/crafting/ShapedRecipePattern
	f	I	d	MAX_SIZE
	f	C	a	EMPTY_SLOT
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	Lzm;	c	STREAM_CODEC
	f	I	e	width
	f	I	f	height
	f	Ljava/util/List;	g	ingredients
	f	Ljava/util/Optional;	h	data
	f	I	i	ingredientCount
	f	Z	j	symmetrical
	m	(IILjava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/util/List;)Ldib;	a	createFromNetwork
	m	(Ljava/util/Map;[Ljava/lang/String;)Ldib;	a	of
	m	(Ljava/util/Map;Ljava/util/List;)Ldib;	a	of
	m	(Ldib$a;)Lcom/mojang/serialization/DataResult;	a	unpack
	m	(Ljava/util/List;)[Ljava/lang/String;	a	shrink
	m	(Ljava/lang/String;)I	a	firstNonEmpty
	m	(Ljava/lang/String;)I	b	lastNonEmpty
	m	(Ldha;)Z	a	matches
	m	(Ldha;Z)Z	a	matches
	m	()I	a	width
	m	()I	b	height
	m	()Ljava/util/List;	c	ingredients
	m	(Lit/unimi/dsi/fastutil/chars/CharSet;)Ljava/lang/String;	a	lambda$unpack$7
	m	(C)Ljava/lang/String;	a	lambda$unpack$6
	m	(Ldib;)Ljava/util/List;	a	lambda$static$5
	m	(Ldib;)Ljava/lang/Integer;	b	lambda$static$4
	m	(Ldib;)Ljava/lang/Integer;	c	lambda$static$3
	m	(Ldib;)Lcom/mojang/serialization/DataResult;	d	lambda$static$2
	m	()Lcom/mojang/serialization/DataResult;	d	lambda$static$1
	m	()Ljava/lang/String;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dib$a	net/minecraft/world/item/crafting/ShapedRecipePattern$Data
	f	Ljava/util/Map;	b	key
	f	Ljava/util/List;	c	pattern
	f	Lcom/mojang/serialization/Codec;	d	PATTERN_CODEC
	f	Lcom/mojang/serialization/Codec;	e	SYMBOL_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	a	key
	m	()Ljava/util/List;	b	pattern
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Ldib$a;)Ljava/util/List;	a	lambda$static$9
	m	(Ldib$a;)Ljava/util/Map;	b	lambda$static$8
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$static$7
	m	()Ljava/lang/String;	c	lambda$static$6
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$static$5
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	()Ljava/lang/String;	d	lambda$static$3
	m	()Ljava/lang/String;	e	lambda$static$2
	m	()Ljava/lang/String;	f	lambda$static$1
	m	()Ljava/lang/String;	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dic	net/minecraft/world/item/crafting/ShapelessRecipe
	f	Ljava/lang/String;	d	group
	f	Ldgz;	e	category
	f	Ldcv;	f	result
	f	Ljava/util/List;	g	ingredients
	f	Ldhl;	h	placementInfo
	m	(Ljava/lang/String;Ldgz;Ldcv;Ljava/util/List;)V	<init>	<init>
	m	()Ldhw;	a	getSerializer
	m	()Ljava/lang/String;	j	group
	m	()Ldgz;	c	category
	m	()Ldhl;	ao_	placementInfo
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ljava/util/List;	g	display
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dic$a	net/minecraft/world/item/crafting/ShapelessRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	x	CODEC
	f	Lzm;	w	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldic;)Ljava/util/List;	a	lambda$static$8
	m	(Ldic;)Ldcv;	b	lambda$static$7
	m	(Ldic;)Ldgz;	c	lambda$static$6
	m	(Ldic;)Ljava/lang/String;	d	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldic;)Ljava/util/List;	e	lambda$static$3
	m	(Ldic;)Ldcv;	f	lambda$static$2
	m	(Ldic;)Ldgz;	g	lambda$static$1
	m	(Ldic;)Ljava/lang/String;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	did	net/minecraft/world/item/crafting/ShieldDecorationRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	die	net/minecraft/world/item/crafting/SingleItemRecipe
	f	Ldhi;	d	input
	f	Ldcv;	e	result
	f	Ljava/lang/String;	f	group
	f	Ldhl;	g	placementInfo
	m	(Ljava/lang/String;Ldhi;Ldcv;)V	<init>	<init>
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	(Ldif;Ldmu;)Z	a	matches
	m	()Ljava/lang/String;	j	group
	m	()Ldhi;	k	input
	m	()Ldcv;	l	result
	m	()Ldhl;	ao_	placementInfo
	m	(Ldif;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	die$a	net/minecraft/world/item/crafting/SingleItemRecipe$Factory
	m	(Ljava/lang/String;Ldhi;Ldcv;)Ldie;	create	create
c	die$b	net/minecraft/world/item/crafting/SingleItemRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	w	codec
	f	Lzm;	x	streamCodec
	m	(Ldie$a;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldie$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$new$0
c	dif	net/minecraft/world/item/crafting/SingleRecipeInput
	f	Ldcv;	a	item
	m	(Ldcv;)V	<init>	<init>
	m	(I)Ldcv;	a	getItem
	m	()I	a	size
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	c	item
c	dig	net/minecraft/world/item/crafting/SmeltingRecipe
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)V	<init>	<init>
	m	()Ldcr;	f	furnaceIcon
	m	()Ldhw;	a	getSerializer
	m	()Ldhx;	b	getType
	m	()Ldhp;	h	recipeBookCategory
c	dig$1	net/minecraft/world/item/crafting/SmeltingRecipe$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$crafting$CookingBookCategory
	m	()V	<clinit>	<clinit>
c	dih	net/minecraft/world/item/crafting/SmithingRecipe
	m	()Ldhx;	b	getType
	m	()Ldhw;	a	getSerializer
	m	(Ldii;Ldmu;)Z	a	matches
	m	()Ljava/util/Optional;	c	templateIngredient
	m	()Ldhi;	f	baseIngredient
	m	()Ljava/util/Optional;	k	additionIngredient
	m	()Ldhp;	h	recipeBookCategory
	m	(Ldhs;Ldmu;)Z	a	matches
c	dii	net/minecraft/world/item/crafting/SmithingRecipeInput
	f	Ldcv;	a	template
	f	Ldcv;	b	base
	f	Ldcv;	c	addition
	m	(Ldcv;Ldcv;Ldcv;)V	<init>	<init>
	m	(I)Ldcv;	a	getItem
	m	()I	a	size
	m	()Z	b	isEmpty
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	c	template
	m	()Ldcv;	d	base
	m	()Ldcv;	e	addition
c	dij	net/minecraft/world/item/crafting/SmithingTransformRecipe
	f	Ljava/util/Optional;	d	template
	f	Ldhi;	e	base
	f	Ljava/util/Optional;	f	addition
	f	Ldip;	g	result
	f	Ldhl;	h	placementInfo
	m	(Ljava/util/Optional;Ldhi;Ljava/util/Optional;Ldip;)V	<init>	<init>
	m	(Ldii;Ljn$a;)Ldcv;	a	assemble
	m	()Ljava/util/Optional;	c	templateIngredient
	m	()Ldhi;	f	baseIngredient
	m	()Ljava/util/Optional;	k	additionIngredient
	m	()Ldhw;	a	getSerializer
	m	()Ldhl;	ao_	placementInfo
	m	()Ljava/util/List;	g	display
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
c	dij$a	net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	x	CODEC
	f	Lzm;	w	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldij;)Ldip;	a	lambda$static$8
	m	(Ldij;)Ljava/util/Optional;	b	lambda$static$7
	m	(Ldij;)Ldhi;	c	lambda$static$6
	m	(Ldij;)Ljava/util/Optional;	d	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldij;)Ldip;	e	lambda$static$3
	m	(Ldij;)Ljava/util/Optional;	f	lambda$static$2
	m	(Ldij;)Ldhi;	g	lambda$static$1
	m	(Ldij;)Ljava/util/Optional;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dik	net/minecraft/world/item/crafting/SmithingTrimRecipe
	f	Ldhi;	d	template
	f	Ldhi;	e	base
	f	Ldhi;	f	addition
	f	Ljl;	g	pattern
	f	Ldhl;	h	placementInfo
	m	(Ldhi;Ldhi;Ldhi;Ljl;)V	<init>	<init>
	m	(Ldii;Ljn$a;)Ldcv;	a	assemble
	m	(Ljn$a;Ldcv;Ldcv;Ljl;)Ldcv;	a	applyTrim
	m	()Ljava/util/Optional;	c	templateIngredient
	m	()Ldhi;	f	baseIngredient
	m	()Ljava/util/Optional;	k	additionIngredient
	m	()Ldhw;	a	getSerializer
	m	()Ldhl;	ao_	placementInfo
	m	()Ljava/util/List;	g	display
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
c	dik$a	net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	x	CODEC
	f	Lzm;	w	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldik;)Ljl;	a	lambda$static$8
	m	(Ldik;)Ldhi;	b	lambda$static$7
	m	(Ldik;)Ldhi;	c	lambda$static$6
	m	(Ldik;)Ldhi;	d	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldik;)Ljl;	e	lambda$static$3
	m	(Ldik;)Ldhi;	f	lambda$static$2
	m	(Ldik;)Ldhi;	g	lambda$static$1
	m	(Ldik;)Ldhi;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dil	net/minecraft/world/item/crafting/SmokingRecipe
	m	(Ljava/lang/String;Ldgy;Ldhi;Ldcv;FI)V	<init>	<init>
	m	()Ldcr;	f	furnaceIcon
	m	()Ldhx;	b	getType
	m	()Ldhw;	a	getSerializer
	m	()Ldhp;	h	recipeBookCategory
c	dim	net/minecraft/world/item/crafting/StonecutterRecipe
	m	(Ljava/lang/String;Ldhi;Ldcv;)V	<init>	<init>
	m	()Ldhx;	b	getType
	m	()Ldhw;	a	getSerializer
	m	()Ljava/util/List;	g	display
	m	()Ldiy;	c	resultDisplay
	m	()Ldhp;	h	recipeBookCategory
c	din	net/minecraft/world/item/crafting/TippedArrowRecipe
	m	(Ldgz;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ldhw;	a	getSerializer
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dio	net/minecraft/world/item/crafting/TransmuteRecipe
	f	Ljava/lang/String;	d	group
	f	Ldgz;	e	category
	f	Ldhi;	f	input
	f	Ldhi;	g	material
	f	Ldip;	h	result
	f	Ldhl;	i	placementInfo
	m	(Ljava/lang/String;Ldgz;Ldhi;Ldhi;Ldip;)V	<init>	<init>
	m	(Ldha;Ldmu;)Z	a	matches
	m	(Ldha;Ljn$a;)Ldcv;	a	assemble
	m	()Ljava/util/List;	g	display
	m	()Ldhw;	a	getSerializer
	m	()Ljava/lang/String;	j	group
	m	()Ldhl;	ao_	placementInfo
	m	()Ldgz;	c	category
	m	(Ldhs;Ljn$a;)Ldcv;	a	assemble
	m	(Ldhs;Ldmu;)Z	a	matches
c	dio$a	net/minecraft/world/item/crafting/TransmuteRecipe$Serializer
	f	Lcom/mojang/serialization/MapCodec;	x	CODEC
	f	Lzm;	w	STREAM_CODEC
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ldio;)Ldip;	a	lambda$static$10
	m	(Ldio;)Ldhi;	b	lambda$static$9
	m	(Ldio;)Ldhi;	c	lambda$static$8
	m	(Ldio;)Ldgz;	d	lambda$static$7
	m	(Ldio;)Ljava/lang/String;	e	lambda$static$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldio;)Ldip;	f	lambda$static$4
	m	(Ldio;)Ldhi;	g	lambda$static$3
	m	(Ldio;)Ldhi;	h	lambda$static$2
	m	(Ldio;)Ldgz;	i	lambda$static$1
	m	(Ldio;)Ljava/lang/String;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dip	net/minecraft/world/item/crafting/TransmuteResult
	f	Ljl;	c	item
	f	I	d	count
	f	Lko;	e	components
	f	Lcom/mojang/serialization/Codec;	f	FULL_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ldcr;)V	<init>	<init>
	m	(Ljl;ILko;)V	<init>	<init>
	m	(Ldip;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Ldcv;)Ldcv;	a	apply
	m	(Ldcv;)Z	b	isResultUnchanged
	m	()Ldiy;	a	display
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	item
	m	()I	c	count
	m	()Lko;	d	components
	m	(Ldip;Ldcv;)Ldip;	a	lambda$validate$2
	m	(Ljl;)Ldip;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diq	net/minecraft/world/item/crafting/display/DisplayContentsFactory
c	diq$a	net/minecraft/world/item/crafting/display/DisplayContentsFactory$ForRemainders
	m	(Ljava/lang/Object;Ljava/util/List;)Ljava/lang/Object;	a	addRemainder
c	diq$b	net/minecraft/world/item/crafting/display/DisplayContentsFactory$ForStacks
	m	(Ljl;)Ljava/lang/Object;	a	forStack
	m	(Ldcr;)Ljava/lang/Object;	a	forStack
	m	(Ldcv;)Ljava/lang/Object;	a	forStack
c	dir	net/minecraft/world/item/crafting/display/FurnaceRecipeDisplay
	f	Ldiy;	f	ingredient
	f	Ldiy;	g	fuel
	f	Ldiy;	h	result
	f	Ldiy;	i	craftingStation
	f	I	j	duration
	f	F	k	experience
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldis$a;	c	TYPE
	m	(Ldiy;Ldiy;Ldiy;Ldiy;IF)V	<init>	<init>
	m	()Ldis$a;	a	type
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	ingredient
	m	()Ldiy;	c	fuel
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	()I	f	duration
	m	()F	g	experience
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dis	net/minecraft/world/item/crafting/display/RecipeDisplay
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	()Ldis$a;	a	type
	m	(Lcyd;)Z	a	isEnabled
	m	()V	<clinit>	<clinit>
c	dis$a	net/minecraft/world/item/crafting/display/RecipeDisplay$Type
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lzm;	b	streamCodec
	m	(Lcom/mojang/serialization/MapCodec;Lzm;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
c	dit	net/minecraft/world/item/crafting/display/RecipeDisplayEntry
	f	Ldiu;	b	id
	f	Ldis;	c	display
	f	Ljava/util/OptionalInt;	d	group
	f	Ldhp;	e	category
	f	Ljava/util/Optional;	f	craftingRequirements
	f	Lzm;	a	STREAM_CODEC
	m	(Ldiu;Ldis;Ljava/util/OptionalInt;Ldhp;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbdp;)Ljava/util/List;	a	resultItems
	m	(Lcuz;)Z	a	canCraft
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiu;	a	id
	m	()Ldis;	b	display
	m	()Ljava/util/OptionalInt;	c	group
	m	()Ldhp;	d	category
	m	()Ljava/util/Optional;	e	craftingRequirements
	m	()V	<clinit>	<clinit>
c	diu	net/minecraft/world/item/crafting/display/RecipeDisplayId
	f	I	b	index
	f	Lzm;	a	STREAM_CODEC
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	index
	m	()V	<clinit>	<clinit>
c	div	net/minecraft/world/item/crafting/display/RecipeDisplays
	m	()V	<init>	<init>
	m	(Ljy;)Ldis$a;	a	bootstrap
c	diw	net/minecraft/world/item/crafting/display/ShapedCraftingRecipeDisplay
	f	I	f	width
	f	I	g	height
	f	Ljava/util/List;	h	ingredients
	f	Ldiy;	i	result
	f	Ldiy;	j	craftingStation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldis$a;	c	TYPE
	m	(IILjava/util/List;Ldiy;Ldiy;)V	<init>	<init>
	m	()Ldis$a;	a	type
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	width
	m	()I	c	height
	m	()Ljava/util/List;	f	ingredients
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	(Lcyd;Ldiy;)Z	a	lambda$isEnabled$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dix	net/minecraft/world/item/crafting/display/ShapelessCraftingRecipeDisplay
	f	Ljava/util/List;	f	ingredients
	f	Ldiy;	g	result
	f	Ldiy;	h	craftingStation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldis$a;	c	TYPE
	m	(Ljava/util/List;Ldiy;Ldiy;)V	<init>	<init>
	m	()Ldis$a;	a	type
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	ingredients
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	(Lcyd;Ldiy;)Z	a	lambda$isEnabled$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy	net/minecraft/world/item/crafting/display/SlotDisplay
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	()Ldiy$i;	a	type
	m	(Lcyd;)Z	a	isEnabled
	m	(Lbdp;)Ljava/util/List;	a	resolveForStacks
	m	(Lbdp;)Ldcv;	b	resolveForFirstStack
	m	()V	<clinit>	<clinit>
c	diy$a	net/minecraft/world/item/crafting/display/SlotDisplay$AnyFuel
	f	Ldiy$a;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	d	MAP_CODEC
	f	Lzm;	e	STREAM_CODEC
	f	Ldiy$i;	f	TYPE
	m	()V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	()V	<clinit>	<clinit>
c	diy$b	net/minecraft/world/item/crafting/display/SlotDisplay$Composite
	f	Ljava/util/List;	f	contents
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	contents
	m	(Lcyd;Ldiy;)Z	a	lambda$isEnabled$2
	m	(Lbdp;Ldiq;Ldiy;)Ljava/util/stream/Stream;	a	lambda$resolve$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy$c	net/minecraft/world/item/crafting/display/SlotDisplay$Empty
	f	Ldiy$c;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	d	MAP_CODEC
	f	Lzm;	e	STREAM_CODEC
	f	Ldiy$i;	f	TYPE
	m	()V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	()V	<clinit>	<clinit>
c	diy$d	net/minecraft/world/item/crafting/display/SlotDisplay$ItemSlotDisplay
	f	Ljl;	f	item
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Ldcr;)V	<init>	<init>
	m	(Ljl;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	item
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy$e	net/minecraft/world/item/crafting/display/SlotDisplay$ItemStackContentsFactory
	f	Ldiy$e;	a	INSTANCE
	m	()V	<init>	<init>
	m	(Ldcv;)Ldcv;	b	forStack
	m	(Ldcv;)Ljava/lang/Object;	a	forStack
	m	()V	<clinit>	<clinit>
c	diy$f	net/minecraft/world/item/crafting/display/SlotDisplay$ItemStackSlotDisplay
	f	Ldcv;	f	stack
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Ldcv;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	(Ljava/lang/Object;)Z	equals	equals
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	()Ldcv;	b	stack
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy$g	net/minecraft/world/item/crafting/display/SlotDisplay$SmithingTrimDemoSlotDisplay
	f	Ldiy;	f	base
	f	Ldiy;	g	material
	f	Ljl;	h	pattern
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Ldiy;Ldiy;Ljl;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	base
	m	()Ldiy;	c	material
	m	()Ljl;	d	pattern
	m	(Ldcv;)Z	a	lambda$resolve$2
	m	(Ljava/util/List;Lbck;Ljava/util/List;Ljn$a;)Ldcv;	a	lambda$resolve$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy$h	net/minecraft/world/item/crafting/display/SlotDisplay$TagSlotDisplay
	f	Lbae;	f	tag
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Lbae;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbae;	b	tag
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	lambda$resolve$2
	m	(Ldiq$b;Ljp$c;)Ljava/util/stream/Stream;	a	lambda$resolve$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diy$i	net/minecraft/world/item/crafting/display/SlotDisplay$Type
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	f	Lzm;	b	streamCodec
	m	(Lcom/mojang/serialization/MapCodec;Lzm;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
c	diy$j	net/minecraft/world/item/crafting/display/SlotDisplay$WithRemainder
	f	Ldiy;	f	input
	f	Ldiy;	g	remainder
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	f	Lzm;	d	STREAM_CODEC
	f	Ldiy$i;	e	TYPE
	m	(Ldiy;Ldiy;)V	<init>	<init>
	m	()Ldiy$i;	a	type
	m	(Lbdp;Ldiq;)Ljava/util/stream/Stream;	a	resolve
	m	(Lcyd;)Z	a	isEnabled
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	input
	m	()Ldiy;	c	remainder
	m	(Ldiq$a;Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;	a	lambda$resolve$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	diz	net/minecraft/world/item/crafting/display/SlotDisplayContext
	f	Lbdn;	a	FUEL_VALUES
	f	Lbdn;	b	REGISTRIES
	f	Lbdo;	c	CONTEXT
	m	()V	<init>	<init>
	m	(Ldmu;)Lbdp;	a	fromLevel
	m	()V	<clinit>	<clinit>
c	dja	net/minecraft/world/item/crafting/display/SlotDisplays
	m	()V	<init>	<init>
	m	(Ljy;)Ldiy$i;	a	bootstrap
c	djb	net/minecraft/world/item/crafting/display/SmithingRecipeDisplay
	f	Ldiy;	f	template
	f	Ldiy;	g	base
	f	Ldiy;	h	addition
	f	Ldiy;	i	result
	f	Ldiy;	j	craftingStation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldis$a;	c	TYPE
	m	(Ldiy;Ldiy;Ldiy;Ldiy;Ldiy;)V	<init>	<init>
	m	()Ldis$a;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	template
	m	()Ldiy;	c	base
	m	()Ldiy;	f	addition
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djc	net/minecraft/world/item/crafting/display/StonecutterRecipeDisplay
	f	Ldiy;	f	input
	f	Ldiy;	g	result
	f	Ldiy;	h	craftingStation
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldis$a;	c	TYPE
	m	(Ldiy;Ldiy;Ldiy;)V	<init>	<init>
	m	()Ldis$a;	a	type
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldiy;	b	input
	m	()Ldiy;	d	result
	m	()Ldiy;	e	craftingStation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djd	net/minecraft/world/item/crafting/display/package-info
c	dje	net/minecraft/world/item/crafting/package-info
c	djf	net/minecraft/world/item/enchantment/ConditionalEffect
	f	Ljava/lang/Object;	a	effect
	f	Ljava/util/Optional;	b	requirements
	m	(Ljava/lang/Object;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbdo;)Lcom/mojang/serialization/Codec;	a	conditionCodec
	m	(Lcom/mojang/serialization/Codec;Lbdo;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lfdj;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	effect
	m	()Ljava/util/Optional;	b	requirements
	m	(Lcom/mojang/serialization/Codec;Lbdo;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
	m	(Lbdo;Lfgs;)Lcom/mojang/serialization/DataResult;	a	lambda$conditionCodec$1
	m	(Lbci$a;)Ljava/lang/String;	a	lambda$conditionCodec$0
c	djg	net/minecraft/world/item/enchantment/Enchantable
	f	I	c	value
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djh	net/minecraft/world/item/enchantment/EnchantedItemInUse
	f	Ldcv;	a	itemStack
	f	Lbzw;	b	inSlot
	f	Lcam;	c	owner
	f	Ljava/util/function/Consumer;	d	onBreak
	m	(Ldcv;Lbzw;Lcam;)V	<init>	<init>
	m	(Ldcv;Lbzw;Lcam;Ljava/util/function/Consumer;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldcv;	a	itemStack
	m	()Lbzw;	b	inSlot
	m	()Lcam;	c	owner
	m	()Ljava/util/function/Consumer;	d	onBreak
	m	(Lcam;Lbzw;Ldcr;)V	a	lambda$new$0
c	dji	net/minecraft/world/item/enchantment/Enchantment
	f	Lxo;	e	description
	f	Ldji$c;	f	definition
	f	Ljp;	g	exclusiveSet
	f	Lkn;	h	effects
	f	I	a	MAX_LEVEL
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lxo;Ldji$c;Ljp;Lkn;)V	<init>	<init>
	m	(I)Ldji$b;	a	constantCost
	m	(II)Ldji$b;	a	dynamicCost
	m	(Ljp;Ljp;IILdji$b;Ldji$b;I[Lbzx;)Ldji$c;	a	definition
	m	(Ljp;IILdji$b;Ldji$b;I[Lbzx;)Ldji$c;	a	definition
	m	(Lcam;)Ljava/util/Map;	a	getSlotItems
	m	()Ljp;	a	getSupportedItems
	m	(Lbzw;)Z	a	matchingSlot
	m	(Ldcv;)Z	a	isPrimaryItem
	m	(Ldcv;)Z	b	isSupportedItem
	m	()I	b	getWeight
	m	()I	c	getAnvilCost
	m	()I	d	getMinLevel
	m	()I	e	getMaxLevel
	m	(I)I	b	getMinCost
	m	(I)I	c	getMaxCost
	m	()Ljava/lang/String;	toString	toString
	m	(Ljl;Ljl;)Z	a	areCompatible
	m	(Ljl;I)Lxo;	a	getFullname
	m	(Ldcv;)Z	c	canEnchant
	m	(Lkp;)Ljava/util/List;	a	getEffects
	m	(Laub;ILbzm;Lbyb;)Z	a	isImmuneToDamage
	m	(Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDamageProtection
	m	(Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDurabilityChange
	m	(Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyAmmoCount
	m	(Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyPiercingCount
	m	(Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyBlockExperience
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyMobExperience
	m	(Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyDurabilityToRepairFromXp
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyTridentReturnToOwnerAcceleration
	m	(Lbck;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyTridentSpinAttackStrength
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyFishingTimeReduction
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyFishingLuckBonus
	m	(Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyDamage
	m	(Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	c	modifyFallBasedDamage
	m	(Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	d	modifyKnockback
	m	(Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyArmorEffectivness
	m	(Laub;ILdjh;Ldjm;Lbzm;Lbyb;)V	a	doPostAttack
	m	(Ldjr;Laub;ILdjh;Lbzm;Lbyb;)V	a	doPostAttack
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	e	modifyProjectileCount
	m	(Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	f	modifyProjectileSpread
	m	(Lbck;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	b	modifyCrossbowChargeTime
	m	(Lkp;Lbck;ILorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyUnfilteredValue
	m	(Laub;ILdjh;Lbzm;)V	a	tick
	m	(Laub;ILdjh;Lbzm;)V	b	onProjectileSpawned
	m	(Laub;ILdjh;Lbzm;Lfis;Leeb;)V	a	onHitBlock
	m	(Lkp;Laub;ILdcv;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyItemFilteredCount
	m	(Lkp;Laub;ILdcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyEntityFilteredValue
	m	(Lkp;Laub;ILdcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;)V	a	modifyDamageFilteredValue
	m	(Laub;ILbzm;Lbyb;)Lfdj;	b	damageContext
	m	(Laub;ILdcv;)Lfdj;	a	itemContext
	m	(Laub;ILbzm;Z)Lfdj;	a	locationContext
	m	(Laub;ILbzm;Lfis;)Lfdj;	a	entityContext
	m	(Laub;ILbzm;Lfis;Leeb;)Lfdj;	a	blockHitContext
	m	(Ljava/util/List;Lfdj;Ljava/util/function/Consumer;)V	a	applyEffects
	m	(Laub;ILdjh;Lcam;)V	a	runLocationChangedEffects
	m	(ILdjh;Lcam;)V	a	stopLocationBasedEffects
	m	(Ldji$c;)Ldji$a;	a	enchantment
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lxo;	f	description
	m	()Ldji$c;	g	definition
	m	()Ljp;	h	exclusiveSet
	m	()Lkn;	i	effects
	m	(Ldjh;Lcam;ILdka;)V	a	lambda$runLocationChangedEffects$8
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILbzm;Ldkb;)V	a	lambda$modifyDamageFilteredValue$7
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILbzm;Ldkb;)V	b	lambda$modifyEntityFilteredValue$6
	m	(Lorg/apache/commons/lang3/mutable/MutableFloat;ILaub;Ldkb;)V	a	lambda$modifyItemFilteredCount$5
	m	(Laub;ILdjh;Lbzm;Lfis;Ldjz;)V	a	lambda$onHitBlock$4
	m	(Laub;ILdjh;Lbzm;Ldjz;)V	a	lambda$onProjectileSpawned$3
	m	(Laub;ILdjh;Lbzm;Ldjz;)V	b	lambda$tick$2
	m	(Lbzw;Lbzx;)Z	a	lambda$matchingSlot$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dji$1	net/minecraft/world/item/enchantment/Enchantment$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$enchantment$EnchantmentTarget
	m	()V	<clinit>	<clinit>
c	dji$a	net/minecraft/world/item/enchantment/Enchantment$Builder
	f	Ldji$c;	a	definition
	f	Ljp;	b	exclusiveSet
	f	Ljava/util/Map;	c	effectLists
	f	Lkn$a;	d	effectMapBuilder
	m	(Ldji$c;)V	<init>	<init>
	m	(Ljp;)Ldji$a;	a	exclusiveWith
	m	(Lkp;Ljava/lang/Object;Lfgs$a;)Ldji$a;	a	withEffect
	m	(Lkp;Ljava/lang/Object;)Ldji$a;	a	withEffect
	m	(Lkp;Ldjm;Ldjm;Ljava/lang/Object;Lfgs$a;)Ldji$a;	a	withEffect
	m	(Lkp;Ldjm;Ldjm;Ljava/lang/Object;)Ldji$a;	a	withEffect
	m	(Lkp;Ldjy;)Ldji$a;	a	withEffect
	m	(Lkp;Ljava/lang/Object;)Ldji$a;	b	withSpecialEffect
	m	(Lkp;)Ldji$a;	a	withEffect
	m	(Lkp;)Ljava/util/List;	b	getEffectsList
	m	(Lame;)Ldji;	a	build
	m	(Lkp;Lkp;)Ljava/util/List;	a	lambda$getEffectsList$0
c	dji$b	net/minecraft/world/item/enchantment/Enchantment$Cost
	f	I	b	base
	f	I	c	perLevelAboveFirst
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(II)V	<init>	<init>
	m	(I)I	a	calculate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	base
	m	()I	b	perLevelAboveFirst
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dji$c	net/minecraft/world/item/enchantment/Enchantment$EnchantmentDefinition
	f	Ljp;	b	supportedItems
	f	Ljava/util/Optional;	c	primaryItems
	f	I	d	weight
	f	I	e	maxLevel
	f	Ldji$b;	f	minCost
	f	Ldji$b;	g	maxCost
	f	I	h	anvilCost
	f	Ljava/util/List;	i	slots
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljp;Ljava/util/Optional;IILdji$b;Ldji$b;ILjava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	supportedItems
	m	()Ljava/util/Optional;	b	primaryItems
	m	()I	c	weight
	m	()I	d	maxLevel
	m	()Ldji$b;	e	minCost
	m	()Ldji$b;	f	maxCost
	m	()I	g	anvilCost
	m	()Ljava/util/List;	h	slots
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djj	net/minecraft/world/item/enchantment/EnchantmentEffectComponents
	f	Lcom/mojang/serialization/Codec;	a	COMPONENT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lkp;	c	DAMAGE_PROTECTION
	f	Lkp;	d	DAMAGE_IMMUNITY
	f	Lkp;	e	DAMAGE
	f	Lkp;	f	SMASH_DAMAGE_PER_FALLEN_BLOCK
	f	Lkp;	g	KNOCKBACK
	f	Lkp;	h	ARMOR_EFFECTIVENESS
	f	Lkp;	i	POST_ATTACK
	f	Lkp;	j	HIT_BLOCK
	f	Lkp;	k	ITEM_DAMAGE
	f	Lkp;	l	ATTRIBUTES
	f	Lkp;	m	EQUIPMENT_DROPS
	f	Lkp;	n	LOCATION_CHANGED
	f	Lkp;	o	TICK
	f	Lkp;	p	AMMO_USE
	f	Lkp;	q	PROJECTILE_PIERCING
	f	Lkp;	r	PROJECTILE_SPAWNED
	f	Lkp;	s	PROJECTILE_SPREAD
	f	Lkp;	t	PROJECTILE_COUNT
	f	Lkp;	u	TRIDENT_RETURN_ACCELERATION
	f	Lkp;	v	FISHING_TIME_REDUCTION
	f	Lkp;	w	FISHING_LUCK_BONUS
	f	Lkp;	x	BLOCK_EXPERIENCE
	f	Lkp;	y	MOB_EXPERIENCE
	f	Lkp;	z	REPAIR_WITH_XP
	f	Lkp;	A	CROSSBOW_CHARGE_TIME
	f	Lkp;	B	CROSSBOW_CHARGING_SOUNDS
	f	Lkp;	C	TRIDENT_SOUND
	f	Lkp;	D	PREVENT_EQUIPMENT_DROP
	f	Lkp;	E	PREVENT_ARMOR_CHANGE
	f	Lkp;	F	TRIDENT_SPIN_ATTACK_STRENGTH
	m	(Ljy;)Lkp;	a	bootstrap
	m	(Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lkp;	a	register
	m	(Lkp$a;)Lkp$a;	a	lambda$static$30
	m	(Lkp$a;)Lkp$a;	b	lambda$static$29
	m	(Lkp$a;)Lkp$a;	c	lambda$static$28
	m	(Lkp$a;)Lkp$a;	d	lambda$static$27
	m	(Lkp$a;)Lkp$a;	e	lambda$static$26
	m	(Lkp$a;)Lkp$a;	f	lambda$static$25
	m	(Lkp$a;)Lkp$a;	g	lambda$static$24
	m	(Lkp$a;)Lkp$a;	h	lambda$static$23
	m	(Lkp$a;)Lkp$a;	i	lambda$static$22
	m	(Lkp$a;)Lkp$a;	j	lambda$static$21
	m	(Lkp$a;)Lkp$a;	k	lambda$static$20
	m	(Lkp$a;)Lkp$a;	l	lambda$static$19
	m	(Lkp$a;)Lkp$a;	m	lambda$static$18
	m	(Lkp$a;)Lkp$a;	n	lambda$static$17
	m	(Lkp$a;)Lkp$a;	o	lambda$static$16
	m	(Lkp$a;)Lkp$a;	p	lambda$static$15
	m	(Lkp$a;)Lkp$a;	q	lambda$static$14
	m	(Lkp$a;)Lkp$a;	r	lambda$static$13
	m	(Lkp$a;)Lkp$a;	s	lambda$static$12
	m	(Lkp$a;)Lkp$a;	t	lambda$static$11
	m	(Lkp$a;)Lkp$a;	u	lambda$static$10
	m	(Lkp$a;)Lkp$a;	v	lambda$static$9
	m	(Lkp$a;)Lkp$a;	w	lambda$static$8
	m	(Lkp$a;)Lkp$a;	x	lambda$static$7
	m	(Lkp$a;)Lkp$a;	y	lambda$static$6
	m	(Lkp$a;)Lkp$a;	z	lambda$static$5
	m	(Lkp$a;)Lkp$a;	A	lambda$static$4
	m	(Lkp$a;)Lkp$a;	B	lambda$static$3
	m	(Lkp$a;)Lkp$a;	C	lambda$static$2
	m	(Lkp$a;)Lkp$a;	D	lambda$static$1
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djk	net/minecraft/world/item/enchantment/EnchantmentHelper
	m	()V	<init>	<init>
	m	(Ljl;Ldcv;)I	a	getItemEnchantmentLevel
	m	(Ldcv;Ljava/util/function/Consumer;)Ldjo;	a	updateEnchantments
	m	(Ldcv;)Z	a	canStoreEnchantments
	m	(Ldcv;Ldjo;)V	a	setEnchantments
	m	(Ldcv;)Ldjo;	b	getEnchantmentsForCrafting
	m	(Ldcv;)Lkp;	d	getComponentType
	m	(Ldcv;)Z	c	hasAnyEnchantments
	m	(Laub;Ldcv;I)I	a	processDurabilityChange
	m	(Laub;Ldcv;Ldcv;I)I	a	processAmmoUse
	m	(Laub;Ldcv;I)I	b	processBlockExperience
	m	(Laub;Lbzm;Lbzm;I)I	a	processMobExperience
	m	(Ldjl;)Ldcv;	a	createBook
	m	(Ldcv;Ldjk$b;)V	a	runIterationOnItem
	m	(Ldcv;Lbzw;Lcam;Ldjk$a;)V	a	runIterationOnItem
	m	(Lcam;Ldjk$a;)V	a	runIterationOnEquipment
	m	(Laub;Lcam;Lbyb;)Z	a	isImmuneToDamage
	m	(Laub;Lcam;Lbyb;)F	b	getDamageProtection
	m	(Laub;Ldcv;Lbzm;Lbyb;F)F	a	modifyDamage
	m	(Laub;Ldcv;Lbzm;Lbyb;F)F	b	modifyFallBasedDamage
	m	(Laub;Ldcv;Lbzm;Lbyb;F)F	c	modifyArmorEffectiveness
	m	(Laub;Ldcv;Lbzm;Lbyb;F)F	d	modifyKnockback
	m	(Laub;Lbzm;Lbyb;)V	a	doPostAttackEffects
	m	(Laub;Lbzm;Lbyb;Ldcv;)V	a	doPostAttackEffectsWithItemSource
	m	(Laub;Lbzm;Lbyb;Ldcv;Ljava/util/function/Consumer;)V	a	doPostAttackEffectsWithItemSourceOnBreak
	m	(Laub;Lcam;)V	a	runLocationChangedEffects
	m	(Laub;Ldcv;Lcam;Lbzw;)V	a	runLocationChangedEffects
	m	(Lcam;)V	a	stopLocationBasedEffects
	m	(Ldcv;Lcam;Lbzw;)V	a	stopLocationBasedEffects
	m	(Laub;Lcam;)V	b	tickEffects
	m	(Ljl;Lcam;)I	a	getEnchantmentLevel
	m	(Laub;Ldcv;Lbzm;I)I	a	processProjectileCount
	m	(Laub;Ldcv;Lbzm;F)F	a	processProjectileSpread
	m	(Laub;Ldcv;Ldcv;)I	a	getPiercingCount
	m	(Laub;Ldcv;Lcvo;Ljava/util/function/Consumer;)V	a	onProjectileSpawned
	m	(Laub;Ldcv;Lcam;Lbzm;Lbzw;Lfis;Leeb;Ljava/util/function/Consumer;)V	a	onHitBlock
	m	(Laub;Ldcv;I)I	c	modifyDurabilityToRepairFromXp
	m	(Laub;Lcam;Lbyb;F)F	a	processEquipmentDropChance
	m	(Ldcv;Lbzx;Ljava/util/function/BiConsumer;)V	a	forEachModifier
	m	(Ldcv;Lbzw;Ljava/util/function/BiConsumer;)V	a	forEachModifier
	m	(Laub;Ldcv;Lbzm;)I	a	getFishingLuckBonus
	m	(Laub;Ldcv;Lbzm;)F	b	getFishingTimeReduction
	m	(Laub;Ldcv;Lbzm;)I	c	getTridentReturnToOwnerAcceleration
	m	(Ldcv;Lcam;F)F	a	modifyCrossbowChargingTime
	m	(Ldcv;Lcam;)F	a	getTridentSpinAttackStrength
	m	(Ldcv;Lbae;)Z	a	hasTag
	m	(Ldcv;Lkp;)Z	a	has
	m	(Ldcv;Lkp;)Ljava/util/Optional;	b	pickHighestLevel
	m	(Ldcv;Lkp;)Lcom/mojang/datafixers/util/Pair;	c	getHighestLevel
	m	(Lkp;Lcam;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	getRandomItemWith
	m	(Lbck;IILdcv;)I	a	getEnchantmentCost
	m	(Lbck;Ldcv;ILjz;Ljava/util/Optional;)Ldcv;	a	enchantItem
	m	(Lbck;Ldcv;ILjava/util/stream/Stream;)Ldcv;	a	enchantItem
	m	(Lbck;Ldcv;ILjava/util/stream/Stream;)Ljava/util/List;	b	selectEnchantment
	m	(Ljava/util/List;Ldjl;)V	a	filterCompatibleEnchantments
	m	(Ljava/util/Collection;Ljl;)Z	a	isEnchantmentCompatible
	m	(ILdcv;Ljava/util/stream/Stream;)Ljava/util/List;	a	getAvailableEnchantmentResults
	m	(Ldcv;Ljz;Lamd;Lbxh;Lbck;)V	a	enchantItemFromProvider
	m	(Ldkq;Ldcv;Lbck;Lbxh;Ldjo$a;)V	a	lambda$enchantItemFromProvider$44
	m	(ILjava/util/List;Ljl;)V	a	lambda$getAvailableEnchantmentResults$43
	m	(Ldcv;ZLjl;)Z	a	lambda$getAvailableEnchantmentResults$42
	m	(Ldjl;Ldjl;)Z	a	lambda$filterCompatibleEnchantments$41
	m	(Ljz;)Ljava/util/stream/Stream;	a	lambda$enchantItem$40
	m	(Ljl$c;)Ljl;	a	lambda$enchantItem$39
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Lkp;Ljl;I)V	a	lambda$getHighestLevel$38
	m	(Lkp;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljl;I)V	a	lambda$has$37
	m	(Lcam;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	a	lambda$getTridentSpinAttackStrength$36
	m	(Lcam;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	b	lambda$modifyCrossbowChargingTime$35
	m	(Laub;Ldcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	a	lambda$getTridentReturnToOwnerAcceleration$34
	m	(Laub;Ldcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	b	lambda$getFishingTimeReduction$33
	m	(Laub;Ldcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	c	lambda$getFishingLuckBonus$32
	m	(Lbzw;Ljava/util/function/BiConsumer;Ljl;I)V	a	lambda$forEachModifier$31
	m	(Ljl;Lbzw;Ljava/util/function/BiConsumer;ILdjy;)V	a	lambda$forEachModifier$30
	m	(Lbzx;Ljava/util/function/BiConsumer;Ljl;I)V	a	lambda$forEachModifier$29
	m	(Ljl;Lbzx;Ljava/util/function/BiConsumer;ILdjy;)V	a	lambda$forEachModifier$28
	m	(Laub;Lcam;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Lbck;Ljl;ILdjh;)V	a	lambda$processEquipmentDropChance$27
	m	(Lfdj;Lorg/apache/commons/lang3/mutable/MutableFloat;ILbck;Ldjr;)V	a	lambda$processEquipmentDropChance$26
	m	(Laub;Lcam;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Lbck;Ljl;ILdjh;)V	b	lambda$processEquipmentDropChance$25
	m	(Lfdj;Lorg/apache/commons/lang3/mutable/MutableFloat;ILbck;Ldjr;)V	b	lambda$processEquipmentDropChance$24
	m	(Laub;Ldcv;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	a	lambda$modifyDurabilityToRepairFromXp$23
	m	(Laub;Ldjh;Lbzm;Lfis;Leeb;Ljl;I)V	a	lambda$onHitBlock$22
	m	(Laub;Ldjh;Lcvo;Ljl;I)V	a	lambda$onProjectileSpawned$21
	m	(Laub;Ldcv;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	b	lambda$getPiercingCount$20
	m	(Laub;Ldcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	d	lambda$processProjectileSpread$19
	m	(Laub;Ldcv;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	e	lambda$processProjectileCount$18
	m	(Laub;Lcam;Ljl;ILdjh;)V	a	lambda$tickEffects$17
	m	(Lcam;Ljl;ILdjh;)V	a	lambda$stopLocationBasedEffects$16
	m	(Lcam;Ljl;ILdjh;)V	b	lambda$stopLocationBasedEffects$15
	m	(Laub;Lcam;Ljl;ILdjh;)V	b	lambda$runLocationChangedEffects$14
	m	(Laub;Lcam;Ljl;ILdjh;)V	c	lambda$runLocationChangedEffects$13
	m	(Laub;Ldjh;Lbzm;Lbyb;Ljl;I)V	a	lambda$doPostAttackEffectsWithItemSourceOnBreak$12
	m	(Laub;Lbzm;Lbyb;Ljl;ILdjh;)V	a	lambda$doPostAttackEffectsWithItemSourceOnBreak$11
	m	(Laub;Lbzm;Lbyb;Ljl;ILdjh;)V	b	lambda$doPostAttackEffectsWithItemSourceOnBreak$10
	m	(Laub;Ldcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	a	lambda$modifyKnockback$9
	m	(Laub;Ldcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	b	lambda$modifyArmorEffectiveness$8
	m	(Laub;Ldcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	c	lambda$modifyFallBasedDamage$7
	m	(Laub;Ldcv;Lbzm;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	d	lambda$modifyDamage$6
	m	(Laub;Lcam;Lbyb;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;ILdjh;)V	a	lambda$getDamageProtection$5
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Laub;Lcam;Lbyb;Ljl;ILdjh;)V	a	lambda$isImmuneToDamage$4
	m	(Laub;Lbzm;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;ILdjh;)V	a	lambda$processMobExperience$3
	m	(Laub;Ldcv;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	c	lambda$processBlockExperience$2
	m	(Laub;Ldcv;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	d	lambda$processAmmoUse$1
	m	(Laub;Ldcv;Lorg/apache/commons/lang3/mutable/MutableFloat;Ljl;I)V	e	lambda$processDurabilityChange$0
c	djk$a	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentInSlotVisitor
	m	(Ljl;ILdjh;)V	accept	accept
c	djk$b	net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor
	m	(Ljl;I)V	accept	accept
c	djl	net/minecraft/world/item/enchantment/EnchantmentInstance
	f	Ljl;	a	enchantment
	f	I	b	level
	m	(Ljl;I)V	<init>	<init>
	m	()I	a	weight
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	enchantment
	m	()I	c	level
c	djm	net/minecraft/world/item/enchantment/EnchantmentTarget
	f	Ldjm;	a	ATTACKER
	f	Ldjm;	b	DAMAGING_ENTITY
	f	Ldjm;	c	VICTIM
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	id
	f	[Ldjm;	f	$VALUES
	m	()[Ldjm;	values	values
	m	(Ljava/lang/String;)Ldjm;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldjm;	a	$values
	m	()V	<clinit>	<clinit>
c	djn	net/minecraft/world/item/enchantment/Enchantments
	f	Lamd;	a	PROTECTION
	f	Lamd;	b	FIRE_PROTECTION
	f	Lamd;	c	FEATHER_FALLING
	f	Lamd;	d	BLAST_PROTECTION
	f	Lamd;	e	PROJECTILE_PROTECTION
	f	Lamd;	f	RESPIRATION
	f	Lamd;	g	AQUA_AFFINITY
	f	Lamd;	h	THORNS
	f	Lamd;	i	DEPTH_STRIDER
	f	Lamd;	j	FROST_WALKER
	f	Lamd;	k	BINDING_CURSE
	f	Lamd;	l	SOUL_SPEED
	f	Lamd;	m	SWIFT_SNEAK
	f	Lamd;	n	SHARPNESS
	f	Lamd;	o	SMITE
	f	Lamd;	p	BANE_OF_ARTHROPODS
	f	Lamd;	q	KNOCKBACK
	f	Lamd;	r	FIRE_ASPECT
	f	Lamd;	s	LOOTING
	f	Lamd;	t	SWEEPING_EDGE
	f	Lamd;	u	EFFICIENCY
	f	Lamd;	v	SILK_TOUCH
	f	Lamd;	w	UNBREAKING
	f	Lamd;	x	FORTUNE
	f	Lamd;	y	POWER
	f	Lamd;	z	PUNCH
	f	Lamd;	A	FLAME
	f	Lamd;	B	INFINITY
	f	Lamd;	C	LUCK_OF_THE_SEA
	f	Lamd;	D	LURE
	f	Lamd;	E	LOYALTY
	f	Lamd;	F	IMPALING
	f	Lamd;	G	RIPTIDE
	f	Lamd;	H	CHANNELING
	f	Lamd;	I	MULTISHOT
	f	Lamd;	J	QUICK_CHARGE
	f	Lamd;	K	PIERCING
	f	Lamd;	L	DENSITY
	f	Lamd;	M	BREACH
	f	Lamd;	N	WIND_BURST
	f	Lamd;	O	MENDING
	f	Lamd;	P	VANISHING_CURSE
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;Ldji$a;)V	a	register
	m	(Ljava/lang/String;)Lamd;	a	key
	m	()V	<clinit>	<clinit>
c	djo	net/minecraft/world/item/enchantment/ItemEnchantments
	f	Ldjo;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	LEVEL_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	e	enchantments
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;)V	<init>	<init>
	m	(Ljl;)I	a	getLevel
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljn$a;Lamd;Lbae;)Ljp;	a	getTagOrEmpty
	m	()Ljava/util/Set;	a	keySet
	m	()Ljava/util/Set;	b	entrySet
	m	()I	c	size
	m	()Z	d	isEmpty
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Ldjo;)Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	a	lambda$static$2
	m	(Ldjo;)Ljava/util/Map;	b	lambda$static$1
	m	(Ljava/util/Map;)Ldjo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djo$a	net/minecraft/world/item/enchantment/ItemEnchantments$Mutable
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	a	enchantments
	m	(Ldjo;)V	<init>	<init>
	m	(Ljl;I)V	a	set
	m	(Ljl;I)V	b	upgrade
	m	(Ljava/util/function/Predicate;)V	a	removeIf
	m	(Ljl;)I	a	getLevel
	m	()Ljava/util/Set;	a	keySet
	m	()Ldjo;	b	toImmutable
c	djp	net/minecraft/world/item/enchantment/LevelBasedValue
	f	Lcom/mojang/serialization/Codec;	a	DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(F)Ldjp$b;	a	constant
	m	(FF)Ldjp$e;	a	perLevel
	m	(F)Ldjp$e;	b	perLevel
	m	(Ljava/util/List;Ldjp;)Ldjp$f;	a	lookup
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldjp;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Ldjp;	a	lambda$static$3
	m	(Ldjp;)Ldjp;	b	lambda$static$2
	m	(Ldjp$b;)Ldjp;	a	lambda$static$1
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$a	net/minecraft/world/item/enchantment/LevelBasedValue$Clamped
	f	Ldjp;	d	value
	f	F	e	min
	f	F	f	max
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ldjp;FF)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	value
	m	()F	c	min
	m	()F	d	max
	m	(Ldjp$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Ldjp$a;)Ljava/lang/String;	b	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$b	net/minecraft/world/item/enchantment/LevelBasedValue$Constant
	f	F	e	value
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	TYPED_CODEC
	m	(F)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$c	net/minecraft/world/item/enchantment/LevelBasedValue$Fraction
	f	Ldjp;	d	numerator
	f	Ldjp;	e	denominator
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ldjp;Ldjp;)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	numerator
	m	()Ldjp;	c	denominator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$d	net/minecraft/world/item/enchantment/LevelBasedValue$LevelsSquared
	f	F	d	added
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(F)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	added
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$e	net/minecraft/world/item/enchantment/LevelBasedValue$Linear
	f	F	d	base
	f	F	e	perLevelAboveFirst
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(FF)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	b	base
	m	()F	c	perLevelAboveFirst
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djp$f	net/minecraft/world/item/enchantment/LevelBasedValue$Lookup
	f	Ljava/util/List;	d	values
	f	Ldjp;	e	fallback
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ljava/util/List;Ldjp;)V	<init>	<init>
	m	(I)F	a	calculate
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	values
	m	()Ldjp;	c	fallback
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djq	net/minecraft/world/item/enchantment/Repairable
	f	Ljp;	c	items
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljp;)V	<init>	<init>
	m	(Ldcv;)Z	a	isValidRepairItem
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	items
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djr	net/minecraft/world/item/enchantment/TargetedConditionalEffect
	f	Ldjm;	a	enchanted
	f	Ldjm;	b	affected
	f	Ljava/lang/Object;	c	effect
	f	Ljava/util/Optional;	d	requirements
	m	(Ldjm;Ldjm;Ljava/lang/Object;Ljava/util/Optional;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Lbdo;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Lcom/mojang/serialization/Codec;Lbdo;)Lcom/mojang/serialization/Codec;	b	equipmentDropsCodec
	m	(Lfdj;)Z	a	matches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjm;	a	enchanted
	m	()Ldjm;	b	affected
	m	()Ljava/lang/Object;	c	effect
	m	()Ljava/util/Optional;	d	requirements
	m	(Lcom/mojang/serialization/Codec;Lbdo;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$equipmentDropsCodec$4
	m	(Ldjm;Ljava/lang/Object;Ljava/util/Optional;)Ldjr;	a	lambda$equipmentDropsCodec$3
	m	(Ldjm;)Lcom/mojang/serialization/DataResult;	a	lambda$equipmentDropsCodec$2
	m	()Ljava/lang/String;	e	lambda$equipmentDropsCodec$1
	m	(Lcom/mojang/serialization/Codec;Lbdo;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$codec$0
c	djs	net/minecraft/world/item/enchantment/effects/AddValue
	f	Ldjp;	c	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djt	net/minecraft/world/item/enchantment/effects/AllOf
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	([Ldjz;)Ldjt$a;	a	entityEffects
	m	([Ldka;)Ldjt$b;	a	locationBasedEffects
	m	([Ldkb;)Ldjt$c;	a	valueEffects
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	djt$a	net/minecraft/world/item/enchantment/effects/AllOf$EntityEffects
	f	Ljava/util/List;	d	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	effects
	m	()V	<clinit>	<clinit>
c	djt$b	net/minecraft/world/item/enchantment/effects/AllOf$LocationBasedEffects
	f	Ljava/util/List;	b	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;Z)V	a	onChangedBlock
	m	(Ldjh;Lbzm;Lfis;I)V	a	onDeactivated
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	effects
	m	()V	<clinit>	<clinit>
c	djt$c	net/minecraft/world/item/enchantment/effects/AllOf$ValueEffects
	f	Ljava/util/List;	c	effects
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	effects
	m	()V	<clinit>	<clinit>
c	dju	net/minecraft/world/item/enchantment/effects/ApplyMobEffect
	f	Ljp;	d	toApply
	f	Ldjp;	e	minDuration
	f	Ldjp;	f	maxDuration
	f	Ldjp;	g	minAmplifier
	f	Ldjp;	h	maxAmplifier
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljp;Ldjp;Ldjp;Ldjp;Ldjp;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	toApply
	m	()Ldjp;	c	minDuration
	m	()Ldjp;	d	maxDuration
	m	()Ldjp;	e	minAmplifier
	m	()Ldjp;	f	maxAmplifier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djv	net/minecraft/world/item/enchantment/effects/ChangeItemDamage
	f	Ldjp;	d	amount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	amount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldjv;)Ldjp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djw	net/minecraft/world/item/enchantment/effects/DamageEntity
	f	Ldjp;	d	minDamage
	f	Ldjp;	e	maxDamage
	f	Ljl;	f	damageType
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;Ldjp;Ljl;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	minDamage
	m	()Ldjp;	c	maxDamage
	m	()Ljl;	d	damageType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djx	net/minecraft/world/item/enchantment/effects/DamageImmunity
	f	Ldjx;	a	INSTANCE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjx;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djy	net/minecraft/world/item/enchantment/effects/EnchantmentAttributeEffect
	f	Lame;	b	id
	f	Ljl;	d	attribute
	f	Ldjp;	e	amount
	f	Lcbq$a;	f	operation
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;Ljl;Ldjp;Lcbq$a;)V	<init>	<init>
	m	(Lbda;)Lame;	a	idForSlot
	m	(ILbda;)Lcbq;	a	getModifier
	m	(Laub;ILdjh;Lbzm;Lfis;Z)V	a	onChangedBlock
	m	(Ldjh;Lbzm;Lfis;I)V	a	onDeactivated
	m	(ILbzw;)Lcom/google/common/collect/HashMultimap;	a	makeAttributeMap
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	()Ljl;	c	attribute
	m	()Ldjp;	d	amount
	m	()Lcbq$a;	e	operation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	djz	net/minecraft/world/item/enchantment/effects/EnchantmentEntityEffect
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	(Laub;ILdjh;Lbzm;Lfis;Z)V	a	onChangedBlock
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dka	net/minecraft/world/item/enchantment/effects/EnchantmentLocationBasedEffect
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	b	bootstrap
	m	(Laub;ILdjh;Lbzm;Lfis;Z)V	a	onChangedBlock
	m	(Ldjh;Lbzm;Lfis;I)V	a	onDeactivated
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dkb	net/minecraft/world/item/enchantment/effects/EnchantmentValueEffect
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dkc	net/minecraft/world/item/enchantment/effects/ExplodeEffect
	f	Z	d	attributeToUser
	f	Ljava/util/Optional;	e	damageType
	f	Ljava/util/Optional;	f	knockbackMultiplier
	f	Ljava/util/Optional;	g	immuneBlocks
	f	Lfis;	h	offset
	f	Ldjp;	i	radius
	f	Z	j	createFire
	f	Ldmu$a;	k	blockInteraction
	f	Lmc;	l	smallParticle
	f	Lmc;	m	largeParticle
	f	Ljl;	n	sound
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(ZLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Lfis;Ldjp;ZLdmu$a;Lmc;Lmc;Ljl;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	(Lbzm;Lfis;)Lbyb;	a	getDamageSource
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	b	attributeToUser
	m	()Ljava/util/Optional;	c	damageType
	m	()Ljava/util/Optional;	d	knockbackMultiplier
	m	()Ljava/util/Optional;	e	immuneBlocks
	m	()Lfis;	f	offset
	m	()Ldjp;	g	radius
	m	()Z	h	createFire
	m	()Ldmu$a;	i	blockInteraction
	m	()Lmc;	j	smallParticle
	m	()Lmc;	k	largeParticle
	m	()Ljl;	l	sound
	m	(ILdjp;)Ljava/lang/Float;	a	lambda$apply$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkd	net/minecraft/world/item/enchantment/effects/Ignite
	f	Ldjp;	d	duration
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	duration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldkd;)Ldjp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dke	net/minecraft/world/item/enchantment/effects/MultiplyValue
	f	Ldjp;	c	factor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	factor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkf	net/minecraft/world/item/enchantment/effects/PlaySoundEffect
	f	Ljl;	d	soundEvent
	f	Lbwm;	e	volume
	f	Lbwm;	f	pitch
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljl;Lbwm;Lbwm;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	soundEvent
	m	()Lbwm;	c	volume
	m	()Lbwm;	d	pitch
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkg	net/minecraft/world/item/enchantment/effects/RemoveBinomial
	f	Ldjp;	c	chance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	chance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkh	net/minecraft/world/item/enchantment/effects/ReplaceBlock
	f	Lkg;	d	offset
	f	Ljava/util/Optional;	e	predicate
	f	Lern;	f	blockState
	f	Ljava/util/Optional;	g	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;Ljava/util/Optional;Lern;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkg;	b	offset
	m	()Ljava/util/Optional;	c	predicate
	m	()Lern;	d	blockState
	m	()Ljava/util/Optional;	e	triggerGameEvent
	m	(Laub;Lbzm;Ljb;Ljl;)V	a	lambda$apply$2
	m	(Laub;Ljb;Lelh;)Ljava/lang/Boolean;	a	lambda$apply$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dki	net/minecraft/world/item/enchantment/effects/ReplaceDisk
	f	Ldjp;	d	radius
	f	Ldjp;	e	height
	f	Lkg;	f	offset
	f	Ljava/util/Optional;	g	predicate
	f	Lern;	h	blockState
	f	Ljava/util/Optional;	i	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;Ldjp;Lkg;Ljava/util/Optional;Lern;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	radius
	m	()Ldjp;	c	height
	m	()Lkg;	d	offset
	m	()Ljava/util/Optional;	e	predicate
	m	()Lern;	f	blockState
	m	()Ljava/util/Optional;	g	triggerGameEvent
	m	(Laub;Lbzm;Ljb;Ljl;)V	a	lambda$apply$2
	m	(Laub;Ljb;Lelh;)Ljava/lang/Boolean;	a	lambda$apply$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkj	net/minecraft/world/item/enchantment/effects/RunFunction
	f	Lame;	d	function
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	function
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkk	net/minecraft/world/item/enchantment/effects/SetBlockProperties
	f	Ldev;	d	properties
	f	Lkg;	e	offset
	f	Ljava/util/Optional;	f	triggerGameEvent
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldev;)V	<init>	<init>
	m	(Ldev;Lkg;Ljava/util/Optional;)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldev;	b	properties
	m	()Lkg;	c	offset
	m	()Ljava/util/Optional;	d	triggerGameEvent
	m	(Laub;Lbzm;Ljb;Ljl;)V	a	lambda$apply$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkl	net/minecraft/world/item/enchantment/effects/SetValue
	f	Ldjp;	c	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(ILbck;F)F	a	process
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	b	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkm	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect
	f	Lmc;	d	particle
	f	Ldkm$a;	e	horizontalPosition
	f	Ldkm$a;	f	verticalPosition
	f	Ldkm$c;	g	horizontalVelocity
	f	Ldkm$c;	h	verticalVelocity
	f	Lbwm;	i	speed
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lmc;Ldkm$a;Ldkm$a;Ldkm$c;Ldkm$c;Lbwm;)V	<init>	<init>
	m	(F)Ldkm$a;	a	offsetFromEntityPosition
	m	()Ldkm$a;	b	inBoundingBox
	m	(F)Ldkm$c;	b	movementScaled
	m	(Lbwm;)Ldkm$c;	a	fixedVelocity
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lmc;	c	particle
	m	()Ldkm$a;	d	horizontalPosition
	m	()Ldkm$a;	e	verticalPosition
	m	()Ldkm$c;	f	horizontalVelocity
	m	()Ldkm$c;	g	verticalVelocity
	m	()Lbwm;	h	speed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkm$a	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$PositionSource
	f	Ldkm$b;	b	type
	f	F	c	offset
	f	F	d	scale
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldkm$b;FF)V	<init>	<init>
	m	(DDFLbck;)D	a	getCoordinate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldkm$b;	a	type
	m	()F	b	offset
	m	()F	c	scale
	m	(Ldkm$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	d	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkm$b	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$PositionSourceType
	f	Ldkm$b;	a	ENTITY_POSITION
	f	Ldkm$b;	b	BOUNDING_BOX
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	Ldkm$b$a;	e	source
	f	[Ldkm$b;	f	$VALUES
	m	()[Ldkm$b;	values	values
	m	(Ljava/lang/String;)Ldkm$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ldkm$b$a;)V	<init>	<init>
	m	(DDFLbck;)D	a	getCoordinate
	m	()Ljava/lang/String;	c	getSerializedName
	m	(DDFLbck;)D	b	lambda$static$1
	m	(DDFLbck;)D	c	lambda$static$0
	m	()[Ldkm$b;	a	$values
	m	()V	<clinit>	<clinit>
c	dkm$b$a	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$PositionSourceType$CoordinateSource
	m	(DDFLbck;)D	getCoordinate	getCoordinate
c	dkm$c	net/minecraft/world/item/enchantment/effects/SpawnParticlesEffect$VelocitySource
	f	F	b	movementScale
	f	Lbwm;	c	base
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(FLbwm;)V	<init>	<init>
	m	(DLbck;)D	a	getVelocity
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	a	movementScale
	m	()Lbwm;	b	base
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkn	net/minecraft/world/item/enchantment/effects/SummonEntityEffect
	f	Ljp;	d	entityTypes
	f	Z	e	joinTeam
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljp;Z)V	<init>	<init>
	m	(Laub;ILdjh;Lbzm;Lfis;)V	a	apply
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	entityTypes
	m	()Z	c	joinTeam
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dko	net/minecraft/world/item/enchantment/effects/package-info
c	dkp	net/minecraft/world/item/enchantment/package-info
c	dkq	net/minecraft/world/item/enchantment/providers/EnchantmentProvider
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	m	(Ldcv;Ldjo$a;Lbck;Lbxh;)V	a	enchant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dkr	net/minecraft/world/item/enchantment/providers/EnchantmentProviderTypes
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	dks	net/minecraft/world/item/enchantment/providers/EnchantmentsByCost
	f	Ljp;	c	enchantments
	f	Lbwo;	d	cost
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljp;Lbwo;)V	<init>	<init>
	m	(Ldcv;Ldjo$a;Lbck;Lbxh;)V	a	enchant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	enchantments
	m	()Lbwo;	c	cost
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkt	net/minecraft/world/item/enchantment/providers/EnchantmentsByCostWithDifficulty
	f	Ljp;	d	enchantments
	f	I	e	minCost
	f	I	f	maxCostSpan
	f	I	b	MAX_ALLOWED_VALUE_PART
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Ljp;II)V	<init>	<init>
	m	(Ldcv;Ldjo$a;Lbck;Lbxh;)V	a	enchant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	b	enchantments
	m	()I	c	minCost
	m	()I	d	maxCostSpan
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dku	net/minecraft/world/item/enchantment/providers/SingleEnchantment
	f	Ljl;	c	enchantment
	f	Lbwo;	d	level
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Ljl;Lbwo;)V	<init>	<init>
	m	(Ldcv;Ldjo$a;Lbck;Lbxh;)V	a	enchant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	enchantment
	m	()Lbwo;	c	level
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dkv	net/minecraft/world/item/enchantment/providers/TradeRebalanceEnchantmentProviders
	f	Lamd;	a	TRADES_DESERT_ARMORER_BOOTS_4
	f	Lamd;	b	TRADES_DESERT_ARMORER_LEGGINGS_4
	f	Lamd;	c	TRADES_DESERT_ARMORER_CHESTPLATE_4
	f	Lamd;	d	TRADES_DESERT_ARMORER_HELMET_4
	f	Lamd;	e	TRADES_DESERT_ARMORER_LEGGINGS_5
	f	Lamd;	f	TRADES_DESERT_ARMORER_CHESTPLATE_5
	f	Lamd;	g	TRADES_PLAINS_ARMORER_BOOTS_4
	f	Lamd;	h	TRADES_PLAINS_ARMORER_LEGGINGS_4
	f	Lamd;	i	TRADES_PLAINS_ARMORER_CHESTPLATE_4
	f	Lamd;	j	TRADES_PLAINS_ARMORER_HELMET_4
	f	Lamd;	k	TRADES_PLAINS_ARMORER_BOOTS_5
	f	Lamd;	l	TRADES_PLAINS_ARMORER_LEGGINGS_5
	f	Lamd;	m	TRADES_SAVANNA_ARMORER_BOOTS_4
	f	Lamd;	n	TRADES_SAVANNA_ARMORER_LEGGINGS_4
	f	Lamd;	o	TRADES_SAVANNA_ARMORER_CHESTPLATE_4
	f	Lamd;	p	TRADES_SAVANNA_ARMORER_HELMET_4
	f	Lamd;	q	TRADES_SAVANNA_ARMORER_CHESTPLATE_5
	f	Lamd;	r	TRADES_SAVANNA_ARMORER_HELMET_5
	f	Lamd;	s	TRADES_SNOW_ARMORER_BOOTS_4
	f	Lamd;	t	TRADES_SNOW_ARMORER_HELMET_4
	f	Lamd;	u	TRADES_SNOW_ARMORER_BOOTS_5
	f	Lamd;	v	TRADES_SNOW_ARMORER_HELMET_5
	f	Lamd;	w	TRADES_JUNGLE_ARMORER_BOOTS_4
	f	Lamd;	x	TRADES_JUNGLE_ARMORER_LEGGINGS_4
	f	Lamd;	y	TRADES_JUNGLE_ARMORER_CHESTPLATE_4
	f	Lamd;	z	TRADES_JUNGLE_ARMORER_HELMET_4
	f	Lamd;	A	TRADES_JUNGLE_ARMORER_BOOTS_5
	f	Lamd;	B	TRADES_JUNGLE_ARMORER_HELMET_5
	f	Lamd;	C	TRADES_SWAMP_ARMORER_BOOTS_4
	f	Lamd;	D	TRADES_SWAMP_ARMORER_LEGGINGS_4
	f	Lamd;	E	TRADES_SWAMP_ARMORER_CHESTPLATE_4
	f	Lamd;	F	TRADES_SWAMP_ARMORER_HELMET_4
	f	Lamd;	G	TRADES_SWAMP_ARMORER_BOOTS_5
	f	Lamd;	H	TRADES_SWAMP_ARMORER_HELMET_5
	f	Lamd;	I	TRADES_TAIGA_ARMORER_LEGGINGS_5
	f	Lamd;	J	TRADES_TAIGA_ARMORER_CHESTPLATE_5
	m	(Lqq;)V	a	bootstrap
	m	()V	<clinit>	<clinit>
c	dkw	net/minecraft/world/item/enchantment/providers/VanillaEnchantmentProviders
	f	Lamd;	a	MOB_SPAWN_EQUIPMENT
	f	Lamd;	b	PILLAGER_SPAWN_CROSSBOW
	f	Lamd;	c	RAID_PILLAGER_POST_WAVE_3
	f	Lamd;	d	RAID_PILLAGER_POST_WAVE_5
	f	Lamd;	e	RAID_VINDICATOR
	f	Lamd;	f	RAID_VINDICATOR_POST_WAVE_5
	f	Lamd;	g	ENDERMAN_LOOT_DROP
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	create
	m	()V	<clinit>	<clinit>
c	dkx	net/minecraft/world/item/enchantment/providers/package-info
c	dky	net/minecraft/world/item/equipment/AllowedEntitiesProvider
	m	(Ljm;)Ljp;	get	get
c	dkz	net/minecraft/world/item/equipment/ArmorMaterial
	f	I	a	durability
	f	Ljava/util/Map;	b	defense
	f	I	c	enchantmentValue
	f	Ljl;	d	equipSound
	f	F	e	toughness
	f	F	f	knockbackResistance
	f	Lbae;	g	repairIngredient
	f	Lamd;	h	assetId
	m	(ILjava/util/Map;ILjl;FFLbae;Lamd;)V	<init>	<init>
	m	(Ldlb;)Ldfm;	a	createAttributes
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	durability
	m	()Ljava/util/Map;	b	defense
	m	()I	c	enchantmentValue
	m	()Ljl;	d	equipSound
	m	()F	e	toughness
	m	()F	f	knockbackResistance
	m	()Lbae;	g	repairIngredient
	m	()Lamd;	h	assetId
c	dla	net/minecraft/world/item/equipment/ArmorMaterials
	f	Ldkz;	a	LEATHER
	f	Ldkz;	b	CHAINMAIL
	f	Ldkz;	c	IRON
	f	Ldkz;	d	GOLD
	f	Ldkz;	e	DIAMOND
	f	Ldkz;	f	TURTLE_SCUTE
	f	Ldkz;	g	NETHERITE
	f	Ldkz;	h	ARMADILLO_SCUTE
	m	(IIIII)Ljava/util/Map;	a	makeDefense
	m	()V	<clinit>	<clinit>
c	dlb	net/minecraft/world/item/equipment/ArmorType
	f	Ldlb;	a	HELMET
	f	Ldlb;	b	CHESTPLATE
	f	Ldlb;	c	LEGGINGS
	f	Ldlb;	d	BOOTS
	f	Ldlb;	e	BODY
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lbzw;	g	slot
	f	Ljava/lang/String;	h	name
	f	I	i	unitDurability
	f	[Ldlb;	j	$VALUES
	m	()[Ldlb;	values	values
	m	(Ljava/lang/String;)Ldlb;	valueOf	valueOf
	m	(Ljava/lang/String;ILbzw;ILjava/lang/String;)V	<init>	<init>
	m	(I)I	a	getDurability
	m	()Lbzw;	a	getSlot
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldlb;	d	$values
	m	()V	<clinit>	<clinit>
c	dlc	net/minecraft/world/item/equipment/EquipmentAsset
	m	()V	<init>	<init>
c	dld	net/minecraft/world/item/equipment/EquipmentAssets
	f	Lamd;	a	ROOT_ID
	f	Lamd;	b	LEATHER
	f	Lamd;	c	CHAINMAIL
	f	Lamd;	d	IRON
	f	Lamd;	e	GOLD
	f	Lamd;	f	DIAMOND
	f	Lamd;	g	TURTLE_SCUTE
	f	Lamd;	h	NETHERITE
	f	Lamd;	i	ARMADILLO_SCUTE
	f	Lamd;	j	ELYTRA
	f	Lamd;	k	SADDLE
	f	Ljava/util/Map;	l	CARPETS
	f	Lamd;	m	TRADER_LLAMA
	f	Ljava/util/Map;	n	HARNESSES
	m	(Ljava/lang/String;)Lamd;	a	createId
	m	(Ldbt;)Lamd;	a	lambda$static$1
	m	(Ldbt;)Lamd;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dle	net/minecraft/world/item/equipment/Equippable
	f	Lbzw;	c	slot
	f	Ljl;	d	equipSound
	f	Ljava/util/Optional;	e	assetId
	f	Ljava/util/Optional;	f	cameraOverlay
	f	Ljava/util/Optional;	g	allowedEntities
	f	Z	h	dispensable
	f	Z	i	swappable
	f	Z	j	damageOnHurt
	f	Z	k	equipOnInteract
	f	Z	l	canBeSheared
	f	Ljl;	m	shearingSound
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Lbzw;Ljl;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;ZZZZZLjl;)V	<init>	<init>
	m	(Ldbt;)Ldle;	a	llamaSwag
	m	()Ldle;	a	saddle
	m	(Ldbt;)Ldle;	b	harness
	m	(Lbzw;)Ldle$a;	a	builder
	m	(Ldcv;Lcut;)Lbxj;	a	swapWithEquipmentSlot
	m	(Lcut;Lcam;Ldcv;)Lbxj;	a	equipOnTarget
	m	(Lbzv;)Z	a	canBeEquippedBy
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzw;	b	slot
	m	()Ljl;	c	equipSound
	m	()Ljava/util/Optional;	d	assetId
	m	()Ljava/util/Optional;	e	cameraOverlay
	m	()Ljava/util/Optional;	f	allowedEntities
	m	()Z	g	dispensable
	m	()Z	h	swappable
	m	()Z	i	damageOnHurt
	m	()Z	j	equipOnInteract
	m	()Z	k	canBeSheared
	m	()Ljl;	l	shearingSound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dle$a	net/minecraft/world/item/equipment/Equippable$Builder
	f	Lbzw;	a	slot
	f	Ljl;	b	equipSound
	f	Ljava/util/Optional;	c	assetId
	f	Ljava/util/Optional;	d	cameraOverlay
	f	Ljava/util/Optional;	e	allowedEntities
	f	Z	f	dispensable
	f	Z	g	swappable
	f	Z	h	damageOnHurt
	f	Z	i	equipOnInteract
	f	Z	j	canBeSheared
	f	Ljl;	k	shearingSound
	m	(Lbzw;)V	<init>	<init>
	m	(Ljl;)Ldle$a;	a	setEquipSound
	m	(Lamd;)Ldle$a;	a	setAsset
	m	(Lame;)Ldle$a;	a	setCameraOverlay
	m	([Lbzv;)Ldle$a;	a	setAllowedEntities
	m	(Ljp;)Ldle$a;	a	setAllowedEntities
	m	(Z)Ldle$a;	a	setDispensable
	m	(Z)Ldle$a;	b	setSwappable
	m	(Z)Ldle$a;	c	setDamageOnHurt
	m	(Z)Ldle$a;	d	setEquipOnInteract
	m	(Z)Ldle$a;	e	setCanBeSheared
	m	(Ljl;)Ldle$a;	b	setShearingSound
	m	()Ldle;	a	build
c	dlf	net/minecraft/world/item/equipment/package-info
c	dlg	net/minecraft/world/item/equipment/trim/ArmorTrim
	f	Ljl;	c	material
	f	Ljl;	d	pattern
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lxo;	e	UPGRADE_TITLE
	m	(Ljl;Ljl;)V	<init>	<init>
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljava/lang/String;Lamd;)Lame;	a	layerAssetId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	material
	m	()Ljl;	b	pattern
	m	(Ljava/lang/String;Ldlh$a;Ljava/lang/String;)Ljava/lang/String;	a	lambda$layerAssetId$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlh	net/minecraft/world/item/equipment/trim/MaterialAssetGroup
	f	Ldlh$a;	o	base
	f	Ljava/util/Map;	p	overrides
	f	Ljava/lang/String;	a	SEPARATOR
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	Lzm;	c	STREAM_CODEC
	f	Ldlh;	d	QUARTZ
	f	Ldlh;	e	IRON
	f	Ldlh;	f	NETHERITE
	f	Ldlh;	g	REDSTONE
	f	Ldlh;	h	COPPER
	f	Ldlh;	i	GOLD
	f	Ldlh;	j	EMERALD
	f	Ldlh;	k	DIAMOND
	f	Ldlh;	l	LAPIS
	f	Ldlh;	m	AMETHYST
	f	Ldlh;	n	RESIN
	m	(Ldlh$a;Ljava/util/Map;)V	<init>	<init>
	m	(Ljava/lang/String;)Ldlh;	a	create
	m	(Ljava/lang/String;Ljava/util/Map;)Ldlh;	a	create
	m	(Lamd;)Ldlh$a;	a	assetId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlh$a;	a	base
	m	()Ljava/util/Map;	b	overrides
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlh$a	net/minecraft/world/item/equipment/trim/MaterialAssetGroup$AssetInfo
	f	Ljava/lang/String;	c	suffix
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	suffix
	m	()V	<clinit>	<clinit>
c	dli	net/minecraft/world/item/equipment/trim/TrimMaterial
	f	Ldlh;	e	assets
	f	Lxo;	f	description
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ldlh;Lxo;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlh;	a	assets
	m	()Lxo;	b	description
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlj	net/minecraft/world/item/equipment/trim/TrimMaterials
	f	Lamd;	a	QUARTZ
	f	Lamd;	b	IRON
	f	Lamd;	c	NETHERITE
	f	Lamd;	d	REDSTONE
	f	Lamd;	e	COPPER
	f	Lamd;	f	GOLD
	f	Lamd;	g	EMERALD
	f	Lamd;	h	DIAMOND
	f	Lamd;	i	LAPIS
	f	Lamd;	j	AMETHYST
	f	Lamd;	k	RESIN
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljn$a;Ldcv;)Ljava/util/Optional;	a	getFromIngredient
	m	(Lqq;Lamd;Lyl;Ldlh;)V	a	register
	m	(Ljava/lang/String;)Lamd;	a	registryKey
	m	()V	<clinit>	<clinit>
c	dlk	net/minecraft/world/item/equipment/trim/TrimPattern
	f	Lame;	e	assetId
	f	Lxo;	f	description
	f	Z	g	decal
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lame;Lxo;Z)V	<init>	<init>
	m	(Ljl;)Lxo;	a	copyWithStyle
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	assetId
	m	()Lxo;	b	description
	m	()Z	c	decal
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dll	net/minecraft/world/item/equipment/trim/TrimPatterns
	f	Lamd;	a	SENTRY
	f	Lamd;	b	DUNE
	f	Lamd;	c	COAST
	f	Lamd;	d	WILD
	f	Lamd;	e	WARD
	f	Lamd;	f	EYE
	f	Lamd;	g	VEX
	f	Lamd;	h	TIDE
	f	Lamd;	i	SNOUT
	f	Lamd;	j	RIB
	f	Lamd;	k	SPIRE
	f	Lamd;	l	WAYFINDER
	f	Lamd;	m	SHAPER
	f	Lamd;	n	SILENCE
	f	Lamd;	o	RAISER
	f	Lamd;	p	HOST
	f	Lamd;	q	FLOW
	f	Lamd;	r	BOLT
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;)V	a	register
	m	(Ljava/lang/String;)Lamd;	a	registryKey
	m	(Lamd;)Lame;	a	defaultAssetId
	m	()V	<clinit>	<clinit>
c	dlm	net/minecraft/world/item/equipment/trim/package-info
c	dln	net/minecraft/world/item/package-info
c	dlo	net/minecraft/world/item/trading/ItemCost
	f	Ljl;	d	item
	f	I	e	count
	f	Lkk;	f	components
	f	Ldcv;	g	itemStack
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lzm;	c	OPTIONAL_STREAM_CODEC
	m	(Ldmt;)V	<init>	<init>
	m	(Ldmt;I)V	<init>	<init>
	m	(Ljl;ILkk;)V	<init>	<init>
	m	(Ljl;ILkk;Ldcv;)V	<init>	<init>
	m	(Ljava/util/function/UnaryOperator;)Ldlo;	a	withComponents
	m	(Ljl;ILkk;)Ldcv;	a	createStack
	m	(Ldcv;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	item
	m	()I	b	count
	m	()Lkk;	c	components
	m	()Ldcv;	d	itemStack
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlp	net/minecraft/world/item/trading/Merchant
	m	(Lcut;)V	g	setTradingPlayer
	m	()Lcut;	gH	getTradingPlayer
	m	()Ldlr;	gJ	getOffers
	m	(Ldlr;)V	a	overrideOffers
	m	(Ldlq;)V	a	notifyTrade
	m	(Ldcv;)V	i	notifyTradeUpdated
	m	()I	t	getVillagerXp
	m	(I)V	s	overrideXp
	m	()Z	gK	showProgressBar
	m	()Layy;	gL	getNotifyTradeSound
	m	()Z	gT	canRestock
	m	(Lcut;Lxo;I)V	a	openTradingScreen
	m	()Z	gP	isClientSide
	m	(Lcut;)Z	h	stillValid
	m	(ILcus;Lcut;)Lcym;	a	lambda$openTradingScreen$0
c	dlq	net/minecraft/world/item/trading/MerchantOffer
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ldlo;	c	baseCostA
	f	Ljava/util/Optional;	d	costB
	f	Ldcv;	e	result
	f	I	f	uses
	f	I	g	maxUses
	f	Z	h	rewardExp
	f	I	i	specialPriceDiff
	f	I	j	demand
	f	F	k	priceMultiplier
	f	I	l	xp
	m	(Ldlo;Ljava/util/Optional;Ldcv;IIZIIFI)V	<init>	<init>
	m	(Ldlo;Ldcv;IIF)V	<init>	<init>
	m	(Ldlo;Ljava/util/Optional;Ldcv;IIF)V	<init>	<init>
	m	(Ldlo;Ljava/util/Optional;Ldcv;IIIF)V	<init>	<init>
	m	(Ldlo;Ljava/util/Optional;Ldcv;IIIFI)V	<init>	<init>
	m	(Ldlq;)V	<init>	<init>
	m	()Ldcv;	a	getBaseCostA
	m	()Ldcv;	b	getCostA
	m	(Ldlo;)I	a	getModifiedCostCount
	m	()Ldcv;	c	getCostB
	m	()Ldlo;	d	getItemCostA
	m	()Ljava/util/Optional;	e	getItemCostB
	m	()Ldcv;	f	getResult
	m	()V	g	updateDemand
	m	()Ldcv;	h	assemble
	m	()I	i	getUses
	m	()V	j	resetUses
	m	()I	k	getMaxUses
	m	()V	l	increaseUses
	m	()I	m	getDemand
	m	(I)V	a	addToSpecialPriceDiff
	m	()V	n	resetSpecialPriceDiff
	m	()I	o	getSpecialPriceDiff
	m	(I)V	b	setSpecialPriceDiff
	m	()F	p	getPriceMultiplier
	m	()I	q	getXp
	m	()Z	r	isOutOfStock
	m	()V	s	setToOutOfStock
	m	()Z	t	needsRestock
	m	()Z	u	shouldRewardExp
	m	(Ldcv;Ldcv;)Z	a	satisfiedBy
	m	(Ldcv;Ldcv;)Z	b	take
	m	()Ldlq;	v	copy
	m	(Lwx;Ldlq;)V	a	writeToStream
	m	(Lwx;)Ldlq;	a	createFromStream
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Ldlq;)Ljava/lang/Integer;	a	lambda$static$9
	m	(Ldlq;)Ljava/lang/Float;	b	lambda$static$8
	m	(Ldlq;)Ljava/lang/Integer;	c	lambda$static$7
	m	(Ldlq;)Ljava/lang/Integer;	d	lambda$static$6
	m	(Ldlq;)Ljava/lang/Boolean;	e	lambda$static$5
	m	(Ldlq;)Ljava/lang/Integer;	f	lambda$static$4
	m	(Ldlq;)Ljava/lang/Integer;	g	lambda$static$3
	m	(Ldlq;)Ldcv;	h	lambda$static$2
	m	(Ldlq;)Ljava/util/Optional;	i	lambda$static$1
	m	(Ldlq;)Ldlo;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlr	net/minecraft/world/item/trading/MerchantOffers
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	(Ljava/util/Collection;)V	<init>	<init>
	m	(Ldcv;Ldcv;I)Ldlq;	a	getRecipeFor
	m	()Ldlr;	a	copy
	m	()V	<clinit>	<clinit>
c	dls	net/minecraft/world/item/trading/package-info
c	dlt	net/minecraft/world/level/BaseCommandBlock
	f	Ljava/text/SimpleDateFormat;	b	TIME_FORMAT
	f	Lxo;	c	DEFAULT_NAME
	f	I	d	NO_LAST_EXECUTION
	f	J	e	lastExecution
	f	Z	f	updateLastExecution
	f	I	g	successCount
	f	Z	h	trackOutput
	f	Lxo;	i	lastOutput
	f	Ljava/lang/String;	j	command
	f	Lxo;	k	customName
	m	()V	<init>	<init>
	m	()I	k	getSuccessCount
	m	(I)V	a	setSuccessCount
	m	()Lxo;	l	getLastOutput
	m	(Lfdc;)V	a	save
	m	(Lfda;)V	a	load
	m	(Ljava/lang/String;)V	a	setCommand
	m	()Ljava/lang/String;	m	getCommand
	m	(Ldmu;)Z	a	performCommand
	m	()Lxo;	n	getName
	m	()Lxo;	o	getCustomName
	m	(Lxo;)V	b	setCustomName
	m	(Lxo;)V	a	sendSystemMessage
	m	()Laub;	e	getLevel
	m	()V	f	onUpdated
	m	(Lxo;)V	c	setLastOutput
	m	(Z)V	a	setTrackOutput
	m	()Z	p	isTrackOutput
	m	(Lcut;)Lbxj;	a	usedBy
	m	()Lfis;	g	getPosition
	m	()Lek;	i	createCommandSourceStack
	m	()Z	x_	acceptsSuccess
	m	()Z	y_	acceptsFailure
	m	()Z	c	shouldInformAdmins
	m	()Z	j	isValid
	m	()Ljava/lang/String;	h	lambda$performCommand$1
	m	(ZI)V	a	lambda$performCommand$0
	m	()V	<clinit>	<clinit>
c	dlu	net/minecraft/world/level/BaseSpawner
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SPAWN_DATA_TAG
	f	I	c	EVENT_SPAWN
	f	I	d	DEFAULT_SPAWN_DELAY
	f	I	e	DEFAULT_MIN_SPAWN_DELAY
	f	I	f	DEFAULT_MAX_SPAWN_DELAY
	f	I	g	DEFAULT_SPAWN_COUNT
	f	I	h	DEFAULT_MAX_NEARBY_ENTITIES
	f	I	i	DEFAULT_REQUIRED_PLAYER_RANGE
	f	I	j	DEFAULT_SPAWN_RANGE
	f	I	k	spawnDelay
	f	Lbvt;	l	spawnPotentials
	f	Ldno;	m	nextSpawnData
	f	D	n	spin
	f	D	o	oSpin
	f	I	p	minSpawnDelay
	f	I	q	maxSpawnDelay
	f	I	r	spawnCount
	f	Lbzm;	s	displayEntity
	f	I	t	maxNearbyEntities
	f	I	u	requiredPlayerRange
	f	I	v	spawnRange
	m	()V	<init>	<init>
	m	(Lbzv;Ldmu;Lbck;Ljb;)V	a	setEntityId
	m	(Ldmu;Ljb;)Z	c	isNearPlayer
	m	(Ldmu;Ljb;)V	a	clientTick
	m	(Laub;Ljb;)V	a	serverTick
	m	(Ldmu;Ljb;)V	d	delay
	m	(Ldmu;Ljb;Lfda;)V	a	load
	m	(Lfdc;)V	a	save
	m	(Ldmu;Ljb;)Lbzm;	b	getOrCreateDisplayEntity
	m	(Ldmu;I)Z	a	onEventTriggered
	m	(Ldmu;Ljb;Ldno;)V	a	setNextSpawnData
	m	(Ldmu;Lbck;Ljb;)Ldno;	a	getOrCreateNextSpawnData
	m	(Ldmu;Ljb;I)V	a	broadcastEvent
	m	()D	a	getSpin
	m	()D	b	getoSpin
	m	()Lbvt;	c	lambda$load$4
	m	(Ldmu;Ljb;Ldno;)V	b	lambda$load$3
	m	(Ldmu;Ljb;Ldno;)V	c	lambda$delay$2
	m	(Lfis;Lbzm;)Lbzm;	a	lambda$serverTick$1
	m	(Ljb;Lbck;)Lfis;	a	lambda$serverTick$0
	m	()V	<clinit>	<clinit>
c	dlv	net/minecraft/world/level/BlockAndTintGetter
	m	(Ljh;Z)F	a	getShade
	m	()Lfaa;	C_	getLightEngine
	m	(Ljb;Ldme;)I	a	getBlockTint
	m	(Ldnd;Ljb;)I	a	getBrightness
	m	(Ljb;I)I	b	getRawBrightness
	m	(Ljb;)Z	h	canSeeSky
c	dlw	net/minecraft/world/level/BlockCollisions
	f	Lfin;	a	box
	f	Lfix;	b	context
	f	Lje;	c	cursor
	f	Ljb$a;	d	pos
	f	Lfjm;	e	entityShape
	f	Ldmc;	f	collisionGetter
	f	Z	g	onlySuffocatingBlocks
	f	Ldly;	h	cachedBlockGetter
	f	J	i	cachedBlockGetterPos
	f	Ljava/util/function/BiFunction;	j	resultProvider
	m	(Ldmc;Lbzm;Lfin;ZLjava/util/function/BiFunction;)V	<init>	<init>
	m	(Ldmc;Lfix;Lfin;ZLjava/util/function/BiFunction;)V	<init>	<init>
	m	(II)Ldly;	a	getChunk
	m	()Ljava/lang/Object;	computeNext	computeNext
c	dlx	net/minecraft/world/level/BlockEventData
	f	Ljb;	a	pos
	f	Ldpz;	b	block
	f	I	c	paramA
	f	I	d	paramB
	m	(Ljb;Ldpz;II)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ldpz;	b	block
	m	()I	c	paramA
	m	()I	d	paramB
c	dly	net/minecraft/world/level/BlockGetter
	f	I	g	MAX_BLOCK_ITERATIONS_ALONG_TRAVEL
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;Lebb;)Ljava/util/Optional;	a	getBlockEntity
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(Ljb;)I	i	getLightEmission
	m	(Lfin;)Ljava/util/stream/Stream;	a	getBlockStates
	m	(Ldma;)Lfio;	a	isBlockInLine
	m	(Ldmb;)Lfio;	a	clip
	m	(Lfis;Lfis;Ljb;Lfjm;Leeb;)Lfio;	a	clipWithInteractionOverride
	m	(Lfjm;Ljava/util/function/Supplier;)D	a	getBlockFloorHeight
	m	(Ljb;)D	j	getBlockFloorHeight
	m	(Lfis;Lfis;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object;	a	traverseBlocks
	m	(Lfis;Lfis;Lfin;Ldly$a;)Z	a	forEachBlockIntersectedBetween
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lfis;Lfis;Lfin;Ldly$a;)I	a	addCollisionsAlongTravel
	m	(Ljb;)Lfjm;	f	lambda$getBlockFloorHeight$4
	m	(Ldmb;)Lfio;	c	lambda$clip$3
	m	(Ldmb;Ljb;)Lfio;	a	lambda$clip$2
	m	(Ldma;)Lfio;	b	lambda$isBlockInLine$1
	m	(Ldma;Ljb;)Lfio;	a	lambda$isBlockInLine$0
c	dly$a	net/minecraft/world/level/BlockGetter$BlockStepVisitor
	m	(Ljb;I)Z	visit	visit
c	dlz	net/minecraft/world/level/ChunkPos
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	I	j	SAFETY_MARGIN
	f	J	c	INVALID_CHUNK_POS
	f	I	k	SAFETY_MARGIN_CHUNKS
	f	I	d	MAX_COORDINATE_VALUE
	f	Ldlz;	e	ZERO
	f	J	l	COORD_BITS
	f	J	m	COORD_MASK
	f	I	n	REGION_BITS
	f	I	f	REGION_SIZE
	f	I	o	REGION_MASK
	f	I	g	REGION_MAX_INDEX
	f	I	h	x
	f	I	i	z
	f	I	p	HASH_A
	f	I	q	HASH_C
	f	I	r	HASH_Z_XOR
	m	(II)V	<init>	<init>
	m	(Ljb;)V	<init>	<init>
	m	(J)V	<init>	<init>
	m	(II)Ldlz;	a	minFromRegion
	m	(II)Ldlz;	b	maxFromRegion
	m	()J	a	toLong
	m	(II)J	c	asLong
	m	(Ljb;)J	a	asLong
	m	(J)I	a	getX
	m	(J)I	b	getZ
	m	()I	hashCode	hashCode
	m	(II)I	d	hash
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	getMiddleBlockX
	m	()I	c	getMiddleBlockZ
	m	()I	d	getMinBlockX
	m	()I	e	getMinBlockZ
	m	()I	f	getMaxBlockX
	m	()I	g	getMaxBlockZ
	m	()I	h	getRegionX
	m	()I	i	getRegionZ
	m	()I	j	getRegionLocalX
	m	()I	k	getRegionLocalZ
	m	(III)Ljb;	a	getBlockAt
	m	(I)I	a	getBlockX
	m	(I)I	b	getBlockZ
	m	(I)Ljb;	c	getMiddleBlockPosition
	m	()Ljava/lang/String;	toString	toString
	m	()Ljb;	l	getWorldPosition
	m	(Ldlz;)I	a	getChessboardDistance
	m	(II)I	e	getChessboardDistance
	m	(Ldlz;)I	b	distanceSquared
	m	(J)I	c	distanceSquared
	m	(II)I	f	distanceSquared
	m	(Ldlz;I)Ljava/util/stream/Stream;	a	rangeClosed
	m	(Ldlz;Ldlz;)Ljava/util/stream/Stream;	a	rangeClosed
	m	(Ldlz;)Ljava/util/stream/IntStream;	c	lambda$static$2
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Ldlz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dlz$1	net/minecraft/world/level/ChunkPos$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Ldlz;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Ldlz;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	dlz$2	net/minecraft/world/level/ChunkPos$2
	f	Ldlz;	e	pos
	f	Ldlz;	a	val$from
	f	Ldlz;	b	val$to
	f	I	c	val$zDiff
	f	I	d	val$xDiff
	m	(JILdlz;Ldlz;II)V	<init>	<init>
	m	(Ljava/util/function/Consumer;)Z	tryAdvance	tryAdvance
c	dma	net/minecraft/world/level/ClipBlockStateContext
	f	Lfis;	a	from
	f	Lfis;	b	to
	f	Ljava/util/function/Predicate;	c	block
	m	(Lfis;Lfis;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Lfis;	a	getTo
	m	()Lfis;	b	getFrom
	m	()Ljava/util/function/Predicate;	c	isTargetBlock
c	dmb	net/minecraft/world/level/ClipContext
	f	Lfis;	a	from
	f	Lfis;	b	to
	f	Ldmb$a;	c	block
	f	Ldmb$b;	d	fluid
	f	Lfix;	e	collisionContext
	m	(Lfis;Lfis;Ldmb$a;Ldmb$b;Lbzm;)V	<init>	<init>
	m	(Lfis;Lfis;Ldmb$a;Ldmb$b;Lfix;)V	<init>	<init>
	m	()Lfis;	a	getTo
	m	()Lfis;	b	getFrom
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getBlockShape
	m	(Lfal;Ldly;Ljb;)Lfjm;	a	getFluidShape
c	dmb$a	net/minecraft/world/level/ClipContext$Block
	f	Ldmb$a;	a	COLLIDER
	f	Ldmb$a;	b	OUTLINE
	f	Ldmb$a;	c	VISUAL
	f	Ldmb$a;	d	FALLDAMAGE_RESETTING
	f	Ldmb$c;	e	shapeGetter
	f	[Ldmb$a;	f	$VALUES
	m	()[Ldmb$a;	values	values
	m	(Ljava/lang/String;)Ldmb$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILdmb$c;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	get	get
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	lambda$static$0
	m	()[Ldmb$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dmb$b	net/minecraft/world/level/ClipContext$Fluid
	f	Ldmb$b;	a	NONE
	f	Ldmb$b;	b	SOURCE_ONLY
	f	Ldmb$b;	c	ANY
	f	Ldmb$b;	d	WATER
	f	Ljava/util/function/Predicate;	e	canPick
	f	[Ldmb$b;	f	$VALUES
	m	()[Ldmb$b;	values	values
	m	(Ljava/lang/String;)Ldmb$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/Predicate;)V	<init>	<init>
	m	(Lfal;)Z	a	canPick
	m	(Lfal;)Z	b	lambda$static$2
	m	(Lfal;)Z	c	lambda$static$1
	m	(Lfal;)Z	d	lambda$static$0
	m	()[Ldmb$b;	a	$values
	m	()V	<clinit>	<clinit>
c	dmb$c	net/minecraft/world/level/ClipContext$ShapeGetter
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	get	get
c	dmc	net/minecraft/world/level/CollisionGetter
	m	()Left;	F_	getWorldBorder
	m	(II)Ldly;	c	getChunkForCollisions
	m	(Lbzm;Lfjm;)Z	a	isUnobstructed
	m	(Leeb;Ljb;Lfix;)Z	a	isUnobstructed
	m	(Lbzm;)Z	f	isUnobstructed
	m	(Lfin;)Z	b	noCollision
	m	(Lbzm;)Z	g	noCollision
	m	(Lbzm;Lfin;)Z	a	noCollision
	m	(Lbzm;Lfin;Z)Z	a	noCollision
	m	(Lbzm;Lfin;)Z	b	noBlockCollision
	m	(Lbzm;Lfin;)Ljava/util/List;	c	getEntityCollisions
	m	(Lbzm;Lfin;)Ljava/lang/Iterable;	d	getCollisions
	m	(Lbzm;Lfin;Lfis;)Ljava/lang/Iterable;	a	getPreMoveCollisions
	m	(Lbzm;Lfin;)Ljava/lang/Iterable;	e	getBlockCollisions
	m	(Lbzm;Lfin;)Ljava/lang/Iterable;	f	getBlockAndLiquidCollisions
	m	(Lfix;Lfin;)Ljava/lang/Iterable;	a	getBlockCollisionsFromContext
	m	(Lbzm;Lfin;)Lfjm;	i	borderCollision
	m	(Ldmb;)Lfio;	b	clipIncludingBorder
	m	(Lbzm;Lfin;)Z	g	collidesWithSuffocatingBlock
	m	(Lbzm;Lfin;)Ljava/util/Optional;	h	findSupportingBlock
	m	(Lbzm;Lfjm;Lfis;DDD)Ljava/util/Optional;	a	findFreePosition
	m	(DDDLfin;)Lfin;	a	lambda$findFreePosition$6
	m	(Lfjm;)Ljava/util/stream/Stream;	a	lambda$findFreePosition$5
	m	(Lfjm;)Z	b	lambda$findFreePosition$4
	m	(Ljb$a;Lfjm;)Ljb;	a	lambda$findSupportingBlock$3
	m	(Ljb$a;Lfjm;)Lfjm;	b	lambda$collidesWithSuffocatingBlock$2
	m	(Lfix;Lfin;)Ljava/util/Iterator;	b	lambda$getBlockCollisionsFromContext$1
	m	(Ljb$a;Lfjm;)Lfjm;	c	lambda$getBlockCollisionsFromContext$0
c	dmd	net/minecraft/world/level/ColorMapColorUtil
	m	(DD[II)I	a	get
c	dme	net/minecraft/world/level/ColorResolver
	m	(Ldnx;DD)I	getColor	getColor
c	dmf	net/minecraft/world/level/CommonLevelAccessor
	m	(Ljb;Lebb;)Ljava/util/Optional;	a	getBlockEntity
	m	(Lbzm;Lfin;)Ljava/util/List;	c	getEntityCollisions
	m	(Lbzm;Lfjm;)Z	a	isUnobstructed
	m	(Leka$a;Ljb;)Ljb;	a	getHeightmapPos
c	dmg	net/minecraft/world/level/CustomSpawner
	m	(Laub;ZZ)V	a	tick
c	dmh	net/minecraft/world/level/DataPackConfig
	f	Ldmh;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	c	enabled
	f	Ljava/util/List;	d	disabled
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	getEnabled
	m	()Ljava/util/List;	b	getDisabled
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldmh;)Ljava/util/List;	a	lambda$static$1
	m	(Ldmh;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dmi	net/minecraft/world/level/DryFoliageColor
	f	I	a	FOLIAGE_DRY_DEFAULT
	f	[I	b	pixels
	m	()V	<init>	<init>
	m	([I)V	a	init
	m	(DD)I	a	get
	m	()V	<clinit>	<clinit>
c	dmj	net/minecraft/world/level/EmptyBlockAndTintGetter
	f	Ldmj;	a	INSTANCE
	f	[Ldmj;	b	$VALUES
	m	()[Ldmj;	values	values
	m	(Ljava/lang/String;)Ldmj;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljh;Z)F	a	getShade
	m	()Lfaa;	C_	getLightEngine
	m	(Ljb;Ldme;)I	a	getBlockTint
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	()I	M_	getHeight
	m	()I	L_	getMinY
	m	()[Ldmj;	a	$values
	m	()V	<clinit>	<clinit>
c	dmk	net/minecraft/world/level/EmptyBlockGetter
	f	Ldmk;	a	INSTANCE
	f	[Ldmk;	b	$VALUES
	m	()[Ldmk;	values	values
	m	(Ljava/lang/String;)Ldmk;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	()I	L_	getMinY
	m	()I	M_	getHeight
	m	()[Ldmk;	a	$values
	m	()V	<clinit>	<clinit>
c	dml	net/minecraft/world/level/EntityBasedExplosionDamageCalculator
	f	Lbzm;	a	source
	m	(Lbzm;)V	<init>	<init>
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;)Ljava/util/Optional;	a	getBlockExplosionResistance
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;Ljava/lang/Float;)Ljava/lang/Float;	a	lambda$getBlockExplosionResistance$0
c	dmm	net/minecraft/world/level/EntityGetter
	m	(Lbzm;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Ljava/lang/Class;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntitiesOfClass
	m	()Ljava/util/List;	A	players
	m	(Lbzm;Lfin;)Ljava/util/List;	a_	getEntities
	m	(Lbzm;Lfjm;)Z	a	isUnobstructed
	m	(Ljava/lang/Class;Lfin;)Ljava/util/List;	a	getEntitiesOfClass
	m	(Lbzm;Lfin;)Ljava/util/List;	c	getEntityCollisions
	m	(DDDDLjava/util/function/Predicate;)Lcut;	a	getNearestPlayer
	m	(Lbzm;D)Lcut;	a	getNearestPlayer
	m	(DDDDZ)Lcut;	a	getNearestPlayer
	m	(DDDD)Z	a	hasNearbyAlivePlayer
	m	(Ljava/util/UUID;)Lcut;	a	getPlayerByUUID
c	dmn	net/minecraft/world/level/Explosion
	m	(Ldmu;Lbzm;)Lbyb;	a	getDefaultDamageSource
	m	(Lbzm;)Lcam;	a	getIndirectSourceEntity
	m	()Laub;	a	level
	m	()Ldmn$a;	b	getBlockInteraction
	m	()Lcam;	c	getIndirectSourceEntity
	m	()Lbzm;	d	getDirectSourceEntity
	m	()F	e	radius
	m	()Lfis;	f	center
	m	()Z	g	canTriggerBlocks
	m	()Z	h	shouldAffectBlocklikeEntities
c	dmn$a	net/minecraft/world/level/Explosion$BlockInteraction
	f	Ldmn$a;	a	KEEP
	f	Ldmn$a;	b	DESTROY
	f	Ldmn$a;	c	DESTROY_WITH_DECAY
	f	Ldmn$a;	d	TRIGGER_BLOCK
	f	Z	e	shouldAffectBlocklikeEntities
	f	[Ldmn$a;	f	$VALUES
	m	()[Ldmn$a;	values	values
	m	(Ljava/lang/String;)Ldmn$a;	valueOf	valueOf
	m	(Ljava/lang/String;IZ)V	<init>	<init>
	m	()Z	a	shouldAffectBlocklikeEntities
	m	()[Ldmn$a;	b	$values
	m	()V	<clinit>	<clinit>
c	dmo	net/minecraft/world/level/ExplosionDamageCalculator
	m	()V	<init>	<init>
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;)Ljava/util/Optional;	a	getBlockExplosionResistance
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	(Ldmn;Lbzm;)Z	a	shouldDamageEntity
	m	(Lbzm;)F	a	getKnockbackMultiplier
	m	(Ldmn;Lbzm;F)F	a	getEntityDamageAmount
c	dmp	net/minecraft/world/level/FoliageColor
	f	I	a	FOLIAGE_EVERGREEN
	f	I	b	FOLIAGE_BIRCH
	f	I	c	FOLIAGE_DEFAULT
	f	I	d	FOLIAGE_MANGROVE
	f	[I	e	pixels
	m	()V	<init>	<init>
	m	([I)V	a	init
	m	(DD)I	a	get
	m	()V	<clinit>	<clinit>
c	dmq	net/minecraft/world/level/GameRules
	f	I	a	DEFAULT_RANDOM_TICK_SPEED
	f	Lorg/slf4j/Logger;	af	LOGGER
	f	Ljava/util/Map;	ag	GAME_RULE_TYPES
	f	Ldmq$e;	b	RULE_DOFIRETICK
	f	Ldmq$e;	c	RULE_ALLOWFIRETICKAWAYFROMPLAYERS
	f	Ldmq$e;	d	RULE_MOBGRIEFING
	f	Ldmq$e;	e	RULE_KEEPINVENTORY
	f	Ldmq$e;	f	RULE_DOMOBSPAWNING
	f	Ldmq$e;	g	RULE_DOMOBLOOT
	f	Ldmq$e;	h	RULE_PROJECTILESCANBREAKBLOCKS
	f	Ldmq$e;	i	RULE_DOBLOCKDROPS
	f	Ldmq$e;	j	RULE_DOENTITYDROPS
	f	Ldmq$e;	k	RULE_COMMANDBLOCKOUTPUT
	f	Ldmq$e;	l	RULE_NATURAL_REGENERATION
	f	Ldmq$e;	m	RULE_DAYLIGHT
	f	Ldmq$e;	n	RULE_LOGADMINCOMMANDS
	f	Ldmq$e;	o	RULE_SHOWDEATHMESSAGES
	f	Ldmq$e;	p	RULE_RANDOMTICKING
	f	Ldmq$e;	q	RULE_SENDCOMMANDFEEDBACK
	f	Ldmq$e;	r	RULE_REDUCEDDEBUGINFO
	f	Ldmq$e;	s	RULE_SPECTATORSGENERATECHUNKS
	f	Ldmq$e;	t	RULE_SPAWN_RADIUS
	f	Ldmq$e;	u	RULE_DISABLE_PLAYER_MOVEMENT_CHECK
	f	Ldmq$e;	v	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK
	f	Ldmq$e;	w	RULE_MAX_ENTITY_CRAMMING
	f	Ldmq$e;	x	RULE_WEATHER_CYCLE
	f	Ldmq$e;	y	RULE_LIMITED_CRAFTING
	f	Ldmq$e;	z	RULE_MAX_COMMAND_CHAIN_LENGTH
	f	Ldmq$e;	A	RULE_MAX_COMMAND_FORK_COUNT
	f	Ldmq$e;	B	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT
	f	Ldmq$e;	C	RULE_ANNOUNCE_ADVANCEMENTS
	f	Ldmq$e;	D	RULE_DISABLE_RAIDS
	f	Ldmq$e;	E	RULE_DOINSOMNIA
	f	Ldmq$e;	F	RULE_DO_IMMEDIATE_RESPAWN
	f	Ldmq$e;	G	RULE_PLAYERS_NETHER_PORTAL_DEFAULT_DELAY
	f	Ldmq$e;	H	RULE_PLAYERS_NETHER_PORTAL_CREATIVE_DELAY
	f	Ldmq$e;	I	RULE_DROWNING_DAMAGE
	f	Ldmq$e;	J	RULE_FALL_DAMAGE
	f	Ldmq$e;	K	RULE_FIRE_DAMAGE
	f	Ldmq$e;	L	RULE_FREEZE_DAMAGE
	f	Ldmq$e;	M	RULE_DO_PATROL_SPAWNING
	f	Ldmq$e;	N	RULE_DO_TRADER_SPAWNING
	f	Ldmq$e;	O	RULE_DO_WARDEN_SPAWNING
	f	Ldmq$e;	P	RULE_FORGIVE_DEAD_PLAYERS
	f	Ldmq$e;	Q	RULE_UNIVERSAL_ANGER
	f	Ldmq$e;	R	RULE_PLAYERS_SLEEPING_PERCENTAGE
	f	Ldmq$e;	S	RULE_BLOCK_EXPLOSION_DROP_DECAY
	f	Ldmq$e;	T	RULE_MOB_EXPLOSION_DROP_DECAY
	f	Ldmq$e;	U	RULE_TNT_EXPLOSION_DROP_DECAY
	f	Ldmq$e;	V	RULE_SNOW_ACCUMULATION_HEIGHT
	f	Ldmq$e;	W	RULE_WATER_SOURCE_CONVERSION
	f	Ldmq$e;	X	RULE_LAVA_SOURCE_CONVERSION
	f	Ldmq$e;	Y	RULE_GLOBAL_SOUND_EVENTS
	f	Ldmq$e;	Z	RULE_DO_VINES_SPREAD
	f	Ldmq$e;	aa	RULE_ENDER_PEARLS_VANISH_ON_DEATH
	f	Ldmq$e;	ab	RULE_MINECART_MAX_SPEED
	f	Ldmq$e;	ac	RULE_SPAWN_CHUNK_RADIUS
	f	Ldmq$e;	ad	RULE_TNT_EXPLODES
	f	Ldmq$e;	ae	RULE_LOCATOR_BAR
	f	Ljava/util/Map;	ah	rules
	f	Lcyd;	ai	enabledFeatures
	m	(Ldmq$e;)Ldmq$f;	a	getType
	m	(Ljava/lang/Class;)Lcom/mojang/serialization/Codec;	a	keyCodec
	m	(Ljava/lang/String;Ldmq$b;Ldmq$f;)Ldmq$e;	a	register
	m	(Lcyd;Lcom/mojang/serialization/DynamicLike;)V	<init>	<init>
	m	(Lcyd;)V	<init>	<init>
	m	(Lcyd;)Ljava/util/stream/Stream;	b	availableRules
	m	(Ljava/util/Map;Lcyd;)V	<init>	<init>
	m	(Ldmq$e;)Ldmq$g;	b	getRule
	m	()Lui;	a	createTag
	m	(Lcom/mojang/serialization/DynamicLike;)V	a	loadFromTag
	m	(Lcyd;)Ldmq;	a	copy
	m	(Ldmq$c;)V	a	visitGameRuleTypes
	m	(Ldmq$c;Ldmq$e;Ldmq$f;)V	a	callVisitorCap
	m	(Ldmq;Lnet/minecraft/server/MinecraftServer;)V	a	assignFrom
	m	(Ldmq$e;Ldmq;Lnet/minecraft/server/MinecraftServer;)V	a	assignCap
	m	(Ldmq$e;)Z	c	getBoolean
	m	(Ldmq$e;)I	d	getInt
	m	(Ldmq;Lnet/minecraft/server/MinecraftServer;Ldmq$e;)V	a	lambda$assignFrom$20
	m	(Ldmq$c;Ldmq$e;Ldmq$f;)V	b	lambda$visitGameRuleTypes$19
	m	(Ljava/util/Map$Entry;)Ldmq$g;	a	lambda$copy$18
	m	(Lcom/mojang/serialization/DynamicLike;Ldmq$e;Ldmq$g;)V	a	lambda$loadFromTag$17
	m	(Lui;Ldmq$e;Ldmq$g;)V	a	lambda$createTag$16
	m	(Lcyd;Ljava/util/Map$Entry;)Z	a	lambda$availableRules$15
	m	(Ljava/util/Map$Entry;)Ldmq$g;	b	lambda$new$14
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$a;)V	a	lambda$static$13
	m	(Ldmq$a;Laub;)V	a	lambda$static$12
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$d;)V	a	lambda$static$11
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$d;)V	b	lambda$static$10
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$a;)V	b	lambda$static$9
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$a;)V	c	lambda$static$8
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$a;)V	d	lambda$static$7
	m	(Ljava/lang/Class;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$keyCodec$6
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$keyCodec$5
	m	(Ljava/lang/String;)Ljava/lang/String;	b	lambda$keyCodec$4
	m	(Ldmq$e;)Ldmq$e;	e	lambda$keyCodec$3
	m	(Ljava/lang/String;Ldmq$e;)Z	a	lambda$keyCodec$2
	m	(Ljava/lang/Class;Ljava/util/Map$Entry;)Z	a	lambda$keyCodec$1
	m	(Ldmq$e;)Ljava/lang/String;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dmq$a	net/minecraft/world/level/GameRules$BooleanValue
	f	Z	b	value
	m	(ZLjava/util/function/BiConsumer;Lcyd;)Ldmq$f;	a	create
	m	(ZLjava/util/function/BiConsumer;)Ldmq$f;	a	create
	m	(Z)Ldmq$f;	a	create
	m	(Ldmq$f;Z)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	()Z	a	get
	m	(ZLnet/minecraft/server/MinecraftServer;)V	a	set
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)V	a	deserialize
	m	()I	c	getCommandResult
	m	()Ldmq$a;	d	getSelf
	m	()Ldmq$a;	e	copy
	m	(Ldmq$a;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Ldmq$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	()Ldmq$g;	f	copy
	m	()Ldmq$g;	g	getSelf
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$a;)V	a	lambda$create$2
	m	(ZLdmq$f;)Ldmq$a;	a	lambda$create$1
	m	(ZLdmq$f;)Ldmq$a;	b	lambda$create$0
c	dmq$b	net/minecraft/world/level/GameRules$Category
	f	Ldmq$b;	a	PLAYER
	f	Ldmq$b;	b	MOBS
	f	Ldmq$b;	c	SPAWNING
	f	Ldmq$b;	d	DROPS
	f	Ldmq$b;	e	UPDATES
	f	Ldmq$b;	f	CHAT
	f	Ldmq$b;	g	MISC
	f	Ljava/lang/String;	h	descriptionId
	f	[Ldmq$b;	i	$VALUES
	m	()[Ldmq$b;	values	values
	m	(Ljava/lang/String;)Ldmq$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getDescriptionId
	m	()[Ldmq$b;	b	$values
	m	()V	<clinit>	<clinit>
c	dmq$c	net/minecraft/world/level/GameRules$GameRuleTypeVisitor
	m	(Ldmq$e;Ldmq$f;)V	a	visit
	m	(Ldmq$e;Ldmq$f;)V	b	visitBoolean
	m	(Ldmq$e;Ldmq$f;)V	c	visitInteger
c	dmq$d	net/minecraft/world/level/GameRules$IntegerValue
	f	I	b	value
	m	(ILjava/util/function/BiConsumer;)Ldmq$f;	a	create
	m	(IIILcyd;Ljava/util/function/BiConsumer;)Ldmq$f;	a	create
	m	(I)Ldmq$f;	a	create
	m	(Ldmq$f;I)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	()I	a	get
	m	(ILnet/minecraft/server/MinecraftServer;)V	a	set
	m	()Ljava/lang/String;	b	serialize
	m	(Ljava/lang/String;)V	a	deserialize
	m	(Ljava/lang/String;)Z	b	tryDeserialize
	m	(Ljava/lang/String;)I	c	safeParse
	m	()I	c	getCommandResult
	m	()Ldmq$d;	d	getSelf
	m	()Ldmq$d;	e	copy
	m	(Ldmq$d;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	(Ldmq$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
	m	()Ldmq$g;	f	copy
	m	()Ldmq$g;	g	getSelf
	m	(Lnet/minecraft/server/MinecraftServer;Ldmq$d;)V	a	lambda$create$3
	m	(ILdmq$f;)Ldmq$d;	a	lambda$create$2
	m	(II)Lcom/mojang/brigadier/arguments/ArgumentType;	a	lambda$create$1
	m	(ILdmq$f;)Ldmq$d;	b	lambda$create$0
c	dmq$e	net/minecraft/world/level/GameRules$Key
	f	Ljava/lang/String;	a	id
	f	Ldmq$b;	b	category
	m	(Ljava/lang/String;Ldmq$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	b	getDescriptionId
	m	()Ldmq$b;	c	getCategory
c	dmq$f	net/minecraft/world/level/GameRules$Type
	f	Ljava/util/function/Supplier;	a	argument
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/BiConsumer;	c	callback
	f	Ldmq$h;	d	visitorCaller
	f	Ljava/lang/Class;	e	valueClass
	f	Lcyd;	f	requiredFeatures
	m	(Ljava/util/function/Supplier;Ljava/util/function/Function;Ljava/util/function/BiConsumer;Ldmq$h;Ljava/lang/Class;Lcyd;)V	<init>	<init>
	m	(Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder;	a	createArgument
	m	()Ldmq$g;	a	createRule
	m	(Ldmq$c;Ldmq$e;)V	a	callVisitor
	m	()Lcyd;	b	requiredFeatures
c	dmq$g	net/minecraft/world/level/GameRules$Value
	f	Ldmq$f;	a	type
	m	(Ldmq$f;)V	<init>	<init>
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	a	updateFromArgument
	m	(Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V	b	setFromArgument
	m	(Lnet/minecraft/server/MinecraftServer;)V	a	onChanged
	m	(Ljava/lang/String;)V	a	deserialize
	m	()Ljava/lang/String;	b	serialize
	m	()Ljava/lang/String;	toString	toString
	m	()I	c	getCommandResult
	m	()Ldmq$g;	g	getSelf
	m	()Ldmq$g;	f	copy
	m	(Ldmq$g;Lnet/minecraft/server/MinecraftServer;)V	a	setFrom
c	dmq$h	net/minecraft/world/level/GameRules$VisitorCaller
	m	(Ldmq$c;Ldmq$e;Ldmq$f;)V	call	call
c	dmr	net/minecraft/world/level/GameType
	f	Ldmr;	a	SURVIVAL
	f	Ldmr;	b	CREATIVE
	f	Ldmr;	c	ADVENTURE
	f	Ldmr;	d	SPECTATOR
	f	Ldmr;	e	DEFAULT_MODE
	f	Lbda$a;	f	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	g	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	h	LEGACY_ID_CODEC
	f	I	j	NOT_SET
	f	I	k	id
	f	Ljava/lang/String;	l	name
	f	Lxo;	m	shortName
	f	Lxo;	n	longName
	f	[Ldmr;	o	$VALUES
	m	()[Ldmr;	values	values
	m	(Ljava/lang/String;)Ldmr;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	getId
	m	()Ljava/lang/String;	b	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lxo;	d	getLongDisplayName
	m	()Lxo;	e	getShortDisplayName
	m	(Lcup;)V	a	updatePlayerAbilities
	m	()Z	f	isBlockPlacingRestricted
	m	()Z	g	isCreative
	m	()Z	h	isSurvival
	m	(I)Ldmr;	a	byId
	m	(Ljava/lang/String;)Ldmr;	a	byName
	m	(Ljava/lang/String;Ldmr;)Ldmr;	a	byName
	m	(Ldmr;)I	a	getNullableId
	m	(I)Ldmr;	b	byNullableId
	m	(I)Z	c	isValidId
	m	(ILdmr;)Z	a	lambda$isValidId$0
	m	()[Ldmr;	i	$values
	m	()V	<clinit>	<clinit>
c	dms	net/minecraft/world/level/GrassColor
	f	[I	a	pixels
	m	()V	<init>	<init>
	m	([I)V	a	init
	m	(DD)I	a	get
	m	()I	a	getDefaultColor
	m	()V	<clinit>	<clinit>
c	dmt	net/minecraft/world/level/ItemLike
	m	()Ldcr;	h	asItem
c	dmu	net/minecraft/world/level/Level
	f	Lcom/mojang/serialization/Codec;	h	RESOURCE_KEY_CODEC
	f	Lamd;	i	OVERWORLD
	f	Lamd;	j	NETHER
	f	Lamd;	k	END
	f	I	l	MAX_LEVEL_SIZE
	f	I	m	LONG_PARTICLE_CLIP_RANGE
	f	I	n	SHORT_PARTICLE_CLIP_RANGE
	f	I	o	MAX_BRIGHTNESS
	f	I	p	TICKS_PER_DAY
	f	I	q	MAX_ENTITY_SPAWN_Y
	f	I	r	MIN_ENTITY_SPAWN_Y
	f	Ljava/util/List;	s	blockEntityTickers
	f	Lfbs;	t	neighborUpdater
	f	Ljava/util/List;	a	pendingBlockEntityTickers
	f	Z	b	tickingBlockEntities
	f	Ljava/lang/Thread;	c	thread
	f	Z	d	isDebug
	f	I	e	skyDarken
	f	I	u	randValue
	f	I	v	addend
	f	F	w	oRainLevel
	f	F	x	rainLevel
	f	F	y	oThunderLevel
	f	F	z	thunderLevel
	f	Lbck;	A	random
	f	Lbck;	f	threadSafeRandom
	f	Ljl;	E	dimensionTypeRegistration
	f	Lfde;	B	levelData
	f	Z	C	isClientSide
	f	Left;	F	worldBorder
	f	Ldnz;	G	biomeManager
	f	Lamd;	H	dimension
	f	Ljz;	I	registryAccess
	f	Lbyc;	J	damageSources
	f	J	K	subTickCount
	m	(Lfde;Lamd;Ljz;Ljl;ZZJI)V	<init>	<init>
	m	()Z	B_	isClientSide
	m	()Lnet/minecraft/server/MinecraftServer;	q	getServer
	m	(Ljb;)Z	k	isInWorldBounds
	m	(Ljb;)Z	l	isInSpawnableBounds
	m	(Ljb;)Z	g	isInWorldBoundsHorizontal
	m	(I)Z	b	isOutsideSpawnableHeight
	m	(Ljb;)Legi;	m	getChunkAt
	m	(II)Legi;	d	getChunk
	m	(IILegz;Z)Lefy;	a	getChunk
	m	(Ljb;Leeb;I)Z	a	setBlock
	m	(Ljb;Leeb;II)Z	a	setBlock
	m	(Ljb;Leeb;Leeb;)V	a	updatePOIOnBlockStateChange
	m	(Ljb;Z)Z	a	removeBlock
	m	(Ljb;ZLbzm;I)Z	a	destroyBlock
	m	(Ljb;Leeb;)V	b	addDestroyBlockEffect
	m	(Ljb;Leeb;)Z	c	setBlockAndUpdate
	m	(Ljb;Leeb;Leeb;I)V	a	sendBlockUpdated
	m	(Ljb;Leeb;Leeb;)V	b	setBlocksDirty
	m	(Ljb;Ldpz;Lfbt;)V	a	updateNeighborsAt
	m	(Ljb;Ldpz;Ljh;Lfbt;)V	a	updateNeighborsAtExceptFromFacing
	m	(Ljb;Ldpz;Lfbt;)V	b	neighborChanged
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ljh;Ljb;Ljb;Leeb;II)V	a	neighborShapeChanged
	m	(Leka$a;II)I	a	getHeight
	m	()Lfaa;	C_	getLightEngine
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	()Z	W	isBrightOutside
	m	()Z	X	isDarkOutside
	m	()Z	Y	isMoonVisible
	m	(Lbzm;Ljb;Layy;Laza;FF)V	a	playSound
	m	(Lbzm;DDDLjl;Laza;FFJ)V	a	playSeededSound
	m	(Lbzm;DDDLayy;Laza;FFJ)V	a	playSeededSound
	m	(Lbzm;Lbzm;Ljl;Laza;FFJ)V	a	playSeededSound
	m	(Lbzm;DDDLayy;Laza;)V	a	playSound
	m	(Lbzm;DDDLayy;Laza;FF)V	a	playSound
	m	(Lbzm;DDDLjl;Laza;FF)V	a	playSound
	m	(Lbzm;Lbzm;Layy;Laza;FF)V	a	playSound
	m	(Ljb;Layy;Laza;FFZ)V	a	playLocalSound
	m	(Lbzm;Layy;Laza;FF)V	a	playLocalSound
	m	(DDDLayy;Laza;FFZ)V	a	playLocalSound
	m	(Layy;Laza;FF)V	a	playPlayerSound
	m	(Lmc;DDDDDD)V	a	addParticle
	m	(Lmc;ZZDDDDDD)V	a	addParticle
	m	(Lmc;DDDDDD)V	b	addAlwaysVisibleParticle
	m	(Lmc;ZDDDDDD)V	a	addAlwaysVisibleParticle
	m	(F)F	a	getSunAngle
	m	(Lecx;)V	a	addBlockEntityTicker
	m	()V	Z	tickBlockEntities
	m	(Ljava/util/function/Consumer;Lbzm;)V	a	guardEntityTick
	m	(Lbzm;)Z	h	shouldTickDeath
	m	(J)Z	a	shouldTickBlocksAt
	m	(Ljb;)Z	n	shouldTickBlocksAt
	m	(Lbzm;DDDFLdmu$a;)V	a	explode
	m	(Lbzm;DDDFZLdmu$a;)V	a	explode
	m	(Lbzm;Lbyb;Ldmo;Lfis;FZLdmu$a;)V	a	explode
	m	(Lbzm;Lbyb;Ldmo;DDDFZLdmu$a;)V	a	explode
	m	(Lbzm;Lbyb;Ldmo;DDDFZLdmu$a;Lmc;Lmc;Ljl;)V	a	explode
	m	()Ljava/lang/String;	K	gatherChunkSourceStats
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Leaz;)V	a	setBlockEntity
	m	(Ljb;)V	o	removeBlockEntity
	m	(Ljb;)Z	p	isLoaded
	m	(Ljb;Lbzm;Ljh;)Z	a	loadedAndEntityCanStandOnFace
	m	(Ljb;Lbzm;)Z	a	loadedAndEntityCanStandOn
	m	()V	aa	updateSkyBrightness
	m	(Z)V	a	setSpawnSettings
	m	()Ljb;	ab	getSharedSpawnPos
	m	()F	ac	getSharedSpawnAngle
	m	()V	ad	prepareWeather
	m	()V	close	close
	m	(II)Ldly;	c	getChunkForCollisions
	m	(Lbzm;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lein;Lfin;Ljava/util/function/Predicate;Ljava/util/List;)V	a	getEntities
	m	(Lein;Lfin;Ljava/util/function/Predicate;Ljava/util/List;I)V	a	getEntities
	m	(Lbzm;Lfin;)Ljava/util/List;	i	getPushableEntities
	m	(I)Lbzm;	a	getEntity
	m	(Ljava/util/UUID;)Lbzm;	b	getEntity
	m	()Ljava/util/Collection;	t	dragonParts
	m	(Ljb;)V	q	blockEntityChanged
	m	(Leaz;)V	b	onBlockEntityAdded
	m	()J	ae	getGameTime
	m	()J	af	getDayTime
	m	(Lbzm;Ljb;)Z	a	mayInteract
	m	(Lbzm;B)V	a	broadcastEntityEvent
	m	(Lbzm;Lbyb;)V	a	broadcastDamageEvent
	m	(Ljb;Ldpz;II)V	a	blockEvent
	m	()Lfco;	D_	getLevelData
	m	()Lbxt;	v	tickRateManager
	m	(F)F	b	getThunderLevel
	m	(F)V	c	setThunderLevel
	m	(F)F	d	getRainLevel
	m	(F)V	e	setRainLevel
	m	()Z	a	canHaveWeather
	m	()Z	ag	isThundering
	m	()Z	ah	isRaining
	m	(Ljb;)Z	r	isRainingAt
	m	(Ljb;)Ldnx$c;	s	precipitationAt
	m	(Lfce;)Lfcg;	a	getMapData
	m	(ILjb;I)V	b	globalLevelEvent
	m	(Lp;)Lq;	a	fillReportDetails
	m	(ILjb;I)V	a	destroyBlockProgress
	m	(DDDDDDLjava/util/List;)V	a	createFireworks
	m	()Lfjx;	S	getScoreboard
	m	(Ljb;Ldpz;)V	b	updateNeighbourForOutputSignal
	m	(Ljb;)Lbxh;	d_	getCurrentDifficultyAt
	m	()I	E_	getSkyDarken
	m	(I)V	c	setSkyFlashTime
	m	()Left;	F_	getWorldBorder
	m	(Lzw;)V	a	sendPacketToServer
	m	()Lehy;	G_	dimensionType
	m	()Ljl;	ai	dimensionTypeRegistration
	m	()Lamd;	aj	dimension
	m	()Lbck;	H_	getRandom
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Ljb;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
	m	()Ldhn;	R	recipeAccess
	m	(IIII)Ljb;	a	getBlockRandomPos
	m	()Z	w	noSave
	m	()Ldnz;	I_	getBiomeManager
	m	()Z	ak	isDebug
	m	()Leip;	I	getEntities
	m	()J	J_	nextSubTickCount
	m	()Ljz;	K_	registryAccess
	m	()Lbyc;	al	damageSources
	m	()Ldeq;	M	potionBrewing
	m	()Leby;	N	fuelValues
	m	(Ljb;)I	t	getClientLeafTintColor
	m	(II)Lefy;	a	getChunk
	m	(Ljava/util/UUID;)Leiu;	getEntity	getEntity
	m	()Ljava/lang/String;	b	lambda$fillReportDetails$3
	m	()Ljava/lang/String;	o	lambda$fillReportDetails$2
	m	(Ljava/util/function/Predicate;Ljava/util/List;ILein;Lbzm;)Lbak$a;	a	lambda$getEntities$1
	m	(Lbzm;Ljava/util/function/Predicate;Ljava/util/List;Lbzm;)V	a	lambda$getEntities$0
	m	()V	<clinit>	<clinit>
c	dmu$1	net/minecraft/world/level/Level$1
	f	Lehy;	a	val$dimensionType
	m	(Ldmu;Lehy;)V	<init>	<init>
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
c	dmu$a	net/minecraft/world/level/Level$ExplosionInteraction
	f	Ldmu$a;	a	NONE
	f	Ldmu$a;	b	BLOCK
	f	Ldmu$a;	c	MOB
	f	Ldmu$a;	d	TNT
	f	Ldmu$a;	e	TRIGGER
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	id
	f	[Ldmu$a;	h	$VALUES
	m	()[Ldmu$a;	values	values
	m	(Ljava/lang/String;)Ldmu$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldmu$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dmv	net/minecraft/world/level/LevelAccessor
	m	()J	am	dayTime
	m	()J	J_	nextSubTickCount
	m	(Ljb;Ljava/lang/Object;ILfko;)Lfkk;	a	createTick
	m	(Ljb;Ljava/lang/Object;I)Lfkk;	a	createTick
	m	()Lfco;	D_	getLevelData
	m	(Ljb;)Lbxh;	d_	getCurrentDifficultyAt
	m	()Lnet/minecraft/server/MinecraftServer;	q	getServer
	m	()Lbxg;	an	getDifficulty
	m	()Legc;	T	getChunkSource
	m	(II)Z	b	hasChunk
	m	()Lbck;	H_	getRandom
	m	(Ljb;Ldpz;)V	a	updateNeighborsAt
	m	(Ljh;Ljb;Ljb;Leeb;II)V	a	neighborShapeChanged
	m	(Lbzm;Ljb;Layy;Laza;)V	a	playSound
	m	(Lbzm;Ljb;Layy;Laza;FF)V	a	playSound
	m	(Lmc;DDDDDD)V	a	addParticle
	m	(Lbzm;ILjb;I)V	a	levelEvent
	m	(ILjb;I)V	c	levelEvent
	m	(Ljl;Lfis;Lejb$a;)V	a	gameEvent
	m	(Lbzm;Ljl;Lfis;)V	a	gameEvent
	m	(Lbzm;Ljl;Ljb;)V	a	gameEvent
	m	(Ljl;Ljb;Lejb$a;)V	a	gameEvent
	m	(Lamd;Ljb;Lejb$a;)V	a	gameEvent
c	dmw	net/minecraft/world/level/LevelHeightAccessor
	m	()I	M_	getHeight
	m	()I	L_	getMinY
	m	()I	ao	getMaxY
	m	()I	ap	getSectionsCount
	m	()I	aq	getMinSectionY
	m	()I	ar	getMaxSectionY
	m	(I)Z	d	isInsideBuildHeight
	m	(Ljb;)Z	u	isOutsideBuildHeight
	m	(I)Z	e	isOutsideBuildHeight
	m	(I)I	f	getSectionIndex
	m	(I)I	g	getSectionIndexFromSectionY
	m	(I)I	h	getSectionYFromSectionIndex
	m	(II)Ldmw;	e	create
c	dmw$1	net/minecraft/world/level/LevelHeightAccessor$1
	f	I	a	val$height
	f	I	b	val$minY
	m	(II)V	<init>	<init>
	m	()I	M_	getHeight
	m	()I	L_	getMinY
c	dmx	net/minecraft/world/level/LevelReader
	m	(IILegz;Z)Lefy;	a	getChunk
	m	(II)Z	b	hasChunk
	m	(Leka$a;II)I	a	getHeight
	m	(Leka$a;Ljb;)I	b	getHeight
	m	()I	E_	getSkyDarken
	m	()Ldnz;	I_	getBiomeManager
	m	(Ljb;)Ljl;	v	getBiome
	m	(Lfin;)Ljava/util/stream/Stream;	c	getBlockStatesIfLoaded
	m	(Ljb;Ldme;)I	a	getBlockTint
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
	m	(III)Ljl;	a	getUncachedNoiseBiome
	m	()Z	B_	isClientSide
	m	()I	Q	getSeaLevel
	m	()Lehy;	G_	dimensionType
	m	()I	L_	getMinY
	m	()I	M_	getHeight
	m	(Leka$a;Ljb;)Ljb;	a	getHeightmapPos
	m	(Ljb;)Z	w	isEmptyBlock
	m	(Ljb;)Z	x	canSeeSkyFromBelowWater
	m	(Ljb;)F	y	getPathfindingCostFromLightLevels
	m	(Ljb;)F	z	getLightLevelDependentMagicValue
	m	(Ljb;)Lefy;	A	getChunk
	m	(II)Lefy;	a	getChunk
	m	(IILegz;)Lefy;	a	getChunk
	m	(II)Ldly;	c	getChunkForCollisions
	m	(Ljb;)Z	B	isWaterAt
	m	(Lfin;)Z	d	containsAnyLiquid
	m	(Ljb;)I	C	getMaxLocalRawBrightness
	m	(Ljb;I)I	c	getMaxLocalRawBrightness
	m	(II)Z	f	hasChunkAt
	m	(Ljb;)Z	D	hasChunkAt
	m	(Ljb;Ljb;)Z	a	hasChunksAt
	m	(IIIIII)Z	a	hasChunksAt
	m	(IIII)Z	b	hasChunksAt
	m	()Ljz;	K_	registryAccess
	m	()Lcyd;	L	enabledFeatures
	m	(Lamd;)Ljn;	a	holderLookup
c	dmy	net/minecraft/world/level/LevelSettings
	f	Ljava/lang/String;	a	levelName
	f	Ldmr;	b	gameType
	f	Z	c	hardcore
	f	Lbxg;	d	difficulty
	f	Z	e	allowCommands
	f	Ldmq;	f	gameRules
	f	Ldns;	g	dataConfiguration
	m	(Ljava/lang/String;Ldmr;ZLbxg;ZLdmq;Ldns;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;Ldns;)Ldmy;	a	parse
	m	()Ljava/lang/String;	a	levelName
	m	()Ldmr;	b	gameType
	m	()Z	c	hardcore
	m	()Lbxg;	d	difficulty
	m	()Z	e	allowCommands
	m	()Ldmq;	f	gameRules
	m	()Ldns;	g	getDataConfiguration
	m	(Ldmr;)Ldmy;	a	withGameType
	m	(Lbxg;)Ldmy;	a	withDifficulty
	m	(Ldns;)Ldmy;	a	withDataConfiguration
	m	()Ldmy;	h	copy
	m	(Ljava/lang/Number;)Lbxg;	a	lambda$parse$0
c	dmz	net/minecraft/world/level/LevelSimulatedRW
c	dna	net/minecraft/world/level/LevelSimulatedReader
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	isStateAtPosition
	m	(Ljb;Ljava/util/function/Predicate;)Z	b	isFluidAtPosition
	m	(Ljb;Lebb;)Ljava/util/Optional;	a	getBlockEntity
	m	(Leka$a;Ljb;)Ljb;	a	getHeightmapPos
c	dnb	net/minecraft/world/level/LevelTimeAccess
	m	()J	am	dayTime
	m	()F	as	getMoonBrightness
	m	(F)F	f	getTimeOfDay
	m	()I	at	getMoonPhase
c	dnc	net/minecraft/world/level/LevelWriter
	m	(Ljb;Leeb;II)Z	a	setBlock
	m	(Ljb;Leeb;I)Z	a	setBlock
	m	(Ljb;Z)Z	a	removeBlock
	m	(Ljb;Z)Z	b	destroyBlock
	m	(Ljb;ZLbzm;)Z	a	destroyBlock
	m	(Ljb;ZLbzm;I)Z	a	destroyBlock
	m	(Lbzm;)Z	b	addFreshEntity
c	dnd	net/minecraft/world/level/LightLayer
	f	Ldnd;	a	SKY
	f	Ldnd;	b	BLOCK
	f	[Ldnd;	c	$VALUES
	m	()[Ldnd;	values	values
	m	(Ljava/lang/String;)Ldnd;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldnd;	a	$values
	m	()V	<clinit>	<clinit>
c	dne	net/minecraft/world/level/LocalMobCapCalculator
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	playersNearChunk
	f	Ljava/util/Map;	b	playerMobCounts
	f	Latf;	c	chunkMap
	m	(Latf;)V	<init>	<init>
	m	(Ldlz;)Ljava/util/List;	a	getPlayersNear
	m	(Ldlz;Lcap;)V	a	addMob
	m	(Lcap;Ldlz;)Z	a	canSpawn
	m	(Lauc;)Ldne$a;	a	lambda$addMob$1
	m	(Ldlz;J)Ljava/util/List;	a	lambda$getPlayersNear$0
c	dne$a	net/minecraft/world/level/LocalMobCapCalculator$MobCounts
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	counts
	m	()V	<init>	<init>
	m	(Lcap;)V	a	add
	m	(Lcap;)Z	b	canSpawn
	m	(Lcap;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$add$0
c	dnf	net/minecraft/world/level/NaturalSpawner
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	MIN_SPAWN_DISTANCE
	f	I	a	SPAWN_DISTANCE_CHUNK
	f	I	b	SPAWN_DISTANCE_BLOCK
	f	I	c	INSCRIBED_SQUARE_SPAWN_DISTANCE_CHUNK
	f	I	f	MAGIC_NUMBER
	f	[Lcap;	g	SPAWNING_CATEGORIES
	m	()V	<init>	<init>
	m	(ILjava/lang/Iterable;Ldnf$b;Ldne;)Ldnf$d;	a	createState
	m	(Ljb;Lefy;)Ldnx;	a	getRoughBiome
	m	(Ldnf$d;ZZZ)Ljava/util/List;	a	getFilteredSpawningCategories
	m	(Laub;Legi;Ldnf$d;Ljava/util/List;)V	a	spawnForChunk
	m	(Lcap;Laub;Legi;Ldnf$c;Ldnf$a;)V	a	spawnCategoryForChunk
	m	(Lcap;Laub;Ljb;)V	a	spawnCategoryForPosition
	m	(Lcap;Laub;Lefy;Ljb;Ldnf$c;Ldnf$a;)V	a	spawnCategoryForPosition
	m	(Laub;Lefy;Ljb$a;D)Z	a	isRightDistanceToPlayerAndSpawnPoint
	m	(Laub;Lcap;Ldnq;Lefz;Ldoj$c;Ljb$a;D)Z	a	isValidSpawnPostitionForType
	m	(Laub;Lbzv;)Lcao;	a	getMobForSpawn
	m	(Laub;Lcao;D)Z	a	isValidPositionForMob
	m	(Laub;Ldnq;Lefz;Lcap;Lbck;Ljb;)Ljava/util/Optional;	a	getRandomSpawnMobAt
	m	(Laub;Ldnq;Lefz;Lcap;Ldoj$c;Ljb;)Z	a	canSpawnMobAt
	m	(Laub;Ldnq;Lefz;Lcap;Ljb;Ljl;)Lbvt;	a	mobsAt
	m	(Ljb;Laub;Lcap;Ldnq;)Z	a	isInNetherFortressBounds
	m	(Ldmu;Legi;)Ljb;	a	getRandomPosWithin
	m	(Ldly;Ljb;Leeb;Lfal;Lbzv;)Z	a	isValidEmptySpawnBlock
	m	(Ldnl;Ljl;Ldlz;Lbck;)V	a	spawnMobsForChunkGeneration
	m	(Ldmx;Lbzv;II)Ljb;	a	getTopNonCollidingPos
	m	(Lcao;Lefy;)V	a	lambda$spawnCategoryForPosition$4
	m	(Lbzv;Ljb;Lefy;)Z	a	lambda$spawnCategoryForPosition$3
	m	(Ljb;Lbzm;Ldni;Ldne;Lcap;Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Legi;)V	a	lambda$createState$2
	m	(I)[Lcap;	a	lambda$static$1
	m	(Lcap;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnf$a	net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback
	m	(Lcao;Lefy;)V	run	run
c	dnf$b	net/minecraft/world/level/NaturalSpawner$ChunkGetter
	m	(JLjava/util/function/Consumer;)V	query	query
c	dnf$c	net/minecraft/world/level/NaturalSpawner$SpawnPredicate
	m	(Lbzv;Ljb;Lefy;)Z	test	test
c	dnf$d	net/minecraft/world/level/NaturalSpawner$SpawnState
	f	I	a	spawnableChunkCount
	f	Lit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;	b	mobCategoryCounts
	f	Ldni;	c	spawnPotential
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	unmodifiableMobCategoryCounts
	f	Ldne;	e	localMobCapCalculator
	f	Ljb;	f	lastCheckedPos
	f	Lbzv;	g	lastCheckedType
	f	D	h	lastCharge
	m	(ILit/unimi/dsi/fastutil/objects/Object2IntOpenHashMap;Ldni;Ldne;)V	<init>	<init>
	m	(Lbzv;Ljb;Lefy;)Z	a	canSpawn
	m	(Lcao;Lefy;)V	a	afterSpawn
	m	()I	a	getSpawnableChunkCount
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	getMobCategoryCounts
	m	(Lcap;)Z	a	canSpawnForCategoryGlobal
	m	(Lcap;Ldlz;)Z	a	canSpawnForCategoryLocal
c	dng	net/minecraft/world/level/NoiseColumn
	f	I	a	minY
	f	[Leeb;	b	column
	m	(I[Leeb;)V	<init>	<init>
	m	(I)Leeb;	a	getBlock
	m	(ILeeb;)V	a	setBlock
c	dnh	net/minecraft/world/level/PathNavigationRegion
	f	I	a	centerX
	f	I	b	centerZ
	f	[[Lefy;	c	chunks
	f	Z	d	allEmpty
	f	Ldmu;	e	level
	f	Ljava/util/function/Supplier;	f	plains
	m	(Ldmu;Ljb;Ljb;)V	<init>	<init>
	m	(Ljb;)Lefy;	d	getChunk
	m	(II)Lefy;	a	getChunk
	m	()Left;	F_	getWorldBorder
	m	(II)Ldly;	c	getChunkForCollisions
	m	(Lbzm;Lfin;)Ljava/util/List;	c	getEntityCollisions
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	()I	L_	getMinY
	m	()I	M_	getHeight
	m	(Ldmu;)Ljl;	a	lambda$new$0
c	dni	net/minecraft/world/level/PotentialCalculator
	f	Ljava/util/List;	a	charges
	m	()V	<init>	<init>
	m	(Ljb;D)V	a	addCharge
	m	(Ljb;D)D	b	getPotentialEnergyChange
c	dni$a	net/minecraft/world/level/PotentialCalculator$PointCharge
	f	Ljb;	a	pos
	f	D	b	charge
	m	(Ljb;D)V	<init>	<init>
	m	(Ljb;)D	a	getPotentialChange
c	dnj	net/minecraft/world/level/ScheduledTickAccess
	m	(Ljb;Ljava/lang/Object;ILfko;)Lfkk;	a	createTick
	m	(Ljb;Ljava/lang/Object;I)Lfkk;	a	createTick
	m	()Lfkg;	V	getBlockTicks
	m	(Ljb;Ldpz;ILfko;)V	a	scheduleTick
	m	(Ljb;Ldpz;I)V	a	scheduleTick
	m	()Lfkg;	U	getFluidTicks
	m	(Ljb;Lfak;ILfko;)V	a	scheduleTick
	m	(Ljb;Lfak;I)V	a	scheduleTick
c	dnk	net/minecraft/world/level/ServerExplosion
	f	Ldmo;	a	EXPLOSION_DAMAGE_CALCULATOR
	f	I	b	MAX_DROPS_PER_COMBINED_STACK
	f	F	c	LARGE_EXPLOSION_RADIUS
	f	Z	d	fire
	f	Ldmn$a;	e	blockInteraction
	f	Laub;	f	level
	f	Lfis;	g	center
	f	Lbzm;	h	source
	f	F	i	radius
	f	Lbyb;	j	damageSource
	f	Ldmo;	k	damageCalculator
	f	Ljava/util/Map;	l	hitPlayers
	m	(Laub;Lbzm;Lbyb;Ldmo;Lfis;FZLdmn$a;)V	<init>	<init>
	m	(Lbzm;)Ldmo;	b	makeDamageCalculator
	m	(Lfis;Lbzm;)F	a	getSeenPercent
	m	()F	e	radius
	m	()Lfis;	f	center
	m	()Ljava/util/List;	m	calculateExplodedPositions
	m	()V	n	hurtEntities
	m	(Ljava/util/List;)V	a	interactWithBlocks
	m	(Ljava/util/List;)V	b	createFire
	m	()V	i	explode
	m	(Ljava/util/List;Ldcv;Ljb;)V	a	addOrAppendStack
	m	()Z	o	interactsWithBlocks
	m	()Ljava/util/Map;	j	getHitPlayers
	m	()Laub;	a	level
	m	()Lcam;	c	getIndirectSourceEntity
	m	()Lbzm;	d	getDirectSourceEntity
	m	()Lbyb;	k	getDamageSource
	m	()Ldmn$a;	b	getBlockInteraction
	m	()Z	g	canTriggerBlocks
	m	()Z	h	shouldAffectBlocklikeEntities
	m	()Z	l	isSmall
	m	(Ljava/util/List;Ldcv;Ljb;)V	b	lambda$interactWithBlocks$0
	m	()V	<clinit>	<clinit>
c	dnk$a	net/minecraft/world/level/ServerExplosion$StackCollector
	f	Ljb;	a	pos
	f	Ldcv;	b	stack
	m	(Ljb;Ldcv;)V	<init>	<init>
	m	(Ldcv;)V	a	tryMerge
c	dnl	net/minecraft/world/level/ServerLevelAccessor
	m	()Laub;	a	getLevel
	m	(Lbzm;)V	a_	addFreshEntityWithPassengers
c	dnm	net/minecraft/world/level/SignalGetter
	f	[Ljh;	D	DIRECTIONS
	m	(Ljb;Ljh;)I	a	getDirectSignal
	m	(Ljb;)I	e_	getDirectSignalTo
	m	(Ljb;Ljh;Z)I	a	getControlInputSignal
	m	(Ljb;Ljh;)Z	b	hasSignal
	m	(Ljb;Ljh;)I	c	getSignal
	m	(Ljb;)Z	E	hasNeighborSignal
	m	(Ljb;)I	F	getBestNeighborSignal
	m	()V	<clinit>	<clinit>
c	dnn	net/minecraft/world/level/SimpleExplosionDamageCalculator
	f	Z	a	explodesBlocks
	f	Z	b	damagesEntities
	f	Ljava/util/Optional;	c	knockbackMultiplier
	f	Ljava/util/Optional;	d	immuneBlocks
	m	(ZZLjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;)Ljava/util/Optional;	a	getBlockExplosionResistance
	m	(Ldmn;Ldly;Ljb;Leeb;F)Z	a	shouldBlockExplode
	m	(Ldmn;Lbzm;)Z	a	shouldDamageEntity
	m	(Lbzm;)F	a	getKnockbackMultiplier
	m	(Lbzm;)Ljava/lang/Float;	b	lambda$getKnockbackMultiplier$0
c	dno	net/minecraft/world/level/SpawnData
	f	Lui;	d	entityToSpawn
	f	Ljava/util/Optional;	e	customSpawnRules
	f	Ljava/util/Optional;	f	equipment
	f	Ljava/lang/String;	a	ENTITY_TAG
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	m	()V	<init>	<init>
	m	(Lui;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lui;	a	getEntityToSpawn
	m	()Ljava/util/Optional;	b	getCustomSpawnRules
	m	()Ljava/util/Optional;	c	getEquipment
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lui;	d	entityToSpawn
	m	()Ljava/util/Optional;	e	customSpawnRules
	m	()Ljava/util/Optional;	f	equipment
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldno;)Ljava/util/Optional;	a	lambda$static$2
	m	(Ldno;)Ljava/util/Optional;	b	lambda$static$1
	m	(Ldno;)Lui;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dno$a	net/minecraft/world/level/SpawnData$CustomSpawnRules
	f	Lbbt;	b	blockLightLimit
	f	Lbbt;	c	skyLightLimit
	f	Lbbt;	d	LIGHT_RANGE
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lbbt;Lbbt;)V	<init>	<init>
	m	(Lbbt;)Lcom/mojang/serialization/DataResult;	a	checkLightBoundaries
	m	(Ljava/lang/String;)Lcom/mojang/serialization/MapCodec;	a	lightLimit
	m	(Ljb;Laub;)Z	a	isValidPosition
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbbt;	a	blockLightLimit
	m	()Lbbt;	b	skyLightLimit
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldno$a;)Lbbt;	a	lambda$static$2
	m	(Ldno$a;)Lbbt;	b	lambda$static$1
	m	()Ljava/lang/String;	c	lambda$checkLightBoundaries$0
	m	()V	<clinit>	<clinit>
c	dnp	net/minecraft/world/level/Spawner
	m	(Lbzv;Lbck;)V	a	setEntityId
	m	(Ldfd;Ljava/util/function/Consumer;Ljava/lang/String;)V	a	appendHoverText
	m	(Ldfd;Ljava/lang/String;)Lxo;	a	getSpawnEntityDisplayName
	m	(Lbzv;)Lyc;	a	lambda$getSpawnEntityDisplayName$2
	m	(Lui;)Ljava/util/Optional;	a	lambda$getSpawnEntityDisplayName$1
	m	(Lui;)Ljava/util/Optional;	b	lambda$getSpawnEntityDisplayName$0
c	dnq	net/minecraft/world/level/StructureManager
	f	Ldmv;	a	level
	f	Leky;	b	worldOptions
	f	Leuz;	c	structureCheck
	m	(Ldmv;Leky;Leuz;)V	<init>	<init>
	m	(Lauj;)Ldnq;	a	forWorldGenRegion
	m	(Ldlz;Ljava/util/function/Predicate;)Ljava/util/List;	a	startsForStructure
	m	(Lke;Leuy;)Ljava/util/List;	a	startsForStructure
	m	(Leuy;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V	a	fillStartsForStructure
	m	(Lke;Leuy;Legu;)Levg;	a	getStartForStructure
	m	(Lke;Leuy;Levg;Legu;)V	a	setStartForStructure
	m	(Lke;Leuy;JLegu;)V	a	addReferenceForStructure
	m	()Z	a	shouldGenerateStructures
	m	(Ljb;Leuy;)Levg;	a	getStructureAt
	m	(Ljb;Lbae;)Levg;	a	getStructureWithPieceAt
	m	(Ljb;Ljp;)Levg;	a	getStructureWithPieceAt
	m	(Ljb;Ljava/util/function/Predicate;)Levg;	a	getStructureWithPieceAt
	m	(Ljb;Leuy;)Levg;	b	getStructureWithPieceAt
	m	(Ljb;Levg;)Z	a	structureHasPieceAt
	m	(Ljb;)Z	a	hasAnyStructureAt
	m	(Ljb;)Ljava/util/Map;	b	getAllStructuresAt
	m	(Ldlz;Leuy;Levv;Z)Leva;	a	checkStructurePresence
	m	(Levg;)V	a	addReference
	m	()Ljz;	b	registryAccess
	m	(Ljy;Ljava/util/function/Predicate;Leuy;)Z	a	lambda$getStructureWithPieceAt$1
	m	(Lbae;Ljl;)Z	a	lambda$getStructureWithPieceAt$0
c	dnr	net/minecraft/world/level/TicketStorage
	f	I	c	INITIAL_TICKET_LIST_CAPACITY
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lcom/mojang/serialization/Codec;	e	TICKET_ENTRY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfby;	b	TYPE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	f	tickets
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	g	deactivatedTickets
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	h	chunksWithForcedTickets
	f	Ldnr$a;	i	loadingChunkUpdatedListener
	f	Ldnr$a;	j	simulationChunkUpdatedListener
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Ljava/util/List;)Ldnr;	a	fromPacked
	m	()Ljava/util/List;	g	packTickets
	m	(Ljava/util/function/BiConsumer;)V	a	forEachTicket
	m	(Ljava/util/function/BiConsumer;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	a	forEachTicket
	m	()V	a	activateAllDeactivatedTickets
	m	(Ldnr$a;)V	a	setLoadingChunkUpdatedListener
	m	(Ldnr$a;)V	b	setSimulationChunkUpdatedListener
	m	()Z	b	hasTickets
	m	(J)Ljava/util/List;	a	getTickets
	m	(J)Ljava/util/List;	b	getOrCreateTickets
	m	(Laui;Ldlz;I)V	a	addTicketWithRadius
	m	(Lauh;Ldlz;)V	a	addTicket
	m	(JLauh;)Z	a	addTicket
	m	(Lauh;Lauh;)Z	a	isTicketSameTypeAndLevel
	m	(JZ)I	a	getTicketLevelAt
	m	(Ljava/util/List;Z)I	a	getTicketLevelAt
	m	(Ljava/util/List;Z)Lauh;	b	getLowestTicket
	m	(Laui;Ldlz;I)V	b	removeTicketWithRadius
	m	(Lauh;Ldlz;)V	b	removeTicket
	m	(JLauh;)Z	b	removeTicket
	m	()V	h	updateForcedChunks
	m	(JZ)Ljava/lang/String;	b	getTicketDebugString
	m	(Latf;)V	a	purgeStaleTickets
	m	()V	c	deactivateTicketsOnClosing
	m	(Ljava/util/function/BiPredicate;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	a	removeTicketIf
	m	(ILaui;)V	a	replaceTicketLevelOfType
	m	(Ldlz;Z)Z	a	updateChunkForced
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	d	getForceLoadedChunks
	m	(Ljava/util/function/Predicate;)Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithTicketThat
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectMap$Entry;J)Ljava/util/List;	a	lambda$removeTicketIf$7
	m	(Ljava/lang/Long;Lauh;)Z	a	lambda$deactivateTicketsOnClosing$6
	m	(Latf;Ljava/lang/Long;Lauh;)Z	a	lambda$purgeStaleTickets$5
	m	(Lauh;)Z	a	lambda$updateForcedChunks$4
	m	(J)Ljava/util/List;	c	lambda$getOrCreateTickets$3
	m	(Ljava/util/List;Ldlz;Lauh;)V	a	lambda$packTickets$2
	m	(J)Ljava/util/List;	d	lambda$fromPacked$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnr$a	net/minecraft/world/level/TicketStorage$ChunkUpdated
	m	(JIZ)V	update	update
c	dns	net/minecraft/world/level/WorldDataConfiguration
	f	Ldmh;	e	dataPacks
	f	Lcyd;	f	enabledFeatures
	f	Ljava/lang/String;	a	ENABLED_FEATURES_ID
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ldns;	d	DEFAULT
	m	(Ldmh;Lcyd;)V	<init>	<init>
	m	(Lcyd;)Ldns;	a	expandFeatures
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldmh;	a	dataPacks
	m	()Lcyd;	b	enabledFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnt	net/minecraft/world/level/WorldGenLevel
	m	()J	F	getSeed
	m	(Ljb;)Z	f_	ensureCanWrite
	m	(Ljava/util/function/Supplier;)V	a	setCurrentlyGenerating
c	dnu	net/minecraft/world/level/biome/AmbientAdditionsSettings
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljl;	b	soundEvent
	f	D	c	tickChance
	m	(Ljl;D)V	<init>	<init>
	m	()Ljl;	a	getSoundEvent
	m	()D	b	getTickChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldnu;)Ljava/lang/Double;	a	lambda$static$1
	m	(Ldnu;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnv	net/minecraft/world/level/biome/AmbientMoodSettings
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldnv;	b	LEGACY_CAVE_SETTINGS
	f	Ljl;	c	soundEvent
	f	I	d	tickDelay
	f	I	e	blockSearchExtent
	f	D	f	soundPositionOffset
	m	(Ljl;IID)V	<init>	<init>
	m	()Ljl;	a	getSoundEvent
	m	()I	b	getTickDelay
	m	()I	c	getBlockSearchExtent
	m	()D	d	getSoundPositionOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldnv;)Ljava/lang/Double;	a	lambda$static$3
	m	(Ldnv;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Ldnv;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Ldnv;)Ljl;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnw	net/minecraft/world/level/biome/AmbientParticleSettings
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lmc;	b	options
	f	F	c	probability
	m	(Lmc;F)V	<init>	<init>
	m	()Lmc;	a	getOptions
	m	(Lbck;)Z	a	canSpawn
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldnw;)Ljava/lang/Float;	a	lambda$static$1
	m	(Ldnw;)Lmc;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnx	net/minecraft/world/level/biome/Biome
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	NETWORK_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Lezq;	f	TEMPERATURE_NOISE
	f	Lezq;	g	FROZEN_TEMPERATURE_NOISE
	f	Lezq;	e	BIOME_INFO_NOISE
	f	I	h	TEMPERATURE_CACHE_SIZE
	f	Ldnx$b;	i	climateSettings
	f	Ldny;	j	generationSettings
	f	Ldoj;	k	mobSettings
	f	Ldod;	l	specialEffects
	f	Ljava/lang/ThreadLocal;	m	temperatureCache
	m	(Ldnx$b;Ldod;Ldny;Ldoj;)V	<init>	<init>
	m	()I	a	getSkyColor
	m	()Ldoj;	b	getMobSettings
	m	()Z	c	hasPrecipitation
	m	(Ljb;I)Ldnx$c;	a	getPrecipitationAt
	m	(Ljb;I)F	e	getHeightAdjustedTemperature
	m	(Ljb;I)F	f	getTemperature
	m	(Ldmx;Ljb;)Z	a	shouldFreeze
	m	(Ldmx;Ljb;Z)Z	a	shouldFreeze
	m	(Ljb;I)Z	b	coldEnoughToSnow
	m	(Ljb;I)Z	c	warmEnoughToRain
	m	(Ljb;I)Z	d	shouldMeltFrozenOceanIcebergSlightly
	m	(Ldmx;Ljb;)Z	b	shouldSnow
	m	()Ldny;	d	getGenerationSettings
	m	()I	e	getFogColor
	m	(DD)I	a	getGrassColor
	m	()I	r	getBaseGrassColor
	m	()I	s	getGrassColorFromTexture
	m	()I	f	getFoliageColor
	m	()I	t	getFoliageColorFromTexture
	m	()I	g	getDryFoliageColor
	m	()I	u	getDryFoliageColorFromTexture
	m	()F	h	getBaseTemperature
	m	()Ldod;	i	getSpecialEffects
	m	()I	j	getWaterColor
	m	()I	k	getWaterFogColor
	m	()Ljava/util/Optional;	l	getAmbientParticle
	m	()Ljava/util/Optional;	m	getAmbientLoop
	m	()Ljava/util/Optional;	n	getAmbientMood
	m	()Ljava/util/Optional;	o	getAmbientAdditions
	m	()Ljava/util/Optional;	p	getBackgroundMusic
	m	()F	q	getBackgroundMusicVolume
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	v	lambda$new$10
	m	()Lit/unimi/dsi/fastutil/longs/Long2FloatLinkedOpenHashMap;	w	lambda$new$9
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
	m	(Ldnx$b;Ldod;)Ldnx;	a	lambda$static$7
	m	(Ldnx;)Ldod;	a	lambda$static$6
	m	(Ldnx;)Ldnx$b;	b	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Ldnx;)Ldoj;	c	lambda$static$3
	m	(Ldnx;)Ldny;	d	lambda$static$2
	m	(Ldnx;)Ldod;	e	lambda$static$1
	m	(Ldnx;)Ldnx$b;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnx$1	net/minecraft/world/level/biome/Biome$1
	f	Ldnx;	a	this$0
	m	(Ldnx;IF)V	<init>	<init>
	m	(I)V	rehash	rehash
c	dnx$a	net/minecraft/world/level/biome/Biome$BiomeBuilder
	f	Z	a	hasPrecipitation
	f	Ljava/lang/Float;	b	temperature
	f	Ldnx$d;	c	temperatureModifier
	f	Ljava/lang/Float;	d	downfall
	f	Ldod;	e	specialEffects
	f	Ldoj;	f	mobSpawnSettings
	f	Ldny;	g	generationSettings
	m	()V	<init>	<init>
	m	(Z)Ldnx$a;	a	hasPrecipitation
	m	(F)Ldnx$a;	a	temperature
	m	(F)Ldnx$a;	b	downfall
	m	(Ldod;)Ldnx$a;	a	specialEffects
	m	(Ldoj;)Ldnx$a;	a	mobSpawnSettings
	m	(Ldny;)Ldnx$a;	a	generationSettings
	m	(Ldnx$d;)Ldnx$a;	a	temperatureAdjustment
	m	()Ldnx;	a	build
	m	()Ljava/lang/String;	toString	toString
c	dnx$b	net/minecraft/world/level/biome/Biome$ClimateSettings
	f	Z	b	hasPrecipitation
	f	F	c	temperature
	f	Ldnx$d;	d	temperatureModifier
	f	F	e	downfall
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(ZFLdnx$d;F)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	hasPrecipitation
	m	()F	b	temperature
	m	()Ldnx$d;	c	temperatureModifier
	m	()F	d	downfall
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldnx$b;)Ljava/lang/Float;	a	lambda$static$3
	m	(Ldnx$b;)Ldnx$d;	b	lambda$static$2
	m	(Ldnx$b;)Ljava/lang/Float;	c	lambda$static$1
	m	(Ldnx$b;)Ljava/lang/Boolean;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dnx$c	net/minecraft/world/level/biome/Biome$Precipitation
	f	Ldnx$c;	a	NONE
	f	Ldnx$c;	b	RAIN
	f	Ldnx$c;	c	SNOW
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Ldnx$c;	f	$VALUES
	m	()[Ldnx$c;	values	values
	m	(Ljava/lang/String;)Ldnx$c;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldnx$c;	a	$values
	m	()V	<clinit>	<clinit>
c	dnx$d	net/minecraft/world/level/biome/Biome$TemperatureModifier
	f	Ldnx$d;	a	NONE
	f	Ldnx$d;	b	FROZEN
	f	Ljava/lang/String;	d	name
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	[Ldnx$d;	e	$VALUES
	m	()[Ldnx$d;	values	values
	m	(Ljava/lang/String;)Ldnx$d;	valueOf	valueOf
	m	(Ljb;F)F	a	modifyTemperature
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldnx$d;	b	$values
	m	()V	<clinit>	<clinit>
c	dnx$d$1	net/minecraft/world/level/biome/Biome$TemperatureModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljb;F)F	a	modifyTemperature
c	dnx$d$2	net/minecraft/world/level/biome/Biome$TemperatureModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Ljb;F)F	a	modifyTemperature
c	dny	net/minecraft/world/level/biome/BiomeGenerationSettings
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ldny;	a	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljp;	d	carvers
	f	Ljava/util/List;	e	features
	f	Ljava/util/function/Supplier;	f	flowerFeatures
	f	Ljava/util/function/Supplier;	g	featureSet
	m	(Ljp;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/Iterable;	a	getCarvers
	m	()Ljava/util/List;	b	getFlowerFeatures
	m	()Ljava/util/List;	c	features
	m	(Leuc;)Z	a	hasFeature
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$new$5
	m	(Ljava/util/List;)Ljava/util/List;	b	lambda$new$4
	m	(Lems;)Z	a	lambda$new$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldny;)Ljava/util/List;	a	lambda$static$1
	m	(Ldny;)Ljp;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dny$a	net/minecraft/world/level/biome/BiomeGenerationSettings$Builder
	f	Ljm;	a	placedFeatures
	f	Ljm;	b	worldCarvers
	m	(Ljm;Ljm;)V	<init>	<init>
	m	(Lejw$a;Lamd;)Ldny$a;	a	addFeature
	m	(Lamd;)Ldny$a;	a	addCarver
c	dny$b	net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder
	f	Ljava/util/List;	a	carvers
	f	Ljava/util/List;	b	features
	m	()V	<init>	<init>
	m	(Lejw$a;Ljl;)Ldny$b;	a	addFeature
	m	(ILjl;)Ldny$b;	a	addFeature
	m	(Ljl;)Ldny$b;	a	addCarver
	m	(I)V	a	addFeatureStepsUpTo
	m	()Ldny;	a	build
c	dnz	net/minecraft/world/level/biome/BiomeManager
	f	I	a	CHUNK_CENTER_QUART
	f	I	b	ZOOM_BITS
	f	I	c	ZOOM
	f	I	d	ZOOM_MASK
	f	Ldnz$a;	e	noiseBiomeSource
	f	J	f	biomeZoomSeed
	m	(Ldnz$a;J)V	<init>	<init>
	m	(J)J	a	obfuscateSeed
	m	(Ldnz$a;)Ldnz;	a	withDifferentSource
	m	(Ljb;)Ljl;	a	getBiome
	m	(DDD)Ljl;	a	getNoiseBiomeAtPosition
	m	(Ljb;)Ljl;	b	getNoiseBiomeAtPosition
	m	(III)Ljl;	a	getNoiseBiomeAtQuart
	m	(JIIIDDD)D	a	getFiddledDistance
	m	(J)D	b	getFiddle
	m	()V	<clinit>	<clinit>
c	dnz$a	net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
c	doa	net/minecraft/world/level/biome/BiomeResolver
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
c	dob	net/minecraft/world/level/biome/BiomeSource
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Supplier;	b	possibleBiomes
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Ljava/util/Set;	c	possibleBiomes
	m	(IIIILdog$f;)Ljava/util/Set;	a	getBiomesWithin
	m	(IIIILjava/util/function/Predicate;Lbck;Ldog$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(Ljb;IIILjava/util/function/Predicate;Ldog$f;Ldmx;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
	m	(IIIIILjava/util/function/Predicate;Lbck;ZLdog$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Ljava/util/List;Ljb;Ldog$f;)V	a	addDebugInfo
	m	()Ljava/util/Set;	d	lambda$new$0
	m	()V	<clinit>	<clinit>
c	doc	net/minecraft/world/level/biome/BiomeSources
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	dod	net/minecraft/world/level/biome/BiomeSpecialEffects
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	fogColor
	f	I	c	waterColor
	f	I	d	waterFogColor
	f	I	e	skyColor
	f	Ljava/util/Optional;	f	foliageColorOverride
	f	Ljava/util/Optional;	g	dryFoliageColorOverride
	f	Ljava/util/Optional;	h	grassColorOverride
	f	Ldod$b;	i	grassColorModifier
	f	Ljava/util/Optional;	j	ambientParticleSettings
	f	Ljava/util/Optional;	k	ambientLoopSoundEvent
	f	Ljava/util/Optional;	l	ambientMoodSettings
	f	Ljava/util/Optional;	m	ambientAdditionsSettings
	f	Ljava/util/Optional;	n	backgroundMusic
	f	F	o	backgroundMusicVolume
	m	(IIIILjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ldod$b;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;F)V	<init>	<init>
	m	()I	a	getFogColor
	m	()I	b	getWaterColor
	m	()I	c	getWaterFogColor
	m	()I	d	getSkyColor
	m	()Ljava/util/Optional;	e	getFoliageColorOverride
	m	()Ljava/util/Optional;	f	getDryFoliageColorOverride
	m	()Ljava/util/Optional;	g	getGrassColorOverride
	m	()Ldod$b;	h	getGrassColorModifier
	m	()Ljava/util/Optional;	i	getAmbientParticleSettings
	m	()Ljava/util/Optional;	j	getAmbientLoopSoundEvent
	m	()Ljava/util/Optional;	k	getAmbientMoodSettings
	m	()Ljava/util/Optional;	l	getAmbientAdditionsSettings
	m	()Ljava/util/Optional;	m	getBackgroundMusic
	m	()F	n	getBackgroundMusicVolume
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$14
	m	(Ldod;)Ljava/lang/Float;	a	lambda$static$13
	m	(Ldod;)Ljava/util/Optional;	b	lambda$static$12
	m	(Ldod;)Ljava/util/Optional;	c	lambda$static$11
	m	(Ldod;)Ljava/util/Optional;	d	lambda$static$10
	m	(Ldod;)Ljava/util/Optional;	e	lambda$static$9
	m	(Ldod;)Ljava/util/Optional;	f	lambda$static$8
	m	(Ldod;)Ldod$b;	g	lambda$static$7
	m	(Ldod;)Ljava/util/Optional;	h	lambda$static$6
	m	(Ldod;)Ljava/util/Optional;	i	lambda$static$5
	m	(Ldod;)Ljava/util/Optional;	j	lambda$static$4
	m	(Ldod;)Ljava/lang/Integer;	k	lambda$static$3
	m	(Ldod;)Ljava/lang/Integer;	l	lambda$static$2
	m	(Ldod;)Ljava/lang/Integer;	m	lambda$static$1
	m	(Ldod;)Ljava/lang/Integer;	n	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dod$a	net/minecraft/world/level/biome/BiomeSpecialEffects$Builder
	f	Ljava/util/OptionalInt;	a	fogColor
	f	Ljava/util/OptionalInt;	b	waterColor
	f	Ljava/util/OptionalInt;	c	waterFogColor
	f	Ljava/util/OptionalInt;	d	skyColor
	f	Ljava/util/Optional;	e	foliageColorOverride
	f	Ljava/util/Optional;	f	dryFoliageColorOverride
	f	Ljava/util/Optional;	g	grassColorOverride
	f	Ldod$b;	h	grassColorModifier
	f	Ljava/util/Optional;	i	ambientParticle
	f	Ljava/util/Optional;	j	ambientLoopSoundEvent
	f	Ljava/util/Optional;	k	ambientMoodSettings
	f	Ljava/util/Optional;	l	ambientAdditionsSettings
	f	Ljava/util/Optional;	m	backgroundMusic
	f	F	n	backgroundMusicVolume
	m	()V	<init>	<init>
	m	(I)Ldod$a;	a	fogColor
	m	(I)Ldod$a;	b	waterColor
	m	(I)Ldod$a;	c	waterFogColor
	m	(I)Ldod$a;	d	skyColor
	m	(I)Ldod$a;	e	foliageColorOverride
	m	(I)Ldod$a;	f	dryFoliageColorOverride
	m	(I)Ldod$a;	g	grassColorOverride
	m	(Ldod$b;)Ldod$a;	a	grassColorModifier
	m	(Ldnw;)Ldod$a;	a	ambientParticle
	m	(Ljl;)Ldod$a;	a	ambientLoopSound
	m	(Ldnv;)Ldod$a;	a	ambientMoodSound
	m	(Ldnu;)Ldod$a;	a	ambientAdditionsSound
	m	(Layw;)Ldod$a;	a	backgroundMusic
	m	()Ldod$a;	a	silenceAllBackgroundMusic
	m	(Lbvt;)Ldod$a;	a	backgroundMusic
	m	(F)Ldod$a;	a	backgroundMusicVolume
	m	()Ldod;	b	build
	m	()Ljava/lang/IllegalStateException;	c	lambda$build$3
	m	()Ljava/lang/IllegalStateException;	d	lambda$build$2
	m	()Ljava/lang/IllegalStateException;	e	lambda$build$1
	m	()Ljava/lang/IllegalStateException;	f	lambda$build$0
c	dod$b	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier
	f	Ldod$b;	a	NONE
	f	Ldod$b;	b	DARK_FOREST
	f	Ldod$b;	c	SWAMP
	f	Ljava/lang/String;	e	name
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	[Ldod$b;	f	$VALUES
	m	()[Ldod$b;	values	values
	m	(Ljava/lang/String;)Ldod$b;	valueOf	valueOf
	m	(DDI)I	a	modifyColor
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldod$b;	b	$values
	m	()V	<clinit>	<clinit>
c	dod$b$1	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(DDI)I	a	modifyColor
c	dod$b$2	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(DDI)I	a	modifyColor
c	dod$b$3	net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(DDI)I	a	modifyColor
c	doe	net/minecraft/world/level/biome/Biomes
	f	Lamd;	a	THE_VOID
	f	Lamd;	b	PLAINS
	f	Lamd;	c	SUNFLOWER_PLAINS
	f	Lamd;	d	SNOWY_PLAINS
	f	Lamd;	e	ICE_SPIKES
	f	Lamd;	f	DESERT
	f	Lamd;	g	SWAMP
	f	Lamd;	h	MANGROVE_SWAMP
	f	Lamd;	i	FOREST
	f	Lamd;	j	FLOWER_FOREST
	f	Lamd;	k	BIRCH_FOREST
	f	Lamd;	l	DARK_FOREST
	f	Lamd;	m	PALE_GARDEN
	f	Lamd;	n	OLD_GROWTH_BIRCH_FOREST
	f	Lamd;	o	OLD_GROWTH_PINE_TAIGA
	f	Lamd;	p	OLD_GROWTH_SPRUCE_TAIGA
	f	Lamd;	q	TAIGA
	f	Lamd;	r	SNOWY_TAIGA
	f	Lamd;	s	SAVANNA
	f	Lamd;	t	SAVANNA_PLATEAU
	f	Lamd;	u	WINDSWEPT_HILLS
	f	Lamd;	v	WINDSWEPT_GRAVELLY_HILLS
	f	Lamd;	w	WINDSWEPT_FOREST
	f	Lamd;	x	WINDSWEPT_SAVANNA
	f	Lamd;	y	JUNGLE
	f	Lamd;	z	SPARSE_JUNGLE
	f	Lamd;	A	BAMBOO_JUNGLE
	f	Lamd;	B	BADLANDS
	f	Lamd;	C	ERODED_BADLANDS
	f	Lamd;	D	WOODED_BADLANDS
	f	Lamd;	E	MEADOW
	f	Lamd;	F	CHERRY_GROVE
	f	Lamd;	G	GROVE
	f	Lamd;	H	SNOWY_SLOPES
	f	Lamd;	I	FROZEN_PEAKS
	f	Lamd;	J	JAGGED_PEAKS
	f	Lamd;	K	STONY_PEAKS
	f	Lamd;	L	RIVER
	f	Lamd;	M	FROZEN_RIVER
	f	Lamd;	N	BEACH
	f	Lamd;	O	SNOWY_BEACH
	f	Lamd;	P	STONY_SHORE
	f	Lamd;	Q	WARM_OCEAN
	f	Lamd;	R	LUKEWARM_OCEAN
	f	Lamd;	S	DEEP_LUKEWARM_OCEAN
	f	Lamd;	T	OCEAN
	f	Lamd;	U	DEEP_OCEAN
	f	Lamd;	V	COLD_OCEAN
	f	Lamd;	W	DEEP_COLD_OCEAN
	f	Lamd;	X	FROZEN_OCEAN
	f	Lamd;	Y	DEEP_FROZEN_OCEAN
	f	Lamd;	Z	MUSHROOM_FIELDS
	f	Lamd;	aa	DRIPSTONE_CAVES
	f	Lamd;	ab	LUSH_CAVES
	f	Lamd;	ac	DEEP_DARK
	f	Lamd;	ad	NETHER_WASTES
	f	Lamd;	ae	WARPED_FOREST
	f	Lamd;	af	CRIMSON_FOREST
	f	Lamd;	ag	SOUL_SAND_VALLEY
	f	Lamd;	ah	BASALT_DELTAS
	f	Lamd;	ai	THE_END
	f	Lamd;	aj	END_HIGHLANDS
	f	Lamd;	ak	END_MIDLANDS
	f	Lamd;	al	SMALL_END_ISLANDS
	f	Lamd;	am	END_BARRENS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	register
	m	()V	<clinit>	<clinit>
c	dof	net/minecraft/world/level/biome/CheckerboardColumnBiomeSource
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljp;	c	allowedBiomes
	f	I	d	bitShift
	f	I	e	size
	m	(Ljp;I)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldof;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ldof;)Ljp;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dog	net/minecraft/world/level/biome/Climate
	f	Z	b	DEBUG_SLOW_BIOME_SEARCH
	f	F	c	QUANTIZATION_FACTOR
	f	I	a	PARAMETER_COUNT
	m	()V	<init>	<init>
	m	(FFFFFF)Ldog$h;	a	target
	m	(FFFFFFF)Ldog$d;	a	parameters
	m	(Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;F)Ldog$d;	a	parameters
	m	(F)J	a	quantizeCoord
	m	(J)F	a	unquantizeCoord
	m	()Ldog$f;	a	empty
	m	(Ljava/util/List;Ldog$f;)Ljb;	a	findSpawnPosition
c	dog$a	net/minecraft/world/level/biome/Climate$DistanceMetric
	m	(Ldog$e$b;[J)J	distance	distance
c	dog$b	net/minecraft/world/level/biome/Climate$Parameter
	f	J	b	min
	f	J	c	max
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(JJ)V	<init>	<init>
	m	(F)Ldog$b;	a	point
	m	(FF)Ldog$b;	a	span
	m	(Ldog$b;Ldog$b;)Ldog$b;	a	span
	m	()Ljava/lang/String;	toString	toString
	m	(J)J	a	distance
	m	(Ldog$b;)J	a	distance
	m	(Ldog$b;)Ldog$b;	b	span
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	a	min
	m	()J	b	max
	m	(Ldog$b;)Ljava/lang/Float;	c	lambda$static$3
	m	(Ldog$b;)Ljava/lang/Float;	d	lambda$static$2
	m	(Ljava/lang/Float;Ljava/lang/Float;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/lang/Float;Ljava/lang/Float;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dog$c	net/minecraft/world/level/biome/Climate$ParameterList
	f	Ljava/util/List;	a	values
	f	Ldog$e;	b	index
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	values
	m	(Ldog$h;)Ljava/lang/Object;	a	findValue
	m	(Ldog$h;)Ljava/lang/Object;	b	findValueBruteForce
	m	(Ldog$h;)Ljava/lang/Object;	c	findValueIndex
	m	(Ldog$h;Ldog$a;)Ljava/lang/Object;	a	findValueIndex
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
c	dog$d	net/minecraft/world/level/biome/Climate$ParameterPoint
	f	Ldog$b;	b	temperature
	f	Ldog$b;	c	humidity
	f	Ldog$b;	d	continentalness
	f	Ldog$b;	e	erosion
	f	Ldog$b;	f	depth
	f	Ldog$b;	g	weirdness
	f	J	h	offset
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;J)V	<init>	<init>
	m	(Ldog$h;)J	a	fitness
	m	()Ljava/util/List;	a	parameterSpace
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldog$b;	b	temperature
	m	()Ldog$b;	c	humidity
	m	()Ldog$b;	d	continentalness
	m	()Ldog$b;	e	erosion
	m	()Ldog$b;	f	depth
	m	()Ldog$b;	g	weirdness
	m	()J	h	offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
	m	(Ldog$d;)Ljava/lang/Long;	a	lambda$static$6
	m	(Ldog$d;)Ldog$b;	b	lambda$static$5
	m	(Ldog$d;)Ldog$b;	c	lambda$static$4
	m	(Ldog$d;)Ldog$b;	d	lambda$static$3
	m	(Ldog$d;)Ldog$b;	e	lambda$static$2
	m	(Ldog$d;)Ldog$b;	f	lambda$static$1
	m	(Ldog$d;)Ldog$b;	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dog$e	net/minecraft/world/level/biome/Climate$RTree
	f	I	a	CHILDREN_PER_NODE
	f	Ldog$e$b;	b	root
	f	Ljava/lang/ThreadLocal;	c	lastResult
	m	(Ldog$e$b;)V	<init>	<init>
	m	(Ljava/util/List;)Ldog$e;	a	create
	m	(ILjava/util/List;)Ldog$e$b;	a	build
	m	(Ljava/util/List;IIZ)V	a	sort
	m	(IZ)Ljava/util/Comparator;	a	comparator
	m	(Ljava/util/List;)Ljava/util/List;	b	bucketize
	m	([Ldog$b;)J	a	cost
	m	(Ljava/util/List;)Ljava/util/List;	c	buildParameterSpace
	m	(Ldog$h;Ldog$a;)Ljava/lang/Object;	a	search
	m	(IZLdog$e$b;)J	a	lambda$comparator$3
	m	(ILdog$e$c;)Ldog$e$b;	a	lambda$build$2
	m	(ILdog$e$b;)J	a	lambda$build$1
	m	(Lcom/mojang/datafixers/util/Pair;)Ldog$e$a;	a	lambda$create$0
c	dog$e$a	net/minecraft/world/level/biome/Climate$RTree$Leaf
	f	Ljava/lang/Object;	b	value
	m	(Ldog$d;Ljava/lang/Object;)V	<init>	<init>
	m	([JLdog$e$a;Ldog$a;)Ldog$e$a;	a	search
c	dog$e$b	net/minecraft/world/level/biome/Climate$RTree$Node
	f	[Ldog$b;	a	parameterSpace
	m	(Ljava/util/List;)V	<init>	<init>
	m	([JLdog$e$a;Ldog$a;)Ldog$e$a;	a	search
	m	([J)J	a	distance
	m	()Ljava/lang/String;	toString	toString
c	dog$e$c	net/minecraft/world/level/biome/Climate$RTree$SubTree
	f	[Ldog$e$b;	b	children
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	([JLdog$e$a;Ldog$a;)Ldog$e$a;	a	search
c	dog$f	net/minecraft/world/level/biome/Climate$Sampler
	f	Lejt;	a	temperature
	f	Lejt;	b	humidity
	f	Lejt;	c	continentalness
	f	Lejt;	d	erosion
	f	Lejt;	e	depth
	f	Lejt;	f	weirdness
	f	Ljava/util/List;	g	spawnTarget
	m	(Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Ljava/util/List;)V	<init>	<init>
	m	(III)Ldog$h;	a	sample
	m	()Ljb;	a	findSpawnPosition
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	b	temperature
	m	()Lejt;	c	humidity
	m	()Lejt;	d	continentalness
	m	()Lejt;	e	erosion
	m	()Lejt;	f	depth
	m	()Lejt;	g	weirdness
	m	()Ljava/util/List;	h	spawnTarget
c	dog$g	net/minecraft/world/level/biome/Climate$SpawnFinder
	f	J	a	MAX_RADIUS
	f	Ldog$g$a;	b	result
	m	(Ljava/util/List;Ldog$f;)V	<init>	<init>
	m	(Ljava/util/List;Ldog$f;FF)V	a	radialSearch
	m	(Ljava/util/List;Ldog$f;II)Ldog$g$a;	a	getSpawnPositionAndFitness
c	dog$g$a	net/minecraft/world/level/biome/Climate$SpawnFinder$Result
	f	Ljb;	a	location
	f	J	b	fitness
	m	(Ljb;J)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	location
	m	()J	b	fitness
c	dog$h	net/minecraft/world/level/biome/Climate$TargetPoint
	f	J	a	temperature
	f	J	b	humidity
	f	J	c	continentalness
	f	J	d	erosion
	f	J	e	depth
	f	J	f	weirdness
	m	(JJJJJJ)V	<init>	<init>
	m	()[J	a	toParameterArray
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	temperature
	m	()J	c	humidity
	m	()J	d	continentalness
	m	()J	e	erosion
	m	()J	f	depth
	m	()J	g	weirdness
c	doh	net/minecraft/world/level/biome/FeatureSorter
	m	()V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List;	a	buildFeaturesPerStep
	m	(ILdoh$a;)Z	a	lambda$buildFeaturesPerStep$2
	m	(Ljava/util/Comparator;Ldoh$a;)Ljava/util/Set;	a	lambda$buildFeaturesPerStep$1
	m	(Lorg/apache/commons/lang3/mutable/MutableInt;Ljava/lang/Object;)I	a	lambda$buildFeaturesPerStep$0
c	doh$a	net/minecraft/world/level/biome/FeatureSorter$1FeatureData
	f	I	a	featureIndex
	f	I	b	step
	f	Leuc;	c	feature
	m	(IILeuc;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	featureIndex
	m	()I	b	step
	m	()Leuc;	c	feature
c	doh$b	net/minecraft/world/level/biome/FeatureSorter$StepFeatureData
	f	Ljava/util/List;	a	features
	f	Ljava/util/function/ToIntFunction;	b	indexMapping
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/function/ToIntFunction;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	features
	m	()Ljava/util/function/ToIntFunction;	b	indexMapping
c	doi	net/minecraft/world/level/biome/FixedBiomeSource
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljl;	c	biome
	m	(Ljl;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
	m	(IIIIILjava/util/function/Predicate;Lbck;ZLdog$f;)Lcom/mojang/datafixers/util/Pair;	a	findBiomeHorizontal
	m	(Ljb;IIILjava/util/function/Predicate;Ldog$f;Ldmx;)Lcom/mojang/datafixers/util/Pair;	a	findClosestBiome3d
	m	(IIIILdog$f;)Ljava/util/Set;	a	getBiomesWithin
	m	(Ldoi;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	doj	net/minecraft/world/level/biome/MobSpawnSettings
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	F	e	DEFAULT_CREATURE_SPAWN_PROBABILITY
	f	Lbvt;	a	EMPTY_MOB_LIST
	f	Ldoj;	b	EMPTY
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	F	f	creatureGenerationProbability
	f	Ljava/util/Map;	g	spawners
	f	Ljava/util/Map;	h	mobSpawnCosts
	m	(FLjava/util/Map;Ljava/util/Map;)V	<init>	<init>
	m	(Lcap;)Lbvt;	a	getMobs
	m	(Lbzv;)Ldoj$b;	a	getMobSpawnCost
	m	()F	a	getCreatureProbability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldoj;)Ljava/util/Map;	a	lambda$static$2
	m	(Ldoj;)Ljava/util/Map;	b	lambda$static$1
	m	(Ldoj;)Ljava/lang/Float;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	doj$a	net/minecraft/world/level/biome/MobSpawnSettings$Builder
	f	Ljava/util/Map;	a	spawners
	f	Ljava/util/Map;	b	mobSpawnCosts
	f	F	c	creatureGenerationProbability
	m	()V	<init>	<init>
	m	(Lcap;ILdoj$c;)Ldoj$a;	a	addSpawn
	m	(Lbzv;DD)Ldoj$a;	a	addMobCharge
	m	(F)Ldoj$a;	a	creatureGenerationProbability
	m	()Ldoj;	a	build
	m	(Ljava/util/Map$Entry;)Lbvt;	a	lambda$build$1
	m	(Lcap;)Lbvt$a;	a	lambda$new$0
c	doj$b	net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost
	f	D	b	energyBudget
	f	D	c	charge
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(DD)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	a	energyBudget
	m	()D	b	charge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldoj$b;)Ljava/lang/Double;	a	lambda$static$1
	m	(Ldoj$b;)Ljava/lang/Double;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	doj$c	net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData
	f	Lbzv;	b	type
	f	I	c	minCount
	f	I	d	maxCount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lbzv;II)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzv;	a	type
	m	()I	b	minCount
	m	()I	c	maxCount
	m	(Ldoj$c;)Lcom/mojang/serialization/DataResult;	a	lambda$static$5
	m	()Ljava/lang/String;	d	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldoj$c;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Ldoj$c;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Ldoj$c;)Lbzv;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dok	net/minecraft/world/level/biome/MultiNoiseBiomeSource
	f	Lcom/mojang/serialization/MapCodec;	d	ENTRY_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/MapCodec;	e	PRESET_CODEC
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lcom/mojang/datafixers/util/Either;	f	parameters
	m	(Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
	m	(Ldog$c;)Ldok;	a	createFromList
	m	(Ljl;)Ldok;	a	createFromPreset
	m	()Ldog$c;	d	parameters
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;)Z	a	stable
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Ldog$h;)Ljl;	a	getNoiseBiome
	m	(Ljava/util/List;Ljb;Ldog$f;)V	a	addDebugInfo
	m	(Ljl;)Ldog$c;	b	lambda$parameters$2
	m	(Ldog$c;)Ldog$c;	b	lambda$parameters$1
	m	(Ldok;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dol	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldol$a;	c	preset
	f	Ldog$c;	d	parameters
	m	(Ldol$a;Ljm;)V	<init>	<init>
	m	()Ldog$c;	a	parameters
	m	()Ljava/util/Map;	b	knownPresets
	m	(Ldol$a;)Ldog$c;	a	lambda$knownPresets$4
	m	(Lamd;)Lamd;	a	lambda$knownPresets$3
	m	(Ldol$a;)Ldol$a;	b	lambda$knownPresets$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldol;)Ldol$a;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dol$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset
	f	Lame;	d	id
	f	Ldol$a$a;	e	provider
	f	Ldol$a;	a	NETHER
	f	Ldol$a;	b	OVERWORLD
	f	Ljava/util/Map;	f	BY_NAME
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(Lame;Ldol$a$a;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Ldog$c;	a	generateOverworldBiomes
	m	()Ljava/util/stream/Stream;	a	usedBiomes
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	id
	m	()Ldol$a$a;	c	provider
	m	(Lamd;)Lamd;	a	lambda$usedBiomes$6
	m	(Lcom/google/common/collect/ImmutableList$Builder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$generateOverworldBiomes$5
	m	(Ldol$a;)Lcom/mojang/serialization/DataResult;	a	lambda$static$4
	m	(Lame;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	(Lame;)Lcom/mojang/serialization/DataResult;	b	lambda$static$2
	m	(Lame;)Ljava/lang/String;	c	lambda$static$1
	m	(Ldol$a;)Ldol$a;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dol$a$1	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$1
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;)Ldog$c;	apply	apply
c	dol$a$2	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$2
	m	()V	<init>	<init>
	m	(Ljava/util/function/Function;)Ldog$c;	apply	apply
c	dol$a$a	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider
	m	(Ljava/util/function/Function;)Ldog$c;	apply	apply
c	dom	net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists
	f	Lamd;	a	NETHER
	f	Lamd;	b	OVERWORLD
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	register
	m	()V	<clinit>	<clinit>
c	don	net/minecraft/world/level/biome/OverworldBiomeBuilder
	f	F	h	VALLEY_SIZE
	f	F	i	LOW_START
	f	F	a	HIGH_START
	f	F	j	HIGH_END
	f	F	k	PEAK_SIZE
	f	F	b	PEAK_START
	f	F	l	PEAK_END
	f	F	c	NEAR_INLAND_START
	f	F	d	MID_INLAND_START
	f	F	e	FAR_INLAND_START
	f	F	f	EROSION_INDEX_1_START
	f	F	g	EROSION_INDEX_2_START
	f	F	m	EROSION_DEEP_DARK_DRYNESS_THRESHOLD
	f	F	n	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD
	f	Ldog$b;	o	FULL_RANGE
	f	[Ldog$b;	p	temperatures
	f	[Ldog$b;	q	humidities
	f	[Ldog$b;	r	erosions
	f	Ldog$b;	s	FROZEN_RANGE
	f	Ldog$b;	t	UNFROZEN_RANGE
	f	Ldog$b;	u	mushroomFieldsContinentalness
	f	Ldog$b;	v	deepOceanContinentalness
	f	Ldog$b;	w	oceanContinentalness
	f	Ldog$b;	x	coastContinentalness
	f	Ldog$b;	y	inlandContinentalness
	f	Ldog$b;	z	nearInlandContinentalness
	f	Ldog$b;	A	midInlandContinentalness
	f	Ldog$b;	B	farInlandContinentalness
	f	[[Lamd;	C	OCEANS
	f	[[Lamd;	D	MIDDLE_BIOMES
	f	[[Lamd;	E	MIDDLE_BIOMES_VARIANT
	f	[[Lamd;	F	PLATEAU_BIOMES
	f	[[Lamd;	G	PLATEAU_BIOMES_VARIANT
	f	[[Lamd;	H	SHATTERED_BIOMES
	m	()V	<init>	<init>
	m	()Ljava/util/List;	a	spawnTarget
	m	(Ljava/util/function/Consumer;)V	a	addBiomes
	m	(Ljava/util/function/Consumer;)V	b	addDebugBiomes
	m	(Ljava/util/function/Consumer;)V	c	addOffCoastBiomes
	m	(Ljava/util/function/Consumer;)V	d	addInlandBiomes
	m	(Ljava/util/function/Consumer;Ldog$b;)V	a	addPeaks
	m	(Ljava/util/function/Consumer;Ldog$b;)V	b	addHighSlice
	m	(Ljava/util/function/Consumer;Ldog$b;)V	c	addMidSlice
	m	(Ljava/util/function/Consumer;Ldog$b;)V	d	addLowSlice
	m	(Ljava/util/function/Consumer;Ldog$b;)V	e	addValleys
	m	(Ljava/util/function/Consumer;)V	e	addUndergroundBiomes
	m	(IILdog$b;)Lamd;	a	pickMiddleBiome
	m	(IILdog$b;)Lamd;	b	pickMiddleBiomeOrBadlandsIfHot
	m	(IILdog$b;)Lamd;	c	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold
	m	(IILdog$b;Lamd;)Lamd;	a	maybePickWindsweptSavannaBiome
	m	(IILdog$b;)Lamd;	d	pickShatteredCoastBiome
	m	(II)Lamd;	a	pickBeachBiome
	m	(ILdog$b;)Lamd;	a	pickBadlandsBiome
	m	(IILdog$b;)Lamd;	e	pickPlateauBiome
	m	(IILdog$b;)Lamd;	f	pickPeakBiome
	m	(IILdog$b;)Lamd;	g	pickSlopeBiome
	m	(IILdog$b;)Lamd;	h	pickShatteredBiome
	m	(Ljava/util/function/Consumer;Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;FLamd;)V	a	addSurfaceBiome
	m	(Ljava/util/function/Consumer;Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;FLamd;)V	b	addUndergroundBiome
	m	(Ljava/util/function/Consumer;Ldog$b;Ldog$b;Ldog$b;Ldog$b;Ldog$b;FLamd;)V	c	addBottomBiome
	m	(Lejt;Lejt;Lejt$b;)Z	a	isDeepDarkRegion
	m	(D)Ljava/lang/String;	a	getDebugStringForPeaksAndValleys
	m	(D)Ljava/lang/String;	b	getDebugStringForContinentalness
	m	(D)Ljava/lang/String;	c	getDebugStringForErosion
	m	(D)Ljava/lang/String;	d	getDebugStringForTemperature
	m	(D)Ljava/lang/String;	e	getDebugStringForHumidity
	m	(D[Ldog$b;)Ljava/lang/String;	a	getDebugStringForNoiseValue
	m	()[Ldog$b;	b	getTemperatureThresholds
	m	()[Ldog$b;	c	getHumidityThresholds
	m	()[Ldog$b;	d	getErosionThresholds
	m	()[Ldog$b;	e	getContinentalnessThresholds
	m	()[Ldog$b;	f	getPeaksAndValleysThresholds
	m	()[Ldog$b;	g	getWeirdnessThresholds
c	doo	net/minecraft/world/level/biome/TheEndBiomeSource
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljl;	c	end
	f	Ljl;	d	highlands
	f	Ljl;	e	midlands
	f	Ljl;	f	islands
	f	Ljl;	g	barrens
	m	(Ljm;)Ldoo;	a	create
	m	(Ljl;Ljl;Ljl;Ljl;Ljl;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	b	collectPossibleBiomes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(IIILdog$f;)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dop	net/minecraft/world/level/biome/package-info
c	doq	net/minecraft/world/level/block/AbstractBannerBlock
	f	Ldbt;	a	color
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;)Z	a	isPossibleToRespawnInThis
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	()Ldbt;	b	getColor
c	dor	net/minecraft/world/level/block/AbstractCandleBlock
	f	I	a	LIGHT_PER_CANDLE
	f	Lees;	b	LIT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Ljava/lang/Iterable;	b	getParticleOffsets
	m	(Leeb;)Z	c	isLit
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Leeb;)Z	d	canBeLit
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmu;Lfis;Lbck;)V	a	addParticlesAndSound
	m	(Lcut;Leeb;Ldmv;Ljb;)V	a	extinguish
	m	(Ldmv;Leeb;Ljb;Z)V	a	setLit
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Ldmv;Ljb;Lfis;)V	a	lambda$extinguish$1
	m	(Ldmu;Ljb;Lbck;Lfis;)V	a	lambda$animateTick$0
	m	()V	<clinit>	<clinit>
c	dos	net/minecraft/world/level/block/AbstractCauldronBlock
	f	I	a	FLOOR_LEVEL
	f	Lfjm;	d	SHAPE_INSIDE
	f	Lfjm;	b	SHAPE
	f	Lki$a;	c	interactions
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;Lki$a;)V	<init>	<init>
	m	(Leeb;)D	b	getContentHeight
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getInteractionShape
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;)Z	d	isFull
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Lfak;)Z	a	canReceiveStalactiteDrip
	m	(Leeb;Ldmu;Ljb;Lfak;)V	a	receiveStalactiteDrip
	m	()Lfjm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dot	net/minecraft/world/level/block/AbstractChestBlock
	f	Ljava/util/function/Supplier;	a	blockEntityType
	m	(Leea$d;Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmu;Ljb;Z)Ldsh$c;	a	combine
c	dou	net/minecraft/world/level/block/AbstractFurnaceBlock
	f	Leez;	a	FACING
	f	Lees;	b	LIT
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;Lcut;)V	a	openContainer
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Lebb;Lebb;)Leba;	a	createFurnaceTicker
	m	(Laub;Ldmu;Ljb;Leeb;Leam;)V	a	lambda$createFurnaceTicker$0
	m	()V	<clinit>	<clinit>
c	dov	net/minecraft/world/level/block/AbstractSkullBlock
	f	Lees;	a	POWERED
	f	Ldxm$a;	b	type
	m	(Ldxm$a;Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	()Ldxm$a;	b	getType
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	()V	<clinit>	<clinit>
c	dow	net/minecraft/world/level/block/AirBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()V	<clinit>	<clinit>
c	dox	net/minecraft/world/level/block/AmethystBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	()V	<clinit>	<clinit>
c	doy	net/minecraft/world/level/block/AmethystClusterBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	WATERLOGGED
	f	Leez;	d	FACING
	f	F	e	height
	f	F	f	width
	f	Ljava/util/Map;	g	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FFLeea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldoy;)Ljava/lang/Float;	a	lambda$static$1
	m	(Ldoy;)Ljava/lang/Float;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	doz	net/minecraft/world/level/block/AnvilBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/Map;	c	SHAPES
	f	Lxo;	d	CONTAINER_TITLE
	f	F	e	FALL_DAMAGE_PER_DISTANCE
	f	I	f	FALL_DAMAGE_MAX
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Lcqy;)V	a	falling
	m	(Ldmu;Ljb;Leeb;Leeb;Lcqy;)V	a	onLand
	m	(Ldmu;Ljb;Lcqy;)V	a	onBrokenAfterFall
	m	(Lbzm;)Lbyb;	a	getFallDamageSource
	m	(Leeb;)Leeb;	e	damage
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;)I	b	getDustColor
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	dpa	net/minecraft/world/level/block/AttachedStemBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/Map;	c	SHAPES
	f	Lamd;	d	fruit
	f	Lamd;	e	stem
	f	Lamd;	f	seed
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;Lamd;Lamd;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldpa;)Lamd;	a	lambda$static$2
	m	(Ldpa;)Lamd;	b	lambda$static$1
	m	(Ldpa;)Lamd;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dpb	net/minecraft/world/level/block/AzaleaBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dpc	net/minecraft/world/level/block/BambooSaplingBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ldmu;Ljb;)V	a	growBamboo
	m	()V	<clinit>	<clinit>
c	dpd	net/minecraft/world/level/block/BambooStalkBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	D	SHAPE_SMALL
	f	Lfjm;	R	SHAPE_LARGE
	f	Lfjm;	S	SHAPE_COLLISION
	f	Lefb;	b	AGE
	f	Leez;	c	LEAVES
	f	Lefb;	d	STAGE
	f	I	e	MAX_HEIGHT
	f	I	f	STAGE_GROWING
	f	I	g	STAGE_DONE_GROWING
	f	I	h	AGE_THIN_BAMBOO
	f	I	i	AGE_THICK_BAMBOO
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;)Z	a_	isCollisionShapeFullBlock
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;Ldmu;Ljb;Lbck;I)V	a	growBamboo
	m	(Ldly;Ljb;)I	a	getHeightAboveUpToMax
	m	(Ldly;Ljb;)I	b	getHeightBelowUpToMax
	m	()V	<clinit>	<clinit>
c	dpe	net/minecraft/world/level/block/BannerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	ROTATION
	f	Ljava/util/Map;	c	BY_COLOR
	f	Lfjm;	d	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldbt;)Ldpz;	a	byColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dpf	net/minecraft/world/level/block/BarrelBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	OPEN
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dpg	net/minecraft/world/level/block/BarrierBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	()V	<clinit>	<clinit>
c	dph	net/minecraft/world/level/block/BaseCoralFanBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()V	<clinit>	<clinit>
c	dpi	net/minecraft/world/level/block/BaseCoralPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()V	<clinit>	<clinit>
c	dpj	net/minecraft/world/level/block/BaseCoralPlantTypeBlock
	f	Lees;	b	WATERLOGGED
	f	Lfjm;	a	SHAPE
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ldnj;Lbck;Ljb;)V	a	tryScheduleDieTick
	m	(Leeb;Ldly;Ljb;)Z	d	scanForWater
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	()V	<clinit>	<clinit>
c	dpk	net/minecraft/world/level/block/BaseCoralWallFanBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leez;	d	FACING
	f	Ljava/util/Map;	e	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dpl	net/minecraft/world/level/block/BaseEntityBlock
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Lebb;Lebb;Leba;)Leba;	a	createTickerHelper
c	dpm	net/minecraft/world/level/block/BaseFireBlock
	f	I	b	SECONDS_ON_FIRE
	f	I	c	MIN_FIRE_TICKS_TO_ADD
	f	I	d	MAX_FIRE_TICKS_TO_ADD
	f	F	e	fireDamage
	f	Lfjm;	a	SHAPE
	m	(Leea$d;F)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;)Leeb;	a	getState
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;)Z	g	canBurn
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Lbzm;)V	a	fireIgnite
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldmu;)Z	a	inPortalDimension
	m	(Ldmu;Lcut;Ljb;Leeb;)V	a	spawnDestroyParticles
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Ldmu;Ljb;Ljh;)Z	a	canBePlacedAt
	m	(Ldmu;Ljb;Ljh;)Z	b	isPortal
	m	(Lbzm;)V	b	lambda$entityInside$0
	m	()V	<clinit>	<clinit>
c	dpn	net/minecraft/world/level/block/BasePressurePlateBlock
	f	Lfjm;	c	SHAPE_PRESSED
	f	Lfjm;	d	SHAPE
	f	Lfin;	a	TOUCH_AABB
	f	Leeq;	b	type
	m	(Leea$d;Leeq;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()I	b	getPressedTime
	m	(Leeb;)Z	a	isPossibleToRespawnInThis
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Lbzm;Ldmu;Ljb;Leeb;I)V	a	checkPressed
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldmu;Ljb;)V	a	updateNeighbours
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Ldmu;Lfin;Ljava/lang/Class;)I	a	getEntityCount
	m	(Ldmu;Ljb;)I	b	getSignalStrength
	m	(Leeb;)I	h	getSignalForState
	m	(Leeb;I)Leeb;	a	setSignalForState
	m	(Lbzm;)Z	a	lambda$getEntityCount$0
	m	()V	<clinit>	<clinit>
c	dpo	net/minecraft/world/level/block/BaseRailBlock
	f	Lees;	a	WATERLOGGED
	f	Lfjm;	b	SHAPE_FLAT
	f	Lfjm;	c	SHAPE_SLOPE
	f	Z	d	isStraight
	m	(Ldmu;Ljb;)Z	a	isRail
	m	(Leeb;)Z	h	isRail
	m	(ZLeea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Z	b	isStraight
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Z)Leeb;	a	updateState
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ljb;Ldmu;Leff;)Z	a	shouldBeRemoved
	m	(Leeb;Ldmu;Ljb;Ldpz;)V	a	updateState
	m	(Ldmu;Ljb;Leeb;Z)Leeb;	a	updateDir
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()Lefe;	c	getShapeProperty
	m	(Leff;Ldwu;)Leff;	a	rotate
	m	(Leff;Ldvd;)Leff;	a	mirror
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	()V	<clinit>	<clinit>
c	dpo$1	net/minecraft/world/level/block/BaseRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dpp	net/minecraft/world/level/block/BaseTorchBlock
	f	Lfjm;	a	SHAPE
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	()V	<clinit>	<clinit>
c	dpq	net/minecraft/world/level/block/BeaconBeamBlock
	m	()Ldbt;	b	getColor
c	dpr	net/minecraft/world/level/block/BeaconBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldbt;	b	getColor
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	()V	<clinit>	<clinit>
c	dps	net/minecraft/world/level/block/BedBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	PART
	f	Lees;	c	OCCUPIED
	f	Ljava/util/Map;	d	SHAPES
	f	Ldbt;	e	color
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	(Ldly;Ljb;)Ljh;	a	getBedOrientation
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;)Z	a	canSetSpawn
	m	(Ldmu;Ljb;)Z	a	kickVillagerOutOfBed
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Ldly;Lbzm;)V	a	updateEntityMovementAfterFallOn
	m	(Lbzm;)V	a	bounceUp
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeo;Ljh;)Ljh;	a	getNeighbourDirection
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Ljh;	h	getConnectedDirection
	m	(Leeb;)Ldsh$a;	i	getBlockType
	m	(Ldly;Ljb;)Z	b	isBunkBed
	m	(Lbzv;Ldmc;Ljb;Ljh;F)Ljava/util/Optional;	a	findStandUpPosition
	m	(Lbzv;Ldmc;Ljb;Ljh;Ljh;)Ljava/util/Optional;	a	findBunkBedStandUpPosition
	m	(Lbzv;Ldmc;Ljb;[[IZ)Ljava/util/Optional;	a	findStandUpPositionAtOffset
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	()Ldbt;	b	getColor
	m	(Leeb;Ljb;)J	a	getSeed
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ljh;Ljh;)[[I	a	bedStandUpOffsets
	m	(Ljh;Ljh;)[[I	b	bedSurroundStandUpOffsets
	m	(Ljh;)[[I	a	bedAboveStandUpOffsets
	m	(Lcut;Lcut$a;)V	a	lambda$useWithoutItem$2
	m	()Ljava/util/Map;	q	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dpt	net/minecraft/world/level/block/BeehiveBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lefb;	c	HONEY_LEVEL
	f	I	d	MAX_HONEY_LEVELS
	f	I	e	SHEARED_HONEYCOMB_COUNT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldmu;Lcut;Ljb;Leeb;Leaz;Ldcv;)V	a	playerDestroy
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Ldmu;Ljb;)V	b	angerNearbyBees
	m	(Ldmu;Ljb;)V	a	dropHoneycomb
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Ldmu;Ljb;)Z	c	hiveContainsBees
	m	(Ldmu;Leeb;Ljb;Lcut;Leaw$b;)V	a	releaseBeesAndResetHoneyLevel
	m	(Ldmu;Leeb;Ljb;)V	a	resetHoneyLevel
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmu;Ljb;Leeb;)V	a	trySpawnDripParticles
	m	(Ldmu;Ljb;Lfjm;D)V	a	spawnParticle
	m	(Ldmu;DDDDD)V	a	spawnFluidParticle
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	()V	<clinit>	<clinit>
c	dpu	net/minecraft/world/level/block/BeetrootBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	[Lfjm;	g	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Lefb;	b	getAgeProperty
	m	()I	c	getMaxAge
	m	()Ldmt;	d	getBaseSeedId
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;)I	a	getBonemealAgeIncrease
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dpv	net/minecraft/world/level/block/BellBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Leez;	c	ATTACHMENT
	f	Lees;	d	POWERED
	f	Lfjm;	f	BELL_SHAPE
	f	Lfjm;	g	SHAPE_CEILING
	f	Ljava/util/Map;	h	SHAPE_FLOOR
	f	Ljava/util/Map;	i	SHAPE_DOUBLE_WALL
	f	Ljava/util/Map;	D	SHAPE_SINGLE_WALL
	f	I	e	EVENT_BELL_RING
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Leeb;Lfio;Lcut;Z)Z	a	onHit
	m	(Leeb;Ljh;D)Z	a	isProperHit
	m	(Ldmu;Ljb;Ljh;)Z	a	attemptToRing
	m	(Lbzm;Ldmu;Ljb;Ljh;)Z	a	attemptToRing
	m	(Leeb;)Lfjm;	o	getVoxelShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Ljh;	q	getConnectedDirection
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	()V	<clinit>	<clinit>
c	dpv$1	net/minecraft/world/level/block/BellBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BellAttachType
	m	()V	<clinit>	<clinit>
c	dpw	net/minecraft/world/level/block/BigDripleafBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Leez;	c	TILT
	f	I	d	NO_TICK
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	e	DELAY_UNTIL_NEXT_TILT_STATE
	f	I	g	MAX_GEN_HEIGHT
	f	I	h	ENTITY_DETECTION_MIN_Y
	f	I	i	LOWEST_LEAF_TOP
	f	Ljava/util/Map;	D	SHAPE_LEAF
	f	Ljava/util/function/Function;	R	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	q	makeShapes
	m	(Ldmv;Lbck;Ljb;Ljh;)V	a	placeWithRandomHeight
	m	(Leeb;)Z	o	canReplace
	m	(Ldmw;Ljb;Leeb;)Z	a	canPlaceAt
	m	(Ldmv;Ljb;Lfal;Ljh;)Z	a	place
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Layy;)V	a	playTiltSound
	m	(Ljb;Lbzm;)Z	a	canEntityTilt
	m	(Leeb;Ldmu;Ljb;Lefn;Layy;)V	a	setTiltAndScheduleTick
	m	(Leeb;Ldmu;Ljb;)V	d	resetTilt
	m	(Leeb;Ldmu;Ljb;Lefn;)V	a	setTilt
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$1
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntArrayMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dpx	net/minecraft/world/level/block/BigDripleafStemBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Ljava/util/Map;	c	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmv;Ljb;Lfal;Ljh;)Z	a	place
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	()V	<clinit>	<clinit>
c	dpy	net/minecraft/world/level/block/BlastFurnaceBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Lcut;)V	a	openContainer
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	dpz	net/minecraft/world/level/block/Block
	f	Lcom/mojang/serialization/MapCodec;	j	CODEC
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljl$c;	b	builtInRegistryHolder
	f	Ljr;	k	BLOCK_STATE_REGISTRY
	f	Lcom/google/common/cache/LoadingCache;	c	SHAPE_FULL_BLOCK_CACHE
	f	I	l	UPDATE_NEIGHBORS
	f	I	m	UPDATE_CLIENTS
	f	I	n	UPDATE_INVISIBLE
	f	I	o	UPDATE_IMMEDIATE
	f	I	p	UPDATE_KNOWN_SHAPE
	f	I	q	UPDATE_SUPPRESS_DROPS
	f	I	r	UPDATE_MOVE_BY_PISTON
	f	I	s	UPDATE_SKIP_SHAPE_UPDATE_ON_WIRE
	f	I	t	UPDATE_SKIP_BLOCK_ENTITY_SIDEEFFECTS
	f	I	u	UPDATE_SKIP_ON_PLACE
	f	I	v	UPDATE_NONE
	f	I	w	UPDATE_ALL
	f	I	x	UPDATE_ALL_IMMEDIATE
	f	I	y	UPDATE_SKIP_ALL_SIDEEFFECTS
	f	F	z	INDESTRUCTIBLE
	f	F	A	INSTANT
	f	I	B	UPDATE_LIMIT
	f	Leec;	C	stateDefinition
	f	Leeb;	d	defaultBlockState
	f	Ldcr;	e	item
	f	I	f	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	g	OCCLUSION_CACHE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;)I	j	getId
	m	(I)Leeb;	a	stateById
	m	(Ldcr;)Ldpz;	a	byItem
	m	(Leeb;Leeb;Ldmv;Ljb;)Leeb;	a	pushEntitiesUp
	m	(DDDDDD)Lfjm;	a	box
	m	(ILjava/util/function/IntFunction;)[Lfjm;	a	boxes
	m	(D)Lfjm;	a	cube
	m	(DDD)Lfjm;	a	cube
	m	(DDD)Lfjm;	b	column
	m	(DDDD)Lfjm;	a	column
	m	(DDD)Lfjm;	c	boxZ
	m	(DDDD)Lfjm;	b	boxZ
	m	(DDDDD)Lfjm;	a	boxZ
	m	(Leeb;Ldmv;Ljb;)Leeb;	b	updateFromNeighbourShapes
	m	(Leeb;Leeb;Ldmv;Ljb;I)V	a	updateOrDestroy
	m	(Leeb;Leeb;Ldmv;Ljb;II)V	a	updateOrDestroy
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	k	isExceptionForConnection
	m	(Leeb;Leeb;Ljh;)Z	a	shouldRenderFace
	m	(Ldly;Ljb;)Z	c	canSupportRigidBlock
	m	(Ldmx;Ljb;Ljh;)Z	a	canSupportCenter
	m	(Lfjm;Ljh;)Z	a	isFaceFull
	m	(Lfjm;)Z	a	isShapeFullBlock
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmv;Ljb;Leeb;)V	a	destroy
	m	(Leeb;Laub;Ljb;Leaz;)Ljava/util/List;	a	getDrops
	m	(Leeb;Laub;Ljb;Leaz;Lbzm;Ldcv;)Ljava/util/List;	a	getDrops
	m	(Leeb;Ldmu;Ljb;)V	c	dropResources
	m	(Leeb;Ldmv;Ljb;Leaz;)V	a	dropResources
	m	(Leeb;Ldmu;Ljb;Leaz;Lbzm;Ldcv;)V	a	dropResources
	m	(Ldmu;Ljb;Ldcv;)V	a	popResource
	m	(Ldmu;Ljb;Ljh;Ldcv;)V	a	popResourceFromFace
	m	(Ldmu;Ljava/util/function/Supplier;Ldcv;)V	a	popResource
	m	(Laub;Ljb;I)V	a	popExperience
	m	()F	e	getExplosionResistance
	m	(Laub;Ljb;Ldmn;)V	a	wasExploded
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Lcut;Ljb;Leeb;Leaz;Ldcv;)V	a	playerDestroy
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;)Z	a	isPossibleToRespawnInThis
	m	()Lyc;	f	getName
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Ldly;Lbzm;)V	a	updateEntityMovementAfterFallOn
	m	()F	g	getFriction
	m	()F	i	getSpeedFactor
	m	()F	j	getJumpFactor
	m	(Ldmu;Lcut;Ljb;Leeb;)V	a	spawnDestroyParticles
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;Ldmu;Ljb;Ldnx$c;)V	a	handlePrecipitation
	m	(Ldmn;)Z	a	dropFromExplosion
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()Leec;	l	getStateDefinition
	m	(Leeb;)V	l	registerDefaultState
	m	()Leeb;	m	defaultBlockState
	m	(Leeb;)Leeb;	m	withPropertiesOf
	m	(Leeb;Leeb;Lefe;)Leeb;	a	copyProperty
	m	()Ldcr;	h	asItem
	m	()Z	n	hasDynamicShape
	m	()Ljava/lang/String;	toString	toString
	m	()Ldpz;	o	asBlock
	m	(Ljava/util/function/Function;)Ljava/util/function/Function;	a	getShapeForEachState
	m	(Ljava/util/function/Function;[Lefe;)Ljava/util/function/Function;	a	getShapeForEachState
	m	(Leed;Lefe;Ljava/lang/Object;)Leed;	a	setValueHelper
	m	()Ljl$c;	p	builtInRegistryHolder
	m	(Laub;Ljb;Ldcv;Lbwo;)V	a	tryDropExperience
	m	(Ljava/util/Map;Lcom/google/common/collect/ImmutableMap;Leeb;)Lfjm;	a	lambda$getShapeForEachState$11
	m	(Ljava/util/Map;Leeb;)Z	a	lambda$getShapeForEachState$10
	m	(Leeb;Ljava/util/Map$Entry;)Z	a	lambda$getShapeForEachState$9
	m	(Lefe;)Ljava/lang/Object;	a	lambda$getShapeForEachState$8
	m	(Lefe;)Lefe;	b	lambda$getShapeForEachState$7
	m	(Ldmu;DDDLdcv;DDD)Lcqz;	a	lambda$popResourceFromFace$6
	m	(Ldmu;DDDLdcv;)Lcqz;	a	lambda$popResource$5
	m	(Ldmu;Ljb;Ldcv;)V	b	lambda$dropResources$4
	m	(Ldmv;Ljb;Ldcv;)V	a	lambda$dropResources$3
	m	(Ldmu;Ljb;Ldcv;)V	c	lambda$dropResources$2
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	q	lambda$static$1
	m	(I)[Lfjm;	b	lambda$boxes$0
	m	()V	<clinit>	<clinit>
c	dpz$1	net/minecraft/world/level/block/Block$1
	m	()V	<init>	<init>
	m	(Lfjm;)Ljava/lang/Boolean;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	dpz$2	net/minecraft/world/level/block/Block$2
	m	(IF)V	<init>	<init>
	m	(I)V	rehash	rehash
c	dpz$a	net/minecraft/world/level/block/Block$ShapePairKey
	f	Lfjm;	a	first
	f	Lfjm;	b	second
	m	(Lfjm;Lfjm;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Lfjm;	a	first
	m	()Lfjm;	b	second
c	dqa	net/minecraft/world/level/block/BlockTypes
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	()V	<clinit>	<clinit>
c	dqb	net/minecraft/world/level/block/Blocks
	f	Leea$f;	un	NOT_CLOSED_SHULKER
	f	Leea$f;	uo	NOT_EXTENDED_PISTON
	f	Ldpz;	a	AIR
	f	Ldpz;	b	STONE
	f	Ldpz;	c	GRANITE
	f	Ldpz;	d	POLISHED_GRANITE
	f	Ldpz;	e	DIORITE
	f	Ldpz;	f	POLISHED_DIORITE
	f	Ldpz;	g	ANDESITE
	f	Ldpz;	h	POLISHED_ANDESITE
	f	Ldpz;	i	GRASS_BLOCK
	f	Ldpz;	j	DIRT
	f	Ldpz;	k	COARSE_DIRT
	f	Ldpz;	l	PODZOL
	f	Ldpz;	m	COBBLESTONE
	f	Ldpz;	n	OAK_PLANKS
	f	Ldpz;	o	SPRUCE_PLANKS
	f	Ldpz;	p	BIRCH_PLANKS
	f	Ldpz;	q	JUNGLE_PLANKS
	f	Ldpz;	r	ACACIA_PLANKS
	f	Ldpz;	s	CHERRY_PLANKS
	f	Ldpz;	t	DARK_OAK_PLANKS
	f	Ldpz;	u	PALE_OAK_WOOD
	f	Ldpz;	v	PALE_OAK_PLANKS
	f	Ldpz;	w	MANGROVE_PLANKS
	f	Ldpz;	x	BAMBOO_PLANKS
	f	Ldpz;	y	BAMBOO_MOSAIC
	f	Ldpz;	z	OAK_SAPLING
	f	Ldpz;	A	SPRUCE_SAPLING
	f	Ldpz;	B	BIRCH_SAPLING
	f	Ldpz;	C	JUNGLE_SAPLING
	f	Ldpz;	D	ACACIA_SAPLING
	f	Ldpz;	E	CHERRY_SAPLING
	f	Ldpz;	F	DARK_OAK_SAPLING
	f	Ldpz;	G	PALE_OAK_SAPLING
	f	Ldpz;	H	MANGROVE_PROPAGULE
	f	Ldpz;	I	BEDROCK
	f	Ldpz;	J	WATER
	f	Ldpz;	K	LAVA
	f	Ldpz;	L	SAND
	f	Ldpz;	M	SUSPICIOUS_SAND
	f	Ldpz;	N	RED_SAND
	f	Ldpz;	O	GRAVEL
	f	Ldpz;	P	SUSPICIOUS_GRAVEL
	f	Ldpz;	Q	GOLD_ORE
	f	Ldpz;	R	DEEPSLATE_GOLD_ORE
	f	Ldpz;	S	IRON_ORE
	f	Ldpz;	T	DEEPSLATE_IRON_ORE
	f	Ldpz;	U	COAL_ORE
	f	Ldpz;	V	DEEPSLATE_COAL_ORE
	f	Ldpz;	W	NETHER_GOLD_ORE
	f	Ldpz;	X	OAK_LOG
	f	Ldpz;	Y	SPRUCE_LOG
	f	Ldpz;	Z	BIRCH_LOG
	f	Ldpz;	aa	JUNGLE_LOG
	f	Ldpz;	ab	ACACIA_LOG
	f	Ldpz;	ac	CHERRY_LOG
	f	Ldpz;	ad	DARK_OAK_LOG
	f	Ldpz;	ae	PALE_OAK_LOG
	f	Ldpz;	af	MANGROVE_LOG
	f	Ldpz;	ag	MANGROVE_ROOTS
	f	Ldpz;	ah	MUDDY_MANGROVE_ROOTS
	f	Ldpz;	ai	BAMBOO_BLOCK
	f	Ldpz;	aj	STRIPPED_SPRUCE_LOG
	f	Ldpz;	ak	STRIPPED_BIRCH_LOG
	f	Ldpz;	al	STRIPPED_JUNGLE_LOG
	f	Ldpz;	am	STRIPPED_ACACIA_LOG
	f	Ldpz;	an	STRIPPED_CHERRY_LOG
	f	Ldpz;	ao	STRIPPED_DARK_OAK_LOG
	f	Ldpz;	ap	STRIPPED_PALE_OAK_LOG
	f	Ldpz;	aq	STRIPPED_OAK_LOG
	f	Ldpz;	ar	STRIPPED_MANGROVE_LOG
	f	Ldpz;	as	STRIPPED_BAMBOO_BLOCK
	f	Ldpz;	at	OAK_WOOD
	f	Ldpz;	au	SPRUCE_WOOD
	f	Ldpz;	av	BIRCH_WOOD
	f	Ldpz;	aw	JUNGLE_WOOD
	f	Ldpz;	ax	ACACIA_WOOD
	f	Ldpz;	ay	CHERRY_WOOD
	f	Ldpz;	az	DARK_OAK_WOOD
	f	Ldpz;	aA	MANGROVE_WOOD
	f	Ldpz;	aB	STRIPPED_OAK_WOOD
	f	Ldpz;	aC	STRIPPED_SPRUCE_WOOD
	f	Ldpz;	aD	STRIPPED_BIRCH_WOOD
	f	Ldpz;	aE	STRIPPED_JUNGLE_WOOD
	f	Ldpz;	aF	STRIPPED_ACACIA_WOOD
	f	Ldpz;	aG	STRIPPED_CHERRY_WOOD
	f	Ldpz;	aH	STRIPPED_DARK_OAK_WOOD
	f	Ldpz;	aI	STRIPPED_PALE_OAK_WOOD
	f	Ldpz;	aJ	STRIPPED_MANGROVE_WOOD
	f	Ldpz;	aK	OAK_LEAVES
	f	Ldpz;	aL	SPRUCE_LEAVES
	f	Ldpz;	aM	BIRCH_LEAVES
	f	Ldpz;	aN	JUNGLE_LEAVES
	f	Ldpz;	aO	ACACIA_LEAVES
	f	Ldpz;	aP	CHERRY_LEAVES
	f	Ldpz;	aQ	DARK_OAK_LEAVES
	f	Ldpz;	aR	PALE_OAK_LEAVES
	f	Ldpz;	aS	MANGROVE_LEAVES
	f	Ldpz;	aT	AZALEA_LEAVES
	f	Ldpz;	aU	FLOWERING_AZALEA_LEAVES
	f	Ldpz;	aV	SPONGE
	f	Ldpz;	aW	WET_SPONGE
	f	Ldpz;	aX	GLASS
	f	Ldpz;	aY	LAPIS_ORE
	f	Ldpz;	aZ	DEEPSLATE_LAPIS_ORE
	f	Ldpz;	ba	LAPIS_BLOCK
	f	Ldpz;	bb	DISPENSER
	f	Ldpz;	bc	SANDSTONE
	f	Ldpz;	bd	CHISELED_SANDSTONE
	f	Ldpz;	be	CUT_SANDSTONE
	f	Ldpz;	bf	NOTE_BLOCK
	f	Ldpz;	bg	WHITE_BED
	f	Ldpz;	bh	ORANGE_BED
	f	Ldpz;	bi	MAGENTA_BED
	f	Ldpz;	bj	LIGHT_BLUE_BED
	f	Ldpz;	bk	YELLOW_BED
	f	Ldpz;	bl	LIME_BED
	f	Ldpz;	bm	PINK_BED
	f	Ldpz;	bn	GRAY_BED
	f	Ldpz;	bo	LIGHT_GRAY_BED
	f	Ldpz;	bp	CYAN_BED
	f	Ldpz;	bq	PURPLE_BED
	f	Ldpz;	br	BLUE_BED
	f	Ldpz;	bs	BROWN_BED
	f	Ldpz;	bt	GREEN_BED
	f	Ldpz;	bu	RED_BED
	f	Ldpz;	bv	BLACK_BED
	f	Ldpz;	bw	POWERED_RAIL
	f	Ldpz;	bx	DETECTOR_RAIL
	f	Ldpz;	by	STICKY_PISTON
	f	Ldpz;	bz	COBWEB
	f	Ldpz;	bA	SHORT_GRASS
	f	Ldpz;	bB	FERN
	f	Ldpz;	bC	DEAD_BUSH
	f	Ldpz;	bD	BUSH
	f	Ldpz;	bE	SHORT_DRY_GRASS
	f	Ldpz;	bF	TALL_DRY_GRASS
	f	Ldpz;	bG	SEAGRASS
	f	Ldpz;	bH	TALL_SEAGRASS
	f	Ldpz;	bI	PISTON
	f	Ldpz;	bJ	PISTON_HEAD
	f	Ldpz;	bK	WHITE_WOOL
	f	Ldpz;	bL	ORANGE_WOOL
	f	Ldpz;	bM	MAGENTA_WOOL
	f	Ldpz;	bN	LIGHT_BLUE_WOOL
	f	Ldpz;	bO	YELLOW_WOOL
	f	Ldpz;	bP	LIME_WOOL
	f	Ldpz;	bQ	PINK_WOOL
	f	Ldpz;	bR	GRAY_WOOL
	f	Ldpz;	bS	LIGHT_GRAY_WOOL
	f	Ldpz;	bT	CYAN_WOOL
	f	Ldpz;	bU	PURPLE_WOOL
	f	Ldpz;	bV	BLUE_WOOL
	f	Ldpz;	bW	BROWN_WOOL
	f	Ldpz;	bX	GREEN_WOOL
	f	Ldpz;	bY	RED_WOOL
	f	Ldpz;	bZ	BLACK_WOOL
	f	Ldpz;	ca	MOVING_PISTON
	f	Ldpz;	cb	DANDELION
	f	Ldpz;	cc	TORCHFLOWER
	f	Ldpz;	cd	POPPY
	f	Ldpz;	ce	BLUE_ORCHID
	f	Ldpz;	cf	ALLIUM
	f	Ldpz;	cg	AZURE_BLUET
	f	Ldpz;	ch	RED_TULIP
	f	Ldpz;	ci	ORANGE_TULIP
	f	Ldpz;	cj	WHITE_TULIP
	f	Ldpz;	ck	PINK_TULIP
	f	Ldpz;	cl	OXEYE_DAISY
	f	Ldpz;	cm	CORNFLOWER
	f	Ldpz;	cn	WITHER_ROSE
	f	Ldpz;	co	LILY_OF_THE_VALLEY
	f	Ldpz;	cp	BROWN_MUSHROOM
	f	Ldpz;	cq	RED_MUSHROOM
	f	Ldpz;	cr	GOLD_BLOCK
	f	Ldpz;	cs	IRON_BLOCK
	f	Ldpz;	ct	BRICKS
	f	Ldpz;	cu	TNT
	f	Ldpz;	cv	BOOKSHELF
	f	Ldpz;	cw	CHISELED_BOOKSHELF
	f	Ldpz;	cx	MOSSY_COBBLESTONE
	f	Ldpz;	cy	OBSIDIAN
	f	Ldpz;	cz	TORCH
	f	Ldpz;	cA	WALL_TORCH
	f	Ldpz;	cB	FIRE
	f	Ldpz;	cC	SOUL_FIRE
	f	Ldpz;	cD	SPAWNER
	f	Ldpz;	cE	CREAKING_HEART
	f	Ldpz;	cF	OAK_STAIRS
	f	Ldpz;	cG	CHEST
	f	Ldpz;	cH	REDSTONE_WIRE
	f	Ldpz;	cI	DIAMOND_ORE
	f	Ldpz;	cJ	DEEPSLATE_DIAMOND_ORE
	f	Ldpz;	cK	DIAMOND_BLOCK
	f	Ldpz;	cL	CRAFTING_TABLE
	f	Ldpz;	cM	WHEAT
	f	Ldpz;	cN	FARMLAND
	f	Ldpz;	cO	FURNACE
	f	Ldpz;	cP	OAK_SIGN
	f	Ldpz;	cQ	SPRUCE_SIGN
	f	Ldpz;	cR	BIRCH_SIGN
	f	Ldpz;	cS	ACACIA_SIGN
	f	Ldpz;	cT	CHERRY_SIGN
	f	Ldpz;	cU	JUNGLE_SIGN
	f	Ldpz;	cV	DARK_OAK_SIGN
	f	Ldpz;	cW	PALE_OAK_SIGN
	f	Ldpz;	cX	MANGROVE_SIGN
	f	Ldpz;	cY	BAMBOO_SIGN
	f	Ldpz;	cZ	OAK_DOOR
	f	Ldpz;	da	LADDER
	f	Ldpz;	db	RAIL
	f	Ldpz;	dc	COBBLESTONE_STAIRS
	f	Ldpz;	dd	OAK_WALL_SIGN
	f	Ldpz;	de	SPRUCE_WALL_SIGN
	f	Ldpz;	df	BIRCH_WALL_SIGN
	f	Ldpz;	dg	ACACIA_WALL_SIGN
	f	Ldpz;	dh	CHERRY_WALL_SIGN
	f	Ldpz;	di	JUNGLE_WALL_SIGN
	f	Ldpz;	dj	DARK_OAK_WALL_SIGN
	f	Ldpz;	dk	PALE_OAK_WALL_SIGN
	f	Ldpz;	dl	MANGROVE_WALL_SIGN
	f	Ldpz;	dm	BAMBOO_WALL_SIGN
	f	Ldpz;	dn	OAK_HANGING_SIGN
	f	Ldpz;	do	SPRUCE_HANGING_SIGN
	f	Ldpz;	dp	BIRCH_HANGING_SIGN
	f	Ldpz;	dq	ACACIA_HANGING_SIGN
	f	Ldpz;	dr	CHERRY_HANGING_SIGN
	f	Ldpz;	ds	JUNGLE_HANGING_SIGN
	f	Ldpz;	dt	DARK_OAK_HANGING_SIGN
	f	Ldpz;	du	PALE_OAK_HANGING_SIGN
	f	Ldpz;	dv	CRIMSON_HANGING_SIGN
	f	Ldpz;	dw	WARPED_HANGING_SIGN
	f	Ldpz;	dx	MANGROVE_HANGING_SIGN
	f	Ldpz;	dy	BAMBOO_HANGING_SIGN
	f	Ldpz;	dz	OAK_WALL_HANGING_SIGN
	f	Ldpz;	dA	SPRUCE_WALL_HANGING_SIGN
	f	Ldpz;	dB	BIRCH_WALL_HANGING_SIGN
	f	Ldpz;	dC	ACACIA_WALL_HANGING_SIGN
	f	Ldpz;	dD	CHERRY_WALL_HANGING_SIGN
	f	Ldpz;	dE	JUNGLE_WALL_HANGING_SIGN
	f	Ldpz;	dF	DARK_OAK_WALL_HANGING_SIGN
	f	Ldpz;	dG	PALE_OAK_WALL_HANGING_SIGN
	f	Ldpz;	dH	MANGROVE_WALL_HANGING_SIGN
	f	Ldpz;	dI	CRIMSON_WALL_HANGING_SIGN
	f	Ldpz;	dJ	WARPED_WALL_HANGING_SIGN
	f	Ldpz;	dK	BAMBOO_WALL_HANGING_SIGN
	f	Ldpz;	dL	LEVER
	f	Ldpz;	dM	STONE_PRESSURE_PLATE
	f	Ldpz;	dN	IRON_DOOR
	f	Ldpz;	dO	OAK_PRESSURE_PLATE
	f	Ldpz;	dP	SPRUCE_PRESSURE_PLATE
	f	Ldpz;	dQ	BIRCH_PRESSURE_PLATE
	f	Ldpz;	dR	JUNGLE_PRESSURE_PLATE
	f	Ldpz;	dS	ACACIA_PRESSURE_PLATE
	f	Ldpz;	dT	CHERRY_PRESSURE_PLATE
	f	Ldpz;	dU	DARK_OAK_PRESSURE_PLATE
	f	Ldpz;	dV	PALE_OAK_PRESSURE_PLATE
	f	Ldpz;	dW	MANGROVE_PRESSURE_PLATE
	f	Ldpz;	dX	BAMBOO_PRESSURE_PLATE
	f	Ldpz;	dY	REDSTONE_ORE
	f	Ldpz;	dZ	DEEPSLATE_REDSTONE_ORE
	f	Ldpz;	ea	REDSTONE_TORCH
	f	Ldpz;	eb	REDSTONE_WALL_TORCH
	f	Ldpz;	ec	STONE_BUTTON
	f	Ldpz;	ed	SNOW
	f	Ldpz;	ee	ICE
	f	Ldpz;	ef	SNOW_BLOCK
	f	Ldpz;	eg	CACTUS
	f	Ldpz;	eh	CACTUS_FLOWER
	f	Ldpz;	ei	CLAY
	f	Ldpz;	ej	SUGAR_CANE
	f	Ldpz;	ek	JUKEBOX
	f	Ldpz;	el	OAK_FENCE
	f	Ldpz;	em	NETHERRACK
	f	Ldpz;	en	SOUL_SAND
	f	Ldpz;	eo	SOUL_SOIL
	f	Ldpz;	ep	BASALT
	f	Ldpz;	eq	POLISHED_BASALT
	f	Ldpz;	er	SOUL_TORCH
	f	Ldpz;	es	SOUL_WALL_TORCH
	f	Ldpz;	et	GLOWSTONE
	f	Ldpz;	eu	NETHER_PORTAL
	f	Ldpz;	ev	CARVED_PUMPKIN
	f	Ldpz;	ew	JACK_O_LANTERN
	f	Ldpz;	ex	CAKE
	f	Ldpz;	ey	REPEATER
	f	Ldpz;	ez	WHITE_STAINED_GLASS
	f	Ldpz;	eA	ORANGE_STAINED_GLASS
	f	Ldpz;	eB	MAGENTA_STAINED_GLASS
	f	Ldpz;	eC	LIGHT_BLUE_STAINED_GLASS
	f	Ldpz;	eD	YELLOW_STAINED_GLASS
	f	Ldpz;	eE	LIME_STAINED_GLASS
	f	Ldpz;	eF	PINK_STAINED_GLASS
	f	Ldpz;	eG	GRAY_STAINED_GLASS
	f	Ldpz;	eH	LIGHT_GRAY_STAINED_GLASS
	f	Ldpz;	eI	CYAN_STAINED_GLASS
	f	Ldpz;	eJ	PURPLE_STAINED_GLASS
	f	Ldpz;	eK	BLUE_STAINED_GLASS
	f	Ldpz;	eL	BROWN_STAINED_GLASS
	f	Ldpz;	eM	GREEN_STAINED_GLASS
	f	Ldpz;	eN	RED_STAINED_GLASS
	f	Ldpz;	eO	BLACK_STAINED_GLASS
	f	Ldpz;	eP	OAK_TRAPDOOR
	f	Ldpz;	eQ	SPRUCE_TRAPDOOR
	f	Ldpz;	eR	BIRCH_TRAPDOOR
	f	Ldpz;	eS	JUNGLE_TRAPDOOR
	f	Ldpz;	eT	ACACIA_TRAPDOOR
	f	Ldpz;	eU	CHERRY_TRAPDOOR
	f	Ldpz;	eV	DARK_OAK_TRAPDOOR
	f	Ldpz;	eW	PALE_OAK_TRAPDOOR
	f	Ldpz;	eX	MANGROVE_TRAPDOOR
	f	Ldpz;	eY	BAMBOO_TRAPDOOR
	f	Ldpz;	eZ	STONE_BRICKS
	f	Ldpz;	fa	MOSSY_STONE_BRICKS
	f	Ldpz;	fb	CRACKED_STONE_BRICKS
	f	Ldpz;	fc	CHISELED_STONE_BRICKS
	f	Ldpz;	fd	PACKED_MUD
	f	Ldpz;	fe	MUD_BRICKS
	f	Ldpz;	ff	INFESTED_STONE
	f	Ldpz;	fg	INFESTED_COBBLESTONE
	f	Ldpz;	fh	INFESTED_STONE_BRICKS
	f	Ldpz;	fi	INFESTED_MOSSY_STONE_BRICKS
	f	Ldpz;	fj	INFESTED_CRACKED_STONE_BRICKS
	f	Ldpz;	fk	INFESTED_CHISELED_STONE_BRICKS
	f	Ldpz;	fl	BROWN_MUSHROOM_BLOCK
	f	Ldpz;	fm	RED_MUSHROOM_BLOCK
	f	Ldpz;	fn	MUSHROOM_STEM
	f	Ldpz;	fo	IRON_BARS
	f	Ldpz;	fp	CHAIN
	f	Ldpz;	fq	GLASS_PANE
	f	Ldpz;	fr	PUMPKIN
	f	Ldpz;	fs	MELON
	f	Ldpz;	ft	ATTACHED_PUMPKIN_STEM
	f	Ldpz;	fu	ATTACHED_MELON_STEM
	f	Ldpz;	fv	PUMPKIN_STEM
	f	Ldpz;	fw	MELON_STEM
	f	Ldpz;	fx	VINE
	f	Ldpz;	fy	GLOW_LICHEN
	f	Ldpz;	fz	RESIN_CLUMP
	f	Ldpz;	fA	OAK_FENCE_GATE
	f	Ldpz;	fB	BRICK_STAIRS
	f	Ldpz;	fC	STONE_BRICK_STAIRS
	f	Ldpz;	fD	MUD_BRICK_STAIRS
	f	Ldpz;	fE	MYCELIUM
	f	Ldpz;	fF	LILY_PAD
	f	Ldpz;	fG	RESIN_BLOCK
	f	Ldpz;	fH	RESIN_BRICKS
	f	Ldpz;	fI	RESIN_BRICK_STAIRS
	f	Ldpz;	fJ	RESIN_BRICK_SLAB
	f	Ldpz;	fK	RESIN_BRICK_WALL
	f	Ldpz;	fL	CHISELED_RESIN_BRICKS
	f	Ldpz;	fM	NETHER_BRICKS
	f	Ldpz;	fN	NETHER_BRICK_FENCE
	f	Ldpz;	fO	NETHER_BRICK_STAIRS
	f	Ldpz;	fP	NETHER_WART
	f	Ldpz;	fQ	ENCHANTING_TABLE
	f	Ldpz;	fR	BREWING_STAND
	f	Ldpz;	fS	CAULDRON
	f	Ldpz;	fT	WATER_CAULDRON
	f	Ldpz;	fU	LAVA_CAULDRON
	f	Ldpz;	fV	POWDER_SNOW_CAULDRON
	f	Ldpz;	fW	END_PORTAL
	f	Ldpz;	fX	END_PORTAL_FRAME
	f	Ldpz;	fY	END_STONE
	f	Ldpz;	fZ	DRAGON_EGG
	f	Ldpz;	ga	REDSTONE_LAMP
	f	Ldpz;	gb	COCOA
	f	Ldpz;	gc	SANDSTONE_STAIRS
	f	Ldpz;	gd	EMERALD_ORE
	f	Ldpz;	ge	DEEPSLATE_EMERALD_ORE
	f	Ldpz;	gf	ENDER_CHEST
	f	Ldpz;	gg	TRIPWIRE_HOOK
	f	Ldpz;	gh	TRIPWIRE
	f	Ldpz;	gi	EMERALD_BLOCK
	f	Ldpz;	gj	SPRUCE_STAIRS
	f	Ldpz;	gk	BIRCH_STAIRS
	f	Ldpz;	gl	JUNGLE_STAIRS
	f	Ldpz;	gm	COMMAND_BLOCK
	f	Ldpz;	gn	BEACON
	f	Ldpz;	go	COBBLESTONE_WALL
	f	Ldpz;	gp	MOSSY_COBBLESTONE_WALL
	f	Ldpz;	gq	FLOWER_POT
	f	Ldpz;	gr	POTTED_TORCHFLOWER
	f	Ldpz;	gs	POTTED_OAK_SAPLING
	f	Ldpz;	gt	POTTED_SPRUCE_SAPLING
	f	Ldpz;	gu	POTTED_BIRCH_SAPLING
	f	Ldpz;	gv	POTTED_JUNGLE_SAPLING
	f	Ldpz;	gw	POTTED_ACACIA_SAPLING
	f	Ldpz;	gx	POTTED_CHERRY_SAPLING
	f	Ldpz;	gy	POTTED_DARK_OAK_SAPLING
	f	Ldpz;	gz	POTTED_PALE_OAK_SAPLING
	f	Ldpz;	gA	POTTED_MANGROVE_PROPAGULE
	f	Ldpz;	gB	POTTED_FERN
	f	Ldpz;	gC	POTTED_DANDELION
	f	Ldpz;	gD	POTTED_POPPY
	f	Ldpz;	gE	POTTED_BLUE_ORCHID
	f	Ldpz;	gF	POTTED_ALLIUM
	f	Ldpz;	gG	POTTED_AZURE_BLUET
	f	Ldpz;	gH	POTTED_RED_TULIP
	f	Ldpz;	gI	POTTED_ORANGE_TULIP
	f	Ldpz;	gJ	POTTED_WHITE_TULIP
	f	Ldpz;	gK	POTTED_PINK_TULIP
	f	Ldpz;	gL	POTTED_OXEYE_DAISY
	f	Ldpz;	gM	POTTED_CORNFLOWER
	f	Ldpz;	gN	POTTED_LILY_OF_THE_VALLEY
	f	Ldpz;	gO	POTTED_WITHER_ROSE
	f	Ldpz;	gP	POTTED_RED_MUSHROOM
	f	Ldpz;	gQ	POTTED_BROWN_MUSHROOM
	f	Ldpz;	gR	POTTED_DEAD_BUSH
	f	Ldpz;	gS	POTTED_CACTUS
	f	Ldpz;	gT	CARROTS
	f	Ldpz;	gU	POTATOES
	f	Ldpz;	gV	OAK_BUTTON
	f	Ldpz;	gW	SPRUCE_BUTTON
	f	Ldpz;	gX	BIRCH_BUTTON
	f	Ldpz;	gY	JUNGLE_BUTTON
	f	Ldpz;	gZ	ACACIA_BUTTON
	f	Ldpz;	ha	CHERRY_BUTTON
	f	Ldpz;	hb	DARK_OAK_BUTTON
	f	Ldpz;	hc	PALE_OAK_BUTTON
	f	Ldpz;	hd	MANGROVE_BUTTON
	f	Ldpz;	he	BAMBOO_BUTTON
	f	Ldpz;	hf	SKELETON_SKULL
	f	Ldpz;	hg	SKELETON_WALL_SKULL
	f	Ldpz;	hh	WITHER_SKELETON_SKULL
	f	Ldpz;	hi	WITHER_SKELETON_WALL_SKULL
	f	Ldpz;	hj	ZOMBIE_HEAD
	f	Ldpz;	hk	ZOMBIE_WALL_HEAD
	f	Ldpz;	hl	PLAYER_HEAD
	f	Ldpz;	hm	PLAYER_WALL_HEAD
	f	Ldpz;	hn	CREEPER_HEAD
	f	Ldpz;	ho	CREEPER_WALL_HEAD
	f	Ldpz;	hp	DRAGON_HEAD
	f	Ldpz;	hq	DRAGON_WALL_HEAD
	f	Ldpz;	hr	PIGLIN_HEAD
	f	Ldpz;	hs	PIGLIN_WALL_HEAD
	f	Ldpz;	ht	ANVIL
	f	Ldpz;	hu	CHIPPED_ANVIL
	f	Ldpz;	hv	DAMAGED_ANVIL
	f	Ldpz;	hw	TRAPPED_CHEST
	f	Ldpz;	hx	LIGHT_WEIGHTED_PRESSURE_PLATE
	f	Ldpz;	hy	HEAVY_WEIGHTED_PRESSURE_PLATE
	f	Ldpz;	hz	COMPARATOR
	f	Ldpz;	hA	DAYLIGHT_DETECTOR
	f	Ldpz;	hB	REDSTONE_BLOCK
	f	Ldpz;	hC	NETHER_QUARTZ_ORE
	f	Ldpz;	hD	HOPPER
	f	Ldpz;	hE	QUARTZ_BLOCK
	f	Ldpz;	hF	CHISELED_QUARTZ_BLOCK
	f	Ldpz;	hG	QUARTZ_PILLAR
	f	Ldpz;	hH	QUARTZ_STAIRS
	f	Ldpz;	hI	ACTIVATOR_RAIL
	f	Ldpz;	hJ	DROPPER
	f	Ldpz;	hK	WHITE_TERRACOTTA
	f	Ldpz;	hL	ORANGE_TERRACOTTA
	f	Ldpz;	hM	MAGENTA_TERRACOTTA
	f	Ldpz;	hN	LIGHT_BLUE_TERRACOTTA
	f	Ldpz;	hO	YELLOW_TERRACOTTA
	f	Ldpz;	hP	LIME_TERRACOTTA
	f	Ldpz;	hQ	PINK_TERRACOTTA
	f	Ldpz;	hR	GRAY_TERRACOTTA
	f	Ldpz;	hS	LIGHT_GRAY_TERRACOTTA
	f	Ldpz;	hT	CYAN_TERRACOTTA
	f	Ldpz;	hU	PURPLE_TERRACOTTA
	f	Ldpz;	hV	BLUE_TERRACOTTA
	f	Ldpz;	hW	BROWN_TERRACOTTA
	f	Ldpz;	hX	GREEN_TERRACOTTA
	f	Ldpz;	hY	RED_TERRACOTTA
	f	Ldpz;	hZ	BLACK_TERRACOTTA
	f	Ldpz;	ia	WHITE_STAINED_GLASS_PANE
	f	Ldpz;	ib	ORANGE_STAINED_GLASS_PANE
	f	Ldpz;	ic	MAGENTA_STAINED_GLASS_PANE
	f	Ldpz;	id	LIGHT_BLUE_STAINED_GLASS_PANE
	f	Ldpz;	ie	YELLOW_STAINED_GLASS_PANE
	f	Ldpz;	if	LIME_STAINED_GLASS_PANE
	f	Ldpz;	ig	PINK_STAINED_GLASS_PANE
	f	Ldpz;	ih	GRAY_STAINED_GLASS_PANE
	f	Ldpz;	ii	LIGHT_GRAY_STAINED_GLASS_PANE
	f	Ldpz;	ij	CYAN_STAINED_GLASS_PANE
	f	Ldpz;	ik	PURPLE_STAINED_GLASS_PANE
	f	Ldpz;	il	BLUE_STAINED_GLASS_PANE
	f	Ldpz;	im	BROWN_STAINED_GLASS_PANE
	f	Ldpz;	in	GREEN_STAINED_GLASS_PANE
	f	Ldpz;	io	RED_STAINED_GLASS_PANE
	f	Ldpz;	ip	BLACK_STAINED_GLASS_PANE
	f	Ldpz;	iq	ACACIA_STAIRS
	f	Ldpz;	ir	CHERRY_STAIRS
	f	Ldpz;	is	DARK_OAK_STAIRS
	f	Ldpz;	it	PALE_OAK_STAIRS
	f	Ldpz;	iu	MANGROVE_STAIRS
	f	Ldpz;	iv	BAMBOO_STAIRS
	f	Ldpz;	iw	BAMBOO_MOSAIC_STAIRS
	f	Ldpz;	ix	SLIME_BLOCK
	f	Ldpz;	iy	BARRIER
	f	Ldpz;	iz	LIGHT
	f	Ldpz;	iA	IRON_TRAPDOOR
	f	Ldpz;	iB	PRISMARINE
	f	Ldpz;	iC	PRISMARINE_BRICKS
	f	Ldpz;	iD	DARK_PRISMARINE
	f	Ldpz;	iE	PRISMARINE_STAIRS
	f	Ldpz;	iF	PRISMARINE_BRICK_STAIRS
	f	Ldpz;	iG	DARK_PRISMARINE_STAIRS
	f	Ldpz;	iH	PRISMARINE_SLAB
	f	Ldpz;	iI	PRISMARINE_BRICK_SLAB
	f	Ldpz;	iJ	DARK_PRISMARINE_SLAB
	f	Ldpz;	iK	SEA_LANTERN
	f	Ldpz;	iL	HAY_BLOCK
	f	Ldpz;	iM	WHITE_CARPET
	f	Ldpz;	iN	ORANGE_CARPET
	f	Ldpz;	iO	MAGENTA_CARPET
	f	Ldpz;	iP	LIGHT_BLUE_CARPET
	f	Ldpz;	iQ	YELLOW_CARPET
	f	Ldpz;	iR	LIME_CARPET
	f	Ldpz;	iS	PINK_CARPET
	f	Ldpz;	iT	GRAY_CARPET
	f	Ldpz;	iU	LIGHT_GRAY_CARPET
	f	Ldpz;	iV	CYAN_CARPET
	f	Ldpz;	iW	PURPLE_CARPET
	f	Ldpz;	iX	BLUE_CARPET
	f	Ldpz;	iY	BROWN_CARPET
	f	Ldpz;	iZ	GREEN_CARPET
	f	Ldpz;	ja	RED_CARPET
	f	Ldpz;	jb	BLACK_CARPET
	f	Ldpz;	jc	TERRACOTTA
	f	Ldpz;	jd	COAL_BLOCK
	f	Ldpz;	je	PACKED_ICE
	f	Ldpz;	jf	SUNFLOWER
	f	Ldpz;	jg	LILAC
	f	Ldpz;	jh	ROSE_BUSH
	f	Ldpz;	ji	PEONY
	f	Ldpz;	jj	TALL_GRASS
	f	Ldpz;	jk	LARGE_FERN
	f	Ldpz;	jl	WHITE_BANNER
	f	Ldpz;	jm	ORANGE_BANNER
	f	Ldpz;	jn	MAGENTA_BANNER
	f	Ldpz;	jo	LIGHT_BLUE_BANNER
	f	Ldpz;	jp	YELLOW_BANNER
	f	Ldpz;	jq	LIME_BANNER
	f	Ldpz;	jr	PINK_BANNER
	f	Ldpz;	js	GRAY_BANNER
	f	Ldpz;	jt	LIGHT_GRAY_BANNER
	f	Ldpz;	ju	CYAN_BANNER
	f	Ldpz;	jv	PURPLE_BANNER
	f	Ldpz;	jw	BLUE_BANNER
	f	Ldpz;	jx	BROWN_BANNER
	f	Ldpz;	jy	GREEN_BANNER
	f	Ldpz;	jz	RED_BANNER
	f	Ldpz;	jA	BLACK_BANNER
	f	Ldpz;	jB	WHITE_WALL_BANNER
	f	Ldpz;	jC	ORANGE_WALL_BANNER
	f	Ldpz;	jD	MAGENTA_WALL_BANNER
	f	Ldpz;	jE	LIGHT_BLUE_WALL_BANNER
	f	Ldpz;	jF	YELLOW_WALL_BANNER
	f	Ldpz;	jG	LIME_WALL_BANNER
	f	Ldpz;	jH	PINK_WALL_BANNER
	f	Ldpz;	jI	GRAY_WALL_BANNER
	f	Ldpz;	jJ	LIGHT_GRAY_WALL_BANNER
	f	Ldpz;	jK	CYAN_WALL_BANNER
	f	Ldpz;	jL	PURPLE_WALL_BANNER
	f	Ldpz;	jM	BLUE_WALL_BANNER
	f	Ldpz;	jN	BROWN_WALL_BANNER
	f	Ldpz;	jO	GREEN_WALL_BANNER
	f	Ldpz;	jP	RED_WALL_BANNER
	f	Ldpz;	jQ	BLACK_WALL_BANNER
	f	Ldpz;	jR	RED_SANDSTONE
	f	Ldpz;	jS	CHISELED_RED_SANDSTONE
	f	Ldpz;	jT	CUT_RED_SANDSTONE
	f	Ldpz;	jU	RED_SANDSTONE_STAIRS
	f	Ldpz;	jV	OAK_SLAB
	f	Ldpz;	jW	SPRUCE_SLAB
	f	Ldpz;	jX	BIRCH_SLAB
	f	Ldpz;	jY	JUNGLE_SLAB
	f	Ldpz;	jZ	ACACIA_SLAB
	f	Ldpz;	ka	CHERRY_SLAB
	f	Ldpz;	kb	DARK_OAK_SLAB
	f	Ldpz;	kc	PALE_OAK_SLAB
	f	Ldpz;	kd	MANGROVE_SLAB
	f	Ldpz;	ke	BAMBOO_SLAB
	f	Ldpz;	kf	BAMBOO_MOSAIC_SLAB
	f	Ldpz;	kg	STONE_SLAB
	f	Ldpz;	kh	SMOOTH_STONE_SLAB
	f	Ldpz;	ki	SANDSTONE_SLAB
	f	Ldpz;	kj	CUT_SANDSTONE_SLAB
	f	Ldpz;	kk	PETRIFIED_OAK_SLAB
	f	Ldpz;	kl	COBBLESTONE_SLAB
	f	Ldpz;	km	BRICK_SLAB
	f	Ldpz;	kn	STONE_BRICK_SLAB
	f	Ldpz;	ko	MUD_BRICK_SLAB
	f	Ldpz;	kp	NETHER_BRICK_SLAB
	f	Ldpz;	kq	QUARTZ_SLAB
	f	Ldpz;	kr	RED_SANDSTONE_SLAB
	f	Ldpz;	ks	CUT_RED_SANDSTONE_SLAB
	f	Ldpz;	kt	PURPUR_SLAB
	f	Ldpz;	ku	SMOOTH_STONE
	f	Ldpz;	kv	SMOOTH_SANDSTONE
	f	Ldpz;	kw	SMOOTH_QUARTZ
	f	Ldpz;	kx	SMOOTH_RED_SANDSTONE
	f	Ldpz;	ky	SPRUCE_FENCE_GATE
	f	Ldpz;	kz	BIRCH_FENCE_GATE
	f	Ldpz;	kA	JUNGLE_FENCE_GATE
	f	Ldpz;	kB	ACACIA_FENCE_GATE
	f	Ldpz;	kC	CHERRY_FENCE_GATE
	f	Ldpz;	kD	DARK_OAK_FENCE_GATE
	f	Ldpz;	kE	PALE_OAK_FENCE_GATE
	f	Ldpz;	kF	MANGROVE_FENCE_GATE
	f	Ldpz;	kG	BAMBOO_FENCE_GATE
	f	Ldpz;	kH	SPRUCE_FENCE
	f	Ldpz;	kI	BIRCH_FENCE
	f	Ldpz;	kJ	JUNGLE_FENCE
	f	Ldpz;	kK	ACACIA_FENCE
	f	Ldpz;	kL	CHERRY_FENCE
	f	Ldpz;	kM	DARK_OAK_FENCE
	f	Ldpz;	kN	PALE_OAK_FENCE
	f	Ldpz;	kO	MANGROVE_FENCE
	f	Ldpz;	kP	BAMBOO_FENCE
	f	Ldpz;	kQ	SPRUCE_DOOR
	f	Ldpz;	kR	BIRCH_DOOR
	f	Ldpz;	kS	JUNGLE_DOOR
	f	Ldpz;	kT	ACACIA_DOOR
	f	Ldpz;	kU	CHERRY_DOOR
	f	Ldpz;	kV	DARK_OAK_DOOR
	f	Ldpz;	kW	PALE_OAK_DOOR
	f	Ldpz;	kX	MANGROVE_DOOR
	f	Ldpz;	kY	BAMBOO_DOOR
	f	Ldpz;	kZ	END_ROD
	f	Ldpz;	la	CHORUS_PLANT
	f	Ldpz;	lb	CHORUS_FLOWER
	f	Ldpz;	lc	PURPUR_BLOCK
	f	Ldpz;	ld	PURPUR_PILLAR
	f	Ldpz;	le	PURPUR_STAIRS
	f	Ldpz;	lf	END_STONE_BRICKS
	f	Ldpz;	lg	TORCHFLOWER_CROP
	f	Ldpz;	lh	PITCHER_CROP
	f	Ldpz;	li	PITCHER_PLANT
	f	Ldpz;	lj	BEETROOTS
	f	Ldpz;	lk	DIRT_PATH
	f	Ldpz;	ll	END_GATEWAY
	f	Ldpz;	lm	REPEATING_COMMAND_BLOCK
	f	Ldpz;	ln	CHAIN_COMMAND_BLOCK
	f	Ldpz;	lo	FROSTED_ICE
	f	Ldpz;	lp	MAGMA_BLOCK
	f	Ldpz;	lq	NETHER_WART_BLOCK
	f	Ldpz;	lr	RED_NETHER_BRICKS
	f	Ldpz;	ls	BONE_BLOCK
	f	Ldpz;	lt	STRUCTURE_VOID
	f	Ldpz;	lu	OBSERVER
	f	Ldpz;	lv	SHULKER_BOX
	f	Ldpz;	lw	WHITE_SHULKER_BOX
	f	Ldpz;	lx	ORANGE_SHULKER_BOX
	f	Ldpz;	ly	MAGENTA_SHULKER_BOX
	f	Ldpz;	lz	LIGHT_BLUE_SHULKER_BOX
	f	Ldpz;	lA	YELLOW_SHULKER_BOX
	f	Ldpz;	lB	LIME_SHULKER_BOX
	f	Ldpz;	lC	PINK_SHULKER_BOX
	f	Ldpz;	lD	GRAY_SHULKER_BOX
	f	Ldpz;	lE	LIGHT_GRAY_SHULKER_BOX
	f	Ldpz;	lF	CYAN_SHULKER_BOX
	f	Ldpz;	lG	PURPLE_SHULKER_BOX
	f	Ldpz;	lH	BLUE_SHULKER_BOX
	f	Ldpz;	lI	BROWN_SHULKER_BOX
	f	Ldpz;	lJ	GREEN_SHULKER_BOX
	f	Ldpz;	lK	RED_SHULKER_BOX
	f	Ldpz;	lL	BLACK_SHULKER_BOX
	f	Ldpz;	lM	WHITE_GLAZED_TERRACOTTA
	f	Ldpz;	lN	ORANGE_GLAZED_TERRACOTTA
	f	Ldpz;	lO	MAGENTA_GLAZED_TERRACOTTA
	f	Ldpz;	lP	LIGHT_BLUE_GLAZED_TERRACOTTA
	f	Ldpz;	lQ	YELLOW_GLAZED_TERRACOTTA
	f	Ldpz;	lR	LIME_GLAZED_TERRACOTTA
	f	Ldpz;	lS	PINK_GLAZED_TERRACOTTA
	f	Ldpz;	lT	GRAY_GLAZED_TERRACOTTA
	f	Ldpz;	lU	LIGHT_GRAY_GLAZED_TERRACOTTA
	f	Ldpz;	lV	CYAN_GLAZED_TERRACOTTA
	f	Ldpz;	lW	PURPLE_GLAZED_TERRACOTTA
	f	Ldpz;	lX	BLUE_GLAZED_TERRACOTTA
	f	Ldpz;	lY	BROWN_GLAZED_TERRACOTTA
	f	Ldpz;	lZ	GREEN_GLAZED_TERRACOTTA
	f	Ldpz;	ma	RED_GLAZED_TERRACOTTA
	f	Ldpz;	mb	BLACK_GLAZED_TERRACOTTA
	f	Ldpz;	mc	WHITE_CONCRETE
	f	Ldpz;	md	ORANGE_CONCRETE
	f	Ldpz;	me	MAGENTA_CONCRETE
	f	Ldpz;	mf	LIGHT_BLUE_CONCRETE
	f	Ldpz;	mg	YELLOW_CONCRETE
	f	Ldpz;	mh	LIME_CONCRETE
	f	Ldpz;	mi	PINK_CONCRETE
	f	Ldpz;	mj	GRAY_CONCRETE
	f	Ldpz;	mk	LIGHT_GRAY_CONCRETE
	f	Ldpz;	ml	CYAN_CONCRETE
	f	Ldpz;	mm	PURPLE_CONCRETE
	f	Ldpz;	mn	BLUE_CONCRETE
	f	Ldpz;	mo	BROWN_CONCRETE
	f	Ldpz;	mp	GREEN_CONCRETE
	f	Ldpz;	mq	RED_CONCRETE
	f	Ldpz;	mr	BLACK_CONCRETE
	f	Ldpz;	ms	WHITE_CONCRETE_POWDER
	f	Ldpz;	mt	ORANGE_CONCRETE_POWDER
	f	Ldpz;	mu	MAGENTA_CONCRETE_POWDER
	f	Ldpz;	mv	LIGHT_BLUE_CONCRETE_POWDER
	f	Ldpz;	mw	YELLOW_CONCRETE_POWDER
	f	Ldpz;	mx	LIME_CONCRETE_POWDER
	f	Ldpz;	my	PINK_CONCRETE_POWDER
	f	Ldpz;	mz	GRAY_CONCRETE_POWDER
	f	Ldpz;	mA	LIGHT_GRAY_CONCRETE_POWDER
	f	Ldpz;	mB	CYAN_CONCRETE_POWDER
	f	Ldpz;	mC	PURPLE_CONCRETE_POWDER
	f	Ldpz;	mD	BLUE_CONCRETE_POWDER
	f	Ldpz;	mE	BROWN_CONCRETE_POWDER
	f	Ldpz;	mF	GREEN_CONCRETE_POWDER
	f	Ldpz;	mG	RED_CONCRETE_POWDER
	f	Ldpz;	mH	BLACK_CONCRETE_POWDER
	f	Ldpz;	mI	KELP
	f	Ldpz;	mJ	KELP_PLANT
	f	Ldpz;	mK	DRIED_KELP_BLOCK
	f	Ldpz;	mL	TURTLE_EGG
	f	Ldpz;	mM	SNIFFER_EGG
	f	Ldpz;	mN	DRIED_GHAST
	f	Ldpz;	mO	DEAD_TUBE_CORAL_BLOCK
	f	Ldpz;	mP	DEAD_BRAIN_CORAL_BLOCK
	f	Ldpz;	mQ	DEAD_BUBBLE_CORAL_BLOCK
	f	Ldpz;	mR	DEAD_FIRE_CORAL_BLOCK
	f	Ldpz;	mS	DEAD_HORN_CORAL_BLOCK
	f	Ldpz;	mT	TUBE_CORAL_BLOCK
	f	Ldpz;	mU	BRAIN_CORAL_BLOCK
	f	Ldpz;	mV	BUBBLE_CORAL_BLOCK
	f	Ldpz;	mW	FIRE_CORAL_BLOCK
	f	Ldpz;	mX	HORN_CORAL_BLOCK
	f	Ldpz;	mY	DEAD_TUBE_CORAL
	f	Ldpz;	mZ	DEAD_BRAIN_CORAL
	f	Ldpz;	na	DEAD_BUBBLE_CORAL
	f	Ldpz;	nb	DEAD_FIRE_CORAL
	f	Ldpz;	nc	DEAD_HORN_CORAL
	f	Ldpz;	nd	TUBE_CORAL
	f	Ldpz;	ne	BRAIN_CORAL
	f	Ldpz;	nf	BUBBLE_CORAL
	f	Ldpz;	ng	FIRE_CORAL
	f	Ldpz;	nh	HORN_CORAL
	f	Ldpz;	ni	DEAD_TUBE_CORAL_FAN
	f	Ldpz;	nj	DEAD_BRAIN_CORAL_FAN
	f	Ldpz;	nk	DEAD_BUBBLE_CORAL_FAN
	f	Ldpz;	nl	DEAD_FIRE_CORAL_FAN
	f	Ldpz;	nm	DEAD_HORN_CORAL_FAN
	f	Ldpz;	nn	TUBE_CORAL_FAN
	f	Ldpz;	no	BRAIN_CORAL_FAN
	f	Ldpz;	np	BUBBLE_CORAL_FAN
	f	Ldpz;	nq	FIRE_CORAL_FAN
	f	Ldpz;	nr	HORN_CORAL_FAN
	f	Ldpz;	ns	DEAD_TUBE_CORAL_WALL_FAN
	f	Ldpz;	nt	DEAD_BRAIN_CORAL_WALL_FAN
	f	Ldpz;	nu	DEAD_BUBBLE_CORAL_WALL_FAN
	f	Ldpz;	nv	DEAD_FIRE_CORAL_WALL_FAN
	f	Ldpz;	nw	DEAD_HORN_CORAL_WALL_FAN
	f	Ldpz;	nx	TUBE_CORAL_WALL_FAN
	f	Ldpz;	ny	BRAIN_CORAL_WALL_FAN
	f	Ldpz;	nz	BUBBLE_CORAL_WALL_FAN
	f	Ldpz;	nA	FIRE_CORAL_WALL_FAN
	f	Ldpz;	nB	HORN_CORAL_WALL_FAN
	f	Ldpz;	nC	SEA_PICKLE
	f	Ldpz;	nD	BLUE_ICE
	f	Ldpz;	nE	CONDUIT
	f	Ldpz;	nF	BAMBOO_SAPLING
	f	Ldpz;	nG	BAMBOO
	f	Ldpz;	nH	POTTED_BAMBOO
	f	Ldpz;	nI	VOID_AIR
	f	Ldpz;	nJ	CAVE_AIR
	f	Ldpz;	nK	BUBBLE_COLUMN
	f	Ldpz;	nL	POLISHED_GRANITE_STAIRS
	f	Ldpz;	nM	SMOOTH_RED_SANDSTONE_STAIRS
	f	Ldpz;	nN	MOSSY_STONE_BRICK_STAIRS
	f	Ldpz;	nO	POLISHED_DIORITE_STAIRS
	f	Ldpz;	nP	MOSSY_COBBLESTONE_STAIRS
	f	Ldpz;	nQ	END_STONE_BRICK_STAIRS
	f	Ldpz;	nR	STONE_STAIRS
	f	Ldpz;	nS	SMOOTH_SANDSTONE_STAIRS
	f	Ldpz;	nT	SMOOTH_QUARTZ_STAIRS
	f	Ldpz;	nU	GRANITE_STAIRS
	f	Ldpz;	nV	ANDESITE_STAIRS
	f	Ldpz;	nW	RED_NETHER_BRICK_STAIRS
	f	Ldpz;	nX	POLISHED_ANDESITE_STAIRS
	f	Ldpz;	nY	DIORITE_STAIRS
	f	Ldpz;	nZ	POLISHED_GRANITE_SLAB
	f	Ldpz;	oa	SMOOTH_RED_SANDSTONE_SLAB
	f	Ldpz;	ob	MOSSY_STONE_BRICK_SLAB
	f	Ldpz;	oc	POLISHED_DIORITE_SLAB
	f	Ldpz;	od	MOSSY_COBBLESTONE_SLAB
	f	Ldpz;	oe	END_STONE_BRICK_SLAB
	f	Ldpz;	of	SMOOTH_SANDSTONE_SLAB
	f	Ldpz;	og	SMOOTH_QUARTZ_SLAB
	f	Ldpz;	oh	GRANITE_SLAB
	f	Ldpz;	oi	ANDESITE_SLAB
	f	Ldpz;	oj	RED_NETHER_BRICK_SLAB
	f	Ldpz;	ok	POLISHED_ANDESITE_SLAB
	f	Ldpz;	ol	DIORITE_SLAB
	f	Ldpz;	om	BRICK_WALL
	f	Ldpz;	on	PRISMARINE_WALL
	f	Ldpz;	oo	RED_SANDSTONE_WALL
	f	Ldpz;	op	MOSSY_STONE_BRICK_WALL
	f	Ldpz;	oq	GRANITE_WALL
	f	Ldpz;	or	STONE_BRICK_WALL
	f	Ldpz;	os	MUD_BRICK_WALL
	f	Ldpz;	ot	NETHER_BRICK_WALL
	f	Ldpz;	ou	ANDESITE_WALL
	f	Ldpz;	ov	RED_NETHER_BRICK_WALL
	f	Ldpz;	ow	SANDSTONE_WALL
	f	Ldpz;	ox	END_STONE_BRICK_WALL
	f	Ldpz;	oy	DIORITE_WALL
	f	Ldpz;	oz	SCAFFOLDING
	f	Ldpz;	oA	LOOM
	f	Ldpz;	oB	BARREL
	f	Ldpz;	oC	SMOKER
	f	Ldpz;	oD	BLAST_FURNACE
	f	Ldpz;	oE	CARTOGRAPHY_TABLE
	f	Ldpz;	oF	FLETCHING_TABLE
	f	Ldpz;	oG	GRINDSTONE
	f	Ldpz;	oH	LECTERN
	f	Ldpz;	oI	SMITHING_TABLE
	f	Ldpz;	oJ	STONECUTTER
	f	Ldpz;	oK	BELL
	f	Ldpz;	oL	LANTERN
	f	Ldpz;	oM	SOUL_LANTERN
	f	Ldpz;	oN	CAMPFIRE
	f	Ldpz;	oO	SOUL_CAMPFIRE
	f	Ldpz;	oP	SWEET_BERRY_BUSH
	f	Ldpz;	oQ	WARPED_STEM
	f	Ldpz;	oR	STRIPPED_WARPED_STEM
	f	Ldpz;	oS	WARPED_HYPHAE
	f	Ldpz;	oT	STRIPPED_WARPED_HYPHAE
	f	Ldpz;	oU	WARPED_NYLIUM
	f	Ldpz;	oV	WARPED_FUNGUS
	f	Ldpz;	oW	WARPED_WART_BLOCK
	f	Ldpz;	oX	WARPED_ROOTS
	f	Ldpz;	oY	NETHER_SPROUTS
	f	Ldpz;	oZ	CRIMSON_STEM
	f	Ldpz;	pa	STRIPPED_CRIMSON_STEM
	f	Ldpz;	pb	CRIMSON_HYPHAE
	f	Ldpz;	pc	STRIPPED_CRIMSON_HYPHAE
	f	Ldpz;	pd	CRIMSON_NYLIUM
	f	Ldpz;	pe	CRIMSON_FUNGUS
	f	Ldpz;	pf	SHROOMLIGHT
	f	Ldpz;	pg	WEEPING_VINES
	f	Ldpz;	ph	WEEPING_VINES_PLANT
	f	Ldpz;	pi	TWISTING_VINES
	f	Ldpz;	pj	TWISTING_VINES_PLANT
	f	Ldpz;	pk	CRIMSON_ROOTS
	f	Ldpz;	pl	CRIMSON_PLANKS
	f	Ldpz;	pm	WARPED_PLANKS
	f	Ldpz;	pn	CRIMSON_SLAB
	f	Ldpz;	po	WARPED_SLAB
	f	Ldpz;	pp	CRIMSON_PRESSURE_PLATE
	f	Ldpz;	pq	WARPED_PRESSURE_PLATE
	f	Ldpz;	pr	CRIMSON_FENCE
	f	Ldpz;	ps	WARPED_FENCE
	f	Ldpz;	pt	CRIMSON_TRAPDOOR
	f	Ldpz;	pu	WARPED_TRAPDOOR
	f	Ldpz;	pv	CRIMSON_FENCE_GATE
	f	Ldpz;	pw	WARPED_FENCE_GATE
	f	Ldpz;	px	CRIMSON_STAIRS
	f	Ldpz;	py	WARPED_STAIRS
	f	Ldpz;	pz	CRIMSON_BUTTON
	f	Ldpz;	pA	WARPED_BUTTON
	f	Ldpz;	pB	CRIMSON_DOOR
	f	Ldpz;	pC	WARPED_DOOR
	f	Ldpz;	pD	CRIMSON_SIGN
	f	Ldpz;	pE	WARPED_SIGN
	f	Ldpz;	pF	CRIMSON_WALL_SIGN
	f	Ldpz;	pG	WARPED_WALL_SIGN
	f	Ldpz;	pH	STRUCTURE_BLOCK
	f	Ldpz;	pI	JIGSAW
	f	Ldpz;	pJ	TEST_BLOCK
	f	Ldpz;	pK	TEST_INSTANCE_BLOCK
	f	Ldpz;	pL	COMPOSTER
	f	Ldpz;	pM	TARGET
	f	Ldpz;	pN	BEE_NEST
	f	Ldpz;	pO	BEEHIVE
	f	Ldpz;	pP	HONEY_BLOCK
	f	Ldpz;	pQ	HONEYCOMB_BLOCK
	f	Ldpz;	pR	NETHERITE_BLOCK
	f	Ldpz;	pS	ANCIENT_DEBRIS
	f	Ldpz;	pT	CRYING_OBSIDIAN
	f	Ldpz;	pU	RESPAWN_ANCHOR
	f	Ldpz;	pV	POTTED_CRIMSON_FUNGUS
	f	Ldpz;	pW	POTTED_WARPED_FUNGUS
	f	Ldpz;	pX	POTTED_CRIMSON_ROOTS
	f	Ldpz;	pY	POTTED_WARPED_ROOTS
	f	Ldpz;	pZ	LODESTONE
	f	Ldpz;	qa	BLACKSTONE
	f	Ldpz;	qb	BLACKSTONE_STAIRS
	f	Ldpz;	qc	BLACKSTONE_WALL
	f	Ldpz;	qd	BLACKSTONE_SLAB
	f	Ldpz;	qe	POLISHED_BLACKSTONE
	f	Ldpz;	qf	POLISHED_BLACKSTONE_BRICKS
	f	Ldpz;	qg	CRACKED_POLISHED_BLACKSTONE_BRICKS
	f	Ldpz;	qh	CHISELED_POLISHED_BLACKSTONE
	f	Ldpz;	qi	POLISHED_BLACKSTONE_BRICK_SLAB
	f	Ldpz;	qj	POLISHED_BLACKSTONE_BRICK_STAIRS
	f	Ldpz;	qk	POLISHED_BLACKSTONE_BRICK_WALL
	f	Ldpz;	ql	GILDED_BLACKSTONE
	f	Ldpz;	qm	POLISHED_BLACKSTONE_STAIRS
	f	Ldpz;	qn	POLISHED_BLACKSTONE_SLAB
	f	Ldpz;	qo	POLISHED_BLACKSTONE_PRESSURE_PLATE
	f	Ldpz;	qp	POLISHED_BLACKSTONE_BUTTON
	f	Ldpz;	qq	POLISHED_BLACKSTONE_WALL
	f	Ldpz;	qr	CHISELED_NETHER_BRICKS
	f	Ldpz;	qs	CRACKED_NETHER_BRICKS
	f	Ldpz;	qt	QUARTZ_BRICKS
	f	Ldpz;	qu	CANDLE
	f	Ldpz;	qv	WHITE_CANDLE
	f	Ldpz;	qw	ORANGE_CANDLE
	f	Ldpz;	qx	MAGENTA_CANDLE
	f	Ldpz;	qy	LIGHT_BLUE_CANDLE
	f	Ldpz;	qz	YELLOW_CANDLE
	f	Ldpz;	qA	LIME_CANDLE
	f	Ldpz;	qB	PINK_CANDLE
	f	Ldpz;	qC	GRAY_CANDLE
	f	Ldpz;	qD	LIGHT_GRAY_CANDLE
	f	Ldpz;	qE	CYAN_CANDLE
	f	Ldpz;	qF	PURPLE_CANDLE
	f	Ldpz;	qG	BLUE_CANDLE
	f	Ldpz;	qH	BROWN_CANDLE
	f	Ldpz;	qI	GREEN_CANDLE
	f	Ldpz;	qJ	RED_CANDLE
	f	Ldpz;	qK	BLACK_CANDLE
	f	Ldpz;	qL	CANDLE_CAKE
	f	Ldpz;	qM	WHITE_CANDLE_CAKE
	f	Ldpz;	qN	ORANGE_CANDLE_CAKE
	f	Ldpz;	qO	MAGENTA_CANDLE_CAKE
	f	Ldpz;	qP	LIGHT_BLUE_CANDLE_CAKE
	f	Ldpz;	qQ	YELLOW_CANDLE_CAKE
	f	Ldpz;	qR	LIME_CANDLE_CAKE
	f	Ldpz;	qS	PINK_CANDLE_CAKE
	f	Ldpz;	qT	GRAY_CANDLE_CAKE
	f	Ldpz;	qU	LIGHT_GRAY_CANDLE_CAKE
	f	Ldpz;	qV	CYAN_CANDLE_CAKE
	f	Ldpz;	qW	PURPLE_CANDLE_CAKE
	f	Ldpz;	qX	BLUE_CANDLE_CAKE
	f	Ldpz;	qY	BROWN_CANDLE_CAKE
	f	Ldpz;	qZ	GREEN_CANDLE_CAKE
	f	Ldpz;	ra	RED_CANDLE_CAKE
	f	Ldpz;	rb	BLACK_CANDLE_CAKE
	f	Ldpz;	rc	AMETHYST_BLOCK
	f	Ldpz;	rd	BUDDING_AMETHYST
	f	Ldpz;	re	AMETHYST_CLUSTER
	f	Ldpz;	rf	LARGE_AMETHYST_BUD
	f	Ldpz;	rg	MEDIUM_AMETHYST_BUD
	f	Ldpz;	rh	SMALL_AMETHYST_BUD
	f	Ldpz;	ri	TUFF
	f	Ldpz;	rj	TUFF_SLAB
	f	Ldpz;	rk	TUFF_STAIRS
	f	Ldpz;	rl	TUFF_WALL
	f	Ldpz;	rm	POLISHED_TUFF
	f	Ldpz;	rn	POLISHED_TUFF_SLAB
	f	Ldpz;	ro	POLISHED_TUFF_STAIRS
	f	Ldpz;	rp	POLISHED_TUFF_WALL
	f	Ldpz;	rq	CHISELED_TUFF
	f	Ldpz;	rr	TUFF_BRICKS
	f	Ldpz;	rs	TUFF_BRICK_SLAB
	f	Ldpz;	rt	TUFF_BRICK_STAIRS
	f	Ldpz;	ru	TUFF_BRICK_WALL
	f	Ldpz;	rv	CHISELED_TUFF_BRICKS
	f	Ldpz;	rw	CALCITE
	f	Ldpz;	rx	TINTED_GLASS
	f	Ldpz;	ry	POWDER_SNOW
	f	Ldpz;	rz	SCULK_SENSOR
	f	Ldpz;	rA	CALIBRATED_SCULK_SENSOR
	f	Ldpz;	rB	SCULK
	f	Ldpz;	rC	SCULK_VEIN
	f	Ldpz;	rD	SCULK_CATALYST
	f	Ldpz;	rE	SCULK_SHRIEKER
	f	Ldpz;	rF	COPPER_BLOCK
	f	Ldpz;	rG	EXPOSED_COPPER
	f	Ldpz;	rH	WEATHERED_COPPER
	f	Ldpz;	rI	OXIDIZED_COPPER
	f	Ldpz;	rJ	COPPER_ORE
	f	Ldpz;	rK	DEEPSLATE_COPPER_ORE
	f	Ldpz;	rL	OXIDIZED_CUT_COPPER
	f	Ldpz;	rM	WEATHERED_CUT_COPPER
	f	Ldpz;	rN	EXPOSED_CUT_COPPER
	f	Ldpz;	rO	CUT_COPPER
	f	Ldpz;	rP	OXIDIZED_CHISELED_COPPER
	f	Ldpz;	rQ	WEATHERED_CHISELED_COPPER
	f	Ldpz;	rR	EXPOSED_CHISELED_COPPER
	f	Ldpz;	rS	CHISELED_COPPER
	f	Ldpz;	rT	WAXED_OXIDIZED_CHISELED_COPPER
	f	Ldpz;	rU	WAXED_WEATHERED_CHISELED_COPPER
	f	Ldpz;	rV	WAXED_EXPOSED_CHISELED_COPPER
	f	Ldpz;	rW	WAXED_CHISELED_COPPER
	f	Ldpz;	rX	OXIDIZED_CUT_COPPER_STAIRS
	f	Ldpz;	rY	WEATHERED_CUT_COPPER_STAIRS
	f	Ldpz;	rZ	EXPOSED_CUT_COPPER_STAIRS
	f	Ldpz;	sa	CUT_COPPER_STAIRS
	f	Ldpz;	sb	OXIDIZED_CUT_COPPER_SLAB
	f	Ldpz;	sc	WEATHERED_CUT_COPPER_SLAB
	f	Ldpz;	sd	EXPOSED_CUT_COPPER_SLAB
	f	Ldpz;	se	CUT_COPPER_SLAB
	f	Ldpz;	sf	WAXED_COPPER_BLOCK
	f	Ldpz;	sg	WAXED_WEATHERED_COPPER
	f	Ldpz;	sh	WAXED_EXPOSED_COPPER
	f	Ldpz;	si	WAXED_OXIDIZED_COPPER
	f	Ldpz;	sj	WAXED_OXIDIZED_CUT_COPPER
	f	Ldpz;	sk	WAXED_WEATHERED_CUT_COPPER
	f	Ldpz;	sl	WAXED_EXPOSED_CUT_COPPER
	f	Ldpz;	sm	WAXED_CUT_COPPER
	f	Ldpz;	sn	WAXED_OXIDIZED_CUT_COPPER_STAIRS
	f	Ldpz;	so	WAXED_WEATHERED_CUT_COPPER_STAIRS
	f	Ldpz;	sp	WAXED_EXPOSED_CUT_COPPER_STAIRS
	f	Ldpz;	sq	WAXED_CUT_COPPER_STAIRS
	f	Ldpz;	sr	WAXED_OXIDIZED_CUT_COPPER_SLAB
	f	Ldpz;	ss	WAXED_WEATHERED_CUT_COPPER_SLAB
	f	Ldpz;	st	WAXED_EXPOSED_CUT_COPPER_SLAB
	f	Ldpz;	su	WAXED_CUT_COPPER_SLAB
	f	Ldpz;	sv	COPPER_DOOR
	f	Ldpz;	sw	EXPOSED_COPPER_DOOR
	f	Ldpz;	sx	OXIDIZED_COPPER_DOOR
	f	Ldpz;	sy	WEATHERED_COPPER_DOOR
	f	Ldpz;	sz	WAXED_COPPER_DOOR
	f	Ldpz;	sA	WAXED_EXPOSED_COPPER_DOOR
	f	Ldpz;	sB	WAXED_OXIDIZED_COPPER_DOOR
	f	Ldpz;	sC	WAXED_WEATHERED_COPPER_DOOR
	f	Ldpz;	sD	COPPER_TRAPDOOR
	f	Ldpz;	sE	EXPOSED_COPPER_TRAPDOOR
	f	Ldpz;	sF	OXIDIZED_COPPER_TRAPDOOR
	f	Ldpz;	sG	WEATHERED_COPPER_TRAPDOOR
	f	Ldpz;	sH	WAXED_COPPER_TRAPDOOR
	f	Ldpz;	sI	WAXED_EXPOSED_COPPER_TRAPDOOR
	f	Ldpz;	sJ	WAXED_OXIDIZED_COPPER_TRAPDOOR
	f	Ldpz;	sK	WAXED_WEATHERED_COPPER_TRAPDOOR
	f	Ldpz;	sL	COPPER_GRATE
	f	Ldpz;	sM	EXPOSED_COPPER_GRATE
	f	Ldpz;	sN	WEATHERED_COPPER_GRATE
	f	Ldpz;	sO	OXIDIZED_COPPER_GRATE
	f	Ldpz;	sP	WAXED_COPPER_GRATE
	f	Ldpz;	sQ	WAXED_EXPOSED_COPPER_GRATE
	f	Ldpz;	sR	WAXED_WEATHERED_COPPER_GRATE
	f	Ldpz;	sS	WAXED_OXIDIZED_COPPER_GRATE
	f	Ldpz;	sT	COPPER_BULB
	f	Ldpz;	sU	EXPOSED_COPPER_BULB
	f	Ldpz;	sV	WEATHERED_COPPER_BULB
	f	Ldpz;	sW	OXIDIZED_COPPER_BULB
	f	Ldpz;	sX	WAXED_COPPER_BULB
	f	Ldpz;	sY	WAXED_EXPOSED_COPPER_BULB
	f	Ldpz;	sZ	WAXED_WEATHERED_COPPER_BULB
	f	Ldpz;	ta	WAXED_OXIDIZED_COPPER_BULB
	f	Ldpz;	tb	LIGHTNING_ROD
	f	Ldpz;	tc	POINTED_DRIPSTONE
	f	Ldpz;	td	DRIPSTONE_BLOCK
	f	Ldpz;	te	CAVE_VINES
	f	Ldpz;	tf	CAVE_VINES_PLANT
	f	Ldpz;	tg	SPORE_BLOSSOM
	f	Ldpz;	th	AZALEA
	f	Ldpz;	ti	FLOWERING_AZALEA
	f	Ldpz;	tj	MOSS_CARPET
	f	Ldpz;	tk	PINK_PETALS
	f	Ldpz;	tl	WILDFLOWERS
	f	Ldpz;	tm	LEAF_LITTER
	f	Ldpz;	tn	MOSS_BLOCK
	f	Ldpz;	to	BIG_DRIPLEAF
	f	Ldpz;	tp	BIG_DRIPLEAF_STEM
	f	Ldpz;	tq	SMALL_DRIPLEAF
	f	Ldpz;	tr	HANGING_ROOTS
	f	Ldpz;	ts	ROOTED_DIRT
	f	Ldpz;	tt	MUD
	f	Ldpz;	tu	DEEPSLATE
	f	Ldpz;	tv	COBBLED_DEEPSLATE
	f	Ldpz;	tw	COBBLED_DEEPSLATE_STAIRS
	f	Ldpz;	tx	COBBLED_DEEPSLATE_SLAB
	f	Ldpz;	ty	COBBLED_DEEPSLATE_WALL
	f	Ldpz;	tz	POLISHED_DEEPSLATE
	f	Ldpz;	tA	POLISHED_DEEPSLATE_STAIRS
	f	Ldpz;	tB	POLISHED_DEEPSLATE_SLAB
	f	Ldpz;	tC	POLISHED_DEEPSLATE_WALL
	f	Ldpz;	tD	DEEPSLATE_TILES
	f	Ldpz;	tE	DEEPSLATE_TILE_STAIRS
	f	Ldpz;	tF	DEEPSLATE_TILE_SLAB
	f	Ldpz;	tG	DEEPSLATE_TILE_WALL
	f	Ldpz;	tH	DEEPSLATE_BRICKS
	f	Ldpz;	tI	DEEPSLATE_BRICK_STAIRS
	f	Ldpz;	tJ	DEEPSLATE_BRICK_SLAB
	f	Ldpz;	tK	DEEPSLATE_BRICK_WALL
	f	Ldpz;	tL	CHISELED_DEEPSLATE
	f	Ldpz;	tM	CRACKED_DEEPSLATE_BRICKS
	f	Ldpz;	tN	CRACKED_DEEPSLATE_TILES
	f	Ldpz;	tO	INFESTED_DEEPSLATE
	f	Ldpz;	tP	SMOOTH_BASALT
	f	Ldpz;	tQ	RAW_IRON_BLOCK
	f	Ldpz;	tR	RAW_COPPER_BLOCK
	f	Ldpz;	tS	RAW_GOLD_BLOCK
	f	Ldpz;	tT	POTTED_AZALEA
	f	Ldpz;	tU	POTTED_FLOWERING_AZALEA
	f	Ldpz;	tV	OCHRE_FROGLIGHT
	f	Ldpz;	tW	VERDANT_FROGLIGHT
	f	Ldpz;	tX	PEARLESCENT_FROGLIGHT
	f	Ldpz;	tY	FROGSPAWN
	f	Ldpz;	tZ	REINFORCED_DEEPSLATE
	f	Ldpz;	ua	DECORATED_POT
	f	Ldpz;	ub	CRAFTER
	f	Ldpz;	uc	TRIAL_SPAWNER
	f	Ldpz;	ud	VAULT
	f	Ldpz;	ue	HEAVY_CORE
	f	Ldpz;	uf	PALE_MOSS_BLOCK
	f	Ldpz;	ug	PALE_MOSS_CARPET
	f	Ldpz;	uh	PALE_HANGING_MOSS
	f	Ldpz;	ui	OPEN_EYEBLOSSOM
	f	Ldpz;	uj	CLOSED_EYEBLOSSOM
	f	Ldpz;	uk	POTTED_OPEN_EYEBLOSSOM
	f	Ldpz;	ul	POTTED_CLOSED_EYEBLOSSOM
	f	Ldpz;	um	FIREFLY_BUSH
	m	()V	<init>	<init>
	m	(I)Ljava/util/function/ToIntFunction;	a	litBlockEmission
	m	(Lfap;)Ljava/util/function/Function;	a	waterloggedMapColor
	m	(Leeb;Ldly;Ljb;Lbzv;)Ljava/lang/Boolean;	a	never
	m	(Leeb;Ldly;Ljb;Lbzv;)Ljava/lang/Boolean;	b	always
	m	(Leeb;Ldly;Ljb;Lbzv;)Ljava/lang/Boolean;	c	ocelotOrParrot
	m	(Ljava/lang/String;Ldbt;)Ldpz;	a	registerBed
	m	(Lfap;Lfap;Ldxx;)Leea$d;	a	logProperties
	m	(Lfap;)Leea$d;	b	netherStemProperties
	m	(Leeb;Ldly;Ljb;)Z	a	always
	m	(Leeb;Ldly;Ljb;)Z	b	never
	m	(Ljava/lang/String;Ldbt;)Ldpz;	b	registerStainedGlass
	m	(Ldxx;)Leea$d;	a	leavesProperties
	m	(Lfap;)Leea$d;	c	shulkerBoxProperties
	m	()Leea$d;	a	pistonProperties
	m	()Leea$d;	b	buttonProperties
	m	()Leea$d;	c	flowerPotProperties
	m	(Lfap;)Leea$d;	d	candleProperties
	m	(Ljava/lang/String;Ldpz;)Ldpz;	a	registerLegacyStair
	m	(Ljava/lang/String;Ldpz;)Ldpz;	b	registerStair
	m	(Ldpz;Z)Leea$d;	a	wallVariant
	m	(Lamd;Ljava/util/function/Function;Leea$d;)Ldpz;	a	register
	m	(Lamd;Leea$d;)Ldpz;	a	register
	m	(Ljava/lang/String;)Lamd;	a	vanillaBlockId
	m	(Ljava/lang/String;Ljava/util/function/Function;Leea$d;)Ldpz;	a	register
	m	(Ljava/lang/String;Leea$d;)Ldpz;	a	register
	m	(Leeb;)I	a	lambda$static$501
	m	(Leea$d;)Ldpz;	a	lambda$static$500
	m	(Leea$d;)Ldpz;	b	lambda$static$499
	m	(Leea$d;)Ldpz;	c	lambda$static$498
	m	(Leea$d;)Ldpz;	d	lambda$static$497
	m	(Leea$d;)Ldpz;	e	lambda$static$496
	m	(Leeb;)I	b	lambda$static$495
	m	(Leeb;)I	c	lambda$static$494
	m	(Leeb;)I	d	lambda$static$493
	m	(Leeb;)I	e	lambda$static$492
	m	(Leeb;)I	f	lambda$static$491
	m	(Leea$d;)Ldpz;	f	lambda$static$490
	m	(Leea$d;)Ldpz;	g	lambda$static$489
	m	(Leea$d;)Ldpz;	h	lambda$static$488
	m	(Leea$d;)Ldpz;	i	lambda$static$487
	m	(Leea$d;)Ldpz;	j	lambda$static$486
	m	(Leea$d;)Ldpz;	k	lambda$static$485
	m	(Leea$d;)Ldpz;	l	lambda$static$484
	m	(Leea$d;)Ldpz;	m	lambda$static$483
	m	(Leea$d;)Ldpz;	n	lambda$static$482
	m	(Leea$d;)Ldpz;	o	lambda$static$481
	m	(Leea$d;)Ldpz;	p	lambda$static$480
	m	(Leea$d;)Ldpz;	q	lambda$static$479
	m	(Leea$d;)Ldpz;	r	lambda$static$478
	m	(Leea$d;)Ldpz;	s	lambda$static$477
	m	(Leea$d;)Ldpz;	t	lambda$static$476
	m	(Leea$d;)Ldpz;	u	lambda$static$475
	m	(Leea$d;)Ldpz;	v	lambda$static$474
	m	(Leea$d;)Ldpz;	w	lambda$static$473
	m	(Leea$d;)Ldpz;	x	lambda$static$472
	m	(Leea$d;)Ldpz;	y	lambda$static$471
	m	(Leea$d;)Ldpz;	z	lambda$static$470
	m	(Leea$d;)Ldpz;	A	lambda$static$469
	m	(Leea$d;)Ldpz;	B	lambda$static$468
	m	(Leea$d;)Ldpz;	C	lambda$static$467
	m	(Leea$d;)Ldpz;	D	lambda$static$466
	m	(Leea$d;)Ldpz;	E	lambda$static$465
	m	(Leea$d;)Ldpz;	F	lambda$static$464
	m	(Leea$d;)Ldpz;	G	lambda$static$463
	m	(Leea$d;)Ldpz;	H	lambda$static$462
	m	(Leea$d;)Ldpz;	I	lambda$static$461
	m	(Leea$d;)Ldpz;	J	lambda$static$460
	m	(Leea$d;)Ldpz;	K	lambda$static$459
	m	(Leea$d;)Ldpz;	L	lambda$static$458
	m	(Leea$d;)Ldpz;	M	lambda$static$457
	m	(Leea$d;)Ldpz;	N	lambda$static$456
	m	(Leea$d;)Ldpz;	O	lambda$static$455
	m	(Leea$d;)Ldpz;	P	lambda$static$454
	m	(Leea$d;)Ldpz;	Q	lambda$static$453
	m	(Leea$d;)Ldpz;	R	lambda$static$452
	m	(Leea$d;)Ldpz;	S	lambda$static$451
	m	(Leea$d;)Ldpz;	T	lambda$static$450
	m	(Leea$d;)Ldpz;	U	lambda$static$449
	m	(Leea$d;)Ldpz;	V	lambda$static$448
	m	(Leea$d;)Ldpz;	W	lambda$static$447
	m	(Leea$d;)Ldpz;	X	lambda$static$446
	m	(Leea$d;)Ldpz;	Y	lambda$static$445
	m	(Leea$d;)Ldpz;	Z	lambda$static$444
	m	(Leea$d;)Ldpz;	aa	lambda$static$443
	m	(Leea$d;)Ldpz;	ab	lambda$static$442
	m	(Leea$d;)Ldpz;	ac	lambda$static$441
	m	(Leeb;)I	g	lambda$static$440
	m	(Leeb;Ldly;Ljb;)Z	c	lambda$static$439
	m	(Leeb;)I	h	lambda$static$438
	m	(Leea$d;)Ldpz;	ad	lambda$static$437
	m	(Leea$d;)Ldpz;	ae	lambda$static$436
	m	(Leea$d;)Ldpz;	af	lambda$static$435
	m	(Leeb;)I	i	lambda$static$434
	m	(Leea$d;)Ldpz;	ag	lambda$static$433
	m	(Leeb;)I	j	lambda$static$432
	m	(Leea$d;)Ldpz;	ah	lambda$static$431
	m	(Leeb;)I	k	lambda$static$430
	m	(Leea$d;)Ldpz;	ai	lambda$static$429
	m	(Leeb;)I	l	lambda$static$428
	m	(Leea$d;)Ldpz;	aj	lambda$static$427
	m	(Leea$d;)Ldpz;	ak	lambda$static$426
	m	(Leea$d;)Ldpz;	al	lambda$static$425
	m	(Leea$d;)Ldpz;	am	lambda$static$424
	m	(Leea$d;)Ldpz;	an	lambda$static$423
	m	(Leea$d;)Ldpz;	ao	lambda$static$422
	m	(Leea$d;)Ldpz;	ap	lambda$static$421
	m	(Leea$d;)Ldpz;	aq	lambda$static$420
	m	(Leea$d;)Ldpz;	ar	lambda$static$419
	m	(Leea$d;)Ldpz;	as	lambda$static$418
	m	(Leea$d;)Ldpz;	at	lambda$static$417
	m	(Leea$d;)Ldpz;	au	lambda$static$416
	m	(Leea$d;)Ldpz;	av	lambda$static$415
	m	(Leea$d;)Ldpz;	aw	lambda$static$414
	m	(Leea$d;)Ldpz;	ax	lambda$static$413
	m	(Leea$d;)Ldpz;	ay	lambda$static$412
	m	(Leea$d;)Ldpz;	az	lambda$static$411
	m	(Leea$d;)Ldpz;	aA	lambda$static$410
	m	(Leea$d;)Ldpz;	aB	lambda$static$409
	m	(Leea$d;)Ldpz;	aC	lambda$static$408
	m	(Leea$d;)Ldpz;	aD	lambda$static$407
	m	(Leea$d;)Ldpz;	aE	lambda$static$406
	m	(Leea$d;)Ldpz;	aF	lambda$static$405
	m	(Leea$d;)Ldpz;	aG	lambda$static$404
	m	(Leeb;)I	m	lambda$static$403
	m	(Leeb;)I	n	lambda$static$402
	m	(Leea$d;)Ldpz;	aH	lambda$static$401
	m	(Leea$d;)Ldpz;	aI	lambda$static$400
	m	(Leea$d;)Ldpz;	aJ	lambda$static$399
	m	(Leea$d;)Ldpz;	aK	lambda$static$398
	m	(Leea$d;)Ldpz;	aL	lambda$static$397
	m	(Leea$d;)Ldpz;	aM	lambda$static$396
	m	(Leea$d;)Ldpz;	aN	lambda$static$395
	m	(Leea$d;)Ldpz;	aO	lambda$static$394
	m	(Leea$d;)Ldpz;	aP	lambda$static$393
	m	(Leea$d;)Ldpz;	aQ	lambda$static$392
	m	(Leea$d;)Ldpz;	aR	lambda$static$391
	m	(Leea$d;)Ldpz;	aS	lambda$static$390
	m	(Leea$d;)Ldpz;	aT	lambda$static$389
	m	(Leea$d;)Ldpz;	aU	lambda$static$388
	m	(Leeb;)I	o	lambda$static$387
	m	(Leea$d;)Ldpz;	aV	lambda$static$386
	m	(Leea$d;)Ldpz;	aW	lambda$static$385
	m	(Leea$d;)Ldpz;	aX	lambda$static$384
	m	(Leea$d;)Ldpz;	aY	lambda$static$383
	m	(Leeb;)I	p	lambda$static$382
	m	(Leeb;)I	q	lambda$static$381
	m	(Leea$d;)Ldpz;	aZ	lambda$static$380
	m	(Leeb;)I	r	lambda$static$379
	m	(Leeb;)I	s	lambda$static$378
	m	(Leea$d;)Ldpz;	ba	lambda$static$377
	m	(Leea$d;)Ldpz;	bb	lambda$static$376
	m	(Leea$d;)Ldpz;	bc	lambda$static$375
	m	(Leea$d;)Ldpz;	bd	lambda$static$374
	m	(Leea$d;)Ldpz;	be	lambda$static$373
	m	(Leea$d;)Ldpz;	bf	lambda$static$372
	m	(Leea$d;)Ldpz;	bg	lambda$static$371
	m	(Leea$d;)Ldpz;	bh	lambda$static$370
	m	(Leea$d;)Ldpz;	bi	lambda$static$369
	m	(Leea$d;)Ldpz;	bj	lambda$static$368
	m	(Leea$d;)Ldpz;	bk	lambda$static$367
	m	(Leea$d;)Ldpz;	bl	lambda$static$366
	m	(Leea$d;)Ldpz;	bm	lambda$static$365
	m	(Leea$d;)Ldpz;	bn	lambda$static$364
	m	(Leea$d;)Ldpz;	bo	lambda$static$363
	m	(Leea$d;)Ldpz;	bp	lambda$static$362
	m	(Leea$d;)Ldpz;	bq	lambda$static$361
	m	(Leea$d;)Ldpz;	br	lambda$static$360
	m	(Leea$d;)Ldpz;	bs	lambda$static$359
	m	(Leea$d;)Ldpz;	bt	lambda$static$358
	m	(Leea$d;)Ldpz;	bu	lambda$static$357
	m	(Leea$d;)Ldpz;	bv	lambda$static$356
	m	(Leea$d;)Ldpz;	bw	lambda$static$355
	m	(Leea$d;)Ldpz;	bx	lambda$static$354
	m	(Leea$d;)Ldpz;	by	lambda$static$353
	m	(Leea$d;)Ldpz;	bz	lambda$static$352
	m	(Leea$d;)Ldpz;	bA	lambda$static$351
	m	(Leea$d;)Ldpz;	bB	lambda$static$350
	m	(Leea$d;)Ldpz;	bC	lambda$static$349
	m	(Leea$d;)Ldpz;	bD	lambda$static$348
	m	(Leea$d;)Ldpz;	bE	lambda$static$347
	m	(Leea$d;)Ldpz;	bF	lambda$static$346
	m	(Leea$d;)Ldpz;	bG	lambda$static$345
	m	(Leea$d;)Ldpz;	bH	lambda$static$344
	m	(Leea$d;)Ldpz;	bI	lambda$static$343
	m	(Leea$d;)Ldpz;	bJ	lambda$static$342
	m	(Leea$d;)Ldpz;	bK	lambda$static$341
	m	(Leea$d;)Ldpz;	bL	lambda$static$340
	m	(Leea$d;)Ldpz;	bM	lambda$static$339
	m	(Leea$d;)Ldpz;	bN	lambda$static$338
	m	(Leea$d;)Ldpz;	bO	lambda$static$337
	m	(Leea$d;)Ldpz;	bP	lambda$static$336
	m	(Leea$d;)Ldpz;	bQ	lambda$static$335
	m	(Leea$d;)Ldpz;	bR	lambda$static$334
	m	(Leea$d;)Ldpz;	bS	lambda$static$333
	m	(Leea$d;)Ldpz;	bT	lambda$static$332
	m	(Leea$d;)Ldpz;	bU	lambda$static$331
	m	(Leea$d;)Ldpz;	bV	lambda$static$330
	m	(Leea$d;)Ldpz;	bW	lambda$static$329
	m	(Leea$d;)Ldpz;	bX	lambda$static$328
	m	(Leea$d;)Ldpz;	bY	lambda$static$327
	m	(Leea$d;)Ldpz;	bZ	lambda$static$326
	m	(Leea$d;)Ldpz;	ca	lambda$static$325
	m	(Leeb;Ldly;Ljb;Lbzv;)Z	d	lambda$static$324
	m	(Leeb;)I	t	lambda$static$323
	m	(Leeb;Ldly;Ljb;Lbzv;)Z	e	lambda$static$322
	m	(Leea$d;)Ldpz;	cb	lambda$static$321
	m	(Leea$d;)Ldpz;	cc	lambda$static$320
	m	(Leeb;)I	u	lambda$static$319
	m	(Leea$d;)Ldpz;	cd	lambda$static$318
	m	(Leeb;)I	v	lambda$static$317
	m	(Leea$d;)Ldpz;	ce	lambda$static$316
	m	(Leea$d;)Ldpz;	cf	lambda$static$315
	m	(Leea$d;)Ldpz;	cg	lambda$static$314
	m	(Leea$d;)Ldpz;	ch	lambda$static$313
	m	(Leea$d;)Ldpz;	ci	lambda$static$312
	m	(Leea$d;)Ldpz;	cj	lambda$static$311
	m	(Leea$d;)Ldpz;	ck	lambda$static$310
	m	(Leea$d;)Ldpz;	cl	lambda$static$309
	m	(Leea$d;)Ldpz;	cm	lambda$static$308
	m	(Leea$d;)Ldpz;	cn	lambda$static$307
	m	(Leea$d;)Ldpz;	co	lambda$static$306
	m	(Leea$d;)Ldpz;	cp	lambda$static$305
	m	(Leea$d;)Ldpz;	cq	lambda$static$304
	m	(Leea$d;)Ldpz;	cr	lambda$static$303
	m	(Leea$d;)Ldpz;	cs	lambda$static$302
	m	(Leea$d;)Ldpz;	ct	lambda$static$301
	m	(Leea$d;)Ldpz;	cu	lambda$static$300
	m	(Leea$d;)Ldpz;	cv	lambda$static$299
	m	(Leea$d;)Ldpz;	cw	lambda$static$298
	m	(Leea$d;)Ldpz;	cx	lambda$static$297
	m	(Leea$d;)Ldpz;	cy	lambda$static$296
	m	(Leea$d;)Ldpz;	cz	lambda$static$295
	m	(Leea$d;)Ldpz;	cA	lambda$static$294
	m	(Leea$d;)Ldpz;	cB	lambda$static$293
	m	(Leea$d;)Ldpz;	cC	lambda$static$292
	m	(Leea$d;)Ldpz;	cD	lambda$static$291
	m	(Leea$d;)Ldpz;	cE	lambda$static$290
	m	(Leea$d;)Ldpz;	cF	lambda$static$289
	m	(Leea$d;)Ldpz;	cG	lambda$static$288
	m	(Leea$d;)Ldpz;	cH	lambda$static$287
	m	(Leea$d;)Ldpz;	cI	lambda$static$286
	m	(Leea$d;)Ldpz;	cJ	lambda$static$285
	m	(Leea$d;)Ldpz;	cK	lambda$static$284
	m	(Leea$d;)Ldpz;	cL	lambda$static$283
	m	(Leea$d;)Ldpz;	cM	lambda$static$282
	m	(Leea$d;)Ldpz;	cN	lambda$static$281
	m	(Leea$d;)Ldpz;	cO	lambda$static$280
	m	(Leea$d;)Ldpz;	cP	lambda$static$279
	m	(Leea$d;)Ldpz;	cQ	lambda$static$278
	m	(Leea$d;)Ldpz;	cR	lambda$static$277
	m	(Leea$d;)Ldpz;	cS	lambda$static$276
	m	(Leea$d;)Ldpz;	cT	lambda$static$275
	m	(Leea$d;)Ldpz;	cU	lambda$static$274
	m	(Leea$d;)Ldpz;	cV	lambda$static$273
	m	(Leea$d;)Ldpz;	cW	lambda$static$272
	m	(Leea$d;)Ldpz;	cX	lambda$static$271
	m	(Leea$d;)Ldpz;	cY	lambda$static$270
	m	(Leea$d;)Ldpz;	cZ	lambda$static$269
	m	(Leea$d;)Ldpz;	da	lambda$static$268
	m	(Leea$d;)Ldpz;	db	lambda$static$267
	m	(Leea$d;)Ldpz;	dc	lambda$static$266
	m	(Leea$d;)Ldpz;	dd	lambda$static$265
	m	(Leea$d;)Ldpz;	de	lambda$static$264
	m	(Leea$d;)Ldpz;	df	lambda$static$263
	m	(Leea$d;)Ldpz;	dg	lambda$static$262
	m	(Leea$d;)Ldpz;	dh	lambda$static$261
	m	(Leea$d;)Ldpz;	di	lambda$static$260
	m	(Leea$d;)Ldpz;	dj	lambda$static$259
	m	(Leea$d;)Ldpz;	dk	lambda$static$258
	m	(Leea$d;)Ldpz;	dl	lambda$static$257
	m	(Leea$d;)Ldpz;	dm	lambda$static$256
	m	(Leea$d;)Ldpz;	dn	lambda$static$255
	m	(Leea$d;)Ldpz;	do	lambda$static$254
	m	(Leea$d;)Ldpz;	dp	lambda$static$253
	m	(Leea$d;)Ldpz;	dq	lambda$static$252
	m	(Leea$d;)Ldpz;	dr	lambda$static$251
	m	(Leeb;)I	w	lambda$static$250
	m	(Leea$d;)Ldpz;	ds	lambda$static$249
	m	(Leea$d;)Ldpz;	dt	lambda$static$248
	m	(Leea$d;)Ldpz;	du	lambda$static$247
	m	(Leea$d;)Ldpz;	dv	lambda$static$246
	m	(Leea$d;)Ldpz;	dw	lambda$static$245
	m	(Leea$d;)Ldpz;	dx	lambda$static$244
	m	(Leea$d;)Ldpz;	dy	lambda$static$243
	m	(Leea$d;)Ldpz;	dz	lambda$static$242
	m	(Leea$d;)Ldpz;	dA	lambda$static$241
	m	(Leea$d;)Ldpz;	dB	lambda$static$240
	m	(Leea$d;)Ldpz;	dC	lambda$static$239
	m	(Leea$d;)Ldpz;	dD	lambda$static$238
	m	(Leea$d;)Ldpz;	dE	lambda$static$237
	m	(Leea$d;)Ldpz;	dF	lambda$static$236
	m	(Leea$d;)Ldpz;	dG	lambda$static$235
	m	(Leea$d;)Ldpz;	dH	lambda$static$234
	m	(Leea$d;)Ldpz;	dI	lambda$static$233
	m	(Leea$d;)Ldpz;	dJ	lambda$static$232
	m	(Leea$d;)Ldpz;	dK	lambda$static$231
	m	(Leea$d;)Ldpz;	dL	lambda$static$230
	m	(Leea$d;)Ldpz;	dM	lambda$static$229
	m	(Leea$d;)Ldpz;	dN	lambda$static$228
	m	(Leea$d;)Ldpz;	dO	lambda$static$227
	m	(Leea$d;)Ldpz;	dP	lambda$static$226
	m	(Leea$d;)Ldpz;	dQ	lambda$static$225
	m	(Leea$d;)Ldpz;	dR	lambda$static$224
	m	(Leea$d;)Ldpz;	dS	lambda$static$223
	m	(Leea$d;)Ldpz;	dT	lambda$static$222
	m	(Leea$d;)Ldpz;	dU	lambda$static$221
	m	(Leea$d;)Ldpz;	dV	lambda$static$220
	m	(Leea$d;)Ldpz;	dW	lambda$static$219
	m	(Leea$d;)Ldpz;	dX	lambda$static$218
	m	(Leea$d;)Ldpz;	dY	lambda$static$217
	m	(Leea$d;)Ldpz;	dZ	lambda$static$216
	m	(Leea$d;)Ldpz;	ea	lambda$static$215
	m	(Leea$d;)Ldpz;	eb	lambda$static$214
	m	(Leea$d;)Ldpz;	ec	lambda$static$213
	m	(Leea$d;)Ldpz;	ed	lambda$static$212
	m	(Leea$d;)Ldpz;	ee	lambda$static$211
	m	(Leea$d;)Ldpz;	ef	lambda$static$210
	m	(Leea$d;)Ldpz;	eg	lambda$static$209
	m	(Leea$d;)Ldpz;	eh	lambda$static$208
	m	(Leea$d;)Ldpz;	ei	lambda$static$207
	m	(Leea$d;)Ldpz;	ej	lambda$static$206
	m	(Leea$d;)Ldpz;	ek	lambda$static$205
	m	(Leea$d;)Ldpz;	el	lambda$static$204
	m	(Leea$d;)Ldpz;	em	lambda$static$203
	m	(Leea$d;)Ldpz;	en	lambda$static$202
	m	(Leea$d;)Ldpz;	eo	lambda$static$201
	m	(Leea$d;)Ldpz;	ep	lambda$static$200
	m	(Leea$d;)Ldpz;	eq	lambda$static$199
	m	(Leea$d;)Ldpz;	er	lambda$static$198
	m	(Leea$d;)Ldpz;	es	lambda$static$197
	m	(Leea$d;)Ldpz;	et	lambda$static$196
	m	(Leea$d;)Ldpz;	eu	lambda$static$195
	m	(Leea$d;)Ldpz;	ev	lambda$static$194
	m	(Leea$d;)Ldpz;	ew	lambda$static$193
	m	(Leea$d;)Ldpz;	ex	lambda$static$192
	m	(Leea$d;)Ldpz;	ey	lambda$static$191
	m	(Leea$d;)Ldpz;	ez	lambda$static$190
	m	(Leea$d;)Ldpz;	eA	lambda$static$189
	m	(Leea$d;)Ldpz;	eB	lambda$static$188
	m	(Leea$d;)Ldpz;	eC	lambda$static$187
	m	(Leea$d;)Ldpz;	eD	lambda$static$186
	m	(Leea$d;)Ldpz;	eE	lambda$static$185
	m	(Leea$d;)Ldpz;	eF	lambda$static$184
	m	(Leea$d;)Ldpz;	eG	lambda$static$183
	m	(Leea$d;)Ldpz;	eH	lambda$static$182
	m	(Leeb;)I	x	lambda$static$181
	m	(Leea$d;)Ldpz;	eI	lambda$static$180
	m	(Leea$d;)Ldpz;	eJ	lambda$static$179
	m	(Leeb;)I	y	lambda$static$178
	m	(Leea$d;)Ldpz;	eK	lambda$static$177
	m	(Leea$d;)Ldpz;	eL	lambda$static$176
	m	(Leeb;)I	z	lambda$static$175
	m	(Leeb;)I	A	lambda$static$174
	m	(Leeb;)I	B	lambda$static$173
	m	(Leea$d;)Ldpz;	eM	lambda$static$172
	m	(Leeb;)I	C	lambda$static$171
	m	(Leea$d;)Ldpz;	eN	lambda$static$170
	m	(Leeb;)I	D	lambda$static$169
	m	(Leeb;)I	E	lambda$static$168
	m	(Leea$d;)Ldpz;	eO	lambda$static$167
	m	(Leea$d;)Ldpz;	eP	lambda$static$166
	m	(Leea$d;)Ldpz;	eQ	lambda$static$165
	m	(Leea$d;)Ldpz;	eR	lambda$static$164
	m	(Leea$d;)Ldpz;	eS	lambda$static$163
	m	(Leea$d;)Ldpz;	eT	lambda$static$162
	m	(Leea$d;)Ldpz;	eU	lambda$static$161
	m	(Leea$d;)Ldpz;	eV	lambda$static$160
	m	(Leea$d;)Ldpz;	eW	lambda$static$159
	m	(Leea$d;)Ldpz;	eX	lambda$static$158
	m	(Leea$d;)Ldpz;	eY	lambda$static$157
	m	(Leea$d;)Ldpz;	eZ	lambda$static$156
	m	(Leea$d;)Ldpz;	fa	lambda$static$155
	m	(Leea$d;)Ldpz;	fb	lambda$static$154
	m	(Leea$d;)Ldpz;	fc	lambda$static$153
	m	(Leea$d;)Ldpz;	fd	lambda$static$152
	m	(Leea$d;)Ldpz;	fe	lambda$static$151
	m	(Leea$d;)Ldpz;	ff	lambda$static$150
	m	(Leea$d;)Ldpz;	fg	lambda$static$149
	m	(Leea$d;)Ldpz;	fh	lambda$static$148
	m	(Leea$d;)Ldpz;	fi	lambda$static$147
	m	(Leea$d;)Ldpz;	fj	lambda$static$146
	m	(Leea$d;)Ldpz;	fk	lambda$static$145
	m	(Leeb;)I	F	lambda$static$144
	m	(Leeb;)I	G	lambda$static$143
	m	(Leeb;)I	H	lambda$static$142
	m	(Leeb;)I	I	lambda$static$141
	m	(Leea$d;)Ldpz;	fl	lambda$static$140
	m	(Leeb;)I	J	lambda$static$139
	m	(Leea$d;)Ldpz;	fm	lambda$static$138
	m	(Leeb;Ldly;Ljb;Lbzv;)Z	f	lambda$static$137
	m	(Leeb;Ldly;Ljb;)Z	d	lambda$static$136
	m	(Leea$d;)Ldpz;	fn	lambda$static$135
	m	(Leea$d;)Ldpz;	fo	lambda$static$134
	m	(Leea$d;)Ldpz;	fp	lambda$static$133
	m	(Leea$d;)Ldpz;	fq	lambda$static$132
	m	(Leea$d;)Ldpz;	fr	lambda$static$131
	m	(Leea$d;)Ldpz;	fs	lambda$static$130
	m	(Leea$d;)Ldpz;	ft	lambda$static$129
	m	(Leea$d;)Ldpz;	fu	lambda$static$128
	m	(Leea$d;)Ldpz;	fv	lambda$static$127
	m	(Leea$d;)Ldpz;	fw	lambda$static$126
	m	(Leea$d;)Ldpz;	fx	lambda$static$125
	m	(Leea$d;)Ldpz;	fy	lambda$static$124
	m	(Leea$d;)Ldpz;	fz	lambda$static$123
	m	(Leea$d;)Ldpz;	fA	lambda$static$122
	m	(Leea$d;)Ldpz;	fB	lambda$static$121
	m	(Leea$d;)Ldpz;	fC	lambda$static$120
	m	(Leea$d;)Ldpz;	fD	lambda$static$119
	m	(Leea$d;)Ldpz;	fE	lambda$static$118
	m	(Leea$d;)Ldpz;	fF	lambda$static$117
	m	(Leea$d;)Ldpz;	fG	lambda$static$116
	m	(Leea$d;)Ldpz;	fH	lambda$static$115
	m	(Leea$d;)Ldpz;	fI	lambda$static$114
	m	(Leea$d;)Ldpz;	fJ	lambda$static$113
	m	(Leea$d;)Ldpz;	fK	lambda$static$112
	m	(Leea$d;)Ldpz;	fL	lambda$static$111
	m	(Leea$d;)Ldpz;	fM	lambda$static$110
	m	(Leea$d;)Ldpz;	fN	lambda$static$109
	m	(Leea$d;)Ldpz;	fO	lambda$static$108
	m	(Leea$d;)Ldpz;	fP	lambda$static$107
	m	(Leea$d;)Ldpz;	fQ	lambda$static$106
	m	(Leea$d;)Ldpz;	fR	lambda$static$105
	m	(Leea$d;)Ldpz;	fS	lambda$static$104
	m	(Leea$d;)Ldpz;	fT	lambda$static$103
	m	(Leea$d;)Ldpz;	fU	lambda$static$102
	m	(Leea$d;)Ldpz;	fV	lambda$static$101
	m	(Leea$d;)Ldpz;	fW	lambda$static$100
	m	(Leea$d;)Ldpz;	fX	lambda$static$99
	m	(Leea$d;)Ldpz;	fY	lambda$static$98
	m	(Leea$d;)Ldpz;	fZ	lambda$static$97
	m	(Leea$d;)Ldpz;	ga	lambda$static$96
	m	(Leea$d;)Ldpz;	gb	lambda$static$95
	m	(Leea$d;)Ldpz;	gc	lambda$static$94
	m	(Leea$d;)Ldpz;	gd	lambda$static$93
	m	(Leea$d;)Ldpz;	ge	lambda$static$92
	m	(Leea$d;)Ldpz;	gf	lambda$static$91
	m	(Leea$d;)Ldpz;	gg	lambda$static$90
	m	(Leea$d;)Ldpz;	gh	lambda$static$89
	m	(Leea$d;)Ldpz;	gi	lambda$static$88
	m	(Leea$d;)Ldpz;	gj	lambda$static$87
	m	(Leea$d;)Ldpz;	gk	lambda$static$86
	m	(Leea$d;)Ldpz;	gl	lambda$static$85
	m	(Leea$d;)Ldpz;	gm	lambda$static$84
	m	(Leea$d;)Ldpz;	gn	lambda$static$83
	m	(Leea$d;)Ldpz;	go	lambda$static$82
	m	(Leea$d;)Ldpz;	gp	lambda$static$81
	m	(Leea$d;)Ldpz;	gq	lambda$static$80
	m	(Leea$d;)Ldpz;	gr	lambda$static$79
	m	(Leea$d;)Ldpz;	gs	lambda$static$78
	m	(Leeb;)Lfap;	K	lambda$static$77
	m	(Leea$d;)Ldpz;	gt	lambda$static$76
	m	(Leea$d;)Ldpz;	gu	lambda$static$75
	m	(Leea$d;)Ldpz;	gv	lambda$static$74
	m	()Lebb;	d	lambda$static$73
	m	(Leeb;)I	L	lambda$static$72
	m	(Leeb;)I	M	lambda$static$71
	m	(Leeb;)I	N	lambda$static$70
	m	(Leea$d;)Ldpz;	gw	lambda$static$69
	m	(Leeb;)I	O	lambda$static$68
	m	(Leea$d;)Ldpz;	gx	lambda$static$67
	m	(Leea$d;)Ldpz;	gy	lambda$static$66
	m	(Leeb;)I	P	lambda$static$65
	m	(Leea$d;)Ldpz;	gz	lambda$static$64
	m	(Leea$d;)Ldpz;	gA	lambda$static$63
	m	(Leea$d;)Ldpz;	gB	lambda$static$62
	m	(Leea$d;)Ldpz;	gC	lambda$static$61
	m	(Leea$d;)Ldpz;	gD	lambda$static$60
	m	(Leea$d;)Ldpz;	gE	lambda$static$59
	m	(Leea$d;)Ldpz;	gF	lambda$static$58
	m	(Leea$d;)Ldpz;	gG	lambda$static$57
	m	(Leea$d;)Ldpz;	gH	lambda$static$56
	m	(Leea$d;)Ldpz;	gI	lambda$static$55
	m	(Leea$d;)Ldpz;	gJ	lambda$static$54
	m	(Leea$d;)Ldpz;	gK	lambda$static$53
	m	(Leea$d;)Ldpz;	gL	lambda$static$52
	m	(Leea$d;)Ldpz;	gM	lambda$static$51
	m	(Leea$d;)Ldpz;	gN	lambda$static$50
	m	(Leea$d;)Ldpz;	gO	lambda$static$49
	m	(Leea$d;)Ldpz;	gP	lambda$static$48
	m	(Leea$d;)Ldpz;	gQ	lambda$static$47
	m	(Leea$d;)Ldpz;	gR	lambda$static$46
	m	(Leea$d;)Ldpz;	gS	lambda$static$45
	m	(Leea$d;)Ldpz;	gT	lambda$static$44
	m	(Leea$d;)Ldpz;	gU	lambda$static$43
	m	(Leea$d;)Ldpz;	gV	lambda$static$42
	m	(Leea$d;)Ldpz;	gW	lambda$static$41
	m	(Leea$d;)Ldpz;	gX	lambda$static$40
	m	(Leea$d;)Ldpz;	gY	lambda$static$39
	m	(Leea$d;)Ldpz;	gZ	lambda$static$38
	m	(Leea$d;)Ldpz;	ha	lambda$static$37
	m	(Leea$d;)Ldpz;	hb	lambda$static$36
	m	(Leea$d;)Ldpz;	hc	lambda$static$35
	m	(Leea$d;)Ldpz;	hd	lambda$static$34
	m	(Leea$d;)Ldpz;	he	lambda$static$33
	m	(Leea$d;)Ldpz;	hf	lambda$static$32
	m	(Leea$d;)Ldpz;	hg	lambda$static$31
	m	(Leea$d;)Ldpz;	hh	lambda$static$30
	m	(Leea$d;)Ldpz;	hi	lambda$static$29
	m	(Leea$d;)Ldpz;	hj	lambda$static$28
	m	(Leea$d;)Ldpz;	hk	lambda$static$27
	m	(Leea$d;)Ldpz;	hl	lambda$static$26
	m	(Leea$d;)Ldpz;	hm	lambda$static$25
	m	(Leea$d;)Ldpz;	hn	lambda$static$24
	m	(Leea$d;)Ldpz;	ho	lambda$static$23
	m	(Leeb;)I	Q	lambda$static$22
	m	(Leea$d;)Ldpz;	hp	lambda$static$21
	m	(Leea$d;)Ldpz;	hq	lambda$static$20
	m	(Leea$d;)Ldpz;	hr	lambda$static$19
	m	(Leea$d;)Ldpz;	hs	lambda$static$18
	m	(Leea$d;)Ldpz;	ht	lambda$static$17
	m	(Leea$d;)Ldpz;	hu	lambda$static$16
	m	(Leea$d;)Ldpz;	hv	lambda$static$15
	m	(Leea$d;)Ldpz;	hw	lambda$static$14
	m	(Leea$d;)Ldpz;	hx	lambda$static$13
	m	(Leea$d;)Ldpz;	hy	lambda$static$12
	m	(Leea$d;)Ldpz;	hz	lambda$static$11
	m	(Ldpz;Leea$d;)Ldpz;	a	lambda$registerStair$10
	m	(Ldpz;Leea$d;)Ldpz;	b	lambda$registerLegacyStair$9
	m	(Ldbt;Leea$d;)Ldpz;	a	lambda$registerStainedGlass$8
	m	(Lfap;Leeb;)Lfap;	a	lambda$netherStemProperties$7
	m	(Lfap;Lfap;Leeb;)Lfap;	a	lambda$logProperties$6
	m	(Ldbt;Leeb;)Lfap;	a	lambda$registerBed$5
	m	(Ldbt;Leea$d;)Ldpz;	b	lambda$registerBed$4
	m	(Lfap;Leeb;)Lfap;	b	lambda$waterloggedMapColor$3
	m	(ILeeb;)I	a	lambda$litBlockEmission$2
	m	(Leeb;Ldly;Ljb;)Z	e	lambda$static$1
	m	(Leeb;Ldly;Ljb;)Z	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqc	net/minecraft/world/level/block/BonemealableBlock
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ldmx;Ljb;Leeb;)Z	a_	hasSpreadableNeighbourPos
	m	(Ldmu;Ljb;Leeb;)Ljava/util/Optional;	a	findSpreadableNeighbourPos
	m	(Ljava/util/List;Ldmx;Ljb;Leeb;)Ljava/util/Optional;	a	getSpreadableNeighbourPos
	m	(Ljb;)Ljb;	a	getParticlePos
	m	()Ldqc$a;	aq_	getType
c	dqc$a	net/minecraft/world/level/block/BonemealableBlock$Type
	f	Ldqc$a;	a	NEIGHBOR_SPREADER
	f	Ldqc$a;	b	GROWER
	f	[Ldqc$a;	c	$VALUES
	m	()[Ldqc$a;	values	values
	m	(Ljava/lang/String;)Ldqc$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldqc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dqd	net/minecraft/world/level/block/BonemealableFeaturePlacerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lamd;	b	feature
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()Ldqc$a;	aq_	getType
	m	(Laub;Lbck;Ljb;Ljl$c;)V	a	lambda$performBonemeal$3
	m	(Ljy;)Ljava/util/Optional;	a	lambda$performBonemeal$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldqd;)Lamd;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqe	net/minecraft/world/level/block/BrewingStandBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Lees;	b	HAS_BOTTLE
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dqf	net/minecraft/world/level/block/BrushableBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	c	DUSTED
	f	I	b	TICK_DELAY
	f	Ldpz;	d	turnsInto
	f	Layy;	e	brushSound
	f	Layy;	f	brushCompletedSound
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Layy;Layy;Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Ljb;Lcqy;)V	a	onBrokenAfterFall
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	()Ldpz;	b	getTurnsInto
	m	()Layy;	c	getBrushSound
	m	()Layy;	d	getBrushCompletedSound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqg	net/minecraft/world/level/block/BubbleColumnBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	DRAG_DOWN
	f	I	c	CHECK_PERIOD
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldmv;Ljb;Leeb;)V	b	updateColumn
	m	(Ldmv;Ljb;Leeb;Leeb;)V	a	updateColumn
	m	(Leeb;)Z	o	canExistIn
	m	(Leeb;)Leeb;	q	getColumnState
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	()Ljava/util/Optional;	as_	getPickupSound
	m	()V	<clinit>	<clinit>
c	dqh	net/minecraft/world/level/block/BucketPickup
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	()Ljava/util/Optional;	as_	getPickupSound
c	dqi	net/minecraft/world/level/block/BuddingAmethystBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	c	GROWTH_CHANCE
	f	[Ljh;	d	DIRECTIONS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	h	canClusterGrowAtState
	m	()V	<clinit>	<clinit>
c	dqj	net/minecraft/world/level/block/BushBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Laub;Ljb;)V	a	lambda$performBonemeal$0
	m	()V	<clinit>	<clinit>
c	dqk	net/minecraft/world/level/block/ButtonBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	POWERED
	f	Leeq;	d	type
	f	I	e	ticksToStayPressed
	f	Ljava/util/function/Function;	g	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;ILeea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmu;Ljb;Lcut;)V	a	press
	m	(Lcut;Ldmv;Ljb;Z)V	a	playSound
	m	(Z)Layy;	a	getSound
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldmu;Ljb;)V	d	checkPressed
	m	(Leeb;Ldmu;Ljb;)V	e	updateNeighbours
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Map;Lfjm;Lfjm;Leeb;)Lfjm;	a	lambda$makeShapes$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldqk;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ldqk;)Leeq;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dql	net/minecraft/world/level/block/CactusBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	AGE
	f	I	c	MAX_AGE
	f	Lfjm;	d	SHAPE
	f	Lfjm;	e	SHAPE_COLLISION
	f	I	f	MAX_CACTUS_GROWING_HEIGHT
	f	I	g	ATTEMPT_GROW_CACTUS_FLOWER_AGE
	f	D	h	ATTEMPT_GROW_CACTUS_FLOWER_SMALL_CACTUS_CHANCE
	f	D	i	ATTEMPT_GROW_CACTUS_FLOWER_TALL_CACTUS_CHANCE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dqm	net/minecraft/world/level/block/CactusFlowerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	()V	<clinit>	<clinit>
c	dqn	net/minecraft/world/level/block/CakeBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_BITES
	f	Lefb;	c	BITES
	f	I	d	FULL_CAKE_SIGNAL
	f	[Lfjm;	e	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmv;Ljb;Leeb;Lcut;)Lbxj;	a	eat
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(I)I	b	getOutputSignal
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqo	net/minecraft/world/level/block/CalibratedSculkSensorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	()I	c	getActiveTicks
	m	(Ldmu;Ljb;Leeb;Lebf;)V	a	lambda$getTicker$0
	m	()V	<clinit>	<clinit>
c	dqp	net/minecraft/world/level/block/CampfireBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	LIT
	f	Lees;	c	SIGNAL_FIRE
	f	Lees;	d	WATERLOGGED
	f	Leez;	e	FACING
	f	Lfjm;	f	SHAPE
	f	Lfjm;	g	SHAPE_VIRTUAL_POST
	f	I	h	SMOKE_DISTANCE
	f	Z	i	spawnParticles
	f	I	D	fireDamage
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ZILeea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Z	o	isSmokeSource
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Lbzm;Ldmv;Ljb;Leeb;)V	a	dowse
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldmu;Ljb;ZZ)V	a	makeParticles
	m	(Ldmu;Ljb;)Z	a	isSmokeyPos
	m	(Leeb;)Z	h	isLitCampfire
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;)Z	i	canLight
	m	(Leea$a;)Z	a	lambda$canLight$4
	m	(Laub;Ldht$a;Ldmu;Ljb;Leeb;Lebg;)V	a	lambda$getTicker$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldqp;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Ldqp;)Ljava/lang/Boolean;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqq	net/minecraft/world/level/block/CandleBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MIN_CANDLES
	f	I	e	MAX_CANDLES
	f	Lefb;	f	CANDLES
	f	Lees;	g	LIT
	f	Lees;	h	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	i	LIGHT_EMISSION
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	D	PARTICLE_OFFSETS
	f	[Lfjm;	R	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Leeb;)Z	h	canLight
	m	(Leeb;)Ljava/lang/Iterable;	b	getParticleOffsets
	m	(Leeb;)Z	d	canBeLit
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leea$a;)Z	a	lambda$canLight$2
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$1
	m	(Leeb;)I	o	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqr	net/minecraft/world/level/block/CandleCakeBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lees;	d	LIT
	f	Lfjm;	e	SHAPE
	f	Ljava/util/Map;	f	BY_CANDLE
	f	Ljava/lang/Iterable;	g	PARTICLE_OFFSETS
	f	Ldqq;	h	candleBlock
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;)Ljava/lang/Iterable;	b	getParticleOffsets
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Lfio;)Z	a	candleHit
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldqq;)Leeb;	a	byCandle
	m	(Leeb;)Z	h	canLight
	m	(Leeb;Leea$a;)Z	a	lambda$canLight$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldqr;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqs	net/minecraft/world/level/block/CarpetBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	()V	<clinit>	<clinit>
c	dqt	net/minecraft/world/level/block/CarrotBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Lfjm;	b	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldmt;	d	getBaseSeedId
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqu	net/minecraft/world/level/block/CartographyTableBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxo;	b	CONTAINER_TITLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	dqv	net/minecraft/world/level/block/CarvedPumpkinBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Leeg;	c	snowGolemBase
	f	Leeg;	d	snowGolemFull
	f	Leeg;	e	ironGolemBase
	f	Leeg;	g	ironGolemFull
	f	Ljava/util/function/Predicate;	h	PUMPKINS_PREDICATE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldmx;Ljb;)Z	a	canSpawnGolem
	m	(Ldmu;Ljb;)V	a	trySpawnGolem
	m	(Ldmu;Leeg$b;Lbzm;Ljb;)V	a	spawnGolemInWorld
	m	(Ldmu;Leeg$b;)V	a	clearPatternBlocks
	m	(Ldmu;Leeg$b;)V	b	updatePatternBlocks
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()Leeg;	b	getOrCreateSnowGolemBase
	m	()Leeg;	q	getOrCreateSnowGolemFull
	m	()Leeg;	r	getOrCreateIronGolemBase
	m	()Leeg;	y	getOrCreateIronGolemFull
	m	(Leef;)Z	a	lambda$getOrCreateIronGolemFull$2
	m	(Leef;)Z	b	lambda$getOrCreateIronGolemBase$1
	m	(Leeb;)Z	o	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dqw	net/minecraft/world/level/block/CauldronBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	F	e	RAIN_FILL_CHANCE
	f	F	f	POWDER_SNOW_FILL_CHANCE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	d	isFull
	m	(Ldmu;Ldnx$c;)Z	a	shouldHandlePrecipitation
	m	(Leeb;Ldmu;Ljb;Ldnx$c;)V	a	handlePrecipitation
	m	(Lfak;)Z	a	canReceiveStalactiteDrip
	m	(Leeb;Ldmu;Ljb;Lfak;)V	a	receiveStalactiteDrip
	m	()V	<clinit>	<clinit>
c	dqx	net/minecraft/world/level/block/CaveVines
	f	Lfjm;	z_	SHAPE
	f	Lees;	A_	BERRIES
	m	(Lbzm;Leeb;Ldmu;Ljb;)Lbxj;	a	use
	m	(Leeb;)Z	j_	hasGlowBerries
	m	(I)Ljava/util/function/ToIntFunction;	i_	emission
	m	(ILeeb;)I	a	lambda$emission$0
	m	()V	<clinit>	<clinit>
c	dqy	net/minecraft/world/level/block/CaveVinesBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	F	g	CHANCE_OF_BERRIES_ON_GROWTH
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
	m	(Leeb;)Z	h	canGrowInto
	m	()Ldpz;	b	getBodyBlock
	m	(Leeb;Leeb;)Leeb;	a	updateBodyAfterConvertedFromHead
	m	(Leeb;Lbck;)Leeb;	a	getGrowIntoState
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dqz	net/minecraft/world/level/block/CaveVinesPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldtt;	c	getHeadBlock
	m	(Leeb;Leeb;)Leeb;	a	updateHeadAfterConvertedFromBody
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dra	net/minecraft/world/level/block/CeilingHangingSignBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	ROTATION
	f	Lees;	c	ATTACHED
	f	Lfjm;	e	SHAPE_DEFAULT
	f	Ljava/util/Map;	f	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Lcut;Lfio;Lecn;Ldcv;)Z	a	shouldTryToChainAnotherHangingSign
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)F	h	getYRotationDegrees
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ljava/util/Map$Entry;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drb	net/minecraft/world/level/block/ChainBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Ljava/util/Map;	e	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	drc	net/minecraft/world/level/block/ChangeOverTimeBlock
	f	I	E_	SCAN_DISTANCE
	m	(Leeb;)Ljava/util/Optional;	k_	getNext
	m	()F	au_	getChanceModifier
	m	(Leeb;Laub;Ljb;Lbck;)V	a_	changeOverTime
	m	()Ljava/lang/Enum;	c	getAge
	m	(Leeb;Laub;Ljb;Lbck;)Ljava/util/Optional;	c	getNextState
	m	(Laub;Ljb;Leeb;)V	a	lambda$changeOverTime$0
c	drd	net/minecraft/world/level/block/ChestBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	FACING
	f	Leez;	d	TYPE
	f	Lees;	e	WATERLOGGED
	f	I	f	EVENT_SET_OPEN_COUNT
	f	Lfjm;	g	SHAPE
	f	Ljava/util/Map;	h	HALF_SHAPES
	f	Ldsh$b;	i	CHEST_COMBINER
	f	Ldsh$b;	D	MENU_PROVIDER_COMBINER
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/function/Supplier;Leea$d;)V	<init>	<init>
	m	(Leeb;)Ldsh$a;	h	getBlockType
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Ljh;	i	getConnectedDirection
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldgo;Ljh;)Ljh;	a	candidatePartnerFacing
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	()Lazg;	c	getOpenChestStat
	m	()Lebb;	d	blockEntityType
	m	(Ldrd;Leeb;Ldmu;Ljb;Z)Lbxc;	a	getContainer
	m	(Leeb;Ldmu;Ljb;Z)Ldsh$c;	a	combine
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Lecg;)Ldsh$b;	a	opennessCombiner
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmv;Ljb;)Z	a	isChestBlockedAt
	m	(Ldly;Ljb;)Z	a	isBlockedChestByBlock
	m	(Ldmv;Ljb;)Z	b	isCatSittingOnChest
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmv;Ljb;)Z	c	lambda$combine$2
	m	(Leea$d;)Ldrd;	a	lambda$static$1
	m	()Lebb;	q	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drd$1	net/minecraft/world/level/block/ChestBlock$1
	m	()V	<init>	<init>
	m	(Lebh;Lebh;)Ljava/util/Optional;	a	acceptDouble
	m	(Lebh;)Ljava/util/Optional;	a	acceptSingle
	m	()Ljava/util/Optional;	a	acceptNone
	m	()Ljava/lang/Object;	b	acceptNone
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
c	drd$2	net/minecraft/world/level/block/ChestBlock$2
	m	()V	<init>	<init>
	m	(Lebh;Lebh;)Ljava/util/Optional;	a	acceptDouble
	m	(Lebh;)Ljava/util/Optional;	a	acceptSingle
	m	()Ljava/util/Optional;	a	acceptNone
	m	()Ljava/lang/Object;	b	acceptNone
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
c	drd$2$1	net/minecraft/world/level/block/ChestBlock$2$1
	f	Lebh;	a	val$first
	f	Lebh;	b	val$second
	f	Lbxc;	c	val$container
	m	(Ldrd$2;Lebh;Lebh;Lbxc;)V	<init>	<init>
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	()Lxo;	Q_	getDisplayName
c	drd$3	net/minecraft/world/level/block/ChestBlock$3
	f	Lecg;	a	val$entity
	m	(Lecg;)V	<init>	<init>
	m	(Lebh;Lebh;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptDouble
	m	(Lebh;)Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptSingle
	m	()Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;	a	acceptNone
	m	()Ljava/lang/Object;	b	acceptNone
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	(Lebh;Lebh;F)F	a	lambda$acceptDouble$0
c	drd$4	net/minecraft/world/level/block/ChestBlock$4
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$ChestType
	m	()V	<clinit>	<clinit>
c	dre	net/minecraft/world/level/block/ChiseledBookShelfBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	d	MAX_BOOKS_IN_STORAGE
	f	I	b	BOOKS_PER_ROW
	f	Ljava/util/List;	c	SLOT_OCCUPIED_PROPERTIES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Lfio;Leeb;)Ljava/util/OptionalInt;	a	getHitSlot
	m	(Lfio;Ljh;)Ljava/util/Optional;	a	getRelativeHitCoordinatesForBlockFace
	m	(F)I	a	getSection
	m	(Ldmu;Ljb;Lcut;Lebj;Ldcv;I)V	a	addBook
	m	(Ldmu;Ljb;Lcut;Lebj;I)V	a	removeBook
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leec$a;Lefe;)V	a	lambda$createBlockStateDefinition$1
	m	(Lfir;)Ljava/util/OptionalInt;	a	lambda$getHitSlot$0
	m	()V	<clinit>	<clinit>
c	dre$1	net/minecraft/world/level/block/ChiseledBookShelfBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	drf	net/minecraft/world/level/block/ChorusFlowerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	DEAD_AGE
	f	Lefb;	c	AGE
	f	Lfjm;	d	SHAPE_BLOCK_SUPPORT
	f	Ldpz;	e	plant
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;Ljb;I)V	a	placeGrownFlower
	m	(Ldmu;Ljb;)V	a	placeDeadFlower
	m	(Ldmx;Ljb;Ljh;)Z	b	allNeighborsEmpty
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmv;Ljb;Lbck;I)V	a	generatePlant
	m	(Ldmv;Ljb;Lbck;Ljb;II)V	a	growTreeRecursive
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrf;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drg	net/minecraft/world/level/block/ChorusPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;Leeb;)Leeb;	a	getStateWithConnections
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	drh	net/minecraft/world/level/block/CocoaBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	Ljava/util/List;	d	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(I)Ljava/util/Map;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dri	net/minecraft/world/level/block/ColoredFallingBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbat;	b	dustColor
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbat;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;)I	b	getDustColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldri;)Lbat;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drj	net/minecraft/world/level/block/CommandBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Leez;	b	FACING
	f	Lees;	c	CONDITIONAL
	f	Z	e	automatic
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ZLeea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Lebk;Z)V	a	setPoweredAndUpdate
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Ldlt;Z)V	a	execute
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Laub;Ljb;Ljh;)V	a	executeChain
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrj;)Ljava/lang/Boolean;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drk	net/minecraft/world/level/block/ComparatorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	MODE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)I	h	getDelay
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldly;Ljb;Leeb;)I	a	getOutputSignal
	m	(Ldmu;Ljb;Leeb;)I	e	calculateOutputSignal
	m	(Ldmu;Ljb;Leeb;)Z	a	shouldTurnOn
	m	(Ldmu;Ljb;Leeb;)I	b	getInputSignal
	m	(Ldmu;Ljh;Ljb;)Lcqs;	a	getItemFrame
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;Leeb;)V	c	checkTickOnNeighbor
	m	(Ldmu;Ljb;Leeb;)V	f	refreshOutputState
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljh;Lcqs;)Z	a	lambda$getItemFrame$0
	m	()V	<clinit>	<clinit>
c	drl	net/minecraft/world/level/block/ComposterBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	READY
	f	I	c	MIN_LEVEL
	f	I	d	MAX_LEVEL
	f	Lefb;	e	LEVEL
	f	Lit/unimi/dsi/fastutil/objects/Object2FloatMap;	f	COMPOSTABLES
	f	I	g	HOLE_WIDTH
	f	[Lfjm;	h	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	b	bootStrap
	m	(FLdmt;)V	a	add
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Z)V	a	handleFill
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getInteractionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Lbzm;Leeb;Laub;Ldcv;Ljb;)Leeb;	a	insertItem
	m	(Lbzm;Leeb;Ldmu;Ljb;)Leeb;	a	extractProduce
	m	(Lbzm;Leeb;Ldmv;Ljb;)Leeb;	a	empty
	m	(Lbzm;Leeb;Ldmv;Ljb;Ldcv;)Leeb;	a	addItem
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldmv;Ljb;)Lbxu;	a	getContainer
	m	()[Lfjm;	q	lambda$static$1
	m	(I)Lfjm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drl$a	net/minecraft/world/level/block/ComposterBlock$EmptyContainer
	m	()V	<init>	<init>
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
c	drl$b	net/minecraft/world/level/block/ComposterBlock$InputContainer
	f	Leeb;	b	state
	f	Ldmv;	c	level
	f	Ljb;	d	pos
	f	Z	e	changed
	m	(Leeb;Ldmv;Ljb;)V	<init>	<init>
	m	()I	an_	getMaxStackSize
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
	m	()V	e	setChanged
c	drl$c	net/minecraft/world/level/block/ComposterBlock$OutputContainer
	f	Leeb;	b	state
	f	Ldmv;	c	level
	f	Ljb;	d	pos
	f	Z	e	changed
	m	(Leeb;Ldmv;Ljb;Ldcv;)V	<init>	<init>
	m	()I	an_	getMaxStackSize
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
	m	()V	e	setChanged
c	drm	net/minecraft/world/level/block/ConcretePowderBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpz;	b	concrete
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Leeb;Lcqy;)V	a	onLand
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;Leeb;)Z	a	shouldSolidify
	m	(Ldly;Ljb;)Z	a	touchesLiquid
	m	(Leeb;)Z	o	canSolidify
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;)I	b	getDustColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrm;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drn	net/minecraft/world/level/block/ConduitBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dro	net/minecraft/world/level/block/CopperBulbBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	POWERED
	f	Lees;	c	LIT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Laub;Ljb;)V	a	checkAndFlip
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	()V	<clinit>	<clinit>
c	drp	net/minecraft/world/level/block/CoralBlock
	f	Lcom/mojang/serialization/MapCodec;	a	DEAD_CORAL_FIELD
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldpz;	c	deadBlock
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldly;Ljb;)Z	a	scanForWater
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrp;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drq	net/minecraft/world/level/block/CoralFanBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Ldpz;	d	deadBlock
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrq;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drr	net/minecraft/world/level/block/CoralPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpz;	c	deadBlock
	f	Lfjm;	d	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrr;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drs	net/minecraft/world/level/block/CoralWallFanBlock
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldpz;	f	deadBlock
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldrs;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drt	net/minecraft/world/level/block/CrafterBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	CRAFTING
	f	Lees;	c	TRIGGERED
	f	Leez;	d	ORIENTATION
	f	I	e	MAX_CRAFTING_TICKS
	f	I	f	CRAFTING_TICK_DELAY
	f	Ldhq;	g	RECIPE_CACHE
	f	I	h	CRAFTER_ADVANCEMENT_DIAMETER
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leaz;Z)V	a	setBlockEntityTriggered
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;)V	a	dispenseFrom
	m	(Laub;Ldha;)Ljava/util/Optional;	a	getPotentialResults
	m	(Laub;Ljb;Lebo;Ldcv;Leeb;Ldhr;)V	a	dispenseItem
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldcv;)V	a	lambda$dispenseFrom$0
	m	()V	<clinit>	<clinit>
c	drt$1	net/minecraft/world/level/block/CrafterBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	dru	net/minecraft/world/level/block/CraftingTableBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxo;	b	CONTAINER_TITLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	drv	net/minecraft/world/level/block/CreakingHeartBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	AXIS
	f	Leez;	c	STATE
	f	Lees;	d	NATURAL
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;)Z	a	isNaturalNight
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;)Leeb;	d	updateState
	m	(Leeb;Ldmx;Ljb;)Z	b	hasRequiredLogs
	m	(Ldmv;Ljb;)Z	a	isSurroundedByLogs
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Lcut;Leeb;Ldmu;Ljb;)V	a	tryAwardExperience
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	()V	<clinit>	<clinit>
c	drw	net/minecraft/world/level/block/CropBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	MAX_AGE
	f	Lefb;	f	AGE
	f	[Lfjm;	a	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	()Lefb;	b	getAgeProperty
	m	()I	c	getMaxAge
	m	(Leeb;)I	h	getAge
	m	(I)Leeb;	b	getStateForAge
	m	(Leeb;)Z	i	isMaxAge
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;Ljb;Leeb;)V	b	growCrops
	m	(Ldmu;)I	a	getBonemealAgeIncrease
	m	(Ldpz;Ldly;Ljb;)F	a	getGrowthSpeed
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmx;Ljb;)Z	a	hasSufficientLight
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()Ldmt;	d	getBaseSeedId
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drx	net/minecraft/world/level/block/CrossCollisionBlock
	f	Lees;	a	NORTH
	f	Lees;	b	EAST
	f	Lees;	c	SOUTH
	f	Lees;	d	WEST
	f	Lees;	e	WATERLOGGED
	f	Ljava/util/Map;	f	PROPERTY_BY_DIRECTION
	f	Ljava/util/function/Function;	g	collisionShapes
	f	Ljava/util/function/Function;	h	shapes
	m	(FFFFFLeea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FFFFF)Ljava/util/function/Function;	a	makeShapes
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Lfjm;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$1
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	drx$1	net/minecraft/world/level/block/CrossCollisionBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dry	net/minecraft/world/level/block/CryingObsidianBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	drz	net/minecraft/world/level/block/DaylightDetectorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	POWER
	f	Lees;	c	INVERTED
	f	Lfjm;	d	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldmu;Ljb;)V	d	updateSignalStrength
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;)Z	f_	isSignalSource
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Leeb;Lebq;)V	a	tickEntity
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dsa	net/minecraft/world/level/block/DecoratedPotBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lame;	b	SHERDS_DYNAMIC_DROP_ID
	f	Leez;	c	HORIZONTAL_FACING
	f	Lees;	d	CRACKED
	f	Lees;	e	WATERLOGGED
	f	Lfjm;	f	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;)Ldxx;	h_	getSoundType
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Lebr;Ljava/util/function/Consumer;)V	a	lambda$getDrops$0
	m	()V	<clinit>	<clinit>
c	dsb	net/minecraft/world/level/block/DetectorRailBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	SHAPE
	f	Lees;	d	POWERED
	f	I	e	PRESSED_CHECK_PERIOD
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Ldmu;Ljb;Leeb;)V	a	checkPressed
	m	(Ldmu;Ljb;Leeb;Z)V	b	updatePowerToConnected
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	()Lefe;	c	getShapeProperty
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldmu;Ljb;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List;	a	getInteractingMinecartOfType
	m	(Ljb;)Lfin;	a	getSearchBB
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lbzm;)Z	a	lambda$getAnalogOutputSignal$1
	m	(Lbzm;)Z	b	lambda$checkPressed$0
	m	()V	<clinit>	<clinit>
c	dsc	net/minecraft/world/level/block/DiodeBlock
	f	Lees;	c	POWERED
	f	Lfjm;	a	SHAPE
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmx;Ljb;Leeb;)Z	a	canSurviveOn
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Leeb;)V	c	checkTickOnNeighbor
	m	(Ldmx;Ljb;Leeb;)Z	b	isLocked
	m	(Ldmu;Ljb;Leeb;)Z	a	shouldTurnOn
	m	(Ldmu;Ljb;Leeb;)I	b	getInputSignal
	m	(Ldnm;Ljb;Leeb;)I	a	getAlternateSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldmu;Ljb;Leeb;)V	d	updateNeighborsInFront
	m	()Z	b	sideInputDiodesOnly
	m	(Ldly;Ljb;Leeb;)I	a	getOutputSignal
	m	(Leeb;)Z	n	isDiode
	m	(Ldly;Ljb;Leeb;)Z	b	shouldPrioritize
	m	(Leeb;)I	h	getDelay
	m	()V	<clinit>	<clinit>
c	dsd	net/minecraft/world/level/block/DirectionalBlock
	f	Leez;	a	FACING
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dse	net/minecraft/world/level/block/DirtPathBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dsf	net/minecraft/world/level/block/DispenserBlock
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	TRIGGERED
	f	Llm;	f	DEFAULT_BEHAVIOR
	f	Ljava/util/Map;	d	DISPENSER_REGISTRY
	f	I	g	TRIGGER_DURATION
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldmt;Lln;)V	a	registerBehavior
	m	(Ldmt;)V	a	registerProjectileBehavior
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Laub;Leeb;Ljb;)V	a	dispenseFrom
	m	(Ldmu;Ldcv;)Lln;	a	getDispenseMethod
	m	(Ldcv;)Lln;	a	getDefaultDispenseMethod
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Llk;)Ljv;	a	getDispensePosition
	m	(Llk;DLfis;)Ljv;	a	getDispensePosition
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dsg	net/minecraft/world/level/block/DoorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Leez;	c	HALF
	f	Leez;	d	HINGE
	f	Lees;	e	OPEN
	f	Lees;	f	POWERED
	f	Ljava/util/Map;	g	SHAPES
	f	Leeq;	h	type
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;Leea$d;)V	<init>	<init>
	m	()Leeq;	b	type
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Ldgo;)Leew;	b	getHinge
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;)Z	n	isOpen
	m	(Lbzm;Ldmu;Leeb;Ljb;Z)V	a	setOpen
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Lbzm;Ldmu;Ljb;Z)V	a	playSound
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Ljb;)J	a	getSeed
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Ljb;)Z	a	isWoodenDoor
	m	(Leeb;)Z	o	isWoodenDoor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dsg$1	net/minecraft/world/level/block/DoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	m	()V	<clinit>	<clinit>
c	dsh	net/minecraft/world/level/block/DoubleBlockCombiner
	m	()V	<init>	<init>
	m	(Lebb;Ljava/util/function/Function;Ljava/util/function/Function;Lefe;Leeb;Ldmv;Ljb;Ljava/util/function/BiPredicate;)Ldsh$c;	a	combineWithNeigbour
c	dsh$a	net/minecraft/world/level/block/DoubleBlockCombiner$BlockType
	f	Ldsh$a;	a	SINGLE
	f	Ldsh$a;	b	FIRST
	f	Ldsh$a;	c	SECOND
	f	[Ldsh$a;	d	$VALUES
	m	()[Ldsh$a;	values	values
	m	(Ljava/lang/String;)Ldsh$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldsh$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dsh$b	net/minecraft/world/level/block/DoubleBlockCombiner$Combiner
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	a	acceptDouble
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	acceptSingle
	m	()Ljava/lang/Object;	b	acceptNone
c	dsh$c	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult
	m	(Ldsh$b;)Ljava/lang/Object;	apply	apply
c	dsh$c$a	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double
	f	Ljava/lang/Object;	a	first
	f	Ljava/lang/Object;	b	second
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	<init>	<init>
	m	(Ldsh$b;)Ljava/lang/Object;	apply	apply
c	dsh$c$b	net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single
	f	Ljava/lang/Object;	a	single
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	(Ldsh$b;)Ljava/lang/Object;	apply	apply
c	dsi	net/minecraft/world/level/block/DoublePlantBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	HALF
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmv;Leeb;Ljb;I)V	a	placeAt
	m	(Ldmx;Ljb;Leeb;)Leeb;	b	copyWaterloggedFrom
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Ldmu;Lcut;Ljb;Leeb;Leaz;Ldcv;)V	a	playerDestroy
	m	(Ldmu;Ljb;Leeb;Lcut;)V	b	preventDropFromBottomPart
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ljb;)J	a	getSeed
	m	()V	<clinit>	<clinit>
c	dsj	net/minecraft/world/level/block/DragonEggBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;Lcut;)V	a_	attack
	m	(Leeb;Ldmu;Ljb;)V	d	teleport
	m	()I	b	getDelayAfterPlace
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;)I	b	getDustColor
	m	()V	<clinit>	<clinit>
c	dsk	net/minecraft/world/level/block/DriedGhastBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HYDRATION_LEVEL
	f	Lefb;	c	HYDRATION_LEVEL
	f	Lees;	d	WATERLOGGED
	f	I	e	HYDRATION_TICK_DELAY
	f	Lfjm;	g	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)I	n	getHydrationLevel
	m	(Leeb;)Z	o	isReadyToSpawn
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)V	c	tickWaterlogged
	m	(Laub;Ljb;Leeb;)V	a	spawnGhastling
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dsl	net/minecraft/world/level/block/DropExperienceBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	xpRange
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbwo;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldsl;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dsm	net/minecraft/world/level/block/DropperBlock
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Lln;	g	DISPENSE_BEHAVIOUR
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ldcv;)Lln;	a	getDispenseMethod
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Laub;Leeb;Ljb;)V	a	dispenseFrom
	m	()V	<clinit>	<clinit>
c	dsn	net/minecraft/world/level/block/DryVegetationBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	dso	net/minecraft/world/level/block/EnchantingTableBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	BOOKSHELF_OFFSETS
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Ljb;)Z	a	isValidBookShelf
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$1
	m	(Ljb;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dsp	net/minecraft/world/level/block/EndGatewayBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Lfak;)Z	a	canBeReplaced
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Laub;Lbzm;Ljb;)Lfbl;	a	getPortalDestination
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	()V	<clinit>	<clinit>
c	dsq	net/minecraft/world/level/block/EndPortalBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Laub;Lbzm;Ljb;)Lfbl;	a	getPortalDestination
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Lfak;)Z	a	canBeReplaced
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	()V	<clinit>	<clinit>
c	dsr	net/minecraft/world/level/block/EndPortalFrameBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	HAS_EYE
	f	Lfjm;	d	SHAPE_EMPTY
	f	Lfjm;	e	SHAPE_FULL
	f	Leeg;	f	portalShape
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()Leeg;	b	getOrCreatePortalShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dss	net/minecraft/world/level/block/EndRodBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dst	net/minecraft/world/level/block/EnderChestBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	FACING
	f	Lees;	d	WATERLOGGED
	f	Lfjm;	e	SHAPE
	f	Lxo;	f	CONTAINER_TITLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Z)Ldsh$c;	a	combine
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldaa;ILcus;Lcut;)Lcym;	a	lambda$useWithoutItem$1
	m	()Lebb;	q	lambda$new$0
	m	()V	<clinit>	<clinit>
c	dsu	net/minecraft/world/level/block/EntityBlock
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Laub;Leaz;)Lejd;	a	getListener
c	dsv	net/minecraft/world/level/block/EyeblossomBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	d	EYEBLOSSOM_XZ_RANGE
	f	I	e	EYEBLOSSOM_Y_RANGE
	f	Ldsv$a;	f	type
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldsv$a;Leea$d;)V	<init>	<init>
	m	(ZLeea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)Z	c	tryChangingState
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()Lbyq;	b	getBeeInteractionEffect
	m	(Laub;Leeb;Ljb;Lbck;Ljb;)V	a	lambda$tryChangingState$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldsv;)Ljava/lang/Boolean;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dsv$a	net/minecraft/world/level/block/EyeblossomBlock$Type
	f	Ldsv$a;	a	OPEN
	f	Ldsv$a;	b	CLOSED
	f	Z	c	open
	f	Ljl;	d	effect
	f	F	e	effectDuration
	f	Layy;	f	longSwitchSound
	f	Layy;	g	shortSwitchSound
	f	I	h	particleColor
	f	[Ldsv$a;	i	$VALUES
	m	()[Ldsv$a;	values	values
	m	(Ljava/lang/String;)Ldsv$a;	valueOf	valueOf
	m	(Ljava/lang/String;IZLjl;FLayy;Layy;I)V	<init>	<init>
	m	()Ldpz;	a	block
	m	()Leeb;	b	state
	m	()Ldsv$a;	c	transform
	m	()Z	d	emitSounds
	m	(Z)Ldsv$a;	a	fromBoolean
	m	(Laub;Ljb;Lbck;)V	a	spawnTransformParticle
	m	()Layy;	e	longSwitchSound
	m	()[Ldsv$a;	f	$values
	m	()V	<clinit>	<clinit>
c	dsw	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock
	f	Leez;	c	FACE
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmx;Ljb;Ljh;)Z	b	canAttach
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Ljh;	n	getConnectedDirection
	m	()V	<clinit>	<clinit>
c	dsw$1	net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$AttachFace
	m	()V	<clinit>	<clinit>
c	dsx	net/minecraft/world/level/block/Fallable
	m	(Ldmu;Ljb;Leeb;Leeb;Lcqy;)V	a	onLand
	m	(Ldmu;Ljb;Lcqy;)V	a	onBrokenAfterFall
	m	(Lbzm;)Lbyb;	a	getFallDamageSource
c	dsy	net/minecraft/world/level/block/FallingBlock
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Lcqy;)V	a	falling
	m	()I	b	getDelayAfterPlace
	m	(Leeb;)Z	n	isFree
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldly;Ljb;)I	b	getDustColor
c	dsz	net/minecraft/world/level/block/FarmBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	MOISTURE
	f	Lfjm;	d	SHAPE
	f	I	c	MAX_MOISTURE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Lbzm;Leeb;Ldmu;Ljb;)V	a	turnToDirt
	m	(Ldly;Ljb;)Z	a	shouldMaintainFarmland
	m	(Ldmx;Ljb;)Z	a	isNearWater
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dta	net/minecraft/world/level/block/FenceBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ljava/util/function/Function;	h	occlusionShapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;ZLjh;)Z	a	connectsTo
	m	(Leeb;)Z	o	isSameFence
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dtb	net/minecraft/world/level/block/FenceGateBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	OPEN
	f	Lees;	c	POWERED
	f	Lees;	d	IN_WALL
	f	Ljava/util/Map;	e	SHAPES
	f	Ljava/util/Map;	g	SHAPES_WALL
	f	Ljava/util/Map;	h	SHAPE_COLLISION
	f	Ljava/util/Map;	i	SHAPE_SUPPORT
	f	Ljava/util/Map;	D	SHAPE_OCCLUSION
	f	Ljava/util/Map;	R	SHAPE_OCCLUSION_WALL
	f	Lefp;	S	type
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Z	o	isWall
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ljh;)Z	a	connectsToDirection
	m	(Lfjm;)Lfjm;	b	lambda$static$3
	m	(Lfjm;)Lfjm;	c	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldtb;)Lefp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dtb$1	net/minecraft/world/level/block/FenceGateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	m	()V	<clinit>	<clinit>
c	dtc	net/minecraft/world/level/block/FireBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	I	c	MAX_AGE
	f	Lefb;	d	AGE
	f	Lees;	e	NORTH
	f	Lees;	f	EAST
	f	Lees;	g	SOUTH
	f	Lees;	h	WEST
	f	Lees;	i	UP
	f	Ljava/util/Map;	D	PROPERTY_BY_DIRECTION
	f	Ljava/util/function/Function;	R	shapes
	f	I	S	IGNITE_INSTANT
	f	I	T	IGNITE_EASY
	f	I	U	IGNITE_MEDIUM
	f	I	V	IGNITE_HARD
	f	I	W	BURN_INSTANT
	f	I	X	BURN_EASY
	f	I	Y	BURN_MEDIUM
	f	I	Z	BURN_HARD
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	aa	igniteOdds
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	ab	burnOdds
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	q	makeShapes
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;)Leeb;	b	getStateForPlacement
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Ljb;)Z	a	isNearRain
	m	(Leeb;)I	o	getBurnOdds
	m	(Leeb;)I	q	getIgniteOdds
	m	(Ldmu;Ljb;ILbck;I)V	a	checkBurnOut
	m	(Ldmx;Ljb;I)Leeb;	a	getStateWithAge
	m	(Ldly;Ljb;)Z	d	isValidFireLocation
	m	(Ldmx;Ljb;)I	a	getIgniteOdds
	m	(Leeb;)Z	g	canBurn
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Lbck;)I	a	getFireTickDelay
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldpz;II)V	a	setFlammable
	m	()V	b	bootStrap
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$1
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dtd	net/minecraft/world/level/block/FireflyBushBlock
	f	D	b	FIREFLY_CHANCE_PER_TICK
	f	D	c	FIREFLY_HORIZONTAL_RANGE
	f	D	d	FIREFLY_VERTICAL_RANGE
	f	I	e	FIREFLY_SPAWN_MAX_BRIGHTNESS_LEVEL
	f	I	f	FIREFLY_AMBIENT_SOUND_CHANCE_ONE_IN
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Laub;Ljb;)V	a	lambda$performBonemeal$0
	m	()V	<clinit>	<clinit>
c	dte	net/minecraft/world/level/block/FletchingTableBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	()V	<clinit>	<clinit>
c	dtf	net/minecraft/world/level/block/FlowerBedBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lefb;	c	AMOUNT
	f	Ljava/util/function/Function;	g	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	q	makeShapes
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()D	b	getShapeHeight
	m	()Lefb;	c	getSegmentAmountProperty
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dtg	net/minecraft/world/level/block/FlowerBlock
	f	Lcom/mojang/serialization/MapCodec;	b	EFFECTS_FIELD
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lfjm;	a	SHAPE
	f	Ldfx;	d	suspiciousStewEffects
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljl;FLeea$d;)V	<init>	<init>
	m	(Ldfx;Leea$d;)V	<init>	<init>
	m	(Ljl;F)Ldfx;	a	makeEffectList
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()Ldfx;	c	getSuspiciousEffects
	m	()Lbyq;	b	getBeeInteractionEffect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dth	net/minecraft/world/level/block/FlowerPotBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	POTTED_BY_CONTENT
	f	Lfjm;	c	SHAPE
	f	Ldpz;	d	potted
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	()Z	q	isEmpty
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	()Ldpz;	b	getPotted
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Leeb;	o	opposite
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldth;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dti	net/minecraft/world/level/block/FrogspawnBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MIN_TADPOLES_SPAWN
	f	I	c	MAX_TADPOLES_SPAWN
	f	I	d	DEFAULT_MIN_HATCH_TICK_DELAY
	f	I	e	DEFAULT_MAX_HATCH_TICK_DELAY
	f	Lfjm;	f	SHAPE
	f	I	g	minHatchTickDelay
	f	I	h	maxHatchTickDelay
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Lbck;)I	a	getFrogspawnHatchDelay
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldly;Ljb;)Z	a	mayPlaceOn
	m	(Laub;Ljb;Lbck;)V	a	hatchFrogspawn
	m	(Ldmu;Ljb;)V	a	destroyBlock
	m	(Laub;Ljb;Lbck;)V	b	spawnTadpoles
	m	(Lbck;)D	b	getRandomTadpolePositionOffset
	m	(II)V	a	setHatchDelay
	m	()V	b	setDefaultHatchDelay
	m	()V	<clinit>	<clinit>
c	dtj	net/minecraft/world/level/block/FrostedIceBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	I	f	NEIGHBORS_TO_AGE
	f	I	g	NEIGHBORS_TO_MELT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;)Z	e	slightlyMelt
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldly;Ljb;I)Z	a	fewerNeigboursThan
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	()V	<clinit>	<clinit>
c	dtk	net/minecraft/world/level/block/FungusBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	b	BONEMEAL_SUCCESS_PROBABILITY
	f	Lfjm;	c	SHAPE
	f	Ldpz;	d	requiredBlock
	f	Lamd;	e	feature
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldmx;)Ljava/util/Optional;	a	getFeature
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Laub;Lbck;Ljb;Ljl;)V	a	lambda$performBonemeal$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldtk;)Ldpz;	a	lambda$static$1
	m	(Ldtk;)Lamd;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dtl	net/minecraft/world/level/block/FurnaceBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Lcut;)V	a	openContainer
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	dtm	net/minecraft/world/level/block/GameMasterBlock
c	dtn	net/minecraft/world/level/block/GlazedTerracottaBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dto	net/minecraft/world/level/block/GlowLichenBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldvi;	e	spreader
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(I)Ljava/util/function/ToIntFunction;	b	emission
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	()Ldvi;	c	getSpreader
	m	(Leeb;Ldmx;Ljb;Ljh;)Z	a	lambda$isValidBonemealTarget$1
	m	(ILeeb;)I	a	lambda$emission$0
	m	()V	<clinit>	<clinit>
c	dtp	net/minecraft/world/level/block/GrassBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()Ldqc$a;	aq_	getType
	m	()V	<clinit>	<clinit>
c	dtq	net/minecraft/world/level/block/GrindstoneBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxo;	b	CONTAINER_TITLE
	f	Ljava/util/function/Function;	d	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;)Lfjm;	o	getVoxelShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$1
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dtr	net/minecraft/world/level/block/GrowingPlantBlock
	f	Ljh;	a	growthDirection
	f	Z	b	scheduleFluidTicks
	f	Lfjm;	d	shape
	m	(Leea$d;Ljh;Lfjm;Z)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Lbck;)Leeb;	b	getStateForPlacement
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)Z	o	canAttachTo
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()Ldtt;	c	getHeadBlock
	m	()Ldpz;	b	getBodyBlock
c	dts	net/minecraft/world/level/block/GrowingPlantBodyBlock
	m	(Leea$d;Ljh;Lfjm;Z)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Leeb;)Leeb;	a	updateHeadAfterConvertedFromBody
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ldly;Ljb;Ldpz;)Ljava/util/Optional;	a	getHeadPos
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	()Ldpz;	b	getBodyBlock
c	dtt	net/minecraft/world/level/block/GrowingPlantHeadBlock
	f	Lefb;	e	AGE
	f	I	f	MAX_AGE
	f	D	c	growPerTickProbability
	m	(Leea$d;Ljh;Lfjm;ZD)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbck;)Leeb;	b	getStateForPlacement
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Lbck;)Leeb;	a	getGrowIntoState
	m	(Leeb;)Leeb;	p	getMaxAgeState
	m	(Leeb;)Z	q	isMaxAge
	m	(Leeb;Leeb;)Leeb;	a	updateBodyAfterConvertedFromHead
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
	m	(Leeb;)Z	h	canGrowInto
	m	()Ldtt;	c	getHeadBlock
	m	()V	<clinit>	<clinit>
c	dtu	net/minecraft/world/level/block/HalfTransparentBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	()V	<clinit>	<clinit>
c	dtv	net/minecraft/world/level/block/HangingMossBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	c	SHAPE_BASE
	f	Lfjm;	d	SHAPE_TIP
	f	Lees;	b	TIP
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldly;Ljb;)Z	b	canStayAtPosition
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Leeb;)Z	o	canGrowInto
	m	(Ldly;Ljb;)Ljb;	a	getTip
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dtw	net/minecraft/world/level/block/HangingRootsBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	()V	<clinit>	<clinit>
c	dtx	net/minecraft/world/level/block/HayBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	()V	<clinit>	<clinit>
c	dty	net/minecraft/world/level/block/HeavyCoreBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	f	Lfjm;	c	SHAPE
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dtz	net/minecraft/world/level/block/HoneyBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	b	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST
	f	D	c	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING
	f	D	e	THROTTLE_SLIDE_SPEED_TO
	f	I	f	SLIDE_ADVANCEMENT_CHECK_INTERVAL
	f	Lfjm;	g	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Lbzm;)Z	c	doesEntityDoHoneyBlockSlideEffects
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(D)D	b	getOldDeltaY
	m	(D)D	c	getNewDeltaY
	m	(Ljb;Lbzm;)Z	a	isSlidingDown
	m	(Lbzm;Ljb;)V	a	maybeDoSlideAchievement
	m	(Lbzm;)V	d	doSlideMovement
	m	(Ldmu;Lbzm;)V	a	maybeDoSlideEffects
	m	(Lbzm;)V	a	showSlideParticles
	m	(Lbzm;)V	b	showJumpParticles
	m	(Lbzm;I)V	a	showParticles
	m	()V	<clinit>	<clinit>
c	dua	net/minecraft/world/level/block/HopperBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	ENABLED
	f	Ljava/util/function/Function;	d	shapes
	f	Ljava/util/Map;	e	interactionShapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Lfjm;)Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getInteractionShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Leeb;)V	a	checkPoweredState
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Lfjm;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dub	net/minecraft/world/level/block/HorizontalDirectionalBlock
	f	Leez;	f	FACING
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	()V	<clinit>	<clinit>
c	duc	net/minecraft/world/level/block/HugeMushroomBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	NORTH
	f	Lees;	c	EAST
	f	Lees;	d	SOUTH
	f	Lees;	e	WEST
	f	Lees;	f	UP
	f	Lees;	g	DOWN
	f	Ljava/util/Map;	h	PROPERTY_BY_DIRECTION
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dud	net/minecraft/world/level/block/IceBlock
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Leeb;	b	meltsInto
	m	(Ldmu;Lcut;Ljb;Leeb;Leaz;Ldcv;)V	a	playerDestroy
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmu;Ljb;)V	d	melt
	m	()V	<clinit>	<clinit>
c	due	net/minecraft/world/level/block/InfestedBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpz;	b	hostBlock
	f	Ljava/util/Map;	c	BLOCK_BY_HOST_BLOCK
	f	Ljava/util/Map;	d	HOST_TO_INFESTED_STATES
	f	Ljava/util/Map;	e	INFESTED_TO_HOST_STATES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	()Ldpz;	b	getHostBlock
	m	(Leeb;)Z	o	isCompatibleHostBlock
	m	(Laub;Ljb;)V	a	spawnInfestation
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Leeb;)Leeb;	p	infestedStateByHost
	m	(Leeb;)Leeb;	q	hostStateByInfested
	m	(Ljava/util/Map;Leeb;Ljava/util/function/Supplier;)Leeb;	a	getNewStateWithProperties
	m	(Ljava/util/function/Supplier;Leeb;)Leeb;	a	lambda$getNewStateWithProperties$3
	m	()Leeb;	q	lambda$hostStateByInfested$2
	m	(Leeb;)Leeb;	r	lambda$infestedStateByHost$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	duf	net/minecraft/world/level/block/InfestedRotatedPillarBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dug	net/minecraft/world/level/block/IronBarsBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	(Leeb;Z)Z	a	attachsTo
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	duh	net/minecraft/world/level/block/JigsawBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	ORIENTATION
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leza$a;Leza$a;)Z	a	canAttach
	m	(Leeb;)Ljh;	o	getFrontFacing
	m	(Leeb;)Ljh;	p	getTopFacing
	m	()V	<clinit>	<clinit>
c	dui	net/minecraft/world/level/block/JukeboxBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	HAS_RECORD
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	()V	<clinit>	<clinit>
c	duj	net/minecraft/world/level/block/KelpBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	D	g	GROW_PER_TICK_PROBABILITY
	f	Lfjm;	h	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	h	canGrowInto
	m	()Ldpz;	b	getBodyBlock
	m	(Leeb;)Z	o	canAttachTo
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	()V	<clinit>	<clinit>
c	duk	net/minecraft/world/level/block/KelpPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldtt;	c	getHeadBlock
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;)Z	o	canAttachTo
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	()V	<clinit>	<clinit>
c	dul	net/minecraft/world/level/block/LadderBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	WATERLOGGED
	f	Ljava/util/Map;	d	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldly;Ljb;Ljh;)Z	a	canAttachTo
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	()V	<clinit>	<clinit>
c	dum	net/minecraft/world/level/block/LanternBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	HANGING
	f	Lees;	c	WATERLOGGED
	f	Lfjm;	d	SHAPE_STANDING
	f	Lfjm;	e	SHAPE_HANGING
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Ljh;	o	getConnectedDirection
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dun	net/minecraft/world/level/block/LavaCauldronBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lfjm;	e	SHAPE_INSIDE
	f	Lfjm;	f	FILLED_SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)D	b	getContentHeight
	m	(Leeb;)Z	d	isFull
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	()V	<clinit>	<clinit>
c	duo	net/minecraft/world/level/block/LayeredCauldronBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	MIN_FILL_LEVEL
	f	I	f	MAX_FILL_LEVEL
	f	Lefb;	g	LEVEL
	f	I	h	BASE_CONTENT_HEIGHT
	f	D	i	HEIGHT_PER_LEVEL
	f	[Lfjm;	D	FILLED_SHAPES
	f	Ldnx$c;	R	precipitationType
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldnx$c;Lki$a;Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	d	isFull
	m	(Lfak;)Z	a	canReceiveStalactiteDrip
	m	(Leeb;)D	b	getContentHeight
	m	(I)D	b	getPixelContentHeight
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldmu;Ljb;)V	e	handleEntityOnFireInside
	m	(Leeb;Ldmu;Ljb;)V	d	lowerFillLevel
	m	(Leeb;Ldmu;Ljb;Ldnx$c;)V	a	handlePrecipitation
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lfak;)V	a	receiveStalactiteDrip
	m	(Laub;Ljb;Leeb;Ldmu;Lbzm;)V	a	lambda$entityInside$5
	m	()[Lfjm;	b	lambda$static$4
	m	(I)Lfjm;	c	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lduo;)Lki$a;	a	lambda$static$1
	m	(Lduo;)Ldnx$c;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dup	net/minecraft/world/level/block/LeafLitterBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/function/Function;	c	shapes
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	q	makeShapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	duq	net/minecraft/world/level/block/LeavesBlock
	f	I	a	DECAY_DISTANCE
	f	Lefb;	b	DISTANCE
	f	Lees;	c	PERSISTENT
	f	Lees;	d	WATERLOGGED
	f	F	e	leafParticleChance
	f	I	f	TICK_DELAY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FLeea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	o	decaying
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;)I	i_	getLightBlock
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmv;Ljb;)Leeb;	a	updateDistance
	m	(Leeb;)I	r	getDistanceAt
	m	(Leeb;)Ljava/util/OptionalInt;	q	getOptionalDistanceAt
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmu;Ljb;Lbck;Leeb;Ljb;)V	a	makeDrippingWaterParticles
	m	(Ldmu;Ljb;Lbck;Leeb;Ljb;)V	b	makeFallingLeavesParticles
	m	(Ldmu;Ljb;Lbck;)V	a	spawnFallingLeavesParticle
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dur	net/minecraft/world/level/block/LecternBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	POWERED
	f	Lees;	d	HAS_BOOK
	f	Lfjm;	e	SHAPE_COLLISION
	f	Ljava/util/Map;	f	SHAPES
	f	I	g	PAGE_CHANGE_IMPULSE_TICKS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Lcam;Ldmu;Ljb;Leeb;Ldcv;)Z	a	tryPlaceBook
	m	(Lcam;Ldmu;Ljb;Leeb;Ldcv;)V	b	placeBook
	m	(Lbzm;Ldmu;Ljb;Leeb;Z)V	a	resetBookState
	m	(Ldmu;Ljb;Leeb;)V	a	signalPageChange
	m	(Ldmu;Ljb;Leeb;Z)V	a	changePowered
	m	(Ldmu;Ljb;Leeb;)V	b	updateBelow
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Ldmu;Ljb;Lcut;)V	a	openScreen
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dus	net/minecraft/world/level/block/LevelEvent
	f	I	a	SOUND_DISPENSER_DISPENSE
	f	I	b	SOUND_DISPENSER_FAIL
	f	I	c	SOUND_DISPENSER_PROJECTILE_LAUNCH
	f	I	d	SOUND_FIREWORK_SHOOT
	f	I	e	SOUND_EXTINGUISH_FIRE
	f	I	f	SOUND_PLAY_JUKEBOX_SONG
	f	I	g	SOUND_STOP_JUKEBOX_SONG
	f	I	h	SOUND_GHAST_WARNING
	f	I	i	SOUND_GHAST_FIREBALL
	f	I	j	SOUND_DRAGON_FIREBALL
	f	I	k	SOUND_BLAZE_FIREBALL
	f	I	l	SOUND_ZOMBIE_WOODEN_DOOR
	f	I	m	SOUND_ZOMBIE_IRON_DOOR
	f	I	n	SOUND_ZOMBIE_DOOR_CRASH
	f	I	o	SOUND_WITHER_BLOCK_BREAK
	f	I	p	SOUND_WITHER_BOSS_SPAWN
	f	I	q	SOUND_WITHER_BOSS_SHOOT
	f	I	r	SOUND_BAT_LIFTOFF
	f	I	s	SOUND_ZOMBIE_INFECTED
	f	I	t	SOUND_ZOMBIE_CONVERTED
	f	I	u	SOUND_DRAGON_DEATH
	f	I	v	SOUND_ANVIL_BROKEN
	f	I	w	SOUND_ANVIL_USED
	f	I	x	SOUND_ANVIL_LAND
	f	I	y	SOUND_PORTAL_TRAVEL
	f	I	z	SOUND_CHORUS_GROW
	f	I	A	SOUND_CHORUS_DEATH
	f	I	B	SOUND_BREWING_STAND_BREW
	f	I	C	SOUND_END_PORTAL_SPAWN
	f	I	D	SOUND_PHANTOM_BITE
	f	I	E	SOUND_ZOMBIE_TO_DROWNED
	f	I	F	SOUND_HUSK_TO_ZOMBIE
	f	I	G	SOUND_GRINDSTONE_USED
	f	I	H	SOUND_PAGE_TURN
	f	I	I	SOUND_SMITHING_TABLE_USED
	f	I	J	SOUND_POINTED_DRIPSTONE_LAND
	f	I	K	SOUND_DRIP_LAVA_INTO_CAULDRON
	f	I	L	SOUND_DRIP_WATER_INTO_CAULDRON
	f	I	M	SOUND_SKELETON_TO_STRAY
	f	I	N	SOUND_CRAFTER_CRAFT
	f	I	O	SOUND_CRAFTER_FAIL
	f	I	P	SOUND_WIND_CHARGE_SHOOT
	f	I	Q	COMPOSTER_FILL
	f	I	R	LAVA_FIZZ
	f	I	S	REDSTONE_TORCH_BURNOUT
	f	I	T	END_PORTAL_FRAME_FILL
	f	I	U	DRIPSTONE_DRIP
	f	I	V	PARTICLES_AND_SOUND_PLANT_GROWTH
	f	I	W	PARTICLES_SHOOT_SMOKE
	f	I	X	PARTICLES_DESTROY_BLOCK
	f	I	Y	PARTICLES_SPELL_POTION_SPLASH
	f	I	Z	PARTICLES_EYE_OF_ENDER_DEATH
	f	I	aa	PARTICLES_MOBBLOCK_SPAWN
	f	I	ab	PARTICLES_DRAGON_FIREBALL_SPLASH
	f	I	ac	PARTICLES_INSTANT_POTION_SPLASH
	f	I	ad	PARTICLES_DRAGON_BLOCK_BREAK
	f	I	ae	PARTICLES_WATER_EVAPORATING
	f	I	af	PARTICLES_SHOOT_WHITE_SMOKE
	f	I	ag	PARTICLES_BEE_GROWTH
	f	I	ah	PARTICLES_TURTLE_EGG_PLACEMENT
	f	I	ai	PARTICLES_SMASH_ATTACK
	f	I	aj	ANIMATION_END_GATEWAY_SPAWN
	f	I	ak	ANIMATION_DRAGON_SUMMON_ROAR
	f	I	al	PARTICLES_ELECTRIC_SPARK
	f	I	am	PARTICLES_AND_SOUND_WAX_ON
	f	I	an	PARTICLES_WAX_OFF
	f	I	ao	PARTICLES_SCRAPE
	f	I	ap	PARTICLES_SCULK_CHARGE
	f	I	aq	PARTICLES_SCULK_SHRIEK
	f	I	ar	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE
	f	I	as	PARTICLES_EGG_CRACK
	f	I	at	PARTICLES_TRIAL_SPAWNER_SPAWN
	f	I	au	PARTICLES_TRIAL_SPAWNER_SPAWN_MOB_AT
	f	I	av	PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER
	f	I	aw	ANIMATION_TRIAL_SPAWNER_EJECT_ITEM
	f	I	ax	ANIMATION_VAULT_ACTIVATE
	f	I	ay	ANIMATION_VAULT_DEACTIVATE
	f	I	az	ANIMATION_VAULT_EJECT_ITEM
	f	I	aA	ANIMATION_SPAWN_COBWEB
	f	I	aB	PARTICLES_TRIAL_SPAWNER_DETECT_PLAYER_OMINOUS
	f	I	aC	PARTICLES_TRIAL_SPAWNER_BECOME_OMINOUS
	f	I	aD	PARTICLES_TRIAL_SPAWNER_SPAWN_ITEM
	m	()V	<init>	<init>
c	dut	net/minecraft/world/level/block/LeverBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	POWERED
	f	Ljava/util/function/Function;	d	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmu;Ljb;Lcut;)V	b	pull
	m	(Lcut;Ldmv;Ljb;Leeb;)V	a	playSound
	m	(Leeb;Ldmv;Ljb;F)V	a	makeParticle
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldmu;Ljb;)V	d	updateNeighbours
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	duu	net/minecraft/world/level/block/LightBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_LEVEL
	f	Lefb;	c	LEVEL
	f	Lees;	d	WATERLOGGED
	f	Ljava/util/function/ToIntFunction;	e	LIGHT_EMISSION
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldcv;I)Ldcv;	a	setLightOnStack
	m	(Leeb;)I	o	lambda$static$0
	m	()V	<clinit>	<clinit>
c	duv	net/minecraft/world/level/block/LightningRodBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	WATERLOGGED
	f	Lees;	d	POWERED
	f	I	f	ACTIVATION_TICKS
	f	I	e	RANGE
	f	I	g	SPARK_CYCLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;Ldmu;Ljb;)V	d	onLightningStrike
	m	(Leeb;Ldmu;Ljb;)V	e	updateNeighbours
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	f_	isSignalSource
	m	()V	<clinit>	<clinit>
c	duw	net/minecraft/world/level/block/LiquidBlock
	f	Lcom/mojang/serialization/Codec;	f	FLOWING_FLUID
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	LEVEL
	f	Lfaj;	c	fluid
	f	Ljava/util/List;	g	stateCache
	f	Lfjm;	d	SHAPE_STABLE
	f	Lcom/google/common/collect/ImmutableList;	e	POSSIBLE_FLOW_DIRECTIONS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lfaj;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Leeb;)Z	a	shouldSpreadLiquid
	m	(Ldmv;Ljb;)V	a	fizz
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	()Ljava/util/Optional;	as_	getPickupSound
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lduw;)Lfaj;	a	lambda$static$3
	m	(Lfaj;)Lfak;	a	lambda$static$2
	m	(Lfak;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lfak;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dux	net/minecraft/world/level/block/LiquidBlockContainer
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
c	duy	net/minecraft/world/level/block/LoomBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxo;	b	CONTAINER_TITLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	duz	net/minecraft/world/level/block/MagmaBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	BUBBLE_COLUMN_CHECK_DELAY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	()V	<clinit>	<clinit>
c	dva	net/minecraft/world/level/block/MangroveLeavesBlock
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(FLeea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ljb;)Ljb;	a	getParticlePos
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldva;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dvb	net/minecraft/world/level/block/MangrovePropaguleBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	AGE
	f	I	c	MAX_AGE
	f	[I	h	SHAPE_MIN_Y
	f	[Lfjm;	i	SHAPE_PER_AGE
	f	Lees;	D	WATERLOGGED
	f	Lees;	d	HANGING
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ledp;Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;)Z	o	isHanging
	m	(Leeb;)Z	q	isFullyGrown
	m	()Leeb;	c	createNewHangingPropagule
	m	(I)Leeb;	b	createNewHangingPropagule
	m	(I)Lfjm;	c	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldvb;)Ledp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dvc	net/minecraft/world/level/block/MangroveRootsBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	WATERLOGGED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dvd	net/minecraft/world/level/block/Mirror
	f	Ldvd;	a	NONE
	f	Ldvd;	b	LEFT_RIGHT
	f	Ldvd;	c	FRONT_BACK
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lcom/mojang/serialization/Codec;	e	LEGACY_CODEC
	f	Ljava/lang/String;	f	id
	f	Lxo;	g	symbol
	f	Lh;	h	rotation
	f	[Ldvd;	i	$VALUES
	m	()[Ldvd;	values	values
	m	(Ljava/lang/String;)Ldvd;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lh;)V	<init>	<init>
	m	(II)I	a	mirror
	m	(Ljh;)Ldwu;	a	getRotation
	m	(Ljh;)Ljh;	b	mirror
	m	()Lh;	a	rotation
	m	()Lxo;	b	symbol
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldvd;	d	$values
	m	()V	<clinit>	<clinit>
c	dve	net/minecraft/world/level/block/MossyCarpetBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	BASE
	f	Leez;	c	NORTH
	f	Leez;	d	EAST
	f	Leez;	e	SOUTH
	f	Leez;	f	WEST
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	Ljava/util/function/Function;	h	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Z	o	hasFaces
	m	(Ldly;Ljb;Ljh;)Z	a	canSupportAtFace
	m	(Leeb;Ldly;Ljb;Z)Leeb;	a	getUpdatedState
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmv;Ljb;Lbck;I)V	a	placeAt
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Ldly;Ljb;Ljava/util/function/BooleanSupplier;)Leeb;	a	createTopperWithSideChance
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Ljh;)Leez;	a	getPropertyForFace
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()Z	q	lambda$performBonemeal$2
	m	()Z	r	lambda$isValidBonemealTarget$1
	m	(Ljava/util/Map;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dve$1	net/minecraft/world/level/block/MossyCarpetBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$WallSide
	m	()V	<clinit>	<clinit>
c	dvf	net/minecraft/world/level/block/MudBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	()V	<clinit>	<clinit>
c	dvg	net/minecraft/world/level/block/MultifaceBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	WATERLOGGED
	f	Ljava/util/Map;	a	PROPERTY_BY_DIRECTION
	f	[Ljh;	d	DIRECTIONS
	f	Ljava/util/function/Function;	e	shapes
	f	Z	f	canRotate
	f	Z	g	canMirrorX
	f	Z	h	canMirrorZ
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	q	makeShapes
	m	(Leeb;)Ljava/util/Set;	o	availableFaces
	m	(B)Ljava/util/Set;	a	unpack
	m	(Ljava/util/Collection;)B	a	pack
	m	(Ljh;)Z	a	isFaceSupported
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Leeb;Ljb;Ljh;)Z	a	isValidStateForPlacement
	m	(Leeb;Ldly;Ljb;Ljh;)Leeb;	c	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Ljava/util/function/Function;)Leeb;	a	mapDirections
	m	(Leeb;Ljh;)Z	a	hasFace
	m	(Ldly;Ljb;Ljh;)Z	a	canAttachTo
	m	(Ldly;Ljh;Ljb;Leeb;)Z	a	canAttachTo
	m	(Leeb;Lees;)Leeb;	a	removeFace
	m	(Ljh;)Lees;	b	getFaceProperty
	m	(Leec;)Leeb;	a	getDefaultMultifaceState
	m	(Leeb;)Z	q	hasAnyFace
	m	(Leeb;)Z	r	hasAnyVacantFace
	m	(Leeb;Ldmu;Ljb;Ljh;)Leeb;	a	lambda$getStateForPlacement$1
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dvh	net/minecraft/world/level/block/MultifaceSpreadeableBlock
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ldvi;	c	getSpreader
c	dvi	net/minecraft/world/level/block/MultifaceSpreader
	f	[Ldvi$e;	a	DEFAULT_SPREAD_ORDER
	f	Ldvi$b;	b	config
	m	(Ldvg;)V	<init>	<init>
	m	(Ldvi$b;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Z	a	canSpreadInAnyDirection
	m	(Leeb;Ldmv;Ljb;Lbck;)Ljava/util/Optional;	a	spreadFromRandomFaceTowardRandomDirection
	m	(Leeb;Ldmv;Ljb;Z)J	a	spreadAll
	m	(Leeb;Ldmv;Ljb;Ljh;Lbck;Z)Ljava/util/Optional;	a	spreadFromFaceTowardRandomDirection
	m	(Leeb;Ldmv;Ljb;Ljh;Z)J	a	spreadFromFaceTowardAllDirections
	m	(Leeb;Ldmv;Ljb;Ljh;Ljh;Z)Ljava/util/Optional;	a	spreadFromFaceTowardDirection
	m	(Leeb;Ldly;Ljb;Ljh;Ljh;Ldvi$d;)Ljava/util/Optional;	a	getSpreadFromFaceTowardDirection
	m	(Ldmv;Ldvi$c;Z)Ljava/util/Optional;	a	spreadToFace
	m	(Ldmv;ZLdvi$c;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardDirection$7
	m	(Leeb;Ldmv;Ljb;Ljh;ZLjh;)Ljava/util/Optional;	a	lambda$spreadFromFaceTowardAllDirections$6
	m	(Leeb;Ldmv;Ljb;Ljh;ZLjh;)Ljava/util/Optional;	b	lambda$spreadFromFaceTowardRandomDirection$5
	m	(Leeb;Ldmv;Ljb;ZLjh;)Ljava/lang/Long;	a	lambda$spreadAll$4
	m	(Leeb;Ljh;)Z	a	lambda$spreadAll$3
	m	(Leeb;Ldmv;Ljb;Lbck;Ljh;)Ljava/util/Optional;	a	lambda$spreadFromRandomFaceTowardRandomDirection$2
	m	(Leeb;Ljh;)Z	b	lambda$spreadFromRandomFaceTowardRandomDirection$1
	m	(Leeb;Ldly;Ljb;Ljh;Ljh;)Z	a	lambda$canSpreadInAnyDirection$0
	m	()V	<clinit>	<clinit>
c	dvi$a	net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig
	f	Ldvg;	a	block
	m	(Ldvg;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;Ljb;Ljh;Leeb;)Z	a	stateCanBeReplaced
	m	(Ldly;Ljb;Ldvi$c;)Z	a	canSpreadInto
c	dvi$b	net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig
	m	(Leeb;Ldly;Ljb;Ljh;)Leeb;	a	getStateForPlacement
	m	(Ldly;Ljb;Ldvi$c;)Z	a	canSpreadInto
	m	()[Ldvi$e;	a	getSpreadTypes
	m	(Leeb;Ljh;)Z	a	hasFace
	m	(Leeb;)Z	a	isOtherBlockValidAsSource
	m	(Leeb;Ljh;)Z	b	canSpreadFrom
	m	(Ldmv;Ldvi$c;Leeb;Z)Z	a	placeBlock
c	dvi$c	net/minecraft/world/level/block/MultifaceSpreader$SpreadPos
	f	Ljb;	a	pos
	f	Ljh;	b	face
	m	(Ljb;Ljh;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ljh;	b	face
c	dvi$d	net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate
	m	(Ldly;Ljb;Ldvi$c;)Z	test	test
c	dvi$e	net/minecraft/world/level/block/MultifaceSpreader$SpreadType
	f	Ldvi$e;	a	SAME_POSITION
	f	Ldvi$e;	b	SAME_PLANE
	f	Ldvi$e;	c	WRAP_AROUND
	f	[Ldvi$e;	d	$VALUES
	m	()[Ldvi$e;	values	values
	m	(Ljava/lang/String;)Ldvi$e;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljb;Ljh;Ljh;)Ldvi$c;	a	getSpreadPos
	m	()[Ldvi$e;	a	$values
	m	()V	<clinit>	<clinit>
c	dvi$e$1	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$1
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljb;Ljh;Ljh;)Ldvi$c;	a	getSpreadPos
c	dvi$e$2	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$2
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljb;Ljh;Ljh;)Ldvi$c;	a	getSpreadPos
c	dvi$e$3	net/minecraft/world/level/block/MultifaceSpreader$SpreadType$3
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Ljb;Ljh;Ljh;)Ldvi$c;	a	getSpreadPos
c	dvj	net/minecraft/world/level/block/MushroomBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	f	Lamd;	c	feature
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Laub;Ljb;Leeb;Lbck;)Z	a	growMushroom
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldvj;)Lamd;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dvk	net/minecraft/world/level/block/MyceliumBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	dvl	net/minecraft/world/level/block/NetherPortalBlock
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	AXIS
	f	Ljava/util/Map;	d	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Laub;Lbzm;)I	a	getPortalTransitionTime
	m	(Laub;Lbzm;Ljb;)Lfbl;	a	getPortalDestination
	m	(Laub;Lbzm;Ljb;Ljb;ZLeft;)Lfbl;	a	getExitPortal
	m	(Lbzm;Ljb;Lm$a;Laub;Lfbl$a;)Lfbl;	a	getDimensionTransitionFromExit
	m	(Laub;Lm$a;Ljh$a;Lfis;Lbzm;Lfbl$a;)Lfbl;	a	createDimensionTransition
	m	()Ldvz$a;	b	getLocalTransition
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lbzm;Leeb;Ljb;)Z	a	lambda$getDimensionTransitionFromExit$2
	m	(Ljb;Lbzm;)V	a	lambda$getExitPortal$1
	m	(Laub;Leeb;Ljb;)Z	a	lambda$getExitPortal$0
	m	()V	<clinit>	<clinit>
c	dvl$1	net/minecraft/world/level/block/NetherPortalBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	dvm	net/minecraft/world/level/block/NetherSproutsBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	()V	<clinit>	<clinit>
c	dvn	net/minecraft/world/level/block/NetherVines
	f	D	b	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE
	f	D	a	GROW_PER_TICK_PROBABILITY
	m	()V	<init>	<init>
	m	(Leeb;)Z	a	isValidGrowthState
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
c	dvo	net/minecraft/world/level/block/NetherWartBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	[Lfjm;	d	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(I)Lfjm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dvp	net/minecraft/world/level/block/NetherrackBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()Ldqc$a;	aq_	getType
	m	()V	<clinit>	<clinit>
c	dvq	net/minecraft/world/level/block/NoteBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	INSTRUMENT
	f	Lees;	c	POWERED
	f	Lefb;	d	NOTE
	f	I	e	NOTE_VOLUME
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Leeb;	a	setInstrument
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Lbzm;Leeb;Ldmu;Ljb;)V	a	playNote
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;Lcut;)V	a_	attack
	m	(I)F	b	getPitchFromNote
	m	(Leeb;Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Ldmu;Ljb;)Lame;	a	getCustomSoundId
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dvr	net/minecraft/world/level/block/NyliumBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	b	canBeNylium
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ljy;Lamd;Laub;Lefz;Lbck;Ljb;)V	a	place
	m	()Ldqc$a;	aq_	getType
	m	(Laub;Lefz;Lbck;Ljb;Ljl$c;)V	a	lambda$place$0
	m	()V	<clinit>	<clinit>
c	dvs	net/minecraft/world/level/block/ObserverBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	POWERED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ldnj;Ljb;)V	a	startSignal
	m	(Ldmu;Ljb;Leeb;)V	a	updateNeighborsInFront
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dvt	net/minecraft/world/level/block/PiglinWallSkullBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljava/util/Map;	e	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()V	<clinit>	<clinit>
c	dvu	net/minecraft/world/level/block/PipeBlock
	f	Lees;	b	NORTH
	f	Lees;	c	EAST
	f	Lees;	d	SOUTH
	f	Lees;	e	WEST
	f	Lees;	f	UP
	f	Lees;	g	DOWN
	f	Ljava/util/Map;	h	PROPERTY_BY_DIRECTION
	f	Ljava/util/function/Function;	a	shapes
	m	(FLeea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(F)Ljava/util/function/Function;	a	makeShapes
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Lfjm;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dvv	net/minecraft/world/level/block/PitcherCropBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MAX_AGE
	f	Lefb;	e	AGE
	f	Leez;	f	HALF
	f	I	g	DOUBLE_PLANT_AGE_INTERSECTION
	f	I	h	BONEMEAL_INCREASE
	f	Lfjm;	i	SHAPE_BULB
	f	Lfjm;	D	SHAPE_CROP
	f	Ljava/util/function/Function;	R	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Laub;Leeb;Ljb;I)V	a	grow
	m	(Ldmx;Ljb;)Z	a	canGrowInto
	m	(Ldmx;Ljb;)Z	b	sufficientLight
	m	(Leeb;)Z	o	isLower
	m	(I)Z	b	isDouble
	m	(Ldmx;Ljb;Leeb;I)Z	a	canGrow
	m	(Leeb;)Z	q	isMaxAge
	m	(Ldmx;Ljb;Leeb;)Ldvv$a;	c	getLowerHalf
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	([ILeeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dvv$1	net/minecraft/world/level/block/PitcherCropBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$DoubleBlockHalf
	m	()V	<clinit>	<clinit>
c	dvv$a	net/minecraft/world/level/block/PitcherCropBlock$PosAndState
	f	Ljb;	a	pos
	f	Leeb;	b	state
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Leeb;	b	state
c	dvw	net/minecraft/world/level/block/PlayerHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	dvx	net/minecraft/world/level/block/PlayerWallHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	dvy	net/minecraft/world/level/block/PointedDripstoneBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	TIP_DIRECTION
	f	Leez;	c	THICKNESS
	f	Lees;	d	WATERLOGGED
	f	I	e	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE
	f	I	f	DELAY_BEFORE_FALLING
	f	F	g	DRIP_PROBABILITY_PER_ANIMATE_TICK
	f	F	h	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE
	f	I	i	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON
	f	F	D	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	F	R	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK
	f	D	S	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE
	f	F	T	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE
	f	I	U	STALACTITE_MAX_DAMAGE
	f	I	V	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION
	f	F	W	STALAGMITE_FALL_DISTANCE_OFFSET
	f	I	X	STALAGMITE_FALL_DAMAGE_MODIFIER
	f	F	Y	AVERAGE_DAYS_PER_GROWTH
	f	F	Z	GROWTH_PROBABILITY_PER_RANDOM_TICK
	f	I	aa	MAX_GROWTH_LENGTH
	f	I	ab	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING
	f	Lfjm;	ac	SHAPE_TIP_MERGE
	f	Lfjm;	ad	SHAPE_TIP_UP
	f	Lfjm;	ae	SHAPE_TIP_DOWN
	f	Lfjm;	af	SHAPE_FRUSTUM
	f	Lfjm;	ag	SHAPE_MIDDLE
	f	Lfjm;	ah	SHAPE_BASE
	f	D	ai	STALACTITE_DRIP_START_PIXEL
	f	F	aj	MAX_HORIZONTAL_OFFSET
	f	Lfjm;	ak	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Laub;Ljb;F)V	a	maybeTransferFluid
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	a_	isCollisionShapeFullBlock
	m	()F	ar_	getMaxHorizontalOffset
	m	(Ldmu;Ljb;Lcqy;)V	a	onBrokenAfterFall
	m	(Lbzm;)Lbyb;	a	getFallDamageSource
	m	(Leeb;Laub;Ljb;)V	a	spawnFallingStalactite
	m	(Leeb;Laub;Ljb;Lbck;)V	c	growStalactiteOrStalagmiteIfPossible
	m	(Laub;Ljb;)V	b	growStalagmiteBelow
	m	(Laub;Ljb;Ljh;)V	a	grow
	m	(Ldmv;Ljb;Ljh;Leey;)V	a	createDripstone
	m	(Leeb;Ldmv;Ljb;)V	a	createMergedTips
	m	(Ldmu;Ljb;Leeb;)V	a	spawnDripParticle
	m	(Ldmu;Ljb;Leeb;Lfak;)V	a	spawnDripParticle
	m	(Leeb;Ldmv;Ljb;IZ)Ljb;	a	findTip
	m	(Ldmx;Ljb;Ljh;)Ljh;	b	calculateTipDirection
	m	(Ldmx;Ljb;Ljh;Z)Leey;	a	calculateDripstoneThickness
	m	(Leeb;)Z	o	canDrip
	m	(Leeb;Laub;Ljb;)Z	b	canTipGrow
	m	(Ldmu;Ljb;Leeb;I)Ljava/util/Optional;	a	findRootBlock
	m	(Ldmx;Ljb;Ljh;)Z	c	isValidPointedDripstonePlacement
	m	(Leeb;Z)Z	a	isTip
	m	(Leeb;Ljh;)Z	a	isUnmergedTipWithDirection
	m	(Leeb;)Z	q	isStalactite
	m	(Leeb;)Z	r	isStalagmite
	m	(Leeb;Ldmx;Ljb;)Z	b	isStalactiteStartPos
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ljh;)Z	b	isPointedDripstoneWithDirection
	m	(Ldmu;Ljb;Lfak;)Ljb;	a	findFillableCauldronBelowStalactiteTip
	m	(Ldmu;Ljb;)Ljb;	a	findStalactiteTipAboveCauldron
	m	(Laub;Ljb;)Lfak;	a	getCauldronFillFluidType
	m	(Ldmu;Ljb;Leeb;)Ljava/util/Optional;	b	getFluidAboveStalactite
	m	(Lfak;)Z	a	canFillCauldron
	m	(Leeb;Leeb;)Z	a	canGrow
	m	(Ldmu;Lfak;)Lfak;	a	getDripFluid
	m	(Ldmv;Ljb;Ljh$b;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional;	a	findBlockVertical
	m	(Ldly;Ljb;Leeb;)Z	a	canDripThrough
	m	(Ldmu;Ljb;)Ldvy$a;	b	lambda$getFluidAboveStalactite$11
	m	(Ldvy$a;)Lfak;	a	lambda$getCauldronFillFluidType$10
	m	(Ldmu;Ljb;Leeb;)Z	c	lambda$findStalactiteTipAboveCauldron$9
	m	(Ldmu;Ljb;Leeb;)Z	d	lambda$findFillableCauldronBelowStalactiteTip$8
	m	(Lfak;Leeb;)Z	a	lambda$findFillableCauldronBelowStalactiteTip$7
	m	(Leeb;)Z	s	lambda$findRootBlock$6
	m	(Ljh;Ljb;Leeb;)Z	a	lambda$findRootBlock$5
	m	(ZLeeb;)Z	a	lambda$findTip$4
	m	(Ljh;Ljb;Leeb;)Z	b	lambda$findTip$3
	m	(Ldmu;Ljb;Leeb;Ldvy$a;)V	a	lambda$spawnDripParticle$2
	m	(Ldmu;Ljb;Leeb;Ldvy$a;)V	b	lambda$animateTick$1
	m	(FLdvy$a;)Z	a	lambda$animateTick$0
	m	()V	<clinit>	<clinit>
c	dvy$1	net/minecraft/world/level/block/PointedDripstoneBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$DripstoneThickness
	m	()V	<clinit>	<clinit>
c	dvy$a	net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo
	f	Ljb;	a	pos
	f	Lfak;	b	fluid
	f	Leeb;	c	sourceState
	m	(Ljb;Lfak;Leeb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Lfak;	b	fluid
	m	()Leeb;	c	sourceState
c	dvz	net/minecraft/world/level/block/Portal
	m	(Laub;Lbzm;)I	a	getPortalTransitionTime
	m	(Laub;Lbzm;Ljb;)Lfbl;	a	getPortalDestination
	m	()Ldvz$a;	b	getLocalTransition
c	dvz$a	net/minecraft/world/level/block/Portal$Transition
	f	Ldvz$a;	a	CONFUSION
	f	Ldvz$a;	b	NONE
	f	[Ldvz$a;	c	$VALUES
	m	()[Ldvz$a;	values	values
	m	(Ljava/lang/String;)Ldvz$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldvz$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dwa	net/minecraft/world/level/block/PotatoBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	[Lfjm;	b	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldmt;	d	getBaseSeedId
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dwb	net/minecraft/world/level/block/PowderSnowBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR
	f	F	c	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER
	f	F	d	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER
	f	F	e	NUM_BLOCKS_TO_FALL_INTO_BLOCK
	f	Lfjm;	f	FALLING_COLLISION_SHAPE
	f	D	g	MINIMUM_FALL_DISTANCE_FOR_SOUND
	f	D	h	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Lbzm;)Z	a	canEntityWalkOnPowderSnow
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	()Ljava/util/Optional;	as_	getPickupSound
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Ljb;Lbzm;)V	a	lambda$entityInside$0
	m	()V	<clinit>	<clinit>
c	dwc	net/minecraft/world/level/block/PoweredBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	()V	<clinit>	<clinit>
c	dwd	net/minecraft/world/level/block/PoweredRailBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	SHAPE
	f	Lees;	d	POWERED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;ZI)Z	a	findPoweredRailSignal
	m	(Ldmu;Ljb;ZILeff;)Z	a	isSameRailWithPower
	m	(Leeb;Ldmu;Ljb;Ldpz;)V	a	updateState
	m	()Lefe;	c	getShapeProperty
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dwd$1	net/minecraft/world/level/block/PoweredRailBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	m	()V	<clinit>	<clinit>
c	dwe	net/minecraft/world/level/block/PressurePlateBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lees;	d	POWERED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;Leea$d;)V	<init>	<init>
	m	(Leeb;)I	h	getSignalForState
	m	(Leeb;I)Leeb;	a	setSignalForState
	m	(Ldmu;Ljb;)I	b	getSignalStrength
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldwe;)Leeq;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dwe$1	net/minecraft/world/level/block/PressurePlateBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$BlockSetType$PressurePlateSensitivity
	m	()V	<clinit>	<clinit>
c	dwf	net/minecraft/world/level/block/PumpkinBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	()V	<clinit>	<clinit>
c	dwg	net/minecraft/world/level/block/RailBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Ldpz;)V	a	updateState
	m	()Lefe;	c	getShapeProperty
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dwh	net/minecraft/world/level/block/RailState
	f	Ldmu;	a	level
	f	Ljb;	b	pos
	f	Ldpo;	c	block
	f	Leeb;	d	state
	f	Z	e	isStraight
	f	Ljava/util/List;	f	connections
	m	(Ldmu;Ljb;Leeb;)V	<init>	<init>
	m	()Ljava/util/List;	a	getConnections
	m	(Leff;)V	a	updateConnections
	m	()V	d	removeSoftConnections
	m	(Ljb;)Z	a	hasRail
	m	(Ljb;)Ldwh;	b	getRail
	m	(Ldwh;)Z	a	connectsTo
	m	(Ljb;)Z	c	hasConnection
	m	()I	b	countPotentialConnections
	m	(Ldwh;)Z	b	canConnectTo
	m	(Ldwh;)V	c	connectTo
	m	(Ljb;)Z	d	hasNeighborRail
	m	(ZZLeff;)Ldwh;	a	place
	m	()Leeb;	c	getState
c	dwh$1	net/minecraft/world/level/block/RailState$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	m	()V	<clinit>	<clinit>
c	dwi	net/minecraft/world/level/block/RedStoneOreBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	LIT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;)V	a_	attack
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;)V	d	interact
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmu;Ljb;)V	a	spawnParticles
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dwj	net/minecraft/world/level/block/RedStoneWireBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	NORTH
	f	Leez;	c	EAST
	f	Leez;	d	SOUTH
	f	Leez;	e	WEST
	f	Lefb;	f	POWER
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	[I	h	COLORS
	f	F	i	PARTICLE_DENSITY
	f	Ljava/util/function/Function;	D	shapes
	f	Leeb;	R	crossState
	f	Lfbv;	S	evaluator
	f	Z	T	shouldSignal
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldly;Leeb;Ljb;)Leeb;	a	getConnectionState
	m	(Ldly;Leeb;Ljb;)Leeb;	b	getMissingConnections
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Z	q	isCross
	m	(Leeb;)Z	r	isDot
	m	(Leeb;Ldmv;Ljb;II)V	a	updateIndirectNeighbourShapes
	m	(Ldly;Ljb;Ljh;)Lefg;	a	getConnectingSide
	m	(Ldly;Ljb;Ljh;Z)Lefg;	a	getConnectingSide
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldly;Ljb;Leeb;)Z	a	canSurviveOn
	m	(Ldmu;Ljb;Leeb;Lfbt;Z)V	a	updatePowerStrength
	m	(Ldmu;Ljb;)I	a	getBlockSignal
	m	(Ldmu;Ljb;)V	b	checkCornerChangeAt
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldmu;Ljb;)V	c	updateNeighborsOfNeighboringWires
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;)Z	a	useExperimentalEvaluator
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;)Z	o	shouldConnectTo
	m	(Leeb;Ljh;)Z	a	shouldConnectTo
	m	(Leeb;)Z	f_	isSignalSource
	m	(I)I	b	getColorForPower
	m	(Ldmu;Lbck;Ljb;ILjh;Ljh;FF)V	a	spawnParticlesAlongLine
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;Leeb;Leeb;)V	a	updatesOnShapeChange
	m	(Lfjm;Ljava/util/Map;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$1
	m	([I)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dwj$1	net/minecraft/world/level/block/RedStoneWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RedstoneSide
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dwk	net/minecraft/world/level/block/RedstoneLampBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	LIT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dwl	net/minecraft/world/level/block/RedstoneTorchBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	LIT
	f	Ljava/util/Map;	f	RECENT_TOGGLES
	f	I	c	RECENT_TOGGLE_TIMER
	f	I	d	MAX_RECENT_TOGGLES
	f	I	e	RESTART_DELAY
	f	I	g	TOGGLE_DELAY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldmu;Ljb;Leeb;)V	b	notifyNeighbors
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Ldmu;Ljb;Leeb;)Z	a	hasNeighborSignal
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Ljb;Z)Z	a	isToggledTooFrequently
	m	(Ldmu;Leeb;)Lfbt;	a	randomOrientation
	m	(Ldly;)Ljava/util/List;	a	lambda$isToggledTooFrequently$0
	m	()V	<clinit>	<clinit>
c	dwl$a	net/minecraft/world/level/block/RedstoneTorchBlock$Toggle
	f	Ljb;	a	pos
	f	J	b	when
	m	(Ljb;J)V	<init>	<init>
c	dwm	net/minecraft/world/level/block/RedstoneWallTorchBlock
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Leez;	g	FACING
	f	Lees;	h	LIT
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmu;Ljb;Leeb;)Z	a	hasNeighborSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Leeb;)Lfbt;	a	randomOrientation
	m	()V	<clinit>	<clinit>
c	dwn	net/minecraft/world/level/block/RenderShape
	f	Ldwn;	a	INVISIBLE
	f	Ldwn;	b	MODEL
	f	[Ldwn;	c	$VALUES
	m	()[Ldwn;	values	values
	m	(Ljava/lang/String;)Ldwn;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Ldwn;	a	$values
	m	()V	<clinit>	<clinit>
c	dwo	net/minecraft/world/level/block/RepeaterBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	LOCKED
	f	Lefb;	d	DELAY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;)I	h	getDelay
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;)Z	b	isLocked
	m	()Z	b	sideInputDiodesOnly
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dwp	net/minecraft/world/level/block/RespawnAnchorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MIN_CHARGES
	f	I	c	MAX_CHARGES
	f	Lefb;	d	CHARGE
	f	Lcom/google/common/collect/ImmutableList;	e	RESPAWN_HORIZONTAL_OFFSETS
	f	Lcom/google/common/collect/ImmutableList;	f	RESPAWN_OFFSETS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldcv;)Z	a	isRespawnFuel
	m	(Leeb;)Z	o	canBeCharged
	m	(Ljb;Ldmu;)Z	a	isWaterThatWouldFlow
	m	(Leeb;Ldmu;Ljb;)V	d	explode
	m	(Ldmu;)Z	a	canSetSpawn
	m	(Lbzm;Ldmu;Ljb;Leeb;)V	a	charge
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;I)I	a	getScaledChargeLevel
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Lbzv;Ldmc;Ljb;)Ljava/util/Optional;	a	findStandUpPosition
	m	(Lbzv;Ldmc;Ljb;Z)Ljava/util/Optional;	a	findStandUpPosition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Ljb;)Z	a	lambda$explode$0
	m	()V	<clinit>	<clinit>
c	dwp$1	net/minecraft/world/level/block/RespawnAnchorBlock$1
	f	Ljb;	a	val$pos
	f	Z	b	val$inWater
	m	(Ldwp;Ljb;Z)V	<init>	<init>
	m	(Ldmn;Ldly;Ljb;Leeb;Lfal;)Ljava/util/Optional;	a	getBlockExplosionResistance
c	dwq	net/minecraft/world/level/block/RodBlock
	f	Ljava/util/Map;	b	SHAPES
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dwr	net/minecraft/world/level/block/RootedDirtBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Ljb;)Ljb;	a	getParticlePos
	m	()V	<clinit>	<clinit>
c	dws	net/minecraft/world/level/block/RootsBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	()V	<clinit>	<clinit>
c	dwt	net/minecraft/world/level/block/RotatedPillarBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leez;	d	AXIS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldwu;)Leeb;	b	rotatePillar
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	()V	<clinit>	<clinit>
c	dwt$1	net/minecraft/world/level/block/RotatedPillarBlock$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	dwu	net/minecraft/world/level/block/Rotation
	f	Ldwu;	a	NONE
	f	Ldwu;	b	CLOCKWISE_90
	f	Ldwu;	c	CLOCKWISE_180
	f	Ldwu;	d	COUNTERCLOCKWISE_90
	f	Ljava/util/function/IntFunction;	e	BY_ID
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Lzm;	g	STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	h	LEGACY_CODEC
	f	I	i	index
	f	Ljava/lang/String;	j	id
	f	Lh;	k	rotation
	f	[Ldwu;	l	$VALUES
	m	()[Ldwu;	values	values
	m	(Ljava/lang/String;)Ldwu;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Lh;)V	<init>	<init>
	m	(Ldwu;)Ldwu;	a	getRotated
	m	()Lh;	a	rotation
	m	(Ljh;)Ljh;	a	rotate
	m	(II)I	a	rotate
	m	(Lbck;)Ldwu;	a	getRandom
	m	(Lbck;)Ljava/util/List;	b	getShuffled
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	b	getIndex
	m	()[Ldwu;	d	$values
	m	()V	<clinit>	<clinit>
c	dwv	net/minecraft/world/level/block/SandBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lbat;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldwv;)Lbat;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dww	net/minecraft/world/level/block/SaplingBlock
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Lefb;	f	STAGE
	f	Lfjm;	a	SHAPE
	f	Ledp;	g	treeGrower
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ledp;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Laub;Ljb;Leeb;Lbck;)V	a	advanceTree
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldww;)Ledp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dwx	net/minecraft/world/level/block/ScaffoldingBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	f	TICK_DELAY
	f	Lfjm;	g	SHAPE_STABLE
	f	Lfjm;	h	SHAPE_UNSTABLE_BOTTOM
	f	Lfjm;	i	SHAPE_UNSTABLE
	f	Lfjm;	D	SHAPE_BELOW_BLOCK
	f	I	b	STABILITY_MAX_DISTANCE
	f	Lefb;	c	DISTANCE
	f	Lees;	d	WATERLOGGED
	f	Lees;	e	BOTTOM
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getInteractionShape
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldly;Ljb;I)Z	a	isBottom
	m	(Ldly;Ljb;)I	a	getDistance
	m	()V	<clinit>	<clinit>
c	dwy	net/minecraft/world/level/block/SculkBehaviour
	f	Ldwy;	B_	DEFAULT
	m	()B	b	getSculkSpreadDelay
	m	(Ldmv;Leeb;Ljb;Lbck;)V	a	onDischarged
	m	(Ldmv;Ljb;Lbck;)Z	a	depositCharge
	m	(Ldmv;Ljb;Leeb;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
	m	()Z	d	canChangeBlockStateOnSpread
	m	(I)I	j_	updateDecayDelay
	m	(Ldxd$a;Ldmv;Ljb;Lbck;Ldxd;Z)I	a	attemptUseCharge
	m	()V	<clinit>	<clinit>
c	dwy$1	net/minecraft/world/level/block/SculkBehaviour$1
	m	()V	<init>	<init>
	m	(Ldmv;Ljb;Leeb;Ljava/util/Collection;Z)Z	a	attemptSpreadVein
	m	(Ldxd$a;Ldmv;Ljb;Lbck;Ldxd;Z)I	a	attemptUseCharge
	m	(I)I	j_	updateDecayDelay
c	dwz	net/minecraft/world/level/block/SculkBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldxd$a;Ldmv;Ljb;Lbck;Ldxd;Z)I	a	attemptUseCharge
	m	(Ldxd;Ljb;Ljb;I)I	a	getDecayPenalty
	m	(Ldmv;Ljb;Lbck;Z)Leeb;	a	getRandomGrowthState
	m	(Ldmv;Ljb;)Z	a	canPlaceGrowth
	m	()Z	d	canChangeBlockStateOnSpread
	m	()V	<clinit>	<clinit>
c	dxa	net/minecraft/world/level/block/SculkCatalystBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	PULSE
	f	Lbwo;	c	xpRange
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	()V	<clinit>	<clinit>
c	dxb	net/minecraft/world/level/block/SculkSensorBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	ACTIVE_TICKS
	f	I	e	COOLDOWN_TICKS
	f	Leez;	f	PHASE
	f	Lefb;	g	POWER
	f	Lees;	h	WATERLOGGED
	f	Lfjm;	a	SHAPE
	f	[F	b	RESONANCE_PITCH_BEND
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmu;Ljb;Leeb;)V	b	updateNeighbours
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Lefi;	o	getPhase
	m	(Leeb;)Z	q	canActivate
	m	(Ldmu;Ljb;Leeb;)V	a	deactivate
	m	()I	c	getActiveTicks
	m	(Lbzm;Ldmu;Ljb;Leeb;II)V	a	activate
	m	(Lbzm;Ldmu;Ljb;I)V	a	tryResonateVibration
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Ldmu;Ljb;Leeb;Leck;)V	a	lambda$getTicker$1
	m	([F)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dxc	net/minecraft/world/level/block/SculkShriekerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	SHRIEKING
	f	Lees;	c	WATERLOGGED
	f	Lees;	d	CAN_SUMMON
	f	Lfjm;	f	SHAPE_COLLISION
	f	D	e	TOP_Y
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Leeb;Lecl;)V	a	lambda$getTicker$2
	m	(Laub;Lecl;)V	a	lambda$tick$1
	m	(Laub;Lauc;Lecl;)V	a	lambda$stepOn$0
	m	()V	<clinit>	<clinit>
c	dxd	net/minecraft/world/level/block/SculkSpreader
	f	I	a	MAX_GROWTH_RATE_RADIUS
	f	I	b	MAX_CHARGE
	f	F	c	MAX_DECAY_FACTOR
	f	I	f	MAX_CURSORS
	f	I	d	SHRIEKER_PLACEMENT_RATE
	f	I	e	MAX_CURSOR_DISTANCE
	f	Z	g	isWorldGeneration
	f	Lbae;	h	replaceableBlocks
	f	I	i	growthSpawnCost
	f	I	j	noGrowthRadius
	f	I	k	chargeDecayRate
	f	I	l	additionalDecayRate
	f	Ljava/util/List;	m	cursors
	m	(ZLbae;IIII)V	<init>	<init>
	m	()Ldxd;	a	createLevelSpreader
	m	()Ldxd;	b	createWorldGenSpreader
	m	()Lbae;	c	replaceableBlocks
	m	()I	d	growthSpawnCost
	m	()I	e	noGrowthRadius
	m	()I	f	chargeDecayRate
	m	()I	g	additionalDecayRate
	m	()Z	h	isWorldGeneration
	m	()Ljava/util/List;	i	getCursors
	m	()V	j	clear
	m	(Lfda;)V	a	load
	m	(Lfdc;)V	a	save
	m	(Ljb;I)V	a	addCursors
	m	(Ldxd$a;)V	a	addCursor
	m	(Ldmv;Ljb;Lbck;Z)V	a	updateCursors
	m	(Ldxd$a;Ljb;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$updateCursors$1
	m	(Ldxd$a;)Ljava/lang/Integer;	b	lambda$save$0
c	dxd$a	net/minecraft/world/level/block/SculkSpreader$ChargeCursor
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	NON_CORNER_NEIGHBOURS
	f	I	a	MAX_CURSOR_DECAY_DELAY
	f	Ljb;	d	pos
	f	I	e	charge
	f	I	f	updateDelay
	f	I	g	decayDelay
	f	Ljava/util/Set;	h	facings
	f	Lcom/mojang/serialization/Codec;	i	DIRECTION_SET
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljb;IIILjava/util/Optional;)V	<init>	<init>
	m	(Ljb;I)V	<init>	<init>
	m	()Ljb;	a	getPos
	m	(Ljb;)Z	a	isPosUnreasonable
	m	()I	b	getCharge
	m	()I	c	getDecayDelay
	m	()Ljava/util/Set;	d	getFacingData
	m	(Ldmv;Ljb;Z)Z	a	shouldUpdate
	m	(Ldmv;Ljb;Lbck;Ldxd;Z)V	a	update
	m	(Ldxd$a;)V	a	mergeWith
	m	(Leeb;)Ldwy;	a	getBlockBehaviour
	m	(Lbck;)Ljava/util/List;	a	getRandomizedNonCornerNeighbourOffsets
	m	(Ldmv;Ljb;Lbck;)Ljb;	a	getValidMovementPos
	m	(Ldmv;Ljb;Ljb;)Z	a	isMovementUnobstructed
	m	(Ldmv;Ljb;Ljh;)Z	a	isUnobstructed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Ldxd$a;)Ljava/util/Optional;	b	lambda$static$4
	m	(Ldxd$a;)Ljava/lang/Integer;	c	lambda$static$3
	m	(Ljava/util/List;)Ljava/util/Set;	a	lambda$static$2
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;)V	a	lambda$static$1
	m	(Ljb;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dxe	net/minecraft/world/level/block/SculkVeinBlock
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldvi;	f	veinSpreader
	f	Ldvi;	g	sameSpaceSpreader
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldvi;	c	getSpreader
	m	()Ldvi;	q	getSameSpaceSpreader
	m	(Ldmv;Ljb;Leeb;Ljava/util/Collection;)Z	a	regrow
	m	(Ldmv;Leeb;Ljb;Lbck;)V	a	onDischarged
	m	(Ldxd$a;Ldmv;Ljb;Lbck;Ldxd;Z)I	a	attemptUseCharge
	m	(Ldxd;Ldmv;Ljb;Lbck;)Z	a	attemptPlaceSculk
	m	(Ldmv;Leeb;Ljb;)Z	a	hasSubstrateAccess
	m	()V	<clinit>	<clinit>
c	dxe$a	net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig
	f	[Ldvi$e;	b	spreadTypes
	m	(Ldxe;[Ldvi$e;)V	<init>	<init>
	m	(Ldly;Ljb;Ljb;Ljh;Leeb;)Z	a	stateCanBeReplaced
	m	()[Ldvi$e;	a	getSpreadTypes
	m	(Leeb;)Z	a	isOtherBlockValidAsSource
c	dxf	net/minecraft/world/level/block/SeaPickleBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_PICKLES
	f	Lefb;	c	PICKLES
	f	Lees;	d	WATERLOGGED
	f	Lfjm;	e	SHAPE_ONE
	f	Lfjm;	f	SHAPE_TWO
	f	Lfjm;	g	SHAPE_THREE
	f	Lfjm;	h	SHAPE_FOUR
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Z	o	isDead
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dxg	net/minecraft/world/level/block/SeagrassBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	()V	<clinit>	<clinit>
c	dxh	net/minecraft/world/level/block/SegmentableBlock
	f	I	d	MIN_SEGMENT
	f	I	e	MAX_SEGMENT
	f	Lefb;	f	AMOUNT
	m	(Leez;Lefb;)Ljava/util/function/Function;	a	getShapeCalculator
	m	()Lefb;	c	getSegmentAmountProperty
	m	()D	b	getShapeHeight
	m	(Leeb;Ldgo;Lefb;)Z	a	canBeReplaced
	m	(Ldgo;Ldpz;Lefb;Leez;)Leeb;	a	getStateForPlacement
	m	(Leez;Lefb;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$getShapeCalculator$0
	m	()V	<clinit>	<clinit>
c	dxi	net/minecraft/world/level/block/ShortDryGrassBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dxj	net/minecraft/world/level/block/ShulkerBoxBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	SHAPES_OPEN_SUPPORT
	f	Leez;	c	FACING
	f	Lame;	d	CONTENTS
	f	Ldbt;	e	color
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;Lecm;)Z	a	canOpen
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldbt;)Ldpz;	a	getBlockByColor
	m	()Ldbt;	b	getColor
	m	(Ldbt;)Ldcv;	b	getColoredItemStack
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Lecm;Ljava/util/function/Consumer;)V	a	lambda$getDrops$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Optional;Leea$d;)Ldxj;	a	lambda$static$1
	m	(Ldxj;)Ljava/util/Optional;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dxj$1	net/minecraft/world/level/block/ShulkerBoxBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
	m	()V	<clinit>	<clinit>
c	dxk	net/minecraft/world/level/block/SignBlock
	f	Lees;	d	WATERLOGGED
	f	Lfjm;	a	SHAPE
	f	Lefp;	b	type
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	a	isPossibleToRespawnInThis
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Lcut;Lecn;Z)Z	b	hasEditableText
	m	(Leeb;)F	h	getYRotationDegrees
	m	(Leeb;)Lfis;	o	getSignHitboxCenterPosition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	()Lefp;	d	type
	m	(Ldpz;)Lefp;	a	getWoodType
	m	(Lcut;Lecn;Z)V	a	openTextEdit
	m	(Lcut;Lecn;)Z	a	otherPlayerIsEditingSign
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Lxo;)Z	a	lambda$hasEditableText$0
	m	()V	<clinit>	<clinit>
c	dxl	net/minecraft/world/level/block/SimpleWaterloggedBlock
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Lcam;Ldmv;Ljb;Leeb;)Ldcv;	a	pickupBlock
	m	()Ljava/util/Optional;	as_	getPickupSound
c	dxm	net/minecraft/world/level/block/SkullBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	d	MAX
	f	I	b	ROTATIONS
	f	Lefb;	e	ROTATION
	f	Lfjm;	f	SHAPE
	f	Lfjm;	g	SHAPE_PIGLIN
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldxm$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dxm$a	net/minecraft/world/level/block/SkullBlock$Type
	f	Ljava/util/Map;	a	TYPES
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	()V	<clinit>	<clinit>
c	dxm$b	net/minecraft/world/level/block/SkullBlock$Types
	f	Ldxm$b;	c	SKELETON
	f	Ldxm$b;	d	WITHER_SKELETON
	f	Ldxm$b;	e	PLAYER
	f	Ldxm$b;	f	ZOMBIE
	f	Ldxm$b;	g	CREEPER
	f	Ldxm$b;	h	PIGLIN
	f	Ldxm$b;	i	DRAGON
	f	Ljava/lang/String;	j	name
	f	[Ldxm$b;	k	$VALUES
	m	()[Ldxm$b;	values	values
	m	(Ljava/lang/String;)Ldxm$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldxm$b;	a	$values
	m	()V	<clinit>	<clinit>
c	dxn	net/minecraft/world/level/block/SlabBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	TYPE
	f	Lees;	c	WATERLOGGED
	f	Lfjm;	d	SHAPE_BOTTOM
	f	Lfjm;	e	SHAPE_TOP
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	dxn$1	net/minecraft/world/level/block/SlabBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$SlabType
	f	[I	b	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	m	()V	<clinit>	<clinit>
c	dxo	net/minecraft/world/level/block/SlimeBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Ldly;Lbzm;)V	a	updateEntityMovementAfterFallOn
	m	(Lbzm;)V	a	bounceUp
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	()V	<clinit>	<clinit>
c	dxp	net/minecraft/world/level/block/SmallDripleafBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lees;	e	WATERLOGGED
	f	Leez;	d	FACING
	f	Lfjm;	f	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	()F	at_	getMaxVerticalOffset
	m	()V	<clinit>	<clinit>
c	dxq	net/minecraft/world/level/block/SmithingTableBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lxo;	c	CONTAINER_TITLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	dxr	net/minecraft/world/level/block/SmokerBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Lcut;)V	a	openContainer
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	dxs	net/minecraft/world/level/block/SnifferEggBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HATCH_LEVEL
	f	Lefb;	c	HATCH
	f	I	d	REGULAR_HATCH_TIME_TICKS
	f	I	e	BOOSTED_HATCH_TIME_TICKS
	f	I	f	RANDOM_HATCH_OFFSET_TICKS
	f	Lfjm;	g	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)I	o	getHatchLevel
	m	(Leeb;)Z	q	isReadyToHatch
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldly;Ljb;)Z	a	hatchBoost
	m	()V	<clinit>	<clinit>
c	dxt	net/minecraft/world/level/block/SnowLayerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_HEIGHT
	f	Lefb;	c	LAYERS
	f	[Lfjm;	e	SHAPES
	f	I	d	HEIGHT_IMPASSABLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(I)Lfjm;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dxu	net/minecraft/world/level/block/SnowyDirtBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	SNOWY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;)Z	o	isSnowySetting
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dxv	net/minecraft/world/level/block/SoulFireBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Z	o	canSurviveOnBlock
	m	(Leeb;)Z	g	canBurn
	m	()V	<clinit>	<clinit>
c	dxw	net/minecraft/world/level/block/SoulSandBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	f	I	c	BUBBLE_COLUMN_CHECK_DELAY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	()V	<clinit>	<clinit>
c	dxx	net/minecraft/world/level/block/SoundType
	f	Ldxx;	a	EMPTY
	f	Ldxx;	b	WOOD
	f	Ldxx;	c	GRAVEL
	f	Ldxx;	d	GRASS
	f	Ldxx;	e	LILY_PAD
	f	Ldxx;	f	STONE
	f	Ldxx;	g	METAL
	f	Ldxx;	h	GLASS
	f	Ldxx;	i	WOOL
	f	Ldxx;	j	SAND
	f	Ldxx;	k	SNOW
	f	Ldxx;	l	POWDER_SNOW
	f	Ldxx;	m	LADDER
	f	Ldxx;	n	ANVIL
	f	Ldxx;	o	SLIME_BLOCK
	f	Ldxx;	p	HONEY_BLOCK
	f	Ldxx;	q	WET_GRASS
	f	Ldxx;	r	CORAL_BLOCK
	f	Ldxx;	s	BAMBOO
	f	Ldxx;	t	BAMBOO_SAPLING
	f	Ldxx;	u	SCAFFOLDING
	f	Ldxx;	v	SWEET_BERRY_BUSH
	f	Ldxx;	w	CROP
	f	Ldxx;	x	HARD_CROP
	f	Ldxx;	y	VINE
	f	Ldxx;	z	NETHER_WART
	f	Ldxx;	A	LANTERN
	f	Ldxx;	B	STEM
	f	Ldxx;	C	NYLIUM
	f	Ldxx;	D	FUNGUS
	f	Ldxx;	E	ROOTS
	f	Ldxx;	F	SHROOMLIGHT
	f	Ldxx;	G	WEEPING_VINES
	f	Ldxx;	H	TWISTING_VINES
	f	Ldxx;	I	SOUL_SAND
	f	Ldxx;	J	SOUL_SOIL
	f	Ldxx;	K	BASALT
	f	Ldxx;	L	WART_BLOCK
	f	Ldxx;	M	NETHERRACK
	f	Ldxx;	N	NETHER_BRICKS
	f	Ldxx;	O	NETHER_SPROUTS
	f	Ldxx;	P	NETHER_ORE
	f	Ldxx;	Q	BONE_BLOCK
	f	Ldxx;	R	NETHERITE_BLOCK
	f	Ldxx;	S	ANCIENT_DEBRIS
	f	Ldxx;	T	LODESTONE
	f	Ldxx;	U	CHAIN
	f	Ldxx;	V	NETHER_GOLD_ORE
	f	Ldxx;	W	GILDED_BLACKSTONE
	f	Ldxx;	X	CANDLE
	f	Ldxx;	Y	AMETHYST
	f	Ldxx;	Z	AMETHYST_CLUSTER
	f	Ldxx;	aa	SMALL_AMETHYST_BUD
	f	Ldxx;	ab	MEDIUM_AMETHYST_BUD
	f	Ldxx;	ac	LARGE_AMETHYST_BUD
	f	Ldxx;	ad	TUFF
	f	Ldxx;	ae	TUFF_BRICKS
	f	Ldxx;	af	POLISHED_TUFF
	f	Ldxx;	ag	CALCITE
	f	Ldxx;	ah	DRIPSTONE_BLOCK
	f	Ldxx;	ai	POINTED_DRIPSTONE
	f	Ldxx;	aj	COPPER
	f	Ldxx;	ak	COPPER_BULB
	f	Ldxx;	al	COPPER_GRATE
	f	Ldxx;	am	CAVE_VINES
	f	Ldxx;	an	SPORE_BLOSSOM
	f	Ldxx;	ao	CACTUS_FLOWER
	f	Ldxx;	ap	AZALEA
	f	Ldxx;	aq	FLOWERING_AZALEA
	f	Ldxx;	ar	MOSS_CARPET
	f	Ldxx;	as	PINK_PETALS
	f	Ldxx;	at	LEAF_LITTER
	f	Ldxx;	au	MOSS
	f	Ldxx;	av	BIG_DRIPLEAF
	f	Ldxx;	aw	SMALL_DRIPLEAF
	f	Ldxx;	ax	ROOTED_DIRT
	f	Ldxx;	ay	HANGING_ROOTS
	f	Ldxx;	az	AZALEA_LEAVES
	f	Ldxx;	aA	SCULK_SENSOR
	f	Ldxx;	aB	SCULK_CATALYST
	f	Ldxx;	aC	SCULK
	f	Ldxx;	aD	SCULK_VEIN
	f	Ldxx;	aE	SCULK_SHRIEKER
	f	Ldxx;	aF	GLOW_LICHEN
	f	Ldxx;	aG	DEEPSLATE
	f	Ldxx;	aH	DEEPSLATE_BRICKS
	f	Ldxx;	aI	DEEPSLATE_TILES
	f	Ldxx;	aJ	POLISHED_DEEPSLATE
	f	Ldxx;	aK	FROGLIGHT
	f	Ldxx;	aL	FROGSPAWN
	f	Ldxx;	aM	MANGROVE_ROOTS
	f	Ldxx;	aN	MUDDY_MANGROVE_ROOTS
	f	Ldxx;	aO	MUD
	f	Ldxx;	aP	MUD_BRICKS
	f	Ldxx;	aQ	PACKED_MUD
	f	Ldxx;	aR	HANGING_SIGN
	f	Ldxx;	aS	NETHER_WOOD_HANGING_SIGN
	f	Ldxx;	aT	BAMBOO_WOOD_HANGING_SIGN
	f	Ldxx;	aU	BAMBOO_WOOD
	f	Ldxx;	aV	NETHER_WOOD
	f	Ldxx;	aW	CHERRY_WOOD
	f	Ldxx;	aX	CHERRY_SAPLING
	f	Ldxx;	aY	CHERRY_LEAVES
	f	Ldxx;	aZ	CHERRY_WOOD_HANGING_SIGN
	f	Ldxx;	ba	CHISELED_BOOKSHELF
	f	Ldxx;	bb	SUSPICIOUS_SAND
	f	Ldxx;	bc	SUSPICIOUS_GRAVEL
	f	Ldxx;	bd	DECORATED_POT
	f	Ldxx;	be	DECORATED_POT_CRACKED
	f	Ldxx;	bf	TRIAL_SPAWNER
	f	Ldxx;	bg	SPONGE
	f	Ldxx;	bh	WET_SPONGE
	f	Ldxx;	bi	VAULT
	f	Ldxx;	bj	CREAKING_HEART
	f	Ldxx;	bk	HEAVY_CORE
	f	Ldxx;	bl	COBWEB
	f	Ldxx;	bm	SPAWNER
	f	Ldxx;	bn	RESIN
	f	Ldxx;	bo	RESIN_BRICKS
	f	Ldxx;	bp	IRON
	f	Ldxx;	bq	DRIED_GHAST
	f	F	br	volume
	f	F	bs	pitch
	f	Layy;	bt	breakSound
	f	Layy;	bu	stepSound
	f	Layy;	bv	placeSound
	f	Layy;	bw	hitSound
	f	Layy;	bx	fallSound
	m	(FFLayy;Layy;Layy;Layy;Layy;)V	<init>	<init>
	m	()F	a	getVolume
	m	()F	b	getPitch
	m	()Layy;	c	getBreakSound
	m	()Layy;	d	getStepSound
	m	()Layy;	e	getPlaceSound
	m	()Layy;	f	getHitSound
	m	()Layy;	g	getFallSound
	m	()V	<clinit>	<clinit>
c	dxy	net/minecraft/world/level/block/SpawnerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	()V	<clinit>	<clinit>
c	dxz	net/minecraft/world/level/block/SpongeBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_DEPTH
	f	I	c	MAX_COUNT
	f	[Ljh;	d	ALL_DIRECTIONS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;)V	a	tryAbsorbWater
	m	(Ldmu;Ljb;)Z	b	removeWaterBreadthFirstSearch
	m	(Ljb;Ldmu;Ljb;)Ljb$b;	a	lambda$removeWaterBreadthFirstSearch$1
	m	(Ljb;Ljava/util/function/Consumer;)V	a	lambda$removeWaterBreadthFirstSearch$0
	m	()V	<clinit>	<clinit>
c	dya	net/minecraft/world/level/block/SporeBlossomBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	f	I	c	ADD_PARTICLE_ATTEMPTS
	f	I	d	PARTICLE_XZ_RADIUS
	f	I	e	PARTICLE_Y_MAX
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()V	<clinit>	<clinit>
c	dyb	net/minecraft/world/level/block/SpreadingSnowyDirtBlock
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	b	canBeGrass
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldmx;Ljb;)Z	c	canPropagate
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
c	dyc	net/minecraft/world/level/block/StainedGlassBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldbt;	c	color
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	()Ldbt;	b	getColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dyd	net/minecraft/world/level/block/StainedGlassPaneBlock
	f	Lcom/mojang/serialization/MapCodec;	h	CODEC
	f	Ldbt;	i	color
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	()Ldbt;	b	getColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dye	net/minecraft/world/level/block/StairBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Leez;	c	HALF
	f	Leez;	d	SHAPE
	f	Lees;	e	WATERLOGGED
	f	Lfjm;	g	SHAPE_OUTER
	f	Lfjm;	h	SHAPE_STRAIGHT
	f	Lfjm;	i	SHAPE_INNER
	f	Ljava/util/Map;	D	SHAPE_BOTTOM_OUTER
	f	Ljava/util/Map;	R	SHAPE_BOTTOM_STRAIGHT
	f	Ljava/util/Map;	S	SHAPE_BOTTOM_INNER
	f	Ljava/util/Map;	T	SHAPE_TOP_OUTER
	f	Ljava/util/Map;	U	SHAPE_TOP_STRAIGHT
	f	Ljava/util/Map;	V	SHAPE_TOP_INNER
	f	Ldpz;	W	base
	f	Leeb;	f	baseState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()F	e	getExplosionResistance
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;)Lefk;	e	getStairsShape
	m	(Leeb;Ldly;Ljb;Ljh;)Z	c	canTakeShape
	m	(Leeb;)Z	o	isStairs
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldye;)Leeb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dye$1	net/minecraft/world/level/block/StairBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StairsShape
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dyf	net/minecraft/world/level/block/StandingSignBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	ROTATION
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)F	h	getYRotationDegrees
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dyg	net/minecraft/world/level/block/StemBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	[Lfjm;	d	SHAPES
	f	Lamd;	e	fruit
	f	Lamd;	f	attachedStem
	f	Lamd;	g	seed
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lamd;Lamd;Lamd;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(I)Lfjm;	b	lambda$static$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ldyg;)Lamd;	a	lambda$static$2
	m	(Ldyg;)Lamd;	b	lambda$static$1
	m	(Ldyg;)Lamd;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dyh	net/minecraft/world/level/block/StonecutterBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lxo;	c	CONTAINER_TITLE
	f	Leez;	b	FACING
	f	Lfjm;	d	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Ljb;ILcus;Lcut;)Lcym;	a	lambda$getMenuProvider$0
	m	()V	<clinit>	<clinit>
c	dyi	net/minecraft/world/level/block/StructureBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	MODE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Laub;Lecs;)V	a	trigger
	m	()V	<clinit>	<clinit>
c	dyi$1	net/minecraft/world/level/block/StructureBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$StructureMode
	m	()V	<clinit>	<clinit>
c	dyj	net/minecraft/world/level/block/StructureVoidBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	()V	<clinit>	<clinit>
c	dyk	net/minecraft/world/level/block/SugarCaneBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	AGE
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dyl	net/minecraft/world/level/block/SupportType
	f	Ldyl;	a	FULL
	f	Ldyl;	b	CENTER
	f	Ldyl;	c	RIGID
	f	[Ldyl;	d	$VALUES
	m	()[Ldyl;	values	values
	m	(Ljava/lang/String;)Ldyl;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Z	a	isSupporting
	m	()[Ldyl;	a	$values
	m	()V	<clinit>	<clinit>
c	dyl$1	net/minecraft/world/level/block/SupportType$1
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Z	a	isSupporting
c	dyl$2	net/minecraft/world/level/block/SupportType$2
	f	Lfjm;	d	CENTER_SUPPORT_SHAPE
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Z	a	isSupporting
c	dyl$3	net/minecraft/world/level/block/SupportType$3
	f	Lfjm;	d	RIGID_SUPPORT_SHAPE
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Ljh;)Z	a	isSupporting
c	dym	net/minecraft/world/level/block/SuspiciousEffectHolder
	m	()Ldfx;	c	getSuspiciousEffects
	m	()Ljava/util/List;	d	getAllEffectHolders
	m	(Ldmt;)Ldym;	a	tryGet
c	dyn	net/minecraft/world/level/block/SweetBerryBushBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	d	HURT_SPEED_THRESHOLD
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	Lfjm;	e	SHAPE_SAPLING
	f	Lfjm;	f	SHAPE_GROWING
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dyo	net/minecraft/world/level/block/TallDryGrassBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lfjm;	c	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Laub;Ljb;)V	a	lambda$performBonemeal$0
	m	()V	<clinit>	<clinit>
c	dyp	net/minecraft/world/level/block/TallFlowerBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	()V	<clinit>	<clinit>
c	dyq	net/minecraft/world/level/block/TallGrassBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldmx;Ljb;Leeb;)Z	a	isValidBonemealTarget
	m	(Ldmu;Lbck;Ljb;Leeb;)Z	a	isBonemealSuccess
	m	(Laub;Lbck;Ljb;Leeb;)V	a	performBonemeal
	m	(Leeb;)Ldsi;	o	getGrownBlock
	m	()V	<clinit>	<clinit>
c	dyr	net/minecraft/world/level/block/TallSeagrassBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leez;	d	HALF
	f	Lfjm;	e	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Lcam;Ldly;Ljb;Leeb;Lfak;)Z	a	canPlaceLiquid
	m	(Ldmv;Ljb;Leeb;Lfal;)Z	a	placeLiquid
	m	()V	<clinit>	<clinit>
c	dys	net/minecraft/world/level/block/TargetBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	OUTPUT_POWER
	f	I	c	ACTIVATION_TICKS_ARROWS
	f	I	d	ACTIVATION_TICKS_OTHER
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldmv;Leeb;Lfio;Lbzm;)I	a	updateRedstoneOutput
	m	(Lfio;Lfis;)I	a	getRedstoneStrength
	m	(Ldmv;Leeb;ILjb;I)V	a	setOutputPower
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	()V	<clinit>	<clinit>
c	dyt	net/minecraft/world/level/block/TestBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	MODE
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;)Lect;	a	getServerTestBlockEntity
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Ldcv;Lefm;)Ldcv;	a	setModeOnStack
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dyu	net/minecraft/world/level/block/TestInstanceBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	dyv	net/minecraft/world/level/block/TintedGlassBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;)I	i_	getLightBlock
	m	()V	<clinit>	<clinit>
c	dyw	net/minecraft/world/level/block/TintedParticleLeavesBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	m	(FLeea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Lbck;)V	a	spawnFallingLeavesParticle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldyw;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dyx	net/minecraft/world/level/block/TntBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	UNSTABLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Laub;Ljb;Ldmn;)V	a	wasExploded
	m	(Ldmu;Ljb;)Z	a	prime
	m	(Ldmu;Ljb;Lcam;)Z	a	prime
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldmn;)Z	a	dropFromExplosion
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dyy	net/minecraft/world/level/block/TorchBlock
	f	Lcom/mojang/serialization/MapCodec;	a	PARTICLE_OPTIONS_FIELD
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lmi;	c	flameParticle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lmi;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ldyy;)Lmi;	a	lambda$static$3
	m	(Lmi;)Lmd;	a	lambda$static$2
	m	(Lmd;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lmd;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dyz	net/minecraft/world/level/block/TorchflowerCropBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	MAX_AGE
	f	Lefb;	c	AGE
	f	[Lfjm;	g	SHAPES
	f	I	h	BONEMEAL_INCREASE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	()Lefb;	b	getAgeProperty
	m	()I	c	getMaxAge
	m	()Ldmt;	d	getBaseSeedId
	m	(I)Leeb;	b	getStateForAge
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;)I	a	getBonemealAgeIncrease
	m	(I)Lfjm;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dza	net/minecraft/world/level/block/TransparentBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	()V	<clinit>	<clinit>
c	dzb	net/minecraft/world/level/block/TrapDoorBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	OPEN
	f	Leez;	c	HALF
	f	Lees;	d	POWERED
	f	Lees;	e	WATERLOGGED
	f	Ljava/util/Map;	g	SHAPES
	f	Leeq;	h	type
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmu;Ljb;Lcut;)V	b	toggle
	m	(Lcut;Ldmu;Ljb;Z)V	a	playSound
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	()Leeq;	q	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldzb;)Leeq;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzb$1	net/minecraft/world/level/block/TrapDoorBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	m	()V	<clinit>	<clinit>
c	dzc	net/minecraft/world/level/block/TrappedChestBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	()Lazg;	c	getOpenChestStat
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	()Lebb;	q	lambda$new$0
	m	()V	<clinit>	<clinit>
c	dzd	net/minecraft/world/level/block/TrialSpawnerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	STATE
	f	Lees;	c	OMINOUS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmu;Ljb;Leeb;Lecz;)V	a	lambda$getTicker$1
	m	(Laub;Ldmu;Ljb;Leeb;Lecz;)V	a	lambda$getTicker$0
	m	()V	<clinit>	<clinit>
c	dze	net/minecraft/world/level/block/TripWireBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	POWERED
	f	Lees;	c	ATTACHED
	f	Lees;	d	DISARMED
	f	Lees;	e	NORTH
	f	Lees;	f	EAST
	f	Lees;	g	SOUTH
	f	Lees;	h	WEST
	f	Ljava/util/Map;	i	PROPERTY_BY_DIRECTION
	f	Lfjm;	D	SHAPE_ATTACHED
	f	Lfjm;	R	SHAPE_NOT_ATTACHED
	f	I	S	RECHECK_PERIOD
	f	Ldpz;	T	hook
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldpz;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Ldmu;Ljb;Leeb;)V	a	updateSource
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Ljb;)V	a	checkPressed
	m	(Ldmu;Ljb;Ljava/util/List;)V	a	checkPressed
	m	(Leeb;Ljh;)Z	a	shouldConnectTo
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldze;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dze$1	net/minecraft/world/level/block/TripWireBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dzf	net/minecraft/world/level/block/TripWireHookBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Lees;	c	POWERED
	f	Lees;	d	ATTACHED
	f	I	e	WIRE_DIST_MIN
	f	I	f	WIRE_DIST_MAX
	f	I	g	RECHECK_PERIOD
	f	Ljava/util/Map;	h	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Ldmu;Ljb;Leeb;ZZILeeb;)V	a	calculateState
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Ldmu;Ljb;ZZZZ)V	a	emitState
	m	(Ldpz;Ldmu;Ljb;Ljh;)V	a	notifyNeighbors
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dzg	net/minecraft/world/level/block/TurtleEggBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefb;	b	HATCH
	f	Lefb;	c	EGGS
	f	I	d	MAX_HATCH_LEVEL
	f	I	e	MIN_EGGS
	f	I	f	MAX_EGGS
	f	Lfjm;	g	SHAPE_SINGLE
	f	Lfjm;	h	SHAPE_MULTIPLE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lbzm;)V	a	stepOn
	m	(Ldmu;Leeb;Ljb;Lbzm;D)V	a	fallOn
	m	(Ldmu;Leeb;Ljb;Lbzm;I)V	a	destroyEgg
	m	(Ldmu;Ljb;Leeb;)V	a	decreaseEggs
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldly;Ljb;)Z	a	onSand
	m	(Ldly;Ljb;)Z	b	isSand
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldmu;)Z	a	shouldUpdateHatchLevel
	m	(Ldmu;Lcut;Ljb;Leeb;Leaz;Ldcv;)V	a	playerDestroy
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Laub;Lbzm;)Z	a	canDestroyEgg
	m	()V	<clinit>	<clinit>
c	dzh	net/minecraft/world/level/block/TwistingVinesBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lfjm;	g	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
	m	()Ldpz;	b	getBodyBlock
	m	(Leeb;)Z	h	canGrowInto
	m	()V	<clinit>	<clinit>
c	dzi	net/minecraft/world/level/block/TwistingVinesPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lfjm;	e	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldtt;	c	getHeadBlock
	m	()V	<clinit>	<clinit>
c	dzj	net/minecraft/world/level/block/UntintedParticleLeavesBlock
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Lmc;	g	leafParticle
	m	(FLmc;Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Lbck;)V	a	spawnFallingLeavesParticle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ldzj;)Lmc;	a	lambda$static$1
	m	(Ldzj;)Ljava/lang/Float;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzk	net/minecraft/world/level/block/VaultBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lefe;	b	STATE
	f	Leez;	c	FACING
	f	Lees;	d	OMINOUS
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Ldmu;Ljb;Leeb;Ledi;)V	a	lambda$getTicker$1
	m	(Laub;Ldmu;Ljb;Leeb;Ledi;)V	a	lambda$getTicker$0
	m	()V	<clinit>	<clinit>
c	dzl	net/minecraft/world/level/block/VegetationBlock
	m	(Leea$d;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Lfba;)Z	a	isPathfindable
c	dzm	net/minecraft/world/level/block/VineBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	UP
	f	Lees;	c	NORTH
	f	Lees;	d	EAST
	f	Lees;	e	SOUTH
	f	Lees;	f	WEST
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	Ljava/util/function/Function;	h	shapes
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ljava/util/function/Function;	b	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;)Z	o	hasFaces
	m	(Leeb;)I	q	countFaces
	m	(Ldly;Ljb;Ljh;)Z	b	canSupportAtFace
	m	(Ldly;Ljb;Ljh;)Z	a	isAcceptableNeighbour
	m	(Leeb;Ldly;Ljb;)Leeb;	e	getUpdatedState
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Leeb;Lbck;)Leeb;	a	copyRandomFaces
	m	(Leeb;)Z	r	hasHorizontalConnection
	m	(Ldly;Ljb;)Z	a	canSpread
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Ljh;)Lees;	a	getPropertyForFace
	m	(Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$1
	m	(Ljava/util/Map$Entry;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzm$1	net/minecraft/world/level/block/VineBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	dzn	net/minecraft/world/level/block/WallBannerBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/Map;	c	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzo	net/minecraft/world/level/block/WallBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	b	UP
	f	Leez;	c	EAST
	f	Leez;	d	NORTH
	f	Leez;	e	SOUTH
	f	Leez;	f	WEST
	f	Ljava/util/Map;	g	PROPERTY_BY_DIRECTION
	f	Lees;	h	WATERLOGGED
	f	Ljava/util/function/Function;	i	shapes
	f	Ljava/util/function/Function;	D	collisionShapes
	f	Lfjm;	R	TEST_SHAPE_POST
	f	Ljava/util/Map;	S	TEST_SHAPES_WALL
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(FF)Ljava/util/function/Function;	a	makeShapes
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;ZLjh;)Z	a	connectsTo
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Lefe;)Z	a	isConnected
	m	(Lfjm;Lfjm;)Z	a	isCovered
	m	(Ldmx;Leeb;Ljb;Leeb;)Leeb;	a	topUpdate
	m	(Ldmx;Ljb;Leeb;Ljb;Leeb;Ljh;)Leeb;	a	sideUpdate
	m	(Ldmx;Leeb;Ljb;Leeb;ZZZZ)Leeb;	a	updateShape
	m	(Leeb;Leeb;Lfjm;)Z	a	shouldRaisePost
	m	(Leeb;ZZZZLfjm;)Leeb;	a	updateSides
	m	(ZLfjm;Lfjm;)Lefo;	a	makeWallState
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Lfjm;Ljava/util/Map;Ljava/util/Map;Leeb;)Lfjm;	a	lambda$makeShapes$0
	m	()V	<clinit>	<clinit>
c	dzo$1	net/minecraft/world/level/block/WallBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	f	[I	c	$SwitchMap$net$minecraft$world$level$block$state$properties$WallSide
	m	()V	<clinit>	<clinit>
c	dzp	net/minecraft/world/level/block/WallHangingSignBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/Map;	c	SHAPES_PLANK
	f	Ljava/util/Map;	e	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Lcut;Lfio;Lecn;Ldcv;)Z	a	shouldTryToChainAnotherHangingSign
	m	(Lfio;Leeb;)Z	a	isHittingEditableSide
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldmx;Ljb;)Z	b	canPlace
	m	(Ldmx;Leeb;Ljb;Ljh;)Z	a	canAttachTo
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)F	h	getYRotationDegrees
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzq	net/minecraft/world/level/block/WallSignBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Ljava/util/Map;	c	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lefp;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)F	h	getYRotationDegrees
	m	(Leeb;)Lfis;	o	getSignHitboxCenterPosition
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzr	net/minecraft/world/level/block/WallSkullBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leez;	d	FACING
	f	Ljava/util/Map;	b	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldxm$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzs	net/minecraft/world/level/block/WallTorchBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Leez;	e	FACING
	f	Ljava/util/Map;	f	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lmi;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;)Lfjm;	o	getShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldmx;Ljb;Ljh;)Z	b	canSurvive
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ldzs;)Lmi;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzt	net/minecraft/world/level/block/WaterlilyBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfjm;	b	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	()V	<clinit>	<clinit>
c	dzu	net/minecraft/world/level/block/WaterloggedTransparentBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lees;	c	WATERLOGGED
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	()V	<clinit>	<clinit>
c	dzv	net/minecraft/world/level/block/WeatheringCopper
	f	Ljava/util/function/Supplier;	C_	NEXT_BY_BLOCK
	f	Ljava/util/function/Supplier;	D_	PREVIOUS_BY_BLOCK
	m	(Ldpz;)Ljava/util/Optional;	a	getPrevious
	m	(Ldpz;)Ldpz;	b	getFirst
	m	(Leeb;)Ljava/util/Optional;	b	getPrevious
	m	(Ldpz;)Ljava/util/Optional;	c	getNext
	m	(Leeb;)Leeb;	c	getFirst
	m	(Leeb;)Ljava/util/Optional;	k_	getNext
	m	()F	au_	getChanceModifier
	m	(Leeb;Ldpz;)Leeb;	a	lambda$getNext$3
	m	(Leeb;Ldpz;)Leeb;	b	lambda$getPrevious$2
	m	()Lcom/google/common/collect/BiMap;	a	lambda$static$1
	m	()Lcom/google/common/collect/BiMap;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzv$a	net/minecraft/world/level/block/WeatheringCopper$WeatherState
	f	Ldzv$a;	a	UNAFFECTED
	f	Ldzv$a;	b	EXPOSED
	f	Ldzv$a;	c	WEATHERED
	f	Ldzv$a;	d	OXIDIZED
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	[Ldzv$a;	g	$VALUES
	m	()[Ldzv$a;	values	values
	m	(Ljava/lang/String;)Ldzv$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Ldzv$a;	a	$values
	m	()V	<clinit>	<clinit>
c	dzw	net/minecraft/world/level/block/WeatheringCopperBulbBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldzv$a;	e	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzx	net/minecraft/world/level/block/WeatheringCopperDoorBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ldzv$a;	h	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzy	net/minecraft/world/level/block/WeatheringCopperFullBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldzv$a;	e	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	dzz	net/minecraft/world/level/block/WeatheringCopperGrateBlock
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	f	Ldzv$a;	f	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eaa	net/minecraft/world/level/block/WeatheringCopperSlabBlock
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Ldzv$a;	e	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eab	net/minecraft/world/level/block/WeatheringCopperStairBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ldzv$a;	h	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldzv$a;Leeb;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	q	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leab;)Leeb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eac	net/minecraft/world/level/block/WeatheringCopperTrapDoorBlock
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ldzv$a;	h	weatherState
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leeq;Ldzv$a;Leea$d;)V	<init>	<init>
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;)Z	f	isRandomlyTicking
	m	()Ldzv$a;	r	getAge
	m	()Ljava/lang/Enum;	c	getAge
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ead	net/minecraft/world/level/block/WebBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()V	<clinit>	<clinit>
c	eae	net/minecraft/world/level/block/WeepingVinesBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lfjm;	g	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Lbck;)I	a	getBlocksToGrowWhenBonemealed
	m	()Ldpz;	b	getBodyBlock
	m	(Leeb;)Z	h	canGrowInto
	m	()V	<clinit>	<clinit>
c	eaf	net/minecraft/world/level/block/WeepingVinesPlantBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lfjm;	e	SHAPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	()Ldtt;	c	getHeadBlock
	m	()V	<clinit>	<clinit>
c	eag	net/minecraft/world/level/block/WeightedPressurePlateBlock
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Lefb;	d	POWER
	f	I	e	maxWeight
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ILeeq;Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;)I	b	getSignalStrength
	m	(Leeb;)I	h	getSignalForState
	m	(Leeb;I)Leeb;	a	setSignalForState
	m	()I	b	getPressedTime
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leag;)Leeq;	a	lambda$static$1
	m	(Leag;)Ljava/lang/Integer;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eah	net/minecraft/world/level/block/WetSpongeBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()V	<clinit>	<clinit>
c	eai	net/minecraft/world/level/block/WitherRoseBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljl;FLeea$d;)V	<init>	<init>
	m	(Ldfx;Leea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;)Z	b	mayPlaceOn
	m	(Leeb;Ldmu;Ljb;Lbck;)V	a	animateTick
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()Lbyq;	b	getBeeInteractionEffect
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eaj	net/minecraft/world/level/block/WitherSkullBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leeg;	f	witherPatternFull
	f	Leeg;	g	witherPatternBase
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Ldmu;Ljb;)V	a	checkSpawn
	m	(Ldmu;Ljb;Lecp;)V	a	checkSpawn
	m	(Ldmu;Ljb;Ldcv;)Z	b	canSpawnMob
	m	()Leeg;	q	getOrCreateWitherFull
	m	()Leeg;	r	getOrCreateWitherBase
	m	(Leef;)Z	a	lambda$getOrCreateWitherBase$3
	m	(Leef;)Z	b	lambda$getOrCreateWitherBase$2
	m	(Leef;)Z	c	lambda$getOrCreateWitherFull$1
	m	(Leef;)Z	d	lambda$getOrCreateWitherFull$0
	m	()V	<clinit>	<clinit>
c	eak	net/minecraft/world/level/block/WitherWallSkullBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	()V	<clinit>	<clinit>
c	eal	net/minecraft/world/level/block/WoolCarpetBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldbt;	c	color
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ldbt;Leea$d;)V	<init>	<init>
	m	()Ldbt;	b	getColor
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eam	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity
	f	I	b	SLOT_INPUT
	f	I	c	SLOT_FUEL
	f	I	d	SLOT_RESULT
	f	I	e	DATA_LIT_TIME
	f	[I	q	SLOTS_FOR_UP
	f	[I	r	SLOTS_FOR_DOWN
	f	[I	s	SLOTS_FOR_SIDES
	f	I	f	DATA_LIT_DURATION
	f	I	g	DATA_COOKING_PROGRESS
	f	I	h	DATA_COOKING_TOTAL_TIME
	f	I	i	NUM_DATA_VALUES
	f	I	j	BURN_TIME_STANDARD
	f	I	k	BURN_COOL_SPEED
	f	Lcom/mojang/serialization/Codec;	t	RECIPES_USED_CODEC
	f	S	u	DEFAULT_COOKING_TIMER
	f	S	v	DEFAULT_COOKING_TOTAL_TIME
	f	S	w	DEFAULT_LIT_TIME_REMAINING
	f	S	x	DEFAULT_LIT_TOTAL_TIME
	f	Lju;	l	items
	f	I	y	litTimeRemaining
	f	I	z	litTotalTime
	f	I	A	cookingTimer
	f	I	B	cookingTotalTime
	f	Lcyy;	m	dataAccess
	f	Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;	C	recipesUsed
	f	Ldht$a;	D	quickCheck
	m	(Lebb;Ljb;Leeb;Ldhx;)V	<init>	<init>
	m	()Z	k	isLit
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Laub;Ljb;Leeb;Leam;)V	a	serverTick
	m	(Ljz;Ldhr;Ldif;Lju;I)Z	a	canBurn
	m	(Ljz;Ldhr;Ldif;Lju;I)Z	b	burn
	m	(Leby;Ldcv;)I	a	getBurnDuration
	m	(Laub;Leam;)I	a	getTotalCookTime
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
	m	()I	b	getContainerSize
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(ILdcv;)V	a	setItem
	m	(ILdcv;)Z	b	canPlaceItem
	m	(Ldhr;)V	a	setRecipeUsed
	m	()Ldhr;	d	getRecipeUsed
	m	(Lcut;Ljava/util/List;)V	a	awardUsedRecipes
	m	(Lauc;)V	a	awardUsedRecipesAndPopExperience
	m	(Laub;Lfis;)Ljava/util/List;	a	getRecipesToAwardAndPopExperience
	m	(Laub;Lfis;IF)V	a	createExperience
	m	(Lcuz;)V	fillStackedContents	fillStackedContents
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Ljava/util/List;Laub;Lfis;Lit/unimi/dsi/fastutil/objects/Reference2IntMap$Entry;Ldhr;)V	a	lambda$getRecipesToAwardAndPopExperience$1
	m	(Ldhr;)Ljava/lang/Integer;	b	lambda$getTotalCookTime$0
	m	()V	<clinit>	<clinit>
c	eam$1	net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity$1
	f	Leam;	a	this$0
	m	(Leam;)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	ean	net/minecraft/world/level/block/entity/BannerBlockEntity
	f	I	a	MAX_PATTERNS
	f	Ljava/lang/String;	b	TAG_PATTERNS
	f	Lxo;	c	name
	f	Ldbt;	d	baseColor
	f	Leap;	e	patterns
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;Ldbt;)V	<init>	<init>
	m	()Lxo;	aj	getName
	m	()Lxo;	al	getCustomName
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Leap;	b	getPatterns
	m	()Ldcv;	c	getItem
	m	()Ldbt;	f	getBaseColor
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Lzw;	ax_	getUpdatePacket
c	eao	net/minecraft/world/level/block/entity/BannerPattern
	f	Lame;	e	assetId
	f	Ljava/lang/String;	f	translationKey
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lzm;	b	DIRECT_STREAM_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Lame;Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	assetId
	m	()Ljava/lang/String;	b	translationKey
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eap	net/minecraft/world/level/block/entity/BannerPatternLayers
	f	Ljava/util/List;	d	layers
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Leap;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Leap;	a	removeLast
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	layers
	m	()V	<clinit>	<clinit>
c	eap$a	net/minecraft/world/level/block/entity/BannerPatternLayers$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	layers
	m	()V	<init>	<init>
	m	(Ljm;Lamd;Ldbt;)Leap$a;	a	addIfRegistered
	m	(Ljl;Ldbt;)Leap$a;	a	add
	m	(Leap$b;)Leap$a;	a	add
	m	(Leap;)Leap$a;	a	addAll
	m	()Leap;	a	build
c	eap$b	net/minecraft/world/level/block/entity/BannerPatternLayers$Layer
	f	Ljl;	c	pattern
	f	Ldbt;	d	color
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljl;Ldbt;)V	<init>	<init>
	m	()Lyc;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	pattern
	m	()Ldbt;	c	color
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eaq	net/minecraft/world/level/block/entity/BannerPatterns
	f	Lamd;	a	BASE
	f	Lamd;	b	SQUARE_BOTTOM_LEFT
	f	Lamd;	c	SQUARE_BOTTOM_RIGHT
	f	Lamd;	d	SQUARE_TOP_LEFT
	f	Lamd;	e	SQUARE_TOP_RIGHT
	f	Lamd;	f	STRIPE_BOTTOM
	f	Lamd;	g	STRIPE_TOP
	f	Lamd;	h	STRIPE_LEFT
	f	Lamd;	i	STRIPE_RIGHT
	f	Lamd;	j	STRIPE_CENTER
	f	Lamd;	k	STRIPE_MIDDLE
	f	Lamd;	l	STRIPE_DOWNRIGHT
	f	Lamd;	m	STRIPE_DOWNLEFT
	f	Lamd;	n	STRIPE_SMALL
	f	Lamd;	o	CROSS
	f	Lamd;	p	STRAIGHT_CROSS
	f	Lamd;	q	TRIANGLE_BOTTOM
	f	Lamd;	r	TRIANGLE_TOP
	f	Lamd;	s	TRIANGLES_BOTTOM
	f	Lamd;	t	TRIANGLES_TOP
	f	Lamd;	u	DIAGONAL_LEFT
	f	Lamd;	v	DIAGONAL_RIGHT
	f	Lamd;	w	DIAGONAL_LEFT_MIRROR
	f	Lamd;	x	DIAGONAL_RIGHT_MIRROR
	f	Lamd;	y	CIRCLE_MIDDLE
	f	Lamd;	z	RHOMBUS_MIDDLE
	f	Lamd;	A	HALF_VERTICAL
	f	Lamd;	B	HALF_HORIZONTAL
	f	Lamd;	C	HALF_VERTICAL_MIRROR
	f	Lamd;	D	HALF_HORIZONTAL_MIRROR
	f	Lamd;	E	BORDER
	f	Lamd;	F	CURLY_BORDER
	f	Lamd;	G	GRADIENT
	f	Lamd;	H	GRADIENT_UP
	f	Lamd;	I	BRICKS
	f	Lamd;	J	GLOBE
	f	Lamd;	K	CREEPER
	f	Lamd;	L	SKULL
	f	Lamd;	M	FLOWER
	f	Lamd;	N	MOJANG
	f	Lamd;	O	PIGLIN
	f	Lamd;	P	FLOW
	f	Lamd;	Q	GUSTER
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;Lamd;)V	a	register
	m	()V	<clinit>	<clinit>
c	ear	net/minecraft/world/level/block/entity/BarrelBlockEntity
	f	Lju;	d	items
	f	Lebn;	e	openersCounter
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()I	b	getContainerSize
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	()Lxo;	j	getDefaultName
	m	(ILcus;)Lcym;	a	createMenu
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
	m	()V	k	recheckOpen
	m	(Leeb;Z)V	a	updateBlockState
	m	(Leeb;Layy;)V	a	playSound
c	ear$1	net/minecraft/world/level/block/entity/BarrelBlockEntity$1
	f	Lear;	a	this$0
	m	(Lear;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;)V	a	onOpen
	m	(Ldmu;Ljb;Leeb;)V	b	onClose
	m	(Ldmu;Ljb;Leeb;II)V	a	openerCountChanged
	m	(Lcut;)Z	a	isOwnContainer
c	eas	net/minecraft/world/level/block/entity/BaseContainerBlockEntity
	f	Lbxl;	d	lockKey
	f	Lxo;	e	name
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lxo;	aj	getName
	m	()Lxo;	Q_	getDisplayName
	m	()Lxo;	al	getCustomName
	m	()Lxo;	j	getDefaultName
	m	(Lcut;)Z	d	canOpen
	m	(Lcut;Lbxl;Lxo;)Z	a	canUnlock
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(Lcut;)Z	a	stillValid
	m	()V	a	clearContent
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	(ILcus;)Lcym;	a	createMenu
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
c	eat	net/minecraft/world/level/block/entity/BeaconBeamOwner
	m	()Ljava/util/List;	a	getBeamSections
c	eat$a	net/minecraft/world/level/block/entity/BeaconBeamOwner$Section
	f	I	a	color
	f	I	b	height
	m	(I)V	<init>	<init>
	m	()V	a	increaseHeight
	m	()I	b	getColor
	m	()I	c	getHeight
c	eau	net/minecraft/world/level/block/entity/BeaconBlockEntity
	f	I	f	MAX_LEVELS
	f	Ljava/util/List;	a	BEACON_EFFECTS
	f	Ljava/util/Set;	g	VALID_EFFECTS
	f	I	b	DATA_LEVELS
	f	I	c	DATA_PRIMARY
	f	I	d	DATA_SECONDARY
	f	I	e	NUM_DATA_VALUES
	f	I	h	BLOCKS_CHECK_PER_TICK
	f	Lxo;	i	DEFAULT_NAME
	f	Ljava/lang/String;	j	TAG_PRIMARY
	f	Ljava/lang/String;	k	TAG_SECONDARY
	f	Ljava/util/List;	l	beamSections
	f	Ljava/util/List;	m	checkingBeamSections
	f	I	q	levels
	f	I	r	lastCheckY
	f	Ljl;	s	primaryPower
	f	Ljl;	t	secondaryPower
	f	Lxo;	u	name
	f	Lbxl;	v	lockKey
	f	Lcyy;	w	dataAccess
	m	(Ljl;)Ljl;	a	filterEffect
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Leau;)V	a	tick
	m	(Ldmu;III)I	a	updateBase
	m	()V	av_	setRemoved
	m	(Ldmu;Ljb;ILjl;Ljl;)V	a	applyEffects
	m	(Ldmu;Ljb;Layy;)V	a	playSound
	m	()Ljava/util/List;	a	getBeamSections
	m	()Lacw;	c	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Lfdc;Ljava/lang/String;Ljl;)V	a	storeEffect
	m	(Lfda;Ljava/lang/String;)Ljl;	b	loadEffect
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Lxo;)V	a	setCustomName
	m	()Lxo;	al	getCustomName
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	()Lxo;	Q_	getDisplayName
	m	()Lxo;	aj	getName
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	(Ldmu;)V	a	setLevel
	m	()Lzw;	ax_	getUpdatePacket
	m	(Lfdc;Ljava/lang/String;Lamd;)V	a	lambda$storeEffect$0
	m	()V	<clinit>	<clinit>
c	eau$1	net/minecraft/world/level/block/entity/BeaconBlockEntity$1
	f	Leau;	a	this$0
	m	(Leau;)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	eav	net/minecraft/world/level/block/entity/BedBlockEntity
	f	Ldbt;	a	color
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;Ldbt;)V	<init>	<init>
	m	()Lacw;	a	getUpdatePacket
	m	()Ldbt;	c	getColor
	m	()Lzw;	ax_	getUpdatePacket
c	eaw	net/minecraft/world/level/block/entity/BeehiveBlockEntity
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/lang/String;	d	TAG_FLOWER_POS
	f	Ljava/lang/String;	e	BEES
	f	Ljava/util/List;	f	IGNORED_BEE_TAGS
	f	I	a	MAX_OCCUPANTS
	f	I	g	MIN_TICKS_BEFORE_REENTERING_HIVE
	f	I	h	MIN_OCCUPATION_TICKS_NECTAR
	f	I	b	MIN_OCCUPATION_TICKS_NECTARLESS
	f	Ljava/util/List;	i	stored
	f	Ljb;	j	savedFlowerPos
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()V	e	setChanged
	m	()Z	a	isFireNearby
	m	()Z	c	isEmpty
	m	()Z	d	isFull
	m	(Lcut;Leeb;Leaw$b;)V	a	emptyAllLivingFromHive
	m	(Leeb;Leaw$b;)Ljava/util/List;	a	releaseAllOccupants
	m	()I	f	getOccupantCount
	m	(Leeb;)I	a	getHoneyLevel
	m	()Z	j	isSedated
	m	(Lcme;)V	a	addOccupant
	m	(Leaw$c;)V	a	storeBee
	m	(Ldmu;Ljb;Leeb;Leaw$c;Ljava/util/List;Leaw$b;Ljb;)Z	a	releaseOccupant
	m	()Z	k	hasSavedFlowerPos
	m	(Ldmu;Ljb;Leeb;Ljava/util/List;Ljb;)V	a	tickOccupants
	m	(Ldmu;Ljb;Leeb;Leaw;)V	a	serverTick
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Ljava/util/List;	u	getBees
	m	(Leea$a;)Z	a	lambda$releaseOccupant$1
	m	(Leeb;Ljava/util/List;Leaw$b;Leaw$a;)Z	a	lambda$releaseAllOccupants$0
	m	()V	<clinit>	<clinit>
c	eaw$a	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData
	f	Leaw$c;	a	occupant
	f	I	b	ticksInHive
	m	(Leaw$c;)V	<init>	<init>
	m	()Z	a	tick
	m	()Leaw$c;	b	toOccupant
	m	()Z	c	hasNectar
c	eaw$b	net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus
	f	Leaw$b;	a	HONEY_DELIVERED
	f	Leaw$b;	b	BEE_RELEASED
	f	Leaw$b;	c	EMERGENCY
	f	[Leaw$b;	d	$VALUES
	m	()[Leaw$b;	values	values
	m	(Ljava/lang/String;)Leaw$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leaw$b;	a	$values
	m	()V	<clinit>	<clinit>
c	eaw$c	net/minecraft/world/level/block/entity/BeehiveBlockEntity$Occupant
	f	Ldfd;	d	entityData
	f	I	e	ticksInHive
	f	I	f	minTicksInHive
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ldfd;II)V	<init>	<init>
	m	(Lbzm;)Leaw$c;	a	of
	m	(I)Leaw$c;	a	create
	m	(Ldmu;Ljb;)Lbzm;	a	createEntity
	m	(ILcme;)V	a	setBeeReleaseData
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldfd;	a	entityData
	m	()I	b	ticksInHive
	m	()I	c	minTicksInHive
	m	(Lbzm;)Lbzm;	b	lambda$createEntity$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eax	net/minecraft/world/level/block/entity/BellBlockEntity
	f	I	d	DURATION
	f	I	e	GLOW_DURATION
	f	I	f	MIN_TICKS_BETWEEN_SEARCHES
	f	I	g	MAX_RESONATION_TICKS
	f	I	h	TICKS_BEFORE_RESONATION
	f	I	i	SEARCH_RADIUS
	f	I	j	HEAR_BELL_RADIUS
	f	I	k	HIGHLIGHT_RAIDERS_RADIUS
	f	J	l	lastRingTimestamp
	f	I	a	ticks
	f	Z	b	shaking
	f	Ljh;	c	clickDirection
	f	Ljava/util/List;	m	nearbyEntities
	f	Z	q	resonating
	f	I	r	resonationTicks
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(II)Z	a_	triggerEvent
	m	(Ldmu;Ljb;Leeb;Leax;Leax$a;)V	a	tick
	m	(Ldmu;Ljb;Leeb;Leax;)V	a	clientTick
	m	(Ldmu;Ljb;Leeb;Leax;)V	b	serverTick
	m	(Ljh;)V	a	onHit
	m	()V	a	updateEntities
	m	(Ljb;Ljava/util/List;)Z	a	areRaidersNearby
	m	(Ldmu;Ljb;Ljava/util/List;)V	a	makeRaidersGlow
	m	(Ldmu;Ljb;Ljava/util/List;)V	b	showBellParticles
	m	(Ljb;Lcam;)Z	a	isRaiderWithinRange
	m	(Lcam;)V	a	glow
	m	(Ljb;ILorg/apache/commons/lang3/mutable/MutableInt;Ldmu;Lcam;)V	a	lambda$showBellParticles$3
	m	(Ljb;Lcam;)Z	b	lambda$showBellParticles$2
	m	(Ljb;Lcam;)Z	c	lambda$showBellParticles$1
	m	(Ljb;Lcam;)Z	d	lambda$makeRaidersGlow$0
c	eax$a	net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction
	m	(Ldmu;Ljb;Ljava/util/List;)V	run	run
c	eay	net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
	m	(Leby;Ldcv;)I	a	getBurnDuration
	m	(ILcus;)Lcym;	a	createMenu
c	eaz	net/minecraft/world/level/block/entity/BlockEntity
	f	Lcom/mojang/serialization/Codec;	d	TYPE_CODEC
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lebb;	f	type
	f	Ldmu;	n	level
	f	Ljb;	o	worldPosition
	f	Z	p	remove
	f	Leeb;	g	blockState
	f	Lkn;	h	components
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Leeb;)V	a	validateBlockState
	m	(Leeb;)Z	b	isValidBlockState
	m	(Ldlz;Lui;)Ljb;	a	getPosFromTag
	m	()Ldmu;	i	getLevel
	m	(Ldmu;)V	a	setLevel
	m	()Z	l	hasLevel
	m	(Lfda;)V	a	loadAdditional
	m	(Lfda;)V	b	loadWithComponents
	m	(Lfda;)V	c	loadCustomOnly
	m	(Lfdc;)V	a	saveAdditional
	m	(Ljn$a;)Lui;	b	saveWithFullMetadata
	m	(Lfdc;)V	c	saveWithFullMetadata
	m	(Lfdc;)V	d	saveWithId
	m	(Ljn$a;)Lui;	c	saveWithoutMetadata
	m	(Lfdc;)V	e	saveWithoutMetadata
	m	(Ljn$a;)Lui;	d	saveCustomOnly
	m	(Lfdc;)V	f	saveCustomOnly
	m	(Lfdc;)V	g	saveId
	m	(Lfdc;Lebb;)V	a	addEntityType
	m	(Lfdc;)V	h	saveMetadata
	m	(Ljb;Leeb;Lui;Ljn$a;)Leaz;	a	loadStatic
	m	()V	e	setChanged
	m	(Ldmu;Ljb;Leeb;)V	a	setChanged
	m	()Ljb;	aA_	getBlockPos
	m	()Leeb;	m	getBlockState
	m	()Lzw;	ax_	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Z	n	isRemoved
	m	()V	av_	setRemoved
	m	()V	o	clearRemoved
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(II)Z	a_	triggerEvent
	m	(Lq;)V	a	fillCrashReportCategory
	m	()Ljava/lang/String;	p	getNameForReporting
	m	()Lebb;	q	getType
	m	(Leeb;)V	c	setBlockState
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Ldcv;)V	a	applyComponentsFromItemStack
	m	(Lkn;Lko;)V	a	applyComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Lkn;	r	collectComponents
	m	()Lkn;	s	components
	m	(Lkn;)V	a	setComponents
	m	(Lfda;Ljava/lang/String;)Lxo;	a	parseCustomNameSafe
	m	()Lbci$f;	t	problemPath
	m	()Ljava/lang/String;	k	lambda$fillCrashReportCategory$0
	m	()V	<clinit>	<clinit>
c	eaz$1	net/minecraft/world/level/block/entity/BlockEntity$1
	f	Ljava/util/Set;	a	val$implicitComponents
	f	Lkn;	b	val$fullView
	m	(Leaz;Ljava/util/Set;Lkn;)V	<init>	<init>
	m	(Lkp;)Ljava/lang/Object;	a	get
	m	(Lkp;Ljava/lang/Object;)Ljava/lang/Object;	a	getOrDefault
c	eaz$a	net/minecraft/world/level/block/entity/BlockEntity$BlockEntityPathElement
	f	Leaz;	a	blockEntity
	m	(Leaz;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leaz;	a	blockEntity
c	eba	net/minecraft/world/level/block/entity/BlockEntityTicker
	m	(Ldmu;Ljb;Leeb;Leaz;)V	tick	tick
c	ebb	net/minecraft/world/level/block/entity/BlockEntityType
	f	Lorg/slf4j/Logger;	V	LOGGER
	f	Lebb;	a	FURNACE
	f	Lebb;	b	CHEST
	f	Lebb;	c	TRAPPED_CHEST
	f	Lebb;	d	ENDER_CHEST
	f	Lebb;	e	JUKEBOX
	f	Lebb;	f	DISPENSER
	f	Lebb;	g	DROPPER
	f	Lebb;	h	SIGN
	f	Lebb;	i	HANGING_SIGN
	f	Lebb;	j	MOB_SPAWNER
	f	Lebb;	k	CREAKING_HEART
	f	Lebb;	l	PISTON
	f	Lebb;	m	BREWING_STAND
	f	Lebb;	n	ENCHANTING_TABLE
	f	Lebb;	o	END_PORTAL
	f	Lebb;	p	BEACON
	f	Lebb;	q	SKULL
	f	Lebb;	r	DAYLIGHT_DETECTOR
	f	Lebb;	s	HOPPER
	f	Lebb;	t	COMPARATOR
	f	Lebb;	u	BANNER
	f	Lebb;	v	STRUCTURE_BLOCK
	f	Lebb;	w	END_GATEWAY
	f	Lebb;	x	COMMAND_BLOCK
	f	Lebb;	y	SHULKER_BOX
	f	Lebb;	z	BED
	f	Lebb;	A	CONDUIT
	f	Lebb;	B	BARREL
	f	Lebb;	C	SMOKER
	f	Lebb;	D	BLAST_FURNACE
	f	Lebb;	E	LECTERN
	f	Lebb;	F	BELL
	f	Lebb;	G	JIGSAW
	f	Lebb;	H	CAMPFIRE
	f	Lebb;	I	BEEHIVE
	f	Lebb;	J	SCULK_SENSOR
	f	Lebb;	K	CALIBRATED_SCULK_SENSOR
	f	Lebb;	L	SCULK_CATALYST
	f	Lebb;	M	SCULK_SHRIEKER
	f	Lebb;	N	CHISELED_BOOKSHELF
	f	Lebb;	O	BRUSHABLE_BLOCK
	f	Lebb;	P	DECORATED_POT
	f	Lebb;	Q	CRAFTER
	f	Lebb;	R	TRIAL_SPAWNER
	f	Lebb;	S	VAULT
	f	Lebb;	T	TEST_BLOCK
	f	Lebb;	U	TEST_INSTANCE_BLOCK
	f	Ljava/util/Set;	W	OP_ONLY_CUSTOM_DATA
	f	Lebb$a;	X	factory
	f	Ljava/util/Set;	Y	validBlocks
	f	Ljl$c;	Z	builtInRegistryHolder
	m	(Lebb;)Lame;	a	getKey
	m	(Ljava/lang/String;Lebb$a;[Ldpz;)Lebb;	a	register
	m	(Lebb$a;Ljava/util/Set;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	create
	m	(Leeb;)Z	a	isValid
	m	()Ljl$c;	a	builtInRegistryHolder
	m	(Ldly;Ljb;)Leaz;	a	getBlockEntity
	m	()Z	b	onlyOpCanSetNbt
	m	()V	<clinit>	<clinit>
c	ebb$a	net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
	m	(Ljb;Leeb;)Leaz;	create	create
c	ebc	net/minecraft/world/level/block/entity/BoundingBoxRenderable
	m	()Lebc$a;	b	renderMode
	m	()Lebc$b;	c	getRenderableBox
c	ebc$a	net/minecraft/world/level/block/entity/BoundingBoxRenderable$Mode
	f	Lebc$a;	a	NONE
	f	Lebc$a;	b	BOX
	f	Lebc$a;	c	BOX_AND_INVISIBLE_BLOCKS
	f	[Lebc$a;	d	$VALUES
	m	()[Lebc$a;	values	values
	m	(Ljava/lang/String;)Lebc$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lebc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ebc$b	net/minecraft/world/level/block/entity/BoundingBoxRenderable$RenderableBox
	f	Ljb;	a	localPos
	f	Lkg;	b	size
	m	(Ljb;Lkg;)V	<init>	<init>
	m	(IIIIII)Lebc$b;	a	fromCorners
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	localPos
	m	()Lkg;	b	size
c	ebd	net/minecraft/world/level/block/entity/BrewingStandBlockEntity
	f	I	g	INGREDIENT_SLOT
	f	I	h	FUEL_SLOT
	f	[I	i	SLOTS_FOR_UP
	f	[I	j	SLOTS_FOR_DOWN
	f	[I	k	SLOTS_FOR_SIDES
	f	I	b	FUEL_USES
	f	I	c	DATA_BREW_TIME
	f	I	d	DATA_FUEL_USES
	f	I	e	NUM_DATA_VALUES
	f	S	l	DEFAULT_BREW_TIME
	f	B	m	DEFAULT_FUEL
	f	Lju;	q	items
	f	I	r	brewTime
	f	[Z	s	lastPotionCount
	f	Ldcr;	t	ingredient
	f	I	u	fuel
	f	Lcyy;	f	dataAccess
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
	m	()I	b	getContainerSize
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(Ldmu;Ljb;Leeb;Lebd;)V	a	serverTick
	m	()[Z	k	getPotionBits
	m	(Ldeq;Lju;)Z	a	isBrewable
	m	(Ldmu;Ljb;Lju;)V	a	doBrew
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(ILdcv;)Z	b	canPlaceItem
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
	m	(ILcus;)Lcym;	a	createMenu
	m	()V	<clinit>	<clinit>
c	ebd$1	net/minecraft/world/level/block/entity/BrewingStandBlockEntity$1
	f	Lebd;	a	this$0
	m	(Lebd;)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	ebe	net/minecraft/world/level/block/entity/BrushableBlockEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	LOOT_TABLE_TAG
	f	Ljava/lang/String;	c	LOOT_TABLE_SEED_TAG
	f	Ljava/lang/String;	d	HIT_DIRECTION_TAG
	f	Ljava/lang/String;	e	ITEM_TAG
	f	I	f	BRUSH_COOLDOWN_TICKS
	f	I	g	BRUSH_RESET_TICKS
	f	I	h	REQUIRED_BRUSHES_TO_BREAK
	f	I	i	brushCount
	f	J	j	brushCountResetsAtTick
	f	J	k	coolDownEndsAtTick
	f	Ldcv;	l	item
	f	Ljh;	m	hitDirection
	f	Lamd;	q	lootTable
	f	J	r	lootTableSeed
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(JLaub;Lcam;Ljh;Ldcv;)Z	a	brush
	m	(Laub;Lcam;Ldcv;)V	a	unpackLootTable
	m	(Laub;Lcam;Ldcv;)V	b	brushingCompleted
	m	(Laub;Lcam;Ldcv;)V	c	dropContent
	m	(Laub;)V	a	checkReset
	m	(Lfda;)Z	d	tryLoadLootTable
	m	(Lfdc;)Z	g	trySaveLootTable
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Lacw;	a	getUpdatePacket
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Lamd;J)V	a	setLootTable
	m	()I	f	getCompletionState
	m	()Ljh;	c	getHitDirection
	m	()Ldcv;	d	getItem
	m	()Lzw;	ax_	getUpdatePacket
	m	()V	<clinit>	<clinit>
c	ebf	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lejk$d;	a	createVibrationUser
c	ebf$a	net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser
	f	Lebf;	a	this$0
	m	(Lebf;Ljb;)V	<init>	<init>
	m	()I	a	getListenerRadius
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Ldmu;Ljb;Leeb;)I	a	getBackSignal
c	ebg	net/minecraft/world/level/block/entity/CampfireBlockEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	BURN_COOL_SPEED
	f	I	c	NUM_SLOTS
	f	Lju;	d	items
	f	[I	e	cookingProgress
	f	[I	f	cookingTime
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Laub;Ljb;Leeb;Lebg;Ldht$a;)V	a	cookTick
	m	(Ldmu;Ljb;Leeb;Lebg;)V	a	cooldownTick
	m	(Ldmu;Ljb;Leeb;Lebg;)V	b	particleTick
	m	()Lju;	c	getItems
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lacw;	d	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Laub;Lcam;Ldcv;)Z	a	placeFood
	m	()V	f	markUpdated
	m	()V	a	clearContent
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Lzw;	ax_	getUpdatePacket
	m	()V	j	lambda$loadAdditional$4
	m	([I)V	a	lambda$loadAdditional$3
	m	()V	k	lambda$loadAdditional$2
	m	([I)V	b	lambda$loadAdditional$1
	m	(Ldif;Laub;Ldhr;)Ldcv;	a	lambda$cookTick$0
	m	()V	<clinit>	<clinit>
c	ebh	net/minecraft/world/level/block/entity/ChestBlockEntity
	f	I	d	EVENT_SET_OPEN_COUNT
	f	Lju;	e	items
	f	Lebn;	f	openersCounter
	f	Lebi;	g	chestLidController
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Lxo;	j	getDefaultName
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Ldmu;Ljb;Leeb;Lebh;)V	a	lidAnimateTick
	m	(Ldmu;Ljb;Leeb;Layy;)V	a	playSound
	m	(II)Z	a_	triggerEvent
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(F)F	a	getOpenNess
	m	(Ldly;Ljb;)I	a	getOpenCount
	m	(Lebh;Lebh;)V	a	swapContents
	m	(ILcus;)Lcym;	a	createMenu
	m	()V	k	recheckOpen
	m	(Ldmu;Ljb;Leeb;II)V	a	signalOpenCount
c	ebh$1	net/minecraft/world/level/block/entity/ChestBlockEntity$1
	f	Lebh;	a	this$0
	m	(Lebh;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;)V	a	onOpen
	m	(Ldmu;Ljb;Leeb;)V	b	onClose
	m	(Ldmu;Ljb;Leeb;II)V	a	openerCountChanged
	m	(Lcut;)Z	a	isOwnContainer
c	ebi	net/minecraft/world/level/block/entity/ChestLidController
	f	Z	a	shouldBeOpen
	f	F	b	openness
	f	F	c	oOpenness
	m	()V	<init>	<init>
	m	()V	a	tickLid
	m	(F)F	a	getOpenness
	m	(Z)V	a	shouldBeOpen
c	ebj	net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity
	f	I	b	MAX_BOOKS_IN_STORAGE
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	DEFAULT_LAST_INTERACTED_SLOT
	f	Lju;	e	items
	f	I	f	lastInteractedSlot
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(I)V	c	updateState
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()I	f	count
	m	()V	a	clearContent
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(Lbxc;ILdcv;)Z	a	canTakeItem
	m	()I	an_	getMaxStackSize
	m	(Lcut;)Z	a	stillValid
	m	(ILdcv;)Z	b	canPlaceItem
	m	()I	j	getLastInteractedSlot
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	(Ldcv;Lbxc;Ldcv;)Z	a	lambda$canTakeItem$0
	m	()V	<clinit>	<clinit>
c	ebk	net/minecraft/world/level/block/entity/CommandBlockEntity
	f	Z	a	DEFAULT_POWERED
	f	Z	b	DEFAULT_CONDITION_MET
	f	Z	c	DEFAULT_AUTOMATIC
	f	Z	d	powered
	f	Z	e	auto
	f	Z	f	conditionMet
	f	Ldlt;	g	commandBlock
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()Ldlt;	a	getCommandBlock
	m	(Z)V	a	setPowered
	m	()Z	c	isPowered
	m	()Z	d	isAutomatic
	m	(Z)V	b	setAutomatic
	m	()V	f	onModeSwitch
	m	()V	w	scheduleTick
	m	()Z	j	wasConditionMet
	m	()Z	k	markConditionMet
	m	()Lebk$a;	u	getMode
	m	()Z	v	isConditional
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
c	ebk$1	net/minecraft/world/level/block/entity/CommandBlockEntity$1
	f	Lebk;	b	this$0
	m	(Lebk;)V	<init>	<init>
	m	(Ljava/lang/String;)V	a	setCommand
	m	()Laub;	e	getLevel
	m	()V	f	onUpdated
	m	()Lfis;	g	getPosition
	m	()Lek;	i	createCommandSourceStack
	m	()Z	j	isValid
c	ebk$a	net/minecraft/world/level/block/entity/CommandBlockEntity$Mode
	f	Lebk$a;	a	SEQUENCE
	f	Lebk$a;	b	AUTO
	f	Lebk$a;	c	REDSTONE
	f	[Lebk$a;	d	$VALUES
	m	()[Lebk$a;	values	values
	m	(Ljava/lang/String;)Lebk$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lebk$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ebl	net/minecraft/world/level/block/entity/ComparatorBlockEntity
	f	I	a	DEFAULT_OUTPUT
	f	I	b	output
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()I	a	getOutputSignal
	m	(I)V	a	setOutputSignal
c	ebm	net/minecraft/world/level/block/entity/ConduitBlockEntity
	f	I	b	BLOCK_REFRESH_RATE
	f	I	c	EFFECT_DURATION
	f	F	d	ROTATION_SPEED
	f	I	e	MIN_ACTIVE_SIZE
	f	I	f	MIN_KILL_SIZE
	f	I	g	KILL_RANGE
	f	[Ldpz;	h	VALID_BLOCKS
	f	I	a	tickCount
	f	F	i	activeRotation
	f	Z	j	isActive
	f	Z	k	isHunting
	f	Ljava/util/List;	l	effectBlocks
	f	Lbzs;	m	destroyTarget
	f	J	q	nextAmbientSoundActivation
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Ldmu;Ljb;Leeb;Lebm;)V	a	clientTick
	m	(Ldmu;Ljb;Leeb;Lebm;)V	b	serverTick
	m	(Lebm;Ljava/util/List;)V	a	updateHunting
	m	(Ldmu;Ljb;Ljava/util/List;)Z	a	updateShape
	m	(Ldmu;Ljb;Ljava/util/List;)V	b	applyEffects
	m	(Laub;Ljb;Leeb;Lebm;Z)V	a	updateAndAttackTarget
	m	(Lbzs;Laub;Ljb;Z)Lbzs;	a	updateDestroyTarget
	m	(Laub;Ljb;)Lbzs;	a	selectNewTarget
	m	(Ljb;)Lfin;	a	getDestroyRangeAABB
	m	(Ldmu;Ljb;Ljava/util/List;Lbzm;I)V	a	animationTick
	m	()Z	c	isActive
	m	()Z	d	isHunting
	m	(Z)V	a	setHunting
	m	(F)F	a	getActiveRotation
	m	()Lzw;	ax_	getUpdatePacket
	m	(Lcam;)Z	a	lambda$selectNewTarget$0
	m	()V	<clinit>	<clinit>
c	ebn	net/minecraft/world/level/block/entity/ContainerOpenersCounter
	f	I	a	CHECK_TICK_DELAY
	f	I	b	openCount
	f	D	c	maxInteractionRange
	m	()V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;)V	a	onOpen
	m	(Ldmu;Ljb;Leeb;)V	b	onClose
	m	(Ldmu;Ljb;Leeb;II)V	a	openerCountChanged
	m	(Lcut;)Z	a	isOwnContainer
	m	(Lcut;Ldmu;Ljb;Leeb;)V	a	incrementOpeners
	m	(Lcut;Ldmu;Ljb;Leeb;)V	b	decrementOpeners
	m	(Ldmu;Ljb;)Ljava/util/List;	a	getPlayersWithContainerOpen
	m	(Ldmu;Ljb;Leeb;)V	c	recheckOpeners
	m	()I	a	getOpenerCount
	m	(Ldmu;Ljb;Leeb;)V	d	scheduleRecheck
c	ebo	net/minecraft/world/level/block/entity/CrafterBlockEntity
	f	I	d	CONTAINER_WIDTH
	f	I	e	CONTAINER_HEIGHT
	f	I	f	CONTAINER_SIZE
	f	I	g	SLOT_DISABLED
	f	I	h	SLOT_ENABLED
	f	I	i	DATA_TRIGGERED
	f	I	j	NUM_DATA
	f	I	q	DEFAULT_CRAFTING_TICKS_REMAINING
	f	I	r	DEFAULT_TRIGGERED
	f	Lju;	s	items
	f	I	t	craftingTicksRemaining
	f	Lcyy;	k	containerData
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
	m	(ILcus;)Lcym;	a	createMenu
	m	(IZ)V	a	setSlotState
	m	(I)Z	c	isSlotDisabled
	m	(ILdcv;)Z	b	canPlaceItem
	m	(ILdcv;I)Z	a	smallerStackExist
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(ILdcv;)V	a	setItem
	m	(Lcut;)Z	a	stillValid
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	()I	ay_	getWidth
	m	()I	g	getHeight
	m	(Lcuz;)V	fillStackedContents	fillStackedContents
	m	(Lfdc;)V	g	addDisabledSlots
	m	(Lfdc;)V	h	addTriggered
	m	(Z)V	a	setTriggered
	m	()Z	k	isTriggered
	m	(Ldmu;Ljb;Leeb;Lebo;)V	a	serverTick
	m	(I)V	d	setCraftingTicksRemaining
	m	()I	u	getRedstoneSignal
	m	(I)Z	e	slotCanBeDisabled
	m	()Ljava/util/List;	h	getItems
	m	([I)V	a	lambda$loadAdditional$0
c	ebo$1	net/minecraft/world/level/block/entity/CrafterBlockEntity$1
	f	[I	a	slotStates
	f	I	b	triggered
	m	(Lebo;)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	ebp	net/minecraft/world/level/block/entity/CreakingHeartBlockEntity
	f	I	b	PLAYER_DETECTION_RANGE
	f	I	a	CREAKING_ROAMING_RADIUS
	f	I	c	DISTANCE_CREAKING_TOO_FAR
	f	I	d	SPAWN_RANGE_XZ
	f	I	e	SPAWN_RANGE_Y
	f	I	f	ATTEMPTS_PER_SPAWN
	f	I	g	UPDATE_TICKS
	f	I	h	UPDATE_TICKS_VARIANCE
	f	I	i	HURT_CALL_TOTAL_TICKS
	f	I	j	NUMBER_OF_HURT_CALLS
	f	I	k	HURT_CALL_INTERVAL
	f	I	l	HURT_CALL_PARTICLE_TICKS
	f	I	m	MAX_DEPTH
	f	I	q	MAX_COUNT
	f	I	r	TICKS_GRACE_PERIOD
	f	Ljava/util/Optional;	s	NO_CREAKING
	f	Lcom/mojang/datafixers/util/Either;	t	creakingInfo
	f	J	u	ticksExisted
	f	I	v	ticker
	f	I	w	emitter
	f	Lfis;	x	emitterTarget
	f	I	y	outputSignal
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lebp;)V	a	serverTick
	m	(Ldmu;Leeb;Ljb;Lebp;)Leeb;	a	updateCreakingState
	m	()D	j	distanceToCreaking
	m	()V	k	clearCreakingInfo
	m	(Lcsz;)V	a	setCreakingInfo
	m	(Ljava/util/UUID;)V	a	setCreakingInfo
	m	()Ljava/util/Optional;	u	getCreakingProtector
	m	(Laub;Lebp;)Lcsz;	a	spawnProtector
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()V	c	creakingHurt
	m	()Ljava/util/Optional;	v	spreadResin
	m	(Laub;IZ)V	a	emitParticles
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Lbyb;)V	a	removeProtector
	m	(Lcsz;)Z	b	isProtector
	m	()I	d	getAnalogOutputSignal
	m	()I	f	computeAnalogOutputSignal
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lzw;	ax_	getUpdatePacket
	m	(Ljava/util/UUID;)Ljava/util/UUID;	b	lambda$saveAdditional$6
	m	(Lcsz;Lcsz;)Ljava/lang/Boolean;	a	lambda$isProtector$5
	m	(Lorg/apache/commons/lang3/mutable/Mutable;Ljb;)Ljb$b;	a	lambda$spreadResin$4
	m	(Ljb;Ljava/util/function/Consumer;)V	a	lambda$spreadResin$3
	m	(Ljb;)V	a	lambda$creakingHurt$2
	m	(Lcsz;)Ljava/lang/Double;	c	lambda$distanceToCreaking$1
	m	(Lebp;Lcsz;)V	a	lambda$serverTick$0
	m	()V	<clinit>	<clinit>
c	ebq	net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
c	ebr	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity
	f	Ljava/lang/String;	d	TAG_SHERDS
	f	Ljava/lang/String;	e	TAG_ITEM
	f	I	f	EVENT_POT_WOBBLES
	f	J	g	wobbleStartedAtTick
	f	Lebr$a;	h	lastWobbleStyle
	f	Lech;	k	decorations
	f	Ldcv;	l	item
	f	Lamd;	i	lootTable
	f	J	j	lootTableSeed
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()Lacw;	j	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Ljh;	k	getDirection
	m	()Lech;	u	getDecorations
	m	(Lech;)Ldcv;	a	createDecoratedPotItem
	m	()Lamd;	aw_	getLootTable
	m	(Lamd;)V	a	setLootTable
	m	()J	az_	getLootTableSeed
	m	(J)V	a	setLootTableSeed
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Ldcv;	f	getTheItem
	m	(I)Ldcv;	c	splitTheItem
	m	(Ldcv;)V	b	setTheItem
	m	()Leaz;	v	getContainerBlockEntity
	m	(Lebr$a;)V	a	wobble
	m	(II)Z	a_	triggerEvent
	m	()Lzw;	ax_	getUpdatePacket
c	ebr$a	net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$WobbleStyle
	f	Lebr$a;	a	POSITIVE
	f	Lebr$a;	b	NEGATIVE
	f	I	c	duration
	f	[Lebr$a;	d	$VALUES
	m	()[Lebr$a;	values	values
	m	(Ljava/lang/String;)Lebr$a;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()[Lebr$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ebs	net/minecraft/world/level/block/entity/DecoratedPotPattern
	f	Lame;	a	assetId
	m	(Lame;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	assetId
c	ebt	net/minecraft/world/level/block/entity/DecoratedPotPatterns
	f	Lamd;	a	BLANK
	f	Lamd;	b	ANGLER
	f	Lamd;	c	ARCHER
	f	Lamd;	d	ARMS_UP
	f	Lamd;	e	BLADE
	f	Lamd;	f	BREWER
	f	Lamd;	g	BURN
	f	Lamd;	h	DANGER
	f	Lamd;	i	EXPLORER
	f	Lamd;	j	FLOW
	f	Lamd;	k	FRIEND
	f	Lamd;	l	GUSTER
	f	Lamd;	m	HEART
	f	Lamd;	n	HEARTBREAK
	f	Lamd;	o	HOWL
	f	Lamd;	p	MINER
	f	Lamd;	q	MOURNER
	f	Lamd;	r	PLENTY
	f	Lamd;	s	PRIZE
	f	Lamd;	t	SCRAPE
	f	Lamd;	u	SHEAF
	f	Lamd;	v	SHELTER
	f	Lamd;	w	SKULL
	f	Lamd;	x	SNORT
	f	Ljava/util/Map;	y	ITEM_TO_POT_TEXTURE
	m	()V	<init>	<init>
	m	(Ldcr;)Lamd;	a	getPatternFromItem
	m	(Ljava/lang/String;)Lamd;	a	create
	m	(Ljy;)Lebs;	a	bootstrap
	m	(Ljy;Lamd;Ljava/lang/String;)Lebs;	a	register
	m	()V	<clinit>	<clinit>
c	ebu	net/minecraft/world/level/block/entity/DispenserBlockEntity
	f	I	d	CONTAINER_SIZE
	f	Lju;	e	items
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	(Lbck;)I	a	getRandomSlot
	m	(Ldcv;)Ldcv;	b	insertItem
	m	()Lxo;	j	getDefaultName
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(ILcus;)Lcym;	a	createMenu
c	ebv	net/minecraft/world/level/block/entity/DropperBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
c	ebw	net/minecraft/world/level/block/entity/EnchantingTableBlockEntity
	f	I	a	time
	f	F	b	flip
	f	F	c	oFlip
	f	F	d	flipT
	f	F	e	flipA
	f	F	f	open
	f	F	g	oOpen
	f	F	h	rot
	f	F	i	oRot
	f	F	j	tRot
	f	Lbck;	k	RANDOM
	f	Lxo;	l	name
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	(Ldmu;Ljb;Leeb;Lebw;)V	a	bookAnimationTick
	m	()Lxo;	aj	getName
	m	(Lxo;)V	a	setCustomName
	m	()Lxo;	al	getCustomName
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()V	<clinit>	<clinit>
c	ebx	net/minecraft/world/level/block/entity/EnderChestBlockEntity
	f	Lebi;	a	chestLidController
	f	Lebn;	b	openersCounter
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lebx;)V	a	lidAnimateTick
	m	(II)Z	a_	triggerEvent
	m	(Lcut;)V	a	startOpen
	m	(Lcut;)V	b	stopOpen
	m	(Lcut;)Z	c	stillValid
	m	()V	a	recheckOpen
	m	(F)F	a	getOpenNess
c	ebx$1	net/minecraft/world/level/block/entity/EnderChestBlockEntity$1
	f	Lebx;	a	this$0
	m	(Lebx;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;)V	a	onOpen
	m	(Ldmu;Ljb;Leeb;)V	b	onClose
	m	(Ldmu;Ljb;Leeb;II)V	a	openerCountChanged
	m	(Lcut;)Z	a	isOwnContainer
c	eby	net/minecraft/world/level/block/entity/FuelValues
	f	Lit/unimi/dsi/fastutil/objects/Object2IntSortedMap;	a	values
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntSortedMap;)V	<init>	<init>
	m	(Ldcv;)Z	a	isFuel
	m	()Ljava/util/SequencedSet;	a	fuelItems
	m	(Ldcv;)I	b	burnDuration
	m	(Ljn$a;Lcyd;)Leby;	a	vanillaBurnTimes
	m	(Ljn$a;Lcyd;I)Leby;	a	vanillaBurnTimes
c	eby$a	net/minecraft/world/level/block/entity/FuelValues$Builder
	f	Ljn;	a	items
	f	Lcyd;	b	enabledFeatures
	f	Lit/unimi/dsi/fastutil/objects/Object2IntSortedMap;	c	values
	m	(Ljn$a;Lcyd;)V	<init>	<init>
	m	()Leby;	a	build
	m	(Lbae;)Leby$a;	a	remove
	m	(Lbae;I)Leby$a;	a	add
	m	(Ldmt;I)Leby$a;	a	add
	m	(ILdcr;)V	a	putInternal
	m	(ILjp$c;)V	a	lambda$add$1
	m	(Lbae;Ldcr;)Z	a	lambda$remove$0
c	ebz	net/minecraft/world/level/block/entity/FurnaceBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
	m	(ILcus;)Lcym;	a	createMenu
c	eca	net/minecraft/world/level/block/entity/HangingSignBlockEntity
	f	I	a	MAX_TEXT_LINE_WIDTH
	f	I	b	TEXT_LINE_HEIGHT
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()I	a	getTextLineHeight
	m	()I	c	getMaxTextLineWidth
	m	()Layy;	d	getSignInteractionFailedSoundEvent
c	ecb	net/minecraft/world/level/block/entity/Hopper
	f	Lfin;	F_	SUCK_AABB
	m	()Lfin;	al_	getSuckAabb
	m	()D	A	getLevelX
	m	()D	B	getLevelY
	m	()D	C	getLevelZ
	m	()Z	D	isGridAligned
	m	()V	<clinit>	<clinit>
c	ecc	net/minecraft/world/level/block/entity/HopperBlockEntity
	f	I	d	MOVE_ITEM_SPEED
	f	I	e	HOPPER_CONTAINER_SIZE
	f	[[I	f	CACHED_SLOTS
	f	I	g	NO_COOLDOWN_TIME
	f	Lju;	h	items
	f	I	i	cooldownTime
	f	J	j	tickedGameTime
	f	Ljh;	k	facing
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()I	b	getContainerSize
	m	(II)Ldcv;	a	removeItem
	m	(ILdcv;)V	a	setItem
	m	(Leeb;)V	c	setBlockState
	m	()Lxo;	j	getDefaultName
	m	(Ldmu;Ljb;Leeb;Lecc;)V	a	pushItemsTick
	m	(Ldmu;Ljb;Leeb;Lecc;Ljava/util/function/BooleanSupplier;)Z	a	tryMoveItems
	m	()Z	k	inventoryFull
	m	(Ldmu;Ljb;Lecc;)Z	a	ejectItems
	m	(Lbxc;Ljh;)[I	a	getSlots
	m	(I)[I	c	createFlatSlots
	m	(Lbxc;Ljh;)Z	b	isFullContainer
	m	(Ldmu;Lecb;)Z	a	suckInItems
	m	(Lecb;Lbxc;ILjh;)Z	a	tryTakeInItemFromSlot
	m	(Lbxc;Lcqz;)Z	a	addItem
	m	(Lbxc;Lbxc;Ldcv;Ljh;)Ldcv;	a	addItem
	m	(Lbxc;Ldcv;ILjh;)Z	a	canPlaceItemInContainer
	m	(Lbxc;Lbxc;Ldcv;ILjh;)Z	a	canTakeItemFromContainer
	m	(Lbxc;Lbxc;Ldcv;ILjh;)Ldcv;	b	tryMoveInItem
	m	(Ldmu;Ljb;Lecc;)Lbxc;	b	getAttachedContainer
	m	(Ldmu;Lecb;Ljb;Leeb;)Lbxc;	a	getSourceContainer
	m	(Ldmu;Lecb;)Ljava/util/List;	b	getItemsAtAndAbove
	m	(Ldmu;Ljb;)Lbxc;	a	getContainerAt
	m	(Ldmu;Ljb;Leeb;DDD)Lbxc;	a	getContainerAt
	m	(Ldmu;Ljb;Leeb;)Lbxc;	b	getBlockContainer
	m	(Ldmu;DDD)Lbxc;	a	getEntityContainer
	m	(Ldcv;Ldcv;)Z	a	canMergeItems
	m	()D	A	getLevelX
	m	()D	B	getLevelY
	m	()D	C	getLevelZ
	m	()Z	D	isGridAligned
	m	(I)V	d	setCooldown
	m	()Z	u	isOnCooldown
	m	()Z	v	isOnCustomCooldown
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(Ldmu;Ljb;Leeb;Lbzm;Lecc;)V	a	entityInside
	m	(ILcus;)Lcym;	a	createMenu
	m	(Lecc;Lcqz;)Z	a	lambda$entityInside$1
	m	(Ldmu;Lecc;)Z	a	lambda$pushItemsTick$0
	m	()V	<clinit>	<clinit>
c	ecd	net/minecraft/world/level/block/entity/JigsawBlockEntity
	f	Lcom/mojang/serialization/Codec;	a	POOL_CODEC
	f	Lame;	b	EMPTY_ID
	f	I	k	DEFAULT_PLACEMENT_PRIORITY
	f	I	l	DEFAULT_SELECTION_PRIORITY
	f	Ljava/lang/String;	c	TARGET
	f	Ljava/lang/String;	d	POOL
	f	Ljava/lang/String;	e	JOINT
	f	Ljava/lang/String;	f	PLACEMENT_PRIORITY
	f	Ljava/lang/String;	g	SELECTION_PRIORITY
	f	Ljava/lang/String;	h	NAME
	f	Ljava/lang/String;	i	FINAL_STATE
	f	Ljava/lang/String;	j	DEFAULT_FINAL_STATE
	f	Lame;	m	name
	f	Lame;	q	target
	f	Lamd;	r	pool
	f	Lecd$a;	s	joint
	f	Ljava/lang/String;	t	finalState
	f	I	u	placementPriority
	f	I	v	selectionPriority
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lame;	a	getName
	m	()Lame;	c	getTarget
	m	()Lamd;	d	getPool
	m	()Ljava/lang/String;	f	getFinalState
	m	()Lecd$a;	j	getJoint
	m	()I	k	getPlacementPriority
	m	()I	u	getSelectionPriority
	m	(Lame;)V	a	setName
	m	(Lame;)V	b	setTarget
	m	(Lamd;)V	a	setPool
	m	(Ljava/lang/String;)V	a	setFinalState
	m	(Lecd$a;)V	a	setJoint
	m	(I)V	a	setPlacementPriority
	m	(I)V	b	setSelectionPriority
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()Lacw;	v	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Laub;IZ)V	a	generate
	m	()Lzw;	ax_	getUpdatePacket
	m	()Lecd$a;	w	lambda$loadAdditional$0
	m	()V	<clinit>	<clinit>
c	ecd$a	net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType
	f	Lecd$a;	a	ROLLABLE
	f	Lecd$a;	b	ALIGNED
	f	Lbda$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lecd$a;	e	$VALUES
	m	()[Lecd$a;	values	values
	m	(Ljava/lang/String;)Lecd$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lxo;	a	getTranslatedName
	m	()[Lecd$a;	b	$values
	m	()V	<clinit>	<clinit>
c	ece	net/minecraft/world/level/block/entity/JukeboxBlockEntity
	f	Ljava/lang/String;	b	SONG_ITEM_TAG_ID
	f	Ljava/lang/String;	c	TICKS_SINCE_SONG_STARTED_TAG_ID
	f	Ldcv;	d	item
	f	Lddc;	e	jukeboxSongPlayer
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lddc;	j	getSongPlayer
	m	()V	k	onSongChanged
	m	(Z)V	a	notifyItemChangedInJukebox
	m	()V	u	popOutTheItem
	m	(Ldmu;Ljb;Leeb;Lece;)V	a	tick
	m	()I	w	getComparatorOutput
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Ldcv;	f	getTheItem
	m	(I)Ldcv;	c	splitTheItem
	m	(Ldcv;)V	b	setTheItem
	m	()I	an_	getMaxStackSize
	m	()Leaz;	v	getContainerBlockEntity
	m	(ILdcv;)Z	b	canPlaceItem
	m	(Lbxc;ILdcv;)Z	a	canTakeItem
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Ldcv;)V	c	setSongItemWithoutPlaying
	m	()V	x	tryForcePlaySong
	m	(Ljl;)V	a	lambda$tryForcePlaySong$3
	m	(Ljl;)V	b	lambda$setSongItemWithoutPlaying$2
	m	(Lfda;Ljava/lang/Long;)V	a	lambda$loadAdditional$1
	m	(Ljava/lang/Long;Ljl;)V	a	lambda$loadAdditional$0
c	ecf	net/minecraft/world/level/block/entity/LecternBlockEntity
	f	I	a	DATA_PAGE
	f	I	b	NUM_DATA
	f	I	c	SLOT_BOOK
	f	I	d	NUM_SLOTS
	f	Lbxc;	e	bookAccess
	f	Lcyy;	f	dataAccess
	f	Ldcv;	g	book
	f	I	h	page
	f	I	i	pageCount
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Ldcv;	c	getBook
	m	()Z	f	hasBook
	m	(Ldcv;)V	b	setBook
	m	()V	u	onBookItemRemove
	m	(Ldcv;Lcut;)V	a	setBook
	m	(I)V	a	setPage
	m	()I	j	getPage
	m	()I	k	getRedstoneSignal
	m	(Ldcv;Lcut;)Ldcv;	b	resolveBook
	m	(Lcut;Laub;)Lek;	a	createCommandSourceStack
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()V	a	clearContent
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	()Lxo;	Q_	getDisplayName
	m	(Ldcv;)I	c	getPageCount
	m	(Ldcv;)Ldcv;	d	lambda$loadAdditional$0
c	ecf$1	net/minecraft/world/level/block/entity/LecternBlockEntity$1
	f	Lecf;	b	this$0
	m	(Lecf;)V	<init>	<init>
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	()I	an_	getMaxStackSize
	m	()V	e	setChanged
	m	(Lcut;)Z	a	stillValid
	m	(ILdcv;)Z	b	canPlaceItem
	m	()V	a	clearContent
c	ecf$2	net/minecraft/world/level/block/entity/LecternBlockEntity$2
	f	Lecf;	a	this$0
	m	(Lecf;)V	<init>	<init>
	m	(I)I	a	get
	m	(II)V	a	set
	m	()I	a	getCount
c	ecg	net/minecraft/world/level/block/entity/LidBlockEntity
	m	(F)F	a	getOpenNess
c	ech	net/minecraft/world/level/block/entity/PotDecorations
	f	Ljava/util/Optional;	d	back
	f	Ljava/util/Optional;	e	left
	f	Ljava/util/Optional;	f	right
	f	Ljava/util/Optional;	g	front
	f	Lech;	a	EMPTY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldcr;Ldcr;Ldcr;Ldcr;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/util/List;I)Ljava/util/Optional;	a	getItem
	m	()Ljava/util/List;	a	ordered
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	(Ljava/util/function/Consumer;Ljava/util/Optional;)V	a	addSideDetailsToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	b	back
	m	()Ljava/util/Optional;	c	left
	m	()Ljava/util/Optional;	d	right
	m	()Ljava/util/Optional;	e	front
	m	(Ljava/util/Optional;)Ldcr;	a	lambda$ordered$0
	m	()V	<clinit>	<clinit>
c	eci	net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity
	f	Lamd;	l	lootTable
	f	J	m	lootTableSeed
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	()Lamd;	aw_	getLootTable
	m	(Lamd;)V	a	setLootTable
	m	()J	az_	getLootTableSeed
	m	(J)V	a	setLootTableSeed
	m	()Z	c	isEmpty
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(ILdcv;)V	a	setItem
	m	(Lcut;)Z	d	canOpen
	m	(ILcus;Lcut;)Lcym;	createMenu	createMenu
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
c	ecj	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity
	f	Lecj$a;	a	catalystListener
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lecj;)V	a	serverTick
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lecj$a;	a	getListener
	m	()Lejd;	c	getListener
c	ecj$a	net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener
	f	I	a	PULSE_TICKS
	f	Ldxd;	b	sculkSpreader
	f	Leeb;	c	blockState
	f	Lejf;	d	positionSource
	m	(Leeb;Lejf;)V	<init>	<init>
	m	()Lejf;	a	getListenerSource
	m	()I	b	getListenerRadius
	m	()Lejd$a;	c	getDeliveryMode
	m	(Laub;Ljl;Lejb$a;Lfis;)Z	a	handleGameEvent
	m	()Ldxd;	d	getSculkSpreader
	m	(Laub;Ljb;Leeb;Lbck;)V	a	bloom
	m	(Ldmu;Lcam;)V	a	tryAwardItSpreadsAdvancement
	m	(Laub;Lfis;)V	a	lambda$handleGameEvent$0
c	eck	net/minecraft/world/level/block/entity/SculkSensorBlockEntity
	f	I	a	DEFAULT_LAST_VIBRATION_FREQUENCY
	f	Lejk$a;	b	vibrationData
	f	Lejk$b;	c	vibrationListener
	f	Lejk$d;	d	vibrationUser
	f	I	e	lastVibrationFrequency
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lejk$d;	a	createVibrationUser
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lejk$a;	gI	getVibrationData
	m	()Lejk$d;	gJ	getVibrationUser
	m	()I	d	getLastVibrationFrequency
	m	(I)V	a	setLastVibrationFrequency
	m	()Lejk$b;	f	getListener
	m	()Lejd;	c	getListener
c	eck$a	net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser
	f	I	b	LISTENER_RANGE
	f	Ljb;	c	blockPos
	f	Lejf;	a	positionSource
	f	Leck;	d	this$0
	m	(Leck;Ljb;)V	<init>	<init>
	m	()I	a	getListenerRadius
	m	()Lejf;	b	getPositionSource
	m	()Z	d	canTriggerAvoidVibration
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Laub;Ljb;Ljl;Lbzm;Lbzm;F)V	a	onReceiveVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
c	ecl	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity
	f	I	a	WARNING_SOUND_RADIUS
	f	I	b	WARDEN_SPAWN_ATTEMPTS
	f	I	c	WARDEN_SPAWN_RANGE_XZ
	f	I	d	WARDEN_SPAWN_RANGE_Y
	f	I	e	DARKNESS_RADIUS
	f	I	f	SHRIEKING_TICKS
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	j	SOUND_BY_LEVEL
	f	I	k	DEFAULT_WARNING_LEVEL
	f	I	l	warningLevel
	f	Lejk$d;	m	vibrationUser
	f	Lejk$a;	q	vibrationData
	f	Lejk$b;	r	vibrationListener
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lejk$a;	gI	getVibrationData
	m	()Lejk$d;	gJ	getVibrationUser
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Lbzm;)Lauc;	a	tryGetPlayer
	m	(Laub;Lauc;)V	a	tryShriek
	m	(Laub;Lauc;)Z	b	tryToWarn
	m	(Laub;Lbzm;)V	a	shriek
	m	(Laub;)Z	b	canRespond
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Laub;)V	a	tryRespond
	m	(Ldmu;)V	b	playWardenReplySound
	m	(Laub;)Z	c	trySummonWarden
	m	()Lejk$b;	a	getListener
	m	()Lejd;	c	getListener
	m	(I)V	a	lambda$tryToWarn$1
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ecl$a	net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser
	f	I	b	LISTENER_RADIUS
	f	Lejf;	c	positionSource
	f	Lecl;	a	this$0
	m	(Lecl;)V	<init>	<init>
	m	()I	a	getListenerRadius
	m	()Lejf;	b	getPositionSource
	m	()Lbae;	c	getListenableEvents
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Laub;Ljb;Ljl;Lbzm;Lbzm;F)V	a	onReceiveVibration
	m	()V	e	onDataChanged
	m	()Z	f	requiresAdjacentChunksToBeTicking
c	ecm	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity
	f	I	d	COLUMNS
	f	I	e	ROWS
	f	I	f	CONTAINER_SIZE
	f	I	g	EVENT_SET_OPEN_COUNT
	f	I	h	OPENING_TICK_LENGTH
	f	F	i	MAX_LID_HEIGHT
	f	F	j	MAX_LID_ROTATION
	f	[I	k	SLOTS
	f	Lju;	q	itemStacks
	f	I	r	openCount
	f	Lecm$a;	s	animationStatus
	f	F	t	progress
	f	F	u	progressOld
	f	Ldbt;	v	color
	m	(Ldbt;Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lecm;)V	a	tick
	m	(Ldmu;Ljb;Leeb;)V	b	updateAnimation
	m	()Lecm$a;	k	getAnimationStatus
	m	(Leeb;)Lfin;	a	getBoundingBox
	m	(Ldmu;Ljb;Leeb;)V	c	moveCollidedEntities
	m	()I	b	getContainerSize
	m	(II)Z	a_	triggerEvent
	m	(Ldmu;Ljb;Leeb;)V	d	doNeighborUpdates
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	(Lcut;)V	e_	startOpen
	m	(Lcut;)V	c	stopOpen
	m	()Lxo;	j	getDefaultName
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	d	loadFromTag
	m	()Lju;	f	getItems
	m	(Lju;)V	a	setItems
	m	(Ljh;)[I	a	getSlotsForFace
	m	(ILdcv;Ljh;)Z	a	canPlaceItemThroughFace
	m	(ILdcv;Ljh;)Z	b	canTakeItemThroughFace
	m	(F)F	a	getProgress
	m	()Ldbt;	u	getColor
	m	(ILcus;)Lcym;	a	createMenu
	m	()Z	v	isClosed
	m	()V	<clinit>	<clinit>
c	ecm$a	net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus
	f	Lecm$a;	a	CLOSED
	f	Lecm$a;	b	OPENING
	f	Lecm$a;	c	OPENED
	f	Lecm$a;	d	CLOSING
	f	[Lecm$a;	e	$VALUES
	m	()[Lecm$a;	values	values
	m	(Ljava/lang/String;)Lecm$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lecm$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ecn	net/minecraft/world/level/block/entity/SignBlockEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	MAX_TEXT_LINE_WIDTH
	f	I	c	TEXT_LINE_HEIGHT
	f	Z	d	DEFAULT_IS_WAXED
	f	Ljava/util/UUID;	e	playerWhoMayEdit
	f	Leco;	f	frontText
	f	Leco;	g	backText
	f	Z	h	isWaxed
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	()Leco;	f	createDefaultSignText
	m	(Lcut;)Z	a	isFacingFrontText
	m	(Z)Leco;	a	getText
	m	()Leco;	j	getFrontText
	m	()Leco;	k	getBackText
	m	()I	a	getTextLineHeight
	m	()I	c	getMaxTextLineWidth
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	(Leco;)Leco;	a	loadLines
	m	(Lxo;)Lxo;	a	loadLine
	m	(Lcut;ZLjava/util/List;)V	a	updateSignText
	m	(Ljava/util/function/UnaryOperator;Z)Z	a	updateText
	m	(Lcut;Ljava/util/List;Leco;)Leco;	a	setMessages
	m	(Leco;Z)Z	a	setText
	m	(Leco;)Z	b	setBackText
	m	(Leco;)Z	c	setFrontText
	m	(ZLcut;)Z	a	canExecuteClickCommands
	m	(Laub;Lcut;Ljb;Z)Z	a	executeClickCommandsIfPresent
	m	(Lcut;Laub;Ljb;)Lek;	a	createCommandSourceStack
	m	()Lacw;	u	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Ljava/util/UUID;)V	a	setAllowedPlayerEditor
	m	()Ljava/util/UUID;	v	getPlayerWhoMayEdit
	m	()V	x	markUpdated
	m	()Z	w	isWaxed
	m	(Z)Z	b	setWaxed
	m	(Ljava/util/UUID;)Z	b	playerIsTooFarAwayToEdit
	m	(Ldmu;Ljb;Leeb;Lecn;)V	a	tick
	m	(Lecn;Ldmu;Ljava/util/UUID;)V	a	clearInvalidPlayerWhoMayEdit
	m	()Layy;	d	getSignInteractionFailedSoundEvent
	m	()Lzw;	ax_	getUpdatePacket
	m	(Lcut;Ljava/util/List;Leco;)Leco;	b	lambda$updateSignText$0
	m	()V	<clinit>	<clinit>
c	eco	net/minecraft/world/level/block/entity/SignText
	f	Lcom/mojang/serialization/Codec;	c	LINES_CODEC
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	I	b	LINES
	f	[Lxo;	d	messages
	f	[Lxo;	e	filteredMessages
	f	Ldbt;	f	color
	f	Z	g	hasGlowingText
	f	[Lbbm;	h	renderMessages
	f	Z	i	renderMessagedFiltered
	m	()V	<init>	<init>
	m	([Lxo;[Lxo;Ldbt;Z)V	<init>	<init>
	m	()[Lxo;	c	emptyMessages
	m	([Lxo;Ljava/util/Optional;Ldbt;Z)Leco;	a	load
	m	()Z	a	hasGlowingText
	m	(Z)Leco;	a	setHasGlowingText
	m	()Ldbt;	b	getColor
	m	(Ldbt;)Leco;	a	setColor
	m	(IZ)Lxo;	a	getMessage
	m	(ILxo;)Leco;	a	setMessage
	m	(ILxo;Lxo;)Leco;	a	setMessage
	m	(Lcut;)Z	a	hasMessage
	m	(Z)[Lxo;	b	getMessages
	m	(ZLjava/util/function/Function;)[Lbbm;	a	getRenderMessages
	m	()Ljava/util/Optional;	d	filteredMessages
	m	(Lcut;)Z	b	hasAnyClickCommands
	m	(Lxo;)Z	a	lambda$hasMessage$7
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Leco;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Leco;)Ldbt;	b	lambda$static$4
	m	(Leco;)[Lxo;	c	lambda$static$3
	m	([Lxo;)Ljava/util/List;	a	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/util/List;)[Lxo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ecp	net/minecraft/world/level/block/entity/SkullBlockEntity
	f	Ljava/lang/String;	b	TAG_PROFILE
	f	Ljava/lang/String;	c	TAG_NOTE_BLOCK_SOUND
	f	Ljava/lang/String;	d	TAG_CUSTOM_NAME
	f	Ljava/util/concurrent/Executor;	e	mainThreadExecutor
	f	Lcom/google/common/cache/LoadingCache;	f	profileCacheByName
	f	Lcom/google/common/cache/LoadingCache;	g	profileCacheById
	f	Ljava/util/concurrent/Executor;	a	CHECKED_MAIN_THREAD_EXECUTOR
	f	Ldfv;	h	owner
	f	Lame;	i	noteBlockSound
	f	I	j	animationTickCount
	f	Z	k	isAnimating
	f	Lxo;	l	customName
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lamz;Ljava/util/concurrent/Executor;)V	a	setup
	m	(Ljava/lang/String;Lamz;)Ljava/util/concurrent/CompletableFuture;	a	fetchProfileByName
	m	(Ljava/util/UUID;Lamz;Ljava/util/function/BooleanSupplier;)Ljava/util/concurrent/CompletableFuture;	a	fetchProfileById
	m	()V	a	clear
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	(Ldmu;Ljb;Leeb;Lecp;)V	a	animation
	m	(F)F	a	getAnimation
	m	()Ldfv;	c	getOwnerProfile
	m	()Lame;	d	getNoteBlockSound
	m	()Lacw;	f	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Ldfv;)V	a	setOwner
	m	()V	j	updateOwnerProfile
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	fetchGameProfile
	m	(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;	a	fetchGameProfile
	m	(Lkl;)V	a	applyImplicitComponents
	m	(Lkn$a;)V	a	collectImplicitComponents
	m	(Lfdc;)V	b	removeComponentsFromTag
	m	()Lzw;	ax_	getUpdatePacket
	m	(Ldfv;)V	b	lambda$updateOwnerProfile$6
	m	(Ljava/util/function/BooleanSupplier;Lamz;Ljava/util/UUID;)Ljava/util/Optional;	a	lambda$fetchProfileById$5
	m	(Ljava/util/Optional;)Ljava/util/concurrent/CompletionStage;	a	lambda$fetchProfileByName$4
	m	(Ljava/util/Optional;Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$fetchProfileByName$3
	m	(Ljava/util/Optional;)Ljava/util/Optional;	b	lambda$fetchProfileByName$2
	m	()Z	k	lambda$setup$1
	m	(Ljava/lang/Runnable;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ecp$1	net/minecraft/world/level/block/entity/SkullBlockEntity$1
	f	Lamz;	a	val$services
	m	(Lamz;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	ecp$2	net/minecraft/world/level/block/entity/SkullBlockEntity$2
	f	Lamz;	a	val$services
	f	Ljava/util/function/BooleanSupplier;	b	val$invalidated
	m	(Lamz;Ljava/util/function/BooleanSupplier;)V	<init>	<init>
	m	(Ljava/util/UUID;)Ljava/util/concurrent/CompletableFuture;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	ecq	net/minecraft/world/level/block/entity/SmokerBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lxo;	j	getDefaultName
	m	(Leby;Ldcv;)I	a	getBurnDuration
	m	(ILcus;)Lcym;	a	createMenu
c	ecr	net/minecraft/world/level/block/entity/SpawnerBlockEntity
	f	Ldlu;	a	spawner
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Ldmu;Ljb;Leeb;Lecr;)V	a	clientTick
	m	(Ldmu;Ljb;Leeb;Lecr;)V	b	serverTick
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(II)Z	a_	triggerEvent
	m	(Lbzv;Lbck;)V	a	setEntityId
	m	()Ldlu;	c	getSpawner
	m	()Lzw;	ax_	getUpdatePacket
c	ecr$1	net/minecraft/world/level/block/entity/SpawnerBlockEntity$1
	m	(Lecr;)V	<init>	<init>
	m	(Ldmu;Ljb;I)V	a	broadcastEvent
	m	(Ldmu;Ljb;Ldno;)V	a	setNextSpawnData
c	ecs	net/minecraft/world/level/block/entity/StructureBlockEntity
	f	I	d	SCAN_CORNER_BLOCKS_RANGE
	f	I	a	MAX_OFFSET_PER_AXIS
	f	I	b	MAX_SIZE_PER_AXIS
	f	Ljava/lang/String;	c	AUTHOR_TAG
	f	Ljava/lang/String;	e	DEFAULT_AUTHOR
	f	Ljava/lang/String;	f	DEFAULT_METADATA
	f	Ljb;	g	DEFAULT_POS
	f	Lkg;	h	DEFAULT_SIZE
	f	Ldwu;	i	DEFAULT_ROTATION
	f	Ldvd;	j	DEFAULT_MIRROR
	f	Z	k	DEFAULT_IGNORE_ENTITIES
	f	Z	l	DEFAULT_STRICT
	f	Z	m	DEFAULT_POWERED
	f	Z	q	DEFAULT_SHOW_AIR
	f	Z	r	DEFAULT_SHOW_BOUNDING_BOX
	f	F	s	DEFAULT_INTEGRITY
	f	J	t	DEFAULT_SEED
	f	Lame;	u	structureName
	f	Ljava/lang/String;	v	author
	f	Ljava/lang/String;	w	metaData
	f	Ljb;	x	structurePos
	f	Lkg;	y	structureSize
	f	Ldvd;	z	mirror
	f	Ldwu;	A	rotation
	f	Lefl;	B	mode
	f	Z	C	ignoreEntities
	f	Z	D	strict
	f	Z	E	powered
	f	Z	F	showAir
	f	Z	G	showBoundingBox
	f	F	H	integrity
	f	J	I	seed
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()V	J	updateBlockState
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Lcut;)Z	a	usedBy
	m	()Ljava/lang/String;	d	getStructureName
	m	()Z	f	hasStructureName
	m	(Ljava/lang/String;)V	a	setStructureName
	m	(Lame;)V	a	setStructureName
	m	(Lcam;)V	a	createdBy
	m	()Ljb;	j	getStructurePos
	m	(Ljb;)V	a	setStructurePos
	m	()Lkg;	k	getStructureSize
	m	(Lkg;)V	a	setStructureSize
	m	()Ldvd;	u	getMirror
	m	(Ldvd;)V	a	setMirror
	m	()Ldwu;	v	getRotation
	m	(Ldwu;)V	a	setRotation
	m	()Ljava/lang/String;	w	getMetaData
	m	(Ljava/lang/String;)V	b	setMetaData
	m	()Lefl;	x	getMode
	m	(Lefl;)V	a	setMode
	m	()Z	y	isIgnoreEntities
	m	()Z	z	isStrict
	m	(Z)V	a	setIgnoreEntities
	m	(Z)V	b	setStrict
	m	()F	A	getIntegrity
	m	(F)V	a	setIntegrity
	m	()J	B	getSeed
	m	(J)V	a	setSeed
	m	()Z	C	detectSize
	m	(Ljb;Ljb;)Ljava/util/stream/Stream;	a	getRelatedCorners
	m	(Ljb;Ljava/util/stream/Stream;)Ljava/util/Optional;	a	calculateEnclosingBoundingBox
	m	()Z	D	saveStructure
	m	(Z)Z	c	saveStructure
	m	(Laub;Lame;Ljb;Lkg;ZLjava/lang/String;ZLjava/util/List;)Z	a	saveStructure
	m	(J)Lbck;	b	createRandom
	m	(Laub;)Z	a	placeStructureIfSameSize
	m	(Laub;)Z	b	loadStructureInfo
	m	(Leza;)V	a	loadStructureInfo
	m	(Laub;)V	c	placeStructure
	m	(Laub;)Leza;	d	getStructureTemplate
	m	(Laub;Leza;)V	a	placeStructure
	m	()V	E	unloadStructure
	m	()Z	F	isStructureLoadable
	m	()Z	G	isPowered
	m	(Z)V	d	setPowered
	m	()Z	H	getShowAir
	m	(Z)V	e	setShowAir
	m	()Z	I	getShowBoundingBox
	m	(Z)V	f	setShowBoundingBox
	m	()Lebc$a;	b	renderMode
	m	()Lebc$b;	c	getRenderableBox
	m	()Lzw;	ax_	getUpdatePacket
	m	(Laub;Ljb;)V	a	lambda$placeStructure$5
	m	(Lecs;)Z	a	lambda$getRelatedCorners$4
	m	(Leaz;)Lecs;	a	lambda$getRelatedCorners$3
	m	(Leaz;)Z	b	lambda$getRelatedCorners$2
	m	(Ljb;)Z	b	lambda$getRelatedCorners$1
	m	(Ljb;Leuq;)Z	a	lambda$detectSize$0
	m	()V	<clinit>	<clinit>
c	ecs$1	net/minecraft/world/level/block/entity/StructureBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Mirror
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	ecs$a	net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType
	f	Lecs$a;	a	UPDATE_DATA
	f	Lecs$a;	b	SAVE_AREA
	f	Lecs$a;	c	LOAD_AREA
	f	Lecs$a;	d	SCAN_AREA
	f	[Lecs$a;	e	$VALUES
	m	()[Lecs$a;	values	values
	m	(Ljava/lang/String;)Lecs$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lecs$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ect	net/minecraft/world/level/block/entity/TestBlockEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	DEFAULT_MESSAGE
	f	Z	c	DEFAULT_POWERED
	f	Lefm;	d	mode
	f	Ljava/lang/String;	e	message
	f	Z	f	powered
	f	Z	g	triggered
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()V	w	updateBlockState
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Z	c	isPowered
	m	(Z)V	a	setPowered
	m	()Lefm;	d	getMode
	m	(Lefm;)V	a	setMode
	m	()Ldpz;	x	getBlockType
	m	()V	f	reset
	m	()V	j	trigger
	m	()V	k	log
	m	()Z	u	hasTriggered
	m	()Ljava/lang/String;	v	getMessage
	m	(Ljava/lang/String;)V	a	setMessage
	m	()Lzw;	ax_	getUpdatePacket
	m	()V	<clinit>	<clinit>
c	ecu	net/minecraft/world/level/block/entity/TestInstanceBlockEntity
	f	Lxo;	a	INVALID_TEST_NAME
	f	Ljava/util/List;	b	BEAM_CLEARED
	f	Ljava/util/List;	c	BEAM_RUNNING
	f	Ljava/util/List;	d	BEAM_SUCCESS
	f	Ljava/util/List;	e	BEAM_REQUIRED_FAILED
	f	Ljava/util/List;	f	BEAM_OPTIONAL_FAILED
	f	Lkg;	g	STRUCTURE_OFFSET
	f	Lecu$a;	h	data
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lecu$a;)V	a	set
	m	(Laub;Lamd;)Ljava/util/Optional;	a	getStructureSize
	m	()Leuq;	d	getStructureBoundingBox
	m	()Lfin;	f	getStructureBounds
	m	(Laub;Lamd;)Ljava/util/Optional;	b	getStructureTemplate
	m	()Ljava/util/Optional;	j	test
	m	()Lxo;	k	getTestName
	m	()Ljava/util/Optional;	G	getTestHolder
	m	()Z	u	ignoreEntities
	m	()Lkg;	v	getSize
	m	()Ldwu;	w	getRotation
	m	()Ljava/util/Optional;	x	errorMessage
	m	(Lxo;)V	a	setErrorMessage
	m	()V	y	setSuccess
	m	()V	z	setRunning
	m	()V	e	setChanged
	m	()Lacw;	A	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lebc$a;	b	renderMode
	m	()Ljb;	B	getStructurePos
	m	(Ljb;)Ljb;	a	getStructurePos
	m	()Lebc$b;	c	getRenderableBox
	m	()Ljava/util/List;	a	getBeamSections
	m	()Lkg;	H	getTransformedSize
	m	(Ljava/util/function/Consumer;)V	a	resetTest
	m	(Ljava/util/function/Consumer;)Ljava/util/Optional;	b	saveTest
	m	(Ljava/util/function/Consumer;)Z	c	exportTest
	m	(Laub;Lame;Ljava/util/function/Consumer;)Z	a	export
	m	(Ljava/util/function/Consumer;)V	d	runTest
	m	()Z	C	placeStructure
	m	(Laub;Leza;)V	a	placeStructure
	m	()V	I	removeEntities
	m	()V	J	forceLoadChunks
	m	()Ljb;	D	getStartCorner
	m	()V	E	encaseStructure
	m	()V	F	removeBarriers
	m	(Ljava/util/function/Consumer;)V	e	processStructureBoundary
	m	()Lzw;	ax_	getUpdatePacket
	m	(Ljb;Ljb;ZLjava/util/function/Consumer;Ljb;)V	a	lambda$processStructureBoundary$9
	m	(Ljl$c;)Ljava/lang/Boolean;	a	lambda$processStructureBoundary$8
	m	(Ljb;)V	b	lambda$removeBarriers$7
	m	(Ljb;)V	c	lambda$encaseStructure$6
	m	(Laub;Ldlz;)V	a	lambda$forceLoadChunks$5
	m	(Lbzm;)Z	a	lambda$removeEntities$4
	m	(Laub;Lamd;)Ljava/util/Optional;	c	lambda$placeStructure$3
	m	(Lamd;)Lxo;	a	lambda$getTestName$2
	m	(Laub;Lame;)Ljava/util/Optional;	a	lambda$getStructureTemplate$1
	m	(Ljl$c;)Lame;	b	lambda$getStructureTemplate$0
	m	()V	<clinit>	<clinit>
c	ecu$1	net/minecraft/world/level/block/entity/TestInstanceBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	m	()V	<clinit>	<clinit>
c	ecu$a	net/minecraft/world/level/block/entity/TestInstanceBlockEntity$Data
	f	Ljava/util/Optional;	c	test
	f	Lkg;	d	size
	f	Ldwu;	e	rotation
	f	Z	f	ignoreEntities
	f	Lecu$b;	g	status
	f	Ljava/util/Optional;	h	errorMessage
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	m	(Ljava/util/Optional;Lkg;Ldwu;ZLecu$b;Ljava/util/Optional;)V	<init>	<init>
	m	(Lkg;)Lecu$a;	a	withSize
	m	(Lecu$b;)Lecu$a;	a	withStatus
	m	(Lxo;)Lecu$a;	a	withError
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	a	test
	m	()Lkg;	b	size
	m	()Ldwu;	c	rotation
	m	()Z	d	ignoreEntities
	m	()Lecu$b;	e	status
	m	()Ljava/util/Optional;	f	errorMessage
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ecu$b	net/minecraft/world/level/block/entity/TestInstanceBlockEntity$Status
	f	Lecu$b;	a	CLEARED
	f	Lecu$b;	b	RUNNING
	f	Lecu$b;	c	FINISHED
	f	Ljava/util/function/IntFunction;	f	ID_MAP
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lzm;	e	STREAM_CODEC
	f	Ljava/lang/String;	g	id
	f	I	h	index
	f	[Lecu$b;	i	$VALUES
	m	()[Lecu$b;	values	values
	m	(Ljava/lang/String;)Lecu$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(I)Lecu$b;	a	byIndex
	m	(Lecu$b;)I	a	lambda$static$1
	m	(Lecu$b;)I	b	lambda$static$0
	m	()[Lecu$b;	a	$values
	m	()V	<clinit>	<clinit>
c	ecv	net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	SPAWN_TIME
	f	I	c	COOLDOWN_TIME
	f	I	d	ATTENTION_INTERVAL
	f	I	e	EVENT_COOLDOWN
	f	I	f	GATEWAY_HEIGHT_ABOVE_SURFACE
	f	J	g	DEFAULT_AGE
	f	Z	h	DEFAULT_EXACT_TELEPORT
	f	J	i	age
	f	I	j	teleportCooldown
	f	Ljb;	k	exitPortal
	f	Z	l	exactTeleport
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	(Ldmu;Ljb;Leeb;Lecv;)V	a	beamAnimationTick
	m	(Ldmu;Ljb;Leeb;Lecv;)V	b	portalTick
	m	()Z	a	isSpawning
	m	()Z	c	isCoolingDown
	m	(F)F	a	getSpawnPercent
	m	(F)F	b	getCooldownPercent
	m	()Lacw;	d	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Ldmu;Ljb;Leeb;Lecv;)V	c	triggerCooldown
	m	(II)Z	a_	triggerEvent
	m	(Laub;Ljb;)Lfis;	a	getPortalPosition
	m	(Ldmu;Ljb;)Ljb;	a	findExitPosition
	m	(Laub;Ljb;)Ljb;	b	findOrCreateValidTeleportPos
	m	(Laub;Ljb;)Lfis;	c	findExitPortalXZPosTentative
	m	(Laub;Lfis;)Z	a	isChunkEmpty
	m	(Ldly;Ljb;IZ)Ljb;	a	findTallestBlock
	m	(Ldmu;Lfis;)Legi;	a	getChunk
	m	(Legi;)Ljb;	a	findValidSpawnInChunk
	m	(Laub;Ljb;Lepk;)V	a	spawnGatewayPortal
	m	(Ljh;)Z	a	shouldRenderFace
	m	()I	f	getParticleAmount
	m	(Ljb;Z)V	a	setExitPosition
	m	()Lzw;	ax_	getUpdatePacket
	m	(Laub;Ljb;Ljl$c;)V	a	lambda$findOrCreateValidTeleportPos$1
	m	(Ljy;)Ljava/util/Optional;	a	lambda$findOrCreateValidTeleportPos$0
	m	()V	<clinit>	<clinit>
c	ecw	net/minecraft/world/level/block/entity/TheEndPortalBlockEntity
	m	(Lebb;Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ljh;)Z	a	shouldRenderFace
c	ecx	net/minecraft/world/level/block/entity/TickingBlockEntity
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljb;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	ecy	net/minecraft/world/level/block/entity/TrappedChestBlockEntity
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;II)V	a	signalOpenCount
c	ecz	net/minecraft/world/level/block/entity/TrialSpawnerBlockEntity
	f	Ledc;	a	trialSpawner
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Ledc;	j	createDefaultSpawner
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	()Lacw;	a	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Lbzv;Lbck;)V	a	setEntityId
	m	()Ledc;	c	getTrialSpawner
	m	()Ledf;	d	getState
	m	(Ldmu;Ledf;)V	a	setState
	m	()V	f	markUpdated
	m	()Lzw;	ax_	getUpdatePacket
c	eda	net/minecraft/world/level/block/entity/package-info
c	edb	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector
	f	Ledb;	a	NO_CREATIVE_PLAYERS
	f	Ledb;	b	INCLUDING_CREATIVE_PLAYERS
	f	Ledb;	c	SHEEP
	m	(Laub;Ledb$a;Ljb;DZ)Ljava/util/List;	detect	detect
	m	(Ldmu;Lfis;Lfis;)Z	a	inLineOfSight
	m	(Laub;Ledb$a;Ljb;DZ)Ljava/util/List;	a	lambda$static$7
	m	(ZLaub;Ljb;Lcpd;)Z	a	lambda$static$6
	m	(Laub;Ledb$a;Ljb;DZ)Ljava/util/List;	b	lambda$static$5
	m	(ZLaub;Ljb;Lcut;)Z	a	lambda$static$4
	m	(Ljb;DLcut;)Z	a	lambda$static$3
	m	(Laub;Ledb$a;Ljb;DZ)Ljava/util/List;	c	lambda$static$2
	m	(ZLaub;Ljb;Lcut;)Z	b	lambda$static$1
	m	(Ljb;DLcut;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edb$a	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$EntitySelector
	f	Ledb$a;	a	SELECT_FROM_LEVEL
	m	(Laub;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
	m	(Laub;Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
	m	(Lcut;)Ledb$a;	a	onlySelectPlayer
	m	(Ljava/util/List;)Ledb$a;	a	onlySelectPlayers
	m	()V	<clinit>	<clinit>
c	edb$a$1	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$EntitySelector$1
	m	()V	<init>	<init>
	m	(Laub;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
	m	(Laub;Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
c	edb$a$2	net/minecraft/world/level/block/entity/trialspawner/PlayerDetector$EntitySelector$2
	f	Ljava/util/List;	b	val$players
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Laub;Ljava/util/function/Predicate;)Ljava/util/List;	a	getPlayers
	m	(Laub;Lein;Lfin;Ljava/util/function/Predicate;)Ljava/util/List;	a	getEntities
c	edc	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	I	a	DETECT_PLAYER_SPAWN_BUFFER
	f	I	c	DEFAULT_TARGET_COOLDOWN_LENGTH
	f	I	d	DEFAULT_PLAYER_SCAN_RANGE
	f	I	e	MAX_MOB_TRACKING_DISTANCE
	f	I	f	MAX_MOB_TRACKING_DISTANCE_SQR
	f	F	g	SPAWNING_AMBIENT_SOUND_CHANCE
	f	Ledg;	h	data
	f	Ledc$b;	i	config
	f	Ledc$c;	j	stateAccessor
	f	Ledb;	k	playerDetector
	f	Ledb$a;	l	entitySelector
	f	Z	m	overridePeacefulAndMobSpawnRule
	f	Z	n	isOminous
	m	(Ledc$b;Ledc$c;Ledb;Ledb$a;)V	<init>	<init>
	m	()Ledd;	a	activeConfig
	m	()Ledd;	b	normalConfig
	m	()Ledd;	c	ominousConfig
	m	(Lfda;)V	a	load
	m	(Lfdc;)V	a	store
	m	(Laub;Ljb;)V	a	applyOminous
	m	(Laub;Ljb;)V	b	removeOminous
	m	()Z	d	isOminous
	m	()I	e	getTargetCooldownLength
	m	()I	f	getRequiredPlayerRange
	m	()Ledf;	g	getState
	m	()Ledg;	h	getStateData
	m	(Ldmu;Ledf;)V	a	setState
	m	()V	i	markUpdated
	m	()Ledb;	j	getPlayerDetector
	m	()Ledb$a;	k	getEntitySelector
	m	(Laub;)Z	a	canSpawnInLevel
	m	(Laub;Ljb;)Ljava/util/Optional;	c	spawnMob
	m	(Laub;Ljb;Lamd;)V	a	ejectReward
	m	(Ldmu;Ljb;Z)V	a	tickClient
	m	(Laub;Ljb;Z)V	a	tickServer
	m	(Laub;Ljb;Ljava/util/UUID;)Z	a	shouldMobBeUntracked
	m	(Ldmu;Lfis;Lfis;)Z	a	inLineOfSight
	m	(Ldmu;Ljb;Lbck;Lmi;)V	a	addSpawnParticles
	m	(Ldmu;Ljb;Lbck;)V	a	addBecomeOminousParticles
	m	(Ldmu;Ljb;Lbck;ILmc;)V	a	addDetectPlayerParticles
	m	(Ldmu;Ljb;Lbck;)V	b	addEjectItemParticles
	m	(Lbzv;Ldmu;)V	a	overrideEntityToSpawn
	m	(Ledb;)V	a	setPlayerDetector
	m	()V	l	overridePeacefulAndMobSpawnRule
	m	(Laub;Ljb;Ljava/util/UUID;)Z	b	lambda$tickServer$3
	m	(Lfis;Lbck;Lbzm;)Lbzm;	a	lambda$spawnMob$2
	m	(Ljb;Lbck;)Lfis;	a	lambda$spawnMob$1
	m	(Ljb;)Ljava/lang/String;	a	lambda$spawnMob$0
	m	()V	<clinit>	<clinit>
c	edc$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$FlameParticle
	f	Ledc$a;	a	NORMAL
	f	Ledc$a;	b	OMINOUS
	f	Lmi;	c	particleType
	f	[Ledc$a;	d	$VALUES
	m	()[Ledc$a;	values	values
	m	(Ljava/lang/String;)Ledc$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILmi;)V	<init>	<init>
	m	(I)Ledc$a;	a	decode
	m	()I	a	encode
	m	()[Ledc$a;	b	$values
	m	()V	<clinit>	<clinit>
c	edc$b	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$FullConfig
	f	Ljl;	c	normal
	f	Ljl;	d	ominous
	f	I	e	targetCooldownLength
	f	I	f	requiredPlayerRange
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	Ledc$b;	b	DEFAULT
	m	(Ljl;Ljl;II)V	<init>	<init>
	m	(Lbzv;)Ledc$b;	a	overrideEntity
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	normal
	m	()Ljl;	b	ominous
	m	()I	c	targetCooldownLength
	m	()I	d	requiredPlayerRange
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edc$c	net/minecraft/world/level/block/entity/trialspawner/TrialSpawner$StateAccessor
	m	(Ldmu;Ledf;)V	a	setState
	m	()Ledf;	d	getState
	m	()V	f	markUpdated
c	edd	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig
	f	I	d	spawnRange
	f	F	e	totalMobs
	f	F	f	simultaneousMobs
	f	F	g	totalMobsAddedPerPlayer
	f	F	h	simultaneousMobsAddedPerPlayer
	f	I	i	ticksBetweenSpawn
	f	Lbvt;	j	spawnPotentialsDefinition
	f	Lbvt;	k	lootTablesToEject
	f	Lamd;	l	itemsToDropWhenOminous
	f	Ledd;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(IFFFFILbvt;Lbvt;Lamd;)V	<init>	<init>
	m	(I)I	a	calculateTargetTotalMobs
	m	(I)I	b	calculateTargetSimultaneousMobs
	m	()J	a	ticksBetweenItemSpawners
	m	()Ledd$a;	b	builder
	m	(Lbzv;)Ledd;	a	withSpawning
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	spawnRange
	m	()F	d	totalMobs
	m	()F	e	simultaneousMobs
	m	()F	f	totalMobsAddedPerPlayer
	m	()F	g	simultaneousMobsAddedPerPlayer
	m	()I	h	ticksBetweenSpawn
	m	()Lbvt;	i	spawnPotentialsDefinition
	m	()Lbvt;	j	lootTablesToEject
	m	()Lamd;	k	itemsToDropWhenOminous
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edd$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfig$Builder
	f	I	a	spawnRange
	f	F	b	totalMobs
	f	F	c	simultaneousMobs
	f	F	d	totalMobsAddedPerPlayer
	f	F	e	simultaneousMobsAddedPerPlayer
	f	I	f	ticksBetweenSpawn
	f	Lbvt;	g	spawnPotentialsDefinition
	f	Lbvt;	h	lootTablesToEject
	f	Lamd;	i	itemsToDropWhenOminous
	m	()V	<init>	<init>
	m	(I)Ledd$a;	a	spawnRange
	m	(F)Ledd$a;	a	totalMobs
	m	(F)Ledd$a;	b	simultaneousMobs
	m	(F)Ledd$a;	c	totalMobsAddedPerPlayer
	m	(F)Ledd$a;	d	simultaneousMobsAddedPerPlayer
	m	(I)Ledd$a;	b	ticksBetweenSpawn
	m	(Lbvt;)Ledd$a;	a	spawnPotentialsDefinition
	m	(Lbvt;)Ledd$a;	b	lootTablesToEject
	m	(Lamd;)Ledd$a;	a	itemsToDropWhenOminous
	m	()Ledd;	a	build
c	ede	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfigs
	f	Lede$a;	a	TRIAL_CHAMBER_BREEZE
	f	Lede$a;	b	TRIAL_CHAMBER_MELEE_HUSK
	f	Lede$a;	c	TRIAL_CHAMBER_MELEE_SPIDER
	f	Lede$a;	d	TRIAL_CHAMBER_MELEE_ZOMBIE
	f	Lede$a;	e	TRIAL_CHAMBER_RANGED_POISON_SKELETON
	f	Lede$a;	f	TRIAL_CHAMBER_RANGED_SKELETON
	f	Lede$a;	g	TRIAL_CHAMBER_RANGED_STRAY
	f	Lede$a;	h	TRIAL_CHAMBER_SLOW_RANGED_POISON_SKELETON
	f	Lede$a;	i	TRIAL_CHAMBER_SLOW_RANGED_SKELETON
	f	Lede$a;	j	TRIAL_CHAMBER_SLOW_RANGED_STRAY
	f	Lede$a;	k	TRIAL_CHAMBER_SMALL_MELEE_BABY_ZOMBIE
	f	Lede$a;	l	TRIAL_CHAMBER_SMALL_MELEE_CAVE_SPIDER
	f	Lede$a;	m	TRIAL_CHAMBER_SMALL_MELEE_SILVERFISH
	f	Lede$a;	n	TRIAL_CHAMBER_SMALL_MELEE_SLIME
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Lbzv;)Ldno;	a	spawnData
	m	(Lbzv;Ljava/util/function/Consumer;)Ldno;	a	customSpawnData
	m	(Lbzv;Lamd;)Ldno;	a	spawnDataWithEquipment
	m	(Lbzv;Ljava/util/function/Consumer;Lamd;)Ldno;	a	customSpawnDataWithEquipment
	m	(Lqq;Lede$a;Ledd;Ledd;)V	a	register
	m	(Ljava/lang/String;)Lamd;	a	registryKey
	m	()Ledd$a;	a	trialChamberMeleeOminous
	m	()Ledd$a;	b	trialChamberSlowRanged
	m	()Ledd$a;	c	trialChamberBase
	m	(Lamd;)Lbzy;	a	lambda$customSpawnDataWithEquipment$8
	m	(Lui;)V	a	lambda$spawnDataWithEquipment$7
	m	(Lui;)V	b	lambda$spawnData$6
	m	(Lui;)V	c	lambda$bootstrap$5
	m	(Lui;)V	d	lambda$bootstrap$4
	m	(Lui;)V	e	lambda$bootstrap$3
	m	(Lui;)V	f	lambda$bootstrap$2
	m	(Lui;)V	g	lambda$bootstrap$1
	m	(Lui;)V	h	lambda$bootstrap$0
	m	()V	<clinit>	<clinit>
c	ede$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerConfigs$Keys
	f	Lamd;	a	normal
	f	Lamd;	b	ominous
	m	(Lamd;Lamd;)V	<init>	<init>
	m	(Ljava/lang/String;)Lede$a;	a	of
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	normal
	m	()Lamd;	b	ominous
c	edf	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState
	f	Ledf;	a	INACTIVE
	f	Ledf;	b	WAITING_FOR_PLAYERS
	f	Ledf;	c	ACTIVE
	f	Ledf;	d	WAITING_FOR_REWARD_EJECTION
	f	Ledf;	e	EJECTING_REWARD
	f	Ledf;	f	COOLDOWN
	f	F	g	DELAY_BEFORE_EJECT_AFTER_KILLING_LAST_MOB
	f	I	h	TIME_BETWEEN_EACH_EJECTION
	f	Ljava/lang/String;	i	name
	f	I	j	lightLevel
	f	D	k	spinningMobSpeed
	f	Ledf$b;	l	particleEmission
	f	Z	m	isCapableOfSpawning
	f	[Ledf;	n	$VALUES
	m	()[Ledf;	values	values
	m	(Ljava/lang/String;)Ledf;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;ILedf$b;DZ)V	<init>	<init>
	m	(Ljb;Ledc;Laub;)Ledf;	a	tickAndGetNext
	m	(Laub;Ljb;Ledc;)V	a	spawnOminousOminousItemSpawner
	m	(Laub;Ljb;Ledc;Ledg;)Ljava/util/Optional;	a	calculatePositionToSpawnSpawner
	m	(Lbzm;Laub;)Ljava/util/Optional;	a	calculatePositionAbove
	m	(Ljava/util/List;Ljava/util/Set;Ledc;Ljb;Laub;)Lbzm;	a	selectEntityToSpawnItemAbove
	m	(Laub;Ledg;)Z	a	timeToSpawnItemSpawner
	m	()I	a	lightLevel
	m	()D	b	spinningMobSpeed
	m	()Z	d	hasSpinningMob
	m	()Z	e	isCapableOfSpawning
	m	(Ldmu;Ljb;Z)V	a	emitParticles
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljb;Ledc;Lbzm;)Z	a	lambda$selectEntityToSpawnItemAbove$5
	m	(Ljb;Ledc;Lcut;)Z	a	lambda$calculatePositionToSpawnSpawner$4
	m	(Laub;Ldcv;Ledg;Ledc;Lfis;)V	a	lambda$spawnOminousOminousItemSpawner$3
	m	(Ledc;Laub;Ljb;Lamd;)V	a	lambda$tickAndGetNext$2
	m	(Ledg;Laub;Ledd;Ledc;Ljava/util/UUID;)V	a	lambda$tickAndGetNext$1
	m	(Ledg;Ledc;Ldno;)V	a	lambda$tickAndGetNext$0
	m	()[Ledf;	f	$values
	m	()V	<clinit>	<clinit>
c	edf$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$LightLevel
	f	I	a	UNLIT
	f	I	b	HALF_LIT
	f	I	c	LIT
	m	()V	<init>	<init>
c	edf$b	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$ParticleEmission
	f	Ledf$b;	a	NONE
	f	Ledf$b;	b	SMALL_FLAMES
	f	Ledf$b;	c	FLAMES_AND_SMOKE
	f	Ledf$b;	d	SMOKE_INSIDE_AND_TOP_FACE
	m	(Lmi;Lfis;Ldmu;)V	a	addParticle
	m	(Ldmu;Lbck;Ljb;Z)V	emit	emit
	m	(Ldmu;Lbck;Ljb;Z)V	a	lambda$static$3
	m	(Ldmu;Lbck;Ljb;Z)V	b	lambda$static$2
	m	(Ldmu;Lbck;Ljb;Z)V	c	lambda$static$1
	m	(Ldmu;Lbck;Ljb;Z)V	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edf$c	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerState$SpinningMob
	f	D	a	NONE
	f	D	b	SLOW
	f	D	c	FAST
	m	()V	<init>	<init>
c	edg	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerStateData
	f	Ljava/lang/String;	j	TAG_SPAWN_DATA
	f	Ljava/lang/String;	k	TAG_NEXT_MOB_SPAWNS_AT
	f	I	l	DELAY_BETWEEN_PLAYER_SCANS
	f	I	m	TRIAL_OMEN_PER_BAD_OMEN_LEVEL
	f	Ljava/util/Set;	a	detectedPlayers
	f	Ljava/util/Set;	b	currentMobs
	f	J	c	cooldownEndsAt
	f	J	d	nextMobSpawnsAt
	f	I	e	totalMobsSpawned
	f	Ljava/util/Optional;	f	nextSpawnData
	f	Ljava/util/Optional;	g	ejectingLootTable
	f	Lbzm;	n	displayEntity
	f	Lbvt;	o	dispensing
	f	D	h	spin
	f	D	i	oSpin
	m	()V	<init>	<init>
	m	()Ledg$a;	a	pack
	m	(Ledg$a;)V	a	apply
	m	()V	b	reset
	m	()V	c	resetStatistics
	m	(Ledc;Lbck;)Z	a	hasMobToSpawn
	m	(Ledd;I)Z	a	hasFinishedSpawningAllMobs
	m	()Z	d	haveAllCurrentMobsDied
	m	(Laub;Ledd;I)Z	a	isReadyToSpawnNextMob
	m	(Ljb;)I	a	countAdditionalPlayers
	m	(Laub;Ljb;Ledc;)V	a	tryDetectPlayers
	m	(Laub;Ljava/util/List;)Ljava/util/Optional;	a	findPlayerWithOminousEffect
	m	(Ledc;Laub;)V	a	resetAfterBecomingOminous
	m	(Lcut;)V	a	transformBadOmenIntoTrialOmen
	m	(Laub;FI)Z	a	isReadyToOpenShutter
	m	(Laub;FI)Z	b	isReadyToEjectItems
	m	(Laub;)Z	a	isCooldownFinished
	m	(Ledc;Lbck;)Ldno;	b	getOrCreateNextSpawnData
	m	(Ledc;Ldmu;Ledf;)Lbzm;	a	getOrCreateDisplayEntity
	m	(Ledf;)Lui;	a	getUpdateTag
	m	()D	e	getSpin
	m	()D	f	getOSpin
	m	(Laub;Ledd;Ljb;)Lbvt;	a	getDispensingItems
	m	(Laub;Ljb;)J	a	lowResolutionPosition
	m	(Lui;Ldno;)V	a	lambda$getUpdateTag$3
	m	(Laub;Lbzm;)V	a	lambda$resetAfterBecomingOminous$2
	m	(Lcut;)Lcom/mojang/datafixers/util/Pair;	b	lambda$findPlayerWithOminousEffect$1
	m	(Laub;Ledc;Ljb;Lcom/mojang/datafixers/util/Pair;)V	a	lambda$tryDetectPlayers$0
c	edg$a	net/minecraft/world/level/block/entity/trialspawner/TrialSpawnerStateData$Packed
	f	Ljava/util/Set;	b	detectedPlayers
	f	Ljava/util/Set;	c	currentMobs
	f	J	d	cooldownEndsAt
	f	J	e	nextMobSpawnsAt
	f	I	f	totalMobsSpawned
	f	Ljava/util/Optional;	g	nextSpawnData
	f	Ljava/util/Optional;	h	ejectingLootTable
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	m	(Ljava/util/Set;Ljava/util/Set;JJILjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Set;	a	detectedPlayers
	m	()Ljava/util/Set;	b	currentMobs
	m	()J	c	cooldownEndsAt
	m	()J	d	nextMobSpawnsAt
	m	()I	e	totalMobsSpawned
	m	()Ljava/util/Optional;	f	nextSpawnData
	m	()Ljava/util/Optional;	g	ejectingLootTable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edh	net/minecraft/world/level/block/entity/trialspawner/package-info
c	edi	net/minecraft/world/level/block/entity/vault/VaultBlockEntity
	f	Ledl;	a	serverData
	f	Ledm;	b	sharedData
	f	Ledj;	c	clientData
	f	Ledk;	d	config
	m	(Ljb;Leeb;)V	<init>	<init>
	m	()Lzw;	ax_	getUpdatePacket
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	(Lfdc;)V	a	saveAdditional
	m	(Lfda;)V	a	loadAdditional
	m	()Ledl;	a	getServerData
	m	()Ledm;	c	getSharedData
	m	()Ledj;	d	getClientData
	m	()Ledk;	f	getConfig
	m	(Ledk;)V	a	setConfig
	m	(Ljn$a;Lui;)V	a	lambda$getUpdateTag$0
	m	(Ldmu;Ljb;Leeb;)V	b	access$000
c	edi$a	net/minecraft/world/level/block/entity/vault/VaultBlockEntity$Client
	f	I	a	PARTICLE_TICK_RATE
	f	F	b	IDLE_PARTICLE_CHANCE
	f	F	c	AMBIENT_SOUND_CHANCE
	f	I	d	ACTIVATION_PARTICLE_COUNT
	f	I	e	DEACTIVATION_PARTICLE_COUNT
	m	()V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Ledj;Ledm;)V	a	tick
	m	(Ldmu;Ljb;Leeb;Ledm;Lmc;)V	a	emitActivationParticles
	m	(Ldmu;Ljb;Lmc;)V	a	emitDeactivationParticles
	m	(Ldmu;Ljb;Ledm;Lmc;)V	a	emitIdleParticles
	m	(Ldmu;Lfis;Lcut;)V	a	emitConnectionParticlesForPlayer
	m	(Ldmu;Ljb;Leeb;Ledm;)V	a	emitConnectionParticlesForNearbyPlayers
	m	(Ljb;Ledm;Lcut;)Z	a	isWithinConnectionRange
	m	(Ldmu;Ljb;Ledm;)V	a	playIdleSounds
	m	(Ledm;)Z	a	shouldDisplayActiveEffects
	m	(Ljb;Lbck;)Lfis;	a	randomPosCenterOfCage
	m	(Ljb;Lbck;)Lfis;	b	randomPosInsideCage
	m	(Ljb;Ljh;)Lfis;	a	keyholePos
c	edi$b	net/minecraft/world/level/block/entity/vault/VaultBlockEntity$Server
	f	I	a	UNLOCKING_DELAY_TICKS
	f	I	b	DISPLAY_CYCLE_TICK_RATE
	f	I	c	INSERT_FAIL_SOUND_BUFFER_TICKS
	m	()V	<init>	<init>
	m	(Laub;Ljb;Leeb;Ledk;Ledl;Ledm;)V	a	tick
	m	(Laub;Ljb;Leeb;Ledk;Ledl;Ledm;Lcut;Ldcv;)V	a	tryInsertKey
	m	(Laub;Ljb;Leeb;Leeb;Ledk;Ledm;)V	a	setVaultState
	m	(Laub;Ledn;Ledk;Ledm;Ljb;)V	a	cycleDisplayItemFromLootTable
	m	(Laub;Ljb;Lamd;)Ldcv;	a	getRandomDisplayItemFromLootTable
	m	(Laub;Leeb;Ljb;Ledk;Ledl;Ledm;Ljava/util/List;)V	a	unlock
	m	(Laub;Ledk;Ljb;Lcut;Ldcv;)Ljava/util/List;	a	resolveItemsToEject
	m	(Ledk;Ledn;)Z	a	canEjectReward
	m	(Ledk;Ldcv;)Z	a	isValidToInsert
	m	(JLedn;)Z	a	shouldCycleDisplayItem
	m	(Laub;Ledl;Ljb;Layy;)V	a	playInsertFailSound
c	edj	net/minecraft/world/level/block/entity/vault/VaultClientData
	f	F	a	ROTATION_SPEED
	f	F	b	currentSpin
	f	F	c	previousSpin
	m	()V	<init>	<init>
	m	()F	a	currentSpin
	m	()F	b	previousSpin
	m	()V	c	updateDisplayItemSpin
c	edk	net/minecraft/world/level/block/entity/vault/VaultConfig
	f	Lamd;	d	lootTable
	f	D	e	activationRange
	f	D	f	deactivationRange
	f	Ldcv;	g	keyItem
	f	Ljava/util/Optional;	h	overrideLootTableToDisplay
	f	Ledb;	i	playerDetector
	f	Ledb$a;	j	entitySelector
	f	Ljava/lang/String;	a	TAG_NAME
	f	Ledk;	b	DEFAULT
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	()V	<init>	<init>
	m	(Lamd;DDLdcv;Ljava/util/Optional;)V	<init>	<init>
	m	(Lamd;DDLdcv;Ljava/util/Optional;Ledb;Ledb$a;)V	<init>	<init>
	m	()Ledb;	a	playerDetector
	m	()Lcom/mojang/serialization/DataResult;	h	validate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	lootTable
	m	()D	c	activationRange
	m	()D	d	deactivationRange
	m	()Ldcv;	e	keyItem
	m	()Ljava/util/Optional;	f	overrideLootTableToDisplay
	m	()Ledb$a;	g	entitySelector
	m	()Ljava/lang/String;	i	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edl	net/minecraft/world/level/block/entity/vault/VaultServerData
	f	Ljava/lang/String;	a	TAG_NAME
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	d	MAX_REWARD_PLAYERS
	f	Ljava/util/Set;	e	rewardedPlayers
	f	J	f	stateUpdatingResumesAt
	f	Ljava/util/List;	g	itemsToEject
	f	J	h	lastInsertFailTimestamp
	f	I	i	totalEjectionsNeeded
	f	Z	c	isDirty
	m	(Ljava/util/Set;JLjava/util/List;I)V	<init>	<init>
	m	()V	<init>	<init>
	m	(J)V	a	setLastInsertFailTimestamp
	m	()J	a	getLastInsertFailTimestamp
	m	()Ljava/util/Set;	b	getRewardedPlayers
	m	(Lcut;)Z	a	hasRewardedPlayer
	m	(Lcut;)V	b	addToRewardedPlayers
	m	()J	c	stateUpdatingResumesAt
	m	(J)V	b	pauseStateUpdatingUntil
	m	()Ljava/util/List;	d	getItemsToEject
	m	()V	e	markEjectionFinished
	m	(Ljava/util/List;)V	a	setItemsToEject
	m	()Ldcv;	f	getNextItemToEject
	m	()Ldcv;	g	popNextItemToEject
	m	(Ledl;)V	a	set
	m	()V	i	markChanged
	m	()F	h	ejectionProgress
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Ledl;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Ledl;)Ljava/util/List;	c	lambda$static$2
	m	(Ledl;)Ljava/lang/Long;	d	lambda$static$1
	m	(Ledl;)Ljava/util/Set;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edm	net/minecraft/world/level/block/entity/vault/VaultSharedData
	f	Ljava/lang/String;	a	TAG_NAME
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ldcv;	d	displayItem
	f	Ljava/util/Set;	e	connectedPlayers
	f	D	f	connectedParticlesRange
	f	Z	c	isDirty
	m	(Ldcv;Ljava/util/Set;D)V	<init>	<init>
	m	()V	<init>	<init>
	m	()Ldcv;	a	getDisplayItem
	m	()Z	b	hasDisplayItem
	m	(Ldcv;)V	a	setDisplayItem
	m	()Z	c	hasConnectedPlayers
	m	()Ljava/util/Set;	d	getConnectedPlayers
	m	()D	e	connectedParticlesRange
	m	(Laub;Ljb;Ledl;Ledk;D)V	a	updateConnectedPlayersWithinRange
	m	()V	f	markDirty
	m	(Ledm;)V	a	set
	m	(Ledl;Ljava/util/UUID;)Z	a	lambda$updateConnectedPlayersWithinRange$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ledm;)Ljava/lang/Double;	b	lambda$static$2
	m	(Ledm;)Ljava/util/Set;	c	lambda$static$1
	m	(Ledm;)Ldcv;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edn	net/minecraft/world/level/block/entity/vault/VaultState
	f	Ledn;	a	INACTIVE
	f	Ledn;	b	ACTIVE
	f	Ledn;	c	UNLOCKING
	f	Ledn;	d	EJECTING
	f	I	e	UPDATE_CONNECTED_PLAYERS_TICK_RATE
	f	I	f	DELAY_BETWEEN_EJECTIONS_TICKS
	f	I	g	DELAY_AFTER_LAST_EJECTION_TICKS
	f	I	h	DELAY_BEFORE_FIRST_EJECTION_TICKS
	f	Ljava/lang/String;	i	stateName
	f	Ledn$a;	j	lightLevel
	f	[Ledn;	k	$VALUES
	m	()[Ledn;	values	values
	m	(Ljava/lang/String;)Ledn;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ledn$a;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()I	a	lightLevel
	m	(Laub;Ljb;Ledk;Ledl;Ledm;)Ledn;	a	tickAndGetNext
	m	(Laub;Ljb;Ledk;Ledl;Ledm;D)Ledn;	a	updateStateForConnectedPlayers
	m	(Laub;Ljb;Ledn;Ledk;Ledm;Z)V	a	onTransition
	m	(Laub;Ljb;Ledk;Ledm;Z)V	a	onEnter
	m	(Laub;Ljb;Ledk;Ledm;)V	a	onExit
	m	(Laub;Ljb;Ldcv;F)V	a	ejectResultItem
	m	()[Ledn;	b	$values
	m	()V	<clinit>	<clinit>
c	edn$1	net/minecraft/world/level/block/entity/vault/VaultState$1
	m	(Ljava/lang/String;ILjava/lang/String;Ledn$a;)V	<init>	<init>
	m	(Laub;Ljb;Ledk;Ledm;Z)V	a	onEnter
c	edn$2	net/minecraft/world/level/block/entity/vault/VaultState$2
	m	(Ljava/lang/String;ILjava/lang/String;Ledn$a;)V	<init>	<init>
	m	(Laub;Ljb;Ledk;Ledm;Z)V	a	onEnter
c	edn$3	net/minecraft/world/level/block/entity/vault/VaultState$3
	m	(Ljava/lang/String;ILjava/lang/String;Ledn$a;)V	<init>	<init>
	m	(Laub;Ljb;Ledk;Ledm;Z)V	a	onEnter
c	edn$4	net/minecraft/world/level/block/entity/vault/VaultState$4
	m	(Ljava/lang/String;ILjava/lang/String;Ledn$a;)V	<init>	<init>
	m	(Laub;Ljb;Ledk;Ledm;Z)V	a	onEnter
	m	(Laub;Ljb;Ledk;Ledm;)V	a	onExit
c	edn$a	net/minecraft/world/level/block/entity/vault/VaultState$LightLevel
	f	Ledn$a;	a	HALF_LIT
	f	Ledn$a;	b	LIT
	f	I	c	value
	f	[Ledn$a;	d	$VALUES
	m	()[Ledn$a;	values	values
	m	(Ljava/lang/String;)Ledn$a;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()[Ledn$a;	a	$values
	m	()V	<clinit>	<clinit>
c	edo	net/minecraft/world/level/block/entity/vault/package-info
c	edp	net/minecraft/world/level/block/grower/TreeGrower
	f	Ljava/util/Map;	l	GROWERS
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ledp;	b	OAK
	f	Ledp;	c	SPRUCE
	f	Ledp;	d	MANGROVE
	f	Ledp;	e	AZALEA
	f	Ledp;	f	BIRCH
	f	Ledp;	g	JUNGLE
	f	Ledp;	h	ACACIA
	f	Ledp;	i	CHERRY
	f	Ledp;	j	DARK_OAK
	f	Ledp;	k	PALE_OAK
	f	Ljava/lang/String;	m	name
	f	F	n	secondaryChance
	f	Ljava/util/Optional;	o	megaTree
	f	Ljava/util/Optional;	p	secondaryMegaTree
	f	Ljava/util/Optional;	q	tree
	f	Ljava/util/Optional;	r	secondaryTree
	f	Ljava/util/Optional;	s	flowers
	f	Ljava/util/Optional;	t	secondaryFlowers
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ljava/lang/String;FLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lbck;Z)Lamd;	a	getConfiguredFeature
	m	(Lbck;)Lamd;	a	getConfiguredMegaFeature
	m	(Laub;Lefz;Ljb;Leeb;Lbck;)Z	a	growTree
	m	(Leeb;Ldly;Ljb;II)Z	a	isTwoByTwoSapling
	m	(Ldmv;Ljb;)Z	a	hasFlowers
	m	(Ledp;)Ljava/lang/String;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edq	net/minecraft/world/level/block/grower/package-info
c	edr	net/minecraft/world/level/block/package-info
c	eds	net/minecraft/world/level/block/piston/MovingPistonBlock
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leez;	b	FACING
	f	Leez;	c	TYPE
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Ljb;Leeb;)Leaz;	a	newBlockEntity
	m	(Ljb;Leeb;Leeb;Ljh;ZZ)Leaz;	a	newMovingBlockEntity
	m	(Ldmu;Leeb;Lebb;)Leba;	a	getTicker
	m	(Ldmv;Ljb;Leeb;)V	a	destroy
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Ldly;Ljb;)Ledw;	a	getBlockEntity
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	edt	net/minecraft/world/level/block/piston/PistonBaseBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lees;	c	EXTENDED
	f	I	d	TRIGGER_EXTEND
	f	I	e	TRIGGER_CONTRACT
	f	I	f	TRIGGER_DROP
	f	I	g	PLATFORM_THICKNESS
	f	Ljava/util/Map;	h	SHAPES
	f	Z	i	isSticky
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(ZLeea$d;)V	<init>	<init>
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldmu;Ljb;Leeb;Lcam;Ldcv;)V	a	setPlacedBy
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Ldgo;)Leeb;	a	getStateForPlacement
	m	(Ldmu;Ljb;Leeb;)V	a	checkIfExtend
	m	(Ldnm;Ljb;Ljh;)Z	a	getNeighborSignal
	m	(Leeb;Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Leeb;Ldmu;Ljb;Ljh;ZLjh;)Z	a	isPushable
	m	(Ldmu;Ljb;Ljh;Z)Z	a	moveBlocks
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Ledt;)Ljava/lang/Boolean;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edt$1	net/minecraft/world/level/block/piston/PistonBaseBlock$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$material$PushReaction
	m	()V	<clinit>	<clinit>
c	edu	net/minecraft/world/level/block/piston/PistonHeadBlock
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leez;	c	TYPE
	f	Lees;	d	SHORT
	f	I	e	PLATFORM_THICKNESS
	f	Lfjm;	f	SHAPE_PLATFORM
	f	Ljava/util/Map;	g	SHAPES_SHORT
	f	Ljava/util/Map;	h	SHAPES
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Leea$d;)V	<init>	<init>
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Leeb;)Z	a	isFittingBase
	m	(Ldmu;Ljb;Leeb;Lcut;)Leeb;	a	playerWillDestroy
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leec$a;)V	a	createBlockStateDefinition
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	()V	<clinit>	<clinit>
c	edv	net/minecraft/world/level/block/piston/PistonMath
	m	()V	<init>	<init>
	m	(Lfin;Ljh;D)Lfin;	a	getMovementArea
c	edv$1	net/minecraft/world/level/block/piston/PistonMath$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	edw	net/minecraft/world/level/block/piston/PistonMovingBlockEntity
	f	I	b	TICKS_TO_EXTEND
	f	D	c	PUSH_OFFSET
	f	D	a	TICK_MOVEMENT
	f	Leeb;	d	DEFAULT_BLOCK_STATE
	f	F	e	DEFAULT_PROGRESS
	f	Z	f	DEFAULT_EXTENDING
	f	Z	g	DEFAULT_SOURCE
	f	Leeb;	h	movedState
	f	Ljh;	i	direction
	f	Z	j	extending
	f	Z	k	isSourcePiston
	f	Ljava/lang/ThreadLocal;	l	NOCLIP
	f	F	m	progress
	f	F	q	progressO
	f	J	r	lastTicked
	f	I	s	deathTicks
	m	(Ljb;Leeb;)V	<init>	<init>
	m	(Ljb;Leeb;Leeb;Ljh;ZZ)V	<init>	<init>
	m	(Ljn$a;)Lui;	a	getUpdateTag
	m	()Z	a	isExtending
	m	()Ljh;	c	getDirection
	m	()Z	d	isSourcePiston
	m	(F)F	a	getProgress
	m	(F)F	b	getXOff
	m	(F)F	c	getYOff
	m	(F)F	d	getZOff
	m	(F)F	e	getExtendedProgress
	m	()Leeb;	w	getCollisionRelatedBlockState
	m	(Ldmu;Ljb;FLedw;)V	a	moveCollidedEntities
	m	(Ljh;Lbzm;DLjh;)V	a	moveEntityByPiston
	m	(Ldmu;Ljb;FLedw;)V	b	moveStuckEntities
	m	(Lfin;Lbzm;Ljb;)Z	a	matchesStickyCritera
	m	()Z	x	isStickyForEntities
	m	()Ljh;	f	getMovementDirection
	m	(Lfin;Ljh;Lfin;)D	a	getMovement
	m	(Ljb;Lfin;Ledw;)Lfin;	a	moveByPositionAndProgress
	m	(Ljb;Lbzm;Ljh;D)V	a	fixEntityWithinPistonBase
	m	()Leeb;	j	getMovedState
	m	()V	k	finalTick
	m	(Ljb;Leeb;)V	a	preRemoveSideEffects
	m	()Ljh;	u	getPushDirection
	m	(Ldmu;Ljb;Leeb;Ledw;)V	a	tick
	m	(Lfda;)V	a	loadAdditional
	m	(Lfdc;)V	a	saveAdditional
	m	(Ldly;Ljb;)Lfjm;	a	getCollisionShape
	m	()J	v	getLastTicked
	m	(Ldmu;)V	a	setLevel
	m	(Lfin;Ljb;Lbzm;)Z	a	lambda$moveStuckEntities$1
	m	()Ljh;	y	lambda$static$0
	m	()V	<clinit>	<clinit>
c	edw$1	net/minecraft/world/level/block/piston/PistonMovingBlockEntity$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	f	[I	b	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	edx	net/minecraft/world/level/block/piston/PistonStructureResolver
	f	I	a	MAX_PUSH_DEPTH
	f	Ldmu;	b	level
	f	Ljb;	c	pistonPos
	f	Z	d	extending
	f	Ljb;	e	startPos
	f	Ljh;	f	pushDirection
	f	Ljava/util/List;	g	toPush
	f	Ljava/util/List;	h	toDestroy
	f	Ljh;	i	pistonDirection
	m	(Ldmu;Ljb;Ljh;Z)V	<init>	<init>
	m	()Z	a	resolve
	m	(Leeb;)Z	a	isSticky
	m	(Leeb;Leeb;)Z	a	canStickToEachOther
	m	(Ljb;Ljh;)Z	a	addBlockLine
	m	(II)V	a	reorderListAtCollision
	m	(Ljb;)Z	a	addBranchingBlocks
	m	()Ljh;	b	getPushDirection
	m	()Ljava/util/List;	c	getToPush
	m	()Ljava/util/List;	d	getToDestroy
c	edy	net/minecraft/world/level/block/piston/package-info
c	edz	net/minecraft/world/level/block/sounds/AmbientDesertBlockSoundsPlayer
	f	I	a	IDLE_SOUND_CHANCE
	f	I	b	DRY_GRASS_SOUND_CHANCE
	f	I	c	DEAD_BUSH_SOUND_CHANCE
	f	I	d	DEAD_BUSH_SOUND_BADLANDS_DECREASED_CHANCE
	f	I	e	SURROUNDING_BLOCKS_PLAY_SOUND_THRESHOLD
	f	I	f	SURROUNDING_BLOCKS_DISTANCE_HORIZONTAL_CHECK
	f	I	g	SURROUNDING_BLOCKS_DISTANCE_VERTICAL_CHECK
	f	I	h	HORIZONTAL_DIRECTIONS
	m	()V	<init>	<init>
	m	(Ldmu;Ljb;Lbck;)V	a	playAmbientSandSounds
	m	(Ldmu;Ljb;Lbck;)V	b	playAmbientDryGrassSounds
	m	(Ldmu;Ljb;Lbck;)V	c	playAmbientDeadBushSounds
	m	(Ldmu;Ljb;)Z	a	shouldPlayDesertDryVegetationBlockSounds
	m	(Ldmu;Ljb;)Z	b	shouldPlayAmbientSandSound
	m	(Ldmu;Ljb$a;)Z	a	columnContainsTriggeringBlock
	m	(Leeb;)Z	a	canTriggerAmbientDesertSandSounds
c	eea	net/minecraft/world/level/block/state/BlockBehaviour
	f	[Ljh;	E	UPDATE_SHAPE_ORDER
	f	Z	F	hasCollision
	f	F	G	explosionResistance
	f	Z	H	isRandomlyTicking
	f	Ldxx;	I	soundType
	f	F	J	friction
	f	F	K	speedFactor
	f	F	L	jumpFactor
	f	Z	M	dynamicShape
	f	Lcyd;	N	requiredFeatures
	f	Leea$d;	O	properties
	f	Ljava/util/Optional;	P	drops
	f	Ljava/lang/String;	Q	descriptionId
	m	(Leea$d;)V	<init>	<init>
	m	()Leea$d;	s	properties
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	t	propertiesCodec
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	b	simpleCodec
	m	(Leeb;Ldmv;Ljb;II)V	a	updateIndirectNeighbourShapes
	m	(Leeb;Lfba;)Z	a	isPathfindable
	m	(Leeb;Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Leeb;Leeb;Ljh;)Z	b	skipRendering
	m	(Leeb;Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Leeb;Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Leeb;Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Leeb;Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Leeb;Ldmu;Ljb;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldcv;Leeb;Ldmu;Ljb;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Leeb;Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Leeb;)Ldwn;	a_	getRenderShape
	m	(Leeb;)Z	g_	useShapeForLightOcclusion
	m	(Leeb;)Z	f_	isSignalSource
	m	(Leeb;)Lfal;	b_	getFluidState
	m	(Leeb;)Z	c_	hasAnalogOutputSignal
	m	()F	ar_	getMaxHorizontalOffset
	m	()F	at_	getMaxVerticalOffset
	m	()Lcyd;	k	requiredFeatures
	m	(Leeb;Ldwu;)Leeb;	a	rotate
	m	(Leeb;Ldvd;)Leeb;	a	mirror
	m	(Leeb;Ldgo;)Z	a	canBeReplaced
	m	(Leeb;Lfak;)Z	a	canBeReplaced
	m	(Leeb;Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Leeb;Ljb;)J	a	getSeed
	m	(Leeb;)Lfjm;	d_	getOcclusionShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	b_	getBlockSupportShape
	m	(Leeb;Ldly;Ljb;)Lfjm;	a	getInteractionShape
	m	(Leeb;)I	i_	getLightBlock
	m	(Leeb;Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Leeb;Ldmx;Ljb;)Z	a	canSurvive
	m	(Leeb;Ldly;Ljb;)F	c	getShadeBrightness
	m	(Leeb;Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Leeb;Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Leeb;Ldly;Ljb;)Z	a_	isCollisionShapeFullBlock
	m	(Leeb;Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Leeb;Laub;Ljb;Lbck;)V	b	randomTick
	m	(Leeb;Laub;Ljb;Lbck;)V	a	tick
	m	(Leeb;Lcut;Ldly;Ljb;)F	a	getDestroyProgress
	m	(Leeb;Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Leeb;Ldmu;Ljb;Lcut;)V	a_	attack
	m	(Leeb;Ldly;Ljb;Ljh;)I	a	getSignal
	m	(Leeb;Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Leeb;Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	()Ljava/util/Optional;	u	getLootTable
	m	()Ljava/lang/String;	v	getDescriptionId
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Leeb;)Z	e_	propagatesSkylightDown
	m	(Leeb;)Z	f	isRandomlyTicking
	m	(Leeb;)Ldxx;	h_	getSoundType
	m	(Ldmx;Ljb;Leeb;Z)Ldcv;	a	getCloneItemStack
	m	()Ldcr;	h	asItem
	m	()Ldpz;	o	asBlock
	m	()Lfap;	w	defaultMapColor
	m	()F	x	defaultDestroyTime
	m	(Ljava/util/function/BiConsumer;Ljb;Ldcv;)V	a	lambda$onExplosionHit$1
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$0
	m	()V	<clinit>	<clinit>
c	eea$1	net/minecraft/world/level/block/state/BlockBehaviour$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathComputationType
	m	()V	<clinit>	<clinit>
c	eea$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase
	f	[Ljh;	a	DIRECTIONS
	f	[Lfjm;	f	EMPTY_OCCLUSION_SHAPES
	f	[Lfjm;	g	FULL_BLOCK_OCCLUSION_SHAPES
	f	I	h	lightEmission
	f	Z	i	useShapeForLightOcclusion
	f	Z	j	isAir
	f	Z	k	ignitedByLava
	f	Z	l	liquid
	f	Z	m	legacySolid
	f	Lfaq;	n	pushReaction
	f	Lfap;	o	mapColor
	f	F	p	destroySpeed
	f	Z	q	requiresCorrectToolForDrops
	f	Z	r	canOcclude
	f	Leea$f;	s	isRedstoneConductor
	f	Leea$f;	t	isSuffocating
	f	Leea$f;	u	isViewBlocking
	f	Leea$f;	v	hasPostProcess
	f	Leea$f;	w	emissiveRendering
	f	Leea$b;	x	offsetFunction
	f	Z	y	spawnTerrainParticles
	f	Lefc;	z	instrument
	f	Z	A	replaceable
	f	Leea$a$a;	B	cache
	f	Lfal;	C	fluidState
	f	Z	D	isRandomlyTicking
	f	Z	E	solidRender
	f	Lfjm;	F	occlusionShape
	f	[Lfjm;	G	occlusionShapesByFace
	f	Z	H	propagatesSkylightDown
	f	I	I	lightBlock
	m	(Ldpz;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Z	H	calculateSolid
	m	()V	a	initCache
	m	()Ldpz;	b	getBlock
	m	()Ljl;	c	getBlockHolder
	m	()Z	d	blocksMotion
	m	()Z	e	isSolid
	m	(Ldly;Ljb;Lbzv;)Z	a	isValidSpawn
	m	()Z	f	propagatesSkylightDown
	m	()I	g	getLightBlock
	m	(Ljh;)Lfjm;	a	getFaceOcclusionShape
	m	()Lfjm;	h	getOcclusionShape
	m	()Z	i	hasLargeCollisionShape
	m	()Z	j	useShapeForLightOcclusion
	m	()I	k	getLightEmission
	m	()Z	l	isAir
	m	()Z	m	ignitedByLava
	m	()Z	n	liquid
	m	(Ldly;Ljb;)Lfap;	a	getMapColor
	m	(Ldwu;)Leeb;	a	rotate
	m	(Ldvd;)Leeb;	a	mirror
	m	()Ldwn;	o	getRenderShape
	m	(Ldly;Ljb;)Z	b	emissiveRendering
	m	(Ldly;Ljb;)F	c	getShadeBrightness
	m	(Ldly;Ljb;)Z	d	isRedstoneConductor
	m	()Z	p	isSignalSource
	m	(Ldly;Ljb;Ljh;)I	a	getSignal
	m	()Z	q	hasAnalogOutputSignal
	m	(Ldmu;Ljb;)I	a	getAnalogOutputSignal
	m	(Ldly;Ljb;)F	e	getDestroySpeed
	m	(Lcut;Ldly;Ljb;)F	a	getDestroyProgress
	m	(Ldly;Ljb;Ljh;)I	b	getDirectSignal
	m	()Lfaq;	r	getPistonPushReaction
	m	()Z	s	isSolidRender
	m	()Z	t	canOcclude
	m	(Leeb;Ljh;)Z	a	skipRendering
	m	(Ldly;Ljb;)Lfjm;	f	getShape
	m	(Ldly;Ljb;Lfix;)Lfjm;	a	getShape
	m	(Ldly;Ljb;)Lfjm;	g	getCollisionShape
	m	(Ldly;Ljb;Lfix;)Lfjm;	b	getCollisionShape
	m	(Ldly;Ljb;Lbzm;)Lfjm;	a	getEntityInsideCollisionShape
	m	(Ldly;Ljb;)Lfjm;	h	getBlockSupportShape
	m	(Ldly;Ljb;Lfix;)Lfjm;	c	getVisualShape
	m	(Ldly;Ljb;)Lfjm;	i	getInteractionShape
	m	(Ldly;Ljb;Lbzm;)Z	b	entityCanStandOn
	m	(Ldly;Ljb;Lbzm;Ljh;)Z	a	entityCanStandOnFace
	m	(Ljb;)Lfis;	a	getOffset
	m	()Z	u	hasOffsetFunction
	m	(Ldmu;Ljb;II)Z	a	triggerEvent
	m	(Ldmu;Ljb;Ldpz;Lfbt;Z)V	a	handleNeighborChanged
	m	(Ldmv;Ljb;I)V	a	updateNeighbourShapes
	m	(Ldmv;Ljb;II)V	a	updateNeighbourShapes
	m	(Ldmv;Ljb;I)V	b	updateIndirectNeighbourShapes
	m	(Ldmv;Ljb;II)V	b	updateIndirectNeighbourShapes
	m	(Ldmu;Ljb;Leeb;Z)V	a	onPlace
	m	(Laub;Ljb;Z)V	a	affectNeighborsAfterRemoval
	m	(Laub;Ljb;Ldmn;Ljava/util/function/BiConsumer;)V	a	onExplosionHit
	m	(Laub;Ljb;Lbck;)V	a	tick
	m	(Laub;Ljb;Lbck;)V	b	randomTick
	m	(Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Laub;Ljb;Ldcv;Z)V	a	spawnAfterBreak
	m	(Lfdm$a;)Ljava/util/List;	a	getDrops
	m	(Ldcv;Ldmu;Lcut;Lbxi;Lfio;)Lbxj;	a	useItemOn
	m	(Ldmu;Lcut;Lfio;)Lbxj;	a	useWithoutItem
	m	(Ldmu;Ljb;Lcut;)V	a	attack
	m	(Ldly;Ljb;)Z	j	isSuffocating
	m	(Ldly;Ljb;)Z	k	isViewBlocking
	m	(Ldmx;Ldnj;Ljb;Ljh;Ljb;Leeb;Lbck;)Leeb;	a	updateShape
	m	(Lfba;)Z	a	isPathfindable
	m	(Ldgo;)Z	a	canBeReplaced
	m	(Lfak;)Z	a	canBeReplaced
	m	()Z	v	canBeReplaced
	m	(Ldmx;Ljb;)Z	a	canSurvive
	m	(Ldly;Ljb;)Z	l	hasPostProcess
	m	(Ldmu;Ljb;)Lbxm;	b	getMenuProvider
	m	(Lbae;)Z	a	is
	m	(Lbae;Ljava/util/function/Predicate;)Z	a	is
	m	(Ljp;)Z	a	is
	m	(Ljl;)Z	a	is
	m	()Ljava/util/stream/Stream;	w	getTags
	m	()Z	x	hasBlockEntity
	m	(Ldmu;Lebb;)Leba;	a	getTicker
	m	(Ldpz;)Z	a	is
	m	(Lamd;)Z	a	is
	m	()Lfal;	y	getFluidState
	m	()Z	z	isRandomlyTicking
	m	(Ljb;)J	b	getSeed
	m	()Ldxx;	A	getSoundType
	m	(Ldmu;Leeb;Lfio;Lcvo;)V	a	onProjectileHit
	m	(Ldly;Ljb;Ljh;)Z	c	isFaceSturdy
	m	(Ldly;Ljb;Ljh;Ldyl;)Z	a	isFaceSturdy
	m	(Ldly;Ljb;)Z	m	isCollisionShapeFullBlock
	m	(Ldmx;Ljb;Z)Ldcv;	a	getCloneItemStack
	m	()Leeb;	B	asState
	m	()Z	C	requiresCorrectToolForDrops
	m	()Z	D	shouldSpawnTerrainParticles
	m	()Lefc;	E	instrument
	m	([Lfjm;)V	a	lambda$static$1
	m	([Lfjm;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eea$a$a	net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache
	f	[Ljh;	d	DIRECTIONS
	f	I	e	SUPPORT_TYPE_COUNT
	f	Lfjm;	a	collisionShape
	f	Z	b	largeCollisionShape
	f	[Z	f	faceSturdy
	f	Z	c	isCollisionShapeFullBlock
	m	(Leeb;)V	<init>	<init>
	m	(Ljh;Ldyl;)Z	a	isFaceSturdy
	m	(Ljh;Ldyl;)I	b	getFaceSupportIndex
	m	(Ljh$a;)Z	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eea$b	net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction
	m	(Leeb;Ljb;)Lfis;	evaluate	evaluate
c	eea$c	net/minecraft/world/level/block/state/BlockBehaviour$OffsetType
	f	Leea$c;	a	NONE
	f	Leea$c;	b	XZ
	f	Leea$c;	c	XYZ
	f	[Leea$c;	d	$VALUES
	m	()[Leea$c;	values	values
	m	(Ljava/lang/String;)Leea$c;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leea$c;	a	$values
	m	()V	<clinit>	<clinit>
c	eea$d	net/minecraft/world/level/block/state/BlockBehaviour$Properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/function/Function;	b	mapColor
	f	Z	c	hasCollision
	f	Ldxx;	d	soundType
	f	Ljava/util/function/ToIntFunction;	e	lightEmission
	f	F	f	explosionResistance
	f	F	g	destroyTime
	f	Z	h	requiresCorrectToolForDrops
	f	Z	i	isRandomlyTicking
	f	F	j	friction
	f	F	k	speedFactor
	f	F	l	jumpFactor
	f	Lamd;	m	id
	f	Lalw;	n	drops
	f	Lalw;	o	descriptionId
	f	Z	p	canOcclude
	f	Z	q	isAir
	f	Z	r	ignitedByLava
	f	Z	s	liquid
	f	Z	t	forceSolidOff
	f	Z	u	forceSolidOn
	f	Lfaq;	v	pushReaction
	f	Z	w	spawnTerrainParticles
	f	Lefc;	x	instrument
	f	Z	y	replaceable
	f	Leea$e;	z	isValidSpawn
	f	Leea$f;	A	isRedstoneConductor
	f	Leea$f;	B	isSuffocating
	f	Leea$f;	C	isViewBlocking
	f	Leea$f;	D	hasPostProcess
	f	Leea$f;	E	emissiveRendering
	f	Z	F	dynamicShape
	f	Lcyd;	G	requiredFeatures
	f	Leea$b;	H	offsetFunction
	m	()V	<init>	<init>
	m	()Leea$d;	a	of
	m	(Leea;)Leea$d;	a	ofFullCopy
	m	(Leea;)Leea$d;	b	ofLegacyCopy
	m	(Ldbt;)Leea$d;	a	mapColor
	m	(Lfap;)Leea$d;	a	mapColor
	m	(Ljava/util/function/Function;)Leea$d;	a	mapColor
	m	()Leea$d;	b	noCollission
	m	()Leea$d;	c	noOcclusion
	m	(F)Leea$d;	a	friction
	m	(F)Leea$d;	b	speedFactor
	m	(F)Leea$d;	c	jumpFactor
	m	(Ldxx;)Leea$d;	a	sound
	m	(Ljava/util/function/ToIntFunction;)Leea$d;	a	lightLevel
	m	(FF)Leea$d;	a	strength
	m	()Leea$d;	d	instabreak
	m	(F)Leea$d;	d	strength
	m	()Leea$d;	e	randomTicks
	m	()Leea$d;	f	dynamicShape
	m	()Leea$d;	g	noLootTable
	m	(Ljava/util/Optional;)Leea$d;	a	overrideLootTable
	m	()Ljava/util/Optional;	h	effectiveDrops
	m	()Leea$d;	i	ignitedByLava
	m	()Leea$d;	j	liquid
	m	()Leea$d;	k	forceSolidOn
	m	()Leea$d;	l	forceSolidOff
	m	(Lfaq;)Leea$d;	a	pushReaction
	m	()Leea$d;	m	air
	m	(Leea$e;)Leea$d;	a	isValidSpawn
	m	(Leea$f;)Leea$d;	a	isRedstoneConductor
	m	(Leea$f;)Leea$d;	b	isSuffocating
	m	(Leea$f;)Leea$d;	c	isViewBlocking
	m	(Leea$f;)Leea$d;	d	hasPostProcess
	m	(Leea$f;)Leea$d;	e	emissiveRendering
	m	()Leea$d;	n	requiresCorrectToolForDrops
	m	(F)Leea$d;	e	destroyTime
	m	(F)Leea$d;	f	explosionResistance
	m	(Leea$c;)Leea$d;	a	offsetType
	m	()Leea$d;	o	noTerrainParticles
	m	([Lcyb;)Leea$d;	a	requiredFeatures
	m	(Lefc;)Leea$d;	a	instrument
	m	()Leea$d;	p	replaceable
	m	(Lamd;)Leea$d;	a	setId
	m	(Ljava/lang/String;)Leea$d;	a	overrideDescription
	m	()Ljava/lang/String;	q	effectiveDescriptionId
	m	(Leeb;Ljb;)Lfis;	a	lambda$offsetType$13
	m	(Leeb;Ljb;)Lfis;	b	lambda$offsetType$12
	m	(Lfap;Leeb;)Lfap;	a	lambda$mapColor$11
	m	(Ldbt;Leeb;)Lfap;	a	lambda$mapColor$10
	m	(Leeb;Ldly;Ljb;)Z	a	lambda$new$9
	m	(Leeb;Ldly;Ljb;)Z	b	lambda$new$8
	m	(Leeb;Ldly;Ljb;)Z	c	lambda$new$7
	m	(Leeb;Ldly;Ljb;)Z	d	lambda$new$6
	m	(Leeb;Ldly;Ljb;Lbzv;)Z	a	lambda$new$5
	m	(Lamd;)Ljava/lang/String;	b	lambda$new$4
	m	(Lamd;)Ljava/util/Optional;	c	lambda$new$3
	m	(Leeb;)I	a	lambda$new$2
	m	(Leeb;)Lfap;	b	lambda$new$1
	m	()Leea$d;	r	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eea$e	net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate
	m	(Leeb;Ldly;Ljb;Ljava/lang/Object;)Z	test	test
c	eea$f	net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate
	m	(Leeb;Ldly;Ljb;)Z	test	test
c	eeb	net/minecraft/world/level/block/state/BlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ldpz;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Leeb;	B	asState
	m	()V	<clinit>	<clinit>
c	eec	net/minecraft/world/level/block/state/StateDefinition
	f	Ljava/util/regex/Pattern;	a	NAME_PATTERN
	f	Ljava/lang/Object;	b	owner
	f	Lcom/google/common/collect/ImmutableSortedMap;	c	propertiesByName
	f	Lcom/google/common/collect/ImmutableList;	d	states
	m	(Ljava/util/function/Function;Ljava/lang/Object;Leec$b;Ljava/util/Map;)V	<init>	<init>
	m	(Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lefe;)Lcom/mojang/serialization/MapCodec;	a	appendPropertyCodec
	m	()Lcom/google/common/collect/ImmutableList;	a	getPossibleStates
	m	()Leed;	b	any
	m	()Ljava/lang/Object;	c	getOwner
	m	()Ljava/util/Collection;	d	getProperties
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/String;)Lefe;	a	getProperty
	m	(Lefe;Leed;)Lcom/mojang/datafixers/util/Pair;	a	lambda$appendPropertyCodec$7
	m	(Lefe;Lcom/mojang/datafixers/util/Pair;)Leed;	a	lambda$appendPropertyCodec$6
	m	(Lefe;Ljava/util/function/Supplier;)Lefe$a;	a	lambda$appendPropertyCodec$5
	m	(Ljava/lang/String;)V	b	lambda$appendPropertyCodec$4
	m	(Leec$b;Ljava/lang/Object;Lcom/mojang/serialization/MapCodec;Ljava/util/Map;Ljava/util/List;Ljava/util/List;)V	a	lambda$new$3
	m	(Lefe;Ljava/util/List;)Ljava/util/stream/Stream;	a	lambda$new$2
	m	(Ljava/util/List;Lefe;Ljava/lang/Comparable;)Ljava/util/List;	a	lambda$new$1
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Leed;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eec$a	net/minecraft/world/level/block/state/StateDefinition$Builder
	f	Ljava/lang/Object;	a	owner
	f	Ljava/util/Map;	b	properties
	m	(Ljava/lang/Object;)V	<init>	<init>
	m	([Lefe;)Leec$a;	a	add
	m	(Lefe;)V	a	validateProperty
	m	(Ljava/util/function/Function;Leec$b;)Leec;	a	create
c	eec$b	net/minecraft/world/level/block/state/StateDefinition$Factory
	m	(Ljava/lang/Object;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)Ljava/lang/Object;	create	create
c	eed	net/minecraft/world/level/block/state/StateHolder
	f	Ljava/lang/String;	b	NAME_TAG
	f	Ljava/lang/String;	c	PROPERTIES_TAG
	f	Ljava/util/function/Function;	a	PROPERTY_ENTRY_TO_STRING_FUNCTION
	f	Ljava/lang/Object;	d	owner
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;	f	values
	f	Ljava/util/Map;	g	neighbours
	f	Lcom/mojang/serialization/MapCodec;	e	propertiesCodec
	m	(Ljava/lang/Object;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	(Lefe;)Ljava/lang/Object;	a	cycle
	m	(Ljava/util/List;Ljava/lang/Object;)Ljava/lang/Object;	a	findNextInCollection
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/util/Collection;	F	getProperties
	m	(Lefe;)Z	b	hasProperty
	m	(Lefe;)Ljava/lang/Comparable;	c	getValue
	m	(Lefe;)Ljava/util/Optional;	d	getOptionalValue
	m	(Lefe;Ljava/lang/Comparable;)Ljava/lang/Comparable;	a	getValueOrElse
	m	(Lefe;)Ljava/lang/Comparable;	e	getNullableValue
	m	(Lefe;Ljava/lang/Comparable;)Ljava/lang/Object;	b	setValue
	m	(Lefe;Ljava/lang/Comparable;)Ljava/lang/Object;	c	trySetValue
	m	(Lefe;Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/lang/Object;	a	setValueInternal
	m	(Ljava/util/Map;)V	a	populateNeighbours
	m	(Lefe;Ljava/lang/Comparable;)Ljava/util/Map;	d	makeNeighbourValues
	m	()Ljava/util/Map;	G	getValues
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/function/Function;Ljava/lang/Object;)Lcom/mojang/serialization/MapCodec;	a	lambda$codec$3
	m	(Leed;Ljava/util/Optional;)Leed;	a	lambda$codec$2
	m	(Leed;)Ljava/lang/Object;	a	lambda$codec$1
	m	(Ljava/util/Map;Lefe;Ljava/lang/Comparable;)Ljava/lang/Object;	a	lambda$populateNeighbours$0
	m	()V	<clinit>	<clinit>
c	eed$1	net/minecraft/world/level/block/state/StateHolder$1
	m	()V	<init>	<init>
	m	(Ljava/util/Map$Entry;)Ljava/lang/String;	a	apply
	m	(Lefe;Ljava/lang/Comparable;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
c	eee	net/minecraft/world/level/block/state/package-info
c	eef	net/minecraft/world/level/block/state/pattern/BlockInWorld
	f	Ldmx;	a	level
	f	Ljb;	b	pos
	f	Z	c	loadChunks
	f	Leeb;	d	state
	f	Leaz;	e	entity
	f	Z	f	cachedEntity
	m	(Ldmx;Ljb;Z)V	<init>	<init>
	m	()Leeb;	a	getState
	m	()Leaz;	b	getEntity
	m	()Ldmx;	c	getLevel
	m	()Ljb;	d	getPos
	m	(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;	a	hasState
	m	(Ljava/util/function/Predicate;Leef;)Z	a	lambda$hasState$0
c	eeg	net/minecraft/world/level/block/state/pattern/BlockPattern
	f	[[[Ljava/util/function/Predicate;	a	pattern
	f	I	b	depth
	f	I	c	height
	f	I	d	width
	m	([[[Ljava/util/function/Predicate;)V	<init>	<init>
	m	()I	a	getDepth
	m	()I	b	getHeight
	m	()I	c	getWidth
	m	()[[[Ljava/util/function/Predicate;	d	getPattern
	m	(Ldmx;Ljb;Ljh;Ljh;)Leeg$b;	a	matches
	m	(Ljb;Ljh;Ljh;Lcom/google/common/cache/LoadingCache;)Leeg$b;	a	matches
	m	(Ldmx;Ljb;)Leeg$b;	a	find
	m	(Ldmx;Z)Lcom/google/common/cache/LoadingCache;	a	createLevelCache
	m	(Ljb;Ljh;Ljh;III)Ljb;	a	translateAndRotate
c	eeg$a	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader
	f	Ldmx;	a	level
	f	Z	b	loadChunks
	m	(Ldmx;Z)V	<init>	<init>
	m	(Ljb;)Leef;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	eeg$b	net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch
	f	Ljb;	a	frontTopLeft
	f	Ljh;	b	forwards
	f	Ljh;	c	up
	f	Lcom/google/common/cache/LoadingCache;	d	cache
	f	I	e	width
	f	I	f	height
	f	I	g	depth
	m	(Ljb;Ljh;Ljh;Lcom/google/common/cache/LoadingCache;III)V	<init>	<init>
	m	()Ljb;	a	getFrontTopLeft
	m	()Ljh;	b	getForwards
	m	()Ljh;	c	getUp
	m	()I	d	getWidth
	m	()I	e	getHeight
	m	()I	f	getDepth
	m	(III)Leef;	a	getBlock
	m	()Ljava/lang/String;	toString	toString
c	eeh	net/minecraft/world/level/block/state/pattern/BlockPatternBuilder
	f	Lcom/google/common/base/Joiner;	a	COMMA_JOINED
	f	Ljava/util/List;	b	pattern
	f	Ljava/util/Map;	c	lookup
	f	I	d	height
	f	I	e	width
	m	()V	<init>	<init>
	m	([Ljava/lang/String;)Leeh;	a	aisle
	m	()Leeh;	a	start
	m	(CLjava/util/function/Predicate;)Leeh;	a	where
	m	()Leeg;	b	build
	m	()[[[Ljava/util/function/Predicate;	c	createPattern
	m	()V	d	ensureAllCharactersMatched
	m	(Leef;)Z	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eei	net/minecraft/world/level/block/state/pattern/package-info
c	eej	net/minecraft/world/level/block/state/predicate/BlockPredicate
	f	Ldpz;	a	block
	m	(Ldpz;)V	<init>	<init>
	m	(Ldpz;)Leej;	a	forBlock
	m	(Leeb;)Z	a	test
	m	(Ljava/lang/Object;)Z	test	test
c	eek	net/minecraft/world/level/block/state/predicate/BlockStatePredicate
	f	Ljava/util/function/Predicate;	a	ANY
	f	Leec;	b	definition
	f	Ljava/util/Map;	c	properties
	m	(Leec;)V	<init>	<init>
	m	(Ldpz;)Leek;	a	forBlock
	m	(Leeb;)Z	a	test
	m	(Leeb;Lefe;Ljava/util/function/Predicate;)Z	a	applies
	m	(Lefe;Ljava/util/function/Predicate;)Leek;	a	where
	m	(Ljava/lang/Object;)Z	test	test
	m	(Leeb;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eel	net/minecraft/world/level/block/state/predicate/package-info
c	eem	net/minecraft/world/level/block/state/properties/AttachFace
	f	Leem;	a	FLOOR
	f	Leem;	b	WALL
	f	Leem;	c	CEILING
	f	Ljava/lang/String;	d	name
	f	[Leem;	e	$VALUES
	m	()[Leem;	values	values
	m	(Ljava/lang/String;)Leem;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leem;	a	$values
	m	()V	<clinit>	<clinit>
c	een	net/minecraft/world/level/block/state/properties/BambooLeaves
	f	Leen;	a	NONE
	f	Leen;	b	SMALL
	f	Leen;	c	LARGE
	f	Ljava/lang/String;	d	name
	f	[Leen;	e	$VALUES
	m	()[Leen;	values	values
	m	(Ljava/lang/String;)Leen;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leen;	a	$values
	m	()V	<clinit>	<clinit>
c	eeo	net/minecraft/world/level/block/state/properties/BedPart
	f	Leeo;	a	HEAD
	f	Leeo;	b	FOOT
	f	Ljava/lang/String;	c	name
	f	[Leeo;	d	$VALUES
	m	()[Leeo;	values	values
	m	(Ljava/lang/String;)Leeo;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leeo;	a	$values
	m	()V	<clinit>	<clinit>
c	eep	net/minecraft/world/level/block/state/properties/BellAttachType
	f	Leep;	a	FLOOR
	f	Leep;	b	CEILING
	f	Leep;	c	SINGLE_WALL
	f	Leep;	d	DOUBLE_WALL
	f	Ljava/lang/String;	e	name
	f	[Leep;	f	$VALUES
	m	()[Leep;	values	values
	m	(Ljava/lang/String;)Leep;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leep;	a	$values
	m	()V	<clinit>	<clinit>
c	eeq	net/minecraft/world/level/block/state/properties/BlockSetType
	f	Ljava/lang/String;	s	name
	f	Z	t	canOpenByHand
	f	Z	u	canOpenByWindCharge
	f	Z	v	canButtonBeActivatedByArrows
	f	Leeq$a;	w	pressurePlateSensitivity
	f	Ldxx;	x	soundType
	f	Layy;	y	doorClose
	f	Layy;	z	doorOpen
	f	Layy;	A	trapdoorClose
	f	Layy;	B	trapdoorOpen
	f	Layy;	C	pressurePlateClickOff
	f	Layy;	D	pressurePlateClickOn
	f	Layy;	E	buttonClickOff
	f	Layy;	F	buttonClickOn
	f	Ljava/util/Map;	G	TYPES
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leeq;	b	IRON
	f	Leeq;	c	COPPER
	f	Leeq;	d	GOLD
	f	Leeq;	e	STONE
	f	Leeq;	f	POLISHED_BLACKSTONE
	f	Leeq;	g	OAK
	f	Leeq;	h	SPRUCE
	f	Leeq;	i	BIRCH
	f	Leeq;	j	ACACIA
	f	Leeq;	k	CHERRY
	f	Leeq;	l	JUNGLE
	f	Leeq;	m	DARK_OAK
	f	Leeq;	n	PALE_OAK
	f	Leeq;	o	CRIMSON
	f	Leeq;	p	WARPED
	f	Leeq;	q	MANGROVE
	f	Leeq;	r	BAMBOO
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;ZZZLeeq$a;Ldxx;Layy;Layy;Layy;Layy;Layy;Layy;Layy;Layy;)V	<init>	<init>
	m	(Leeq;)Leeq;	a	register
	m	()Ljava/util/stream/Stream;	a	values
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Z	c	canOpenByHand
	m	()Z	d	canOpenByWindCharge
	m	()Z	e	canButtonBeActivatedByArrows
	m	()Leeq$a;	f	pressurePlateSensitivity
	m	()Ldxx;	g	soundType
	m	()Layy;	h	doorClose
	m	()Layy;	i	doorOpen
	m	()Layy;	j	trapdoorClose
	m	()Layy;	k	trapdoorOpen
	m	()Layy;	l	pressurePlateClickOff
	m	()Layy;	m	pressurePlateClickOn
	m	()Layy;	n	buttonClickOff
	m	()Layy;	o	buttonClickOn
	m	()V	<clinit>	<clinit>
c	eeq$a	net/minecraft/world/level/block/state/properties/BlockSetType$PressurePlateSensitivity
	f	Leeq$a;	a	EVERYTHING
	f	Leeq$a;	b	MOBS
	f	[Leeq$a;	c	$VALUES
	m	()[Leeq$a;	values	values
	m	(Ljava/lang/String;)Leeq$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leeq$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eer	net/minecraft/world/level/block/state/properties/BlockStateProperties
	f	Lees;	a	ATTACHED
	f	Lees;	b	BERRIES
	f	Lees;	c	BLOOM
	f	Lees;	d	BOTTOM
	f	Lees;	e	CAN_SUMMON
	f	Lees;	f	CONDITIONAL
	f	Lees;	g	DISARMED
	f	Lees;	h	DRAG
	f	Lees;	i	ENABLED
	f	Lees;	j	EXTENDED
	f	Lees;	k	EYE
	f	Lees;	l	FALLING
	f	Lees;	m	HANGING
	f	Lees;	n	HAS_BOTTLE_0
	f	Lees;	o	HAS_BOTTLE_1
	f	Lees;	p	HAS_BOTTLE_2
	f	Lees;	q	HAS_RECORD
	f	Lees;	r	HAS_BOOK
	f	Lees;	s	INVERTED
	f	Lees;	t	IN_WALL
	f	Lees;	u	LIT
	f	Lees;	v	LOCKED
	f	Lees;	w	NATURAL
	f	Lees;	x	OCCUPIED
	f	Lees;	y	OPEN
	f	Lees;	z	PERSISTENT
	f	Lees;	A	POWERED
	f	Lees;	B	SHORT
	f	Lees;	C	SHRIEKING
	f	Lees;	D	SIGNAL_FIRE
	f	Lees;	E	SNOWY
	f	Lees;	F	TIP
	f	Lees;	G	TRIGGERED
	f	Lees;	H	UNSTABLE
	f	Lees;	I	WATERLOGGED
	f	Leez;	J	HORIZONTAL_AXIS
	f	Leez;	K	AXIS
	f	Lees;	L	UP
	f	Lees;	M	DOWN
	f	Lees;	N	NORTH
	f	Lees;	O	EAST
	f	Lees;	P	SOUTH
	f	Lees;	Q	WEST
	f	Leez;	R	FACING
	f	Leez;	S	FACING_HOPPER
	f	Leez;	T	HORIZONTAL_FACING
	f	Lefb;	U	FLOWER_AMOUNT
	f	Lefb;	V	SEGMENT_AMOUNT
	f	Leez;	W	ORIENTATION
	f	Leez;	X	ATTACH_FACE
	f	Leez;	Y	BELL_ATTACHMENT
	f	Leez;	Z	EAST_WALL
	f	Leez;	aa	NORTH_WALL
	f	Leez;	ab	SOUTH_WALL
	f	Leez;	ac	WEST_WALL
	f	Leez;	ad	EAST_REDSTONE
	f	Leez;	ae	NORTH_REDSTONE
	f	Leez;	af	SOUTH_REDSTONE
	f	Leez;	ag	WEST_REDSTONE
	f	Leez;	ah	DOUBLE_BLOCK_HALF
	f	Leez;	ai	HALF
	f	Leez;	aj	RAIL_SHAPE
	f	Leez;	ak	RAIL_SHAPE_STRAIGHT
	f	I	al	MAX_AGE_1
	f	I	am	MAX_AGE_2
	f	I	an	MAX_AGE_3
	f	I	ao	MAX_AGE_4
	f	I	ap	MAX_AGE_5
	f	I	aq	MAX_AGE_7
	f	I	ar	MAX_AGE_15
	f	I	as	MAX_AGE_25
	f	Lefb;	at	AGE_1
	f	Lefb;	au	AGE_2
	f	Lefb;	av	AGE_3
	f	Lefb;	aw	AGE_4
	f	Lefb;	ax	AGE_5
	f	Lefb;	ay	AGE_7
	f	Lefb;	az	AGE_15
	f	Lefb;	aA	AGE_25
	f	Lefb;	aB	BITES
	f	Lefb;	aC	CANDLES
	f	Lefb;	aD	DELAY
	f	I	aE	MAX_DISTANCE
	f	Lefb;	aF	DISTANCE
	f	Lefb;	aG	EGGS
	f	Lefb;	aH	HATCH
	f	Lefb;	aI	LAYERS
	f	I	aJ	MIN_LEVEL
	f	I	aK	MIN_LEVEL_CAULDRON
	f	I	aL	MAX_LEVEL_3
	f	I	aM	MAX_LEVEL_8
	f	Lefb;	aN	LEVEL_CAULDRON
	f	Lefb;	aO	LEVEL_COMPOSTER
	f	Lefb;	aP	LEVEL_FLOWING
	f	Lefb;	aQ	LEVEL_HONEY
	f	I	aR	MAX_LEVEL_15
	f	Lefb;	aS	LEVEL
	f	Lefb;	aT	MOISTURE
	f	Lefb;	aU	NOTE
	f	Lefb;	aV	PICKLES
	f	Lefb;	aW	POWER
	f	Lefb;	aX	STAGE
	f	I	aY	STABILITY_MAX_DISTANCE
	f	Lefb;	aZ	STABILITY_DISTANCE
	f	I	ba	MIN_RESPAWN_ANCHOR_CHARGES
	f	I	bb	MAX_RESPAWN_ANCHOR_CHARGES
	f	Lefb;	bc	RESPAWN_ANCHOR_CHARGES
	f	Lefb;	bd	DRIED_GHAST_HYDRATION_LEVELS
	f	Lefb;	be	ROTATION_16
	f	Leez;	bf	BED_PART
	f	Leez;	bg	CHEST_TYPE
	f	Leez;	bh	MODE_COMPARATOR
	f	Leez;	bi	DOOR_HINGE
	f	Leez;	bj	NOTEBLOCK_INSTRUMENT
	f	Leez;	bk	PISTON_TYPE
	f	Leez;	bl	SLAB_TYPE
	f	Leez;	bm	STAIRS_SHAPE
	f	Leez;	bn	STRUCTUREBLOCK_MODE
	f	Leez;	bo	BAMBOO_LEAVES
	f	Leez;	bp	TILT
	f	Leez;	bq	VERTICAL_DIRECTION
	f	Leez;	br	DRIPSTONE_THICKNESS
	f	Leez;	bs	SCULK_SENSOR_PHASE
	f	Lees;	bt	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED
	f	Lees;	bu	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED
	f	Lees;	bv	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED
	f	Lees;	bw	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED
	f	Lees;	bx	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED
	f	Lees;	by	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED
	f	Lefb;	bz	DUSTED
	f	Lees;	bA	CRACKED
	f	Lees;	bB	CRAFTING
	f	Leez;	bC	TRIAL_SPAWNER_STATE
	f	Leez;	bD	VAULT_STATE
	f	Leez;	bE	CREAKING_HEART_STATE
	f	Lees;	bF	OMINOUS
	f	Leez;	bG	TEST_BLOCK_MODE
	f	Lees;	bH	MAP
	m	()V	<init>	<init>
	m	(Leff;)Z	a	lambda$static$1
	m	(Ljh;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ees	net/minecraft/world/level/block/state/properties/BooleanProperty
	f	Ljava/util/List;	a	VALUES
	f	I	b	TRUE_INDEX
	f	I	c	FALSE_INDEX
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/util/List;	a	getPossibleValues
	m	(Ljava/lang/String;)Lees;	a	create
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	m	(Ljava/lang/Boolean;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Boolean;)I	b	getInternalIndex
	m	(Ljava/lang/Comparable;)I	a	getInternalIndex
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	b	getName
	m	()V	<clinit>	<clinit>
c	eet	net/minecraft/world/level/block/state/properties/ChestType
	f	Leet;	a	SINGLE
	f	Leet;	b	LEFT
	f	Leet;	c	RIGHT
	f	Ljava/lang/String;	d	name
	f	[Leet;	e	$VALUES
	m	()[Leet;	values	values
	m	(Ljava/lang/String;)Leet;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Leet;	a	getOpposite
	m	()[Leet;	b	$values
	m	()V	<clinit>	<clinit>
c	eeu	net/minecraft/world/level/block/state/properties/ComparatorMode
	f	Leeu;	a	COMPARE
	f	Leeu;	b	SUBTRACT
	f	Ljava/lang/String;	c	name
	f	[Leeu;	d	$VALUES
	m	()[Leeu;	values	values
	m	(Ljava/lang/String;)Leeu;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leeu;	a	$values
	m	()V	<clinit>	<clinit>
c	eev	net/minecraft/world/level/block/state/properties/CreakingHeartState
	f	Leev;	a	UPROOTED
	f	Leev;	b	DORMANT
	f	Leev;	c	AWAKE
	f	Ljava/lang/String;	d	name
	f	[Leev;	e	$VALUES
	m	()[Leev;	values	values
	m	(Ljava/lang/String;)Leev;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leev;	a	$values
	m	()V	<clinit>	<clinit>
c	eew	net/minecraft/world/level/block/state/properties/DoorHingeSide
	f	Leew;	a	LEFT
	f	Leew;	b	RIGHT
	f	[Leew;	c	$VALUES
	m	()[Leew;	values	values
	m	(Ljava/lang/String;)Leew;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leew;	a	$values
	m	()V	<clinit>	<clinit>
c	eex	net/minecraft/world/level/block/state/properties/DoubleBlockHalf
	f	Leex;	a	UPPER
	f	Leex;	b	LOWER
	f	Ljh;	c	directionToOther
	f	[Leex;	d	$VALUES
	m	()[Leex;	values	values
	m	(Ljava/lang/String;)Leex;	valueOf	valueOf
	m	(Ljava/lang/String;ILjh;)V	<init>	<init>
	m	()Ljh;	a	getDirectionToOther
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Leex;	b	getOtherHalf
	m	()[Leex;	d	$values
	m	()V	<clinit>	<clinit>
c	eey	net/minecraft/world/level/block/state/properties/DripstoneThickness
	f	Leey;	a	TIP_MERGE
	f	Leey;	b	TIP
	f	Leey;	c	FRUSTUM
	f	Leey;	d	MIDDLE
	f	Leey;	e	BASE
	f	Ljava/lang/String;	f	name
	f	[Leey;	g	$VALUES
	m	()[Leey;	values	values
	m	(Ljava/lang/String;)Leey;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leey;	a	$values
	m	()V	<clinit>	<clinit>
c	eez	net/minecraft/world/level/block/state/properties/EnumProperty
	f	Ljava/util/List;	a	values
	f	Ljava/util/Map;	b	names
	f	[I	c	ordinalToIndex
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	getPossibleValues
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	m	(Ljava/lang/Enum;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Enum;)I	b	getInternalIndex
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;Ljava/lang/Class;)Leez;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Leez;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Leez;	a	create
	m	(Ljava/lang/String;Ljava/lang/Class;Ljava/util/List;)Leez;	a	create
	m	(Ljava/lang/Comparable;)I	a	getInternalIndex
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	b	getName
	m	(Ljava/lang/Enum;)Z	c	lambda$create$0
c	efa	net/minecraft/world/level/block/state/properties/Half
	f	Lefa;	a	TOP
	f	Lefa;	b	BOTTOM
	f	Ljava/lang/String;	c	name
	f	[Lefa;	d	$VALUES
	m	()[Lefa;	values	values
	m	(Ljava/lang/String;)Lefa;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefa;	a	$values
	m	()V	<clinit>	<clinit>
c	efb	net/minecraft/world/level/block/state/properties/IntegerProperty
	f	Lit/unimi/dsi/fastutil/ints/IntImmutableList;	a	values
	f	I	b	min
	f	I	c	max
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()Ljava/util/List;	a	getPossibleValues
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	generateHashCode
	m	(Ljava/lang/String;II)Lefb;	a	create
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	m	(Ljava/lang/Integer;)Ljava/lang/String;	a	getName
	m	(Ljava/lang/Integer;)I	b	getInternalIndex
	m	(Ljava/lang/Comparable;)I	a	getInternalIndex
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	b	getName
c	efc	net/minecraft/world/level/block/state/properties/NoteBlockInstrument
	f	Lefc;	a	HARP
	f	Lefc;	b	BASEDRUM
	f	Lefc;	c	SNARE
	f	Lefc;	d	HAT
	f	Lefc;	e	BASS
	f	Lefc;	f	FLUTE
	f	Lefc;	g	BELL
	f	Lefc;	h	GUITAR
	f	Lefc;	i	CHIME
	f	Lefc;	j	XYLOPHONE
	f	Lefc;	k	IRON_XYLOPHONE
	f	Lefc;	l	COW_BELL
	f	Lefc;	m	DIDGERIDOO
	f	Lefc;	n	BIT
	f	Lefc;	o	BANJO
	f	Lefc;	p	PLING
	f	Lefc;	q	ZOMBIE
	f	Lefc;	r	SKELETON
	f	Lefc;	s	CREEPER
	f	Lefc;	t	DRAGON
	f	Lefc;	u	WITHER_SKELETON
	f	Lefc;	v	PIGLIN
	f	Lefc;	w	CUSTOM_HEAD
	f	Ljava/lang/String;	x	name
	f	Ljl;	y	soundEvent
	f	Lefc$a;	z	type
	f	[Lefc;	A	$VALUES
	m	()[Lefc;	values	values
	m	(Ljava/lang/String;)Lefc;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ljl;Lefc$a;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Ljl;	a	getSoundEvent
	m	()Z	b	isTunable
	m	()Z	d	hasCustomSound
	m	()Z	e	worksAboveNoteBlock
	m	()[Lefc;	f	$values
	m	()V	<clinit>	<clinit>
c	efc$a	net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type
	f	Lefc$a;	a	BASE_BLOCK
	f	Lefc$a;	b	MOB_HEAD
	f	Lefc$a;	c	CUSTOM
	f	[Lefc$a;	d	$VALUES
	m	()[Lefc$a;	values	values
	m	(Ljava/lang/String;)Lefc$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lefc$a;	a	$values
	m	()V	<clinit>	<clinit>
c	efd	net/minecraft/world/level/block/state/properties/PistonType
	f	Lefd;	a	DEFAULT
	f	Lefd;	b	STICKY
	f	Ljava/lang/String;	c	name
	f	[Lefd;	d	$VALUES
	m	()[Lefd;	values	values
	m	(Ljava/lang/String;)Lefd;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefd;	a	$values
	m	()V	<clinit>	<clinit>
c	efe	net/minecraft/world/level/block/state/properties/Property
	f	Ljava/lang/Class;	a	clazz
	f	Ljava/lang/String;	b	name
	f	Ljava/lang/Integer;	c	hashCode
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Lcom/mojang/serialization/Codec;	e	valueCodec
	m	(Ljava/lang/String;Ljava/lang/Class;)V	<init>	<init>
	m	(Ljava/lang/Comparable;)Lefe$a;	c	value
	m	(Leed;)Lefe$a;	a	value
	m	()Ljava/util/stream/Stream;	c	getAllValues
	m	()Lcom/mojang/serialization/Codec;	d	codec
	m	()Lcom/mojang/serialization/Codec;	e	valueCodec
	m	()Ljava/lang/String;	f	getName
	m	()Ljava/lang/Class;	g	getValueClass
	m	()Ljava/util/List;	a	getPossibleValues
	m	(Ljava/lang/Comparable;)Ljava/lang/String;	b	getName
	m	(Ljava/lang/String;)Ljava/util/Optional;	b	getValue
	m	(Ljava/lang/Comparable;)I	a	getInternalIndex
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()I	b	generateHashCode
	m	(Lcom/mojang/serialization/DynamicOps;Leed;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	parseValue
	m	(Leed;Ljava/lang/Comparable;)Leed;	a	lambda$parseValue$3
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$new$2
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$new$1
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$new$0
c	efe$a	net/minecraft/world/level/block/state/properties/Property$Value
	f	Lefe;	a	property
	f	Ljava/lang/Comparable;	b	value
	m	(Lefe;Ljava/lang/Comparable;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lefe;	a	property
	m	()Ljava/lang/Comparable;	b	value
c	eff	net/minecraft/world/level/block/state/properties/RailShape
	f	Leff;	a	NORTH_SOUTH
	f	Leff;	b	EAST_WEST
	f	Leff;	c	ASCENDING_EAST
	f	Leff;	d	ASCENDING_WEST
	f	Leff;	e	ASCENDING_NORTH
	f	Leff;	f	ASCENDING_SOUTH
	f	Leff;	g	SOUTH_EAST
	f	Leff;	h	SOUTH_WEST
	f	Leff;	i	NORTH_WEST
	f	Leff;	j	NORTH_EAST
	f	Ljava/lang/String;	k	name
	f	[Leff;	l	$VALUES
	m	()[Leff;	values	values
	m	(Ljava/lang/String;)Leff;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	toString	toString
	m	()Z	b	isSlope
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leff;	d	$values
	m	()V	<clinit>	<clinit>
c	efg	net/minecraft/world/level/block/state/properties/RedstoneSide
	f	Lefg;	a	UP
	f	Lefg;	b	SIDE
	f	Lefg;	c	NONE
	f	Ljava/lang/String;	d	name
	f	[Lefg;	e	$VALUES
	m	()[Lefg;	values	values
	m	(Ljava/lang/String;)Lefg;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	a	isConnected
	m	()[Lefg;	b	$values
	m	()V	<clinit>	<clinit>
c	efh	net/minecraft/world/level/block/state/properties/RotationSegment
	f	Lbcn;	a	SEGMENTED_ANGLE16
	f	I	b	MAX_SEGMENT_INDEX
	f	I	c	NORTH_0
	f	I	d	EAST_90
	f	I	e	SOUTH_180
	f	I	f	WEST_270
	m	()V	<init>	<init>
	m	()I	a	getMaxSegmentIndex
	m	(Ljh;)I	a	convertToSegment
	m	(F)I	a	convertToSegment
	m	(I)Ljava/util/Optional;	a	convertToDirection
	m	(I)F	b	convertToDegrees
	m	()V	<clinit>	<clinit>
c	efi	net/minecraft/world/level/block/state/properties/SculkSensorPhase
	f	Lefi;	a	INACTIVE
	f	Lefi;	b	ACTIVE
	f	Lefi;	c	COOLDOWN
	f	Ljava/lang/String;	d	name
	f	[Lefi;	e	$VALUES
	m	()[Lefi;	values	values
	m	(Ljava/lang/String;)Lefi;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefi;	a	$values
	m	()V	<clinit>	<clinit>
c	efj	net/minecraft/world/level/block/state/properties/SlabType
	f	Lefj;	a	TOP
	f	Lefj;	b	BOTTOM
	f	Lefj;	c	DOUBLE
	f	Ljava/lang/String;	d	name
	f	[Lefj;	e	$VALUES
	m	()[Lefj;	values	values
	m	(Ljava/lang/String;)Lefj;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefj;	a	$values
	m	()V	<clinit>	<clinit>
c	efk	net/minecraft/world/level/block/state/properties/StairsShape
	f	Lefk;	a	STRAIGHT
	f	Lefk;	b	INNER_LEFT
	f	Lefk;	c	INNER_RIGHT
	f	Lefk;	d	OUTER_LEFT
	f	Lefk;	e	OUTER_RIGHT
	f	Ljava/lang/String;	f	name
	f	[Lefk;	g	$VALUES
	m	()[Lefk;	values	values
	m	(Ljava/lang/String;)Lefk;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefk;	a	$values
	m	()V	<clinit>	<clinit>
c	efl	net/minecraft/world/level/block/state/properties/StructureMode
	f	Lefl;	a	SAVE
	f	Lefl;	b	LOAD
	f	Lefl;	c	CORNER
	f	Lefl;	d	DATA
	f	Lcom/mojang/serialization/Codec;	e	LEGACY_CODEC
	f	Ljava/lang/String;	f	name
	f	Lxo;	g	displayName
	f	[Lefl;	h	$VALUES
	m	()[Lefl;	values	values
	m	(Ljava/lang/String;)Lefl;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lxo;	a	getDisplayName
	m	()[Lefl;	b	$values
	m	()V	<clinit>	<clinit>
c	efm	net/minecraft/world/level/block/state/properties/TestBlockMode
	f	Lefm;	a	START
	f	Lefm;	b	LOG
	f	Lefm;	c	FAIL
	f	Lefm;	d	ACCEPT
	f	Ljava/util/function/IntFunction;	g	BY_ID
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lzm;	f	STREAM_CODEC
	f	I	h	id
	f	Ljava/lang/String;	i	name
	f	Lxo;	j	displayName
	f	Lxo;	k	detailedMessage
	f	[Lefm;	l	$VALUES
	m	()[Lefm;	values	values
	m	(Ljava/lang/String;)Lefm;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lxo;	a	getDisplayName
	m	()Lxo;	b	getDetailedMessage
	m	(Lefm;)I	a	lambda$static$1
	m	(Lefm;)I	b	lambda$static$0
	m	()[Lefm;	d	$values
	m	()V	<clinit>	<clinit>
c	efn	net/minecraft/world/level/block/state/properties/Tilt
	f	Lefn;	a	NONE
	f	Lefn;	b	UNSTABLE
	f	Lefn;	c	PARTIAL
	f	Lefn;	d	FULL
	f	Ljava/lang/String;	e	name
	f	Z	f	causesVibration
	f	[Lefn;	g	$VALUES
	m	()[Lefn;	values	values
	m	(Ljava/lang/String;)Lefn;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Z	a	causesVibration
	m	()[Lefn;	b	$values
	m	()V	<clinit>	<clinit>
c	efo	net/minecraft/world/level/block/state/properties/WallSide
	f	Lefo;	a	NONE
	f	Lefo;	b	LOW
	f	Lefo;	c	TALL
	f	Ljava/lang/String;	d	name
	f	[Lefo;	e	$VALUES
	m	()[Lefo;	values	values
	m	(Ljava/lang/String;)Lefo;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lefo;	a	$values
	m	()V	<clinit>	<clinit>
c	efp	net/minecraft/world/level/block/state/properties/WoodType
	f	Ljava/lang/String;	n	name
	f	Leeq;	o	setType
	f	Ldxx;	p	soundType
	f	Ldxx;	q	hangingSignSoundType
	f	Layy;	r	fenceGateClose
	f	Layy;	s	fenceGateOpen
	f	Ljava/util/Map;	t	TYPES
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lefp;	b	OAK
	f	Lefp;	c	SPRUCE
	f	Lefp;	d	BIRCH
	f	Lefp;	e	ACACIA
	f	Lefp;	f	CHERRY
	f	Lefp;	g	JUNGLE
	f	Lefp;	h	DARK_OAK
	f	Lefp;	i	PALE_OAK
	f	Lefp;	j	CRIMSON
	f	Lefp;	k	WARPED
	f	Lefp;	l	MANGROVE
	f	Lefp;	m	BAMBOO
	m	(Ljava/lang/String;Leeq;)V	<init>	<init>
	m	(Ljava/lang/String;Leeq;Ldxx;Ldxx;Layy;Layy;)V	<init>	<init>
	m	(Lefp;)Lefp;	a	register
	m	()Ljava/util/stream/Stream;	a	values
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Leeq;	c	setType
	m	()Ldxx;	d	soundType
	m	()Ldxx;	e	hangingSignSoundType
	m	()Layy;	f	fenceGateClose
	m	()Layy;	g	fenceGateOpen
	m	()V	<clinit>	<clinit>
c	efq	net/minecraft/world/level/block/state/properties/package-info
c	efr	net/minecraft/world/level/border/BorderChangeListener
	m	(Left;D)V	a	onBorderSizeSet
	m	(Left;DDJ)V	a	onBorderSizeLerping
	m	(Left;DD)V	a	onBorderCenterSet
	m	(Left;I)V	a	onBorderSetWarningTime
	m	(Left;I)V	b	onBorderSetWarningBlocks
	m	(Left;D)V	b	onBorderSetDamagePerBlock
	m	(Left;D)V	c	onBorderSetDamageSafeZOne
c	efr$a	net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener
	f	Left;	a	worldBorder
	m	(Left;)V	<init>	<init>
	m	(Left;D)V	a	onBorderSizeSet
	m	(Left;DDJ)V	a	onBorderSizeLerping
	m	(Left;DD)V	a	onBorderCenterSet
	m	(Left;I)V	a	onBorderSetWarningTime
	m	(Left;I)V	b	onBorderSetWarningBlocks
	m	(Left;D)V	b	onBorderSetDamagePerBlock
	m	(Left;D)V	c	onBorderSetDamageSafeZOne
c	efs	net/minecraft/world/level/border/BorderStatus
	f	Lefs;	a	GROWING
	f	Lefs;	b	SHRINKING
	f	Lefs;	c	STATIONARY
	f	I	d	color
	f	[Lefs;	e	$VALUES
	m	()[Lefs;	values	values
	m	(Ljava/lang/String;)Lefs;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	()I	a	getColor
	m	()[Lefs;	b	$values
	m	()V	<clinit>	<clinit>
c	eft	net/minecraft/world/level/border/WorldBorder
	f	D	b	MAX_SIZE
	f	D	c	MAX_CENTER_COORDINATE
	f	Ljava/util/List;	a	listeners
	f	D	e	damagePerBlock
	f	D	f	damageSafeZone
	f	I	g	warningTime
	f	I	h	warningBlocks
	f	D	i	centerX
	f	D	j	centerZ
	f	I	k	absoluteMaxSize
	f	Left$a;	l	extent
	f	Left$d;	d	DEFAULT_SETTINGS
	m	()V	<init>	<init>
	m	(Ljb;)Z	a	isWithinBounds
	m	(Lfis;)Z	a	isWithinBounds
	m	(Ldlz;)Z	a	isWithinBounds
	m	(Lfin;)Z	a	isWithinBounds
	m	(DDDD)Z	a	isWithinBounds
	m	(DD)Z	a	isWithinBounds
	m	(DDD)Z	a	isWithinBounds
	m	(Ljb;)Ljb;	b	clampToBounds
	m	(Lfis;)Ljb;	b	clampToBounds
	m	(DDD)Ljb;	b	clampToBounds
	m	(Lfis;)Lfis;	c	clampVec3ToBound
	m	(DDD)Lfis;	c	clampVec3ToBound
	m	(Lbzm;)D	a	getDistanceToBorder
	m	()Lfjm;	c	getCollisionShape
	m	(DD)D	b	getDistanceToBorder
	m	(DD)Ljava/util/List;	c	closestBorder
	m	(Lbzm;Lfin;)Z	a	isInsideCloseToBorder
	m	()Lefs;	d	getStatus
	m	()D	e	getMinX
	m	()D	f	getMinZ
	m	()D	g	getMaxX
	m	()D	h	getMaxZ
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	m	(DD)V	d	setCenter
	m	()D	i	getSize
	m	()J	j	getLerpRemainingTime
	m	()D	k	getLerpTarget
	m	(D)V	a	setSize
	m	(DDJ)V	a	lerpSizeBetween
	m	()Ljava/util/List;	l	getListeners
	m	(Lefr;)V	a	addListener
	m	(Lefr;)V	b	removeListener
	m	(I)V	a	setAbsoluteMaxSize
	m	()I	m	getAbsoluteMaxSize
	m	()D	n	getDamageSafeZone
	m	(D)V	b	setDamageSafeZone
	m	()D	o	getDamagePerBlock
	m	(D)V	c	setDamagePerBlock
	m	()D	p	getLerpSpeed
	m	()I	q	getWarningTime
	m	(I)V	b	setWarningTime
	m	()I	r	getWarningBlocks
	m	(I)V	c	setWarningBlocks
	m	()V	s	tick
	m	()Left$d;	t	createSettings
	m	(Left$d;)V	a	applySettings
	m	(Left$b;)D	a	lambda$closestBorder$0
	m	()V	<clinit>	<clinit>
c	eft$a	net/minecraft/world/level/border/WorldBorder$BorderExtent
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lefs;	i	getStatus
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Left$a;	l	update
	m	()Lfjm;	m	getCollisionShape
c	eft$b	net/minecraft/world/level/border/WorldBorder$DistancePerDirection
	f	Ljh;	a	direction
	f	D	b	distance
	m	(Ljh;D)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljh;	a	direction
	m	()D	b	distance
c	eft$c	net/minecraft/world/level/border/WorldBorder$MovingBorderExtent
	f	D	b	from
	f	D	c	to
	f	J	d	lerpEnd
	f	J	e	lerpBegin
	f	D	f	lerpDuration
	f	Left;	a	this$0
	m	(Left;DDJ)V	<init>	<init>
	m	()D	a	getMinX
	m	()D	c	getMinZ
	m	()D	b	getMaxX
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()Lefs;	i	getStatus
	m	()V	k	onCenterChange
	m	()V	j	onAbsoluteMaxSizeChange
	m	()Left$a;	l	update
	m	()Lfjm;	m	getCollisionShape
c	eft$d	net/minecraft/world/level/border/WorldBorder$Settings
	f	D	a	centerX
	f	D	b	centerZ
	f	D	c	damagePerBlock
	f	D	d	safeZone
	f	I	e	warningBlocks
	f	I	f	warningTime
	f	D	g	size
	f	J	h	sizeLerpTime
	f	D	i	sizeLerpTarget
	m	(DDDDIIDJD)V	<init>	<init>
	m	(Left;)V	<init>	<init>
	m	()D	a	getCenterX
	m	()D	b	getCenterZ
	m	()D	c	getDamagePerBlock
	m	()D	d	getSafeZone
	m	()I	e	getWarningBlocks
	m	()I	f	getWarningTime
	m	()D	g	getSize
	m	()J	h	getSizeLerpTime
	m	()D	i	getSizeLerpTarget
	m	(Lcom/mojang/serialization/DynamicLike;Left$d;)Left$d;	a	read
	m	(Lui;)V	a	write
c	eft$e	net/minecraft/world/level/border/WorldBorder$StaticBorderExtent
	f	D	b	size
	f	D	c	minX
	f	D	d	minZ
	f	D	e	maxX
	f	D	f	maxZ
	f	Lfjm;	g	shape
	f	Left;	a	this$0
	m	(Left;D)V	<init>	<init>
	m	()D	a	getMinX
	m	()D	b	getMaxX
	m	()D	c	getMinZ
	m	()D	d	getMaxZ
	m	()D	e	getSize
	m	()Lefs;	i	getStatus
	m	()D	f	getLerpSpeed
	m	()J	g	getLerpRemainingTime
	m	()D	h	getLerpTarget
	m	()V	n	updateBox
	m	()V	j	onAbsoluteMaxSizeChange
	m	()V	k	onCenterChange
	m	()Left$a;	l	update
	m	()Lfjm;	m	getCollisionShape
c	efu	net/minecraft/world/level/border/package-info
c	efv	net/minecraft/world/level/chunk/BlockColumn
	m	(I)Leeb;	a	getBlock
	m	(ILeeb;)V	a	setBlock
c	efw	net/minecraft/world/level/chunk/BulkSectionAccess
	f	Ldmv;	a	level
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	b	acquiredSections
	f	Legj;	c	lastSection
	f	J	d	lastSectionKey
	m	(Ldmv;)V	<init>	<init>
	m	(Ljb;)Legj;	a	getSection
	m	(Ljb;)Leeb;	b	getBlockState
	m	()V	close	close
	m	(Ljb;IJ)Legj;	a	lambda$getSection$0
c	efx	net/minecraft/world/level/chunk/CarvingMask
	f	I	a	minY
	f	Ljava/util/BitSet;	b	mask
	f	Lefx$a;	c	additionalMask
	m	(II)V	<init>	<init>
	m	(Lefx$a;)V	a	setAdditionalMask
	m	([JI)V	<init>	<init>
	m	(III)I	c	getIndex
	m	(III)V	a	set
	m	(III)Z	b	get
	m	(Ldlz;)Ljava/util/stream/Stream;	a	stream
	m	()[J	a	toArray
	m	(Ldlz;I)Ljb;	a	lambda$stream$1
	m	(III)Z	d	lambda$new$0
c	efx$a	net/minecraft/world/level/chunk/CarvingMask$Mask
	m	(III)Z	test	test
c	efy	net/minecraft/world/level/chunk/ChunkAccess
	f	I	a	NO_FILLED_SECTION
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	o	EMPTY_REFERENCE_SET
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	b	postProcessing
	f	Z	p	unsaved
	f	Z	q	isLightCorrect
	f	Ldlz;	c	chunkPos
	f	J	r	inhabitedTime
	f	Ldny;	s	carverBiomeSettings
	f	Leke;	d	noiseChunk
	f	Legv;	e	upgradeData
	f	Leld;	f	blendingData
	f	Ljava/util/Map;	h	heightmaps
	f	Lezv;	i	skyLightSources
	f	Ljava/util/Map;	t	structureStarts
	f	Ljava/util/Map;	u	structuresRefences
	f	Ljava/util/Map;	j	pendingBlockEntities
	f	Ljava/util/Map;	k	blockEntities
	f	Ldmw;	l	levelHeightAccessor
	f	[Legj;	m	sections
	m	(Ldlz;Legv;Ldmw;Ljy;J[Legj;Leld;)V	<init>	<init>
	m	(Ljy;[Legj;)V	a	replaceMissingSections
	m	(I)Leje;	a	getListenerRegistry
	m	(Ljb;Leeb;)Leeb;	a	setBlockState
	m	(Ljb;Leeb;I)Leeb;	a	setBlockState
	m	(Leaz;)V	a	setBlockEntity
	m	(Lbzm;)V	a	addEntity
	m	()I	a	getHighestFilledSectionIndex
	m	()I	b	getHighestSectionPosition
	m	()Ljava/util/Set;	c	getBlockEntitiesPos
	m	()[Legj;	d	getSections
	m	(I)Legj;	b	getSection
	m	()Ljava/util/Collection;	e	getHeightmaps
	m	(Leka$a;[J)V	a	setHeightmap
	m	(Leka$a;)Leka;	a	getOrCreateHeightmapUnprimed
	m	(Leka$a;)Z	b	hasPrimedHeightmap
	m	(Leka$a;II)I	a	getHeight
	m	()Ldlz;	f	getPos
	m	(Leuy;)Levg;	a	getStartForStructure
	m	(Leuy;Levg;)V	a	setStartForStructure
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Ljava/util/Map;)V	a	setAllStarts
	m	(Leuy;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
	m	(Leuy;J)V	a	addReferenceForStructure
	m	()Ljava/util/Map;	h	getAllReferences
	m	(Ljava/util/Map;)V	b	setAllReferences
	m	(II)Z	a	isYSpaceEmpty
	m	()V	i	markUnsaved
	m	()Z	j	tryMarkSaved
	m	()Z	k	isUnsaved
	m	()Legz;	n	getPersistedStatus
	m	()Legz;	o	getHighestGeneratedStatus
	m	(Ljb;)V	d	removeBlockEntity
	m	(Ljb;)V	e	markPosForPostprocessing
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	p	getPostProcessing
	m	(Lit/unimi/dsi/fastutil/shorts/ShortList;I)V	a	addPackedPostProcess
	m	(Lui;)V	a	setBlockEntityNbt
	m	(Ljb;)Lui;	f	getBlockEntityNbt
	m	(Ljb;Ljn$a;)Lui;	a	getBlockEntityNbtForSaving
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
	m	()Lfkn;	q	getBlockTicks
	m	()Lfkn;	r	getFluidTicks
	m	()Z	s	canBeSerialized
	m	(J)Lefy$b;	a	getTicksForSerialization
	m	()Legv;	t	getUpgradeData
	m	()Z	u	isOldNoiseGeneration
	m	()Leld;	v	getBlendingData
	m	()J	w	getInhabitedTime
	m	(J)V	b	incrementInhabitedTime
	m	(J)V	c	setInhabitedTime
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList;	a	getOrCreateOffsetList
	m	()Z	x	isLightCorrect
	m	(Z)V	a	setLightCorrect
	m	()I	L_	getMinY
	m	()I	M_	getHeight
	m	(Ljava/util/function/Function;)Leke;	a	getOrCreateNoiseChunk
	m	(Ljava/util/function/Supplier;)Ldny;	a	carverBiome
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Ldoa;Ldog$f;)V	a	fillBiomesFromNoise
	m	()Z	y	hasAnyStructureReferences
	m	()Lejo;	z	getBelowZeroRetrogen
	m	()Z	A	isUpgrading
	m	()Ldmw;	B	getHeightAccessorForGeneration
	m	()V	C	initializeLightSources
	m	()Lezv;	D	getSkyLightSources
	m	(Ldlz;)Lbci$f;	a	problemPath
	m	()Lbci$f;	E	problemPath
	m	(III)Ljava/lang/String;	a	lambda$getNoiseBiome$3
	m	(Leeb;)Z	a	lambda$findBlockLightSources$2
	m	(Leuy;)Lit/unimi/dsi/fastutil/longs/LongSet;	c	lambda$addReferenceForStructure$1
	m	(Leka$a;)Leka;	c	lambda$getOrCreateHeightmapUnprimed$0
	m	()V	<clinit>	<clinit>
c	efy$a	net/minecraft/world/level/chunk/ChunkAccess$ChunkPathElement
	f	Ldlz;	a	pos
	m	(Ldlz;)V	<init>	<init>
	m	()Ljava/lang/String;	get	get
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldlz;	a	pos
c	efy$b	net/minecraft/world/level/chunk/ChunkAccess$PackedTicks
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/List;	b	fluids
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	blocks
	m	()Ljava/util/List;	b	fluids
c	efz	net/minecraft/world/level/chunk/ChunkGenerator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldob;	b	biomeSource
	f	Ljava/util/function/Supplier;	c	featuresPerStep
	f	Ljava/util/function/Function;	d	generationSettingsGetter
	m	(Ldob;)V	<init>	<init>
	m	(Ldob;Ljava/util/function/Function;)V	<init>	<init>
	m	()V	a	validate
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	(Ljn;Leko;J)Lega;	a	createState
	m	()Ljava/util/Optional;	c	getTypeNameForDataFixer
	m	(Leko;Lelc;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
	m	(Lauj;JLeko;Ldnz;Ldnq;Lefy;)V	a	applyCarvers
	m	(Laub;Ljp;Ljb;IZ)Lcom/mojang/datafixers/util/Pair;	a	findNearestMapStructure
	m	(Ljava/util/Set;Laub;Ldnq;Ljb;ZLevs;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
	m	(Ljava/util/Set;Ldmx;Ldnq;IIIZJLevt;)Lcom/mojang/datafixers/util/Pair;	a	getNearestGeneratedStructure
	m	(Ljava/util/Set;Ldmx;Ldnq;ZLevv;Ldlz;)Lcom/mojang/datafixers/util/Pair;	a	getStructureGeneratingAt
	m	(Ldnq;Levg;)Z	a	tryAddReference
	m	(Ldnt;Lefy;Ldnq;)V	a	applyBiomeDecoration
	m	(Lefy;)Leuq;	a	getWritableArea
	m	(Lauj;Ldnq;Leko;Lefy;)V	a	buildSurface
	m	(Lauj;)V	a	spawnOriginalMobs
	m	(Ldmw;)I	a	getSpawnHeight
	m	()Ldob;	d	getBiomeSource
	m	()I	e	getGenDepth
	m	(Ljl;Ldnq;Lcap;Ljb;)Lbvt;	a	getMobsAt
	m	(Ljz;Lega;Ldnq;Lefy;Lezb;Lamd;)V	a	createStructures
	m	(Leve$a;Ldnq;Ljz;Leko;Lezb;JLefy;Ldlz;Lke;Lamd;)Z	a	tryGenerateStructure
	m	(Ldnq;Lefy;Lke;Leuy;)I	a	fetchReferences
	m	(Ldnt;Ldnq;Lefy;)V	a	createReferences
	m	(Lelc;Leko;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	(IILeka$a;Ldmw;Leko;)I	a	getBaseHeight
	m	(IILdmw;Leko;)Ldng;	a	getBaseColumn
	m	(IILeka$a;Ldmw;Leko;)I	b	getFirstFreeHeight
	m	(IILeka$a;Ldmw;Leko;)I	c	getFirstOccupiedHeight
	m	(Ljava/util/List;Leko;Ljb;)V	a	addDebugScreenInfo
	m	(Ljl;)Ldny;	a	getBiomeGenerationSettings
	m	(Levg;)Ljava/lang/String;	a	lambda$createReferences$18
	m	(Levg;)Ljava/lang/String;	b	lambda$createReferences$17
	m	(Ljava/util/Optional;Levg;)Ljava/lang/String;	a	lambda$createReferences$16
	m	(Levg;Ljy;)Ljava/lang/String;	a	lambda$createReferences$15
	m	(Ldnq;Lke;Lefy;Lega;Ldlz;Ljz;Leko;Lezb;Lamd;Ljl;)V	a	lambda$createStructures$14
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljava/util/function/Predicate;Levg;)V	a	lambda$getMobsAt$13
	m	(Ljb;Levg;)Z	a	lambda$getMobsAt$12
	m	(Ldnq;Ljb;Levg;)Z	a	lambda$getMobsAt$11
	m	(Ljy;Leuc;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$10
	m	(Lit/unimi/dsi/fastutil/ints/IntSet;Ldoh$b;Leuc;)V	a	lambda$applyBiomeDecoration$9
	m	(Ldnt;Ldnq;Lekz;Lefy;Ldlz;Levg;)V	a	lambda$applyBiomeDecoration$8
	m	(Ljy;Leuy;)Ljava/lang/String;	a	lambda$applyBiomeDecoration$7
	m	(Ldnt;Ljava/util/Set;Ldlz;)V	a	lambda$applyBiomeDecoration$6
	m	(Leuy;)Ljava/lang/Integer;	a	lambda$applyBiomeDecoration$5
	m	(Levv;)Ljava/util/Set;	a	lambda$findNearestMapStructure$4
	m	(Lefy;Leko;)Lefy;	a	lambda$createBiomes$3
	m	(Ldob;Ljava/util/function/Function;)Ljava/util/List;	a	lambda$new$2
	m	(Ljava/util/function/Function;Ljl;)Ljava/util/List;	a	lambda$new$1
	m	(Ljl;)Ldny;	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	ega	net/minecraft/world/level/chunk/ChunkGeneratorStructureState
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Leko;	b	randomState
	f	Ldob;	c	biomeSource
	f	J	d	levelSeed
	f	J	e	concentricRingsSeed
	f	Ljava/util/Map;	f	placementsForStructure
	f	Ljava/util/Map;	g	ringPositions
	f	Z	h	hasGeneratedPositions
	f	Ljava/util/List;	i	possibleStructureSets
	m	(Leko;JLdob;Ljava/util/stream/Stream;)Lega;	a	createForFlat
	m	(Leko;JLdob;Ljn;)Lega;	a	createForNormal
	m	(Leve;Ldob;)Z	a	hasBiomesForStructureSet
	m	(Leko;Ldob;JJLjava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	possibleStructureSets
	m	()V	e	generatePositions
	m	(Ljl;Levs;)Ljava/util/concurrent/CompletableFuture;	a	generateRingPositions
	m	()V	b	ensureStructuresGenerated
	m	(Levs;)Ljava/util/List;	a	getRingPositionsFor
	m	(Ljl;)Ljava/util/List;	a	getPlacementsForStructure
	m	()Leko;	c	randomState
	m	(Ljl;III)Z	a	hasStructureChunkInRange
	m	()J	d	getLevelSeed
	m	(Lcom/google/common/base/Stopwatch;Ljl;Ljava/util/List;)Ljava/util/List;	a	lambda$generateRingPositions$6
	m	(IILjp;Lbck;)Ldlz;	a	lambda$generateRingPositions$5
	m	(Ljava/util/Set;Ljl;)V	a	lambda$generatePositions$4
	m	(Leuy;)Ljava/util/List;	a	lambda$generatePositions$3
	m	(Leve$a;)Ljava/util/stream/Stream;	a	lambda$hasBiomesForStructureSet$2
	m	(Ldob;Ljl$c;)Z	a	lambda$createForNormal$1
	m	(Ldob;Ljl;)Z	a	lambda$createForFlat$0
	m	()V	<clinit>	<clinit>
c	egb	net/minecraft/world/level/chunk/ChunkGenerators
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
c	egc	net/minecraft/world/level/chunk/ChunkSource
	m	()V	<init>	<init>
	m	(IIZ)Legi;	a	getChunk
	m	(II)Legi;	a	getChunkNow
	m	(II)Legk;	c	getChunkForLighting
	m	(II)Z	b	hasChunk
	m	(IILegz;Z)Lefy;	a	getChunk
	m	(Ljava/util/function/BooleanSupplier;Z)V	a	tick
	m	(IIIZ)V	a	onSectionEmptinessChanged
	m	()Ljava/lang/String;	e	gatherStats
	m	()I	j	getLoadedChunksCount
	m	()V	close	close
	m	()Lfaa;	q	getLightEngine
	m	(Z)V	b	setSpawnSettings
	m	(Ldlz;Z)Z	a	updateChunkForced
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	k	getForceLoadedChunks
c	egd	net/minecraft/world/level/chunk/DataLayer
	f	I	a	LAYER_COUNT
	f	I	b	LAYER_SIZE
	f	I	c	SIZE
	f	I	e	NIBBLE_SIZE
	f	[B	d	data
	f	I	f	defaultValue
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	([B)V	<init>	<init>
	m	(III)I	a	get
	m	(IIII)V	a	set
	m	(III)I	b	getIndex
	m	(I)I	d	get
	m	(II)V	a	set
	m	(I)I	e	getNibbleIndex
	m	(I)I	f	getByteIndex
	m	(I)V	a	fill
	m	(I)B	g	packFilled
	m	()[B	a	getData
	m	()Legd;	b	copy
	m	()Ljava/lang/String;	toString	toString
	m	(I)Ljava/lang/String;	b	layerToString
	m	()Z	c	isDefinitelyHomogenous
	m	(I)Z	c	isDefinitelyFilledWith
	m	()Z	d	isEmpty
c	ege	net/minecraft/world/level/chunk/EmptyLevelChunk
	f	Ljl;	n	biome
	m	(Ldmu;Ldlz;Ljl;)V	<init>	<init>
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;Leeb;I)Leeb;	a	setBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(Ljb;)I	i	getLightEmission
	m	(Ljb;Legi$b;)Leaz;	a	getBlockEntity
	m	(Leaz;)V	b	addAndRegisterBlockEntity
	m	(Leaz;)V	a	setBlockEntity
	m	(Ljb;)V	d	removeBlockEntity
	m	()Z	F	isEmpty
	m	(II)Z	a	isYSpaceEmpty
	m	()Latp;	G	getFullStatus
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
c	egf	net/minecraft/world/level/chunk/GlobalPalette
	f	Ljq;	a	registry
	m	(Ljq;)V	<init>	<init>
	m	(ILjq;Legp;Ljava/util/List;)Lego;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	()I	a	getSerializedSize
	m	()I	b	getSize
	m	(Legp;)Lego;	a	copy
c	egg	net/minecraft/world/level/chunk/HashMapPalette
	f	Ljq;	a	registry
	f	Lbaw;	b	values
	f	Legp;	c	resizeHandler
	f	I	d	bits
	m	(Ljq;ILegp;Ljava/util/List;)V	<init>	<init>
	m	(Ljq;ILegp;)V	<init>	<init>
	m	(Ljq;ILegp;Lbaw;)V	<init>	<init>
	m	(ILjq;Legp;Ljava/util/List;)Lego;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	()I	a	getSerializedSize
	m	()Ljava/util/List;	c	getEntries
	m	()I	b	getSize
	m	(Legp;)Lego;	a	copy
c	egh	net/minecraft/world/level/chunk/ImposterProtoChunk
	f	Legi;	n	wrapped
	f	Z	o	allowWrites
	m	(Legi;Z)V	<init>	<init>
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(I)Legj;	b	getSection
	m	(Ljb;Leeb;I)Leeb;	a	setBlockState
	m	(Leaz;)V	a	setBlockEntity
	m	(Lbzm;)V	a	addEntity
	m	(Legz;)V	a	setPersistedStatus
	m	()[Legj;	d	getSections
	m	(Leka$a;[J)V	a	setHeightmap
	m	(Leka$a;)Leka$a;	c	fixType
	m	(Leka$a;)Leka;	a	getOrCreateHeightmapUnprimed
	m	(Leka$a;II)I	a	getHeight
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
	m	()Ldlz;	f	getPos
	m	(Leuy;)Levg;	a	getStartForStructure
	m	(Leuy;Levg;)V	a	setStartForStructure
	m	()Ljava/util/Map;	g	getAllStarts
	m	(Ljava/util/Map;)V	a	setAllStarts
	m	(Leuy;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
	m	(Leuy;J)V	a	addReferenceForStructure
	m	()Ljava/util/Map;	h	getAllReferences
	m	(Ljava/util/Map;)V	b	setAllReferences
	m	()V	i	markUnsaved
	m	()Z	s	canBeSerialized
	m	()Z	j	tryMarkSaved
	m	()Z	k	isUnsaved
	m	()Legz;	n	getPersistedStatus
	m	(Ljb;)V	d	removeBlockEntity
	m	(Ljb;)V	e	markPosForPostprocessing
	m	(Lui;)V	a	setBlockEntityNbt
	m	(Ljb;)Lui;	f	getBlockEntityNbt
	m	(Ljb;Ljn$a;)Lui;	a	getBlockEntityNbtForSaving
	m	(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V	a	findBlocks
	m	()Lfkn;	q	getBlockTicks
	m	()Lfkn;	r	getFluidTicks
	m	(J)Lefy$b;	a	getTicksForSerialization
	m	()Leld;	v	getBlendingData
	m	()Lefx;	F	getCarvingMask
	m	()Lefx;	G	getOrCreateCarvingMask
	m	()Legi;	H	getWrapped
	m	()Z	x	isLightCorrect
	m	(Z)V	a	setLightCorrect
	m	(Ldoa;Ldog$f;)V	a	fillBiomesFromNoise
	m	()V	C	initializeLightSources
	m	()Lezv;	D	getSkyLightSources
c	egi	net/minecraft/world/level/chunk/LevelChunk
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Lecx;	o	NULL_TICKER
	f	Ljava/util/Map;	p	tickersInLevel
	f	Z	q	loaded
	f	Ldmu;	r	level
	f	Ljava/util/function/Supplier;	s	fullStatus
	f	Legi$c;	t	postLoad
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	u	gameEventListenerRegistrySections
	f	Lfkf;	v	blockTicks
	f	Lfkf;	w	fluidTicks
	f	Legi$e;	x	unsavedListener
	m	(Ldmu;Ldlz;)V	<init>	<init>
	m	(Ldmu;Ldlz;Legv;Lfkf;Lfkf;J[Legj;Legi$c;Leld;)V	<init>	<init>
	m	(Laub;Legs;Legi$c;)V	<init>	<init>
	m	(Legi$e;)V	a	setUnsavedListener
	m	()V	i	markUnsaved
	m	()Lfkn;	q	getBlockTicks
	m	()Lfkn;	r	getFluidTicks
	m	(J)Lefy$b;	a	getTicksForSerialization
	m	(I)Leje;	a	getListenerRegistry
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(III)Lfal;	a	getFluidState
	m	(Ljb;Leeb;I)Leeb;	a	setBlockState
	m	(Lbzm;)V	a	addEntity
	m	(Ljb;)Leaz;	g	createBlockEntity
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	(Ljb;Legi$b;)Leaz;	a	getBlockEntity
	m	(Leaz;)V	b	addAndRegisterBlockEntity
	m	()Z	M	isInLevel
	m	(Ljb;)Z	h	isTicking
	m	(Leaz;)V	a	setBlockEntity
	m	(Ljb;Ljn$a;)Lui;	a	getBlockEntityNbtForSaving
	m	(Ljb;)V	d	removeBlockEntity
	m	(Leaz;Laub;)V	a	removeGameEventListener
	m	(I)V	c	removeGameEventListenerRegistry
	m	(Ljb;)V	k	removeBlockEntityTicker
	m	()V	H	runPostLoad
	m	()Z	F	isEmpty
	m	(Lwg;Ljava/util/Map;Ljava/util/function/Consumer;)V	a	replaceWithPacketData
	m	(Lwg;)V	a	replaceBiomes
	m	(Z)V	b	setLoaded
	m	()Ldmu;	I	getLevel
	m	()Ljava/util/Map;	J	getBlockEntities
	m	(Laub;)V	a	postProcessGeneration
	m	(Ljb;Lui;)Leaz;	a	promotePendingBlockEntity
	m	(J)V	d	unpackTicks
	m	(Laub;)V	b	registerTickContainerInLevel
	m	(Laub;)V	c	unregisterTickContainerFromLevel
	m	()Legz;	n	getPersistedStatus
	m	()Latp;	G	getFullStatus
	m	(Ljava/util/function/Supplier;)V	b	setFullStatus
	m	()V	K	clearAllBlockEntities
	m	()V	L	registerAllBlockEntitiesAfterLevelLoad
	m	(Leaz;Laub;)V	b	addGameEventListener
	m	(Leaz;)V	c	updateBlockEntityTicker
	m	(Leaz;Leba;)Lecx;	a	createTicker
	m	(Leaz;Leba;Ljb;Legi$d;)Legi$d;	a	lambda$updateBlockEntityTicker$7
	m	(Leaz;)V	d	lambda$registerAllBlockEntitiesAfterLevelLoad$6
	m	(Legi$d;)V	a	lambda$clearAllBlockEntities$5
	m	(Lbci$j;Ljb;Lebb;Lui;)V	a	lambda$replaceWithPacketData$4
	m	(III)Ljava/lang/String;	b	lambda$getFluidState$3
	m	(III)Ljava/lang/String;	c	lambda$getBlockState$2
	m	(Laub;II)Leje;	a	lambda$getListenerRegistry$1
	m	(Ldlz;)V	b	lambda$new$0
	m	()V	<clinit>	<clinit>
c	egi$1	net/minecraft/world/level/chunk/LevelChunk$1
	m	()V	<init>	<init>
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljb;	c	getPos
	m	()Ljava/lang/String;	d	getType
c	egi$a	net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity
	f	Leaz;	b	blockEntity
	f	Leba;	c	ticker
	f	Z	d	loggedInvalidBlockState
	f	Legi;	a	this$0
	m	(Legi;Leaz;Leba;)V	<init>	<init>
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljb;	c	getPos
	m	()Ljava/lang/String;	d	getType
	m	()Ljava/lang/String;	toString	toString
c	egi$b	net/minecraft/world/level/chunk/LevelChunk$EntityCreationType
	f	Legi$b;	a	IMMEDIATE
	f	Legi$b;	b	QUEUED
	f	Legi$b;	c	CHECK
	f	[Legi$b;	d	$VALUES
	m	()[Legi$b;	values	values
	m	(Ljava/lang/String;)Legi$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Legi$b;	a	$values
	m	()V	<clinit>	<clinit>
c	egi$c	net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor
	m	(Legi;)V	run	run
c	egi$d	net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper
	f	Lecx;	a	ticker
	m	(Lecx;)V	<init>	<init>
	m	(Lecx;)V	a	rebind
	m	()V	a	tick
	m	()Z	b	isRemoved
	m	()Ljb;	c	getPos
	m	()Ljava/lang/String;	d	getType
	m	()Ljava/lang/String;	toString	toString
c	egi$e	net/minecraft/world/level/chunk/LevelChunk$UnsavedListener
	m	(Ldlz;)V	setUnsaved	setUnsaved
c	egj	net/minecraft/world/level/chunk/LevelChunkSection
	f	I	a	SECTION_WIDTH
	f	I	b	SECTION_HEIGHT
	f	I	c	SECTION_SIZE
	f	I	d	BIOME_CONTAINER_BITS
	f	S	e	nonEmptyBlockCount
	f	S	f	tickingBlockCount
	f	S	g	tickingFluidCount
	f	Legq;	h	states
	f	Legr;	i	biomes
	m	(Legj;)V	<init>	<init>
	m	(Legq;Legr;)V	<init>	<init>
	m	(Ljy;)V	<init>	<init>
	m	(III)Leeb;	a	getBlockState
	m	(III)Lfal;	b	getFluidState
	m	()V	a	acquire
	m	()V	b	release
	m	(IIILeeb;)Leeb;	a	setBlockState
	m	(IIILeeb;Z)Leeb;	a	setBlockState
	m	()Z	c	hasOnlyAir
	m	()Z	d	isRandomlyTicking
	m	()Z	e	isRandomlyTickingBlocks
	m	()Z	f	isRandomlyTickingFluids
	m	()V	g	recalcBlockCounts
	m	()Legq;	h	getStates
	m	()Legr;	i	getBiomes
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	readBiomes
	m	(Lwg;)V	c	write
	m	()I	j	getSerializedSize
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(III)Ljl;	c	getNoiseBiome
	m	(Ldoa;Ldog$f;III)V	a	fillBiomesFromNoise
	m	()Legj;	k	copy
c	egj$a	net/minecraft/world/level/chunk/LevelChunkSection$1BlockCounter
	f	I	a	nonEmptyBlockCount
	f	I	b	tickingBlockCount
	f	I	c	tickingFluidCount
	m	(Legj;)V	<init>	<init>
	m	(Leeb;I)V	a	accept
	m	(Ljava/lang/Object;I)V	accept	accept
c	egk	net/minecraft/world/level/chunk/LightChunk
	m	(Ljava/util/function/BiConsumer;)V	a	findBlockLightSources
	m	()Lezv;	D	getSkyLightSources
c	egl	net/minecraft/world/level/chunk/LightChunkGetter
	m	(II)Legk;	c	getChunkForLighting
	m	(Ldnd;Lke;)V	a	onLightUpdate
	m	()Ldly;	r	getLevel
c	egm	net/minecraft/world/level/chunk/LinearPalette
	f	Ljq;	a	registry
	f	[Ljava/lang/Object;	b	values
	f	Legp;	c	resizeHandler
	f	I	d	bits
	f	I	e	size
	m	(Ljq;ILegp;Ljava/util/List;)V	<init>	<init>
	m	(Ljq;[Ljava/lang/Object;Legp;II)V	<init>	<init>
	m	(ILjq;Legp;Ljava/util/List;)Lego;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	()I	a	getSerializedSize
	m	()I	b	getSize
	m	(Legp;)Lego;	a	copy
c	egn	net/minecraft/world/level/chunk/MissingPaletteEntryException
	m	(I)V	<init>	<init>
c	ego	net/minecraft/world/level/chunk/Palette
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	()I	a	getSerializedSize
	m	()I	b	getSize
	m	(Legp;)Lego;	a	copy
c	ego$a	net/minecraft/world/level/chunk/Palette$Factory
	m	(ILjq;Legp;Ljava/util/List;)Lego;	create	create
c	egp	net/minecraft/world/level/chunk/PaletteResize
	m	(ILjava/lang/Object;)I	onResize	onResize
c	egq	net/minecraft/world/level/chunk/PalettedContainer
	f	I	a	MIN_PALETTE_BITS
	f	Legp;	b	dummyPaletteResize
	f	Ljq;	c	registry
	f	Legq$c;	d	data
	f	Legq$d;	e	strategy
	f	Lbdd;	f	threadingDetector
	m	()V	a	acquire
	m	()V	b	release
	m	(Ljq;Lcom/mojang/serialization/Codec;Legq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	a	codecRW
	m	(Ljq;Lcom/mojang/serialization/Codec;Legq$d;Ljava/lang/Object;)Lcom/mojang/serialization/Codec;	b	codecRO
	m	(Ljq;Lcom/mojang/serialization/Codec;Legq$d;Ljava/lang/Object;Legr$b;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljq;Legq$d;Legq$a;Lbao;Ljava/util/List;)V	<init>	<init>
	m	(Ljq;Legq$d;Legq$c;)V	<init>	<init>
	m	(Legq;)V	<init>	<init>
	m	(Ljq;Ljava/lang/Object;Legq$d;)V	<init>	<init>
	m	(Legq$c;I)Legq$c;	a	createOrReuseData
	m	(ILjava/lang/Object;)I	onResize	onResize
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
	m	(IIILjava/lang/Object;)Ljava/lang/Object;	b	getAndSetUnchecked
	m	(ILjava/lang/Object;)Ljava/lang/Object;	a	getAndSet
	m	(IIILjava/lang/Object;)V	c	set
	m	(ILjava/lang/Object;)V	b	set
	m	(III)Ljava/lang/Object;	a	get
	m	(I)Ljava/lang/Object;	a	get
	m	(Ljava/util/function/Consumer;)V	a	getAll
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	(Ljq;Legq$d;Legr$a;)Lcom/mojang/serialization/DataResult;	a	unpack
	m	(Ljq;Legq$d;)Legr$a;	a	pack
	m	([ILjava/util/function/IntUnaryOperator;)V	a	swapPalette
	m	()I	c	getSerializedSize
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	()Legq;	d	copy
	m	()Legq;	e	recreate
	m	(Legq$b;)V	a	count
	m	(Legq$b;Lit/unimi/dsi/fastutil/ints/Int2IntMap$Entry;)V	a	lambda$count$13
	m	(Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;I)V	a	lambda$count$12
	m	(Legg;I)I	a	lambda$pack$11
	m	(Lbcs$a;)Ljava/lang/String;	a	lambda$unpack$10
	m	(Ljq;Lego;I)I	a	lambda$unpack$9
	m	(ILjava/lang/Object;)I	c	lambda$unpack$8
	m	()Ljava/lang/String;	f	lambda$unpack$7
	m	(Ljava/util/function/Consumer;Lego;I)V	a	lambda$getAll$6
	m	(Ljq;Legq$d;Legr;)Legr$a;	a	lambda$codec$5
	m	(Legr$b;Ljq;Legq$d;Legr$a;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$4
	m	(Lcom/mojang/serialization/Codec;Ljava/lang/Object;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$3
	m	(Ljq;Legq$d;Legr$a;)Lcom/mojang/serialization/DataResult;	b	lambda$codecRO$2
	m	(Legq;)Legr;	a	lambda$codecRO$1
	m	(ILjava/lang/Object;)I	d	lambda$new$0
c	egq$a	net/minecraft/world/level/chunk/PalettedContainer$Configuration
	f	Lego$a;	a	factory
	f	I	b	bits
	m	(Lego$a;I)V	<init>	<init>
	m	(Ljq;Legp;I)Legq$c;	a	createData
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lego$a;	a	factory
	m	()I	b	bits
c	egq$b	net/minecraft/world/level/chunk/PalettedContainer$CountConsumer
	m	(Ljava/lang/Object;I)V	accept	accept
c	egq$c	net/minecraft/world/level/chunk/PalettedContainer$Data
	f	Legq$a;	a	configuration
	f	Lbao;	b	storage
	f	Lego;	c	palette
	m	(Legq$a;Lbao;Lego;)V	<init>	<init>
	m	(Lego;Lbao;)V	a	copyFrom
	m	()I	a	getSerializedSize
	m	(Lwg;)V	a	write
	m	(Legp;)Legq$c;	a	copy
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Legq$a;	b	configuration
	m	()Lbao;	c	storage
	m	()Lego;	d	palette
c	egq$d	net/minecraft/world/level/chunk/PalettedContainer$Strategy
	f	Lego$a;	a	SINGLE_VALUE_PALETTE_FACTORY
	f	Lego$a;	b	LINEAR_PALETTE_FACTORY
	f	Lego$a;	c	HASHMAP_PALETTE_FACTORY
	f	Lego$a;	f	GLOBAL_PALETTE_FACTORY
	f	Legq$d;	d	SECTION_STATES
	f	Legq$d;	e	SECTION_BIOMES
	f	I	g	sizeBits
	m	(I)V	<init>	<init>
	m	()I	a	size
	m	(III)I	a	getIndex
	m	(Ljq;I)Legq$a;	a	getConfiguration
	m	(Ljq;I)I	b	calculateBitsForSerialization
	m	()V	<clinit>	<clinit>
c	egq$d$1	net/minecraft/world/level/chunk/PalettedContainer$Strategy$1
	m	(I)V	<init>	<init>
	m	(Ljq;I)Legq$a;	a	getConfiguration
c	egq$d$2	net/minecraft/world/level/chunk/PalettedContainer$Strategy$2
	m	(I)V	<init>	<init>
	m	(Ljq;I)Legq$a;	a	getConfiguration
c	egr	net/minecraft/world/level/chunk/PalettedContainerRO
	m	(III)Ljava/lang/Object;	a	get
	m	(Ljava/util/function/Consumer;)V	a	getAll
	m	(Lwg;)V	b	write
	m	()I	c	getSerializedSize
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(Legq$b;)V	a	count
	m	()Legq;	d	copy
	m	()Legq;	e	recreate
	m	(Ljq;Legq$d;)Legr$a;	a	pack
c	egr$a	net/minecraft/world/level/chunk/PalettedContainerRO$PackedData
	f	Ljava/util/List;	a	paletteEntries
	f	Ljava/util/Optional;	b	storage
	m	(Ljava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	paletteEntries
	m	()Ljava/util/Optional;	b	storage
c	egr$b	net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker
	m	(Ljq;Legq$d;Legr$a;)Lcom/mojang/serialization/DataResult;	read	read
c	egs	net/minecraft/world/level/chunk/ProtoChunk
	f	Lorg/slf4j/Logger;	n	LOGGER
	f	Lfaa;	o	lightEngine
	f	Legz;	p	status
	f	Ljava/util/List;	q	entities
	f	Lefx;	r	carvingMask
	f	Lejo;	s	belowZeroRetrogen
	f	Lfki;	t	blockTicks
	f	Lfki;	u	fluidTicks
	m	(Ldlz;Legv;Ldmw;Ljy;Leld;)V	<init>	<init>
	m	(Ldlz;Legv;[Legj;Lfki;Lfki;Ldmw;Ljy;Leld;)V	<init>	<init>
	m	()Lfkn;	q	getBlockTicks
	m	()Lfkn;	r	getFluidTicks
	m	(J)Lefy$b;	a	getTicksForSerialization
	m	(Ljb;)Leeb;	a_	getBlockState
	m	(Ljb;)Lfal;	b_	getFluidState
	m	(Ljb;Leeb;I)Leeb;	a	setBlockState
	m	(Leaz;)V	a	setBlockEntity
	m	(Ljb;)Leaz;	c_	getBlockEntity
	m	()Ljava/util/Map;	I	getBlockEntities
	m	(Lui;)V	b	addEntity
	m	(Lbzm;)V	a	addEntity
	m	(Leuy;Levg;)V	a	setStartForStructure
	m	()Ljava/util/List;	J	getEntities
	m	()Legz;	n	getPersistedStatus
	m	(Legz;)V	a	setPersistedStatus
	m	(III)Ljl;	getNoiseBiome	getNoiseBiome
	m	(Ljb;)S	g	packOffsetCoordinates
	m	(SILdlz;)Ljb;	a	unpackOffsetCoordinates
	m	(Ljb;)V	e	markPosForPostprocessing
	m	(Lit/unimi/dsi/fastutil/shorts/ShortList;I)V	a	addPackedPostProcess
	m	()Ljava/util/Map;	K	getBlockEntityNbts
	m	(Ljb;Ljn$a;)Lui;	a	getBlockEntityNbtForSaving
	m	(Ljb;)V	d	removeBlockEntity
	m	()Lefx;	F	getCarvingMask
	m	()Lefx;	G	getOrCreateCarvingMask
	m	(Lefx;)V	a	setCarvingMask
	m	(Lfaa;)V	a	setLightEngine
	m	(Lejo;)V	a	setBelowZeroRetrogen
	m	()Lejo;	z	getBelowZeroRetrogen
	m	(Lfki;)Lfkf;	a	unpackTicks
	m	()Lfkf;	L	unpackBlockTicks
	m	()Lfkf;	M	unpackFluidTicks
	m	()Ldmw;	B	getHeightAccessorForGeneration
	m	()V	<clinit>	<clinit>
c	egt	net/minecraft/world/level/chunk/SingleValuePalette
	f	Ljq;	a	registry
	f	Ljava/lang/Object;	b	value
	f	Legp;	c	resizeHandler
	m	(Ljq;Legp;Ljava/util/List;)V	<init>	<init>
	m	(ILjq;Legp;Ljava/util/List;)Lego;	a	create
	m	(Ljava/lang/Object;)I	a	idFor
	m	(Ljava/util/function/Predicate;)Z	a	maybeHas
	m	(I)Ljava/lang/Object;	a	valueFor
	m	(Lwg;)V	a	read
	m	(Lwg;)V	b	write
	m	()I	a	getSerializedSize
	m	()I	b	getSize
	m	(Legp;)Lego;	a	copy
c	egu	net/minecraft/world/level/chunk/StructureAccess
	m	(Leuy;)Levg;	a	getStartForStructure
	m	(Leuy;Levg;)V	a	setStartForStructure
	m	(Leuy;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	getReferencesForStructure
	m	(Leuy;J)V	a	addReferenceForStructure
	m	()Ljava/util/Map;	h	getAllReferences
	m	(Ljava/util/Map;)V	b	setAllReferences
c	egv	net/minecraft/world/level/chunk/UpgradeData
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Legv;	a	EMPTY
	f	Ljava/lang/String;	c	TAG_INDICES
	f	[Lji;	d	DIRECTIONS
	f	Lcom/mojang/serialization/Codec;	e	BLOCK_TICKS_CODEC
	f	Lcom/mojang/serialization/Codec;	f	FLUID_TICKS_CODEC
	f	Ljava/util/EnumSet;	g	sides
	f	Ljava/util/List;	h	neighborBlockTicks
	f	Ljava/util/List;	i	neighborFluidTicks
	f	[[I	j	index
	f	Ljava/util/Map;	k	MAP
	f	Ljava/util/Set;	l	CHUNKY_FIXERS
	m	(Ldmw;)V	<init>	<init>
	m	(Lui;Ldmw;)V	<init>	<init>
	m	(Legv;)V	<init>	<init>
	m	(Legi;)V	a	upgrade
	m	(Legi;Lji;)V	a	upgradeSides
	m	(Leeb;Ljh;Ldmv;Ljb;Ljb;)Leeb;	a	updateState
	m	(Legi;)V	b	upgradeInside
	m	()Z	a	isEmpty
	m	()Lui;	b	write
	m	()Legv;	c	copy
	m	(Ldmu;Legv$a;)V	a	lambda$upgrade$3
	m	(Ldmu;Lfkj;)V	a	lambda$upgrade$2
	m	(Ldmu;Lfkj;)V	b	lambda$upgrade$1
	m	(Lui;)V	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	egv$a	net/minecraft/world/level/chunk/UpgradeData$BlockFixer
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
	m	(Ldmv;)V	a	processChunk
c	egv$b	net/minecraft/world/level/chunk/UpgradeData$BlockFixers
	f	Legv$b;	a	BLACKLIST
	f	Legv$b;	b	DEFAULT
	f	Legv$b;	c	CHEST
	f	Legv$b;	d	LEAVES
	f	Legv$b;	e	STEM_BLOCK
	f	[Ljh;	f	DIRECTIONS
	f	[Legv$b;	g	$VALUES
	m	()[Legv$b;	values	values
	m	(Ljava/lang/String;)Legv$b;	valueOf	valueOf
	m	(Ljava/lang/String;I[Ldpz;)V	<init>	<init>
	m	(Ljava/lang/String;IZ[Ldpz;)V	<init>	<init>
	m	()[Legv$b;	a	$values
	m	()V	<clinit>	<clinit>
c	egv$b$1	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$1
	m	(Ljava/lang/String;I[Ldpz;)V	<init>	<init>
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
c	egv$b$2	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$2
	m	(Ljava/lang/String;I[Ldpz;)V	<init>	<init>
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
c	egv$b$3	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$3
	m	(Ljava/lang/String;I[Ldpz;)V	<init>	<init>
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
c	egv$b$4	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$4
	f	Ljava/lang/ThreadLocal;	g	queue
	m	(Ljava/lang/String;IZ[Ldpz;)V	<init>	<init>
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
	m	(Ldmv;)V	a	processChunk
	m	()Ljava/util/List;	a	lambda$$0
c	egv$b$5	net/minecraft/world/level/chunk/UpgradeData$BlockFixers$5
	m	(Ljava/lang/String;I[Ldpz;)V	<init>	<init>
	m	(Leeb;Ljh;Leeb;Ldmv;Ljb;Ljb;)Leeb;	a	updateShape
c	egw	net/minecraft/world/level/chunk/package-info
c	egx	net/minecraft/world/level/chunk/status/ChunkDependencies
	f	Lcom/google/common/collect/ImmutableList;	a	dependencyByRadius
	f	[I	b	radiusByDependency
	m	(Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
	m	()Lcom/google/common/collect/ImmutableList;	a	asList
	m	()I	b	size
	m	(Legz;)I	a	getRadiusOf
	m	()I	c	getRadius
	m	(I)Legz;	a	get
	m	()Ljava/lang/String;	toString	toString
c	egy	net/minecraft/world/level/chunk/status/ChunkPyramid
	f	Lcom/google/common/collect/ImmutableList;	c	steps
	f	Legy;	a	GENERATION_PYRAMID
	f	Legy;	b	LOADING_PYRAMID
	m	(Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
	m	(Legz;)Lehc;	a	getStepTo
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/google/common/collect/ImmutableList;	a	steps
	m	(Lehc$a;)Lehc$a;	a	lambda$static$23
	m	(Lehc$a;)Lehc$a;	b	lambda$static$22
	m	(Lehc$a;)Lehc$a;	c	lambda$static$21
	m	(Lehc$a;)Lehc$a;	d	lambda$static$20
	m	(Lehc$a;)Lehc$a;	e	lambda$static$19
	m	(Lehc$a;)Lehc$a;	f	lambda$static$18
	m	(Lehc$a;)Lehc$a;	g	lambda$static$17
	m	(Lehc$a;)Lehc$a;	h	lambda$static$16
	m	(Lehc$a;)Lehc$a;	i	lambda$static$15
	m	(Lehc$a;)Lehc$a;	j	lambda$static$14
	m	(Lehc$a;)Lehc$a;	k	lambda$static$13
	m	(Lehc$a;)Lehc$a;	l	lambda$static$12
	m	(Lehc$a;)Lehc$a;	m	lambda$static$11
	m	(Lehc$a;)Lehc$a;	n	lambda$static$10
	m	(Lehc$a;)Lehc$a;	o	lambda$static$9
	m	(Lehc$a;)Lehc$a;	p	lambda$static$8
	m	(Lehc$a;)Lehc$a;	q	lambda$static$7
	m	(Lehc$a;)Lehc$a;	r	lambda$static$6
	m	(Lehc$a;)Lehc$a;	s	lambda$static$5
	m	(Lehc$a;)Lehc$a;	t	lambda$static$4
	m	(Lehc$a;)Lehc$a;	u	lambda$static$3
	m	(Lehc$a;)Lehc$a;	v	lambda$static$2
	m	(Lehc$a;)Lehc$a;	w	lambda$static$1
	m	(Lehc$a;)Lehc$a;	x	lambda$static$0
	m	()V	<clinit>	<clinit>
c	egy$a	net/minecraft/world/level/chunk/status/ChunkPyramid$Builder
	f	Ljava/util/List;	a	steps
	m	()V	<init>	<init>
	m	()Legy;	a	build
	m	(Legz;Ljava/util/function/UnaryOperator;)Legy$a;	a	step
c	egz	net/minecraft/world/level/chunk/status/ChunkStatus
	f	I	a	MAX_STRUCTURE_DISTANCE
	f	Ljava/util/EnumSet;	p	WORLDGEN_HEIGHTMAPS
	f	Ljava/util/EnumSet;	b	FINAL_HEIGHTMAPS
	f	Legz;	c	EMPTY
	f	Legz;	d	STRUCTURE_STARTS
	f	Legz;	e	STRUCTURE_REFERENCES
	f	Legz;	f	BIOMES
	f	Legz;	g	NOISE
	f	Legz;	h	SURFACE
	f	Legz;	i	CARVERS
	f	Legz;	j	FEATURES
	f	Legz;	k	INITIALIZE_LIGHT
	f	Legz;	l	LIGHT
	f	Legz;	m	SPAWN
	f	Legz;	n	FULL
	f	Lcom/mojang/serialization/Codec;	o	CODEC
	f	I	q	index
	f	Legz;	r	parent
	f	Lehd;	s	chunkType
	f	Ljava/util/EnumSet;	t	heightmapsAfter
	m	(Ljava/lang/String;Legz;Ljava/util/EnumSet;Lehd;)Legz;	a	register
	m	()Ljava/util/List;	a	getStatusList
	m	(Legz;Ljava/util/EnumSet;Lehd;)V	<init>	<init>
	m	()I	b	getIndex
	m	()Legz;	c	getParent
	m	()Lehd;	d	getChunkType
	m	(Ljava/lang/String;)Legz;	a	byName
	m	()Ljava/util/EnumSet;	e	heightmapsAfter
	m	(Legz;)Z	a	isOrAfter
	m	(Legz;)Z	b	isAfter
	m	(Legz;)Z	c	isOrBefore
	m	(Legz;)Z	d	isBefore
	m	(Legz;Legz;)Legz;	a	max
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	f	getName
	m	()V	<clinit>	<clinit>
c	eha	net/minecraft/world/level/chunk/status/ChunkStatusTask
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	doWork	doWork
c	ehb	net/minecraft/world/level/chunk/status/ChunkStatusTasks
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	()V	<init>	<init>
	m	(Lefy;)Z	a	isLighted
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	passThrough
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	b	generateStructureStarts
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	c	loadStructureStarts
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	d	generateStructureReferences
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	e	generateBiomes
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	f	generateNoise
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	g	generateSurface
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	h	generateCarvers
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	i	generateFeatures
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	j	initializeLight
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	k	light
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	l	generateSpawn
	m	(Lehe;Lehc;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	m	full
	m	(Laub;Lfda$b;)V	a	postLoadProtoChunk
	m	(Lefy;Lehe;Latr;)Lefy;	a	lambda$full$2
	m	(Lefy;Laub;Legs;Legi;)V	a	lambda$full$1
	m	(Lefy;)Lefy;	b	lambda$generateNoise$0
	m	()V	<clinit>	<clinit>
c	ehc	net/minecraft/world/level/chunk/status/ChunkStep
	f	Legz;	a	targetStatus
	f	Legx;	b	directDependencies
	f	Legx;	c	accumulatedDependencies
	f	I	d	blockStateWriteRadius
	f	Leha;	e	task
	m	(Legz;Legx;Legx;ILeha;)V	<init>	<init>
	m	(Legz;)I	a	getAccumulatedRadiusOf
	m	(Lehe;Lbcx;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	apply
	m	(Lefy;Lbue;)Lefy;	a	completeChunkGeneration
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Legz;	a	targetStatus
	m	()Legx;	b	directDependencies
	m	()Legx;	c	accumulatedDependencies
	m	()I	d	blockStateWriteRadius
	m	()Leha;	e	task
	m	(Lbue;Lefy;)Lefy;	a	lambda$apply$0
c	ehc$a	net/minecraft/world/level/chunk/status/ChunkStep$Builder
	f	Legz;	a	status
	f	Lehc;	b	parent
	f	[Legz;	c	directDependenciesByRadius
	f	I	d	blockStateWriteRadius
	f	Leha;	e	task
	m	(Legz;)V	<init>	<init>
	m	(Legz;Lehc;)V	<init>	<init>
	m	(Legz;I)Lehc$a;	a	addRequirement
	m	(I)Lehc$a;	a	blockStateWriteRadius
	m	(Leha;)Lehc$a;	a	setTask
	m	()Lehc;	a	build
	m	()[Legz;	b	buildAccumulatedDependencies
	m	(Legz;)I	a	getRadiusOfParent
c	ehd	net/minecraft/world/level/chunk/status/ChunkType
	f	Lehd;	a	PROTOCHUNK
	f	Lehd;	b	LEVELCHUNK
	f	[Lehd;	c	$VALUES
	m	()[Lehd;	values	values
	m	(Ljava/lang/String;)Lehd;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lehd;	a	$values
	m	()V	<clinit>	<clinit>
c	ehe	net/minecraft/world/level/chunk/status/WorldGenContext
	f	Laub;	a	level
	f	Lefz;	b	generator
	f	Lezb;	c	structureManager
	f	Lauf;	d	lightEngine
	f	Ljava/util/concurrent/Executor;	e	mainThreadExecutor
	f	Legi$e;	f	unsavedListener
	m	(Laub;Lefz;Lezb;Lauf;Ljava/util/concurrent/Executor;Legi$e;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laub;	a	level
	m	()Lefz;	b	generator
	m	()Lezb;	c	structureManager
	m	()Lauf;	d	lightEngine
	m	()Ljava/util/concurrent/Executor;	e	mainThreadExecutor
	m	()Legi$e;	f	unsavedListener
c	ehf	net/minecraft/world/level/chunk/status/package-info
c	ehg	net/minecraft/world/level/chunk/storage/ChunkIOErrorReporter
	m	(Ljava/lang/Throwable;Lehr;Ldlz;)V	a	reportChunkLoadFailure
	m	(Ljava/lang/Throwable;Lehr;Ldlz;)V	b	reportChunkSaveFailure
	m	(Ldlz;Ldlz;)Laa;	a	createMisplacedChunkReport
	m	(Ldlz;Ldlz;Lehr;)V	a	reportMisplacedChunk
c	ehh	net/minecraft/world/level/chunk/storage/ChunkScanAccess
	m	(Ldlz;Lvf;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
c	ehi	net/minecraft/world/level/chunk/storage/ChunkStorage
	f	I	d	LAST_MONOLYTH_STRUCTURE_DATA_VERSION
	f	Lehk;	a	worker
	f	Lcom/mojang/datafixers/DataFixer;	e	fixerUpper
	f	Leut;	b	legacyStructureHandler
	m	(Lehr;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
	m	(Ldlz;I)Z	b	isOldChunkAround
	m	(Lamd;Ljava/util/function/Supplier;Lui;Ljava/util/Optional;)Lui;	a	upgradeChunkTag
	m	(Lamd;Ljava/util/function/Supplier;)Leut;	a	getLegacyStructureHandler
	m	(Lui;Lamd;Ljava/util/Optional;)V	a	injectDatafixingContext
	m	(Lui;)V	b	removeDatafixingContext
	m	(Lui;)I	a	getVersion
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	d	read
	m	(Ldlz;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	write
	m	(Ldlz;)V	e	handleLegacyStructureIndex
	m	()V	o	flushWorker
	m	()V	close	close
	m	()Lehh;	p	chunkScanner
	m	()Lehr;	q	storageInfo
	m	(Lui;Lamd;)V	a	lambda$injectDatafixingContext$1
	m	(Lui;)Ljava/util/Optional;	c	lambda$upgradeChunkTag$0
c	ehj	net/minecraft/world/level/chunk/storage/EntityStorage
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	ENTITIES_TAG
	f	Ljava/lang/String;	c	POSITION_TAG
	f	Laub;	d	level
	f	Lehu;	e	simpleRegionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	emptyChunks
	f	Lbvy;	g	entityDeserializerQueue
	m	(Lehu;Laub;Ljava/util/concurrent/Executor;)V	<init>	<init>
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
	m	(Ldlz;)Leie;	b	emptyChunk
	m	(Leie;)V	a	storeEntities
	m	(Ljava/util/concurrent/CompletableFuture;Ldlz;)V	a	reportSaveFailureIfPresent
	m	(Ljava/util/concurrent/CompletableFuture;Ldlz;)V	b	reportLoadFailureIfPresent
	m	(Z)V	a	flush
	m	()V	close	close
	m	(Ldlz;Ljava/lang/Throwable;)Ljava/lang/Object;	a	lambda$reportLoadFailureIfPresent$3
	m	(Ldlz;Ljava/lang/Throwable;)Ljava/lang/Object;	b	lambda$reportSaveFailureIfPresent$2
	m	(Lbci$j;Luo;Lbzm;)V	a	lambda$storeEntities$1
	m	(Ldlz;Ljava/util/Optional;)Leie;	a	lambda$loadEntities$0
	m	()V	<clinit>	<clinit>
c	ehk	net/minecraft/world/level/chunk/storage/IOWorker
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/concurrent/atomic/AtomicBoolean;	b	shutdownRequested
	f	Lbwb;	c	consecutiveExecutor
	f	Lehp;	d	storage
	f	Ljava/util/SequencedMap;	e	pendingWrites
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	f	regionCacheForBlender
	f	I	g	REGION_CACHE_SIZE
	m	(Lehr;Ljava/nio/file/Path;Z)V	<init>	<init>
	m	(Ldlz;I)Z	a	isOldChunkAround
	m	(II)Ljava/util/concurrent/CompletableFuture;	a	getOrCreateOldDataForRegion
	m	(II)Ljava/util/concurrent/CompletableFuture;	b	createOldDataForRegion
	m	(Lui;)Z	a	isOldChunk
	m	(Ldlz;Lui;)Ljava/util/concurrent/CompletableFuture;	a	store
	m	(Ldlz;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	store
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	loadAsync
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
	m	(Ldlz;Lvf;)Ljava/util/concurrent/CompletableFuture;	a	scanChunk
	m	(Lehk$c;)Ljava/util/concurrent/CompletableFuture;	a	submitThrowingTask
	m	(Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	submitTask
	m	()V	b	storePendingChunk
	m	()V	c	tellStorePending
	m	(Ldlz;Lehk$a;)V	a	runStore
	m	()V	close	close
	m	()V	d	waitForShutdown
	m	()Lehr;	a	storageInfo
	m	(Ljava/util/concurrent/CompletableFuture;)V	a	lambda$waitForShutdown$16
	m	(Ljava/util/function/Supplier;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$submitTask$15
	m	(Lehk$c;Ljava/util/concurrent/CompletableFuture;)V	a	lambda$submitThrowingTask$14
	m	(Ldlz;Lvf;)Ljava/lang/Void;	b	lambda$scanChunk$13
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	a	lambda$synchronize$12
	m	()Ljava/lang/Void;	e	lambda$synchronize$11
	m	(Ljava/lang/Void;)Ljava/util/concurrent/CompletionStage;	b	lambda$synchronize$10
	m	()Ljava/lang/Void;	f	lambda$synchronize$9
	m	()Ljava/util/concurrent/CompletableFuture;	g	lambda$synchronize$8
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$7
	m	(Lehk$a;)Ljava/util/concurrent/CompletableFuture;	a	lambda$synchronize$6
	m	(Ldlz;)Ljava/util/Optional;	b	lambda$loadAsync$5
	m	(Ljava/util/function/Supplier;Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	lambda$store$4
	m	(Lui;Ldlz;)Lehk$a;	a	lambda$store$3
	m	(Lui;)Lui;	b	lambda$store$2
	m	(II)Ljava/util/BitSet;	c	lambda$createOldDataForRegion$1
	m	(Ljava/util/BitSet;Ldlz;)V	a	lambda$createOldDataForRegion$0
	m	()V	<clinit>	<clinit>
c	ehk$a	net/minecraft/world/level/chunk/storage/IOWorker$PendingStore
	f	Lui;	a	data
	f	Ljava/util/concurrent/CompletableFuture;	b	result
	m	(Lui;)V	<init>	<init>
	m	()Lui;	a	copyData
c	ehk$b	net/minecraft/world/level/chunk/storage/IOWorker$Priority
	f	Lehk$b;	a	FOREGROUND
	f	Lehk$b;	b	BACKGROUND
	f	Lehk$b;	c	SHUTDOWN
	f	[Lehk$b;	d	$VALUES
	m	()[Lehk$b;	values	values
	m	(Ljava/lang/String;)Lehk$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lehk$b;	a	$values
	m	()V	<clinit>	<clinit>
c	ehk$c	net/minecraft/world/level/chunk/storage/IOWorker$ThrowingSupplier
	m	()Ljava/lang/Object;	get	get
c	ehl	net/minecraft/world/level/chunk/storage/RecreatingChunkStorage
	f	Lehk;	a	writeWorker
	f	Ljava/nio/file/Path;	b	writeFolder
	m	(Lehr;Ljava/nio/file/Path;Lehr;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V	<init>	<init>
	m	(Ldlz;Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture;	a	write
	m	()V	close	close
c	ehm	net/minecraft/world/level/chunk/storage/RecreatingSimpleRegionStorage
	f	Lehk;	a	writeWorker
	f	Ljava/nio/file/Path;	b	writeFolder
	m	(Lehr;Ljava/nio/file/Path;Lehr;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLbdr;)V	<init>	<init>
	m	(Ldlz;Lui;)Ljava/util/concurrent/CompletableFuture;	a	write
	m	()V	close	close
c	ehn	net/minecraft/world/level/chunk/storage/RegionBitmap
	f	Ljava/util/BitSet;	a	used
	m	()V	<init>	<init>
	m	(II)V	a	force
	m	(II)V	b	free
	m	(I)I	a	allocate
	m	()Lit/unimi/dsi/fastutil/ints/IntSet;	a	getUsed
c	eho	net/minecraft/world/level/chunk/storage/RegionFile
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	I	d	SECTOR_BYTES
	f	I	a	SECTOR_INTS
	f	I	e	CHUNK_HEADER_SIZE
	f	I	f	HEADER_OFFSET
	f	Ljava/nio/ByteBuffer;	g	PADDING_BUFFER
	f	Ljava/lang/String;	h	EXTERNAL_FILE_EXTENSION
	f	I	i	EXTERNAL_STREAM_FLAG
	f	I	j	EXTERNAL_CHUNK_THRESHOLD
	f	I	k	CHUNK_NOT_PRESENT
	f	Lehr;	l	info
	f	Ljava/nio/file/Path;	m	path
	f	Ljava/nio/channels/FileChannel;	n	file
	f	Ljava/nio/file/Path;	o	externalFileDir
	f	Lehq;	p	version
	f	Ljava/nio/ByteBuffer;	q	header
	f	Ljava/nio/IntBuffer;	r	offsets
	f	Ljava/nio/IntBuffer;	s	timestamps
	f	Lehn;	b	usedSectors
	m	(Lehr;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V	<init>	<init>
	m	(Lehr;Ljava/nio/file/Path;Ljava/nio/file/Path;Lehq;Z)V	<init>	<init>
	m	()Ljava/nio/file/Path;	a	getPath
	m	(Ldlz;)Ljava/nio/file/Path;	f	getExternalChunkPath
	m	(Ldlz;)Ljava/io/DataInputStream;	a	getChunkDataInputStream
	m	()I	c	getTimestamp
	m	(B)Z	a	isExternalStreamChunk
	m	(B)B	b	getExternalChunkVersion
	m	(Ldlz;BLjava/io/InputStream;)Ljava/io/DataInputStream;	a	createChunkInputStream
	m	(Ldlz;B)Ljava/io/DataInputStream;	a	createExternalChunkInputStream
	m	(Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream;	a	createStream
	m	(II)I	a	packSectorOffset
	m	(I)I	a	getNumSectors
	m	(I)I	b	getSectorNumber
	m	(I)I	c	sizeToSectors
	m	(Ldlz;)Z	b	doesChunkExist
	m	(Ldlz;)Ljava/io/DataOutputStream;	c	getChunkDataOutputStream
	m	()V	b	flush
	m	(Ldlz;)V	d	clear
	m	(Ldlz;Ljava/nio/ByteBuffer;)V	a	write
	m	()Ljava/nio/ByteBuffer;	d	createExternalStub
	m	(Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Leho$b;	a	writeToExternalFile
	m	()V	e	writeHeader
	m	(Ldlz;)I	g	getOffset
	m	(Ldlz;)Z	e	hasChunk
	m	(Ldlz;)I	h	getOffsetIndex
	m	()V	close	close
	m	()V	f	padToFullSector
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$writeToExternalFile$1
	m	(Ldlz;)V	i	lambda$write$0
	m	()V	<clinit>	<clinit>
c	eho$a	net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer
	f	Ldlz;	b	pos
	f	Leho;	a	this$0
	m	(Leho;Ldlz;)V	<init>	<init>
	m	()V	close	close
c	eho$b	net/minecraft/world/level/chunk/storage/RegionFile$CommitOp
	m	()V	run	run
c	ehp	net/minecraft/world/level/chunk/storage/RegionFileStorage
	f	Ljava/lang/String;	a	ANVIL_EXTENSION
	f	I	b	MAX_CACHE_SIZE
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectLinkedOpenHashMap;	c	regionCache
	f	Lehr;	d	info
	f	Ljava/nio/file/Path;	e	folder
	f	Z	f	sync
	m	(Lehr;Ljava/nio/file/Path;Z)V	<init>	<init>
	m	(Ldlz;)Leho;	b	getRegionFile
	m	(Ldlz;)Lui;	a	read
	m	(Ldlz;Lvf;)V	a	scanChunk
	m	(Ldlz;Lui;)V	a	write
	m	()V	close	close
	m	()V	a	flush
	m	()Lehr;	b	info
c	ehq	net/minecraft/world/level/chunk/storage/RegionFileVersion
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	h	VERSIONS
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	i	VERSIONS_BY_NAME
	f	Lehq;	a	VERSION_GZIP
	f	Lehq;	b	VERSION_DEFLATE
	f	Lehq;	c	VERSION_NONE
	f	Lehq;	d	VERSION_LZ4
	f	Lehq;	e	VERSION_CUSTOM
	f	Lehq;	f	DEFAULT
	f	Lehq;	j	selected
	f	I	k	id
	f	Ljava/lang/String;	l	optionName
	f	Lehq$a;	m	inputWrapper
	f	Lehq$a;	n	outputWrapper
	m	(ILjava/lang/String;Lehq$a;Lehq$a;)V	<init>	<init>
	m	(Lehq;)Lehq;	a	register
	m	(I)Lehq;	a	fromId
	m	(Ljava/lang/String;)V	a	configure
	m	()Lehq;	a	getSelected
	m	(I)Z	b	isValidVersion
	m	()I	b	getId
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	a	wrap
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	a	wrap
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	b	lambda$static$7
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	b	lambda$static$6
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	c	lambda$static$5
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	c	lambda$static$4
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	d	lambda$static$3
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	d	lambda$static$2
	m	(Ljava/io/OutputStream;)Ljava/io/OutputStream;	e	lambda$static$1
	m	(Ljava/io/InputStream;)Ljava/io/InputStream;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ehq$a	net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper
	m	(Ljava/lang/Object;)Ljava/lang/Object;	wrap	wrap
c	ehr	net/minecraft/world/level/chunk/storage/RegionStorageInfo
	f	Ljava/lang/String;	a	level
	f	Lamd;	b	dimension
	f	Ljava/lang/String;	c	type
	m	(Ljava/lang/String;Lamd;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lehr;	a	withTypeSuffix
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	level
	m	()Lamd;	b	dimension
	m	()Ljava/lang/String;	c	type
c	ehs	net/minecraft/world/level/chunk/storage/SectionStorage
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	SECTIONS_TAG
	f	Lehu;	d	simpleRegionStorage
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	storage
	f	Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	f	dirtyChunks
	f	Lcom/mojang/serialization/Codec;	g	codec
	f	Ljava/util/function/Function;	h	packer
	f	Ljava/util/function/BiFunction;	i	unpacker
	f	Ljava/util/function/Function;	j	factory
	f	Ljz;	k	registryAccess
	f	Lehg;	l	errorReporter
	f	Ldmw;	c	levelHeightAccessor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	m	loadedChunks
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	n	pendingLoads
	f	Ljava/lang/Object;	o	loadLock
	m	(Lehu;Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljz;Lehg;Ldmw;)V	<init>	<init>
	m	(Ljava/util/function/BooleanSupplier;)V	a	tick
	m	()V	c	unpackPendingLoads
	m	()V	a	flushAll
	m	()Z	b	hasWork
	m	(J)Ljava/util/Optional;	c	get
	m	(J)Ljava/util/Optional;	d	getOrLoad
	m	(J)Z	e	outsideStoredRange
	m	(J)Ljava/lang/Object;	f	getOrCreate
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	prefetch
	m	(Ldlz;)V	c	unpackChunk
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	d	tryRead
	m	(Ldlz;Lehs$a;)V	a	unpackChunk
	m	(Ldlz;)V	e	writeChunk
	m	(Ldlz;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	writeChunk
	m	(Ldlz;I)J	a	getKey
	m	(J)V	b	onSectionLoad
	m	(J)V	a	setDirty
	m	(Lcom/mojang/serialization/Dynamic;)I	a	getVersion
	m	(Ldlz;)V	b	flush
	m	()V	close	close
	m	(Ljava/util/Map;Lcom/mojang/serialization/DynamicOps;Ljava/lang/String;Ljava/lang/Object;)V	a	lambda$writeChunk$11
	m	(Ldlz;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$writeChunk$10
	m	(JZLjava/lang/Object;)V	a	lambda$unpackChunk$9
	m	(JLjava/lang/Object;)Ljava/lang/Object;	a	lambda$unpackChunk$8
	m	(J)V	g	lambda$unpackChunk$7
	m	(Ldlz;Ljava/lang/Throwable;)Ljava/util/Optional;	b	lambda$tryRead$6
	m	(Lamc;Ljava/util/Optional;)Ljava/util/Optional;	a	lambda$tryRead$5
	m	(Lamc;Lui;)Lehs$a;	a	lambda$tryRead$4
	m	(Ldlz;J)Ljava/util/concurrent/CompletableFuture;	a	lambda$unpackChunk$3
	m	(Ldlz;J)Ljava/util/concurrent/CompletableFuture;	b	lambda$prefetch$2
	m	(J)V	h	lambda$getOrCreate$1
	m	(J)V	i	lambda$flushAll$0
	m	()V	<clinit>	<clinit>
c	ehs$a	net/minecraft/world/level/chunk/storage/SectionStorage$PackedChunk
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	sectionsByY
	f	Z	b	versionChanged
	m	(Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/DynamicOps;Lvi;Lehu;Ldmw;)Lehs$a;	a	parse
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	sectionsByY
	m	()Z	b	versionChanged
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional;	a	lambda$parse$0
c	eht	net/minecraft/world/level/chunk/storage/SerializableChunkData
	f	Ljy;	h	biomeRegistry
	f	Ldlz;	i	chunkPos
	f	I	j	minSectionY
	f	J	k	lastUpdateTime
	f	J	l	inhabitedTime
	f	Legz;	m	chunkStatus
	f	Leld$d;	n	blendingData
	f	Lejo;	o	belowZeroRetrogen
	f	Legv;	p	upgradeData
	f	[J	q	carvingMask
	f	Ljava/util/Map;	r	heightmaps
	f	Lefy$b;	s	packedTicks
	f	[Lit/unimi/dsi/fastutil/shorts/ShortList;	t	postProcessingSections
	f	Z	u	lightCorrect
	f	Ljava/util/List;	v	sectionData
	f	Ljava/util/List;	w	entities
	f	Ljava/util/List;	x	blockEntities
	f	Lui;	y	structureData
	f	Lcom/mojang/serialization/Codec;	z	BLOCK_STATE_CODEC
	f	Lcom/mojang/serialization/Codec;	A	BLOCK_TICKS_CODEC
	f	Lcom/mojang/serialization/Codec;	B	FLUID_TICKS_CODEC
	f	Lorg/slf4j/Logger;	C	LOGGER
	f	Ljava/lang/String;	D	TAG_UPGRADE_DATA
	f	Ljava/lang/String;	E	BLOCK_TICKS_TAG
	f	Ljava/lang/String;	F	FLUID_TICKS_TAG
	f	Ljava/lang/String;	a	X_POS_TAG
	f	Ljava/lang/String;	b	Z_POS_TAG
	f	Ljava/lang/String;	c	HEIGHTMAPS_TAG
	f	Ljava/lang/String;	d	IS_LIGHT_ON_TAG
	f	Ljava/lang/String;	e	SECTIONS_TAG
	f	Ljava/lang/String;	f	BLOCK_LIGHT_TAG
	f	Ljava/lang/String;	g	SKY_LIGHT_TAG
	m	(Ljy;Ldlz;IJJLegz;Leld$d;Lejo;Legv;[JLjava/util/Map;Lefy$b;[Lit/unimi/dsi/fastutil/shorts/ShortList;ZLjava/util/List;Ljava/util/List;Ljava/util/List;Lui;)V	<init>	<init>
	m	(Ldmw;Ljz;Lui;)Leht;	a	parse
	m	(Laub;Lclp;Lehr;Ldlz;)Legs;	a	read
	m	(Ldlz;ILjava/lang/String;)V	a	logErrors
	m	(Ljy;)Lcom/mojang/serialization/Codec;	a	makeBiomeCodec
	m	(Laub;Lefy;)Leht;	a	copyOf
	m	()Lui;	a	write
	m	(Lui;Lefy$b;)V	a	saveTicks
	m	(Lui;)Legz;	a	getChunkStatusFromTag
	m	(Laub;Ljava/util/List;Ljava/util/List;)Legi$c;	a	postLoadChunk
	m	(Levo;Ldlz;Ljava/util/Map;Ljava/util/Map;)Lui;	a	packStructureData
	m	(Levo;Lui;J)Ljava/util/Map;	a	unpackStructureStart
	m	(Ljz;Ldlz;Lui;)Ljava/util/Map;	a	unpackStructureReferences
	m	([Lit/unimi/dsi/fastutil/shorts/ShortList;)Luo;	a	packOffsets
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljy;	b	biomeRegistry
	m	()Ldlz;	c	chunkPos
	m	()I	d	minSectionY
	m	()J	e	lastUpdateTime
	m	()J	f	inhabitedTime
	m	()Legz;	g	chunkStatus
	m	()Leld$d;	h	blendingData
	m	()Lejo;	i	belowZeroRetrogen
	m	()Legv;	j	upgradeData
	m	()[J	k	carvingMask
	m	()Ljava/util/Map;	l	heightmaps
	m	()Lefy$b;	m	packedTicks
	m	()[Lit/unimi/dsi/fastutil/shorts/ShortList;	n	postProcessingSections
	m	()Z	o	lightCorrect
	m	()Ljava/util/List;	p	sectionData
	m	()Ljava/util/List;	q	entities
	m	()Ljava/util/List;	r	blockEntities
	m	()Lui;	s	structureData
	m	(Ljy;Ldlz;Ljava/util/Map;Ljava/lang/String;Lvi;)V	a	lambda$unpackStructureReferences$14
	m	(Ldlz;Lame;J)Z	a	lambda$unpackStructureReferences$13
	m	(Ljava/util/List;Laub;Ljava/util/List;Legi;)V	a	lambda$postLoadChunk$12
	m	(Lui;Leka$a;[J)V	a	lambda$write$11
	m	(I)[Lit/unimi/dsi/fastutil/shorts/ShortList;	a	lambda$copyOf$10
	m	(Lit/unimi/dsi/fastutil/shorts/ShortList;)Lit/unimi/dsi/fastutil/shorts/ShortArrayList;	a	lambda$copyOf$9
	m	(Ljy;)Legr;	b	lambda$parse$8
	m	(Lcom/mojang/serialization/Codec;Ldlz;ILui;)Legr;	a	lambda$parse$7
	m	(Ldlz;ILjava/lang/String;)V	b	lambda$parse$6
	m	()Legq;	t	lambda$parse$5
	m	(Ldlz;ILui;)Legq;	a	lambda$parse$4
	m	(Ldlz;ILjava/lang/String;)V	c	lambda$parse$3
	m	(Legz;Ljava/util/Map;Lui;)V	a	lambda$parse$2
	m	(Ljava/util/Map;Leka$a;[J)V	a	lambda$parse$1
	m	(Ldmw;Lui;)Legv;	a	lambda$parse$0
	m	()V	<clinit>	<clinit>
c	eht$a	net/minecraft/world/level/chunk/storage/SerializableChunkData$ChunkReadException
	m	(Ljava/lang/String;)V	<init>	<init>
c	eht$b	net/minecraft/world/level/chunk/storage/SerializableChunkData$SectionData
	f	I	a	y
	f	Legj;	b	chunkSection
	f	Legd;	c	blockLight
	f	Legd;	d	skyLight
	m	(ILegj;Legd;Legd;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	y
	m	()Legj;	b	chunkSection
	m	()Legd;	c	blockLight
	m	()Legd;	d	skyLight
c	ehu	net/minecraft/world/level/chunk/storage/SimpleRegionStorage
	f	Lehk;	a	worker
	f	Lcom/mojang/datafixers/DataFixer;	b	fixerUpper
	f	Lbdr;	c	dataFixType
	m	(Lehr;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLbdr;)V	<init>	<init>
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	read
	m	(Ldlz;Lui;)Ljava/util/concurrent/CompletableFuture;	a	write
	m	(Lui;I)Lui;	a	upgradeChunkTag
	m	(Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic;	a	upgradeChunkTag
	m	(Z)Ljava/util/concurrent/CompletableFuture;	a	synchronize
	m	()V	close	close
	m	()Lehr;	a	storageInfo
c	ehv	net/minecraft/world/level/chunk/storage/package-info
c	ehw	net/minecraft/world/level/dimension/BuiltinDimensionTypes
	f	Lamd;	a	OVERWORLD
	f	Lamd;	b	NETHER
	f	Lamd;	c	END
	f	Lamd;	d	OVERWORLD_CAVES
	f	Lame;	e	OVERWORLD_EFFECTS
	f	Lame;	f	NETHER_EFFECTS
	f	Lame;	g	END_EFFECTS
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	register
	m	()V	<clinit>	<clinit>
c	ehx	net/minecraft/world/level/dimension/DimensionDefaults
	f	I	a	CLOUD_THICKNESS
	f	I	b	OVERWORLD_MIN_Y
	f	I	c	OVERWORLD_LEVEL_HEIGHT
	f	I	d	OVERWORLD_GENERATION_HEIGHT
	f	I	e	OVERWORLD_LOGICAL_HEIGHT
	f	I	f	OVERWORLD_CLOUD_HEIGHT
	f	I	g	NETHER_MIN_Y
	f	I	h	NETHER_LEVEL_HEIGHT
	f	I	i	NETHER_GENERATION_HEIGHT
	f	I	j	NETHER_LOGICAL_HEIGHT
	f	I	k	END_MIN_Y
	f	I	l	END_LEVEL_HEIGHT
	f	I	m	END_GENERATION_HEIGHT
	f	I	n	END_LOGICAL_HEIGHT
	f	I	o	END_ISLAND_BASE_Y
	m	()V	<init>	<init>
c	ehy	net/minecraft/world/level/dimension/DimensionType
	f	Ljava/util/OptionalLong;	m	fixedTime
	f	Z	n	hasSkyLight
	f	Z	o	hasCeiling
	f	Z	p	ultraWarm
	f	Z	q	natural
	f	D	r	coordinateScale
	f	Z	s	bedWorks
	f	Z	t	respawnAnchorWorks
	f	I	u	minY
	f	I	v	height
	f	I	w	logicalHeight
	f	Lbae;	x	infiniburn
	f	Lame;	y	effectsLocation
	f	F	z	ambientLight
	f	Ljava/util/Optional;	A	cloudHeight
	f	Lehy$a;	B	monsterSettings
	f	I	a	BITS_FOR_Y
	f	I	b	MIN_HEIGHT
	f	I	c	Y_SIZE
	f	I	d	MAX_Y
	f	I	e	MIN_Y
	f	I	f	WAY_ABOVE_MAX_Y
	f	I	g	WAY_BELOW_MIN_Y
	f	Lcom/mojang/serialization/Codec;	h	DIRECT_CODEC
	f	Lzm;	i	STREAM_CODEC
	f	I	j	MOON_PHASES
	f	[F	k	MOON_BRIGHTNESS_PER_PHASE
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	m	(Ljava/util/OptionalLong;ZZZZDZZIIILbae;Lame;FLjava/util/Optional;Lehy$a;)V	<init>	<init>
	m	(Lehy;Lehy;)D	a	getTeleportationScale
	m	(Lamd;Ljava/nio/file/Path;)Ljava/nio/file/Path;	a	getStorageFolder
	m	()Z	a	hasFixedTime
	m	(J)F	a	timeOfDay
	m	(J)I	b	moonPhase
	m	()Z	b	piglinSafe
	m	()Z	c	hasRaids
	m	()Lbwo;	d	monsterSpawnLightTest
	m	()I	e	monsterSpawnBlockLightLimit
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/OptionalLong;	f	fixedTime
	m	()Z	g	hasSkyLight
	m	()Z	h	hasCeiling
	m	()Z	i	ultraWarm
	m	()Z	j	natural
	m	()D	k	coordinateScale
	m	()Z	l	bedWorks
	m	()Z	m	respawnAnchorWorks
	m	()I	n	minY
	m	()I	o	height
	m	()I	p	logicalHeight
	m	()Lbae;	q	infiniburn
	m	()Lame;	r	effectsLocation
	m	()F	s	ambientLight
	m	()Ljava/util/Optional;	t	cloudHeight
	m	()Lehy$a;	u	monsterSettings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ehy$a	net/minecraft/world/level/dimension/DimensionType$MonsterSettings
	f	Z	b	piglinSafe
	f	Z	c	hasRaids
	f	Lbwo;	d	monsterSpawnLightTest
	f	I	e	monsterSpawnBlockLightLimit
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(ZZLbwo;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	piglinSafe
	m	()Z	b	hasRaids
	m	()Lbwo;	c	monsterSpawnLightTest
	m	()I	d	monsterSpawnBlockLightLimit
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ehz	net/minecraft/world/level/dimension/LevelStem
	f	Ljl;	e	type
	f	Lefz;	f	generator
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lamd;	b	OVERWORLD
	f	Lamd;	c	NETHER
	f	Lamd;	d	END
	m	(Ljl;Lefz;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	type
	m	()Lefz;	b	generator
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eia	net/minecraft/world/level/dimension/end/DragonRespawnAnimation
	f	Leia;	a	START
	f	Leia;	b	PREPARING_TO_SUMMON_PILLARS
	f	Leia;	c	SUMMONING_PILLARS
	f	Leia;	d	SUMMONING_DRAGON
	f	Leia;	e	END
	f	[Leia;	f	$VALUES
	m	()[Leia;	values	values
	m	(Ljava/lang/String;)Leia;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
	m	()[Leia;	a	$values
	m	()V	<clinit>	<clinit>
c	eia$1	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$1
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
c	eia$2	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$2
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
c	eia$3	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$3
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
c	eia$4	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$4
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
c	eia$5	net/minecraft/world/level/dimension/end/DragonRespawnAnimation$5
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Laub;Leib;Ljava/util/List;ILjb;)V	a	tick
c	eib	net/minecraft/world/level/dimension/end/EndDragonFight
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	I	e	MAX_TICKS_BEFORE_DRAGON_RESPAWN
	f	I	f	TIME_BETWEEN_CRYSTAL_SCANS
	f	I	a	TIME_BETWEEN_PLAYER_SCANS
	f	I	g	ARENA_SIZE_CHUNKS
	f	I	b	ARENA_TICKET_LEVEL
	f	I	h	GATEWAY_COUNT
	f	I	i	GATEWAY_DISTANCE
	f	I	c	DRAGON_SPAWN_Y
	f	Ljava/util/function/Predicate;	j	validPlayer
	f	Latx;	k	dragonEvent
	f	Laub;	l	level
	f	Ljb;	m	origin
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	n	gateways
	f	Leeg;	o	exitPortalPattern
	f	I	p	ticksSinceDragonSeen
	f	I	q	crystalsAlive
	f	I	r	ticksSinceCrystalsScanned
	f	I	s	ticksSinceLastPlayerScan
	f	Z	t	dragonKilled
	f	Z	u	previouslyKilled
	f	Z	v	skipArenaLoadedCheck
	f	Ljava/util/UUID;	w	dragonUUID
	f	Z	x	needsStateScanning
	f	Ljb;	y	portalLocation
	f	Leia;	z	respawnStage
	f	I	A	respawnTime
	f	Ljava/util/List;	B	respawnCrystals
	m	(Laub;JLeib$a;)V	<init>	<init>
	m	(Laub;JLeib$a;Ljb;)V	<init>	<init>
	m	()V	a	skipArenaLoadedCheck
	m	()Leib$a;	b	saveData
	m	()V	c	tick
	m	()V	j	scanState
	m	()V	k	findOrCreateDragon
	m	(Leia;)V	a	setRespawnStage
	m	()Z	l	hasActiveExitPortal
	m	()Leeg$b;	m	findExitPortal
	m	()Z	n	isArenaLoaded
	m	()V	o	updatePlayers
	m	()V	p	updateCrystalCount
	m	(Lcps;)V	a	setDragonKilled
	m	()V	d	removeAllGateways
	m	()V	q	spawnNewGateway
	m	(Ljb;)V	a	spawnNewGateway
	m	(Z)V	a	spawnExitPortal
	m	()Lcps;	r	createNewDragon
	m	(Lcps;)V	b	updateDragon
	m	()I	e	getCrystalsAlive
	m	(Lcpr;Lbyb;)V	a	onCrystalDestroyed
	m	()Z	f	hasPreviouslyKilledDragon
	m	()V	g	tryRespawn
	m	(Ljava/util/List;)V	a	respawnDragon
	m	()V	h	resetSpikeCrystals
	m	()Ljava/util/UUID;	i	getDragonUUID
	m	(Ljb;Ljl$c;)V	a	lambda$spawnNewGateway$2
	m	(Ljy;)Ljava/util/Optional;	a	lambda$spawnNewGateway$1
	m	(J)Ljava/util/List;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eib$a	net/minecraft/world/level/dimension/end/EndDragonFight$Data
	f	Z	c	needsStateScanning
	f	Z	d	dragonKilled
	f	Z	e	previouslyKilled
	f	Z	f	isRespawning
	f	Ljava/util/Optional;	g	dragonUUID
	f	Ljava/util/Optional;	h	exitPortalLocation
	f	Ljava/util/Optional;	i	gateways
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leib$a;	b	DEFAULT
	m	(ZZZZLjava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	a	needsStateScanning
	m	()Z	b	dragonKilled
	m	()Z	c	previouslyKilled
	m	()Z	d	isRespawning
	m	()Ljava/util/Optional;	e	dragonUUID
	m	()Ljava/util/Optional;	f	exitPortalLocation
	m	()Ljava/util/Optional;	g	gateways
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eic	net/minecraft/world/level/dimension/end/package-info
c	eid	net/minecraft/world/level/dimension/package-info
c	eie	net/minecraft/world/level/entity/ChunkEntities
	f	Ldlz;	a	pos
	f	Ljava/util/List;	b	entities
	m	(Ldlz;Ljava/util/List;)V	<init>	<init>
	m	()Ldlz;	a	getPos
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Z	c	isEmpty
c	eif	net/minecraft/world/level/entity/ChunkStatusUpdateListener
	m	(Ldlz;Latp;)V	onChunkStatusChange	onChunkStatusChange
c	eig	net/minecraft/world/level/entity/EntityAccess
	m	()I	ar	getId
	m	()Ljb;	dx	blockPosition
	m	()Lfin;	cV	getBoundingBox
	m	(Leih;)V	a	setLevelCallback
	m	()Ljava/util/stream/Stream;	dc	getSelfAndPassengers
	m	()Ljava/util/stream/Stream;	dd	getPassengersAndSelf
	m	(Lbzm$e;)V	c	setRemoved
	m	()Z	dX	shouldBeSaved
	m	()Z	dY	isAlwaysTicking
c	eih	net/minecraft/world/level/entity/EntityInLevelCallback
	f	Leih;	a	NULL
	m	()V	a	onMove
	m	(Lbzm$e;)V	a	onRemove
	m	()V	<clinit>	<clinit>
c	eih$1	net/minecraft/world/level/entity/EntityInLevelCallback$1
	m	()V	<init>	<init>
	m	()V	a	onMove
	m	(Lbzm$e;)V	a	onRemove
c	eii	net/minecraft/world/level/entity/EntityLookup
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	byId
	f	Ljava/util/Map;	c	byUuid
	m	()V	<init>	<init>
	m	(Lein;Lbak;)V	a	getEntities
	m	()Ljava/lang/Iterable;	a	getAllEntities
	m	(Leig;)V	a	add
	m	(Leig;)V	b	remove
	m	(I)Leig;	a	getEntity
	m	(Ljava/util/UUID;)Leig;	a	getEntity
	m	()I	b	count
	m	()V	<clinit>	<clinit>
c	eij	net/minecraft/world/level/entity/EntityPersistentStorage
	m	(Ldlz;)Ljava/util/concurrent/CompletableFuture;	a	loadEntities
	m	(Leie;)V	a	storeEntities
	m	(Z)V	a	flush
	m	()V	close	close
c	eik	net/minecraft/world/level/entity/EntitySection
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lbar;	b	storage
	f	Leiv;	c	chunkStatus
	m	(Ljava/lang/Class;Leiv;)V	<init>	<init>
	m	(Leig;)V	a	add
	m	(Leig;)Z	b	remove
	m	(Lfin;Lbak;)Lbak$a;	a	getEntities
	m	(Lein;Lfin;Lbak;)Lbak$a;	a	getEntities
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	getEntities
	m	()Leiv;	c	getStatus
	m	(Leiv;)Leiv;	a	updateChunkStatus
	m	()I	d	size
	m	()V	<clinit>	<clinit>
c	eil	net/minecraft/world/level/entity/EntitySectionStorage
	f	I	a	CHONKY_ENTITY_SEARCH_GRACE
	f	I	b	MAX_NON_CHONKY_ENTITY_SIZE
	f	Ljava/lang/Class;	c	entityClass
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;	d	intialSectionVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	e	sections
	f	Lit/unimi/dsi/fastutil/longs/LongSortedSet;	f	sectionIds
	m	(Ljava/lang/Class;Lit/unimi/dsi/fastutil/longs/Long2ObjectFunction;)V	<init>	<init>
	m	(Lfin;Lbak;)V	a	forEachAccessibleNonEmptySection
	m	(J)Ljava/util/stream/LongStream;	a	getExistingSectionPositionsInChunk
	m	(II)Lit/unimi/dsi/fastutil/longs/LongSortedSet;	a	getChunkSections
	m	(J)Ljava/util/stream/Stream;	b	getExistingSectionsInChunk
	m	(J)J	f	getChunkKeyFromSectionKey
	m	(J)Leik;	c	getOrCreateSection
	m	(J)Leik;	d	getSection
	m	(J)Leik;	g	createSection
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAllChunksWithExistingSections
	m	(Lfin;Lbak;)V	b	getEntities
	m	(Lein;Lfin;Lbak;)V	a	getEntities
	m	(J)V	e	remove
	m	()I	b	count
	m	(Lein;Lfin;Lbak;Leik;)Lbak$a;	a	lambda$getEntities$2
	m	(Lfin;Lbak;Leik;)Lbak$a;	a	lambda$getEntities$1
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;J)V	a	lambda$getAllChunksWithExistingSections$0
c	eim	net/minecraft/world/level/entity/EntityTickList
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	a	active
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	b	passive
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	c	iterated
	m	()V	<init>	<init>
	m	()V	a	ensureActiveIsNotIterated
	m	(Lbzm;)V	a	add
	m	(Lbzm;)V	b	remove
	m	(Lbzm;)Z	c	contains
	m	(Ljava/util/function/Consumer;)V	a	forEach
c	ein	net/minecraft/world/level/entity/EntityTypeTest
	m	(Ljava/lang/Class;)Lein;	a	forClass
	m	(Ljava/lang/Class;)Lein;	b	forExactClass
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	m	()Ljava/lang/Class;	a	getBaseClass
c	ein$1	net/minecraft/world/level/entity/EntityTypeTest$1
	f	Ljava/lang/Class;	a	val$cls
	m	(Ljava/lang/Class;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	m	()Ljava/lang/Class;	a	getBaseClass
c	ein$2	net/minecraft/world/level/entity/EntityTypeTest$2
	f	Ljava/lang/Class;	a	val$cls
	m	(Ljava/lang/Class;)V	<init>	<init>
	m	(Ljava/lang/Object;)Ljava/lang/Object;	a	tryCast
	m	()Ljava/lang/Class;	a	getBaseClass
c	eio	net/minecraft/world/level/entity/LevelCallback
	m	(Ljava/lang/Object;)V	g	onCreated
	m	(Ljava/lang/Object;)V	f	onDestroyed
	m	(Ljava/lang/Object;)V	e	onTickingStart
	m	(Ljava/lang/Object;)V	d	onTickingEnd
	m	(Ljava/lang/Object;)V	c	onTrackingStart
	m	(Ljava/lang/Object;)V	b	onTrackingEnd
	m	(Ljava/lang/Object;)V	a	onSectionChange
c	eip	net/minecraft/world/level/entity/LevelEntityGetter
	m	(I)Leig;	a	get
	m	(Ljava/util/UUID;)Leig;	a	get
	m	()Ljava/lang/Iterable;	a	getAll
	m	(Lein;Lbak;)V	a	get
	m	(Lfin;Ljava/util/function/Consumer;)V	a	get
	m	(Lein;Lfin;Lbak;)V	a	get
c	eiq	net/minecraft/world/level/entity/LevelEntityGetterAdapter
	f	Leii;	a	visibleEntities
	f	Leil;	b	sectionStorage
	m	(Leii;Leil;)V	<init>	<init>
	m	(I)Leig;	a	get
	m	(Ljava/util/UUID;)Leig;	a	get
	m	()Ljava/lang/Iterable;	a	getAll
	m	(Lein;Lbak;)V	a	get
	m	(Lfin;Ljava/util/function/Consumer;)V	a	get
	m	(Lein;Lfin;Lbak;)V	a	get
c	eir	net/minecraft/world/level/entity/PersistentEntitySectionManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/Set;	b	knownUuids
	f	Leio;	c	callbacks
	f	Leij;	d	permanentStorage
	f	Leii;	e	visibleEntityStorage
	f	Leil;	f	sectionStorage
	f	Leip;	g	entityGetter
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	h	chunkVisibility
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	i	chunkLoadStatuses
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	chunksToUnload
	f	Ljava/util/Queue;	k	loadingInbox
	m	(Ljava/lang/Class;Leio;Leij;)V	<init>	<init>
	m	(JLeik;)V	a	removeSectionIfEmpty
	m	(Leig;)Z	b	addEntityUuid
	m	(Leig;)Z	a	addNewEntity
	m	(Leig;Z)Z	a	addEntity
	m	(Leig;Leiv;)Leiv;	a	getEffectiveStatus
	m	(Ldlz;)Z	a	isTicking
	m	(Ljava/util/stream/Stream;)V	a	addLegacyChunkEntities
	m	(Ljava/util/stream/Stream;)V	b	addWorldGenChunkEntities
	m	(Leig;)V	c	startTicking
	m	(Leig;)V	d	stopTicking
	m	(Leig;)V	e	startTracking
	m	(Leig;)V	f	stopTracking
	m	(Ldlz;Latp;)V	a	updateChunkStatus
	m	(Ldlz;Leiv;)V	a	updateChunkStatus
	m	(J)V	b	ensureChunkQueuedForLoad
	m	(JLjava/util/function/Consumer;)Z	a	storeChunkSections
	m	(J)V	c	requestChunkLoad
	m	(J)Z	d	processChunkUnload
	m	(Leig;)V	g	unloadEntity
	m	()V	h	processUnloads
	m	()V	a	processPendingLoads
	m	()V	b	tick
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	i	getAllChunksToSave
	m	()V	c	autoSave
	m	()V	d	saveAll
	m	()V	close	close
	m	(Ljava/util/UUID;)Z	a	isLoaded
	m	()Leip;	e	getEntityGetter
	m	(Ljb;)Z	a	canPositionTick
	m	(Ldlz;)Z	b	canPositionTick
	m	(J)Z	a	areEntitiesLoaded
	m	(Ljava/io/Writer;)V	a	dumpSections
	m	()Ljava/lang/String;	f	gatherStats
	m	()I	g	count
	m	(Lbaz;J)V	a	lambda$dumpSections$17
	m	(Lbaz;Leir$b;J)V	a	lambda$dumpSections$16
	m	(J)Z	e	lambda$saveAll$15
	m	(Leig;)V	h	lambda$saveAll$14
	m	(J)V	f	lambda$autoSave$13
	m	(Leig;)V	i	lambda$autoSave$12
	m	(Leig;)V	j	lambda$processPendingLoads$11
	m	(J)Z	g	lambda$processUnloads$10
	m	(Leig;)V	k	lambda$processChunkUnload$9
	m	(Ldlz;Ljava/lang/Throwable;)Ljava/lang/Void;	a	lambda$requestChunkLoad$8
	m	(Leik;)Ljava/util/stream/Stream;	a	lambda$storeChunkSections$7
	m	(Leiv;Leik;)V	a	lambda$updateChunkStatus$6
	m	(Leig;)Z	l	lambda$updateChunkStatus$5
	m	(Leig;)Z	m	lambda$updateChunkStatus$4
	m	(Leig;)Z	n	lambda$updateChunkStatus$3
	m	(Leig;)Z	o	lambda$updateChunkStatus$2
	m	(Leig;)V	p	lambda$addWorldGenChunkEntities$1
	m	(Leig;)V	q	lambda$addLegacyChunkEntities$0
	m	()V	<clinit>	<clinit>
c	eir$a	net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback
	f	Leig;	c	entity
	f	J	d	currentSectionKey
	f	Leik;	e	currentSection
	f	Leir;	b	this$0
	m	(Leir;Leig;JLeik;)V	<init>	<init>
	m	()V	a	onMove
	m	(Leiv;Leiv;)V	a	updateStatus
	m	(Lbzm$e;)V	a	onRemove
c	eir$b	net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus
	f	Leir$b;	a	FRESH
	f	Leir$b;	b	PENDING
	f	Leir$b;	c	LOADED
	f	[Leir$b;	d	$VALUES
	m	()[Leir$b;	values	values
	m	(Ljava/lang/String;)Leir$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leir$b;	a	$values
	m	()V	<clinit>	<clinit>
c	eis	net/minecraft/world/level/entity/TransientEntitySectionManager
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Leio;	b	callbacks
	f	Leii;	c	entityStorage
	f	Leil;	d	sectionStorage
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	tickingChunks
	f	Leip;	f	entityGetter
	m	(Ljava/lang/Class;Leio;)V	<init>	<init>
	m	(Ldlz;)V	a	startTicking
	m	(Ldlz;)V	b	stopTicking
	m	()Leip;	a	getEntityGetter
	m	(Leig;)V	a	addEntity
	m	()I	b	count
	m	(JLeik;)V	a	removeSectionIfEmpty
	m	()Ljava/lang/String;	c	gatherStats
	m	(Leik;)V	a	lambda$stopTicking$4
	m	(Leig;)Z	b	lambda$stopTicking$3
	m	(Leik;)V	b	lambda$startTicking$2
	m	(Leig;)Z	c	lambda$startTicking$1
	m	(J)Leiv;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eis$a	net/minecraft/world/level/entity/TransientEntitySectionManager$Callback
	f	Leig;	c	entity
	f	J	d	currentSectionKey
	f	Leik;	e	currentSection
	f	Leis;	b	this$0
	m	(Leis;Leig;JLeik;)V	<init>	<init>
	m	()V	a	onMove
	m	(Lbzm$e;)V	a	onRemove
c	eit	net/minecraft/world/level/entity/UUIDLookup
	m	(Ljava/util/UUID;)Leiu;	getEntity	getEntity
c	eiu	net/minecraft/world/level/entity/UniquelyIdentifyable
	m	()Ljava/util/UUID;	cK	getUUID
	m	()Z	dU	isRemoved
c	eiv	net/minecraft/world/level/entity/Visibility
	f	Leiv;	a	HIDDEN
	f	Leiv;	b	TRACKED
	f	Leiv;	c	TICKING
	f	Z	d	accessible
	f	Z	e	ticking
	f	[Leiv;	f	$VALUES
	m	()[Leiv;	values	values
	m	(Ljava/lang/String;)Leiv;	valueOf	valueOf
	m	(Ljava/lang/String;IZZ)V	<init>	<init>
	m	()Z	a	isTicking
	m	()Z	b	isAccessible
	m	(Latp;)Leiv;	a	fromFullChunkStatus
	m	()[Leiv;	c	$values
	m	()V	<clinit>	<clinit>
c	eiw	net/minecraft/world/level/entity/package-info
c	eix	net/minecraft/world/level/gameevent/BlockPositionSource
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Ljb;	e	pos
	m	(Ljb;)V	<init>	<init>
	m	(Ldmu;)Ljava/util/Optional;	a	getPosition
	m	()Lejg;	a	getType
	m	(Leix;)Ljb;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leix;)Ljb;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eix$a	net/minecraft/world/level/gameevent/BlockPositionSource$Type
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
c	eiy	net/minecraft/world/level/gameevent/DynamicGameEventListener
	f	Lejd;	a	listener
	f	Lke;	b	lastSection
	m	(Lejd;)V	<init>	<init>
	m	(Laub;)V	a	add
	m	()Lejd;	a	getListener
	m	(Laub;)V	b	remove
	m	(Laub;)V	c	move
	m	(Ldmx;Lke;Ljava/util/function/Consumer;)V	a	ifChunkExists
	m	(Laub;Lke;)V	a	lambda$move$3
	m	(Leje;)V	a	lambda$move$2
	m	(Leje;)V	b	lambda$move$1
	m	(Leje;)V	c	lambda$remove$0
c	eiz	net/minecraft/world/level/gameevent/EntityPositionSource
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lcom/mojang/datafixers/util/Either;	e	entityOrUuidOrId
	f	F	f	yOffset
	m	(Lbzm;F)V	<init>	<init>
	m	(Lcom/mojang/datafixers/util/Either;F)V	<init>	<init>
	m	(Ldmu;)Ljava/util/Optional;	a	getPosition
	m	(Ldmu;)V	b	resolveEntity
	m	()Ljava/util/UUID;	b	getUuid
	m	()I	c	getId
	m	()Lejg;	a	getType
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/lang/Integer;	a	lambda$getId$12
	m	(Ljava/util/UUID;)Ljava/lang/Integer;	a	lambda$getId$11
	m	(Lcom/mojang/datafixers/util/Either;)Ljava/util/UUID;	b	lambda$getUuid$10
	m	(Ljava/lang/Integer;)Ljava/util/UUID;	a	lambda$getUuid$9
	m	(Lbzm;)V	a	lambda$resolveEntity$8
	m	(Ldmu;Lcom/mojang/datafixers/util/Either;)Ljava/util/Optional;	a	lambda$resolveEntity$7
	m	(Ldmu;Ljava/util/UUID;)Lbzm;	a	lambda$resolveEntity$6
	m	(Lbzm;)Lfis;	b	lambda$getPosition$5
	m	(Ljava/lang/Integer;Ljava/lang/Float;)Leiz;	a	lambda$static$4
	m	(Leiz;)Ljava/lang/Float;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/UUID;Ljava/lang/Float;)Leiz;	a	lambda$static$1
	m	(Leiz;)Ljava/lang/Float;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eiz$a	net/minecraft/world/level/gameevent/EntityPositionSource$Type
	m	()V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
c	eja	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry
	f	Ljava/util/List;	b	listeners
	f	Ljava/util/Set;	c	listenersToRemove
	f	Ljava/util/List;	d	listenersToAdd
	f	Z	e	processing
	f	Laub;	f	level
	f	I	g	sectionY
	f	Leja$a;	h	onEmptyAction
	m	(Laub;ILeja$a;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	(Lejd;)V	a	register
	m	(Lejd;)V	b	unregister
	m	(Ljl;Lfis;Lejb$a;Leje$a;)Z	a	visitInRangeListeners
	m	(Laub;Lfis;Lejd;)Ljava/util/Optional;	a	getPostableListenerPosition
c	eja$a	net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction
	m	(I)V	apply	apply
c	ejb	net/minecraft/world/level/gameevent/GameEvent
	f	I	ak	notificationRadius
	f	Ljl$c;	a	BLOCK_ACTIVATE
	f	Ljl$c;	b	BLOCK_ATTACH
	f	Ljl$c;	c	BLOCK_CHANGE
	f	Ljl$c;	d	BLOCK_CLOSE
	f	Ljl$c;	e	BLOCK_DEACTIVATE
	f	Ljl$c;	f	BLOCK_DESTROY
	f	Ljl$c;	g	BLOCK_DETACH
	f	Ljl$c;	h	BLOCK_OPEN
	f	Ljl$c;	i	BLOCK_PLACE
	f	Ljl$c;	j	CONTAINER_CLOSE
	f	Ljl$c;	k	CONTAINER_OPEN
	f	Ljl$c;	l	DRINK
	f	Ljl$c;	m	EAT
	f	Ljl$c;	n	ELYTRA_GLIDE
	f	Ljl$c;	o	ENTITY_DAMAGE
	f	Ljl$c;	p	ENTITY_DIE
	f	Ljl$c;	q	ENTITY_DISMOUNT
	f	Ljl$c;	r	ENTITY_INTERACT
	f	Ljl$c;	s	ENTITY_MOUNT
	f	Ljl$c;	t	ENTITY_PLACE
	f	Ljl$c;	u	ENTITY_ACTION
	f	Ljl$c;	v	EQUIP
	f	Ljl$c;	w	EXPLODE
	f	Ljl$c;	x	FLAP
	f	Ljl$c;	y	FLUID_PICKUP
	f	Ljl$c;	z	FLUID_PLACE
	f	Ljl$c;	A	HIT_GROUND
	f	Ljl$c;	B	INSTRUMENT_PLAY
	f	Ljl$c;	C	ITEM_INTERACT_FINISH
	f	Ljl$c;	D	ITEM_INTERACT_START
	f	Ljl$c;	E	JUKEBOX_PLAY
	f	Ljl$c;	F	JUKEBOX_STOP_PLAY
	f	Ljl$c;	G	LIGHTNING_STRIKE
	f	Ljl$c;	H	NOTE_BLOCK_PLAY
	f	Ljl$c;	I	PRIME_FUSE
	f	Ljl$c;	J	PROJECTILE_LAND
	f	Ljl$c;	K	PROJECTILE_SHOOT
	f	Ljl$c;	L	SCULK_SENSOR_TENDRILS_CLICKING
	f	Ljl$c;	M	SHEAR
	f	Ljl$c;	N	SHRIEK
	f	Ljl$c;	O	SPLASH
	f	Ljl$c;	P	STEP
	f	Ljl$c;	Q	SWIM
	f	Ljl$c;	R	TELEPORT
	f	Ljl$c;	S	UNEQUIP
	f	Ljl$c;	T	RESONATE_1
	f	Ljl$c;	U	RESONATE_2
	f	Ljl$c;	V	RESONATE_3
	f	Ljl$c;	W	RESONATE_4
	f	Ljl$c;	X	RESONATE_5
	f	Ljl$c;	Y	RESONATE_6
	f	Ljl$c;	Z	RESONATE_7
	f	Ljl$c;	aa	RESONATE_8
	f	Ljl$c;	ab	RESONATE_9
	f	Ljl$c;	ac	RESONATE_10
	f	Ljl$c;	ad	RESONATE_11
	f	Ljl$c;	ae	RESONATE_12
	f	Ljl$c;	af	RESONATE_13
	f	Ljl$c;	ag	RESONATE_14
	f	Ljl$c;	ah	RESONATE_15
	f	I	ai	DEFAULT_NOTIFICATION_RADIUS
	f	Lcom/mojang/serialization/Codec;	aj	CODEC
	m	(I)V	<init>	<init>
	m	(Ljy;)Ljl;	a	bootstrap
	m	()I	a	notificationRadius
	m	(Ljava/lang/String;)Ljl$c;	a	register
	m	(Ljava/lang/String;I)Ljl$c;	a	register
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	ejb$a	net/minecraft/world/level/gameevent/GameEvent$Context
	f	Lbzm;	a	sourceEntity
	f	Leeb;	b	affectedState
	m	(Lbzm;Leeb;)V	<init>	<init>
	m	(Lbzm;)Lejb$a;	a	of
	m	(Leeb;)Lejb$a;	a	of
	m	(Lbzm;Leeb;)Lejb$a;	a	of
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbzm;	a	sourceEntity
	m	()Leeb;	b	affectedState
c	ejb$b	net/minecraft/world/level/gameevent/GameEvent$ListenerInfo
	f	Ljl;	a	gameEvent
	f	Lfis;	b	source
	f	Lejb$a;	c	context
	f	Lejd;	d	recipient
	f	D	e	distanceToRecipient
	m	(Ljl;Lfis;Lejb$a;Lejd;Lfis;)V	<init>	<init>
	m	(Lejb$b;)I	a	compareTo
	m	()Ljl;	a	gameEvent
	m	()Lfis;	b	source
	m	()Lejb$a;	c	context
	m	()Lejd;	d	recipient
	m	(Ljava/lang/Object;)I	compareTo	compareTo
c	ejc	net/minecraft/world/level/gameevent/GameEventDispatcher
	f	Laub;	a	level
	m	(Laub;)V	<init>	<init>
	m	(Ljl;Lfis;Lejb$a;)V	a	post
	m	(Ljava/util/List;)V	a	handleGameEventMessagesInQueue
	m	(Ljava/util/List;Ljl;Lfis;Lejb$a;Lejd;Lfis;)V	a	lambda$post$0
c	ejd	net/minecraft/world/level/gameevent/GameEventListener
	m	()Lejf;	a	getListenerSource
	m	()I	b	getListenerRadius
	m	(Laub;Ljl;Lejb$a;Lfis;)Z	a	handleGameEvent
	m	()Lejd$a;	c	getDeliveryMode
c	ejd$a	net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode
	f	Lejd$a;	a	UNSPECIFIED
	f	Lejd$a;	b	BY_DISTANCE
	f	[Lejd$a;	c	$VALUES
	m	()[Lejd$a;	values	values
	m	(Ljava/lang/String;)Lejd$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lejd$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ejd$b	net/minecraft/world/level/gameevent/GameEventListener$Provider
	m	()Lejd;	c	getListener
c	eje	net/minecraft/world/level/gameevent/GameEventListenerRegistry
	f	Leje;	a	NOOP
	m	()Z	a	isEmpty
	m	(Lejd;)V	a	register
	m	(Lejd;)V	b	unregister
	m	(Ljl;Lfis;Lejb$a;Leje$a;)Z	a	visitInRangeListeners
	m	()V	<clinit>	<clinit>
c	eje$1	net/minecraft/world/level/gameevent/GameEventListenerRegistry$1
	m	()V	<init>	<init>
	m	()Z	a	isEmpty
	m	(Lejd;)V	a	register
	m	(Lejd;)V	b	unregister
	m	(Ljl;Lfis;Lejb$a;Leje$a;)Z	a	visitInRangeListeners
c	eje$a	net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor
	m	(Lejd;Lfis;)V	visit	visit
c	ejf	net/minecraft/world/level/gameevent/PositionSource
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lzm;	d	STREAM_CODEC
	m	(Ldmu;)Ljava/util/Optional;	a	getPosition
	m	()Lejg;	a	getType
	m	()V	<clinit>	<clinit>
c	ejg	net/minecraft/world/level/gameevent/PositionSourceType
	f	Lejg;	a	BLOCK
	f	Lejg;	b	ENTITY
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lzm;	b	streamCodec
	m	(Ljava/lang/String;Lejg;)Lejg;	a	register
	m	()V	<clinit>	<clinit>
c	ejh	net/minecraft/world/level/gameevent/package-info
c	eji	net/minecraft/world/level/gameevent/vibrations/VibrationInfo
	f	Ljl;	b	gameEvent
	f	F	c	distance
	f	Lfis;	d	pos
	f	Ljava/util/UUID;	e	uuid
	f	Ljava/util/UUID;	f	projectileOwnerUuid
	f	Lbzm;	g	entity
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;FLfis;Ljava/util/UUID;Ljava/util/UUID;)V	<init>	<init>
	m	(Ljl;FLfis;Lbzm;)V	<init>	<init>
	m	(Ljl;FLfis;Ljava/util/UUID;Ljava/util/UUID;Lbzm;)V	<init>	<init>
	m	(Lbzm;)Ljava/util/UUID;	a	getProjectileOwner
	m	(Laub;)Ljava/util/Optional;	a	getEntity
	m	(Laub;)Ljava/util/Optional;	b	getProjectileOwner
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	gameEvent
	m	()F	b	distance
	m	()Lfis;	c	pos
	m	()Ljava/util/UUID;	d	uuid
	m	()Ljava/util/UUID;	e	projectileOwnerUuid
	m	()Lbzm;	f	entity
	m	(Laub;)Ljava/util/Optional;	c	lambda$getProjectileOwner$7
	m	(Lbzm;)Lcvo;	b	lambda$getProjectileOwner$6
	m	(Lbzm;)Z	c	lambda$getProjectileOwner$5
	m	(Laub;)Ljava/util/Optional;	d	lambda$getEntity$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Ljl;Ljava/lang/Float;Lfis;Ljava/util/Optional;Ljava/util/Optional;)Leji;	a	lambda$static$2
	m	(Leji;)Ljava/util/Optional;	a	lambda$static$1
	m	(Leji;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejj	net/minecraft/world/level/gameevent/vibrations/VibrationSelector
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	currentVibrationData
	m	(Ljava/util/Optional;J)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Leji;J)V	a	addCandidate
	m	(Leji;J)Z	b	shouldReplaceVibration
	m	(J)Ljava/util/Optional;	a	chosenCandidate
	m	()V	a	startOver
	m	(JLeji;)Lorg/apache/commons/lang3/tuple/Pair;	a	lambda$new$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lejj;)Ljava/lang/Long;	a	lambda$static$1
	m	(Lejj;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejk	net/minecraft/world/level/gameevent/vibrations/VibrationSystem
	f	Ljava/util/List;	l_	RESONANCE_EVENTS
	f	I	m_	NO_VIBRATION_FREQUENCY
	f	Ljava/util/function/ToIntFunction;	n_	VIBRATION_FREQUENCY_FOR_EVENT
	m	()Lejk$a;	gI	getVibrationData
	m	()Lejk$d;	gJ	getVibrationUser
	m	(Ljl;)I	a_	getGameEventFrequency
	m	(Lamd;)I	a	getGameEventFrequency
	m	(I)Lamd;	b	getResonanceEventByFrequency
	m	(FI)I	a_	getRedstoneStrengthForDistance
	m	(Lit/unimi/dsi/fastutil/objects/Reference2IntOpenHashMap;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejk$a	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/lang/String;	b	NBT_TAG_KEY
	f	Leji;	c	currentVibration
	f	I	d	travelTimeInTicks
	f	Lejj;	e	selectionStrategy
	f	Z	f	reloadVibrationParticle
	m	(Leji;Lejj;IZ)V	<init>	<init>
	m	()V	<init>	<init>
	m	()Lejj;	a	getSelectionStrategy
	m	()Leji;	b	getCurrentVibration
	m	(Leji;)V	a	setCurrentVibration
	m	()I	c	getTravelTimeInTicks
	m	(I)V	a	setTravelTimeInTicks
	m	()V	d	decrementTravelTime
	m	()Z	e	shouldReloadVibrationParticle
	m	(Z)V	a	setReloadVibrationParticle
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Ljava/util/Optional;Lejj;Ljava/lang/Integer;)Lejk$a;	a	lambda$static$1
	m	(Lejk$a;)Ljava/util/Optional;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejk$b	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener
	f	Lejk;	a	system
	m	(Lejk;)V	<init>	<init>
	m	()Lejf;	a	getListenerSource
	m	()I	b	getListenerRadius
	m	(Laub;Ljl;Lejb$a;Lfis;)Z	a	handleGameEvent
	m	(Laub;Ljl;Lejb$a;Lfis;)V	b	forceScheduleVibration
	m	(Laub;Lejk$a;Ljl;Lejb$a;Lfis;Lfis;)V	a	scheduleVibration
	m	(Ljb;Ljb;)F	a	distanceBetweenInBlocks
	m	(Ldmu;Lfis;Lfis;)Z	a	isOccluded
	m	(Leeb;)Z	a	lambda$isOccluded$1
	m	(Laub;Ljl;Lejb$a;Lfis;Lfis;)V	a	lambda$forceScheduleVibration$0
c	ejk$c	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker
	m	(Ldmu;Lejk$a;Lejk$d;)V	a	tick
	m	(Laub;Lejk$a;Lejk$d;)V	a	trySelectAndScheduleVibration
	m	(Laub;Lejk$a;Lejk$d;)V	b	tryReloadVibrationParticle
	m	(Laub;Lejk$a;Lejk$d;Leji;)Z	a	receiveVibration
	m	(Ldmu;Ljb;)Z	a	areAdjacentChunksTicking
	m	(Lejk$a;Lejk$d;Laub;Leji;)V	a	lambda$trySelectAndScheduleVibration$0
c	ejk$d	net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User
	m	()I	a	getListenerRadius
	m	()Lejf;	b	getPositionSource
	m	(Laub;Ljb;Ljl;Lejb$a;)Z	a	canReceiveVibration
	m	(Laub;Ljb;Ljl;Lbzm;Lbzm;F)V	a	onReceiveVibration
	m	()Lbae;	c	getListenableEvents
	m	()Z	d	canTriggerAvoidVibration
	m	()Z	f	requiresAdjacentChunksToBeTicking
	m	(F)I	a	calculateTravelTimeInTicks
	m	(Ljl;Lejb$a;)Z	a	isValidVibration
	m	()V	e	onDataChanged
c	ejl	net/minecraft/world/level/gameevent/vibrations/package-info
c	ejm	net/minecraft/world/level/levelgen/Aquifer
	m	(Leke;Ldlz;Lekg;Lekn;IILejm$a;)Lejm;	a	create
	m	(Lejm$a;)Lejm;	a	createDisabled
	m	(Lejt$b;D)Leeb;	a	computeSubstance
	m	()Z	a	shouldScheduleFluidUpdate
c	ejm$1	net/minecraft/world/level/levelgen/Aquifer$1
	f	Lejm$a;	a	val$fluidRule
	m	(Lejm$a;)V	<init>	<init>
	m	(Lejt$b;D)Leeb;	a	computeSubstance
	m	()Z	a	shouldScheduleFluidUpdate
c	ejm$a	net/minecraft/world/level/levelgen/Aquifer$FluidPicker
	m	(III)Lejm$b;	computeFluid	computeFluid
c	ejm$b	net/minecraft/world/level/levelgen/Aquifer$FluidStatus
	f	I	a	fluidLevel
	f	Leeb;	b	fluidType
	m	(ILeeb;)V	<init>	<init>
	m	(I)Leeb;	a	at
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	fluidLevel
	m	()Leeb;	b	fluidType
c	ejm$c	net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer
	f	I	a	X_RANGE
	f	I	b	Y_RANGE
	f	I	c	Z_RANGE
	f	I	d	X_SEPARATION
	f	I	e	Y_SEPARATION
	f	I	f	Z_SEPARATION
	f	I	g	X_SPACING
	f	I	h	Y_SPACING
	f	I	i	Z_SPACING
	f	I	j	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER
	f	D	k	FLOWING_UPDATE_SIMULARITY
	f	Leke;	l	noiseChunk
	f	Lejt;	m	barrierNoise
	f	Lejt;	n	fluidLevelFloodednessNoise
	f	Lejt;	o	fluidLevelSpreadNoise
	f	Lejt;	p	lavaNoise
	f	Lekn;	q	positionalRandomFactory
	f	[Lejm$b;	r	aquiferCache
	f	[J	s	aquiferLocationCache
	f	Lejm$a;	t	globalFluidPicker
	f	Lejt;	u	erosion
	f	Lejt;	v	depth
	f	Z	w	shouldScheduleFluidUpdate
	f	I	x	minGridX
	f	I	y	minGridY
	f	I	z	minGridZ
	f	I	A	gridSizeX
	f	I	B	gridSizeZ
	f	[[I	C	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS
	m	(Leke;Ldlz;Lekg;Lekn;IILejm$a;)V	<init>	<init>
	m	(III)I	a	getIndex
	m	(Lejt$b;D)Leeb;	a	computeSubstance
	m	()Z	a	shouldScheduleFluidUpdate
	m	(II)D	a	similarity
	m	(Lejt$b;Lorg/apache/commons/lang3/mutable/MutableDouble;Lejm$b;Lejm$b;)D	a	calculatePressure
	m	(I)I	a	gridX
	m	(I)I	b	gridY
	m	(I)I	c	gridZ
	m	(J)Lejm$b;	a	getAquiferStatus
	m	(III)Lejm$b;	b	computeFluid
	m	(IIILejm$b;IZ)I	a	computeSurfaceLevel
	m	(IIII)I	a	computeRandomizedFluidSurfaceLevel
	m	(IIILejm$b;I)Leeb;	a	computeFluidType
	m	()V	<clinit>	<clinit>
c	ejn	net/minecraft/world/level/levelgen/Beardifier
	f	I	a	BEARD_KERNEL_RADIUS
	f	I	f	BEARD_KERNEL_SIZE
	f	[F	g	BEARD_KERNEL
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	h	pieceIterator
	f	Lit/unimi/dsi/fastutil/objects/ObjectListIterator;	i	junctionIterator
	m	(Ldnq;Ldlz;)Lejn;	a	forStructuresInChunk
	m	(Lit/unimi/dsi/fastutil/objects/ObjectListIterator;Lit/unimi/dsi/fastutil/objects/ObjectListIterator;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	()D	a	minValue
	m	()D	b	maxValue
	m	(DDD)D	a	getBuryContribution
	m	(IIII)D	a	getBeardContribution
	m	(I)Z	a	isInKernelRange
	m	(III)D	a	computeBeardContribution
	m	(IDI)D	a	computeBeardContribution
	m	(Ldlz;Lit/unimi/dsi/fastutil/objects/ObjectList;IILit/unimi/dsi/fastutil/objects/ObjectList;Levg;)V	a	lambda$forStructuresInChunk$2
	m	(Leuy;)Z	a	lambda$forStructuresInChunk$1
	m	([F)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejn$1	net/minecraft/world/level/levelgen/Beardifier$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
	m	()V	<clinit>	<clinit>
c	ejn$a	net/minecraft/world/level/levelgen/Beardifier$Rigid
	f	Leuq;	a	box
	f	Levj;	b	terrainAdjustment
	f	I	c	groundLevelDelta
	m	(Leuq;Levj;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leuq;	a	box
	m	()Levj;	b	terrainAdjustment
	m	()I	c	groundLevelDelta
c	ejo	net/minecraft/world/level/levelgen/BelowZeroRetrogen
	f	Ljava/util/BitSet;	c	EMPTY
	f	Lcom/mojang/serialization/Codec;	d	BITSET_CODEC
	f	Lcom/mojang/serialization/Codec;	e	NON_EMPTY_CHUNK_STATUS
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Set;	f	RETAINED_RETROGEN_BIOMES
	f	Ldmw;	b	UPGRADE_HEIGHT_ACCESSOR
	f	Legz;	g	targetStatus
	f	Ljava/util/BitSet;	h	missingBedrock
	m	(Legz;Ljava/util/Optional;)V	<init>	<init>
	m	(Legs;)V	a	replaceOldBedrock
	m	(Legs;)V	b	applyBedrockMask
	m	()Legz;	a	targetStatus
	m	()Z	b	hasBedrockHoles
	m	(II)Z	a	hasBedrockHole
	m	(Ldoa;Lefy;)Ldoa;	a	getBiomeResolver
	m	(Ldoa;Ljava/util/function/Predicate;Lefy;IIILdog$f;)Ljl;	a	lambda$getBiomeResolver$8
	m	(Legs;Ljb;)V	a	lambda$applyBedrockMask$7
	m	(Legs;Ljb;)V	b	lambda$replaceOldBedrock$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lejo;)Ljava/util/Optional;	a	lambda$static$4
	m	(Legz;)Lcom/mojang/serialization/DataResult;	a	lambda$static$3
	m	()Ljava/lang/String;	c	lambda$static$2
	m	(Ljava/util/BitSet;)Ljava/util/stream/LongStream;	a	lambda$static$1
	m	(Ljava/util/stream/LongStream;)Ljava/util/BitSet;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejo$1	net/minecraft/world/level/levelgen/BelowZeroRetrogen$1
	m	()V	<init>	<init>
	m	()I	M_	getHeight
	m	()I	L_	getMinY
c	ejp	net/minecraft/world/level/levelgen/BitRandomSource
	f	F	b	FLOAT_MULTIPLIER
	f	D	c	DOUBLE_MULTIPLIER
	m	(I)I	c	next
	m	()I	f	nextInt
	m	(I)I	a	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
c	ejq	net/minecraft/world/level/levelgen/Column
	m	()V	<init>	<init>
	m	(II)Lejq$b;	a	around
	m	(II)Lejq$b;	b	inside
	m	(I)Lejq;	a	below
	m	(I)Lejq;	b	fromHighest
	m	(I)Lejq;	c	above
	m	(I)Lejq;	d	fromLowest
	m	()Lejq;	a	line
	m	(Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lejq;	a	create
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	(Ljava/util/OptionalInt;)Lejq;	a	withFloor
	m	(Ljava/util/OptionalInt;)Lejq;	b	withCeiling
	m	(Ldna;Ljb;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional;	a	scan
	m	(Ldna;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Ljb$a;ILjh;)Ljava/util/OptionalInt;	a	scanDirection
c	ejq$a	net/minecraft/world/level/levelgen/Column$Line
	f	Lejq$a;	a	INSTANCE
	m	()V	<init>	<init>
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	ejq$b	net/minecraft/world/level/levelgen/Column$Range
	f	I	a	floor
	f	I	b	ceiling
	m	(II)V	<init>	<init>
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()I	e	ceiling
	m	()I	f	floor
	m	()I	g	height
	m	()Ljava/lang/String;	toString	toString
c	ejq$c	net/minecraft/world/level/levelgen/Column$Ray
	f	I	a	edge
	f	Z	b	pointingUp
	m	(IZ)V	<init>	<init>
	m	()Ljava/util/OptionalInt;	b	getCeiling
	m	()Ljava/util/OptionalInt;	c	getFloor
	m	()Ljava/util/OptionalInt;	d	getHeight
	m	()Ljava/lang/String;	toString	toString
c	ejr	net/minecraft/world/level/levelgen/DebugLevelSource
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	I	h	BLOCK_MARGIN
	f	Ljava/util/List;	i	ALL_BLOCKS
	f	I	j	GRID_WIDTH
	f	I	k	GRID_HEIGHT
	f	Leeb;	d	AIR
	f	Leeb;	e	BARRIER
	f	I	f	HEIGHT
	f	I	g	BARRIER_HEIGHT
	m	(Ljl$c;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	(Lauj;Ldnq;Leko;Lefy;)V	a	buildSurface
	m	(Ldnt;Lefy;Ldnq;)V	a	applyBiomeDecoration
	m	(Lelc;Leko;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	(IILeka$a;Ldmw;Leko;)I	a	getBaseHeight
	m	(IILdmw;Leko;)Ldng;	a	getBaseColumn
	m	(Ljava/util/List;Leko;Ljb;)V	a	addDebugScreenInfo
	m	(II)Leeb;	a	getBlockStateFor
	m	(Lauj;JLeko;Ldnz;Ldnq;Lefy;)V	a	applyCarvers
	m	(Lauj;)V	a	spawnOriginalMobs
	m	()I	g	getMinY
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	(Ldpz;)Ljava/util/stream/Stream;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejs	net/minecraft/world/level/levelgen/Density
	f	D	a	SURFACE
	f	D	b	UNRECOVERABLY_DENSE
	f	D	c	UNRECOVERABLY_THIN
	m	()V	<init>	<init>
c	ejt	net/minecraft/world/level/levelgen/DensityFunction
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	HOLDER_HELPER_CODEC
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	(DD)Lejt;	a	clamp
	m	()Lejt;	d	abs
	m	()Lejt;	e	square
	m	()Lejt;	f	cube
	m	()Lejt;	g	halfNegative
	m	()Lejt;	h	quarterNegative
	m	()Lejt;	i	squeeze
	m	(Lejt;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejt$a	net/minecraft/world/level/levelgen/DensityFunction$ContextProvider
	m	(I)Lejt$b;	a	forIndex
	m	([DLejt;)V	a	fillAllDirectly
c	ejt$b	net/minecraft/world/level/levelgen/DensityFunction$FunctionContext
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	()Lelc;	d	getBlender
c	ejt$c	net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder
	f	Ljl;	b	noiseData
	f	Lezo;	c	noise
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;)V	<init>	<init>
	m	(Ljl;Lezo;)V	<init>	<init>
	m	(DDD)D	a	getValue
	m	()D	a	maxValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	noiseData
	m	()Lezo;	c	noise
	m	(Ljl;)Lejt$c;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejt$d	net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
c	ejt$e	net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext
	f	I	a	blockX
	f	I	b	blockY
	f	I	c	blockZ
	m	(III)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
c	ejt$f	net/minecraft/world/level/levelgen/DensityFunction$Visitor
	m	(Lejt;)Lejt;	apply	apply
	m	(Lejt$c;)Lejt$c;	a	visitNoise
c	eju	net/minecraft/world/level/levelgen/DensityFunctions
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	D	a	MAX_REASONABLE_NOISE_VALUE
	f	Lcom/mojang/serialization/Codec;	d	NOISE_VALUE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	DIRECT_CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Ljy;Ljava/lang/String;Lbbu;)Lcom/mojang/serialization/MapCodec;	a	register
	m	(Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lbbu;	a	singleArgumentCodec
	m	(Ljava/util/function/Function;Ljava/util/function/Function;)Lbbu;	a	singleFunctionArgumentCodec
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lbbu;	a	doubleFunctionArgumentCodec
	m	(Lcom/mojang/serialization/MapCodec;)Lbbu;	a	makeCodec
	m	()V	<init>	<init>
	m	(Lejt;)Lejt;	a	interpolated
	m	(Lejt;)Lejt;	b	flatCache
	m	(Lejt;)Lejt;	c	cache2d
	m	(Lejt;)Lejt;	d	cacheOnce
	m	(Lejt;)Lejt;	e	cacheAllInCell
	m	(Ljl;DDDD)Lejt;	a	mappedNoise
	m	(Ljl;DDD)Lejt;	a	mappedNoise
	m	(Ljl;DD)Lejt;	a	mappedNoise
	m	(Lejt;Lejt;DLjl;)Lejt;	a	shiftedNoise2d
	m	(Ljl;)Lejt;	a	noise
	m	(Ljl;DD)Lejt;	b	noise
	m	(Ljl;D)Lejt;	a	noise
	m	(Lejt;DDLejt;Lejt;)Lejt;	a	rangeChoice
	m	(Ljl;)Lejt;	b	shiftA
	m	(Ljl;)Lejt;	c	shiftB
	m	(Ljl;)Lejt;	d	shift
	m	(Lejt;)Lejt;	f	blendDensity
	m	(J)Lejt;	a	endIslands
	m	(Lejt;Ljl;Leju$z$a;)Lejt;	a	weirdScaledSampler
	m	(Lejt;Lejt;)Lejt;	a	add
	m	(Lejt;Lejt;)Lejt;	b	mul
	m	(Lejt;Lejt;)Lejt;	c	min
	m	(Lejt;Lejt;)Lejt;	d	max
	m	(Lbbb;)Lejt;	a	spline
	m	()Lejt;	a	zero
	m	(D)Lejt;	a	constant
	m	(IIDD)Lejt;	a	yClampedGradient
	m	(Lejt;Leju$k$a;)Lejt;	a	map
	m	(Lejt;DD)Lejt;	a	mapFromUnitTo
	m	()Lejt;	b	blendAlpha
	m	()Lejt;	c	blendOffset
	m	(Lejt;Lejt;Lejt;)Lejt;	a	lerp
	m	(Lejt;DLejt;)Lejt;	a	lerp
	m	(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/BiFunction;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$doubleFunctionArgumentCodec$3
	m	(Lejt;)Lcom/mojang/datafixers/util/Either;	g	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Lejt;	a	lambda$static$1
	m	(Lejt;)Lcom/mojang/serialization/MapCodec;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$a	net/minecraft/world/level/levelgen/DensityFunctions$Ap2
	f	Leju$y$a;	e	type
	f	Lejt;	f	argument1
	f	Lejt;	g	argument2
	f	D	h	minValue
	f	D	i	maxValue
	m	(Leju$y$a;Lejt;Lejt;DD)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leju$y$a;	j	type
	m	()Lejt;	k	argument1
	m	()Lejt;	l	argument2
c	eju$b	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker
	f	Leju$b;	a	INSTANCE
	f	[Leju$b;	f	$VALUES
	m	()[Leju$b;	values	values
	m	(Ljava/lang/String;)Leju$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()[Leju$b;	j	$values
	m	()V	<clinit>	<clinit>
c	eju$c	net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker
	f	Lbbu;	e	CODEC
	m	()Lbbu;	c	codec
	m	()V	<clinit>	<clinit>
c	eju$d	net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha
	f	Leju$d;	a	INSTANCE
	f	Lbbu;	e	CODEC
	f	[Leju$d;	f	$VALUES
	m	()[Leju$d;	values	values
	m	(Ljava/lang/String;)Leju$d;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()[Leju$d;	j	$values
	m	()V	<clinit>	<clinit>
c	eju$e	net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity
	f	Lejt;	a	input
	f	Lbbu;	e	CODEC
	m	(Lejt;)V	<init>	<init>
	m	(Lejt$b;D)D	a	transform
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	j	input
	m	()V	<clinit>	<clinit>
c	eju$f	net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset
	f	Leju$f;	a	INSTANCE
	f	Lbbu;	e	CODEC
	f	[Leju$f;	f	$VALUES
	m	()[Leju$f;	values	values
	m	(Ljava/lang/String;)Leju$f;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()[Leju$f;	j	$values
	m	()V	<clinit>	<clinit>
c	eju$g	net/minecraft/world/level/levelgen/DensityFunctions$Clamp
	f	Lejt;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
	f	Lbbu;	a	CODEC
	m	(Lejt;DD)V	<init>	<init>
	m	(D)D	a	transform
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	aD_	input
	m	()D	a	minValue
	m	()D	b	maxValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$h	net/minecraft/world/level/levelgen/DensityFunctions$Constant
	f	D	a	value
	f	Lbbu;	e	CODEC
	f	Leju$h;	f	ZERO
	m	(D)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	j	value
	m	()V	<clinit>	<clinit>
c	eju$i	net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction
	f	Lbbu;	a	CODEC
	f	F	e	ISLAND_THRESHOLD
	f	Lezr;	f	islandNoise
	m	(J)V	<init>	<init>
	m	(Lezr;II)F	a	getHeightValue
	m	(Lejt$b;)D	a	compute
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()V	<clinit>	<clinit>
c	eju$j	net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder
	f	Ljl;	a	function
	m	(Ljl;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	j	function
c	eju$k	net/minecraft/world/level/levelgen/DensityFunctions$Mapped
	f	Leju$k$a;	a	type
	f	Lejt;	e	input
	f	D	f	minValue
	f	D	g	maxValue
	m	(Leju$k$a;Lejt;DD)V	<init>	<init>
	m	(Leju$k$a;Lejt;)Leju$k;	a	create
	m	(Leju$k$a;D)D	a	transform
	m	(D)D	a	transform
	m	(Lejt$f;)Leju$k;	b	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leju$k$a;	k	type
	m	()Lejt;	aD_	input
	m	()D	a	minValue
	m	()D	b	maxValue
	m	(Lejt$f;)Lejt;	a	mapAll
c	eju$k$a	net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type
	f	Leju$k$a;	a	ABS
	f	Leju$k$a;	b	SQUARE
	f	Leju$k$a;	c	CUBE
	f	Leju$k$a;	d	HALF_NEGATIVE
	f	Leju$k$a;	e	QUARTER_NEGATIVE
	f	Leju$k$a;	f	SQUEEZE
	f	Ljava/lang/String;	g	name
	f	Lbbu;	h	codec
	f	[Leju$k$a;	i	$VALUES
	m	()[Leju$k$a;	values	values
	m	(Ljava/lang/String;)Leju$k$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lejt;)Leju$k;	a	lambda$new$0
	m	()[Leju$k$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eju$l	net/minecraft/world/level/levelgen/DensityFunctions$Marker
	f	Leju$l$a;	a	type
	f	Lejt;	e	wrapped
	m	(Leju$l$a;Lejt;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leju$l$a;	j	type
	m	()Lejt;	k	wrapped
c	eju$l$a	net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type
	f	Leju$l$a;	a	Interpolated
	f	Leju$l$a;	b	FlatCache
	f	Leju$l$a;	c	Cache2D
	f	Leju$l$a;	d	CacheOnce
	f	Leju$l$a;	e	CacheAllInCell
	f	Ljava/lang/String;	f	name
	f	Lbbu;	g	codec
	f	[Leju$l$a;	h	$VALUES
	m	()[Leju$l$a;	values	values
	m	(Ljava/lang/String;)Leju$l$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lejt;)Leju$m;	a	lambda$new$0
	m	()[Leju$l$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eju$m	net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked
	m	()Leju$l$a;	j	type
	m	()Lejt;	k	wrapped
	m	()Lbbu;	c	codec
	m	(Lejt$f;)Lejt;	a	mapAll
c	eju$n	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd
	f	Leju$n$a;	e	specificType
	f	Lejt;	f	input
	f	D	g	minValue
	f	D	h	maxValue
	f	D	i	argument
	m	(Leju$n$a;Lejt;DDD)V	<init>	<init>
	m	()Leju$y$a;	j	type
	m	()Lejt;	k	argument1
	m	()Lejt;	l	argument2
	m	(D)D	a	transform
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leju$n$a;	m	specificType
	m	()Lejt;	aD_	input
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()D	n	argument
c	eju$n$a	net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type
	f	Leju$n$a;	a	MUL
	f	Leju$n$a;	b	ADD
	f	[Leju$n$a;	c	$VALUES
	m	()[Leju$n$a;	values	values
	m	(Ljava/lang/String;)Leju$n$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leju$n$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eju$o	net/minecraft/world/level/levelgen/DensityFunctions$Noise
	f	Lejt$c;	f	noise
	f	D	g	xzScale
	f	D	h	yScale
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lbbu;	e	CODEC
	m	(Lejt$c;DD)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt$c;	j	noise
	m	()D	k	xzScale
	m	()D	l	yScale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$p	net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer
	m	()Lejt;	aD_	input
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(D)D	a	transform
c	eju$q	net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice
	f	Lejt;	f	input
	f	D	g	minInclusive
	f	D	h	maxExclusive
	f	Lejt;	i	whenInRange
	f	Lejt;	j	whenOutOfRange
	f	Lcom/mojang/serialization/MapCodec;	a	DATA_CODEC
	f	Lbbu;	e	CODEC
	m	(Lejt;DDLejt;Lejt;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	j	input
	m	()D	k	minInclusive
	m	()D	l	maxExclusive
	m	()Lejt;	m	whenInRange
	m	()Lejt;	n	whenOutOfRange
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$r	net/minecraft/world/level/levelgen/DensityFunctions$Shift
	f	Lejt$c;	a	offsetNoise
	f	Lbbu;	e	CODEC
	m	(Lejt$c;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt$c;	j	offsetNoise
	m	()V	<clinit>	<clinit>
c	eju$s	net/minecraft/world/level/levelgen/DensityFunctions$ShiftA
	f	Lejt$c;	a	offsetNoise
	f	Lbbu;	e	CODEC
	m	(Lejt$c;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt$c;	j	offsetNoise
	m	()V	<clinit>	<clinit>
c	eju$t	net/minecraft/world/level/levelgen/DensityFunctions$ShiftB
	f	Lejt$c;	a	offsetNoise
	f	Lbbu;	e	CODEC
	m	(Lejt$c;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt$c;	j	offsetNoise
	m	()V	<clinit>	<clinit>
c	eju$u	net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise
	m	()Lejt$c;	j	offsetNoise
	m	()D	a	minValue
	m	()D	b	maxValue
	m	(DDD)D	a	compute
	m	([DLejt$a;)V	a	fillArray
c	eju$v	net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise
	f	Lejt;	e	shiftX
	f	Lejt;	f	shiftY
	f	Lejt;	g	shiftZ
	f	D	h	xzScale
	f	D	i	yScale
	f	Lejt$c;	j	noise
	f	Lcom/mojang/serialization/MapCodec;	k	DATA_CODEC
	f	Lbbu;	a	CODEC
	m	(Lejt;Lejt;Lejt;DDLejt$c;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	j	shiftX
	m	()Lejt;	k	shiftY
	m	()Lejt;	l	shiftZ
	m	()D	m	xzScale
	m	()D	n	yScale
	m	()Lejt$c;	o	noise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$w	net/minecraft/world/level/levelgen/DensityFunctions$Spline
	f	Lbbb;	e	spline
	f	Lcom/mojang/serialization/Codec;	f	SPLINE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	g	DATA_CODEC
	f	Lbbu;	a	CODEC
	m	(Lbbb;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	()D	a	minValue
	m	()D	b	maxValue
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbbb;	j	spline
	m	(Lejt$f;Leju$w$a;)Leju$w$a;	a	lambda$mapAll$0
	m	()V	<clinit>	<clinit>
c	eju$w$a	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate
	f	Ljl;	c	function
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljl;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	(Leju$w$b;)F	a	apply
	m	()F	b	minValue
	m	()F	c	maxValue
	m	(Lejt$f;)Leju$w$a;	a	mapAll
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	function
	m	(Ljava/lang/Object;)F	a	apply
	m	()V	<clinit>	<clinit>
c	eju$w$b	net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point
	f	Lejt$b;	a	context
	m	(Lejt$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt$b;	a	context
c	eju$x	net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext
	m	()Lejt;	j	input
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	(Lejt$b;D)D	a	transform
c	eju$y	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction
	f	Lorg/slf4j/Logger;	a	LOGGER
	m	(Leju$y$a;Lejt;Lejt;)Leju$y;	a	create
	m	()Leju$y$a;	j	type
	m	()Lejt;	k	argument1
	m	()Lejt;	l	argument2
	m	()Lbbu;	c	codec
	m	()V	<clinit>	<clinit>
c	eju$y$a	net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type
	f	Leju$y$a;	a	ADD
	f	Leju$y$a;	b	MUL
	f	Leju$y$a;	c	MIN
	f	Leju$y$a;	d	MAX
	f	Lbbu;	e	codec
	f	Ljava/lang/String;	f	name
	f	[Leju$y$a;	g	$VALUES
	m	()[Leju$y$a;	values	values
	m	(Ljava/lang/String;)Leju$y$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lejt;Lejt;)Leju$y;	a	lambda$new$0
	m	()[Leju$y$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eju$z	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler
	f	Lejt;	e	input
	f	Lejt$c;	f	noise
	f	Leju$z$a;	g	rarityValueMapper
	f	Lcom/mojang/serialization/MapCodec;	h	DATA_CODEC
	f	Lbbu;	a	CODEC
	m	(Lejt;Lejt$c;Leju$z$a;)V	<init>	<init>
	m	(Lejt$b;D)D	a	transform
	m	(Lejt$f;)Lejt;	a	mapAll
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	j	input
	m	()Lejt$c;	k	noise
	m	()Leju$z$a;	l	rarityValueMapper
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eju$z$a	net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper
	f	Leju$z$a;	a	TYPE1
	f	Leju$z$a;	b	TYPE2
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;	e	mapper
	f	D	f	maxRarity
	f	[Leju$z$a;	g	$VALUES
	m	()[Leju$z$a;	values	values
	m	(Ljava/lang/String;)Leju$z$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lit/unimi/dsi/fastutil/doubles/Double2DoubleFunction;D)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leju$z$a;	a	$values
	m	()V	<clinit>	<clinit>
c	eju$aa	net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient
	f	I	e	fromY
	f	I	f	toY
	f	D	g	fromValue
	f	D	h	toValue
	f	Lcom/mojang/serialization/MapCodec;	i	DATA_CODEC
	f	Lbbu;	a	CODEC
	m	(IIDD)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	j	fromY
	m	()I	k	toY
	m	()D	l	fromValue
	m	()D	m	toValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejv	net/minecraft/world/level/levelgen/FlatLevelSource
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Letb;	d	settings
	m	(Letb;)V	<init>	<init>
	m	(Ljn;Leko;J)Lega;	a	createState
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Letb;	h	settings
	m	(Lauj;Ldnq;Leko;Lefy;)V	a	buildSurface
	m	(Ldmw;)I	a	getSpawnHeight
	m	(Lelc;Leko;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	(IILeka$a;Ldmw;Leko;)I	a	getBaseHeight
	m	(IILdmw;Leko;)Ldng;	a	getBaseColumn
	m	(Ljava/util/List;Leko;Ljb;)V	a	addDebugScreenInfo
	m	(Lauj;JLeko;Ldnz;Ldnq;Lefy;)V	a	applyCarvers
	m	(Lauj;)V	a	spawnOriginalMobs
	m	()I	g	getMinY
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	(I)[Leeb;	a	lambda$getBaseColumn$4
	m	(Leeb;)Leeb;	a	lambda$getBaseColumn$3
	m	(Ljn;)Ljava/util/stream/Stream;	a	lambda$createState$2
	m	(Ljl$c;)Ljl;	a	lambda$createState$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejw	net/minecraft/world/level/levelgen/GenerationStep
	m	()V	<init>	<init>
c	ejw$a	net/minecraft/world/level/levelgen/GenerationStep$Decoration
	f	Lejw$a;	a	RAW_GENERATION
	f	Lejw$a;	b	LAKES
	f	Lejw$a;	c	LOCAL_MODIFICATIONS
	f	Lejw$a;	d	UNDERGROUND_STRUCTURES
	f	Lejw$a;	e	SURFACE_STRUCTURES
	f	Lejw$a;	f	STRONGHOLDS
	f	Lejw$a;	g	UNDERGROUND_ORES
	f	Lejw$a;	h	UNDERGROUND_DECORATION
	f	Lejw$a;	i	FLUID_SPRINGS
	f	Lejw$a;	j	VEGETAL_DECORATION
	f	Lejw$a;	k	TOP_LAYER_MODIFICATION
	f	Lcom/mojang/serialization/Codec;	l	CODEC
	f	Ljava/lang/String;	m	name
	f	[Lejw$a;	n	$VALUES
	m	()[Lejw$a;	values	values
	m	(Ljava/lang/String;)Lejw$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lejw$a;	b	$values
	m	()V	<clinit>	<clinit>
c	ejx	net/minecraft/world/level/levelgen/GeodeBlockSettings
	f	Lern;	a	fillingProvider
	f	Lern;	b	innerLayerProvider
	f	Lern;	c	alternateInnerLayerProvider
	f	Lern;	d	middleLayerProvider
	f	Lern;	e	outerLayerProvider
	f	Ljava/util/List;	f	innerPlacements
	f	Lbae;	g	cannotReplace
	f	Lbae;	h	invalidBlocks
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	m	(Lern;Lern;Lern;Lern;Lern;Ljava/util/List;Lbae;Lbae;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$8
	m	(Lejx;)Lbae;	a	lambda$static$7
	m	(Lejx;)Lbae;	b	lambda$static$6
	m	(Lejx;)Ljava/util/List;	c	lambda$static$5
	m	(Lejx;)Lern;	d	lambda$static$4
	m	(Lejx;)Lern;	e	lambda$static$3
	m	(Lejx;)Lern;	f	lambda$static$2
	m	(Lejx;)Lern;	g	lambda$static$1
	m	(Lejx;)Lern;	h	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejy	net/minecraft/world/level/levelgen/GeodeCrackSettings
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	generateCrackChance
	f	D	c	baseCrackSize
	f	I	d	crackPointOffset
	m	(DDI)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lejy;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lejy;)Ljava/lang/Double;	b	lambda$static$1
	m	(Lejy;)Ljava/lang/Double;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ejz	net/minecraft/world/level/levelgen/GeodeLayerSettings
	f	Lcom/mojang/serialization/Codec;	f	LAYER_RANGE
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	D	b	filling
	f	D	c	innerLayer
	f	D	d	middleLayer
	f	D	e	outerLayer
	m	(DDDD)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lejz;)Ljava/lang/Double;	a	lambda$static$3
	m	(Lejz;)Ljava/lang/Double;	b	lambda$static$2
	m	(Lejz;)Ljava/lang/Double;	c	lambda$static$1
	m	(Lejz;)Ljava/lang/Double;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eka	net/minecraft/world/level/levelgen/Heightmap
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/util/function/Predicate;	b	NOT_AIR
	f	Ljava/util/function/Predicate;	c	MATERIAL_MOTION_BLOCKING
	f	Lbao;	d	data
	f	Ljava/util/function/Predicate;	e	isOpaque
	f	Lefy;	f	chunk
	m	(Lefy;Leka$a;)V	<init>	<init>
	m	(Lefy;Ljava/util/Set;)V	a	primeHeightmaps
	m	(IIILeeb;)Z	a	update
	m	(II)I	a	getFirstAvailable
	m	(II)I	b	getHighestTaken
	m	(I)I	a	getFirstAvailable
	m	(III)V	a	setHeight
	m	(Lefy;Leka$a;[J)V	a	setRawData
	m	()[J	a	getRawData
	m	(II)I	c	getIndex
	m	(Leeb;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eka$a	net/minecraft/world/level/levelgen/Heightmap$Types
	f	Leka$a;	a	WORLD_SURFACE_WG
	f	Leka$a;	b	WORLD_SURFACE
	f	Leka$a;	c	OCEAN_FLOOR_WG
	f	Leka$a;	d	OCEAN_FLOOR
	f	Leka$a;	e	MOTION_BLOCKING
	f	Leka$a;	f	MOTION_BLOCKING_NO_LEAVES
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	h	STREAM_CODEC
	f	I	j	id
	f	Ljava/lang/String;	k	serializationKey
	f	Leka$b;	l	usage
	f	Ljava/util/function/Predicate;	m	isOpaque
	f	[Leka$a;	n	$VALUES
	m	()[Leka$a;	values	values
	m	(Ljava/lang/String;)Leka$a;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;Leka$b;Ljava/util/function/Predicate;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getSerializationKey
	m	()Z	b	sendToClient
	m	()Z	d	keepAfterWorldgen
	m	()Ljava/util/function/Predicate;	e	isOpaque
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Leka$a;)I	a	lambda$static$3
	m	(Leka$a;)I	b	lambda$static$2
	m	(Leeb;)Z	a	lambda$static$1
	m	(Leeb;)Z	b	lambda$static$0
	m	()[Leka$a;	f	$values
	m	()V	<clinit>	<clinit>
c	eka$b	net/minecraft/world/level/levelgen/Heightmap$Usage
	f	Leka$b;	a	WORLDGEN
	f	Leka$b;	b	LIVE_WORLD
	f	Leka$b;	c	CLIENT
	f	[Leka$b;	d	$VALUES
	m	()[Leka$b;	values	values
	m	(Ljava/lang/String;)Leka$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leka$b;	a	$values
	m	()V	<clinit>	<clinit>
c	ekb	net/minecraft/world/level/levelgen/LegacyRandomSource
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Lekc;	i	gaussianSource
	m	(J)V	<init>	<init>
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	(I)I	c	next
	m	()D	k	nextGaussian
c	ekb$a	net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory
	f	J	a	seed
	m	(J)V	<init>	<init>
	m	(III)Lbck;	a	at
	m	(Ljava/lang/String;)Lbck;	a	fromHashOf
	m	(J)Lbck;	a	fromSeed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
c	ekc	net/minecraft/world/level/levelgen/MarsagliaPolarGaussian
	f	Lbck;	a	randomSource
	f	D	b	nextNextGaussian
	f	Z	c	haveNextNextGaussian
	m	(Lbck;)V	<init>	<init>
	m	()V	a	reset
	m	()D	b	nextGaussian
c	ekd	net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leeb;	d	AIR
	f	Ljl;	e	settings
	f	Ljava/util/function/Supplier;	f	globalFluidPicker
	m	(Ldob;Ljl;)V	<init>	<init>
	m	(Lekf;)Lejm$a;	a	createFluidPicker
	m	(Leko;Lelc;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	createBiomes
	m	(Lelc;Leko;Ldnq;Lefy;)V	b	doCreateBiomes
	m	(Lefy;Ldnq;Lelc;Leko;)Leke;	a	createNoiseChunk
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Ljl;	h	generatorSettings
	m	(Lamd;)Z	a	stable
	m	(IILeka$a;Ldmw;Leko;)I	a	getBaseHeight
	m	(IILdmw;Leko;)Ldng;	a	getBaseColumn
	m	(Ljava/util/List;Leko;Ljb;)V	a	addDebugScreenInfo
	m	(Ldmw;Leko;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt;	a	iterateNoiseColumn
	m	(Lauj;Ldnq;Leko;Lefy;)V	a	buildSurface
	m	(Lefy;Lekx;Leko;Ldnq;Ldnz;Ljy;Lelc;)V	a	buildSurface
	m	(Lauj;JLeko;Ldnz;Ldnq;Lefy;)V	a	applyCarvers
	m	(Lelc;Leko;Ldnq;Lefy;)Ljava/util/concurrent/CompletableFuture;	a	fillFromNoise
	m	(Lelc;Ldnq;Leko;Lefy;II)Lefy;	a	doFill
	m	(Leke;IIILeeb;)Leeb;	a	debugPreliminarySurfaceLevel
	m	()I	e	getGenDepth
	m	()I	f	getSeaLevel
	m	()I	g	getMinY
	m	(Lauj;)V	a	spawnOriginalMobs
	m	(Ldnq;Lelc;Leko;Lefy;)Leke;	a	lambda$doFill$12
	m	(Lefy;ILeki;ILelc;Ldnq;Leko;I)Lefy;	a	lambda$fillFromNoise$11
	m	(Ldlz;Leko;)Ldny;	a	lambda$applyCarvers$10
	m	(Ldnq;Lauj;Leko;Lefy;)Leke;	a	lambda$applyCarvers$9
	m	(Leko;III)Ljl;	a	lambda$applyCarvers$8
	m	(Ldnq;Lelc;Leko;Lefy;)Leke;	b	lambda$buildSurface$7
	m	(Ldnq;Lelc;Leko;Lefy;)Leke;	c	lambda$doCreateBiomes$6
	m	(Lelc;Leko;Ldnq;Lefy;)Lefy;	c	lambda$createBiomes$5
	m	(Lejm$b;ILejm$b;Lejm$b;III)Lejm$b;	a	lambda$createFluidPicker$4
	m	(Ljl;)Lejm$a;	b	lambda$new$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lekd;)Ljl;	a	lambda$static$1
	m	(Lekd;)Ldob;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eke	net/minecraft/world/level/levelgen/NoiseChunk
	f	Leki;	a	noiseSettings
	f	I	b	cellCountXZ
	f	I	c	cellCountY
	f	I	d	cellNoiseMinY
	f	I	e	firstCellX
	f	I	f	firstCellZ
	f	I	g	firstNoiseX
	f	I	h	firstNoiseZ
	f	Ljava/util/List;	i	interpolators
	f	Ljava/util/List;	j	cellCaches
	f	Ljava/util/Map;	k	wrapped
	f	Lit/unimi/dsi/fastutil/longs/Long2IntMap;	l	preliminarySurfaceLevel
	f	Lejm;	m	aquifer
	f	Lejt;	n	initialDensityNoJaggedness
	f	Leke$c;	o	blockStateRule
	f	Lelc;	p	blender
	f	Leke$g;	q	blendAlpha
	f	Leke$g;	r	blendOffset
	f	Leju$c;	s	beardifier
	f	J	t	lastBlendingDataPos
	f	Lelc$a;	u	lastBlendingOutput
	f	I	v	noiseSizeXZ
	f	I	w	cellWidth
	f	I	x	cellHeight
	f	Z	y	interpolating
	f	Z	z	fillingCell
	f	I	A	cellStartBlockX
	f	I	B	cellStartBlockY
	f	I	C	cellStartBlockZ
	f	I	D	inCellX
	f	I	E	inCellY
	f	I	F	inCellZ
	f	J	G	interpolationCounter
	f	J	H	arrayInterpolationCounter
	f	I	I	arrayIndex
	f	Lejt$a;	J	sliceFillingContextProvider
	m	(Lefy;Leko;Leju$c;Lekf;Lejm$a;Lelc;)Leke;	a	forChunk
	m	(ILeko;IILeki;Leju$c;Lekf;Lejm$a;Lelc;)V	<init>	<init>
	m	(Lekg;Ljava/util/List;)Ldog$f;	a	cachedClimateSampler
	m	()Leeb;	e	getInterpolatedState
	m	()I	a	blockX
	m	()I	b	blockY
	m	()I	c	blockZ
	m	(II)I	a	preliminarySurfaceLevel
	m	(J)I	a	computePreliminarySurfaceLevel
	m	()Lelc;	d	getBlender
	m	(ZI)V	a	fillSlice
	m	()V	f	initializeForFirstCellX
	m	(I)V	b	advanceCellX
	m	(I)Leke;	c	forIndex
	m	([DLejt;)V	a	fillAllDirectly
	m	(II)V	b	selectCellYZ
	m	(ID)V	a	updateForY
	m	(ID)V	b	updateForX
	m	(ID)V	c	updateForZ
	m	()V	g	stopInterpolation
	m	()V	h	swapSlices
	m	()Lejm;	i	aquifer
	m	()I	j	cellWidth
	m	()I	k	cellHeight
	m	(II)Lelc$a;	c	getOrComputeBlendingOutput
	m	(Lejt;)Lejt;	a	wrap
	m	(Lejt;)Lejt;	b	wrapNew
	m	(I)Lejt$b;	a	forIndex
	m	(Lejt;Lejt$b;)Leeb;	a	lambda$new$0
c	eke$1	net/minecraft/world/level/levelgen/NoiseChunk$1
	f	Leke;	a	this$0
	m	(Leke;)V	<init>	<init>
	m	(I)Lejt$b;	a	forIndex
	m	([DLejt;)V	a	fillAllDirectly
c	eke$2	net/minecraft/world/level/levelgen/NoiseChunk$2
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$DensityFunctions$Marker$Type
	m	()V	<clinit>	<clinit>
c	eke$a	net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha
	f	Leke;	a	this$0
	m	(Leke;)V	<init>	<init>
	m	()Lejt;	k	wrapped
	m	(Lejt$f;)Lejt;	a	mapAll
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
c	eke$b	net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset
	f	Leke;	a	this$0
	m	(Leke;)V	<init>	<init>
	m	()Lejt;	k	wrapped
	m	(Lejt$f;)Lejt;	a	mapAll
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()D	a	minValue
	m	()D	b	maxValue
	m	()Lbbu;	c	codec
c	eke$c	net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller
	m	(Lejt$b;)Leeb;	calculate	calculate
c	eke$d	net/minecraft/world/level/levelgen/NoiseChunk$Cache2D
	f	Lejt;	a	function
	f	J	e	lastPos2D
	f	D	f	lastValue
	m	(Lejt;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()Lejt;	k	wrapped
	m	()Leju$l$a;	j	type
c	eke$e	net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell
	f	Lejt;	e	noiseFiller
	f	[D	f	values
	f	Leke;	a	this$0
	m	(Leke;Lejt;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()Lejt;	k	wrapped
	m	()Leju$l$a;	j	type
c	eke$f	net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce
	f	Lejt;	e	function
	f	J	f	lastCounter
	f	J	g	lastArrayCounter
	f	D	h	lastValue
	f	[D	i	lastArray
	f	Leke;	a	this$0
	m	(Leke;Lejt;)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()Lejt;	k	wrapped
	m	()Leju$l$a;	j	type
c	eke$g	net/minecraft/world/level/levelgen/NoiseChunk$FlatCache
	f	Lejt;	e	noiseFiller
	f	[[D	f	values
	f	Leke;	a	this$0
	m	(Leke;Lejt;Z)V	<init>	<init>
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()Lejt;	k	wrapped
	m	()Leju$l$a;	j	type
c	eke$h	net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction
	m	()Lejt;	k	wrapped
	m	()D	a	minValue
	m	()D	b	maxValue
c	eke$i	net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator
	f	[[D	e	slice0
	f	[[D	f	slice1
	f	Lejt;	g	noiseFiller
	f	D	h	noise000
	f	D	i	noise001
	f	D	j	noise100
	f	D	k	noise101
	f	D	l	noise010
	f	D	m	noise011
	f	D	n	noise110
	f	D	o	noise111
	f	D	p	valueXZ00
	f	D	q	valueXZ10
	f	D	r	valueXZ01
	f	D	s	valueXZ11
	f	D	t	valueZ0
	f	D	u	valueZ1
	f	D	v	value
	f	Leke;	a	this$0
	m	(Leke;Lejt;)V	<init>	<init>
	m	(II)[[D	a	allocateSlice
	m	(II)V	b	selectCellYZ
	m	(D)V	a	updateForY
	m	(D)V	b	updateForX
	m	(D)V	c	updateForZ
	m	(Lejt$b;)D	a	compute
	m	([DLejt$a;)V	a	fillArray
	m	()Lejt;	k	wrapped
	m	()V	l	swapSlices
	m	()Leju$l$a;	j	type
c	ekf	net/minecraft/world/level/levelgen/NoiseGeneratorSettings
	f	Leki;	j	noiseSettings
	f	Leeb;	k	defaultBlock
	f	Leeb;	l	defaultFluid
	f	Lekg;	m	noiseRouter
	f	Lekr$o;	n	surfaceRule
	f	Ljava/util/List;	o	spawnTarget
	f	I	p	seaLevel
	f	Z	q	disableMobGeneration
	f	Z	r	aquifersEnabled
	f	Z	s	oreVeinsEnabled
	f	Z	t	useLegacyRandomSource
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lamd;	c	OVERWORLD
	f	Lamd;	d	LARGE_BIOMES
	f	Lamd;	e	AMPLIFIED
	f	Lamd;	f	NETHER
	f	Lamd;	g	END
	f	Lamd;	h	CAVES
	f	Lamd;	i	FLOATING_ISLANDS
	m	(Leki;Leeb;Leeb;Lekg;Lekr$o;Ljava/util/List;IZZZZ)V	<init>	<init>
	m	()Z	a	disableMobGeneration
	m	()Z	b	isAquifersEnabled
	m	()Z	c	oreVeinsEnabled
	m	()Lekz$a;	d	getRandomSource
	m	(Lqq;)V	a	bootstrap
	m	(Lqq;)Lekf;	b	end
	m	(Lqq;)Lekf;	c	nether
	m	(Lqq;ZZ)Lekf;	a	overworld
	m	(Lqq;)Lekf;	d	caves
	m	(Lqq;)Lekf;	e	floatingIslands
	m	()Lekf;	e	dummy
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leki;	f	noiseSettings
	m	()Leeb;	g	defaultBlock
	m	()Leeb;	h	defaultFluid
	m	()Lekg;	i	noiseRouter
	m	()Lekr$o;	j	surfaceRule
	m	()Ljava/util/List;	k	spawnTarget
	m	()I	l	seaLevel
	m	()Z	m	aquifersEnabled
	m	()Z	n	useLegacyRandomSource
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekg	net/minecraft/world/level/levelgen/NoiseRouter
	f	Lejt;	b	barrierNoise
	f	Lejt;	c	fluidLevelFloodednessNoise
	f	Lejt;	d	fluidLevelSpreadNoise
	f	Lejt;	e	lavaNoise
	f	Lejt;	f	temperature
	f	Lejt;	g	vegetation
	f	Lejt;	h	continents
	f	Lejt;	i	erosion
	f	Lejt;	j	depth
	f	Lejt;	k	ridges
	f	Lejt;	l	initialDensityWithoutJaggedness
	f	Lejt;	m	finalDensity
	f	Lejt;	n	veinToggle
	f	Lejt;	o	veinRidged
	f	Lejt;	p	veinGap
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;Lejt;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	field
	m	(Lejt$f;)Lekg;	a	mapAll
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lejt;	a	barrierNoise
	m	()Lejt;	b	fluidLevelFloodednessNoise
	m	()Lejt;	c	fluidLevelSpreadNoise
	m	()Lejt;	d	lavaNoise
	m	()Lejt;	e	temperature
	m	()Lejt;	f	vegetation
	m	()Lejt;	g	continents
	m	()Lejt;	h	erosion
	m	()Lejt;	i	depth
	m	()Lejt;	j	ridges
	m	()Lejt;	k	initialDensityWithoutJaggedness
	m	()Lejt;	l	finalDensity
	m	()Lejt;	m	veinToggle
	m	()Lejt;	n	veinRidged
	m	()Lejt;	o	veinGap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekh	net/minecraft/world/level/levelgen/NoiseRouterData
	f	F	a	GLOBAL_OFFSET
	f	F	n	ORE_THICKNESS
	f	D	o	VEININESS_FREQUENCY
	f	D	p	NOODLE_SPACING_AND_STRAIGHTNESS
	f	D	q	SURFACE_DENSITY_THRESHOLD
	f	D	r	CHEESE_NOISE_TARGET
	f	I	b	ISLAND_CHUNK_DISTANCE
	f	J	c	ISLAND_CHUNK_DISTANCE_SQR
	f	Lejt;	s	BLENDING_FACTOR
	f	Lejt;	t	BLENDING_JAGGEDNESS
	f	Lamd;	u	ZERO
	f	Lamd;	v	Y
	f	Lamd;	w	SHIFT_X
	f	Lamd;	x	SHIFT_Z
	f	Lamd;	y	BASE_3D_NOISE_OVERWORLD
	f	Lamd;	z	BASE_3D_NOISE_NETHER
	f	Lamd;	A	BASE_3D_NOISE_END
	f	Lamd;	d	CONTINENTS
	f	Lamd;	e	EROSION
	f	Lamd;	f	RIDGES
	f	Lamd;	g	RIDGES_FOLDED
	f	Lamd;	h	OFFSET
	f	Lamd;	i	FACTOR
	f	Lamd;	j	JAGGEDNESS
	f	Lamd;	k	DEPTH
	f	Lamd;	B	SLOPED_CHEESE
	f	Lamd;	l	CONTINENTS_LARGE
	f	Lamd;	m	EROSION_LARGE
	f	Lamd;	C	OFFSET_LARGE
	f	Lamd;	D	FACTOR_LARGE
	f	Lamd;	E	JAGGEDNESS_LARGE
	f	Lamd;	F	DEPTH_LARGE
	f	Lamd;	G	SLOPED_CHEESE_LARGE
	f	Lamd;	H	OFFSET_AMPLIFIED
	f	Lamd;	I	FACTOR_AMPLIFIED
	f	Lamd;	J	JAGGEDNESS_AMPLIFIED
	f	Lamd;	K	DEPTH_AMPLIFIED
	f	Lamd;	L	SLOPED_CHEESE_AMPLIFIED
	f	Lamd;	M	SLOPED_CHEESE_END
	f	Lamd;	N	SPAGHETTI_ROUGHNESS_FUNCTION
	f	Lamd;	O	ENTRANCES
	f	Lamd;	P	NOODLE
	f	Lamd;	Q	PILLARS
	f	Lamd;	R	SPAGHETTI_2D_THICKNESS_MODULATOR
	f	Lamd;	S	SPAGHETTI_2D
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Lqq;)Ljl;	a	bootstrap
	m	(Lqq;Ljm;Lejt;Ljl;Ljl;Lamd;Lamd;Lamd;Lamd;Lamd;Z)V	a	registerTerrainNoises
	m	(Lqq;Lamd;Lejt;)Lejt;	a	registerAndWrap
	m	(Ljm;Lamd;)Lejt;	a	getFunction
	m	(Lejt;)Lejt;	a	peaksAndValleys
	m	(F)F	a	peaksAndValleys
	m	(Ljm;)Lejt;	b	spaghettiRoughnessFunction
	m	(Ljm;Ljm;)Lejt;	d	entrances
	m	(Ljm;Ljm;)Lejt;	e	noodle
	m	(Ljm;)Lejt;	c	pillars
	m	(Ljm;Ljm;)Lejt;	f	spaghetti2D
	m	(Ljm;Ljm;Lejt;)Lejt;	a	underground
	m	(Lejt;)Lejt;	b	postProcess
	m	(Ljm;Ljm;ZZ)Lekg;	a	overworld
	m	(Ljm;Ljm;Lejt;)Lekg;	b	noNewCaves
	m	(ZLejt;)Lejt;	a	slideOverworld
	m	(Ljm;II)Lejt;	a	slideNetherLike
	m	(Lejt;II)Lejt;	a	slideEndLike
	m	(Ljm;Ljm;)Lekg;	a	nether
	m	(Ljm;Ljm;)Lekg;	b	caves
	m	(Ljm;Ljm;)Lekg;	c	floatingIslands
	m	(Lejt;)Lejt;	c	slideEnd
	m	(Ljm;)Lekg;	a	end
	m	()Lekg;	a	none
	m	(Lejt;Lejt;)Lejt;	a	splineWithBlending
	m	(Lejt;Lejt;)Lejt;	b	noiseGradientDensity
	m	(Lejt;Lejt;III)Lejt;	a	yLimitedInterpolatable
	m	(Lejt;IIIIDIID)Lejt;	a	slide
	m	(Lekk$a;)I	a	lambda$overworld$1
	m	(Lekk$a;)I	b	lambda$overworld$0
	m	()V	<clinit>	<clinit>
c	ekh$a	net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity
	m	()V	<init>	<init>
	m	(D)D	a	getSphaghettiRarity2D
	m	(D)D	b	getSpaghettiRarity3D
c	eki	net/minecraft/world/level/levelgen/NoiseSettings
	f	I	g	minY
	f	I	h	height
	f	I	i	noiseSizeHorizontal
	f	I	j	noiseSizeVertical
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leki;	b	OVERWORLD_NOISE_SETTINGS
	f	Leki;	c	NETHER_NOISE_SETTINGS
	f	Leki;	d	END_NOISE_SETTINGS
	f	Leki;	e	CAVES_NOISE_SETTINGS
	f	Leki;	f	FLOATING_ISLANDS_NOISE_SETTINGS
	m	(IIII)V	<init>	<init>
	m	(Leki;)Lcom/mojang/serialization/DataResult;	a	guardY
	m	(IIII)Leki;	a	create
	m	()I	a	getCellHeight
	m	()I	b	getCellWidth
	m	(Ldmw;)Leki;	a	clampToHeightAccessor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	minY
	m	()I	d	height
	m	()I	e	noiseSizeHorizontal
	m	()I	f	noiseSizeVertical
	m	(Lcom/mojang/serialization/DataResult$Error;)V	a	lambda$create$4
	m	()Ljava/lang/String;	g	lambda$guardY$3
	m	()Ljava/lang/String;	h	lambda$guardY$2
	m	()Ljava/lang/String;	i	lambda$guardY$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekj	net/minecraft/world/level/levelgen/Noises
	f	Lamd;	a	TEMPERATURE
	f	Lamd;	b	VEGETATION
	f	Lamd;	c	CONTINENTALNESS
	f	Lamd;	d	EROSION
	f	Lamd;	e	TEMPERATURE_LARGE
	f	Lamd;	f	VEGETATION_LARGE
	f	Lamd;	g	CONTINENTALNESS_LARGE
	f	Lamd;	h	EROSION_LARGE
	f	Lamd;	i	RIDGE
	f	Lamd;	j	SHIFT
	f	Lamd;	k	AQUIFER_BARRIER
	f	Lamd;	l	AQUIFER_FLUID_LEVEL_FLOODEDNESS
	f	Lamd;	m	AQUIFER_LAVA
	f	Lamd;	n	AQUIFER_FLUID_LEVEL_SPREAD
	f	Lamd;	o	PILLAR
	f	Lamd;	p	PILLAR_RARENESS
	f	Lamd;	q	PILLAR_THICKNESS
	f	Lamd;	r	SPAGHETTI_2D
	f	Lamd;	s	SPAGHETTI_2D_ELEVATION
	f	Lamd;	t	SPAGHETTI_2D_MODULATOR
	f	Lamd;	u	SPAGHETTI_2D_THICKNESS
	f	Lamd;	v	SPAGHETTI_3D_1
	f	Lamd;	w	SPAGHETTI_3D_2
	f	Lamd;	x	SPAGHETTI_3D_RARITY
	f	Lamd;	y	SPAGHETTI_3D_THICKNESS
	f	Lamd;	z	SPAGHETTI_ROUGHNESS
	f	Lamd;	A	SPAGHETTI_ROUGHNESS_MODULATOR
	f	Lamd;	B	CAVE_ENTRANCE
	f	Lamd;	C	CAVE_LAYER
	f	Lamd;	D	CAVE_CHEESE
	f	Lamd;	E	ORE_VEININESS
	f	Lamd;	F	ORE_VEIN_A
	f	Lamd;	G	ORE_VEIN_B
	f	Lamd;	H	ORE_GAP
	f	Lamd;	I	NOODLE
	f	Lamd;	J	NOODLE_THICKNESS
	f	Lamd;	K	NOODLE_RIDGE_A
	f	Lamd;	L	NOODLE_RIDGE_B
	f	Lamd;	M	JAGGED
	f	Lamd;	N	SURFACE
	f	Lamd;	O	SURFACE_SECONDARY
	f	Lamd;	P	CLAY_BANDS_OFFSET
	f	Lamd;	Q	BADLANDS_PILLAR
	f	Lamd;	R	BADLANDS_PILLAR_ROOF
	f	Lamd;	S	BADLANDS_SURFACE
	f	Lamd;	T	ICEBERG_PILLAR
	f	Lamd;	U	ICEBERG_PILLAR_ROOF
	f	Lamd;	V	ICEBERG_SURFACE
	f	Lamd;	W	SWAMP
	f	Lamd;	X	CALCITE
	f	Lamd;	Y	GRAVEL
	f	Lamd;	Z	POWDER_SNOW
	f	Lamd;	aa	PACKED_ICE
	f	Lamd;	ab	ICE
	f	Lamd;	ac	SOUL_SAND_LAYER
	f	Lamd;	ad	GRAVEL_LAYER
	f	Lamd;	ae	PATCH
	f	Lamd;	af	NETHERRACK
	f	Lamd;	ag	NETHER_WART
	f	Lamd;	ah	NETHER_STATE_SELECTOR
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	(Ljm;Lekn;Lamd;)Lezo;	a	instantiate
	m	()V	<clinit>	<clinit>
c	ekk	net/minecraft/world/level/levelgen/OreVeinifier
	f	F	a	VEININESS_THRESHOLD
	f	I	b	EDGE_ROUNDOFF_BEGIN
	f	D	c	MAX_EDGE_ROUNDOFF
	f	F	d	VEIN_SOLIDNESS
	f	F	e	MIN_RICHNESS
	f	F	f	MAX_RICHNESS
	f	F	g	MAX_RICHNESS_THRESHOLD
	f	F	h	CHANCE_OF_RAW_ORE_BLOCK
	f	F	i	SKIP_ORE_IF_GAP_NOISE_IS_BELOW
	m	()V	<init>	<init>
	m	(Lejt;Lejt;Lejt;Lekn;)Leke$c;	a	create
	m	(Lejt;Leeb;Lekn;Lejt;Lejt;Lejt$b;)Leeb;	a	lambda$create$0
c	ekk$a	net/minecraft/world/level/levelgen/OreVeinifier$VeinType
	f	Lekk$a;	a	COPPER
	f	Lekk$a;	b	IRON
	f	Leeb;	e	ore
	f	Leeb;	f	rawOreBlock
	f	Leeb;	g	filler
	f	I	c	minY
	f	I	d	maxY
	f	[Lekk$a;	h	$VALUES
	m	()[Lekk$a;	values	values
	m	(Ljava/lang/String;)Lekk$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILeeb;Leeb;Leeb;II)V	<init>	<init>
	m	()[Lekk$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ekl	net/minecraft/world/level/levelgen/PatrolSpawner
	f	I	a	nextTick
	m	()V	<init>	<init>
	m	(Laub;ZZ)V	a	tick
	m	(Laub;Ljb;Lbck;Z)Z	a	spawnPatrolMember
c	ekm	net/minecraft/world/level/levelgen/PhantomSpawner
	f	I	a	nextTick
	m	()V	<init>	<init>
	m	(Laub;ZZ)V	a	tick
c	ekn	net/minecraft/world/level/levelgen/PositionalRandomFactory
	m	(Ljb;)Lbck;	a	at
	m	(Lame;)Lbck;	a	fromHashOf
	m	(Ljava/lang/String;)Lbck;	a	fromHashOf
	m	(J)Lbck;	a	fromSeed
	m	(III)Lbck;	a	at
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
c	eko	net/minecraft/world/level/levelgen/RandomState
	f	Lekn;	a	random
	f	Ljm;	b	noises
	f	Lekg;	c	router
	f	Ldog$f;	d	sampler
	f	Leks;	e	surfaceSystem
	f	Lekn;	f	aquiferRandom
	f	Lekn;	g	oreRandom
	f	Ljava/util/Map;	h	noiseIntances
	f	Ljava/util/Map;	i	positionalRandoms
	m	(Ljm$a;Lamd;J)Leko;	a	create
	m	(Lekf;Ljm;J)Leko;	a	create
	m	(Lekf;Ljm;J)V	<init>	<init>
	m	(Lamd;)Lezo;	a	getOrCreateNoise
	m	(Lame;)Lekn;	a	getOrCreateRandomFactory
	m	()Lekg;	a	router
	m	()Ldog$f;	b	sampler
	m	()Leks;	c	surfaceSystem
	m	()Lekn;	d	aquiferRandom
	m	()Lekn;	e	oreRandom
	m	(Lame;Lame;)Lekn;	a	lambda$getOrCreateRandomFactory$1
	m	(Lamd;Lamd;)Lezo;	a	lambda$getOrCreateNoise$0
c	eko$1	net/minecraft/world/level/levelgen/RandomState$1
	f	Ljava/util/Map;	a	wrapped
	m	(Leko;)V	<init>	<init>
	m	(Lejt;)Lejt;	a	wrapNew
	m	(Lejt;)Lejt;	apply	apply
c	eko$a	net/minecraft/world/level/levelgen/RandomState$1NoiseWiringHelper
	f	Ljava/util/Map;	d	wrapped
	f	J	a	val$seed
	f	Z	b	val$useLegacyInit
	f	Leko;	c	this$0
	m	(Leko;JZ)V	<init>	<init>
	m	(J)Lbck;	a	newLegacyInstance
	m	(Lejt$c;)Lejt$c;	a	visitNoise
	m	(Lejt;)Lejt;	a	wrapNew
	m	(Lejt;)Lejt;	apply	apply
c	ekp	net/minecraft/world/level/levelgen/RandomSupport
	f	J	a	GOLDEN_RATIO_64
	f	J	b	SILVER_RATIO_64
	f	Lcom/google/common/hash/HashFunction;	c	MD5_128
	f	Ljava/util/concurrent/atomic/AtomicLong;	d	SEED_UNIQUIFIER
	m	()V	<init>	<init>
	m	(J)J	a	mixStafford13
	m	(J)Lekp$a;	b	upgradeSeedTo128bitUnmixed
	m	(J)Lekp$a;	c	upgradeSeedTo128bit
	m	(Ljava/lang/String;)Lekp$a;	a	seedFromHashOf
	m	()J	a	generateUniqueSeed
	m	(J)J	d	lambda$generateUniqueSeed$0
	m	()V	<clinit>	<clinit>
c	ekp$a	net/minecraft/world/level/levelgen/RandomSupport$Seed128bit
	f	J	a	seedLo
	f	J	b	seedHi
	m	(JJ)V	<init>	<init>
	m	(JJ)Lekp$a;	a	xor
	m	(Lekp$a;)Lekp$a;	a	xor
	m	()Lekp$a;	a	mixed
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()J	b	seedLo
	m	()J	c	seedHi
c	ekq	net/minecraft/world/level/levelgen/SingleThreadedRandomSource
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	J	h	seed
	f	Lekc;	i	gaussianSource
	m	(J)V	<init>	<init>
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	(I)I	c	next
	m	()D	k	nextGaussian
c	ekr	net/minecraft/world/level/levelgen/SurfaceRules
	f	Lekr$f;	a	ON_FLOOR
	f	Lekr$f;	b	UNDER_FLOOR
	f	Lekr$f;	c	DEEP_UNDER_FLOOR
	f	Lekr$f;	d	VERY_DEEP_UNDER_FLOOR
	f	Lekr$f;	e	ON_CEILING
	f	Lekr$f;	f	UNDER_CEILING
	m	()V	<init>	<init>
	m	(IZLets;)Lekr$f;	a	stoneDepthCheck
	m	(IZILets;)Lekr$f;	a	stoneDepthCheck
	m	(Lekr$f;)Lekr$f;	a	not
	m	(Leku;I)Lekr$f;	a	yBlockCheck
	m	(Leku;I)Lekr$f;	b	yStartCheck
	m	(II)Lekr$f;	a	waterBlockCheck
	m	(II)Lekr$f;	b	waterStartCheck
	m	([Lamd;)Lekr$f;	a	isBiome
	m	(Ljava/util/List;)Lekr$c;	a	isBiome
	m	(Lamd;D)Lekr$f;	a	noiseCondition
	m	(Lamd;DD)Lekr$f;	a	noiseCondition
	m	(Ljava/lang/String;Leku;Leku;)Lekr$f;	a	verticalGradient
	m	()Lekr$f;	a	steep
	m	()Lekr$f;	b	hole
	m	()Lekr$f;	c	abovePreliminarySurface
	m	()Lekr$f;	d	temperature
	m	(Lekr$f;Lekr$o;)Lekr$o;	a	ifTrue
	m	([Lekr$o;)Lekr$o;	a	sequence
	m	(Leeb;)Lekr$o;	a	state
	m	()Lekr$o;	e	bandlands
	m	(Ljy;Ljava/lang/String;Lbbu;)Lcom/mojang/serialization/MapCodec;	a	register
	m	()V	<clinit>	<clinit>
c	ekr$a	net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface
	f	Lekr$a;	a	INSTANCE
	f	Lbbu;	c	CODEC
	f	[Lekr$a;	d	$VALUES
	m	()[Lekr$a;	values	values
	m	(Ljava/lang/String;)Lekr$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()[Lekr$a;	b	$values
	m	()V	<clinit>	<clinit>
c	ekr$b	net/minecraft/world/level/levelgen/SurfaceRules$Bandlands
	f	Lekr$b;	a	INSTANCE
	f	Lbbu;	c	CODEC
	f	[Lekr$b;	d	$VALUES
	m	()[Lekr$b;	values	values
	m	(Ljava/lang/String;)Lekr$b;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$u;	a	apply
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()[Lekr$b;	b	$values
	m	()V	<clinit>	<clinit>
c	ekr$c	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource
	f	Lbbu;	a	CODEC
	f	Ljava/util/List;	c	biomes
	f	Ljava/util/function/Predicate;	d	biomeNameTest
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lekr$c;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$c$a	net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource$1BiomeCondition
	f	Lekr$g;	a	val$ruleContext
	f	Lekr$c;	b	this$0
	m	(Lekr$c;Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$d	net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource
	f	Leeb;	a	resultState
	f	Lekr$r;	c	rule
	f	Lbbu;	d	CODEC
	m	(Leeb;)V	<init>	<init>
	m	(Leeb;Lekr$r;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$u;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leeb;	b	resultState
	m	()Lekr$r;	c	rule
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()V	<clinit>	<clinit>
c	ekr$e	net/minecraft/world/level/levelgen/SurfaceRules$Condition
	m	()Z	b	test
c	ekr$f	net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	()Lbbu;	a	codec
	m	(Lekr$f;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$g	net/minecraft/world/level/levelgen/SurfaceRules$Context
	f	I	a	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE
	f	I	b	SURFACE_CELL_BITS
	f	I	c	SURFACE_CELL_SIZE
	f	I	d	SURFACE_CELL_MASK
	f	Leks;	e	system
	f	Lekr$e;	f	temperature
	f	Lekr$e;	g	steep
	f	Lekr$e;	h	hole
	f	Lekr$e;	i	abovePreliminarySurface
	f	Leko;	j	randomState
	f	Lefy;	k	chunk
	f	Leke;	l	noiseChunk
	f	Ljava/util/function/Function;	m	biomeGetter
	f	Lekx;	n	context
	f	J	o	lastPreliminarySurfaceCellOrigin
	f	[I	p	preliminarySurfaceCache
	f	J	q	lastUpdateXZ
	f	I	r	blockX
	f	I	s	blockZ
	f	I	t	surfaceDepth
	f	J	u	lastSurfaceDepth2Update
	f	D	v	surfaceSecondary
	f	J	w	lastMinSurfaceLevelUpdate
	f	I	x	minSurfaceLevel
	f	J	y	lastUpdateY
	f	Ljb$a;	z	pos
	f	Ljava/util/function/Supplier;	A	biome
	f	I	B	blockY
	f	I	C	waterHeight
	f	I	D	stoneDepthBelow
	f	I	E	stoneDepthAbove
	m	(Leks;Leko;Lefy;Leke;Ljava/util/function/Function;Ljy;Lekx;)V	<init>	<init>
	m	(II)V	a	updateXZ
	m	(IIIIII)V	a	updateY
	m	()D	a	getSurfaceSecondary
	m	()I	b	getSeaLevel
	m	(I)I	a	blockCoordToSurfaceCell
	m	(I)I	b	surfaceCellToBlockCoord
	m	()I	c	getMinSurfaceLevel
	m	(III)Ljl;	a	lambda$updateY$0
c	ekr$g$a	net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition
	f	Lekr$g;	a	this$0
	m	(Lekr$g;)V	<init>	<init>
	m	()Z	b	test
c	ekr$g$b	net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition
	m	(Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$g$c	net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition
	m	(Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$g$d	net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition
	m	(Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$h	net/minecraft/world/level/levelgen/SurfaceRules$Hole
	f	Lekr$h;	a	INSTANCE
	f	Lbbu;	c	CODEC
	f	[Lekr$h;	d	$VALUES
	m	()[Lekr$h;	values	values
	m	(Ljava/lang/String;)Lekr$h;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()[Lekr$h;	b	$values
	m	()V	<clinit>	<clinit>
c	ekr$i	net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition
	f	Lekr$g;	c	context
	f	J	a	lastUpdate
	f	Ljava/lang/Boolean;	d	result
	m	(Lekr$g;)V	<init>	<init>
	m	()Z	b	test
	m	()J	c	getContextLastUpdate
	m	()Z	a	compute
c	ekr$j	net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition
	m	(Lekr$g;)V	<init>	<init>
	m	()J	c	getContextLastUpdate
c	ekr$k	net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition
	m	(Lekr$g;)V	<init>	<init>
	m	()J	c	getContextLastUpdate
c	ekr$l	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource
	f	Lamd;	a	noise
	f	D	c	minThreshold
	f	D	d	maxThreshold
	f	Lbbu;	e	CODEC
	m	(Lamd;DD)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	noise
	m	()D	c	minThreshold
	m	()D	d	maxThreshold
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$l$a	net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource$1NoiseThresholdCondition
	f	Lekr$g;	a	val$ruleContext
	f	Lezo;	b	val$noise
	f	Lekr$l;	e	this$0
	m	(Lekr$l;Lekr$g;Lezo;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$m	net/minecraft/world/level/levelgen/SurfaceRules$NotCondition
	f	Lekr$e;	a	target
	m	(Lekr$e;)V	<init>	<init>
	m	()Z	b	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lekr$e;	a	target
c	ekr$n	net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource
	f	Lekr$f;	a	target
	f	Lbbu;	c	CODEC
	m	(Lekr$f;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lekr$f;	b	target
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()V	<clinit>	<clinit>
c	ekr$o	net/minecraft/world/level/levelgen/SurfaceRules$RuleSource
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	()Lbbu;	a	codec
	m	(Lekr$o;)Lcom/mojang/serialization/MapCodec;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$p	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule
	f	Ljava/util/List;	a	rules
	m	(Ljava/util/List;)V	<init>	<init>
	m	(III)Leeb;	tryApply	tryApply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	rules
c	ekr$q	net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource
	f	Ljava/util/List;	a	sequence
	f	Lbbu;	c	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$u;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	sequence
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()V	<clinit>	<clinit>
c	ekr$r	net/minecraft/world/level/levelgen/SurfaceRules$StateRule
	f	Leeb;	a	state
	m	(Leeb;)V	<init>	<init>
	m	(III)Leeb;	tryApply	tryApply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leeb;	a	state
c	ekr$s	net/minecraft/world/level/levelgen/SurfaceRules$Steep
	f	Lekr$s;	a	INSTANCE
	f	Lbbu;	c	CODEC
	f	[Lekr$s;	d	$VALUES
	m	()[Lekr$s;	values	values
	m	(Ljava/lang/String;)Lekr$s;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()[Lekr$s;	b	$values
	m	()V	<clinit>	<clinit>
c	ekr$t	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck
	f	I	a	offset
	f	Z	c	addSurfaceDepth
	f	I	d	secondaryDepthRange
	f	Lets;	e	surfaceType
	f	Lbbu;	f	CODEC
	m	(IZILets;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	offset
	m	()Z	c	addSurfaceDepth
	m	()I	d	secondaryDepthRange
	m	()Lets;	e	surfaceType
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$t$a	net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck$1StoneDepthCondition
	f	Lekr$g;	a	val$ruleContext
	f	Z	b	val$ceiling
	f	Lekr$t;	e	this$0
	m	(Lekr$t;Lekr$g;Z)V	<init>	<init>
	m	()Z	a	compute
c	ekr$u	net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule
	m	(III)Leeb;	tryApply	tryApply
c	ekr$v	net/minecraft/world/level/levelgen/SurfaceRules$Temperature
	f	Lekr$v;	a	INSTANCE
	f	Lbbu;	c	CODEC
	f	[Lekr$v;	d	$VALUES
	m	()[Lekr$v;	values	values
	m	(Ljava/lang/String;)Lekr$v;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	()[Lekr$v;	b	$values
	m	()V	<clinit>	<clinit>
c	ekr$w	net/minecraft/world/level/levelgen/SurfaceRules$TestRule
	f	Lekr$e;	a	condition
	f	Lekr$u;	b	followup
	m	(Lekr$e;Lekr$u;)V	<init>	<init>
	m	(III)Leeb;	tryApply	tryApply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lekr$e;	a	condition
	m	()Lekr$u;	b	followup
c	ekr$x	net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource
	f	Lekr$f;	a	ifTrue
	f	Lekr$o;	c	thenRun
	f	Lbbu;	d	CODEC
	m	(Lekr$f;Lekr$o;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$u;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lekr$f;	b	ifTrue
	m	()Lekr$o;	c	thenRun
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$y	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource
	f	Lame;	a	randomName
	f	Leku;	c	trueAtAndBelow
	f	Leku;	d	falseAtAndAbove
	f	Lbbu;	e	CODEC
	m	(Lame;Leku;Leku;)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	randomName
	m	()Leku;	c	trueAtAndBelow
	m	()Leku;	d	falseAtAndAbove
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$y$a	net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource$1VerticalGradientCondition
	f	Lekr$g;	a	val$ruleContext
	f	I	b	val$trueAtAndBelow
	f	I	e	val$falseAtAndAbove
	f	Lekn;	f	val$randomFactory
	m	(Lekr$y;Lekr$g;IILekn;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$z	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource
	f	I	a	offset
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lbbu;	e	CODEC
	m	(IIZ)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	offset
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$z$a	net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource$1WaterCondition
	f	Lekr$g;	a	val$ruleContext
	f	Lekr$z;	b	this$0
	m	(Lekr$z;Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	ekr$aa	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource
	f	Leku;	a	anchor
	f	I	c	surfaceDepthMultiplier
	f	Z	d	addStoneDepth
	f	Lbbu;	e	CODEC
	m	(Leku;IZ)V	<init>	<init>
	m	()Lbbu;	a	codec
	m	(Lekr$g;)Lekr$e;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leku;	b	anchor
	m	()I	c	surfaceDepthMultiplier
	m	()Z	d	addStoneDepth
	m	(Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekr$aa$a	net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource$1YCondition
	f	Lekr$g;	a	val$ruleContext
	f	Lekr$aa;	b	this$0
	m	(Lekr$aa;Lekr$g;)V	<init>	<init>
	m	()Z	a	compute
c	eks	net/minecraft/world/level/levelgen/SurfaceSystem
	f	Leeb;	a	WHITE_TERRACOTTA
	f	Leeb;	b	ORANGE_TERRACOTTA
	f	Leeb;	c	TERRACOTTA
	f	Leeb;	d	YELLOW_TERRACOTTA
	f	Leeb;	e	BROWN_TERRACOTTA
	f	Leeb;	f	RED_TERRACOTTA
	f	Leeb;	g	LIGHT_GRAY_TERRACOTTA
	f	Leeb;	h	PACKED_ICE
	f	Leeb;	i	SNOW_BLOCK
	f	Leeb;	j	defaultBlock
	f	I	k	seaLevel
	f	[Leeb;	l	clayBands
	f	Lezo;	m	clayBandsOffsetNoise
	f	Lezo;	n	badlandsPillarNoise
	f	Lezo;	o	badlandsPillarRoofNoise
	f	Lezo;	p	badlandsSurfaceNoise
	f	Lezo;	q	icebergPillarNoise
	f	Lezo;	r	icebergPillarRoofNoise
	f	Lezo;	s	icebergSurfaceNoise
	f	Lekn;	t	noiseRandom
	f	Lezo;	u	surfaceNoise
	f	Lezo;	v	surfaceSecondaryNoise
	m	(Leko;Leeb;ILekn;)V	<init>	<init>
	m	(Leko;Ldnz;Ljy;ZLekx;Lefy;Leke;Lekr$o;)V	a	buildSurface
	m	(II)I	a	getSurfaceDepth
	m	(II)D	b	getSurfaceSecondary
	m	(Leeb;)Z	a	isStone
	m	()I	a	getSeaLevel
	m	(Lekr$o;Lemb;Ljava/util/function/Function;Lefy;Leke;Ljb;Z)Ljava/util/Optional;	a	topMaterial
	m	(Lefv;IIILdmw;)V	a	erodedBadlandsExtension
	m	(ILdnx;Lefv;Ljb$a;III)V	a	frozenOceanExtension
	m	(Lbck;)[Leeb;	a	generateBands
	m	(Lbck;[Leeb;ILeeb;)V	a	makeBands
	m	(III)Leeb;	a	getBand
	m	()V	<clinit>	<clinit>
c	eks$1	net/minecraft/world/level/levelgen/SurfaceSystem$1
	f	Lefy;	a	val$protoChunk
	f	Ljb$a;	b	val$columnPos
	f	Ldlz;	c	val$chunkPos
	m	(Leks;Lefy;Ljb$a;Ldlz;)V	<init>	<init>
	m	(I)Leeb;	a	getBlock
	m	(ILeeb;)V	a	setBlock
	m	()Ljava/lang/String;	toString	toString
c	ekt	net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource
	f	I	d	MODULUS_BITS
	f	J	e	MODULUS_MASK
	f	J	f	MULTIPLIER
	f	J	g	INCREMENT
	f	Ljava/util/concurrent/atomic/AtomicLong;	h	seed
	f	Lekc;	i	gaussianSource
	m	(J)V	<init>	<init>
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	(I)I	c	next
	m	()D	k	nextGaussian
c	eku	net/minecraft/world/level/levelgen/VerticalAnchor
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leku;	b	BOTTOM
	f	Leku;	c	TOP
	m	(I)Leku;	a	absolute
	m	(I)Leku;	b	aboveBottom
	m	(I)Leku;	c	belowTop
	m	()Leku;	a	bottom
	m	()Leku;	b	top
	m	(Lcom/mojang/datafixers/util/Either;)Leku;	a	merge
	m	(Leku;)Lcom/mojang/datafixers/util/Either;	a	split
	m	(Lekx;)I	a	resolveY
	m	()V	<clinit>	<clinit>
c	eku$a	net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom
	f	I	e	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	m	(I)V	<init>	<init>
	m	(Lekx;)I	a	resolveY
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	offset
	m	()V	<clinit>	<clinit>
c	eku$b	net/minecraft/world/level/levelgen/VerticalAnchor$Absolute
	f	I	e	y
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	m	(I)V	<init>	<init>
	m	(Lekx;)I	a	resolveY
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	y
	m	()V	<clinit>	<clinit>
c	eku$c	net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop
	f	I	e	offset
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	m	(I)V	<init>	<init>
	m	(Lekx;)I	a	resolveY
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	c	offset
	m	()V	<clinit>	<clinit>
c	ekv	net/minecraft/world/level/levelgen/WorldDimensions
	f	Ljava/util/Map;	b	dimensions
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Set;	c	BUILTIN_ORDER
	f	I	d	VANILLA_DIMENSION_COUNT
	m	(Ljava/util/Map;)V	<init>	<init>
	m	(Ljy;)V	<init>	<init>
	m	(Ljava/util/stream/Stream;)Ljava/util/stream/Stream;	a	keysInOrder
	m	(Ljn$a;Lefz;)Lekv;	a	replaceOverworldGenerator
	m	(Ljn;Ljava/util/Map;Lefz;)Ljava/util/Map;	a	withOverworld
	m	(Ljava/util/Map;Ljl;Lefz;)Ljava/util/Map;	a	withOverworld
	m	()Lefz;	a	overworld
	m	(Lamd;)Ljava/util/Optional;	a	get
	m	()Lcom/google/common/collect/ImmutableSet;	b	levels
	m	()Z	c	isDebug
	m	(Ljy;)Lfcw$a;	b	specialWorldProperty
	m	(Lamd;Lehz;)Lcom/mojang/serialization/Lifecycle;	a	checkStability
	m	(Lamd;Lehz;)Z	b	isVanillaLike
	m	(Lehz;)Z	a	isStableOverworld
	m	(Lehz;)Z	b	isStableNether
	m	(Lehz;)Z	c	isStableEnd
	m	(Ljy;)Lekv$b;	a	bake
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	d	dimensions
	m	(Lkh;Lekv$a;)V	a	lambda$bake$6
	m	(Ljy;Ljava/util/List;Lamd;)V	a	lambda$bake$5
	m	(Ljava/util/List;Lamd;Lehz;)V	a	lambda$bake$4
	m	(Lamd;)Ljava/util/Optional;	b	lambda$bake$3
	m	(Lehz;)Lfcw$a;	d	lambda$specialWorldProperty$2
	m	(Lamd;)Z	c	lambda$keysInOrder$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekv$a	net/minecraft/world/level/levelgen/WorldDimensions$1Entry
	f	Lamd;	a	key
	f	Lehz;	b	value
	m	(Lamd;Lehz;)V	<init>	<init>
	m	()Ljx;	c	registrationInfo
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	a	key
	m	()Lehz;	b	value
c	ekv$b	net/minecraft/world/level/levelgen/WorldDimensions$Complete
	f	Ljy;	a	dimensions
	f	Lfcw$a;	b	specialWorldProperty
	m	(Ljy;Lfcw$a;)V	<init>	<init>
	m	()Lcom/mojang/serialization/Lifecycle;	a	lifecycle
	m	()Ljz$b;	b	dimensionsRegistryAccess
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljy;	c	dimensions
	m	()Lfcw$a;	d	specialWorldProperty
c	ekw	net/minecraft/world/level/levelgen/WorldGenSettings
	f	Leky;	b	options
	f	Lekv;	c	dimensions
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Leky;Lekv;)V	<init>	<init>
	m	(Lcom/mojang/serialization/DynamicOps;Leky;Lekv;)Lcom/mojang/serialization/DataResult;	a	encode
	m	(Lcom/mojang/serialization/DynamicOps;Leky;Ljz;)Lcom/mojang/serialization/DataResult;	a	encode
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leky;	a	options
	m	()Lekv;	b	dimensions
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekx	net/minecraft/world/level/levelgen/WorldGenerationContext
	f	I	a	minY
	f	I	b	height
	m	(Lefz;Ldmw;)V	<init>	<init>
	m	()I	a	getMinGenY
	m	()I	b	getGenDepth
c	eky	net/minecraft/world/level/levelgen/WorldOptions
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leky;	b	DEMO_OPTIONS
	f	J	c	seed
	f	Z	d	generateStructures
	f	Z	e	generateBonusChest
	f	Ljava/util/Optional;	f	legacyCustomOptions
	m	(JZZ)V	<init>	<init>
	m	()Leky;	a	defaultWithRandomSeed
	m	()Leky;	b	testWorldWithRandomSeed
	m	(JZZLjava/util/Optional;)V	<init>	<init>
	m	()J	c	seed
	m	()Z	d	generateStructures
	m	()Z	e	generateBonusChest
	m	()Z	f	isOldCustomizedWorld
	m	(Z)Leky;	a	withBonusChest
	m	(Z)Leky;	b	withStructures
	m	(Ljava/util/OptionalLong;)Leky;	a	withSeed
	m	(Ljava/lang/String;)Ljava/util/OptionalLong;	a	parseSeed
	m	()J	g	randomSeed
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leky;)Ljava/util/Optional;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ekz	net/minecraft/world/level/levelgen/WorldgenRandom
	f	Lbck;	d	randomSource
	f	I	e	count
	m	(Lbck;)V	<init>	<init>
	m	()I	l	getCount
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(I)I	c	next
	m	(J)V	b	setSeed
	m	(JII)J	a	setDecorationSeed
	m	(JII)V	b	setFeatureSeed
	m	(JII)V	c	setLargeFeatureSeed
	m	(JIII)V	a	setLargeFeatureWithSalt
	m	(IIJJ)Lbck;	a	seedSlimeChunk
c	ekz$a	net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm
	f	Lekz$a;	a	LEGACY
	f	Lekz$a;	b	XOROSHIRO
	f	Ljava/util/function/LongFunction;	c	constructor
	f	[Lekz$a;	d	$VALUES
	m	()[Lekz$a;	values	values
	m	(Ljava/lang/String;)Lekz$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/util/function/LongFunction;)V	<init>	<init>
	m	(J)Lbck;	a	newInstance
	m	()[Lekz$a;	a	$values
	m	()V	<clinit>	<clinit>
c	ela	net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus
	f	J	b	seedLo
	f	J	c	seedHi
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lekp$a;)V	<init>	<init>
	m	(JJ)V	<init>	<init>
	m	()J	a	nextLong
	m	(Lela;)Ljava/util/stream/LongStream;	a	lambda$static$2
	m	(Ljava/util/stream/LongStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([J)Lela;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elb	net/minecraft/world/level/levelgen/XoroshiroRandomSource
	f	F	c	FLOAT_UNIT
	f	D	d	DOUBLE_UNIT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lela;	e	randomNumberGenerator
	f	Lekc;	f	gaussianSource
	m	(J)V	<init>	<init>
	m	(Lekp$a;)V	<init>	<init>
	m	(JJ)V	<init>	<init>
	m	(Lela;)V	<init>	<init>
	m	()Lbck;	d	fork
	m	()Lekn;	e	forkPositional
	m	(J)V	b	setSeed
	m	()I	f	nextInt
	m	(I)I	a	nextInt
	m	()J	g	nextLong
	m	()Z	h	nextBoolean
	m	()F	i	nextFloat
	m	()D	j	nextDouble
	m	()D	k	nextGaussian
	m	(I)V	b	consumeCount
	m	(I)J	c	nextBits
	m	(Lelb;)Lela;	a	lambda$static$1
	m	(Lela;)Lelb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elb$a	net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory
	f	J	a	seedLo
	f	J	b	seedHi
	m	(JJ)V	<init>	<init>
	m	(III)Lbck;	a	at
	m	(Ljava/lang/String;)Lbck;	a	fromHashOf
	m	(J)Lbck;	a	fromSeed
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
c	elc	net/minecraft/world/level/levelgen/blending/Blender
	f	Lelc;	a	EMPTY
	f	Lezo;	b	SHIFT_NOISE
	f	I	c	HEIGHT_BLENDING_RANGE_CELLS
	f	I	d	HEIGHT_BLENDING_RANGE_CHUNKS
	f	I	e	DENSITY_BLENDING_RANGE_CELLS
	f	I	f	DENSITY_BLENDING_RANGE_CHUNKS
	f	D	g	OLD_CHUNK_XZ_RADIUS
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	h	heightAndBiomeBlendingData
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	i	densityBlendingData
	m	()Lelc;	a	empty
	m	(Lauj;)Lelc;	a	of
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
	m	(II)Lelc$a;	a	blendOffsetAndFactor
	m	(D)D	a	heightToOffset
	m	(Lejt$b;D)D	a	blendDensity
	m	(IIILelc$b;)D	a	getBlendingDataValue
	m	(Lelc$b;IIIII)D	a	getBlendingDataValue
	m	(Ldoa;)Ldoa;	a	getBiomeResolver
	m	(III)Ljl;	a	blendBiome
	m	(Lauj;Lefy;)V	a	generateBorderTicks
	m	(Lefy;Ljb;)V	a	generateBorderTick
	m	(Ldnt;Legs;)V	a	addAroundOldChunksCarvingMaskFilter
	m	(Leld;Ljava/util/Map;)Lelc$c;	a	makeOldChunkDistanceGetter
	m	(Lji;Leld;)Lelc$c;	a	makeOffsetOldChunkDistanceGetter
	m	(DDDDDD)D	a	distanceToCube
	m	(DDDDDDD)D	a	lambda$makeOffsetOldChunkDistanceGetter$10
	m	(Ljava/util/List;DDD)D	a	lambda$makeOldChunkDistanceGetter$9
	m	(Ljava/util/List;Lji;Leld;)V	a	lambda$makeOldChunkDistanceGetter$8
	m	(Lelc$c;III)Z	a	lambda$addAroundOldChunksCarvingMaskFilter$7
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;Ljava/lang/Long;Leld;)V	a	lambda$blendBiome$6
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableObject;IILjl;)V	a	lambda$blendBiome$5
	m	(Ldoa;IIILdog$f;)Ljl;	a	lambda$getBiomeResolver$4
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Leld;)V	a	lambda$blendDensity$3
	m	(IIILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IIID)V	a	lambda$blendDensity$2
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Ljava/lang/Long;Leld;)V	a	lambda$blendOffsetAndFactor$1
	m	(IILorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;Lorg/apache/commons/lang3/mutable/MutableDouble;IID)V	a	lambda$blendOffsetAndFactor$0
	m	()V	<clinit>	<clinit>
c	elc$1	net/minecraft/world/level/levelgen/blending/Blender$1
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
	m	(II)Lelc$a;	a	blendOffsetAndFactor
	m	(Lejt$b;D)D	a	blendDensity
	m	(Ldoa;)Ldoa;	a	getBiomeResolver
c	elc$a	net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput
	f	D	a	alpha
	f	D	b	blendingOffset
	m	(DD)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()D	a	alpha
	m	()D	b	blendingOffset
c	elc$b	net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter
	m	(Leld;III)D	get	get
c	elc$c	net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter
	m	(DDD)D	getDistance	getDistance
c	eld	net/minecraft/world/level/levelgen/blending/BlendingData
	f	D	e	BLENDING_DENSITY_FACTOR
	f	I	a	CELL_WIDTH
	f	I	b	CELL_HEIGHT
	f	I	c	CELL_RATIO
	f	D	f	SOLID_DENSITY
	f	D	g	AIR_DENSITY
	f	I	h	CELLS_PER_SECTION_Y
	f	I	i	QUARTS_PER_SECTION
	f	I	j	CELL_HORIZONTAL_MAX_INDEX_INSIDE
	f	I	k	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE
	f	I	l	CELL_COLUMN_INSIDE_COUNT
	f	I	m	CELL_COLUMN_OUTSIDE_COUNT
	f	I	n	CELL_COLUMN_COUNT
	f	Ldmw;	o	areaWithOldGeneration
	f	Ljava/util/List;	p	SURFACE_BLOCKS
	f	D	d	NO_VALUE
	f	Z	q	hasCalculatedData
	f	[D	r	heights
	f	Ljava/util/List;	s	biomes
	f	[[D	t	densities
	m	(IILjava/util/Optional;)V	<init>	<init>
	m	(Leld$d;)Leld;	a	unpack
	m	()Leld$d;	a	pack
	m	(Lauj;II)Leld;	a	getOrUpdateBlendingData
	m	(Ldnt;IIZ)Ljava/util/Set;	a	sideByGenerationAge
	m	(Lefy;Ljava/util/Set;)V	a	calculateData
	m	(ILefy;II)V	a	addValuesForColumn
	m	(Lefy;II)I	a	getHeightAtXZ
	m	(Lefy;Ljb$a;)D	a	read1
	m	(Lefy;Ljb$a;)D	b	read7
	m	(Lefy;III)[D	a	getDensityColumn
	m	(Lefy;II)Ljava/util/List;	b	getBiomeColumn
	m	(Lefy;Ljb;)Z	a	isGround
	m	(III)D	a	getHeight
	m	([DI)D	a	getDensity
	m	(III)D	b	getDensity
	m	(IIILeld$a;)V	a	iterateBiomes
	m	(IILeld$c;)V	a	iterateHeights
	m	(IIIILeld$b;)V	a	iterateDensities
	m	()I	c	cellCountPerColumn
	m	()I	d	quartCountPerColumn
	m	()I	e	getColumnMinY
	m	()I	f	getMinY
	m	(I)I	a	getCellYIndex
	m	(II)I	a	getInsideIndex
	m	(II)I	b	getOutsideIndex
	m	(I)I	b	getX
	m	(I)I	c	getZ
	m	(I)I	d	zeroIfNegative
	m	()Ldmw;	b	getAreaWithOldGeneration
	m	()[D	g	lambda$new$1
	m	([D)V	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eld$a	net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer
	m	(IILjl;)V	consume	consume
c	eld$b	net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer
	m	(IIID)V	consume	consume
c	eld$c	net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer
	m	(IID)V	consume	consume
c	eld$d	net/minecraft/world/level/levelgen/blending/BlendingData$Packed
	f	I	b	minSection
	f	I	c	maxSection
	f	Ljava/util/Optional;	d	heights
	f	Lcom/mojang/serialization/Codec;	e	DOUBLE_ARRAY_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(IILjava/util/Optional;)V	<init>	<init>
	m	(Leld$d;)Lcom/mojang/serialization/DataResult;	a	validateArraySize
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	minSection
	m	()I	b	maxSection
	m	()Ljava/util/Optional;	c	heights
	m	()Ljava/lang/String;	d	lambda$validateArraySize$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ele	net/minecraft/world/level/levelgen/blending/package-info
c	elf	net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	elg	net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	()V	<clinit>	<clinit>
c	elh	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lelh;	c	ONLY_IN_AIR_PREDICATE
	f	Lelh;	d	ONLY_IN_AIR_OR_WATER_PREDICATE
	m	()Leli;	a	type
	m	(Ljava/util/List;)Lelh;	a	allOf
	m	([Lelh;)Lelh;	a	allOf
	m	(Lelh;Lelh;)Lelh;	a	allOf
	m	(Ljava/util/List;)Lelh;	b	anyOf
	m	([Lelh;)Lelh;	b	anyOf
	m	(Lelh;Lelh;)Lelh;	b	anyOf
	m	(Lkg;Ljava/util/List;)Lelh;	a	matchesBlocks
	m	(Ljava/util/List;)Lelh;	c	matchesBlocks
	m	(Lkg;[Ldpz;)Lelh;	a	matchesBlocks
	m	([Ldpz;)Lelh;	a	matchesBlocks
	m	(Lkg;Lbae;)Lelh;	a	matchesTag
	m	(Lbae;)Lelh;	a	matchesTag
	m	(Lkg;Ljava/util/List;)Lelh;	b	matchesFluids
	m	(Lkg;[Lfak;)Lelh;	a	matchesFluids
	m	([Lfak;)Lelh;	a	matchesFluids
	m	(Lelh;)Lelh;	a	not
	m	(Lkg;)Lelh;	a	replaceable
	m	()Lelh;	b	replaceable
	m	(Leeb;Lkg;)Lelh;	a	wouldSurvive
	m	(Lkg;Ljh;)Lelh;	a	hasSturdyFace
	m	(Ljh;)Lelh;	a	hasSturdyFace
	m	(Lkg;)Lelh;	b	solid
	m	()Lelh;	c	solid
	m	()Lelh;	d	noFluid
	m	(Lkg;)Lelh;	c	noFluid
	m	(Lkg;)Lelh;	d	insideWorld
	m	()Lelh;	e	alwaysTrue
	m	(Lkg;)Lelh;	e	unobstructed
	m	()Lelh;	f	unobstructed
	m	()V	<clinit>	<clinit>
c	eli	net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType
	f	Leli;	a	MATCHING_BLOCKS
	f	Leli;	b	MATCHING_BLOCK_TAG
	f	Leli;	c	MATCHING_FLUIDS
	f	Leli;	d	HAS_STURDY_FACE
	f	Leli;	e	SOLID
	f	Leli;	f	REPLACEABLE
	f	Leli;	g	WOULD_SURVIVE
	f	Leli;	h	INSIDE_WORLD_BOUNDS
	f	Leli;	i	ANY_OF
	f	Leli;	j	ALL_OF
	f	Leli;	k	NOT
	f	Leli;	l	TRUE
	f	Leli;	m	UNOBSTRUCTED
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leli;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	elj	net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate
	f	Ljava/util/List;	e	predicates
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	m	(Lelj;)Ljava/util/List;	a	lambda$codec$0
c	elk	net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate
	f	Lkg;	e	offset
	f	Ljh;	f	direction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;Ljh;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lelk;)Ljh;	a	lambda$static$1
	m	(Lelk;)Lkg;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ell	net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkg;	e	offset
	m	(Lkg;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lell;)Lkg;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elm	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate
	f	Lbae;	a	tag
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	m	(Lkg;Lbae;)V	<init>	<init>
	m	(Leeb;)Z	a	test
	m	()Leli;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lelm;)Lbae;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eln	net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate
	f	Ljp;	e	blocks
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;Ljp;)V	<init>	<init>
	m	(Leeb;)Z	a	test
	m	()Leli;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Leln;)Ljp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elo	net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate
	f	Ljp;	e	fluids
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;Ljp;)V	<init>	<init>
	m	(Leeb;)Z	a	test
	m	()Leli;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lelo;)Ljp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elp	net/minecraft/world/level/levelgen/blockpredicates/NotPredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lelh;	e	predicate
	m	(Lelh;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lelp;)Lelh;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elq	net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;)V	<init>	<init>
	m	(Leeb;)Z	a	test
	m	()Leli;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elr	net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;)V	<init>	<init>
	m	(Leeb;)Z	a	test
	m	()Leli;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	els	net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate
	f	Lkg;	f	offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	stateTestingCodec
	m	(Lkg;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	(Leeb;)Z	a	test
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lels;)Lkg;	a	lambda$stateTestingCodec$0
c	elt	net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate
	f	Lelt;	a	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	m	()V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	()Lelt;	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elu	net/minecraft/world/level/levelgen/blockpredicates/UnobstructedPredicate
	f	Lkg;	e	offset
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lkg;)V	<init>	<init>
	m	()Leli;	a	type
	m	(Ldnt;Ljb;)Z	a	test
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lkg;	g	offset
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elv	net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lkg;	e	offset
	f	Leeb;	f	state
	m	(Lkg;Leeb;)V	<init>	<init>
	m	(Ldnt;Ljb;)Z	a	test
	m	()Leli;	a	type
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lelv;)Leeb;	a	lambda$static$1
	m	(Lelv;)Lkg;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elw	net/minecraft/world/level/levelgen/blockpredicates/package-info
c	elx	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbwm;	b	verticalRotation
	f	Lelx$a;	c	shape
	m	(FLetf;Lbwm;Leku;Lema;Ljp;Lbwm;Lelx$a;)V	<init>	<init>
	m	(Lelz;Lbwm;Lelx$a;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lelx;)Lelx$a;	a	lambda$static$2
	m	(Lelx;)Lbwm;	b	lambda$static$1
	m	(Lelx;)Lelz;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	elx$a	net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbwm;	b	distanceFactor
	f	Lbwm;	c	thickness
	f	I	d	widthSmoothness
	f	Lbwm;	e	horizontalRadiusFactor
	f	F	f	verticalRadiusDefaultFactor
	f	F	g	verticalRadiusCenterFactor
	m	(Lbwm;Lbwm;ILbwm;FF)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lelx$a;)Ljava/lang/Float;	a	lambda$static$5
	m	(Lelx$a;)Ljava/lang/Float;	b	lambda$static$4
	m	(Lelx$a;)Lbwm;	c	lambda$static$3
	m	(Lelx$a;)Ljava/lang/Integer;	d	lambda$static$2
	m	(Lelx$a;)Lbwm;	e	lambda$static$1
	m	(Lelx$a;)Lbwm;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ely	net/minecraft/world/level/levelgen/carver/CanyonWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lelx;Lbck;)Z	a	isStartChunk
	m	(Lemb;Lelx;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	(Lemb;Lelx;Lefy;Ljava/util/function/Function;JLejm;DDDFFFIIDLefx;)V	a	doCarve
	m	(Lemb;Lelx;Lbck;)[F	a	initWidthFactors
	m	(Lelx;Lbck;DFF)D	a	updateVerticalRadius
	m	(Lemb;[FDDDI)Z	a	shouldSkip
	m	(Lelz;Lbck;)Z	a	isStartChunk
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	([FLemb;DDDI)Z	a	lambda$doCarve$0
c	elz	net/minecraft/world/level/levelgen/carver/CarverConfiguration
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Letf;	e	y
	f	Lbwm;	f	yScale
	f	Leku;	g	lavaLevel
	f	Lema;	h	debugSettings
	f	Ljp;	i	replaceable
	m	(FLetf;Lbwm;Leku;Lema;Ljp;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lelz;)Ljp;	a	lambda$static$5
	m	(Lelz;)Lema;	b	lambda$static$4
	m	(Lelz;)Leku;	c	lambda$static$3
	m	(Lelz;)Lbwm;	d	lambda$static$2
	m	(Lelz;)Letf;	e	lambda$static$1
	m	(Lelz;)Ljava/lang/Float;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ema	net/minecraft/world/level/levelgen/carver/CarverDebugSettings
	f	Lema;	a	DEFAULT
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Z	c	debugMode
	f	Leeb;	d	airState
	f	Leeb;	e	waterState
	f	Leeb;	f	lavaState
	f	Leeb;	g	barrierState
	m	(ZLeeb;Leeb;Leeb;Leeb;)Lema;	a	of
	m	(Leeb;Leeb;Leeb;Leeb;)Lema;	a	of
	m	(ZLeeb;)Lema;	a	of
	m	(ZLeeb;Leeb;Leeb;Leeb;)V	<init>	<init>
	m	()Z	a	isDebugMode
	m	()Leeb;	b	getAirState
	m	()Leeb;	c	getWaterState
	m	()Leeb;	d	getLavaState
	m	()Leeb;	e	getBarrierState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	emb	net/minecraft/world/level/levelgen/carver/CarvingContext
	f	Ljz;	a	registryAccess
	f	Leke;	b	noiseChunk
	f	Leko;	c	randomState
	f	Lekr$o;	d	surfaceRule
	m	(Lekd;Ljz;Ldmw;Leke;Leko;Lekr$o;)V	<init>	<init>
	m	(Ljava/util/function/Function;Lefy;Ljb;Z)Ljava/util/Optional;	a	topMaterial
	m	()Ljz;	c	registryAccess
	m	()Leko;	d	randomState
c	emc	net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbwm;	b	horizontalRadiusMultiplier
	f	Lbwm;	c	verticalRadiusMultiplier
	f	Lbwm;	j	floorLevel
	m	(FLetf;Lbwm;Leku;Lema;Ljp;Lbwm;Lbwm;Lbwm;)V	<init>	<init>
	m	(FLetf;Lbwm;Leku;Ljp;Lbwm;Lbwm;Lbwm;)V	<init>	<init>
	m	(Lelz;Lbwm;Lbwm;Lbwm;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lemc;)Lbwm;	a	lambda$static$3
	m	(Lemc;)Lbwm;	b	lambda$static$2
	m	(Lemc;)Lbwm;	c	lambda$static$1
	m	(Lemc;)Lelz;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	emd	net/minecraft/world/level/levelgen/carver/CaveWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lemc;Lbck;)Z	a	isStartChunk
	m	(Lemb;Lemc;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	()I	a	getCaveBound
	m	(Lbck;)F	a	getThickness
	m	()D	b	getYScale
	m	(Lemb;Lemc;Lefy;Ljava/util/function/Function;Lejm;DDDFDLefx;Lemg$a;)V	a	createRoom
	m	(Lemb;Lemc;Lefy;Ljava/util/function/Function;JLejm;DDDDDFFFIIDLefx;Lemg$a;)V	a	createTunnel
	m	(DDDD)Z	a	shouldSkip
	m	(Lelz;Lbck;)Z	a	isStartChunk
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	(DLemb;DDDI)Z	a	lambda$carve$0
c	eme	net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver
	f	Lemg;	d	worldCarver
	f	Lelz;	e	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	m	(Lemg;Lelz;)V	<init>	<init>
	m	(Lbck;)Z	a	isStartChunk
	m	(Lemb;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lemg;	a	worldCarver
	m	()Lelz;	b	config
	m	(Leme;)Lemg;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	emf	net/minecraft/world/level/levelgen/carver/NetherWorldCarver
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()I	a	getCaveBound
	m	(Lbck;)F	a	getThickness
	m	()D	b	getYScale
	m	(Lemb;Lemc;Lefy;Ljava/util/function/Function;Lefx;Ljb$a;Ljb$a;Lejm;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lefx;Ljb$a;Ljb$a;Lejm;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
c	emg	net/minecraft/world/level/levelgen/carver/WorldCarver
	f	Lemg;	a	CAVE
	f	Lemg;	b	NETHER_CAVE
	f	Lemg;	c	CANYON
	f	Leeb;	d	AIR
	f	Leeb;	e	CAVE_AIR
	f	Lfal;	f	WATER
	f	Lfal;	g	LAVA
	f	Ljava/util/Set;	h	liquids
	f	Lcom/mojang/serialization/MapCodec;	i	configuredCodec
	m	(Ljava/lang/String;Lemg;)Lemg;	a	register
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lelz;)Leme;	a	configured
	m	()Lcom/mojang/serialization/MapCodec;	c	configuredCodec
	m	()I	d	getRange
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lejm;DDDDDLefx;Lemg$a;)Z	a	carveEllipsoid
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lefx;Ljb$a;Ljb$a;Lejm;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z	a	carveBlock
	m	(Lemb;Lelz;Ljb;Lejm;)Leeb;	a	getCarveState
	m	(Lelz;Leeb;)Leeb;	b	getDebugState
	m	(Lemb;Lelz;Lefy;Ljava/util/function/Function;Lbck;Lejm;Ldlz;Lefx;)Z	a	carve
	m	(Lelz;Lbck;)Z	a	isStartChunk
	m	(Lelz;Leeb;)Z	a	canReplaceBlock
	m	(Ldlz;DDIIF)Z	a	canReach
	m	(Lelz;)Z	b	isDebugEnabled
	m	(Lefy;Ljb$a;Leeb;)V	a	lambda$carveBlock$0
	m	()V	<clinit>	<clinit>
c	emg$a	net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker
	m	(Lemb;DDDI)Z	shouldSkip	shouldSkip
c	emh	net/minecraft/world/level/levelgen/carver/package-info
c	emi	net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;Lepo;ILjb$a;)V	a	placeTrunk
	m	(Ldmv;Ljb$a;Leeb;)V	a	placeMushroomBlock
	m	(Lbck;)I	a	getTreeHeight
	m	(Ldmv;Ljb;ILjb$a;Lepo;)Z	a	isValidPosition
	m	(Lenj;)Z	a	place
	m	(IIII)I	a	getTreeRadiusForHeight
	m	(Ldmv;Lbck;Ljb;ILjb$a;Lepo;)V	a	makeCap
c	emj	net/minecraft/world/level/levelgen/feature/BambooFeature
	f	Leeb;	a	BAMBOO_TRUNK
	f	Leeb;	b	BAMBOO_FINAL_LARGE
	f	Leeb;	c	BAMBOO_TOP_LARGE
	f	Leeb;	d	BAMBOO_TOP_SMALL
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	()V	<clinit>	<clinit>
c	emk	net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_PLACE_ON
	f	I	b	CLUSTERED_REACH
	f	I	c	CLUSTERED_SIZE
	f	I	d	UNCLUSTERED_REACH
	f	I	ap	UNCLUSTERED_SIZE
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;ILjb;II)Z	a	placeColumn
	m	(Ldmv;ILjb$a;I)Ljb;	a	findSurface
	m	(Ldmv;ILjb$a;)Z	a	canPlaceAt
	m	(Ldmv;Ljb$a;I)Ljb;	a	findAir
	m	(Ldmv;ILjb;)Z	a	isAirOrLavaOcean
	m	()V	<clinit>	<clinit>
c	eml	net/minecraft/world/level/levelgen/feature/BasaltPillarFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Lbck;Ljb;)V	a	placeBaseHangOff
	m	(Ldmv;Lbck;Ljb;)Z	b	placeHangOff
c	emm	net/minecraft/world/level/levelgen/feature/BlockBlobFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	emn	net/minecraft/world/level/levelgen/feature/BlockColumnFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	([IIIZ)V	a	truncate
c	emo	net/minecraft/world/level/levelgen/feature/BlockPileFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb;Lbck;)Z	a	mayPlaceOn
	m	(Ldmv;Ljb;Lbck;Lepd;)V	a	tryPlaceBlock
c	emp	net/minecraft/world/level/levelgen/feature/BlueIceFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	emq	net/minecraft/world/level/levelgen/feature/BonusChestFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	emr	net/minecraft/world/level/levelgen/feature/ChorusPlantFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	ems	net/minecraft/world/level/levelgen/feature/ConfiguredFeature
	f	Lenh;	d	feature
	f	Lepm;	e	config
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	m	(Lenh;Lepm;)V	<init>	<init>
	m	(Ldnt;Lefz;Lbck;Ljb;)Z	a	place
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lenh;	b	feature
	m	()Lepm;	c	config
	m	(Lems;)Lenh;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	emt	net/minecraft/world/level/levelgen/feature/CoralClawFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;Leeb;)Z	a	placeFeature
c	emu	net/minecraft/world/level/levelgen/feature/CoralFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Lbck;Ljb;Leeb;)Z	a	placeFeature
	m	(Ldmv;Lbck;Ljb;Leeb;)Z	b	placeCoralBlock
	m	(Ljh;Ldmv;Ljb;Ldpz;)V	a	lambda$placeCoralBlock$1
	m	(Ldmv;Ljb;Ldpz;)V	a	lambda$placeCoralBlock$0
c	emv	net/minecraft/world/level/levelgen/feature/CoralMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;Leeb;)Z	a	placeFeature
c	emw	net/minecraft/world/level/levelgen/feature/CoralTreeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;Leeb;)Z	a	placeFeature
c	emx	net/minecraft/world/level/levelgen/feature/DeltaFeature
	f	Lcom/google/common/collect/ImmutableList;	a	CANNOT_REPLACE
	f	[Ljh;	b	DIRECTIONS
	f	D	c	RIM_SPAWN_CHANCE
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb;Leph;)Z	a	isClear
	m	()V	<clinit>	<clinit>
c	emy	net/minecraft/world/level/levelgen/feature/DesertWellFeature
	f	Leek;	a	IS_SAND
	f	Leeb;	b	sand
	f	Leeb;	c	sandSlab
	f	Leeb;	d	sandstone
	f	Leeb;	ap	water
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;)V	b	placeSusSand
	m	(Ljb;Lebe;)V	a	lambda$placeSusSand$0
	m	()V	<clinit>	<clinit>
c	emz	net/minecraft/world/level/levelgen/feature/DiskFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Lepi;Ldnt;Lbck;IILjb$a;)Z	a	placeColumn
c	ena	net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Lbck;Ljb;IIFDIFLepj;)V	a	placeColumn
	m	(Ldmx;Ljb;)Z	a	isLava
	m	(Lbck;IIFILepj;)I	a	getDripstoneHeight
	m	(Ldnt;Ljb;)Z	b	canPlacePool
	m	(Ldmv;Ljb;)Z	a	canBeAdjacentToWater
	m	(Ldnt;Ljb;ILjh;)V	a	replaceBlocksWithDripstoneBlocks
	m	(IIIILepj;)D	a	getChanceOfStalagmiteOrStalactite
	m	(Lbck;FFFF)F	a	randomBetweenBiased
c	enb	net/minecraft/world/level/levelgen/feature/DripstoneUtils
	m	()V	<init>	<init>
	m	(DDDD)D	a	getDripstoneHeight
	m	(Ldnt;Ljb;I)Z	a	isCircleMostlyEmbeddedInStone
	m	(Ldmv;Ljb;)Z	a	isEmptyOrWater
	m	(Ldmv;Ljb;)Z	b	isEmptyOrWaterOrLava
	m	(Ljh;IZLjava/util/function/Consumer;)V	a	buildBaseToTipColumn
	m	(Ldmv;Ljb;Ljh;IZ)V	a	growPointedDripstone
	m	(Ldmv;Ljb;)Z	c	placeDripstoneBlockIfPossible
	m	(Ljh;Leey;)Leeb;	a	createPointedDripstone
	m	(Leeb;)Z	a	isDripstoneBaseOrLava
	m	(Leeb;)Z	b	isDripstoneBase
	m	(Leeb;)Z	c	isEmptyOrWater
	m	(Leeb;)Z	d	isNeitherEmptyNorWater
	m	(Leeb;)Z	e	isEmptyOrWaterOrLava
	m	(Ldmv;Ljb$a;Ljh;Leeb;)V	a	lambda$growPointedDripstone$0
c	enc	net/minecraft/world/level/levelgen/feature/EndGatewayFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;Lepk;Ljb;)V	a	lambda$place$0
c	end	net/minecraft/world/level/levelgen/feature/EndIslandFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	ene	net/minecraft/world/level/levelgen/feature/EndPlatformFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnl;Ljb;Z)V	a	createEndPlatform
c	enf	net/minecraft/world/level/levelgen/feature/EndPodiumFeature
	f	I	a	PODIUM_RADIUS
	f	I	b	PODIUM_PILLAR_HEIGHT
	f	I	c	RIM_RADIUS
	f	F	d	CORNER_ROUNDING
	f	Ljb;	ap	END_PODIUM_LOCATION
	f	Z	aq	active
	m	(Ljb;)Ljb;	a	getLocation
	m	(Z)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;Ldpz;)V	a	dropPreviousAndSetBlock
	m	()V	<clinit>	<clinit>
c	eng	net/minecraft/world/level/levelgen/feature/FallenTreeFeature
	f	I	a	STUMP_HEIGHT
	f	I	b	STUMP_HEIGHT_PLUS_EMPTY_SPACE
	f	I	c	FALLEN_LOG_MAX_FALL_HEIGHT_TO_GROUND
	f	I	d	FALLEN_LOG_MAX_GROUND_GAP
	f	I	ap	FALLEN_LOG_MAX_SPACE_FROM_STUMP
	f	I	aq	BLOCK_UPDATE_FLAGS
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Lepl;Ljb;Ldnt;Lbck;)V	a	placeFallenTree
	m	(Ldnt;Ljb$a;)V	a	setGroundHeightForFallenLogStartPos
	m	(Lepl;Ldnt;Lbck;Ljb$a;)V	a	placeStump
	m	(Ldnt;ILjb$a;Ljh;)Z	a	canPlaceEntireFallenLog
	m	(Lepl;Ldnt;Lbck;ILjb$a;Ljh;)V	a	placeFallenLog
	m	(Ldmv;Ljb;)Z	a	mayPlaceOn
	m	(Ldmv;Ljb;)Z	b	isOverSolidGround
	m	(Lepl;Ldnt;Lbck;Ljb$a;Ljava/util/function/Function;)Ljb;	a	placeLogBlock
	m	(Ldnt;Lbck;Ljava/util/Set;Ljava/util/List;)V	a	decorateLogs
	m	(Ldnt;)Ljava/util/function/BiConsumer;	a	getDecorationSetter
	m	(Ljh;)Ljava/util/function/Function;	a	getSidewaysStateModifier
	m	(Ljh;Leeb;)Leeb;	a	lambda$getSidewaysStateModifier$2
	m	(Ldnt;Ljb;Leeb;)V	a	lambda$getDecorationSetter$1
	m	(Lesi$a;Lesi;)V	a	lambda$decorateLogs$0
c	enh	net/minecraft/world/level/levelgen/feature/Feature
	f	Lenh;	e	NO_OP
	f	Lenh;	f	TREE
	f	Lenh;	g	FALLEN_TREE
	f	Lenh;	h	FLOWER
	f	Lenh;	i	NO_BONEMEAL_FLOWER
	f	Lenh;	j	RANDOM_PATCH
	f	Lenh;	k	BLOCK_PILE
	f	Lenh;	l	SPRING
	f	Lenh;	m	CHORUS_PLANT
	f	Lenh;	n	REPLACE_SINGLE_BLOCK
	f	Lenh;	o	VOID_START_PLATFORM
	f	Lenh;	p	DESERT_WELL
	f	Lenh;	q	FOSSIL
	f	Lenh;	r	HUGE_RED_MUSHROOM
	f	Lenh;	s	HUGE_BROWN_MUSHROOM
	f	Lenh;	t	ICE_SPIKE
	f	Lenh;	u	GLOWSTONE_BLOB
	f	Lenh;	v	FREEZE_TOP_LAYER
	f	Lenh;	w	VINES
	f	Lenh;	x	BLOCK_COLUMN
	f	Lenh;	y	VEGETATION_PATCH
	f	Lenh;	z	WATERLOGGED_VEGETATION_PATCH
	f	Lenh;	A	ROOT_SYSTEM
	f	Lenh;	B	MULTIFACE_GROWTH
	f	Lenh;	C	UNDERWATER_MAGMA
	f	Lenh;	D	MONSTER_ROOM
	f	Lenh;	E	BLUE_ICE
	f	Lenh;	F	ICEBERG
	f	Lenh;	G	FOREST_ROCK
	f	Lenh;	H	DISK
	f	Lenh;	I	LAKE
	f	Lenh;	J	ORE
	f	Lenh;	K	END_PLATFORM
	f	Lenh;	L	END_SPIKE
	f	Lenh;	M	END_ISLAND
	f	Lenh;	N	END_GATEWAY
	f	Leon;	O	SEAGRASS
	f	Lenh;	P	KELP
	f	Lenh;	Q	CORAL_TREE
	f	Lenh;	R	CORAL_MUSHROOM
	f	Lenh;	S	CORAL_CLAW
	f	Lenh;	T	SEA_PICKLE
	f	Lenh;	U	SIMPLE_BLOCK
	f	Lenh;	V	BAMBOO
	f	Lenh;	W	HUGE_FUNGUS
	f	Lenh;	X	NETHER_FOREST_VEGETATION
	f	Lenh;	Y	WEEPING_VINES
	f	Lenh;	Z	TWISTING_VINES
	f	Lenh;	aa	BASALT_COLUMNS
	f	Lenh;	ab	DELTA_FEATURE
	f	Lenh;	ac	REPLACE_BLOBS
	f	Lenh;	ad	FILL_LAYER
	f	Lemq;	ae	BONUS_CHEST
	f	Lenh;	af	BASALT_PILLAR
	f	Lenh;	ag	SCATTERED_ORE
	f	Lenh;	ah	RANDOM_SELECTOR
	f	Lenh;	ai	SIMPLE_RANDOM_SELECTOR
	f	Lenh;	aj	RANDOM_BOOLEAN_SELECTOR
	f	Lenh;	ak	GEODE
	f	Lenh;	al	DRIPSTONE_CLUSTER
	f	Lenh;	am	LARGE_DRIPSTONE
	f	Lenh;	an	POINTED_DRIPSTONE
	f	Lenh;	ao	SCULK_PATCH
	f	Lcom/mojang/serialization/MapCodec;	a	configuredCodec
	m	(Ljava/lang/String;Lenh;)Lenh;	a	register
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	configuredCodec
	m	(Ldnc;Ljb;Leeb;)V	a	setBlock
	m	(Lbae;)Ljava/util/function/Predicate;	a	isReplaceable
	m	(Ldnt;Ljb;Leeb;Ljava/util/function/Predicate;)V	a	safeSetBlock
	m	(Lenj;)Z	a	place
	m	(Lepm;Ldnt;Lefz;Lbck;Ljb;)Z	a	place
	m	(Leeb;)Z	a	isStone
	m	(Leeb;)Z	b	isDirt
	m	(Ldna;Ljb;)Z	a	isGrassOrDirt
	m	(Ljava/util/function/Function;Ljb;Ljava/util/function/Predicate;)Z	a	checkNeighbors
	m	(Ljava/util/function/Function;Ljb;)Z	a	isAdjacentToAir
	m	(Ldnt;Ljb;)V	a	markAboveForPostProcessing
	m	(Lbae;Leeb;)Z	a	lambda$isReplaceable$1
	m	(Lepm;)Lems;	a	lambda$new$0
	m	()V	<clinit>	<clinit>
c	eni	net/minecraft/world/level/levelgen/feature/FeatureCountTracker
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lcom/google/common/cache/LoadingCache;	b	data
	m	()V	<init>	<init>
	m	(Laub;)V	a	chunkDecorated
	m	(Laub;Lems;Ljava/util/Optional;)V	a	featurePlaced
	m	()V	a	clearCounts
	m	()V	b	logCounts
	m	(Laub;Leni$b;)V	a	lambda$logCounts$2
	m	(Ljava/lang/String;Ljava/lang/Integer;Ljy;Leni$a;Ljava/lang/Integer;)V	a	lambda$logCounts$1
	m	(Leni$a;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$featurePlaced$0
	m	()V	<clinit>	<clinit>
c	eni$1	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$1
	m	()V	<init>	<init>
	m	(Laub;)Leni$b;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	eni$a	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData
	f	Lems;	a	feature
	f	Ljava/util/Optional;	b	topFeature
	m	(Lems;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lems;	a	feature
	m	()Ljava/util/Optional;	b	topFeature
c	eni$b	net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	f	Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lorg/apache/commons/lang3/mutable/MutableInt;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	featureData
	m	()Lorg/apache/commons/lang3/mutable/MutableInt;	b	chunksWithFeatures
c	enj	net/minecraft/world/level/levelgen/feature/FeaturePlaceContext
	f	Ljava/util/Optional;	a	topFeature
	f	Ldnt;	b	level
	f	Lefz;	c	chunkGenerator
	f	Lbck;	d	random
	f	Ljb;	e	origin
	f	Lepm;	f	config
	m	(Ljava/util/Optional;Ldnt;Lefz;Lbck;Ljb;Lepm;)V	<init>	<init>
	m	()Ljava/util/Optional;	a	topFeature
	m	()Ldnt;	b	level
	m	()Lefz;	c	chunkGenerator
	m	()Lbck;	d	random
	m	()Ljb;	e	origin
	m	()Lepm;	f	config
c	enk	net/minecraft/world/level/levelgen/feature/FillLayerFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	enl	net/minecraft/world/level/levelgen/feature/FossilFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Leuq;)I	a	countEmptyCorners
	m	(Ldnt;Lorg/apache/commons/lang3/mutable/MutableInt;Ljb;)V	a	lambda$countEmptyCorners$0
c	enm	net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	fossilStructures
	f	Ljava/util/List;	c	overlayStructures
	f	Ljl;	d	fossilProcessors
	f	Ljl;	e	overlayProcessors
	f	I	f	maxEmptyCornersAllowed
	m	(Ljava/util/List;Ljava/util/List;Ljl;Ljl;I)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lenm;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Lenm;)Ljl;	b	lambda$static$3
	m	(Lenm;)Ljl;	c	lambda$static$2
	m	(Lenm;)Ljava/util/List;	d	lambda$static$1
	m	(Lenm;)Ljava/util/List;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	enn	net/minecraft/world/level/levelgen/feature/GeodeFeature
	f	[Ljh;	a	DIRECTIONS
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	()V	<clinit>	<clinit>
c	eno	net/minecraft/world/level/levelgen/feature/GlowstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	enp	net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;ILjb$a;Lepo;)V	a	makeCap
	m	(IIII)I	a	getTreeRadiusForHeight
c	enq	net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leeb;	b	validBaseState
	f	Leeb;	c	stemState
	f	Leeb;	d	hatState
	f	Leeb;	e	decorState
	f	Lelh;	f	replaceableBlocks
	f	Z	g	planted
	m	(Leeb;Leeb;Leeb;Leeb;Lelh;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lenq;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Lenq;)Lelh;	b	lambda$static$4
	m	(Lenq;)Leeb;	c	lambda$static$3
	m	(Lenq;)Leeb;	d	lambda$static$2
	m	(Lenq;)Leeb;	e	lambda$static$1
	m	(Lenq;)Leeb;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	enr	net/minecraft/world/level/levelgen/feature/HugeFungusFeature
	f	F	a	HUGE_PROBABILITY
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;Lenq;Z)Z	a	isReplaceable
	m	(Ldnt;Lbck;Lenq;Ljb;IZ)V	a	placeStem
	m	(Ldnt;Lbck;Lenq;Ljb;IZ)V	b	placeHat
	m	(Ldmv;Lbck;Lenq;Ljb$a;FFF)V	a	placeHatBlock
	m	(Ldmv;Lbck;Ljb;Leeb;Z)V	a	placeHatDropBlock
	m	(Ljb;Ldmv;Lbck;)V	a	tryPlaceWeepingVines
c	ens	net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldmv;Lbck;Ljb;ILjb$a;Lepo;)V	a	makeCap
	m	(IIII)I	a	getTreeRadiusForHeight
c	ent	net/minecraft/world/level/levelgen/feature/IceSpikeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	enu	net/minecraft/world/level/levelgen/feature/IcebergFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Lbck;Ldmv;IILjb;ZIDI)V	a	generateCutOut
	m	(IILjb;Ldmv;ZDLjb;II)V	a	carve
	m	(Ldmv;Ljb;)V	a	removeFloatingSnowLayer
	m	(Ldmv;Lbck;Ljb;IIIIIIZIDZLeeb;)V	a	generateIcebergBlock
	m	(Ljb;Ldmv;Lbck;IIZZLeeb;)V	a	setIcebergBlock
	m	(III)I	a	getEllipseC
	m	(IILjb;ILbck;)D	a	signedDistanceCircle
	m	(IILjb;IID)D	a	signedDistanceEllipse
	m	(Lbck;III)I	a	heightDependentRadiusRound
	m	(III)I	b	heightDependentRadiusEllipse
	m	(Lbck;III)I	b	heightDependentRadiusSteep
	m	(Leeb;)Z	c	isIcebergState
	m	(Ldly;Ljb;)Z	a	belowIsAir
	m	(Ldmv;Ljb;IIZI)V	a	smooth
c	env	net/minecraft/world/level/levelgen/feature/KelpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	enw	net/minecraft/world/level/levelgen/feature/LakeFeature
	f	Leeb;	a	AIR
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Leeb;)Z	c	canReplaceBlock
	m	()V	<clinit>	<clinit>
c	enw$a	net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration
	f	Lern;	b	fluid
	f	Lern;	c	barrier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lern;Lern;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lern;	a	fluid
	m	()Lern;	b	barrier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	enx	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ljb;ZLbck;ILbwm;Lbwm;)Lenx$a;	a	makeDripstone
	m	(Ldnt;Ljb;Lejq$b;Lenx$b;)V	a	placeDebugMarkers
c	enx$a	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone
	f	Ljb;	a	root
	f	Z	b	pointingUp
	f	I	c	radius
	f	D	d	bluntness
	f	D	e	scale
	m	(Ljb;ZIDD)V	<init>	<init>
	m	()I	a	getHeight
	m	()I	b	getMinY
	m	()I	c	getMaxY
	m	(Ldnt;Lenx$b;)Z	a	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary
	m	(F)I	a	getHeightAtRadius
	m	(Ldnt;Lbck;Lenx$b;)V	a	placeBlocks
	m	(Lepp;)Z	a	isSuitableForWind
c	enx$b	net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter
	f	I	a	originY
	f	Lfis;	b	windSpeed
	m	(ILbck;Lbwm;)V	<init>	<init>
	m	()V	<init>	<init>
	m	()Lenx$b;	a	noWind
	m	(Ljb;)Ljb;	a	offset
c	eny	net/minecraft/world/level/levelgen/feature/MonsterRoomFeature
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	[Lbzv;	b	MOBS
	f	Leeb;	c	AIR
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Lbck;)Lbzv;	a	randomEntityId
	m	()V	<clinit>	<clinit>
c	enz	net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;Leeb;Lepr;Lbck;Ljava/util/List;)Z	a	placeGrowthIfPossible
	m	(Leeb;)Z	c	isAirOrWater
c	eoa	net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eob	net/minecraft/world/level/levelgen/feature/NoOpFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoc	net/minecraft/world/level/levelgen/feature/OreFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Lbck;Lepu;DDDDDDIIIII)Z	a	doPlace
	m	(Leeb;Ljava/util/function/Function;Lbck;Lepu;Lepu$a;Ljb$a;)Z	a	canPlaceOre
	m	(Lbck;F)Z	a	shouldSkipAirCheck
c	eod	net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb;Lbck;)Ljava/util/Optional;	a	getTipDirection
	m	(Ldmv;Lbck;Ljb;Lepv;)V	a	createPatchOfDripstoneBlocks
c	eoe	net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eof	net/minecraft/world/level/levelgen/feature/RandomPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eog	net/minecraft/world/level/levelgen/feature/RandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoh	net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb$a;Ldpz;)Ljb;	a	findTarget
c	eoi	net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoj	net/minecraft/world/level/levelgen/feature/RootSystemFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Leqc;Ljb;)Z	a	spaceForTree
	m	(Leeb;II)Z	a	isAllowedTreeSpace
	m	(Ldnt;Lefz;Leqc;Lbck;Ljb$a;Ljb;)Z	a	placeDirtAndTree
	m	(Ljb;ILdnt;Leqc;Lbck;)V	a	placeDirt
	m	(Ldnt;Leqc;Lbck;IILjb$a;)V	a	placeRootedDirt
	m	(Ldnt;Leqc;Lbck;Ljb;Ljb$a;)V	a	placeRoots
	m	(Leqc;Leeb;)Z	a	lambda$placeRootedDirt$0
c	eok	net/minecraft/world/level/levelgen/feature/ScatteredOreFeature
	f	I	a	MAX_DIST_FROM_ORIGIN
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ljb$a;Lbck;Ljb;I)V	a	offsetTargetPos
	m	(Lbck;I)I	a	getRandomPlacementInOneAxisRelativeToOrigin
c	eol	net/minecraft/world/level/levelgen/feature/SculkPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb;)Z	a	canSpreadFrom
	m	(Ldmv;Ljb;)Z	b	lambda$canSpreadFrom$0
c	eom	net/minecraft/world/level/levelgen/feature/SeaPickleFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eon	net/minecraft/world/level/levelgen/feature/SeagrassFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoo	net/minecraft/world/level/levelgen/feature/SimpleBlockFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eop	net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoq	net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eor	net/minecraft/world/level/levelgen/feature/SpikeFeature
	f	I	a	NUMBER_OF_SPIKES
	f	I	b	SPIKE_DISTANCE
	f	Lcom/google/common/cache/LoadingCache;	c	SPIKE_CACHE
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldnt;)Ljava/util/List;	a	getSpikesForLevel
	m	(Lenj;)Z	a	place
	m	(Ldnl;Lbck;Leqg;Leor$a;)V	a	placeSpike
	m	()V	<clinit>	<clinit>
c	eor$a	net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	centerX
	f	I	c	centerZ
	f	I	d	radius
	f	I	e	height
	f	Z	f	guarded
	f	Lfin;	g	topBoundingBox
	m	(IIIIZ)V	<init>	<init>
	m	(Ljb;)Z	a	isCenterWithinChunk
	m	()I	a	getCenterX
	m	()I	b	getCenterZ
	m	()I	c	getRadius
	m	()I	d	getHeight
	m	()Z	e	isGuarded
	m	()Lfin;	f	getTopBoundingBox
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Leor$a;)Ljava/lang/Boolean;	a	lambda$static$4
	m	(Leor$a;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Leor$a;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Leor$a;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Leor$a;)Ljava/lang/Integer;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eor$b	net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader
	m	()V	<init>	<init>
	m	(Ljava/lang/Long;)Ljava/util/List;	a	load
	m	(Ljava/lang/Object;)Ljava/lang/Object;	load	load
c	eos	net/minecraft/world/level/levelgen/feature/SpringFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eot	net/minecraft/world/level/levelgen/feature/TreeFeature
	f	I	a	BLOCK_UPDATE_FLAGS
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldna;Ljb;)Z	b	isVine
	m	(Ldna;Ljb;)Z	c	isAirOrLeaves
	m	(Ldnc;Ljb;Leeb;)V	b	setBlockKnownShape
	m	(Ldna;Ljb;)Z	d	validTreePos
	m	(Ldnt;Lbck;Ljb;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Leqy$b;Leqi;)Z	a	doPlace
	m	(Ldna;ILjb;Leqi;)I	a	getMaxFreeTreeHeight
	m	(Ldnc;Ljb;Leeb;)V	a	setBlock
	m	(Lenj;)Z	a	place
	m	(Ldmv;Leuq;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lfjb;	a	updateLeaves
	m	(Lesi$a;)Ljava/util/List;	a	getLowestTrunkOrRootOfTree
	m	(Ldnt;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;Leuq;)Ljava/lang/Boolean;	a	lambda$place$9
	m	(Lesi$a;Lesi;)V	a	lambda$place$8
	m	(Ljava/util/Set;Ldnt;Ljb;Leeb;)V	a	lambda$place$7
	m	(Ljava/util/Set;Ldnt;Ljb;Leeb;)V	b	lambda$place$6
	m	(Ljava/util/Set;Ldnt;Ljb;Leeb;)V	c	lambda$place$5
	m	(Leqi;Ldnt;Leqy$b;Lbck;IIILeqy$a;)V	a	lambda$doPlace$4
	m	(Ljb;Lbck;Lerk;)Ljb;	a	lambda$doPlace$3
	m	(Leeb;)Z	c	lambda$validTreePos$2
	m	(Leeb;)Z	d	lambda$isAirOrLeaves$1
	m	(Leeb;)Z	e	lambda$isVine$0
c	eot$1	net/minecraft/world/level/levelgen/feature/TreeFeature$1
	f	Ljava/util/Set;	a	val$foliage
	f	Ldnt;	b	val$level
	m	(Leot;Ljava/util/Set;Ldnt;)V	<init>	<init>
	m	(Ljb;Leeb;)V	a	set
	m	(Ljb;)Z	a	isSet
c	eou	net/minecraft/world/level/levelgen/feature/TwistingVinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Ljb$a;)Z	a	findFirstAirBlockAboveGround
	m	(Ldmv;Lbck;Ljb$a;III)V	a	placeWeepingVinesColumn
	m	(Ldmv;Ljb;)Z	a	isInvalidPlacementLocation
c	eov	net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Ljb;Leqk;)Ljava/util/OptionalInt;	a	getFloorY
	m	(Ldnt;Ljb;)Z	b	isValidPlacement
	m	(Ldmv;Ljb;)Z	a	isWaterOrAir
	m	(Leeb;)Z	c	lambda$getFloorY$4
	m	(Leeb;)Z	d	lambda$getFloorY$3
	m	(Ldnt;Ljb;)I	c	lambda$place$2
	m	(Ldnt;Ljb;)Z	d	lambda$place$1
	m	(Lbck;Leqk;Ljb;)Z	a	lambda$place$0
c	eow	net/minecraft/world/level/levelgen/feature/VegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldnt;Leql;Lbck;Ljb;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
	m	(Lenj;Ldnt;Leql;Lbck;Ljava/util/Set;II)V	a	distributeVegetation
	m	(Ldnt;Leql;Lefz;Lbck;Ljb;)Z	a	placeVegetation
	m	(Ldnt;Leql;Ljava/util/function/Predicate;Lbck;Ljb$a;I)Z	a	placeGround
	m	(Leeb;)Z	c	lambda$placeGroundPatch$1
	m	(Leql;Leeb;)Z	a	lambda$place$0
c	eox	net/minecraft/world/level/levelgen/feature/VinesFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
c	eoy	net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature
	f	Ljb;	a	PLATFORM_OFFSET
	f	Ldlz;	b	PLATFORM_ORIGIN_CHUNK
	f	I	c	PLATFORM_RADIUS
	f	I	d	PLATFORM_RADIUS_CHUNKS
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(IIII)I	a	checkerboardDistance
	m	(Lenj;)Z	a	place
	m	()V	<clinit>	<clinit>
c	eoz	net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Ldnt;Leql;Lbck;Ljb;Ljava/util/function/Predicate;II)Ljava/util/Set;	a	placeGroundPatch
	m	(Ldnt;Ljava/util/Set;Ljb;Ljb$a;)Z	a	isExposed
	m	(Ldnt;Ljb;Ljb$a;Ljh;)Z	a	isExposedDirection
	m	(Ldnt;Leql;Lefz;Lbck;Ljb;)Z	a	placeVegetation
c	epa	net/minecraft/world/level/levelgen/feature/WeepingVinesFeature
	f	[Ljh;	a	DIRECTIONS
	m	(Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	(Lenj;)Z	a	place
	m	(Ldmv;Lbck;Ljb;)V	a	placeRoofNetherWart
	m	(Ldmv;Lbck;Ljb;)V	b	placeRoofWeepingVines
	m	(Ldmv;Lbck;Ljb$a;III)V	a	placeWeepingVinesColumn
	m	()V	<clinit>	<clinit>
c	epb	net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljl;	b	feature
	f	F	c	chance
	m	(Ljl;F)V	<init>	<init>
	m	(Ldnt;Lefz;Lbck;Ljb;)Z	a	place
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepb;)Ljava/lang/Float;	a	lambda$static$1
	m	(Lepb;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epc	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration
	f	Ljava/util/List;	b	layers
	f	Ljh;	c	direction
	f	Lelh;	d	allowedPlacement
	f	Z	e	prioritizeTip
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;Ljh;Lelh;Z)V	<init>	<init>
	m	(Lbwo;Lern;)Lepc$a;	a	layer
	m	(Lbwo;Lern;)Lepc;	b	simple
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	layers
	m	()Ljh;	b	direction
	m	()Lelh;	c	allowedPlacement
	m	()Z	d	prioritizeTip
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epc$a	net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer
	f	Lbwo;	b	height
	f	Lern;	c	state
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lbwo;Lern;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbwo;	a	height
	m	()Lern;	b	state
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epd	net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lern;	b	stateProvider
	m	(Lern;)V	<init>	<init>
	m	(Lepd;)Lern;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epe	net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leeb;	b	state
	m	(Leeb;)V	<init>	<init>
	m	(Lepe;)Leeb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epf	net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbwo;	b	reach
	f	Lbwo;	c	height
	m	(Lbwo;Lbwo;)V	<init>	<init>
	m	()Lbwo;	a	reach
	m	()Lbwo;	b	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepf;)Lbwo;	a	lambda$static$1
	m	(Lepf;)Lbwo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epg	net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbwo;	b	count
	m	(I)V	<init>	<init>
	m	(Lbwo;)V	<init>	<init>
	m	()Lbwo;	a	count
	m	()V	<clinit>	<clinit>
c	eph	net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leeb;	b	contents
	f	Leeb;	c	rim
	f	Lbwo;	d	size
	f	Lbwo;	e	rimSize
	m	(Leeb;Leeb;Lbwo;Lbwo;)V	<init>	<init>
	m	()Leeb;	a	contents
	m	()Leeb;	b	rim
	m	()Lbwo;	c	size
	m	()Lbwo;	d	rimSize
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Leph;)Lbwo;	a	lambda$static$3
	m	(Leph;)Lbwo;	b	lambda$static$2
	m	(Leph;)Leeb;	c	lambda$static$1
	m	(Leph;)Leeb;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epi	net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration
	f	Lerv;	b	stateProvider
	f	Lelh;	c	target
	f	Lbwo;	d	radius
	f	I	e	halfHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lerv;Lelh;Lbwo;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lerv;	a	stateProvider
	m	()Lelh;	b	target
	m	()Lbwo;	c	radius
	m	()I	d	halfHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epj	net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbwo;	c	height
	f	Lbwo;	d	radius
	f	I	e	maxStalagmiteStalactiteHeightDiff
	f	I	f	heightDeviation
	f	Lbwo;	g	dripstoneBlockLayerThickness
	f	Lbwm;	h	density
	f	Lbwm;	i	wetness
	f	F	j	chanceOfDripstoneColumnAtMaxDistanceFromCenter
	f	I	k	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn
	f	I	l	maxDistanceFromCenterAffectingHeightBias
	m	(ILbwo;Lbwo;IILbwo;Lbwm;Lbwm;FII)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$11
	m	(Lepj;)Ljava/lang/Integer;	a	lambda$static$10
	m	(Lepj;)Ljava/lang/Integer;	b	lambda$static$9
	m	(Lepj;)Ljava/lang/Float;	c	lambda$static$8
	m	(Lepj;)Lbwm;	d	lambda$static$7
	m	(Lepj;)Lbwm;	e	lambda$static$6
	m	(Lepj;)Lbwo;	f	lambda$static$5
	m	(Lepj;)Ljava/lang/Integer;	g	lambda$static$4
	m	(Lepj;)Ljava/lang/Integer;	h	lambda$static$3
	m	(Lepj;)Lbwo;	i	lambda$static$2
	m	(Lepj;)Lbwo;	j	lambda$static$1
	m	(Lepj;)Ljava/lang/Integer;	k	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epk	net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	b	exit
	f	Z	c	exact
	m	(Ljava/util/Optional;Z)V	<init>	<init>
	m	(Ljb;Z)Lepk;	a	knownExit
	m	()Lepk;	a	delayedExitSearch
	m	()Ljava/util/Optional;	b	getExit
	m	()Z	c	isExitExact
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepk;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lepk;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epl	net/minecraft/world/level/levelgen/feature/configurations/FallenTreeConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lern;	b	trunkProvider
	f	Lbwo;	c	logLength
	f	Ljava/util/List;	d	stumpDecorators
	f	Ljava/util/List;	e	logDecorators
	m	(Lern;Lbwo;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lepl;)Ljava/util/List;	a	lambda$static$3
	m	(Lepl;)Ljava/util/List;	b	lambda$static$2
	m	(Lepl;)Lbwo;	c	lambda$static$1
	m	(Lepl;)Lern;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epl$a	net/minecraft/world/level/levelgen/feature/configurations/FallenTreeConfiguration$FallenTreeConfigurationBuilder
	f	Lern;	a	trunkProvider
	f	Lbwo;	b	logLength
	f	Ljava/util/List;	c	stumpDecorators
	f	Ljava/util/List;	d	logDecorators
	m	(Lern;Lbwo;)V	<init>	<init>
	m	(Ljava/util/List;)Lepl$a;	a	stumpDecorators
	m	(Ljava/util/List;)Lepl$a;	b	logDecorators
	m	()Lepl;	a	build
c	epm	net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration
	f	Lept;	m	NONE
	m	()Ljava/util/stream/Stream;	e	getFeatures
	m	()V	<clinit>	<clinit>
c	epn	net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CHANCE_RANGE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lejx;	c	geodeBlockSettings
	f	Lejz;	d	geodeLayerSettings
	f	Lejy;	e	geodeCrackSettings
	f	D	f	usePotentialPlacementsChance
	f	D	g	useAlternateLayer0Chance
	f	Z	h	placementsRequireLayer0Alternate
	f	Lbwo;	i	outerWallDistance
	f	Lbwo;	j	distributionPoints
	f	Lbwo;	k	pointOffset
	f	I	l	minGenOffset
	f	I	n	maxGenOffset
	f	D	o	noiseMultiplier
	f	I	p	invalidBlocksThreshold
	m	(Lejx;Lejz;Lejy;DDZLbwo;Lbwo;Lbwo;IIDI)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
	m	(Lepn;)Ljava/lang/Integer;	a	lambda$static$12
	m	(Lepn;)Ljava/lang/Double;	b	lambda$static$11
	m	(Lepn;)Ljava/lang/Integer;	c	lambda$static$10
	m	(Lepn;)Ljava/lang/Integer;	d	lambda$static$9
	m	(Lepn;)Lbwo;	e	lambda$static$8
	m	(Lepn;)Lbwo;	f	lambda$static$7
	m	(Lepn;)Lbwo;	g	lambda$static$6
	m	(Lepn;)Ljava/lang/Boolean;	h	lambda$static$5
	m	(Lepn;)Ljava/lang/Double;	i	lambda$static$4
	m	(Lepn;)Ljava/lang/Double;	j	lambda$static$3
	m	(Lepn;)Lejy;	k	lambda$static$2
	m	(Lepn;)Lejz;	l	lambda$static$1
	m	(Lepn;)Lejx;	m	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epo	net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lern;	b	capProvider
	f	Lern;	c	stemProvider
	f	I	d	foliageRadius
	m	(Lern;Lern;I)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lepo;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lepo;)Lern;	b	lambda$static$1
	m	(Lepo;)Lern;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epp	net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorToCeilingSearchRange
	f	Lbwo;	c	columnRadius
	f	Lbwm;	d	heightScale
	f	F	e	maxColumnRadiusToCaveHeightRatio
	f	Lbwm;	f	stalactiteBluntness
	f	Lbwm;	g	stalagmiteBluntness
	f	Lbwm;	h	windSpeed
	f	I	i	minRadiusForWind
	f	F	j	minBluntnessForWind
	m	(ILbwo;Lbwm;FLbwm;Lbwm;Lbwm;IF)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$9
	m	(Lepp;)Ljava/lang/Float;	a	lambda$static$8
	m	(Lepp;)Ljava/lang/Integer;	b	lambda$static$7
	m	(Lepp;)Lbwm;	c	lambda$static$6
	m	(Lepp;)Lbwm;	d	lambda$static$5
	m	(Lepp;)Lbwm;	e	lambda$static$4
	m	(Lepp;)Ljava/lang/Float;	f	lambda$static$3
	m	(Lepp;)Lbwm;	g	lambda$static$2
	m	(Lepp;)Lbwo;	h	lambda$static$1
	m	(Lepp;)Ljava/lang/Integer;	i	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epq	net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	height
	f	Leeb;	c	state
	m	(ILeeb;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepq;)Leeb;	a	lambda$static$1
	m	(Lepq;)Ljava/lang/Integer;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epr	net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldvh;	b	placeBlock
	f	I	c	searchRange
	f	Z	d	canPlaceOnFloor
	f	Z	e	canPlaceOnCeiling
	f	Z	f	canPlaceOnWall
	f	F	g	chanceOfSpreading
	f	Ljp;	h	canBePlacedOn
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	i	validDirections
	m	(Ldpz;)Lcom/mojang/serialization/DataResult;	a	apply
	m	(Ldvh;IZZZFLjp;)V	<init>	<init>
	m	(Lbck;Ljh;)Ljava/util/List;	a	getShuffledDirectionsExcept
	m	(Lbck;)Ljava/util/List;	a	getShuffledDirections
	m	(Ljh;Ljh;)Z	a	lambda$getShuffledDirectionsExcept$9
	m	()Ljava/lang/String;	a	lambda$apply$8
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$7
	m	(Lepr;)Ljp;	a	lambda$static$6
	m	(Lepr;)Ljava/lang/Float;	b	lambda$static$5
	m	(Lepr;)Ljava/lang/Boolean;	c	lambda$static$4
	m	(Lepr;)Ljava/lang/Boolean;	d	lambda$static$3
	m	(Lepr;)Ljava/lang/Boolean;	e	lambda$static$2
	m	(Lepr;)Ljava/lang/Integer;	f	lambda$static$1
	m	(Lepr;)Ldvh;	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eps	net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	spreadWidth
	f	I	e	spreadHeight
	m	(Lern;II)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leps;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leps;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leps;)Lern;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ept	net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lept;	b	INSTANCE
	m	()V	<init>	<init>
	m	()Lept;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epu	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	f	I	c	size
	f	F	d	discardChanceOnAirExposure
	m	(Ljava/util/List;IF)V	<init>	<init>
	m	(Ljava/util/List;I)V	<init>	<init>
	m	(Leyu;Leeb;IF)V	<init>	<init>
	m	(Leyu;Leeb;I)V	<init>	<init>
	m	(Leyu;Leeb;)Lepu$a;	a	target
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lepu;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lepu;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Lepu;)Ljava/util/List;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epu$a	net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leyu;	b	target
	f	Leeb;	c	state
	m	(Leyu;Leeb;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepu$a;)Leeb;	a	lambda$static$1
	m	(Lepu$a;)Leyu;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epv	net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	F	b	chanceOfTallerDripstone
	f	F	c	chanceOfDirectionalSpread
	f	F	d	chanceOfSpreadRadius2
	f	F	e	chanceOfSpreadRadius3
	m	(FFFF)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lepv;)Ljava/lang/Float;	a	lambda$static$3
	m	(Lepv;)Ljava/lang/Float;	b	lambda$static$2
	m	(Lepv;)Ljava/lang/Float;	c	lambda$static$1
	m	(Lepv;)Ljava/lang/Float;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epw	net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	k	CODEC
	f	F	l	probability
	m	(F)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lepw;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epx	net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljl;	b	featureTrue
	f	Ljl;	c	featureFalse
	m	(Ljl;Ljl;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	e	getFeatures
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepx;)Ljl;	a	lambda$static$1
	m	(Lepx;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epy	net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	features
	f	Ljl;	c	defaultFeature
	m	(Ljava/util/List;Ljl;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	e	getFeatures
	m	(Lepb;)Ljava/util/stream/Stream;	a	lambda$getFeatures$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lepy;)Ljl;	a	lambda$static$1
	m	(Lepy;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	epz	net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration
	f	I	b	tries
	f	I	c	xzSpread
	f	I	d	ySpread
	f	Ljl;	e	feature
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(IIILjl;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	tries
	m	()I	b	xzSpread
	m	()I	c	ySpread
	m	()Ljl;	d	feature
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqa	net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	targetStates
	m	(Leeb;Leeb;)V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leqa;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqb	net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Leeb;	b	targetState
	f	Leeb;	c	replaceState
	f	Lbwo;	d	radius
	m	(Leeb;Leeb;Lbwo;)V	<init>	<init>
	m	()Lbwo;	a	radius
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leqb;)Lbwo;	a	lambda$static$2
	m	(Leqb;)Leeb;	b	lambda$static$1
	m	(Leqb;)Leeb;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqc	net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljl;	b	treeFeature
	f	I	c	requiredVerticalSpaceForTree
	f	I	d	rootRadius
	f	Lbae;	e	rootReplaceable
	f	Lern;	f	rootStateProvider
	f	I	g	rootPlacementAttempts
	f	I	h	rootColumnMaxHeight
	f	I	i	hangingRootRadius
	f	I	j	hangingRootsVerticalSpan
	f	Lern;	k	hangingRootStateProvider
	f	I	l	hangingRootPlacementAttempts
	f	I	n	allowedVerticalWaterForTree
	f	Lelh;	o	allowedTreePosition
	m	(Ljl;IILbae;Lern;IIIILern;IILelh;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$13
	m	(Leqc;)Lelh;	a	lambda$static$12
	m	(Leqc;)Ljava/lang/Integer;	b	lambda$static$11
	m	(Leqc;)Ljava/lang/Integer;	c	lambda$static$10
	m	(Leqc;)Lern;	d	lambda$static$9
	m	(Leqc;)Ljava/lang/Integer;	e	lambda$static$8
	m	(Leqc;)Ljava/lang/Integer;	f	lambda$static$7
	m	(Leqc;)Ljava/lang/Integer;	g	lambda$static$6
	m	(Leqc;)Ljava/lang/Integer;	h	lambda$static$5
	m	(Leqc;)Lern;	i	lambda$static$4
	m	(Leqc;)Lbae;	j	lambda$static$3
	m	(Leqc;)Ljava/lang/Integer;	k	lambda$static$2
	m	(Leqc;)Ljava/lang/Integer;	l	lambda$static$1
	m	(Leqc;)Ljl;	m	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqd	net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration
	f	I	b	chargeCount
	f	I	c	amountPerCharge
	f	I	d	spreadAttempts
	f	I	e	growthRounds
	f	I	f	spreadRounds
	f	Lbwo;	g	extraRareGrowths
	f	F	h	catalystChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(IIIIILbwo;F)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	chargeCount
	m	()I	b	amountPerCharge
	m	()I	c	spreadAttempts
	m	()I	d	growthRounds
	m	()I	f	spreadRounds
	m	()Lbwo;	g	extraRareGrowths
	m	()F	h	catalystChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqe	net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration
	f	Lern;	b	toPlace
	f	Z	c	scheduleTick
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lern;)V	<init>	<init>
	m	(Lern;Z)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lern;	a	toPlace
	m	()Z	b	scheduleTick
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leqe;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Leqe;)Lern;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqf	net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljp;	b	features
	m	(Ljp;)V	<init>	<init>
	m	()Ljava/util/stream/Stream;	e	getFeatures
	m	(Ljl;)Ljava/util/stream/Stream;	a	lambda$getFeatures$1
	m	(Leqf;)Ljp;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqg	net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	crystalInvulnerable
	f	Ljava/util/List;	c	spikes
	f	Ljb;	d	crystalBeamTarget
	m	(ZLjava/util/List;Ljb;)V	<init>	<init>
	m	(ZLjava/util/List;Ljava/util/Optional;)V	<init>	<init>
	m	()Z	a	isCrystalInvulnerable
	m	()Ljava/util/List;	b	getSpikes
	m	()Ljb;	c	getCrystalBeamTarget
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leqg;)Ljava/util/Optional;	a	lambda$static$2
	m	(Leqg;)Ljava/util/List;	b	lambda$static$1
	m	(Leqg;)Ljava/lang/Boolean;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqh	net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfal;	b	state
	f	Z	c	requiresBlockBelow
	f	I	d	rockCount
	f	I	e	holeCount
	f	Ljp;	f	validBlocks
	m	(Lfal;ZIILjp;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Leqh;)Ljp;	a	lambda$static$4
	m	(Leqh;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Leqh;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Leqh;)Ljava/lang/Boolean;	d	lambda$static$1
	m	(Leqh;)Lfal;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqi	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lern;	b	trunkProvider
	f	Lern;	c	dirtProvider
	f	Lesu;	d	trunkPlacer
	f	Lern;	e	foliageProvider
	f	Leqy;	f	foliagePlacer
	f	Ljava/util/Optional;	g	rootPlacer
	f	Leqn;	h	minimumSize
	f	Ljava/util/List;	i	decorators
	f	Z	j	ignoreVines
	f	Z	k	forceDirt
	m	(Lern;Lesu;Lern;Leqy;Ljava/util/Optional;Lern;Leqn;Ljava/util/List;ZZ)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Leqi;)Ljava/lang/Boolean;	a	lambda$static$9
	m	(Leqi;)Ljava/lang/Boolean;	b	lambda$static$8
	m	(Leqi;)Ljava/util/List;	c	lambda$static$7
	m	(Leqi;)Leqn;	d	lambda$static$6
	m	(Leqi;)Lern;	e	lambda$static$5
	m	(Leqi;)Ljava/util/Optional;	f	lambda$static$4
	m	(Leqi;)Leqy;	g	lambda$static$3
	m	(Leqi;)Lern;	h	lambda$static$2
	m	(Leqi;)Lesu;	i	lambda$static$1
	m	(Leqi;)Lern;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqi$a	net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder
	f	Lern;	a	trunkProvider
	f	Lesu;	c	trunkPlacer
	f	Lern;	b	foliageProvider
	f	Leqy;	d	foliagePlacer
	f	Ljava/util/Optional;	e	rootPlacer
	f	Lern;	f	dirtProvider
	f	Leqn;	g	minimumSize
	f	Ljava/util/List;	h	decorators
	f	Z	i	ignoreVines
	f	Z	j	forceDirt
	m	(Lern;Lesu;Lern;Leqy;Ljava/util/Optional;Leqn;)V	<init>	<init>
	m	(Lern;Lesu;Lern;Leqy;Leqn;)V	<init>	<init>
	m	(Lern;)Leqi$a;	a	dirt
	m	(Ljava/util/List;)Leqi$a;	a	decorators
	m	()Leqi$a;	a	ignoreVines
	m	()Leqi$a;	b	forceDirt
	m	()Leqi;	c	build
c	eqj	net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig
	f	I	b	spreadWidth
	f	I	c	spreadHeight
	f	I	d	maxHeight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(III)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	spreadWidth
	m	()I	b	spreadHeight
	m	()I	c	maxHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqk	net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	floorSearchRange
	f	I	c	placementRadiusAroundFloor
	f	F	d	placementProbabilityPerValidPosition
	m	(IIF)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leqk;)Ljava/lang/Float;	a	lambda$static$2
	m	(Leqk;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leqk;)Ljava/lang/Integer;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eql	net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbae;	b	replaceable
	f	Lern;	c	groundState
	f	Ljl;	d	vegetationFeature
	f	Lets;	e	surface
	f	Lbwo;	f	depth
	f	F	g	extraBottomBlockChance
	f	I	h	verticalRange
	f	F	i	vegetationChance
	f	Lbwo;	j	xzRadius
	f	F	k	extraEdgeColumnChance
	m	(Lbae;Lern;Ljl;Lets;Lbwo;FIFLbwo;F)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Leql;)Ljava/lang/Float;	a	lambda$static$9
	m	(Leql;)Lbwo;	b	lambda$static$8
	m	(Leql;)Ljava/lang/Float;	c	lambda$static$7
	m	(Leql;)Ljava/lang/Integer;	d	lambda$static$6
	m	(Leql;)Ljava/lang/Float;	e	lambda$static$5
	m	(Leql;)Lbwo;	f	lambda$static$4
	m	(Leql;)Lets;	g	lambda$static$3
	m	(Leql;)Ljl;	h	lambda$static$2
	m	(Leql;)Lern;	i	lambda$static$1
	m	(Leql;)Lbae;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqm	net/minecraft/world/level/levelgen/feature/configurations/package-info
c	eqn	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	b	MAX_WIDTH
	f	Ljava/util/OptionalInt;	c	minClippedHeight
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	minClippedHeightCodec
	m	(Ljava/util/OptionalInt;)V	<init>	<init>
	m	()Leqo;	b	type
	m	(II)I	a	getSizeAtHeight
	m	()Ljava/util/OptionalInt;	c	minClippedHeight
	m	(Leqn;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$2
	m	(Ljava/util/OptionalInt;)Ljava/util/Optional;	a	lambda$minClippedHeightCodec$1
	m	(Ljava/util/Optional;)Ljava/util/OptionalInt;	a	lambda$minClippedHeightCodec$0
	m	()V	<clinit>	<clinit>
c	eqo	net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType
	f	Leqo;	a	TWO_LAYERS_FEATURE_SIZE
	f	Leqo;	b	THREE_LAYERS_FEATURE_SIZE
	f	Lcom/mojang/serialization/MapCodec;	c	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leqo;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	eqp	net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	limit
	f	I	f	upperLimit
	f	I	g	lowerSize
	f	I	h	middleSize
	f	I	i	upperSize
	m	(IIIIILjava/util/OptionalInt;)V	<init>	<init>
	m	()Leqo;	b	type
	m	(II)I	a	getSizeAtHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Leqp;)Ljava/lang/Integer;	a	lambda$static$4
	m	(Leqp;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Leqp;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Leqp;)Ljava/lang/Integer;	d	lambda$static$1
	m	(Leqp;)Ljava/lang/Integer;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqq	net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	I	e	limit
	f	I	f	lowerSize
	f	I	g	upperSize
	m	(III)V	<init>	<init>
	m	(IIILjava/util/OptionalInt;)V	<init>	<init>
	m	()Leqo;	b	type
	m	(II)I	a	getSizeAtHeight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leqq;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leqq;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leqq;)Ljava/lang/Integer;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqr	net/minecraft/world/level/levelgen/feature/featuresize/package-info
c	eqs	net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqt	net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	height
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	blobParts
	m	(Lbwo;Lbwo;I)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Leqt;)Ljava/lang/Integer;	a	lambda$blobParts$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	equ	net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Lbwo;Lbwo;I)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqv	net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	height
	f	F	c	wideBottomLayerHoleChance
	f	F	g	cornerHoleChance
	f	F	h	hangingLeavesChance
	f	F	i	hangingLeavesExtensionChance
	m	(Lbwo;Lbwo;Lbwo;FFFF)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Leqv;)Ljava/lang/Float;	a	lambda$static$4
	m	(Leqv;)Ljava/lang/Float;	b	lambda$static$3
	m	(Leqv;)Ljava/lang/Float;	c	lambda$static$2
	m	(Leqv;)Ljava/lang/Float;	d	lambda$static$1
	m	(Leqv;)Lbwo;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqw	net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	b	shouldSkipLocationSigned
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqx	net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	m	(Lbwo;Lbwo;I)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eqy	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbwo;	e	radius
	f	Lbwo;	f	offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2;	b	foliagePlacerParts
	m	(Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;II)V	a	createFoliage
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;I)I	a	foliageRadius
	m	(Lbck;)I	a	offset
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lbck;IIIIZ)Z	b	shouldSkipLocationSigned
	m	(Ldna;Leqy$b;Lbck;Leqi;Ljb;IIZ)V	a	placeLeavesRow
	m	(Ldna;Leqy$b;Lbck;Leqi;Ljb;IIZFF)V	a	placeLeavesRowWithHangingLeavesBelow
	m	(Ldna;Leqy$b;Lbck;Leqi;FLjb;Ljb$a;)Z	a	tryPlaceExtension
	m	(Ldna;Leqy$b;Lbck;Leqi;Ljb;)Z	a	tryPlaceLeaf
	m	(Lfal;)Z	a	lambda$tryPlaceLeaf$3
	m	(Leeb;)Z	a	lambda$tryPlaceLeaf$2
	m	(Leqy;)Lbwo;	a	lambda$foliagePlacerParts$1
	m	(Leqy;)Lbwo;	b	lambda$foliagePlacerParts$0
	m	()V	<clinit>	<clinit>
c	eqy$a	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment
	f	Ljb;	a	pos
	f	I	b	radiusOffset
	f	Z	c	doubleTrunk
	m	(Ljb;IZ)V	<init>	<init>
	m	()Ljb;	a	pos
	m	()I	b	radiusOffset
	m	()Z	c	doubleTrunk
c	eqy$b	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter
	m	(Ljb;Leeb;)V	a	set
	m	(Ljb;)Z	a	isSet
c	eqz	net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType
	f	Leqz;	a	BLOB_FOLIAGE_PLACER
	f	Leqz;	b	SPRUCE_FOLIAGE_PLACER
	f	Leqz;	c	PINE_FOLIAGE_PLACER
	f	Leqz;	d	ACACIA_FOLIAGE_PLACER
	f	Leqz;	e	BUSH_FOLIAGE_PLACER
	f	Leqz;	f	FANCY_FOLIAGE_PLACER
	f	Leqz;	g	MEGA_JUNGLE_FOLIAGE_PLACER
	f	Leqz;	h	MEGA_PINE_FOLIAGE_PLACER
	f	Leqz;	i	DARK_OAK_FOLIAGE_PLACER
	f	Leqz;	j	RANDOM_SPREAD_FOLIAGE_PLACER
	f	Leqz;	k	CHERRY_FOLIAGE_PLACER
	f	Lcom/mojang/serialization/MapCodec;	l	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leqz;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	era	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	height
	m	(Lbwo;Lbwo;I)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lera;)Ljava/lang/Integer;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erb	net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	crownHeight
	m	(Lbwo;Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lerb;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erc	net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	height
	m	(Lbwo;Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;I)I	a	foliageRadius
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lerc;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erd	net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	foliageHeight
	f	I	c	leafPlacementAttempts
	m	(Lbwo;Lbwo;Lbwo;I)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lerd;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Lerd;)Lbwo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ere	net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	trunkHeight
	m	(Lbwo;Lbwo;Lbwo;)V	<init>	<init>
	m	()Leqz;	a	type
	m	(Ldna;Leqy$b;Lbck;Leqi;ILeqy$a;III)V	a	createFoliage
	m	(Lbck;ILeqi;)I	a	foliageHeight
	m	(Lbck;IIIIZ)Z	a	shouldSkipLocation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lere;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erf	net/minecraft/world/level/levelgen/feature/foliageplacers/package-info
c	erg	net/minecraft/world/level/levelgen/feature/package-info
c	erh	net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement
	f	Lern;	b	aboveRootProvider
	f	F	c	aboveRootPlacementChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lern;F)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lern;	a	aboveRootProvider
	m	()F	b	aboveRootPlacementChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lerh;)Ljava/lang/Float;	a	lambda$static$1
	m	(Lerh;)Lern;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eri	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement
	f	Ljp;	b	canGrowThrough
	f	Ljp;	c	muddyRootsIn
	f	Lern;	d	muddyRootsProvider
	f	I	e	maxRootWidth
	f	I	f	maxRootLength
	f	F	g	randomSkewChance
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljp;Ljp;Lern;IIF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	canGrowThrough
	m	()Ljp;	b	muddyRootsIn
	m	()Lern;	c	muddyRootsProvider
	m	()I	d	maxRootWidth
	m	()I	e	maxRootLength
	m	()F	f	randomSkewChance
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Leri;)Ljava/lang/Float;	a	lambda$static$5
	m	(Leri;)Ljava/lang/Integer;	b	lambda$static$4
	m	(Leri;)Ljava/lang/Integer;	c	lambda$static$3
	m	(Leri;)Lern;	d	lambda$static$2
	m	(Leri;)Ljp;	e	lambda$static$1
	m	(Leri;)Ljp;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erj	net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer
	f	I	a	ROOT_WIDTH_LIMIT
	f	I	b	ROOT_LENGTH_LIMIT
	f	Lcom/mojang/serialization/MapCodec;	c	CODEC
	f	Leri;	h	mangroveRootPlacement
	m	(Lbwo;Lern;Ljava/util/Optional;Leri;)V	<init>	<init>
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Ljb;Leqi;)Z	a	placeRoots
	m	(Ldna;Lbck;Ljb;Ljh;Ljb;Ljava/util/List;I)Z	a	simulateRoots
	m	(Ljb;Ljh;Lbck;Ljb;)Ljava/util/List;	a	potentialRootPositions
	m	(Ldna;Ljb;)Z	a	canPlaceRoot
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Leqi;)V	a	placeRoot
	m	()Lerl;	a	type
	m	(Leeb;)Z	a	lambda$placeRoot$3
	m	(Leeb;)Z	b	lambda$canPlaceRoot$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lerj;)Leri;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erk	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lbwo;	e	trunkOffsetY
	f	Lern;	f	rootProvider
	f	Ljava/util/Optional;	g	aboveRootPlacement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	rootPlacerParts
	m	(Lbwo;Lern;Ljava/util/Optional;)V	<init>	<init>
	m	()Lerl;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Ljb;Leqi;)Z	a	placeRoots
	m	(Ldna;Ljb;)Z	a	canPlaceRoot
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Leqi;)V	a	placeRoot
	m	(Ldna;Ljb;Leeb;)Leeb;	a	getPotentiallyWaterloggedState
	m	(Ljb;Lbck;)Ljb;	a	getTrunkOrigin
	m	(Lfal;)Z	a	lambda$getPotentiallyWaterloggedState$3
	m	(Lerk;)Ljava/util/Optional;	a	lambda$rootPlacerParts$2
	m	(Lerk;)Lern;	b	lambda$rootPlacerParts$1
	m	(Lerk;)Lbwo;	c	lambda$rootPlacerParts$0
	m	()V	<clinit>	<clinit>
c	erl	net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType
	f	Lerl;	a	MANGROVE_ROOT_PLACER
	f	Lcom/mojang/serialization/MapCodec;	b	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lerl;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	erm	net/minecraft/world/level/levelgen/feature/rootplacers/package-info
c	ern	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	()V	<init>	<init>
	m	(Leeb;)Lerw;	a	simple
	m	(Ldpz;)Lerw;	a	simple
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	()V	<clinit>	<clinit>
c	ero	net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType
	f	Lero;	a	SIMPLE_STATE_PROVIDER
	f	Lero;	b	WEIGHTED_STATE_PROVIDER
	f	Lero;	c	NOISE_THRESHOLD_PROVIDER
	f	Lero;	d	NOISE_PROVIDER
	f	Lero;	e	DUAL_NOISE_PROVIDER
	f	Lero;	f	ROTATED_BLOCK_PROVIDER
	f	Lero;	g	RANDOMIZED_INT_STATE_PROVIDER
	f	Lcom/mojang/serialization/MapCodec;	h	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lero;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	erp	net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lbbt;	i	variety
	f	Lezo$a;	j	slowNoiseParameters
	f	F	k	slowScale
	f	Lezo;	l	slowNoise
	m	(Lbbt;Lezo$a;FJLezo$a;FLjava/util/List;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Ljb;)D	a	getSlowNoiseValue
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$3
	m	(Lerp;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lerp;)Lezo$a;	b	lambda$static$1
	m	(Lerp;)Lbbt;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erq	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider
	f	J	c	seed
	f	Lezo$a;	d	parameters
	f	F	e	scale
	f	Lezo;	f	noise
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	noiseCodec
	m	(JLezo$a;F)V	<init>	<init>
	m	(Ljb;D)D	a	getNoiseValue
	m	(Lerq;)Ljava/lang/Float;	a	lambda$noiseCodec$2
	m	(Lerq;)Lezo$a;	b	lambda$noiseCodec$1
	m	(Lerq;)Ljava/lang/Long;	c	lambda$noiseCodec$0
c	err	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider
	f	Lcom/mojang/serialization/MapCodec;	g	CODEC
	f	Ljava/util/List;	h	states
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	noiseProviderCodec
	m	(JLezo$a;FLjava/util/List;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Ljava/util/List;Ljb;D)Leeb;	a	getRandomState
	m	(Ljava/util/List;D)Leeb;	a	getRandomState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	m	(Lerr;)Ljava/util/List;	a	lambda$noiseProviderCodec$0
	m	()V	<clinit>	<clinit>
c	ers	net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	F	g	threshold
	f	F	h	highChance
	f	Leeb;	i	defaultState
	f	Ljava/util/List;	j	lowStates
	f	Ljava/util/List;	k	highStates
	m	(JLezo$a;FFFLeeb;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Lers;)Ljava/util/List;	a	lambda$static$4
	m	(Lers;)Ljava/util/List;	b	lambda$static$3
	m	(Lers;)Leeb;	c	lambda$static$2
	m	(Lers;)Ljava/lang/Float;	d	lambda$static$1
	m	(Lers;)Ljava/lang/Float;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ert	net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lern;	c	source
	f	Ljava/lang/String;	d	propertyName
	f	Lefb;	e	property
	f	Lbwo;	f	values
	m	(Lern;Lefb;Lbwo;)V	<init>	<init>
	m	(Lern;Ljava/lang/String;Lbwo;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Leeb;Ljava/lang/String;)Lefb;	a	findProperty
	m	(Lefe;)Lefb;	a	lambda$findProperty$6
	m	(Lefe;)Z	b	lambda$findProperty$5
	m	(Ljava/lang/String;Lefe;)Z	a	lambda$findProperty$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lert;)Lbwo;	a	lambda$static$2
	m	(Lert;)Ljava/lang/String;	b	lambda$static$1
	m	(Lert;)Lern;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eru	net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ldpz;	c	block
	m	(Ldpz;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Leru;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erv	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider
	f	Lern;	b	fallback
	f	Ljava/util/List;	c	rules
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lern;Ljava/util/List;)V	<init>	<init>
	m	(Lern;)Lerv;	a	simple
	m	(Ldpz;)Lerv;	a	simple
	m	(Ldnt;Lbck;Ljb;)Leeb;	a	getState
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lern;	a	fallback
	m	()Ljava/util/List;	b	rules
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erv$a	net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule
	f	Lelh;	b	ifTrue
	f	Lern;	c	then
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lelh;Lern;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lelh;	a	ifTrue
	m	()Lern;	b	then
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erw	net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leeb;	c	state
	m	(Leeb;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	(Lerw;)Leeb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	erx	net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lbvt;	c	weightedList
	m	(Lbvt;)Lcom/mojang/serialization/DataResult;	a	create
	m	(Lbvt;)V	<init>	<init>
	m	(Lbvt$a;)V	<init>	<init>
	m	()Lero;	a	type
	m	(Lbck;Ljb;)Leeb;	a	getState
	m	()Ljava/lang/String;	b	lambda$create$1
	m	(Lerx;)Lbvt;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ery	net/minecraft/world/level/levelgen/feature/stateproviders/package-info
c	erz	net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lern;	b	provider
	m	(Lern;)V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lesi$a;Ljb;)V	a	placeCircle
	m	(Lesi$a;Ljb;)V	b	placeBlockAt
	m	(Lesi$a;Ljb;)V	c	lambda$place$2
	m	(ILjb;)Z	a	lambda$place$1
	m	(Lerz;)Lern;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esa	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	f	I	c	exclusionRadiusXZ
	f	I	d	exclusionRadiusY
	f	Lern;	e	blockProvider
	f	I	f	requiredEmptyBlocks
	f	Ljava/util/List;	g	directions
	m	(FIILern;ILjava/util/List;)V	<init>	<init>
	m	(Lesi$a;)V	a	place
	m	(Lesi$a;Ljb;Ljh;)Z	a	hasRequiredEmptyBlocks
	m	()Lesj;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lesa;)Ljava/util/List;	a	lambda$static$5
	m	(Lesa;)Ljava/lang/Integer;	b	lambda$static$4
	m	(Lesa;)Lern;	c	lambda$static$3
	m	(Lesa;)Ljava/lang/Integer;	d	lambda$static$2
	m	(Lesa;)Ljava/lang/Integer;	e	lambda$static$1
	m	(Lesa;)Ljava/lang/Float;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esb	net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLogsDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	f	Lern;	c	blockProvider
	f	Ljava/util/List;	d	directions
	m	(FLern;Ljava/util/List;)V	<init>	<init>
	m	(Lesi$a;)V	a	place
	m	()Lesj;	a	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lesb;)Ljava/util/List;	a	lambda$static$2
	m	(Lesb;)Lern;	b	lambda$static$1
	m	(Lesb;)Ljava/lang/Float;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esc	net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljh;	b	WORLDGEN_FACING
	f	[Ljh;	c	SPAWN_DIRECTIONS
	f	F	d	probability
	m	(F)V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lbck;Leaw;)V	a	lambda$place$6
	m	(Lesi$a;Ljb;)Z	a	lambda$place$5
	m	(Ljb;)Ljava/util/stream/Stream;	a	lambda$place$4
	m	(ILjb;)Z	a	lambda$place$3
	m	(I)[Ljh;	a	lambda$static$2
	m	(Ljh;)Z	a	lambda$static$1
	m	(Lesc;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esd	net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	m	(F)V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lbck;Lesi$a;Ljb;)V	a	lambda$place$2
	m	(ILjb;)Z	a	lambda$place$1
	m	(Lesd;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ese	net/minecraft/world/level/levelgen/feature/treedecorators/CreakingHeartDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	m	(F)V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lesi$a;Ljb;)Z	a	lambda$place$2
	m	(Leeb;)Z	a	lambda$place$1
	m	(Lese;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esf	net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	probability
	m	()Lesj;	a	type
	m	(F)V	<init>	<init>
	m	(Lesi$a;)V	a	place
	m	(Ljb;Lees;Lesi$a;)V	a	addHangingVine
	m	(Lbck;Lesi$a;Ljb;)V	a	lambda$place$1
	m	(Lesf;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esg	net/minecraft/world/level/levelgen/feature/treedecorators/PaleMossDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	leavesProbability
	f	F	c	trunkProbability
	f	F	d	groundProbability
	m	()Lesj;	a	type
	m	(FFF)V	<init>	<init>
	m	(Lesi$a;)V	a	place
	m	(Ljb;Lesi$a;)V	a	addMossHanger
	m	(Lbck;Lesi$a;Ljb;)V	a	lambda$place$8
	m	(Lbck;Lesi$a;Ljb;)V	b	lambda$place$7
	m	(Ldnt;Lbck;Ljb;Ljl$c;)V	a	lambda$place$6
	m	(Ljy;)Ljava/util/Optional;	a	lambda$place$5
	m	(Lorg/apache/commons/lang3/mutable/Mutable;Ljb;)V	a	lambda$place$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Lesg;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lesg;)Ljava/lang/Float;	b	lambda$static$1
	m	(Lesg;)Ljava/lang/Float;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esh	net/minecraft/world/level/levelgen/feature/treedecorators/PlaceOnGroundDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	tries
	f	I	c	radius
	f	I	d	height
	f	Lern;	e	blockStateProvider
	m	(IIILern;)V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lesi$a;Ljb;)V	a	attemptToPlaceBlockAbove
	m	(Leeb;)Z	a	lambda$attemptToPlaceBlockAbove$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lesh;)Lern;	a	lambda$static$3
	m	(Lesh;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Lesh;)Ljava/lang/Integer;	c	lambda$static$1
	m	(Lesh;)Ljava/lang/Integer;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esi	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	m	()V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	()V	<clinit>	<clinit>
c	esi$a	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context
	f	Ldna;	a	level
	f	Ljava/util/function/BiConsumer;	b	decorationSetter
	f	Lbck;	c	random
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	logs
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	leaves
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	roots
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)V	<init>	<init>
	m	(Ljb;Lees;)V	a	placeVine
	m	(Ljb;Leeb;)V	a	setBlock
	m	(Ljb;)Z	a	isAir
	m	(Ljb;Ljava/util/function/Predicate;)Z	a	checkBlock
	m	()Ldna;	a	level
	m	()Lbck;	b	random
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	c	logs
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	d	leaves
	m	()Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	e	roots
c	esj	net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType
	f	Lesj;	a	TRUNK_VINE
	f	Lesj;	b	LEAVE_VINE
	f	Lesj;	c	PALE_MOSS
	f	Lesj;	d	CREAKING_HEART
	f	Lesj;	e	COCOA
	f	Lesj;	f	BEEHIVE
	f	Lesj;	g	ALTER_GROUND
	f	Lesj;	h	ATTACHED_TO_LEAVES
	f	Lesj;	i	PLACE_ON_GROUND
	f	Lesj;	j	ATTACHED_TO_LOGS
	f	Lcom/mojang/serialization/MapCodec;	k	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lesj;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	esk	net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lesk;	b	INSTANCE
	m	()V	<init>	<init>
	m	()Lesj;	a	type
	m	(Lesi$a;)V	a	place
	m	(Lbck;Lesi$a;Ljb;)V	a	lambda$place$1
	m	()Lesk;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esl	net/minecraft/world/level/levelgen/feature/treedecorators/package-info
c	esm	net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	b	minHeightForLeaves
	f	Lbwo;	h	bendLength
	m	(IIIILbwo;)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lesm;)Lbwo;	a	lambda$static$1
	m	(Lesm;)Ljava/lang/Integer;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esn	net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer
	f	Lcom/mojang/serialization/Codec;	b	BRANCH_START_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	h	branchCount
	f	Lbwo;	i	branchHorizontalLength
	f	Lbwu;	j	branchStartOffsetFromTop
	f	Lbwu;	k	secondBranchStartOffsetFromTop
	f	Lbwo;	l	branchEndOffsetFromTop
	m	(IIILbwo;Lbwo;Lbwu;Lbwo;)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;Ljava/util/function/Function;Ljh;IZLjb$a;)Leqy$a;	a	generateBranch
	m	(Ljh;Leeb;)Leeb;	a	lambda$placeTrunk$7
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$6
	m	(Lesn;)Lbwo;	a	lambda$static$5
	m	(Lesn;)Lbwu;	b	lambda$static$4
	m	(Lesn;)Lbwo;	c	lambda$static$3
	m	(Lesn;)Lbwo;	d	lambda$static$2
	m	(Lbwu;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	()Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eso	net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esp	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	b	TRUNK_HEIGHT_SCALE
	f	D	h	CLUSTER_DENSITY_MAGIC
	f	D	i	BRANCH_SLOPE
	f	D	j	BRANCH_LENGTH_MAGIC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Ljb;ZLeqi;)Z	a	makeLimb
	m	(Ljb;)I	a	getSteps
	m	(Ljb;Ljb;)Ljh$a;	a	getLogAxis
	m	(II)Z	a	trimBranches
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Ljava/util/List;Leqi;)V	a	makeBranches
	m	(II)F	b	treeShape
	m	(Ljb;Ljb;Leeb;)Leeb;	a	lambda$makeLimb$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esp$a	net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords
	f	Leqy$a;	a	attachment
	f	I	b	branchBase
	m	(Ljb;I)V	<init>	<init>
	m	()I	a	getBranchBase
c	esq	net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esr	net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb$a;Leqi;Ljb;III)V	a	placeLogIfFreeWithOffset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ess	net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	est	net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esu	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	a	MAX_BASE_HEIGHT
	f	I	b	MAX_RAND
	f	I	d	MAX_HEIGHT
	f	I	e	baseHeight
	f	I	f	heightRandA
	f	I	g	heightRandB
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3;	a	trunkPlacerParts
	m	(III)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Lbck;)I	a	getTreeHeight
	m	(Ldna;Ljb;)Z	c	isDirt
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Leqi;)V	a	setDirtAt
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Leqi;)Z	b	placeLog
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb;Leqi;Ljava/util/function/Function;)Z	a	placeLog
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;Ljb$a;Leqi;)V	a	placeLogIfFree
	m	(Ldna;Ljb;)Z	a	validTreePos
	m	(Ldna;Ljb;)Z	b	isFree
	m	(Leeb;)Z	a	lambda$isFree$4
	m	(Leeb;)Z	b	lambda$isDirt$3
	m	(Lesu;)Ljava/lang/Integer;	a	lambda$trunkPlacerParts$2
	m	(Lesu;)Ljava/lang/Integer;	b	lambda$trunkPlacerParts$1
	m	(Lesu;)Ljava/lang/Integer;	c	lambda$trunkPlacerParts$0
	m	()V	<clinit>	<clinit>
c	esv	net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType
	f	Lesv;	a	STRAIGHT_TRUNK_PLACER
	f	Lesv;	b	FORKING_TRUNK_PLACER
	f	Lesv;	c	GIANT_TRUNK_PLACER
	f	Lesv;	d	MEGA_JUNGLE_TRUNK_PLACER
	f	Lesv;	e	DARK_OAK_TRUNK_PLACER
	f	Lesv;	f	FANCY_TRUNK_PLACER
	f	Lesv;	g	BENDING_TRUNK_PLACER
	f	Lesv;	h	UPWARDS_BRANCHING_TRUNK_PLACER
	f	Lesv;	i	CHERRY_TRUNK_PLACER
	f	Lcom/mojang/serialization/MapCodec;	j	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lesv;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()V	<clinit>	<clinit>
c	esw	net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	b	extraBranchSteps
	f	F	h	placeBranchPerLogProbability
	f	Lbwo;	i	extraBranchLength
	f	Ljp;	j	canGrowThrough
	m	(IIILbwo;FLbwo;Ljp;)V	<init>	<init>
	m	()Lesv;	a	type
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILjb;Leqi;)Ljava/util/List;	a	placeTrunk
	m	(Ldna;Ljava/util/function/BiConsumer;Lbck;ILeqi;Ljava/util/List;Ljb$a;ILjh;II)V	a	placeBranch
	m	(Ldna;Ljb;)Z	a	validTreePos
	m	(Leeb;)Z	a	lambda$validTreePos$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Lesw;)Ljp;	a	lambda$static$3
	m	(Lesw;)Lbwo;	b	lambda$static$2
	m	(Lesw;)Ljava/lang/Float;	c	lambda$static$1
	m	(Lesw;)Lbwo;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esx	net/minecraft/world/level/levelgen/feature/trunkplacers/package-info
c	esy	net/minecraft/world/level/levelgen/flat/FlatLayerInfo
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ldpz;	b	block
	f	I	c	height
	m	(ILdpz;)V	<init>	<init>
	m	()I	a	getHeight
	m	()Leeb;	b	getBlockState
	m	(I)Lesy;	a	heightLimited
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lesy;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	esz	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset
	f	Ljl;	c	displayItem
	f	Letb;	d	settings
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljl;Letb;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	displayItem
	m	()Letb;	b	settings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lesz;)Letb;	a	lambda$static$1
	m	(Lesz;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eta	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets
	f	Lamd;	a	CLASSIC_FLAT
	f	Lamd;	b	TUNNELERS_DREAM
	f	Lamd;	c	WATER_WORLD
	f	Lamd;	d	OVERWORLD
	f	Lamd;	e	SNOWY_KINGDOM
	f	Lamd;	f	BOTTOMLESS_PIT
	f	Lamd;	g	DESERT
	f	Lamd;	h	REDSTONE_READY
	f	Lamd;	i	THE_VOID
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	register
	m	()V	<clinit>	<clinit>
c	eta$a	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap
	f	Lqq;	a	context
	m	(Lqq;)V	<init>	<init>
	m	(Lamd;Ldmt;Lamd;Ljava/util/Set;ZZ[Lesy;)V	a	register
	m	()V	a	run
c	etb	net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Optional;	c	structureOverrides
	f	Ljava/util/List;	d	layersInfo
	f	Ljl;	e	biome
	f	Ljava/util/List;	f	layers
	f	Z	g	voidGen
	f	Z	h	decoration
	f	Z	i	addLakes
	f	Ljava/util/List;	j	lakes
	m	(Letb;)Lcom/mojang/serialization/DataResult;	a	validateHeight
	m	(Ljava/util/Optional;Ljava/util/List;ZZLjava/util/Optional;Ljl$c;Ljl;Ljl;)V	<init>	<init>
	m	(Ljava/util/Optional;Ljl;)Ljl;	a	getBiome
	m	(Ljava/util/Optional;Ljl;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;Ljava/util/Optional;Ljl;)Letb;	a	withBiomeAndLayers
	m	()V	a	setDecoration
	m	()V	b	setAddLakes
	m	(Ljl;)Ldny;	a	adjustGenerationSettings
	m	()Ljava/util/Optional;	c	structureOverrides
	m	()Ljl;	d	getBiome
	m	()Ljava/util/List;	e	getLayersInfo
	m	()Ljava/util/List;	f	getLayers
	m	()V	g	updateLayers
	m	(Ljm;Ljm;Ljm;)Letb;	a	getDefault
	m	(Ljm;)Ljl;	a	getDefaultBiome
	m	(Ljm;)Ljava/util/List;	b	createLakesList
	m	(Leeb;)Z	a	lambda$updateLayers$6
	m	()Ljava/lang/String;	h	lambda$validateHeight$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Letb;)Ljava/util/Optional;	b	lambda$static$3
	m	(Letb;)Ljava/lang/Boolean;	c	lambda$static$2
	m	(Letb;)Ljava/lang/Boolean;	d	lambda$static$1
	m	(Letb;)Ljava/util/Optional;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etc	net/minecraft/world/level/levelgen/flat/package-info
c	etd	net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leku;	d	minInclusive
	f	Leku;	e	maxInclusive
	f	I	f	inner
	m	(Leku;Leku;I)V	<init>	<init>
	m	(Leku;Leku;I)Letd;	a	of
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Letd;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Letd;)Leku;	b	lambda$static$1
	m	(Letd;)Leku;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ete	net/minecraft/world/level/levelgen/heightproviders/ConstantHeight
	f	Lete;	a	ZERO
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Leku;	d	value
	m	(Leku;)Lete;	a	of
	m	(Leku;)V	<init>	<init>
	m	()Leku;	b	getValue
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	etf	net/minecraft/world/level/levelgen/heightproviders/HeightProvider
	f	Lcom/mojang/serialization/Codec;	a	CONSTANT_OR_DISPATCH_CODEC
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	()V	<init>	<init>
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	(Letf;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$2
	m	(Lcom/mojang/datafixers/util/Either;)Letf;	a	lambda$static$1
	m	(Letf;)Letf;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etg	net/minecraft/world/level/levelgen/heightproviders/HeightProviderType
	f	Letg;	a	CONSTANT
	f	Letg;	b	UNIFORM
	f	Letg;	c	BIASED_TO_BOTTOM
	f	Letg;	d	VERY_BIASED_TO_BOTTOM
	f	Letg;	e	TRAPEZOID
	f	Letg;	f	WEIGHTED_LIST
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Letg;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	eth	net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leku;	d	minInclusive
	f	Leku;	e	maxInclusive
	f	I	f	plateau
	m	(Leku;Leku;I)V	<init>	<init>
	m	(Leku;Leku;I)Leth;	a	of
	m	(Leku;Leku;)Leth;	a	of
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leth;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leth;)Leku;	b	lambda$static$1
	m	(Leth;)Leku;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eti	net/minecraft/world/level/levelgen/heightproviders/UniformHeight
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leku;	d	minInclusive
	f	Leku;	e	maxInclusive
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	warnedFor
	m	(Leku;Leku;)V	<init>	<init>
	m	(Leku;Leku;)Leti;	a	of
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leti;)Leku;	a	lambda$static$1
	m	(Leti;)Leku;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etj	net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Leku;	d	minInclusive
	f	Leku;	e	maxInclusive
	f	I	f	inner
	m	(Leku;Leku;I)V	<init>	<init>
	m	(Leku;Leku;I)Letj;	a	of
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Letj;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Letj;)Leku;	b	lambda$static$1
	m	(Letj;)Leku;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etk	net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbvt;	b	distribution
	m	(Lbvt;)V	<init>	<init>
	m	(Lbck;Lekx;)I	a	sample
	m	()Letg;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Letk;)Lbvt;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etl	net/minecraft/world/level/levelgen/heightproviders/package-info
c	etm	net/minecraft/world/level/levelgen/material/MaterialRuleList
	f	[Leke$c;	a	materialRuleList
	m	([Leke$c;)V	<init>	<init>
	m	(Lejt$b;)Leeb;	calculate	calculate
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[Leke$c;	a	materialRuleList
c	etn	net/minecraft/world/level/levelgen/material/WorldGenMaterialRule
	m	(Leke;III)Leeb;	a	apply
c	eto	net/minecraft/world/level/levelgen/material/package-info
c	etp	net/minecraft/world/level/levelgen/package-info
c	etq	net/minecraft/world/level/levelgen/placement/BiomeFilter
	f	Letq;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	()Letq;	a	biome
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
	m	()Leug;	b	type
	m	()Ljava/lang/IllegalStateException;	c	lambda$shouldPlace$1
	m	()Letq;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etr	net/minecraft/world/level/levelgen/placement/BlockPredicateFilter
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lelh;	c	predicate
	m	(Lelh;)V	<init>	<init>
	m	(Lelh;)Letr;	a	forPredicate
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Letr;)Lelh;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ets	net/minecraft/world/level/levelgen/placement/CaveSurface
	f	Lets;	a	CEILING
	f	Lets;	b	FLOOR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljh;	d	direction
	f	I	e	y
	f	Ljava/lang/String;	f	id
	f	[Lets;	g	$VALUES
	m	()[Lets;	values	values
	m	(Ljava/lang/String;)Lets;	valueOf	valueOf
	m	(Ljava/lang/String;ILjh;ILjava/lang/String;)V	<init>	<init>
	m	()Ljh;	a	getDirection
	m	()I	b	getY
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lets;	d	$values
	m	()V	<clinit>	<clinit>
c	ett	net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	c	count
	m	(Lbwo;)V	<init>	<init>
	m	(Lbwo;)Lett;	a	of
	m	(I)Lett;	a	of
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	(Leud;IIII)I	a	findOnGroundYPosition
	m	(Leeb;)Z	a	isEmpty
	m	(Lett;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etu	net/minecraft/world/level/levelgen/placement/CountPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	c	count
	m	(Lbwo;)V	<init>	<init>
	m	(Lbwo;)Letu;	a	of
	m	(I)Letu;	a	of
	m	(Lbck;Ljb;)I	a	count
	m	()Leug;	b	type
	m	(Letu;)Lbwo;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etv	net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement
	f	Ljh;	c	directionOfSearch
	f	Lelh;	d	targetCondition
	f	Lelh;	e	allowedSearchCondition
	f	I	f	maxSteps
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljh;Lelh;Lelh;I)V	<init>	<init>
	m	(Ljh;Lelh;Lelh;I)Letv;	a	scanningFor
	m	(Ljh;Lelh;I)Letv;	a	scanningFor
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Letv;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Letv;)Lelh;	b	lambda$static$2
	m	(Letv;)Lelh;	c	lambda$static$1
	m	(Letv;)Ljh;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etw	net/minecraft/world/level/levelgen/placement/FixedPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	c	positions
	m	([Ljb;)Letw;	a	of
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	(IILjb;)Z	a	isSameChunk
	m	()Leug;	b	type
	m	(IILjb;)Z	b	lambda$getPositions$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Letw;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etx	net/minecraft/world/level/levelgen/placement/HeightRangePlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Letf;	c	height
	m	(Letf;)V	<init>	<init>
	m	(Letf;)Letx;	a	of
	m	(Leku;Leku;)Letx;	a	uniform
	m	(Leku;Leku;)Letx;	b	triangle
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Letx;)Letf;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ety	net/minecraft/world/level/levelgen/placement/HeightmapPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leka$a;	c	heightmap
	m	(Leka$a;)V	<init>	<init>
	m	(Leka$a;)Lety;	a	onHeightmap
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lety;)Leka$a;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	etz	net/minecraft/world/level/levelgen/placement/InSquarePlacement
	f	Letz;	c	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	()Letz;	a	spread
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	()Letz;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eua	net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	noiseToCountRatio
	f	D	d	noiseFactor
	f	D	e	noiseOffset
	m	(IDD)V	<init>	<init>
	m	(IDD)Leua;	a	of
	m	(Lbck;Ljb;)I	a	count
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leua;)Ljava/lang/Double;	a	lambda$static$2
	m	(Leua;)Ljava/lang/Double;	b	lambda$static$1
	m	(Leua;)Ljava/lang/Integer;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eub	net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	D	c	noiseLevel
	f	I	d	belowNoise
	f	I	e	aboveNoise
	m	(DII)V	<init>	<init>
	m	(DII)Leub;	a	of
	m	(Lbck;Ljb;)I	a	count
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leub;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leub;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leub;)Ljava/lang/Double;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euc	net/minecraft/world/level/levelgen/placement/PlacedFeature
	f	Ljl;	e	feature
	f	Ljava/util/List;	f	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	LIST_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_OF_LISTS_CODEC
	m	(Ljl;Ljava/util/List;)V	<init>	<init>
	m	(Ldnt;Lefz;Lbck;Ljb;)Z	a	place
	m	(Ldnt;Lefz;Lbck;Ljb;)Z	b	placeWithBiomeCheck
	m	(Leud;Lbck;Ljb;)Z	a	placeWithContext
	m	()Ljava/util/stream/Stream;	a	getFeatures
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	b	feature
	m	()Ljava/util/List;	c	placement
	m	(Lems;Leud;Lbck;Lorg/apache/commons/lang3/mutable/MutableBoolean;Ljb;)V	a	lambda$placeWithContext$4
	m	(Leuf;Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a	lambda$placeWithContext$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leuc;)Ljava/util/List;	a	lambda$static$1
	m	(Leuc;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eud	net/minecraft/world/level/levelgen/placement/PlacementContext
	f	Ldnt;	a	level
	f	Lefz;	b	generator
	f	Ljava/util/Optional;	c	topFeature
	m	(Ldnt;Lefz;Ljava/util/Optional;)V	<init>	<init>
	m	(Leka$a;II)I	a	getHeight
	m	(Ldlz;)Lefx;	a	getCarvingMask
	m	(Ljb;)Leeb;	a	getBlockState
	m	()I	c	getMinY
	m	()Ldnt;	d	getLevel
	m	()Ljava/util/Optional;	e	topFeature
	m	()Lefz;	f	generator
c	eue	net/minecraft/world/level/levelgen/placement/PlacementFilter
	m	()V	<init>	<init>
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
c	euf	net/minecraft/world/level/levelgen/placement/PlacementModifier
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	()V	<init>	<init>
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	()V	<clinit>	<clinit>
c	eug	net/minecraft/world/level/levelgen/placement/PlacementModifierType
	f	Leug;	a	BLOCK_PREDICATE_FILTER
	f	Leug;	b	RARITY_FILTER
	f	Leug;	c	SURFACE_RELATIVE_THRESHOLD_FILTER
	f	Leug;	d	SURFACE_WATER_DEPTH_FILTER
	f	Leug;	e	BIOME_FILTER
	f	Leug;	f	COUNT
	f	Leug;	g	NOISE_BASED_COUNT
	f	Leug;	h	NOISE_THRESHOLD_COUNT
	f	Leug;	i	COUNT_ON_EVERY_LAYER
	f	Leug;	j	ENVIRONMENT_SCAN
	f	Leug;	k	HEIGHTMAP
	f	Leug;	l	HEIGHT_RANGE
	f	Leug;	m	IN_SQUARE
	f	Leug;	n	RANDOM_OFFSET
	f	Leug;	o	FIXED_PLACEMENT
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leug;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	euh	net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbwo;	c	xzSpread
	f	Lbwo;	d	ySpread
	m	(Lbwo;Lbwo;)Leuh;	a	of
	m	(Lbwo;)Leuh;	a	vertical
	m	(Lbwo;)Leuh;	b	horizontal
	m	(Lbwo;Lbwo;)V	<init>	<init>
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leuh;)Lbwo;	a	lambda$static$1
	m	(Leuh;)Lbwo;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eui	net/minecraft/world/level/levelgen/placement/RarityFilter
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	chance
	m	(I)V	<init>	<init>
	m	(I)Leui;	a	onAverageOnceEvery
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
	m	()Leug;	b	type
	m	(Leui;)Ljava/lang/Integer;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euj	net/minecraft/world/level/levelgen/placement/RepeatingPlacement
	m	()V	<init>	<init>
	m	(Lbck;Ljb;)I	a	count
	m	(Leud;Lbck;Ljb;)Ljava/util/stream/Stream;	a_	getPositions
	m	(Ljb;I)Ljb;	a	lambda$getPositions$0
c	euk	net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leka$a;	c	heightmap
	f	I	d	minInclusive
	f	I	e	maxInclusive
	m	(Leka$a;II)V	<init>	<init>
	m	(Leka$a;II)Leuk;	a	of
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$3
	m	(Leuk;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Leuk;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Leuk;)Leka$a;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eul	net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	maxWaterDepth
	m	(I)V	<init>	<init>
	m	(I)Leul;	a	forMaxDepth
	m	(Leud;Lbck;Ljb;)Z	a	shouldPlace
	m	()Leug;	b	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leul;)Ljava/lang/Integer;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eum	net/minecraft/world/level/levelgen/placement/package-info
c	eun	net/minecraft/world/level/levelgen/presets/WorldPreset
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/Map;	c	dimensions
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()Lcom/google/common/collect/ImmutableMap;	c	dimensionsInOrder
	m	()Lekv;	a	createWorldDimensions
	m	()Ljava/util/Optional;	b	overworld
	m	(Leun;)Lcom/mojang/serialization/DataResult;	a	requireOverworld
	m	()Ljava/lang/String;	d	lambda$requireOverworld$3
	m	(Lcom/google/common/collect/ImmutableMap$Builder;Lamd;)V	a	lambda$dimensionsInOrder$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leun;)Ljava/util/Map;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euo	net/minecraft/world/level/levelgen/presets/WorldPresets
	f	Lamd;	a	NORMAL
	f	Lamd;	b	FLAT
	f	Lamd;	c	LARGE_BIOMES
	f	Lamd;	d	AMPLIFIED
	f	Lamd;	e	SINGLE_BIOME_SURFACE
	f	Lamd;	f	DEBUG
	m	()V	<init>	<init>
	m	(Lqq;)V	a	bootstrap
	m	(Ljava/lang/String;)Lamd;	a	register
	m	(Lekv;)Ljava/util/Optional;	a	fromSettings
	m	(Ljn$a;)Lekv;	a	createNormalWorldDimensions
	m	(Ljn$a;)Lehz;	b	getNormalOverworld
	m	(Ljn$a;)Lekv;	c	createFlatWorldDimensions
	m	(Lehz;)Ljava/util/Optional;	a	lambda$fromSettings$0
	m	()V	<clinit>	<clinit>
c	euo$a	net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap
	f	Lqq;	a	context
	f	Ljm;	b	noiseSettings
	f	Ljm;	c	biomes
	f	Ljm;	d	placedFeatures
	f	Ljm;	e	structureSets
	f	Ljm;	f	multiNoiseBiomeSourceParameterLists
	f	Ljl;	g	overworldDimensionType
	f	Lehz;	h	netherStem
	f	Lehz;	i	endStem
	m	(Lqq;)V	<init>	<init>
	m	(Lefz;)Lehz;	a	makeOverworld
	m	(Ldob;Ljl;)Lehz;	a	makeNoiseBasedOverworld
	m	(Lehz;)Leun;	a	createPresetWithCustomOverworld
	m	(Lamd;Lehz;)V	a	registerCustomOverworldPreset
	m	(Ldob;)V	a	registerOverworlds
	m	()V	a	bootstrap
c	eup	net/minecraft/world/level/levelgen/presets/package-info
c	euq	net/minecraft/world/level/levelgen/structure/BoundingBox
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	c	minX
	f	I	d	minY
	f	I	e	minZ
	f	I	f	maxX
	f	I	g	maxY
	f	I	h	maxZ
	m	(Ljb;)V	<init>	<init>
	m	(IIIIII)V	<init>	<init>
	m	(Lkg;Lkg;)Leuq;	a	fromCorners
	m	()Leuq;	a	infinite
	m	(IIIIIIIIILjh;)Leuq;	a	orientBox
	m	()Ljava/util/stream/Stream;	b	intersectingChunks
	m	(Leuq;)Z	a	intersects
	m	(IIII)Z	a	intersects
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	a	encapsulatingPositions
	m	(Ljava/lang/Iterable;)Ljava/util/Optional;	b	encapsulatingBoxes
	m	(Leuq;)Leuq;	b	encapsulate
	m	(Ljb;)Leuq;	a	encapsulate
	m	(III)Leuq;	a	move
	m	(Lkg;)Leuq;	a	move
	m	(III)Leuq;	b	moved
	m	(I)Leuq;	a	inflatedBy
	m	(III)Leuq;	c	inflatedBy
	m	(Lkg;)Z	b	isInside
	m	(III)Z	d	isInside
	m	()Lkg;	c	getLength
	m	()I	d	getXSpan
	m	()I	e	getYSpan
	m	()I	f	getZSpan
	m	()Ljb;	g	getCenter
	m	(Ljava/util/function/Consumer;)V	a	forAllCorners
	m	()Ljava/lang/String;	toString	toString
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()I	h	minX
	m	()I	i	minY
	m	()I	j	minZ
	m	()I	k	maxX
	m	()I	l	maxY
	m	()I	m	maxZ
	m	(Leuq;)Ljava/util/stream/IntStream;	c	lambda$static$2
	m	(Ljava/util/stream/IntStream;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	([I)Leuq;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euq$1	net/minecraft/world/level/levelgen/structure/BoundingBox$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	eur	net/minecraft/world/level/levelgen/structure/BuiltinStructureSets
	f	Lamd;	a	VILLAGES
	f	Lamd;	b	DESERT_PYRAMIDS
	f	Lamd;	c	IGLOOS
	f	Lamd;	d	JUNGLE_TEMPLES
	f	Lamd;	e	SWAMP_HUTS
	f	Lamd;	f	PILLAGER_OUTPOSTS
	f	Lamd;	g	OCEAN_MONUMENTS
	f	Lamd;	h	WOODLAND_MANSIONS
	f	Lamd;	i	BURIED_TREASURES
	f	Lamd;	j	MINESHAFTS
	f	Lamd;	k	RUINED_PORTALS
	f	Lamd;	l	SHIPWRECKS
	f	Lamd;	m	OCEAN_RUINS
	f	Lamd;	n	NETHER_COMPLEXES
	f	Lamd;	o	NETHER_FOSSILS
	f	Lamd;	p	END_CITIES
	f	Lamd;	q	ANCIENT_CITIES
	f	Lamd;	r	STRONGHOLDS
	f	Lamd;	s	TRAIL_RUINS
	f	Lamd;	t	TRIAL_CHAMBERS
	m	(Ljava/lang/String;)Lamd;	a	register
	m	()V	<clinit>	<clinit>
c	eus	net/minecraft/world/level/levelgen/structure/BuiltinStructures
	f	Lamd;	a	PILLAGER_OUTPOST
	f	Lamd;	b	MINESHAFT
	f	Lamd;	c	MINESHAFT_MESA
	f	Lamd;	d	WOODLAND_MANSION
	f	Lamd;	e	JUNGLE_TEMPLE
	f	Lamd;	f	DESERT_PYRAMID
	f	Lamd;	g	IGLOO
	f	Lamd;	h	SHIPWRECK
	f	Lamd;	i	SHIPWRECK_BEACHED
	f	Lamd;	j	SWAMP_HUT
	f	Lamd;	k	STRONGHOLD
	f	Lamd;	l	OCEAN_MONUMENT
	f	Lamd;	m	OCEAN_RUIN_COLD
	f	Lamd;	n	OCEAN_RUIN_WARM
	f	Lamd;	o	FORTRESS
	f	Lamd;	p	NETHER_FOSSIL
	f	Lamd;	q	END_CITY
	f	Lamd;	r	BURIED_TREASURE
	f	Lamd;	s	BASTION_REMNANT
	f	Lamd;	t	VILLAGE_PLAINS
	f	Lamd;	u	VILLAGE_DESERT
	f	Lamd;	v	VILLAGE_SAVANNA
	f	Lamd;	w	VILLAGE_SNOWY
	f	Lamd;	x	VILLAGE_TAIGA
	f	Lamd;	y	RUINED_PORTAL_STANDARD
	f	Lamd;	z	RUINED_PORTAL_DESERT
	f	Lamd;	A	RUINED_PORTAL_JUNGLE
	f	Lamd;	B	RUINED_PORTAL_SWAMP
	f	Lamd;	C	RUINED_PORTAL_MOUNTAIN
	f	Lamd;	D	RUINED_PORTAL_OCEAN
	f	Lamd;	E	RUINED_PORTAL_NETHER
	f	Lamd;	F	ANCIENT_CITY
	f	Lamd;	G	TRAIL_RUINS
	f	Lamd;	H	TRIAL_CHAMBERS
	m	(Ljava/lang/String;)Lamd;	a	createKey
	m	()V	<clinit>	<clinit>
c	eut	net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler
	f	Ljava/util/Map;	a	CURRENT_TO_LEGACY_MAP
	f	Ljava/util/Map;	b	LEGACY_TO_CURRENT_MAP
	f	Ljava/util/Set;	c	OLD_STRUCTURE_REGISTRY_KEYS
	f	Z	d	hasLegacyData
	f	Ljava/util/Map;	e	dataMap
	f	Ljava/util/Map;	f	indexMap
	f	Ljava/util/List;	g	legacyKeys
	f	Ljava/util/List;	h	currentKeys
	m	(Lfcm;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(J)V	a	removeIndex
	m	(Lui;)Lui;	a	updateFromLegacy
	m	(IILjava/lang/String;)Z	a	hasLegacyStart
	m	(II)Z	a	isUnhandledStructureStart
	m	(Lui;Ldlz;)Lui;	a	updateStructureStart
	m	(Lfcm;)V	a	populateCaches
	m	(Lamd;Lfcm;)Leut;	a	getLegacyStructureHandler
	m	(Levb;Ljava/lang/String;Lvi;)V	a	lambda$populateCaches$7
	m	(Ljava/lang/String;Lvi;)V	a	lambda$populateCaches$6
	m	(JLui;Ljava/lang/String;)V	a	lambda$populateCaches$5
	m	(Ljava/lang/String;)Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	lambda$populateCaches$4
	m	(Lui;Ljava/lang/String;)V	a	lambda$populateCaches$3
	m	(Lui;)Ljava/util/Optional;	b	lambda$populateCaches$2
	m	(Ljava/util/HashMap;)V	a	lambda$static$1
	m	(Ljava/util/HashMap;)V	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euu	net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece
	f	Lewg;	a	element
	f	Ljb;	b	position
	f	I	d	groundLevelDelta
	f	Ldwu;	c	rotation
	f	Ljava/util/List;	h	junctions
	f	Lezb;	i	structureTemplateManager
	f	Leyk;	j	liquidSettings
	m	(Lezb;Lewg;Ljb;ILdwu;Leuq;Leyk;)V	<init>	<init>
	m	(Levo;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ljb;Z)V	a	place
	m	(III)V	a	move
	m	()Ldwu;	a	getRotation
	m	()Ljava/lang/String;	toString	toString
	m	()Lewg;	b	getElement
	m	()Ljb;	c	getPosition
	m	()I	d	getGroundLevelDelta
	m	(Lewb;)V	a	addJunction
	m	()Ljava/util/List;	e	getJunctions
	m	(Lcom/mojang/serialization/DynamicOps;Lvi;)V	a	lambda$new$1
	m	()Ljava/lang/IllegalStateException;	l	lambda$new$0
c	euv	net/minecraft/world/level/levelgen/structure/PostPlacementProcessor
	f	Leuv;	a	NONE
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Levn;)V	afterPlace	afterPlace
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Levn;)V	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euw	net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece
	f	I	a	width
	f	I	b	height
	f	I	c	depth
	f	I	d	heightPosition
	m	(Levp;IIIIIILjh;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldmv;Leuq;I)Z	a	updateAverageGroundHeight
	m	(Ldmv;I)Z	a	updateHeightPositionToLowestGroundHeight
c	eux	net/minecraft/world/level/levelgen/structure/SinglePieceStructure
	f	Leux$a;	d	constructor
	f	I	e	width
	f	I	f	depth
	m	(Leux$a;IILeuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
c	eux$a	net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor
	m	(Lekz;II)Levc;	construct	construct
c	euy	net/minecraft/world/level/levelgen/structure/Structure
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Leuy$c;	c	settings
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder;	a	settingsCodec
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	simpleCodec
	m	(Leuy$c;)V	<init>	<init>
	m	()Ljp;	a	biomes
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Lejw$a;	c	step
	m	()Levj;	d	terrainAdaptation
	m	(Leuq;)Leuq;	a	adjustBoundingBox
	m	(Ljl;Lamd;Ljz;Lefz;Ldob;Leko;Lezb;JLdlz;ILdmw;Ljava/util/function/Predicate;)Levg;	a	generate
	m	(Leuy$a;Leka$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	onTopOfChunkCenter
	m	(Leuy$b;Leuy$a;)Z	a	isValidBiome
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Levn;)V	a	afterPlace
	m	(Leuy$a;IIII)[I	c	getCornerHeights
	m	(Leuy$a;IIII)I	a	getMeanFirstOccupiedHeight
	m	(Leuy$a;II)I	a	getLowestY
	m	(Leuy$a;IIII)I	b	getLowestY
	m	(Leuy$a;Ldwu;)Ljb;	a	getLowestYIn5by5BoxOffset7Blocks
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Leuy$a;)Ljava/util/Optional;	b	findValidGenerationPoint
	m	()Levh;	e	type
	m	(Leuy$a;Leuy$b;)Z	a	lambda$findValidGenerationPoint$2
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$simpleCodec$1
	m	(Leuy;)Leuy$c;	a	lambda$settingsCodec$0
	m	()V	<clinit>	<clinit>
c	euy$a	net/minecraft/world/level/levelgen/structure/Structure$GenerationContext
	f	Ljz;	a	registryAccess
	f	Lefz;	b	chunkGenerator
	f	Ldob;	c	biomeSource
	f	Leko;	d	randomState
	f	Lezb;	e	structureTemplateManager
	f	Lekz;	f	random
	f	J	g	seed
	f	Ldlz;	h	chunkPos
	f	Ldmw;	i	heightAccessor
	f	Ljava/util/function/Predicate;	j	validBiome
	m	(Ljz;Lefz;Ldob;Leko;Lezb;JLdlz;Ldmw;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljz;Lefz;Ldob;Leko;Lezb;Lekz;JLdlz;Ldmw;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(JLdlz;)Lekz;	a	makeRandom
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljz;	a	registryAccess
	m	()Lefz;	b	chunkGenerator
	m	()Ldob;	c	biomeSource
	m	()Leko;	d	randomState
	m	()Lezb;	e	structureTemplateManager
	m	()Lekz;	f	random
	m	()J	g	seed
	m	()Ldlz;	h	chunkPos
	m	()Ldmw;	i	heightAccessor
	m	()Ljava/util/function/Predicate;	j	validBiome
c	euy$b	net/minecraft/world/level/levelgen/structure/Structure$GenerationStub
	f	Ljb;	a	position
	f	Lcom/mojang/datafixers/util/Either;	b	generator
	m	(Ljb;Ljava/util/function/Consumer;)V	<init>	<init>
	m	(Ljb;Lcom/mojang/datafixers/util/Either;)V	<init>	<init>
	m	()Levq;	a	getPiecesBuilder
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	position
	m	()Lcom/mojang/datafixers/util/Either;	c	generator
	m	(Levq;)Levq;	a	lambda$getPiecesBuilder$1
	m	(Ljava/util/function/Consumer;)Levq;	a	lambda$getPiecesBuilder$0
c	euy$c	net/minecraft/world/level/levelgen/structure/Structure$StructureSettings
	f	Ljp;	b	biomes
	f	Ljava/util/Map;	c	spawnOverrides
	f	Lejw$a;	d	step
	f	Levj;	e	terrainAdaptation
	f	Leuy$c;	f	DEFAULT
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljp;)V	<init>	<init>
	m	(Ljp;Ljava/util/Map;Lejw$a;Levj;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljp;	a	biomes
	m	()Ljava/util/Map;	b	spawnOverrides
	m	()Lejw$a;	c	step
	m	()Levj;	d	terrainAdaptation
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	euy$c$a	net/minecraft/world/level/levelgen/structure/Structure$StructureSettings$Builder
	f	Ljp;	a	biomes
	f	Ljava/util/Map;	b	spawnOverrides
	f	Lejw$a;	c	step
	f	Levj;	d	terrainAdaption
	m	(Ljp;)V	<init>	<init>
	m	(Ljava/util/Map;)Leuy$c$a;	a	spawnOverrides
	m	(Lejw$a;)Leuy$c$a;	a	generationStep
	m	(Levj;)Leuy$c$a;	a	terrainAdapation
	m	()Leuy$c;	a	build
c	euz	net/minecraft/world/level/levelgen/structure/StructureCheck
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	NO_STRUCTURE
	f	Lehh;	c	storageAccess
	f	Ljz;	d	registryAccess
	f	Lezb;	e	structureTemplateManager
	f	Lamd;	f	dimension
	f	Lefz;	g	chunkGenerator
	f	Leko;	h	randomState
	f	Ldmw;	i	heightAccessor
	f	Ldob;	j	biomeSource
	f	J	k	seed
	f	Lcom/mojang/datafixers/DataFixer;	l	fixerUpper
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	loadedChunks
	f	Ljava/util/Map;	n	featureChecks
	m	(Lehh;Ljz;Lezb;Lamd;Lefz;Leko;Ldmw;Ldob;JLcom/mojang/datafixers/DataFixer;)V	<init>	<init>
	m	(Ldlz;Leuy;Levv;Z)Leva;	a	checkStart
	m	(Ldlz;Leuy;)Z	b	canCreateStructure
	m	(Ldlz;Leuy;ZJ)Leva;	a	tryLoadFromStorage
	m	(Lui;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	loadStructures
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	deduplicateEmptyMap
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Leuy;Z)Leva;	a	checkStructureInfo
	m	(Ldlz;Ljava/util/Map;)V	a	onStructureLoad
	m	(JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V	a	storeFullResults
	m	(Ldlz;Leuy;)V	a	incrementReference
	m	(Leuy;Ljava/lang/Long;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	a	lambda$incrementReference$8
	m	(Leuy;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$incrementReference$7
	m	(JLit/unimi/dsi/fastutil/longs/Long2BooleanMap;)V	a	lambda$storeFullResults$6
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Leuy;Levg;)V	a	lambda$onStructureLoad$5
	m	(Ljy;Lit/unimi/dsi/fastutil/objects/Object2IntMap;Ljava/lang/String;Lvi;)V	a	lambda$loadStructures$4
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Leuy;Lui;)V	a	lambda$loadStructures$3
	m	(Lui;)Ljava/util/Optional;	b	lambda$loadStructures$2
	m	(Ldlz;Leuy;J)Z	a	lambda$checkStart$1
	m	(Leuy;)Lit/unimi/dsi/fastutil/longs/Long2BooleanMap;	a	lambda$checkStart$0
	m	()V	<clinit>	<clinit>
c	eva	net/minecraft/world/level/levelgen/structure/StructureCheckResult
	f	Leva;	a	START_PRESENT
	f	Leva;	b	START_NOT_PRESENT
	f	Leva;	c	CHUNK_LOAD_NEEDED
	f	[Leva;	d	$VALUES
	m	()[Leva;	values	values
	m	(Ljava/lang/String;)Leva;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Leva;	a	$values
	m	()V	<clinit>	<clinit>
c	evb	net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	b	all
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	c	remaining
	f	Lcom/mojang/serialization/Codec;	d	LONG_SET
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;)Lfby;	a	type
	m	(Lit/unimi/dsi/fastutil/longs/LongSet;Lit/unimi/dsi/fastutil/longs/LongSet;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(J)V	a	addIndex
	m	(J)Z	b	hasStartIndex
	m	(J)Z	c	hasUnhandledIndex
	m	(J)V	d	removeIndex
	m	()Lit/unimi/dsi/fastutil/longs/LongSet;	a	getAll
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Levb;)Lit/unimi/dsi/fastutil/longs/LongSet;	a	lambda$static$1
	m	(Levb;)Lit/unimi/dsi/fastutil/longs/LongSet;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evc	net/minecraft/world/level/levelgen/structure/StructurePiece
	f	Leeb;	e	CAVE_AIR
	f	Leuq;	f	boundingBox
	f	Ljh;	a	orientation
	f	Ldvd;	b	mirror
	f	Ldwu;	c	rotation
	f	I	g	genDepth
	f	Levp;	d	type
	f	Ljava/util/Set;	h	SHAPE_CHECK_BLOCKS
	m	(Levp;ILeuq;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(IIILjh;III)Leuq;	a	makeBoundingBox
	m	(Lbck;)Ljh;	a	getRandomHorizontalDirection
	m	(Levo;)Lui;	a	createTag
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	()Leuq;	f	getBoundingBox
	m	()I	g	getGenDepth
	m	(I)V	a	setGenDepth
	m	(Ldlz;I)Z	a	isCloseToChunk
	m	()Ljb;	h	getLocatorPosition
	m	(III)Ljb$a;	b	getWorldPos
	m	(II)I	a	getWorldX
	m	(I)I	b	getWorldY
	m	(II)I	b	getWorldZ
	m	(Ldnt;Leeb;IIILeuq;)V	a	placeBlock
	m	(Ldmx;IIILeuq;)Z	a	canBeReplaced
	m	(Ldly;IIILeuq;)Leeb;	a	getBlock
	m	(Ldmx;IIILeuq;)Z	b	isInterior
	m	(Ldnt;Leuq;IIIIII)V	a	generateAirBox
	m	(Ldnt;Leuq;IIIIIILeeb;Leeb;Z)V	a	generateBox
	m	(Ldnt;Leuq;Leuq;Leeb;Leeb;Z)V	a	generateBox
	m	(Ldnt;Leuq;IIIIIIZLbck;Levc$a;)V	a	generateBox
	m	(Ldnt;Leuq;Leuq;ZLbck;Levc$a;)V	a	generateBox
	m	(Ldnt;Leuq;Lbck;FIIIIIILeeb;Leeb;ZZ)V	a	generateMaybeBox
	m	(Ldnt;Leuq;Lbck;FIIILeeb;)V	a	maybeGenerateBlock
	m	(Ldnt;Leuq;IIIIIILeeb;Z)V	a	generateUpperHalfSphere
	m	(Ldnt;Leeb;IIILeuq;)V	b	fillColumnDown
	m	(Leeb;)Z	a	isReplaceableByStructures
	m	(Ldnt;Leuq;Lbck;IIILamd;)Z	a	createChest
	m	(Ldly;Ljb;Leeb;)Leeb;	a	reorient
	m	(Ldnl;Leuq;Lbck;Ljb;Lamd;Leeb;)Z	a	createChest
	m	(Ldnt;Leuq;Lbck;IIILjh;Lamd;)Z	a	createDispenser
	m	(III)V	a	move
	m	(Ljava/util/stream/Stream;)Leuq;	a	createBoundingBox
	m	(Ljava/util/List;Leuq;)Levc;	a	findCollisionPiece
	m	()Ljh;	i	getOrientation
	m	(Ljh;)V	a	setOrientation
	m	()Ldwu;	a	getRotation
	m	()Ldvd;	j	getMirror
	m	()Levp;	k	getType
	m	()Ljava/lang/IllegalStateException;	b	lambda$createBoundingBox$0
	m	()V	<clinit>	<clinit>
c	evc$1	net/minecraft/world/level/levelgen/structure/StructurePiece$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	evc$a	net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector
	f	Leeb;	a	next
	m	()V	<init>	<init>
	m	(Lbck;IIIZ)V	a	next
	m	()Leeb;	a	getNext
c	evd	net/minecraft/world/level/levelgen/structure/StructurePieceAccessor
	m	(Levc;)V	a	addPiece
	m	(Leuq;)Levc;	a	findCollisionPiece
c	eve	net/minecraft/world/level/levelgen/structure/StructureSet
	f	Ljava/util/List;	c	structures
	f	Levv;	d	placement
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Ljl;Levv;)V	<init>	<init>
	m	(Ljava/util/List;Levv;)V	<init>	<init>
	m	(Ljl;I)Leve$a;	a	entry
	m	(Ljl;)Leve$a;	a	entry
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	structures
	m	()Levv;	b	placement
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eve$a	net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry
	f	Ljl;	b	structure
	f	I	c	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	structure
	m	()I	b	weight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evf	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride
	f	Levf$a;	b	boundingBox
	f	Lbvt;	c	spawns
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Levf$a;Lbvt;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Levf$a;	a	boundingBox
	m	()Lbvt;	b	spawns
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evf$a	net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType
	f	Levf$a;	a	PIECE
	f	Levf$a;	b	STRUCTURE
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Levf$a;	e	$VALUES
	m	()[Levf$a;	values	values
	m	(Ljava/lang/String;)Levf$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Levf$a;	a	$values
	m	()V	<clinit>	<clinit>
c	evg	net/minecraft/world/level/levelgen/structure/StructureStart
	f	Ljava/lang/String;	a	INVALID_START_ID
	f	Levg;	b	INVALID_START
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Leuy;	d	structure
	f	Levn;	e	pieceContainer
	f	Ldlz;	f	chunkPos
	f	I	g	references
	f	Leuq;	h	cachedBoundingBox
	m	(Leuy;Ldlz;ILevn;)V	<init>	<init>
	m	(Levo;Lui;J)Levg;	a	loadStaticStart
	m	()Leuq;	a	getBoundingBox
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;)V	a	placeInChunk
	m	(Levo;Ldlz;)Lui;	a	createTag
	m	()Z	b	isValid
	m	()Ldlz;	c	getChunkPos
	m	()Z	d	canBeReferenced
	m	()V	e	addReference
	m	()I	f	getReferences
	m	()I	g	getMaxReferences
	m	()Leuy;	h	getStructure
	m	()Ljava/util/List;	i	getPieces
	m	()V	<clinit>	<clinit>
c	evh	net/minecraft/world/level/levelgen/structure/StructureType
	f	Levh;	a	BURIED_TREASURE
	f	Levh;	b	DESERT_PYRAMID
	f	Levh;	c	END_CITY
	f	Levh;	d	FORTRESS
	f	Levh;	e	IGLOO
	f	Levh;	f	JIGSAW
	f	Levh;	g	JUNGLE_TEMPLE
	f	Levh;	h	MINESHAFT
	f	Levh;	i	NETHER_FOSSIL
	f	Levh;	j	OCEAN_MONUMENT
	f	Levh;	k	OCEAN_RUIN
	f	Levh;	l	RUINED_PORTAL
	f	Levh;	m	SHIPWRECK
	f	Levh;	n	STRONGHOLD
	f	Levh;	o	SWAMP_HUT
	f	Levh;	p	WOODLAND_MANSION
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Levh;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	evi	net/minecraft/world/level/levelgen/structure/TemplateStructurePiece
	f	Lorg/slf4j/Logger;	h	LOGGER
	f	Ljava/lang/String;	a	templateName
	f	Leza;	b	template
	f	Leyw;	c	placeSettings
	f	Ljb;	d	templatePosition
	m	(Levp;ILezb;Lame;Ljava/lang/String;Leyw;Ljb;)V	<init>	<init>
	m	(Levp;Lui;Lezb;Ljava/util/function/Function;)V	<init>	<init>
	m	()Lame;	b	makeTemplateLocation
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(III)V	a	move
	m	()Ldwu;	a	getRotation
	m	()Leza;	c	template
	m	()Ljb;	d	templatePosition
	m	()Leyw;	e	placeSettings
	m	()V	<clinit>	<clinit>
c	evj	net/minecraft/world/level/levelgen/structure/TerrainAdjustment
	f	Levj;	a	NONE
	f	Levj;	b	BURY
	f	Levj;	c	BEARD_THIN
	f	Levj;	d	BEARD_BOX
	f	Levj;	e	ENCAPSULATE
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljava/lang/String;	g	id
	f	[Levj;	h	$VALUES
	m	()[Levj;	values	values
	m	(Ljava/lang/String;)Levj;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Levj;	a	$values
	m	()V	<clinit>	<clinit>
c	evk	net/minecraft/world/level/levelgen/structure/package-info
c	evl	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator
	m	(Levq;Levl$a;)V	generatePieces	generatePieces
c	evl$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context
	f	Lepm;	a	config
	f	Lefz;	b	chunkGenerator
	f	Lezb;	c	structureTemplateManager
	f	Ldlz;	d	chunkPos
	f	Ldmw;	e	heightAccessor
	f	Lekz;	f	random
	f	J	g	seed
	m	(Lepm;Lefz;Lezb;Ldlz;Ldmw;Lekz;J)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lepm;	a	config
	m	()Lefz;	b	chunkGenerator
	m	()Lezb;	c	structureTemplateManager
	m	()Ldlz;	d	chunkPos
	m	()Ldmw;	e	heightAccessor
	m	()Lekz;	f	random
	m	()J	g	seed
c	evm	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier
	m	(Levm$a;)Ljava/util/Optional;	createGenerator	createGenerator
	m	(Ljava/util/function/Predicate;Levl;)Levm;	simple	simple
	m	(Leka$a;)Ljava/util/function/Predicate;	checkForBiomeOnTop	checkForBiomeOnTop
	m	(Leka$a;Levm$a;)Z	a	lambda$checkForBiomeOnTop$1
	m	(Ljava/util/function/Predicate;Ljava/util/Optional;Levm$a;)Ljava/util/Optional;	a	lambda$simple$0
c	evm$a	net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context
	f	Lefz;	a	chunkGenerator
	f	Ldob;	b	biomeSource
	f	Leko;	c	randomState
	f	J	d	seed
	f	Ldlz;	e	chunkPos
	f	Lepm;	f	config
	f	Ldmw;	g	heightAccessor
	f	Ljava/util/function/Predicate;	h	validBiome
	f	Lezb;	i	structureTemplateManager
	f	Ljz;	j	registryAccess
	m	(Lefz;Ldob;Leko;JLdlz;Lepm;Ldmw;Ljava/util/function/Predicate;Lezb;Ljz;)V	<init>	<init>
	m	(Leka$a;)Z	a	validBiomeOnTop
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lefz;	a	chunkGenerator
	m	()Ldob;	b	biomeSource
	m	()Leko;	c	randomState
	m	()J	d	seed
	m	()Ldlz;	e	chunkPos
	m	()Lepm;	f	config
	m	()Ldmw;	g	heightAccessor
	m	()Ljava/util/function/Predicate;	h	validBiome
	m	()Lezb;	i	structureTemplateManager
	m	()Ljz;	j	registryAccess
c	evn	net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer
	f	Ljava/util/List;	a	pieces
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lame;	c	JIGSAW_RENAME
	f	Ljava/util/Map;	d	RENAMES
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	(Ljb;)Z	a	isInsidePiece
	m	(Levo;)Lvi;	a	save
	m	(Luo;Levo;)Levn;	a	load
	m	()Leuq;	b	calculateBoundingBox
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	c	pieces
	m	()V	<clinit>	<clinit>
c	evo	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext
	f	Laxo;	a	resourceManager
	f	Ljz;	b	registryAccess
	f	Lezb;	c	structureTemplateManager
	m	(Laxo;Ljz;Lezb;)V	<init>	<init>
	m	(Laub;)Levo;	a	fromLevel
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laxo;	a	resourceManager
	m	()Ljz;	b	registryAccess
	m	()Lezb;	c	structureTemplateManager
c	evp	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType
	f	Levp;	a	MINE_SHAFT_CORRIDOR
	f	Levp;	b	MINE_SHAFT_CROSSING
	f	Levp;	c	MINE_SHAFT_ROOM
	f	Levp;	d	MINE_SHAFT_STAIRS
	f	Levp;	e	NETHER_FORTRESS_BRIDGE_CROSSING
	f	Levp;	f	NETHER_FORTRESS_BRIDGE_END_FILLER
	f	Levp;	g	NETHER_FORTRESS_BRIDGE_STRAIGHT
	f	Levp;	h	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS
	f	Levp;	i	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY
	f	Levp;	j	NETHER_FORTRESS_CASTLE_ENTRANCE
	f	Levp;	k	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING
	f	Levp;	l	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN
	f	Levp;	m	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR
	f	Levp;	n	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN
	f	Levp;	o	NETHER_FORTRESS_CASTLE_STALK_ROOM
	f	Levp;	p	NETHER_FORTRESS_MONSTER_THRONE
	f	Levp;	q	NETHER_FORTRESS_ROOM_CROSSING
	f	Levp;	r	NETHER_FORTRESS_STAIRS_ROOM
	f	Levp;	s	NETHER_FORTRESS_START
	f	Levp;	t	STRONGHOLD_CHEST_CORRIDOR
	f	Levp;	u	STRONGHOLD_FILLER_CORRIDOR
	f	Levp;	v	STRONGHOLD_FIVE_CROSSING
	f	Levp;	w	STRONGHOLD_LEFT_TURN
	f	Levp;	x	STRONGHOLD_LIBRARY
	f	Levp;	y	STRONGHOLD_PORTAL_ROOM
	f	Levp;	z	STRONGHOLD_PRISON_HALL
	f	Levp;	A	STRONGHOLD_RIGHT_TURN
	f	Levp;	B	STRONGHOLD_ROOM_CROSSING
	f	Levp;	C	STRONGHOLD_STAIRS_DOWN
	f	Levp;	D	STRONGHOLD_START
	f	Levp;	E	STRONGHOLD_STRAIGHT
	f	Levp;	F	STRONGHOLD_STRAIGHT_STAIRS_DOWN
	f	Levp;	G	JUNGLE_PYRAMID_PIECE
	f	Levp;	H	OCEAN_RUIN
	f	Levp;	I	IGLOO
	f	Levp;	J	RUINED_PORTAL
	f	Levp;	K	SWAMPLAND_HUT
	f	Levp;	L	DESERT_PYRAMID_PIECE
	f	Levp;	M	OCEAN_MONUMENT_BUILDING
	f	Levp;	N	OCEAN_MONUMENT_CORE_ROOM
	f	Levp;	O	OCEAN_MONUMENT_DOUBLE_X_ROOM
	f	Levp;	P	OCEAN_MONUMENT_DOUBLE_XY_ROOM
	f	Levp;	Q	OCEAN_MONUMENT_DOUBLE_Y_ROOM
	f	Levp;	R	OCEAN_MONUMENT_DOUBLE_YZ_ROOM
	f	Levp;	S	OCEAN_MONUMENT_DOUBLE_Z_ROOM
	f	Levp;	T	OCEAN_MONUMENT_ENTRY_ROOM
	f	Levp;	U	OCEAN_MONUMENT_PENTHOUSE
	f	Levp;	V	OCEAN_MONUMENT_SIMPLE_ROOM
	f	Levp;	W	OCEAN_MONUMENT_SIMPLE_TOP_ROOM
	f	Levp;	X	OCEAN_MONUMENT_WING_ROOM
	f	Levp;	Y	END_CITY_PIECE
	f	Levp;	Z	WOODLAND_MANSION_PIECE
	f	Levp;	aa	BURIED_TREASURE_PIECE
	f	Levp;	ab	SHIPWRECK_PIECE
	f	Levp;	ac	NETHER_FOSSIL
	f	Levp;	ad	JIGSAW
	m	(Levo;Lui;)Levc;	load	load
	m	(Levp;Ljava/lang/String;)Levp;	a	setFullContextPieceId
	m	(Levp$a;Ljava/lang/String;)Levp;	a	setPieceId
	m	(Levp$b;Ljava/lang/String;)Levp;	a	setTemplatePieceId
	m	()V	<clinit>	<clinit>
c	evp$a	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType
	m	(Lui;)Levc;	load	load
	m	(Levo;Lui;)Levc;	load	load
c	evp$b	net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType
	m	(Lezb;Lui;)Levc;	load	load
	m	(Levo;Lui;)Levc;	load	load
c	evq	net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder
	f	Ljava/util/List;	a	pieces
	m	()V	<init>	<init>
	m	(Levc;)V	a	addPiece
	m	(Leuq;)Levc;	a	findCollisionPiece
	m	(I)V	a	offsetPiecesVertically
	m	(IILbck;I)I	a	moveBelowSeaLevel
	m	(Lbck;II)V	a	moveInsideHeights
	m	()Levn;	a	build
	m	()V	b	clear
	m	()Z	c	isEmpty
	m	()Leuq;	d	getBoundingBox
c	evr	net/minecraft/world/level/levelgen/structure/pieces/package-info
c	evs	net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	distance
	f	I	d	spread
	f	I	e	count
	f	Ljp;	f	preferredBiomes
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9;	b	codec
	m	(Lkg;Levv$c;FILjava/util/Optional;IIILjp;)V	<init>	<init>
	m	(IIILjp;)V	<init>	<init>
	m	()I	a	distance
	m	()I	b	spread
	m	()I	c	count
	m	()Ljp;	d	preferredBiomes
	m	(Lega;II)Z	a	isPlacementChunk
	m	()Levw;	e	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evt	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	I	c	spacing
	f	I	d	separation
	f	Levu;	e	spreadType
	m	(Levt;)Lcom/mojang/serialization/DataResult;	a	validate
	m	(Lkg;Levv$c;FILjava/util/Optional;IILevu;)V	<init>	<init>
	m	(IILevu;I)V	<init>	<init>
	m	()I	a	spacing
	m	()I	b	separation
	m	()Levu;	c	spreadType
	m	(JII)Ldlz;	a	getPotentialStructureChunk
	m	(Lega;II)Z	a	isPlacementChunk
	m	()Levw;	e	type
	m	()Ljava/lang/String;	d	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evu	net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType
	f	Levu;	a	LINEAR
	f	Levu;	b	TRIANGULAR
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	id
	f	[Levu;	e	$VALUES
	m	()[Levu;	values	values
	m	(Ljava/lang/String;)Levu;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lbck;I)I	a	evaluate
	m	()[Levu;	a	$values
	m	()V	<clinit>	<clinit>
c	evv	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	I	a	HIGHLY_ARBITRARY_RANDOM_SALT
	f	Lkg;	c	locateOffset
	f	Levv$c;	d	frequencyReductionMethod
	f	F	e	frequency
	f	I	f	salt
	f	Ljava/util/Optional;	g	exclusionZone
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5;	a	placementCodec
	m	(Lkg;Levv$c;FILjava/util/Optional;)V	<init>	<init>
	m	()Lkg;	f	locateOffset
	m	()Levv$c;	g	frequencyReductionMethod
	m	()F	h	frequency
	m	()I	i	salt
	m	()Ljava/util/Optional;	j	exclusionZone
	m	(Lega;II)Z	b	isStructureChunk
	m	(IIJ)Z	a	applyAdditionalChunkRestrictions
	m	(Lega;II)Z	c	applyInteractionsWithOtherStructures
	m	(Lega;II)Z	a	isPlacementChunk
	m	(Ldlz;)Ljb;	a	getLocatePos
	m	()Levw;	e	type
	m	(JIIIF)Z	a	probabilityReducer
	m	(JIIIF)Z	b	legacyProbabilityReducerWithDouble
	m	(JIIIF)Z	c	legacyArbitrarySaltProbabilityReducer
	m	(JIIIF)Z	d	legacyPillagerOutpostReducer
	m	()V	<clinit>	<clinit>
c	evv$a	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone
	f	Ljl;	b	otherSet
	f	I	c	chunkCount
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;I)V	<init>	<init>
	m	(Lega;II)Z	a	isPlacementForbidden
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	otherSet
	m	()I	b	chunkCount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evv$b	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer
	m	(JIIIF)Z	shouldGenerate	shouldGenerate
c	evv$c	net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod
	f	Levv$c;	a	DEFAULT
	f	Levv$c;	b	LEGACY_TYPE_1
	f	Levv$c;	c	LEGACY_TYPE_2
	f	Levv$c;	d	LEGACY_TYPE_3
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Levv$b;	g	reducer
	f	[Levv$c;	h	$VALUES
	m	()[Levv$c;	values	values
	m	(Ljava/lang/String;)Levv$c;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Levv$b;)V	<init>	<init>
	m	(JIIIF)Z	a	shouldGenerate
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Levv$c;	a	$values
	m	()V	<clinit>	<clinit>
c	evw	net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType
	f	Levw;	a	RANDOM_SPREAD
	f	Levw;	b	CONCENTRIC_RINGS
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Levw;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	evx	net/minecraft/world/level/levelgen/structure/placement/package-info
c	evy	net/minecraft/world/level/levelgen/structure/pools/DimensionPadding
	f	I	c	bottom
	f	I	d	top
	f	Lcom/mojang/serialization/Codec;	e	RECORD_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Levy;	b	ZERO
	m	(I)V	<init>	<init>
	m	(II)V	<init>	<init>
	m	()Z	a	hasEqualTopAndBottom
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	bottom
	m	()I	c	top
	m	(Levy;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Levy;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Levy;)Ljava/lang/Integer;	b	lambda$static$1
	m	(Levy;)Ljava/lang/Integer;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	evz	net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Levz;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Lezb;Ldwu;)Lkg;	a	getSize
	m	(Lezb;Ljb;Ldwu;Lbck;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Lezb;Ljb;Ldwu;)Leuq;	a	getBoundingBox
	m	(Lezb;Ldnt;Ldnq;Lefz;Ljb;Ljb;Ldwu;Leuq;Lbck;Leyk;Z)Z	a	place
	m	()Lewh;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Levz;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewa	net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lame;	b	DEFAULT_JIGSAW_NAME
	f	Ljl;	c	feature
	f	Lui;	d	defaultJigsawNBT
	m	(Ljl;Lewi$a;)V	<init>	<init>
	m	()Lui;	b	fillDefaultJigsawNBT
	m	(Lezb;Ldwu;)Lkg;	a	getSize
	m	(Lezb;Ljb;Ldwu;Lbck;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Lezb;Ljb;Ldwu;)Leuq;	a	getBoundingBox
	m	(Lezb;Ldnt;Ldnq;Lefz;Ljb;Ljb;Ldwu;Leuq;Lbck;Leyk;Z)Z	a	place
	m	()Lewh;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lewa;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewb	net/minecraft/world/level/levelgen/structure/pools/JigsawJunction
	f	I	a	sourceX
	f	I	b	sourceGroundY
	f	I	c	sourceZ
	f	I	d	deltaY
	f	Lewi$a;	e	destProjection
	m	(IIIILewi$a;)V	<init>	<init>
	m	()I	a	getSourceX
	m	()I	b	getSourceGroundY
	m	()I	c	getSourceZ
	m	()I	d	getDeltaY
	m	()Lewi$a;	e	getDestProjection
	m	(Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic;	a	serialize
	m	(Lcom/mojang/serialization/Dynamic;)Lewb;	a	deserialize
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
c	ewc	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	I	b	UNSET_HEIGHT
	m	()V	<init>	<init>
	m	(Leuy$a;Ljl;Ljava/util/Optional;ILjb;ZLjava/util/Optional;ILewm;Levy;Leyk;)Ljava/util/Optional;	a	addPieces
	m	(Ldmw;Levy;Leuq;)Z	a	isStartTooCloseToWorldHeightLimits
	m	(Lewg;Lame;Ljb;Ldwu;Lezb;Lekz;)Ljava/util/Optional;	a	getRandomNamedJigsaw
	m	(Leko;IZLefz;Lezb;Ldmw;Lbck;Ljy;Leuu;Ljava/util/List;Lfjm;Lewm;Leyk;)V	a	addPieces
	m	(Laub;Ljl;Lame;ILjb;Z)Z	a	generateJigsaw
	m	(Ljl;)Z	a	lambda$generateJigsaw$3
	m	(Leuu;IIIILdmw;Levy;ILeuq;Leuy$a;ZLefz;Lezb;Lekz;Ljy;Lewm;Leyk;Levq;)V	a	lambda$addPieces$2
	m	(Lamd;)Ljava/lang/String;	a	lambda$addPieces$1
	m	(Ljy;Lewm;Lamd;)Ljava/util/Optional;	a	lambda$addPieces$0
	m	()V	<clinit>	<clinit>
c	ewc$a	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState
	f	Leuu;	a	piece
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	f	I	c	depth
	m	(Leuu;Lorg/apache/commons/lang3/mutable/MutableObject;I)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leuu;	a	piece
	m	()Lorg/apache/commons/lang3/mutable/MutableObject;	b	free
	m	()I	c	depth
c	ewc$b	net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer
	f	Ljy;	a	pools
	f	I	b	maxDepth
	f	Lefz;	c	chunkGenerator
	f	Lezb;	d	structureTemplateManager
	f	Ljava/util/List;	e	pieces
	f	Lbck;	f	random
	f	Lbco;	g	placing
	m	(Ljy;ILefz;Lezb;Ljava/util/List;Lbck;)V	<init>	<init>
	m	(Leuu;Lorg/apache/commons/lang3/mutable/MutableObject;IZLdmw;Leko;Lewm;Leyk;)V	a	tryPlacingChildren
	m	(Leuq;Lewm;Leza$a;)I	a	lambda$tryPlacingChildren$4
	m	(Ljl;)Ljava/lang/Integer;	a	lambda$tryPlacingChildren$3
	m	(Ljl;)Ljava/lang/Integer;	b	lambda$tryPlacingChildren$2
	m	(Ljl;)Ljl;	c	lambda$tryPlacingChildren$1
	m	(Lamd;)Ljava/lang/String;	a	lambda$tryPlacingChildren$0
c	ewd	net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lcom/mojang/datafixers/util/Either;Ljl;Lewi$a;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldwu;Leuq;Leyk;Z)Leyw;	a	getSettings
	m	()Lewh;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewe	net/minecraft/world/level/levelgen/structure/pools/ListPoolElement
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	elements
	m	(Ljava/util/List;Lewi$a;)V	<init>	<init>
	m	(Lezb;Ldwu;)Lkg;	a	getSize
	m	(Lezb;Ljb;Ldwu;Lbck;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Lezb;Ljb;Ldwu;)Leuq;	a	getBoundingBox
	m	(Lezb;Ldnt;Ldnq;Lefz;Ljb;Ljb;Ldwu;Leuq;Lbck;Leyk;Z)Z	a	place
	m	()Lewh;	a	getType
	m	(Lewi$a;)Lewg;	a	setProjection
	m	()Ljava/lang/String;	toString	toString
	m	(Lewi$a;)V	b	setProjectionOnEachElement
	m	()Ljava/util/List;	b	getElements
	m	(Lewi$a;Lewg;)V	a	lambda$setProjectionOnEachElement$5
	m	()Ljava/lang/IllegalStateException;	c	lambda$getBoundingBox$4
	m	(Lezb;Ljb;Ldwu;Lewg;)Leuq;	a	lambda$getBoundingBox$3
	m	(Lewg;)Z	a	lambda$getBoundingBox$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lewe;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewf	net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement
	f	Ljava/util/Comparator;	a	HIGHEST_SELECTION_PRIORITY_FIRST
	f	Lcom/mojang/serialization/Codec;	g	TEMPLATE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcom/mojang/datafixers/util/Either;	c	template
	f	Ljl;	d	processors
	f	Ljava/util/Optional;	e	overrideLiquidSettings
	m	(Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult;	a	encodeTemplate
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	b	processorsCodec
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	c	overrideLiquidSettingsCodec
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	d	templateCodec
	m	(Lcom/mojang/datafixers/util/Either;Ljl;Lewi$a;Ljava/util/Optional;)V	<init>	<init>
	m	(Lezb;Ldwu;)Lkg;	a	getSize
	m	(Lezb;)Leza;	a	getTemplate
	m	(Lezb;Ljb;Ldwu;Z)Ljava/util/List;	a	getDataMarkers
	m	(Lezb;Ljb;Ldwu;Lbck;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Ljava/util/List;)V	a	sortBySelectionPriority
	m	(Lezb;Ljb;Ldwu;)Leuq;	a	getBoundingBox
	m	(Lezb;Ldnt;Ldnq;Lefz;Ljb;Ljb;Ldwu;Leuq;Lbck;Leyk;Z)Z	a	place
	m	(Ldwu;Leuq;Leyk;Z)Leyw;	a	getSettings
	m	()Lewh;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()Lame;	e	getTemplateLocation
	m	(Lewf;)Lcom/mojang/datafixers/util/Either;	a	lambda$templateCodec$4
	m	(Lewf;)Ljava/util/Optional;	b	lambda$overrideLiquidSettingsCodec$3
	m	(Lewf;)Ljl;	c	lambda$processorsCodec$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	()Ljava/lang/String;	j	lambda$encodeTemplate$0
	m	()V	<clinit>	<clinit>
c	ewg	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	f	Ljl;	a	EMPTY
	f	Lewi$a;	b	projection
	m	()Lcom/mojang/serialization/codecs/RecordCodecBuilder;	f	projectionCodec
	m	(Lewi$a;)V	<init>	<init>
	m	(Lezb;Ldwu;)Lkg;	a	getSize
	m	(Lezb;Ljb;Ldwu;Lbck;)Ljava/util/List;	a	getShuffledJigsawBlocks
	m	(Lezb;Ljb;Ldwu;)Leuq;	a	getBoundingBox
	m	(Lezb;Ldnt;Ldnq;Lefz;Ljb;Ljb;Ldwu;Leuq;Lbck;Leyk;Z)Z	a	place
	m	()Lewh;	a	getType
	m	(Ldmv;Leza$d;Ljb;Ldwu;Lbck;Leuq;)V	a	handleDataMarker
	m	(Lewi$a;)Lewg;	a	setProjection
	m	()Lewi$a;	g	getProjection
	m	()I	h	getGroundLevelDelta
	m	()Ljava/util/function/Function;	i	empty
	m	(Ljava/lang/String;)Ljava/util/function/Function;	a	legacy
	m	(Ljava/lang/String;Ljl;)Ljava/util/function/Function;	a	legacy
	m	(Ljava/lang/String;)Ljava/util/function/Function;	b	single
	m	(Ljava/lang/String;Ljl;)Ljava/util/function/Function;	b	single
	m	(Ljava/lang/String;Leyk;)Ljava/util/function/Function;	a	single
	m	(Ljava/lang/String;Ljl;Leyk;)Ljava/util/function/Function;	a	single
	m	(Ljl;)Ljava/util/function/Function;	a	feature
	m	(Ljava/util/List;)Ljava/util/function/Function;	b	list
	m	(Ljava/util/List;Lewi$a;)Lewe;	a	lambda$list$9
	m	(Lewi$a;Ljava/util/function/Function;)Lewg;	a	lambda$list$8
	m	(Ljl;Lewi$a;)Lewa;	a	lambda$feature$7
	m	(Ljava/lang/String;Ljl;Leyk;Lewi$a;)Lewf;	a	lambda$single$6
	m	(Ljava/lang/String;Leyk;Lewi$a;)Lewf;	a	lambda$single$5
	m	(Ljava/lang/String;Ljl;Lewi$a;)Lewf;	a	lambda$single$4
	m	(Ljava/lang/String;Lewi$a;)Lewf;	a	lambda$single$3
	m	(Ljava/lang/String;Ljl;Lewi$a;)Lewd;	b	lambda$legacy$2
	m	(Ljava/lang/String;Lewi$a;)Lewd;	b	lambda$legacy$1
	m	(Lewi$a;)Levz;	b	lambda$empty$0
	m	()V	<clinit>	<clinit>
c	ewh	net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType
	f	Lewh;	a	SINGLE
	f	Lewh;	b	LIST
	f	Lewh;	c	FEATURE
	f	Lewh;	d	EMPTY
	f	Lewh;	e	LEGACY
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lewh;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	ewi	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool
	f	I	c	SIZE_UNSET
	f	Lorg/apache/commons/lang3/mutable/MutableObject;	d	CODEC_REFERENCE
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/util/List;	e	rawTemplates
	f	Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	f	templates
	f	Ljl;	g	fallback
	f	I	h	maxSize
	m	(Ljl;Ljava/util/List;)V	<init>	<init>
	m	(Ljl;Ljava/util/List;Lewi$a;)V	<init>	<init>
	m	(Lezb;)I	a	getMaxSize
	m	()Ljava/util/List;	a	getTemplates
	m	()Ljl;	b	getFallback
	m	(Lbck;)Lewg;	a	getRandomTemplate
	m	(Lbck;)Ljava/util/List;	b	getShuffledTemplates
	m	()I	c	size
	m	(Lezb;Lewg;)I	a	lambda$getMaxSize$3
	m	(Lewg;)Z	a	lambda$getMaxSize$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lewi;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewi$a	net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection
	f	Lewi$a;	a	TERRAIN_MATCHING
	f	Lewi$a;	b	RIGID
	f	Lbda$a;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	Lcom/google/common/collect/ImmutableList;	e	processors
	f	[Lewi$a;	f	$VALUES
	m	()[Lewi$a;	values	values
	m	(Ljava/lang/String;)Lewi$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/google/common/collect/ImmutableList;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	(Ljava/lang/String;)Lewi$a;	a	byName
	m	()Lcom/google/common/collect/ImmutableList;	b	getProcessors
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lewi$a;	d	$values
	m	()V	<clinit>	<clinit>
c	ewj	net/minecraft/world/level/levelgen/structure/pools/alias/DirectPoolAlias
	f	Lamd;	c	alias
	f	Lamd;	d	target
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lamd;Lamd;)V	<init>	<init>
	m	(Lbck;Ljava/util/function/BiConsumer;)V	a	forEachResolved
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	c	alias
	m	()Lamd;	d	target
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewk	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBinding
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(Lbck;Ljava/util/function/BiConsumer;)V	a	forEachResolved
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	(Ljava/lang/String;Ljava/lang/String;)Lewj;	a	direct
	m	(Lamd;Lamd;)Lewj;	a	direct
	m	(Ljava/lang/String;Lbvt;)Lewo;	a	random
	m	(Lamd;Lbvt;)Lewo;	a	random
	m	(Lbvt;)Lewn;	a	randomGroup
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	(Lbvt$a;Lbvs;)V	a	lambda$random$0
	m	()V	<clinit>	<clinit>
c	ewl	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasBindings
	m	()V	<init>	<init>
	m	(Ljy;)Lcom/mojang/serialization/MapCodec;	a	bootstrap
	m	(Lqq;Ljl;Ljava/util/List;)V	a	registerTargetsAsPools
	m	(Lqq;Ljl;Ljava/lang/String;)V	a	lambda$registerTargetsAsPools$1
	m	(Lamd;)Ljava/lang/String;	a	lambda$registerTargetsAsPools$0
c	ewm	net/minecraft/world/level/levelgen/structure/pools/alias/PoolAliasLookup
	f	Lewm;	a	EMPTY
	m	(Lamd;)Lamd;	lookup	lookup
	m	(Ljava/util/List;Ljb;J)Lewm;	create	create
	m	(Ljava/util/Map;Lamd;)Lamd;	a	lambda$create$3
	m	(Lamd;)Ljava/lang/String;	a	lambda$create$2
	m	(Lbck;Lcom/google/common/collect/ImmutableMap$Builder;Lewk;)V	a	lambda$create$1
	m	(Lamd;)Lamd;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewn	net/minecraft/world/level/levelgen/structure/pools/alias/RandomGroupPoolAlias
	f	Lbvt;	c	groups
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lbvt;)V	<init>	<init>
	m	(Lbck;Ljava/util/function/BiConsumer;)V	a	forEachResolved
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lbvt;	c	groups
	m	(Lbvs;)Ljava/util/stream/Stream;	a	lambda$allTargets$3
	m	(Lbck;Ljava/util/function/BiConsumer;Ljava/util/List;)V	a	lambda$forEachResolved$2
	m	(Lbck;Ljava/util/function/BiConsumer;Lewk;)V	a	lambda$forEachResolved$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewo	net/minecraft/world/level/levelgen/structure/pools/alias/RandomPoolAlias
	f	Lamd;	c	alias
	f	Lbvt;	d	targets
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lamd;Lbvt;)V	<init>	<init>
	m	(Lbck;Ljava/util/function/BiConsumer;)V	a	forEachResolved
	m	()Ljava/util/stream/Stream;	a	allTargets
	m	()Lcom/mojang/serialization/MapCodec;	b	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	c	alias
	m	()Lbvt;	d	targets
	m	(Ljava/util/function/BiConsumer;Lamd;)V	a	lambda$forEachResolved$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewp	net/minecraft/world/level/levelgen/structure/pools/alias/package-info
c	ewq	net/minecraft/world/level/levelgen/structure/pools/package-info
c	ewr	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces
	m	()V	<init>	<init>
c	ewr$a	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece
	m	(Ljb;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Leeb;)Z	b	isLiquid
c	ews	net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	ewt	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	[Z	j	hasPlacedChest
	f	Ljava/util/List;	k	potentialSuspiciousSandWorldPositions
	f	Ljb;	l	randomCollapsedRoofPos
	m	(Lbck;II)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnt;Leuq;)V	a	addCellar
	m	(Ljb;Ldnt;Leuq;)V	a	addCellarStairs
	m	(Ljb;Ldnt;Leuq;)V	b	addCellarRoom
	m	(III)V	c	placeSand
	m	(IIIIII)V	a	placeSandBox
	m	(Ldnt;IIILeuq;)V	a	placeCollapsedRoofPiece
	m	(Ldnt;Leuq;IIIII)V	a	placeCollapsedRoof
	m	()Ljava/util/List;	b	getPotentialSuspiciousSandWorldPositions
	m	()Ljb;	c	getRandomCollapsedRoofPos
c	ewu	net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Levn;)V	a	afterPlace
	m	(Leuq;Ldnt;Ljb;)V	a	placeSuspiciousSand
	m	()Levh;	e	type
	m	(Ljb;Lebe;)V	a	lambda$placeSuspiciousSand$0
	m	()V	<clinit>	<clinit>
c	ewv	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces
	f	I	a	MAX_GEN_DEPTH
	f	Lewv$b;	b	HOUSE_TOWER_GENERATOR
	f	Ljava/util/List;	c	TOWER_BRIDGES
	f	Lewv$b;	d	TOWER_GENERATOR
	f	Lewv$b;	e	TOWER_BRIDGE_GENERATOR
	f	Ljava/util/List;	f	FAT_TOWER_BRIDGES
	f	Lewv$b;	g	FAT_TOWER_GENERATOR
	m	()V	<init>	<init>
	m	(Lezb;Lewv$a;Ljb;Ljava/lang/String;Ldwu;Z)Lewv$a;	a	addPiece
	m	(Lezb;Ljb;Ldwu;Ljava/util/List;Lbck;)V	a	startHouseTower
	m	(Ljava/util/List;Lewv$a;)Lewv$a;	a	addHelper
	m	(Lezb;Lewv$b;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	recursiveChildren
	m	()V	<clinit>	<clinit>
c	ewv$1	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$1
	m	()V	<init>	<init>
	m	()V	a	init
	m	(Lezb;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	generate
c	ewv$2	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$2
	m	()V	<init>	<init>
	m	()V	a	init
	m	(Lezb;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	generate
c	ewv$3	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$3
	f	Z	a	shipCreated
	m	()V	<init>	<init>
	m	()V	a	init
	m	(Lezb;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	generate
c	ewv$4	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$4
	m	()V	<init>	<init>
	m	()V	a	init
	m	(Lezb;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	generate
c	ewv$a	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece
	m	(Lezb;Ljava/lang/String;Ljb;Ldwu;Z)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	(ZLdwu;)Leyw;	a	makeSettings
	m	()Lame;	b	makeTemplateLocation
	m	(Ljava/lang/String;)Lame;	a	makeResourceLocation
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Lui;Lame;)Leyw;	a	lambda$new$0
c	ewv$b	net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator
	m	()V	a	init
	m	(Lezb;ILewv$a;Ljb;Ljava/util/List;Lbck;)Z	a	generate
c	eww	net/minecraft/world/level/levelgen/structure/structures/EndCityStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Ljb;Ldwu;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Ljb;Ldwu;Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	ewx	net/minecraft/world/level/levelgen/structure/structures/IglooPieces
	f	I	a	GENERATION_HEIGHT
	f	Lame;	b	STRUCTURE_LOCATION_IGLOO
	f	Lame;	c	STRUCTURE_LOCATION_LADDER
	f	Lame;	d	STRUCTURE_LOCATION_LABORATORY
	f	Ljava/util/Map;	e	PIVOTS
	f	Ljava/util/Map;	f	OFFSETS
	m	()V	<init>	<init>
	m	(Lezb;Ljb;Ldwu;Levd;Lbck;)V	a	addPieces
	m	()V	<clinit>	<clinit>
c	ewx$a	net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece
	m	(Lezb;Lame;Ljb;Ldwu;I)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	(Ldwu;Lame;)Leyw;	a	makeSettings
	m	(Lame;Ljb;I)Ljb;	a	makePosition
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Lui;Lame;)Leyw;	a	lambda$new$0
c	ewy	net/minecraft/world/level/levelgen/structure/structures/IglooStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	ewz	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure
	f	Levy;	d	DEFAULT_DIMENSION_PADDING
	f	Leyk;	e	DEFAULT_LIQUID_SETTINGS
	f	I	f	MAX_TOTAL_STRUCTURE_RANGE
	f	I	g	MIN_DEPTH
	f	I	h	MAX_DEPTH
	f	Lcom/mojang/serialization/MapCodec;	i	CODEC
	f	Ljl;	j	startPool
	f	Ljava/util/Optional;	k	startJigsawName
	f	I	l	maxDepth
	f	Letf;	m	startHeight
	f	Z	n	useExpansionHack
	f	Ljava/util/Optional;	o	projectStartToHeightmap
	f	I	p	maxDistanceFromCenter
	f	Ljava/util/List;	q	poolAliases
	f	Levy;	r	dimensionPadding
	f	Leyk;	s	liquidSettings
	m	(Lewz;)Lcom/mojang/serialization/DataResult;	a	verifyRange
	m	(Leuy$c;Ljl;Ljava/util/Optional;ILetf;ZLjava/util/Optional;ILjava/util/List;Levy;Leyk;)V	<init>	<init>
	m	(Leuy$c;Ljl;ILetf;ZLeka$a;)V	<init>	<init>
	m	(Leuy$c;Ljl;ILetf;Z)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	()Levh;	e	type
	m	()Ljl;	f	getStartPool
	m	()Ljava/util/List;	g	getPoolAliases
	m	()Ljava/lang/String;	h	lambda$verifyRange$11
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$10
	m	(Lewz;)Leyk;	b	lambda$static$9
	m	(Lewz;)Levy;	c	lambda$static$8
	m	(Lewz;)Ljava/util/List;	d	lambda$static$7
	m	(Lewz;)Ljava/lang/Integer;	e	lambda$static$6
	m	(Lewz;)Ljava/util/Optional;	f	lambda$static$5
	m	(Lewz;)Ljava/lang/Boolean;	g	lambda$static$4
	m	(Lewz;)Letf;	h	lambda$static$3
	m	(Lewz;)Ljava/lang/Integer;	i	lambda$static$2
	m	(Lewz;)Ljava/util/Optional;	j	lambda$static$1
	m	(Lewz;)Ljl;	k	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ewz$1	net/minecraft/world/level/levelgen/structure/structures/JigsawStructure$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$TerrainAdjustment
	m	()V	<clinit>	<clinit>
c	exa	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece
	f	I	h	WIDTH
	f	I	i	DEPTH
	f	Z	j	placedMainChest
	f	Z	k	placedHiddenChest
	f	Z	l	placedTrap1
	f	Z	m	placedTrap2
	f	Lexa$a;	n	STONE_SELECTOR
	m	(Lbck;II)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	()V	<clinit>	<clinit>
c	exa$a	net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector
	m	()V	<init>	<init>
	m	(Lbck;IIIZ)V	a	next
c	exb	net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	()Levh;	e	type
	m	()V	<clinit>	<clinit>
c	exc	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces
	f	I	b	DEFAULT_SHAFT_WIDTH
	f	I	c	DEFAULT_SHAFT_HEIGHT
	f	I	d	DEFAULT_SHAFT_LENGTH
	f	I	e	MAX_PILLAR_HEIGHT
	f	I	f	MAX_CHAIN_HEIGHT
	f	I	g	MAX_DEPTH
	f	I	a	MAGIC_START_Y
	m	()V	<init>	<init>
	m	(Levd;Lbck;IIILjh;ILexd$a;)Lexc$c;	a	createRandomShaftPiece
	m	(Levc;Levd;Lbck;IIILjh;I)Lexc$c;	a	generateAndAddPiece
c	exc$1	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	exc$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor
	f	Z	b	hasRails
	f	Z	c	spiderCorridor
	f	Z	d	hasPlacedSpider
	f	I	h	numSections
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(ILbck;Leuq;Ljh;Lexd$a;)V	<init>	<init>
	m	(Levd;Lbck;IIILjh;)Leuq;	a	findCorridorSize
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Ldnt;Leuq;Lbck;IIILamd;)Z	a	createChest
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnt;Leuq;III)V	a	placeDoubleLowerOrUpperSupport
	m	(Ldnt;Leeb;IIILeuq;)V	b	fillColumnDown
	m	(Ldnt;Leeb;IIILeuq;)V	c	fillPillarDownOrChainUp
	m	(Ldnt;Leeb;Ljb$a;II)V	a	fillColumnBetween
	m	(Ldmx;Ljb;Leeb;)Z	a	canPlaceColumnOnTopOf
	m	(Ldmx;Ljb;Leeb;)Z	b	canHangChainBelow
	m	(Ldnt;Leuq;IIIIILbck;)V	a	placeSupport
	m	(Ldnt;Leuq;Lbck;FIII)V	a	maybePlaceCobWeb
	m	(Ldnt;Leuq;IIII)Z	a	hasSturdyNeighbours
c	exc$b	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing
	f	Ljh;	b	direction
	f	Z	c	isTwoFloored
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(ILeuq;Ljh;Lexd$a;)V	<init>	<init>
	m	(Levd;Lbck;IIILjh;)Leuq;	a	findCrossing
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnt;Leuq;IIII)V	a	placeSupportPillar
c	exc$c	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece
	f	Lexd$a;	a	type
	m	(Levp;ILexd$a;Leuq;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Ldmx;IIILeuq;)Z	a	canBeReplaced
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldly;Leuq;IIII)Z	a	isSupportingBox
	m	(Ldmv;Leuq;)Z	a	isInInvalidLocation
	m	(Ldnt;Leuq;Leeb;III)V	a	setPlanksBlock
c	exc$d	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom
	f	Ljava/util/List;	b	childEntranceBoxes
	m	(ILbck;IILexd$a;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(III)V	a	move
	m	(Levo;Lui;)V	a	addAdditionalSaveData
c	exc$e	net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs
	m	(ILeuq;Ljh;Lexd$a;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levd;Lbck;IIILjh;)Leuq;	a	findStairs
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exd	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lexd$a;	e	type
	m	(Leuy$c;Lexd$a;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)I	a	generatePiecesAndAdjust
	m	()Levh;	e	type
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lexd;)Lexd$a;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exd$a	net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type
	f	Lexd$a;	a	NORMAL
	f	Lexd$a;	b	MESA
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/util/function/IntFunction;	d	BY_ID
	f	Ljava/lang/String;	e	name
	f	Leeb;	f	woodState
	f	Leeb;	g	planksState
	f	Leeb;	h	fenceState
	f	[Lexd$a;	i	$VALUES
	m	()[Lexd$a;	values	values
	m	(Ljava/lang/String;)Lexd$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Ldpz;Ldpz;Ldpz;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	(I)Lexd$a;	a	byId
	m	()Leeb;	b	getWoodState
	m	()Leeb;	d	getPlanksState
	m	()Leeb;	e	getFenceState
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lexd$a;	f	$values
	m	()V	<clinit>	<clinit>
c	exe	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces
	f	I	b	MAX_DEPTH
	f	I	c	LOWEST_Y_POSITION
	f	I	a	MAGIC_START_Y
	f	[Lexe$n;	d	BRIDGE_PIECE_WEIGHTS
	f	[Lexe$n;	e	CASTLE_PIECE_WEIGHTS
	m	()V	<init>	<init>
	m	(Lexe$n;Levd;Lbck;IIILjh;I)Lexe$m;	a	findAndCreateBridgePieceFactory
	m	()V	<clinit>	<clinit>
c	exe$1	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	exe$a	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(IILjh;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$a;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$b	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	selfSeed
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levd;Lbck;IIILjh;I)Lexe$b;	a	createPiece
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$c	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexe$c;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$d	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$d;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$e	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$e;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$f	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexe$f;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$g	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$g;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$h	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexe$h;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$i	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$i;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$j	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isNeedingChest
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexe$j;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$k	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$k;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$l	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levd;IIIILjh;)Lexe$l;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$m	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece
	m	(Levp;ILeuq;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/util/List;)I	a	updatePieceWeight
	m	(Lexe$q;Ljava/util/List;Levd;Lbck;IIILjh;I)Lexe$m;	a	generatePiece
	m	(Lexe$q;Levd;Lbck;IIILjh;IZ)Levc;	a	generateAndAddPiece
	m	(Lexe$q;Levd;Lbck;IIZ)Levc;	a	generateChildForward
	m	(Lexe$q;Levd;Lbck;IIZ)Levc;	b	generateChildLeft
	m	(Lexe$q;Levd;Lbck;IIZ)Levc;	c	generateChildRight
	m	(Leuq;)Z	a	isOkBox
c	exe$n	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	f	Z	e	allowInRow
	m	(Ljava/lang/Class;IIZ)V	<init>	<init>
	m	(Ljava/lang/Class;II)V	<init>	<init>
	m	(I)Z	a	doPlace
	m	()Z	a	isValid
c	exe$o	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexe$o;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$p	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIIILjh;)Lexe$p;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exe$q	net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece
	f	Lexe$n;	a	previousPiece
	f	Ljava/util/List;	b	availableBridgePieces
	f	Ljava/util/List;	c	availableCastlePieces
	f	Ljava/util/List;	d	pendingChildren
	m	(Lbck;II)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
c	exf	net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure
	f	Lbvt;	d	FORTRESS_ENEMIES
	f	Lcom/mojang/serialization/MapCodec;	e	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	exg	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces
	f	[Lame;	a	FOSSILS
	m	()V	<init>	<init>
	m	(Lezb;Levd;Lbck;Ljb;)V	a	addPieces
	m	()V	<clinit>	<clinit>
c	exg$a	net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece
	m	(Lezb;Lame;Ljb;Ldwu;)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	(Ldwu;)Leyw;	a	makeSettings
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnt;Lbck;Leuq;Leuq;)V	a	placeDriedGhast
	m	(Lui;Lame;)Leyw;	a	lambda$new$0
c	exh	net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Letf;	e	height
	m	(Leuy$c;Letf;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	()Levh;	e	type
	m	(Leuy$a;Lekz;Ljb;Levq;)V	a	lambda$findGenerationPoint$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lexh;)Letf;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exi	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces
	m	()V	<init>	<init>
c	exi$1	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	exi$a	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$b	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$c	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$d	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$e	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$f	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$g	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom
	m	()V	<init>	<init>
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$h	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding
	f	I	C	WIDTH
	f	I	D	HEIGHT
	f	I	E	DEPTH
	f	I	a	BIOME_RANGE_CHECK
	f	I	F	TOP_POSITION
	f	Lexi$v;	G	sourceRoom
	f	Lexi$v;	H	coreRoom
	f	Ljava/util/List;	I	childPieces
	m	(Lbck;IILjh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Lbck;)Ljava/util/List;	b	generateRoomGraph
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(ZILdnt;Lbck;Leuq;)V	a	generateWing
	m	(Ldnt;Lbck;Leuq;)V	a	generateEntranceArchs
	m	(Ldnt;Lbck;Leuq;)V	b	generateEntranceWall
	m	(Ldnt;Lbck;Leuq;)V	c	generateRoofPiece
	m	(Ldnt;Lbck;Leuq;)V	d	generateLowerWall
	m	(Ldnt;Lbck;Leuq;)V	e	generateMiddleWall
	m	(Ldnt;Lbck;Leuq;)V	f	generateUpperWall
c	exi$i	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter
	m	(Lexi$v;)Z	a	fits
	m	(Ljh;Lexi$v;Lbck;)Lexi$r;	a	create
c	exi$j	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$k	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$l	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$m	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$n	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$o	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$p	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$q	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse
	m	(Ljh;Leuq;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$r	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece
	f	Leeb;	b	BASE_GRAY
	f	Leeb;	c	BASE_LIGHT
	f	Leeb;	d	BASE_BLACK
	f	Leeb;	h	DOT_DECO_DATA
	f	Leeb;	i	LAMP_BLOCK
	f	Z	j	DO_FILL
	f	Leeb;	k	FILL_BLOCK
	f	Ljava/util/Set;	l	FILL_KEEP
	f	I	m	GRIDROOM_WIDTH
	f	I	n	GRIDROOM_DEPTH
	f	I	o	GRIDROOM_HEIGHT
	f	I	p	GRID_WIDTH
	f	I	q	GRID_DEPTH
	f	I	r	GRID_HEIGHT
	f	I	s	GRID_FLOOR_COUNT
	f	I	t	GRID_SIZE
	f	I	u	GRIDROOM_SOURCE_INDEX
	f	I	v	GRIDROOM_TOP_CONNECT_INDEX
	f	I	w	GRIDROOM_LEFTWING_CONNECT_INDEX
	f	I	x	GRIDROOM_RIGHTWING_CONNECT_INDEX
	f	I	y	LEFTWING_INDEX
	f	I	z	RIGHTWING_INDEX
	f	I	A	PENTHOUSE_INDEX
	f	Lexi$v;	B	roomDefinition
	m	(III)I	c	getRoomIndex
	m	(Levp;Ljh;ILeuq;)V	<init>	<init>
	m	(Levp;ILjh;Lexi$v;III)V	<init>	<init>
	m	(Ljh;Lexi$v;III)Leuq;	a	makeBoundingBox
	m	(Levp;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Leuq;IIIIII)V	b	generateWaterBox
	m	(Ldnt;Leuq;IIZ)V	a	generateDefaultFloor
	m	(Ldnt;Leuq;IIIIIILeeb;)V	a	generateBoxOnFillOnly
	m	(Leuq;IIII)Z	a	chunkIntersects
	m	(Ldnt;Leuq;III)V	a	spawnElder
	m	()V	<clinit>	<clinit>
c	exi$s	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom
	f	I	a	mainDesign
	m	(Ljh;Lexi$v;Lbck;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$t	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom
	m	(Ljh;Lexi$v;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$u	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom
	f	I	a	mainDesign
	m	(Ljh;Leuq;I)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exi$v	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition
	f	I	a	index
	f	[Lexi$v;	b	connections
	f	[Z	c	hasOpening
	f	Z	d	claimed
	f	Z	e	isSource
	f	I	f	scanIndex
	m	(I)V	<init>	<init>
	m	(Ljh;Lexi$v;)V	a	setConnection
	m	()V	a	updateOpenings
	m	(I)Z	a	findSource
	m	()Z	b	isSpecial
	m	()I	c	countOpenings
c	exj	net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Ldlz;Lekz;)Levc;	a	createTopPiece
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	(Ldlz;JLevn;)Levn;	a	regeneratePiecesAfterLoad
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	exk	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces
	f	Leyx;	a	WARM_SUSPICIOUS_BLOCK_PROCESSOR
	f	Leyx;	b	COLD_SUSPICIOUS_BLOCK_PROCESSOR
	f	[Lame;	c	WARM_RUINS
	f	[Lame;	d	RUINS_BRICK
	f	[Lame;	e	RUINS_CRACKED
	f	[Lame;	f	RUINS_MOSSY
	f	[Lame;	g	BIG_RUINS_BRICK
	f	[Lame;	h	BIG_RUINS_MOSSY
	f	[Lame;	i	BIG_RUINS_CRACKED
	f	[Lame;	j	BIG_WARM_RUINS
	m	()V	<init>	<init>
	m	(Ldpz;Ldpz;Lamd;)Leyx;	a	archyRuleProcessor
	m	(Lbck;)Lame;	a	getSmallWarmRuin
	m	(Lbck;)Lame;	b	getBigWarmRuin
	m	(Lezb;Ljb;Ldwu;Levd;Lbck;Lexl;)V	a	addPieces
	m	(Lezb;Lbck;Ldwu;Ljb;Lexl;Levd;)V	a	addClusterRuins
	m	(Lbck;Ljb;)Ljava/util/List;	a	allPositions
	m	(Lezb;Ljb;Ldwu;Levd;Lbck;Lexl;ZF)V	a	addPiece
	m	()V	<clinit>	<clinit>
c	exk$1	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$levelgen$structure$structures$OceanRuinStructure$Type
	m	()V	<clinit>	<clinit>
c	exk$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece
	f	Lexl$a;	h	biomeType
	f	F	i	integrity
	f	Z	j	isLarge
	m	(Lezb;Lame;Ljb;Ldwu;FLexl$a;Z)V	<init>	<init>
	m	(Lezb;Lui;Ldwu;FLexl$a;Z)V	<init>	<init>
	m	(Ldwu;FLexl$a;)Leyw;	a	makeSettings
	m	(Lezb;Lui;)Lexk$a;	a	create
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ljb;Ldly;Ljb;)I	a	getHeight
	m	(Ldwu;FLexl$a;Lame;)Leyw;	a	lambda$new$0
c	exl	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Lexl$a;	e	biomeTemp
	f	F	f	largeProbability
	f	F	g	clusterProbability
	m	(Leuy$c;Lexl$a;FF)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lexl;)Ljava/lang/Float;	a	lambda$static$2
	m	(Lexl;)Ljava/lang/Float;	b	lambda$static$1
	m	(Lexl;)Lexl$a;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exl$a	net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type
	f	Lexl$a;	a	WARM
	f	Lexl$a;	b	COLD
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Lcom/mojang/serialization/Codec;	d	LEGACY_CODEC
	f	Ljava/lang/String;	e	name
	f	[Lexl$a;	f	$VALUES
	m	()[Lexl$a;	values	values
	m	(Ljava/lang/String;)Lexl$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lexl$a;	b	$values
	m	()V	<clinit>	<clinit>
c	exm	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece
	f	F	h	PROBABILITY_OF_GOLD_GONE
	f	F	i	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK
	f	F	j	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA
	f	Lexm$b;	k	verticalPlacement
	f	Lexm$a;	l	properties
	m	(Lezb;Ljb;Lexm$b;Lexm$a;Lame;Leza;Ldwu;Ldvd;Ljb;)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Lezb;Lui;Lame;)Leyw;	a	makeSettings
	m	(Ldvd;Ldwu;Lexm$b;Ljb;Lexm$a;)Leyw;	a	makeSettings
	m	(Lexm$b;Lexm$a;)Leyp;	a	getLavaProcessorRule
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Lbck;Ldmv;Ljb;)V	a	maybeAddVines
	m	(Lbck;Ldmv;Ljb;)V	b	maybeAddLeavesAbove
	m	(Lbck;Ldmv;)V	a	addNetherrackDripColumnsBelowPortal
	m	(Lbck;Ldmv;Ljb;)V	c	addNetherrackDripColumn
	m	(Lbck;Ldmv;)V	b	spreadNetherrack
	m	(Ldmv;Ljb;)Z	a	canBlockBeReplacedByNetherrackOrMagma
	m	(Lbck;Ldmv;Ljb;)V	d	placeNetherrackOrMagma
	m	(Ldmv;IILexm$b;)I	a	getSurfaceY
	m	(Lexm$b;)Leka$a;	a	getHeightMapType
	m	(Ldpz;FLdpz;)Leyp;	a	getBlockReplaceRule
	m	(Ldpz;Ldpz;)Leyp;	a	getBlockReplaceRule
	m	(Lbck;Ldnt;Ljb;)V	a	lambda$postProcess$1
	m	(Lezb;Lui;Lame;)Leyw;	b	lambda$new$0
c	exm$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Z	b	cold
	f	F	c	mossiness
	f	Z	d	airPocket
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	replaceWithBlackstone
	m	()V	<init>	<init>
	m	(ZFZZZZ)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$6
	m	(Lexm$a;)Ljava/lang/Boolean;	a	lambda$static$5
	m	(Lexm$a;)Ljava/lang/Boolean;	b	lambda$static$4
	m	(Lexm$a;)Ljava/lang/Boolean;	c	lambda$static$3
	m	(Lexm$a;)Ljava/lang/Boolean;	d	lambda$static$2
	m	(Lexm$a;)Ljava/lang/Float;	e	lambda$static$1
	m	(Lexm$a;)Ljava/lang/Boolean;	f	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exm$b	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement
	f	Lexm$b;	a	ON_LAND_SURFACE
	f	Lexm$b;	b	PARTLY_BURIED
	f	Lexm$b;	c	ON_OCEAN_FLOOR
	f	Lexm$b;	d	IN_MOUNTAIN
	f	Lexm$b;	e	UNDERGROUND
	f	Lexm$b;	f	IN_NETHER
	f	Lcom/mojang/serialization/Codec;	g	CODEC
	f	Ljava/lang/String;	h	name
	f	[Lexm$b;	i	$VALUES
	m	()[Lexm$b;	values	values
	m	(Ljava/lang/String;)Lexm$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lexm$b;	b	$values
	m	()V	<clinit>	<clinit>
c	exn	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure
	f	[Ljava/lang/String;	e	STRUCTURE_LOCATION_PORTALS
	f	[Ljava/lang/String;	f	STRUCTURE_LOCATION_GIANT_PORTALS
	f	F	g	PROBABILITY_OF_GIANT_PORTAL
	f	I	h	MIN_Y_INDEX
	f	Ljava/util/List;	i	setups
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;Ljava/util/List;)V	<init>	<init>
	m	(Leuy$c;Lexn$a;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Lekz;F)Z	a	sample
	m	(Ljb;Ljl;I)Z	a	isCold
	m	(Lbck;Lefz;Lexm$b;ZIILeuq;Ldmw;Leko;)I	a	findSuitableY
	m	(Lbck;II)I	a	getRandomWithinInterval
	m	()Levh;	e	type
	m	(Lefz;Ldmw;Leko;Ljb;)Ldng;	a	lambda$findSuitableY$3
	m	(Lexn$a;Lexm$a;Ljb;Leuy$a;Leko;Lefz;Lame;Leza;Ldwu;Ldvd;Ljb;Levq;)V	a	lambda$findGenerationPoint$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lexn;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exn$a	net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup
	f	Lexm$b;	b	placement
	f	F	c	airPocketProbability
	f	F	d	mossiness
	f	Z	e	overgrown
	f	Z	f	vines
	f	Z	g	canBeCold
	f	Z	h	replaceWithBlackstone
	f	F	i	weight
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lexm$b;FFZZZZF)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lexm$b;	a	placement
	m	()F	b	airPocketProbability
	m	()F	c	mossiness
	m	()Z	d	overgrown
	m	()Z	e	vines
	m	()Z	f	canBeCold
	m	()Z	g	replaceWithBlackstone
	m	()F	h	weight
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exo	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces
	f	I	a	NUMBER_OF_BLOCKS_ALLOWED_IN_WORLD_GEN_REGION
	f	Ljb;	b	PIVOT
	f	[Lame;	c	STRUCTURE_LOCATION_BEACHED
	f	[Lame;	d	STRUCTURE_LOCATION_OCEAN
	f	Ljava/util/Map;	e	MARKERS_TO_LOOT
	m	()V	<init>	<init>
	m	(Lezb;Ljb;Ldwu;Levd;Lbck;Z)Lexo$a;	a	addRandomPiece
	m	()V	<clinit>	<clinit>
c	exo$a	net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece
	f	Z	h	isBeached
	m	(Lezb;Lame;Ljb;Ldwu;Z)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldwu;)Leyw;	a	makeSettings
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	()Z	l	isTooBigToFitInWorldGenRegion
	m	(ILbck;)I	a	calculateBeachedPosition
	m	(I)V	c	adjustPositionHeight
	m	(Lui;Lame;)Leyw;	a	lambda$new$0
c	exp	net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	f	Z	e	isBeached
	m	(Leuy$c;Z)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lexp;)Ljava/lang/Boolean;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exq	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces
	f	I	b	SMALL_DOOR_WIDTH
	f	I	c	SMALL_DOOR_HEIGHT
	f	I	d	MAX_DEPTH
	f	I	e	LOWEST_Y_POSITION
	f	Z	f	CHECK_AIR
	f	I	a	MAGIC_START_Y
	f	[Lexq$f;	g	STRONGHOLD_PIECE_WEIGHTS
	f	Ljava/util/List;	h	currentPieces
	f	Ljava/lang/Class;	i	imposedPiece
	f	I	j	totalWeight
	f	Lexq$k;	k	SMOOTH_STONE_SELECTOR
	m	()V	<init>	<init>
	m	()V	a	resetPieces
	m	()Z	b	updatePieceWeight
	m	(Ljava/lang/Class;Levd;Lbck;IIILjh;I)Lexq$p;	a	findAndCreatePieceFactory
	m	(Lexq$m;Levd;Lbck;IIILjh;I)Lexq$p;	a	generatePieceFromSmallDoor
	m	(Lexq$m;Levd;Lbck;IIILjh;I)Levc;	b	generateAndAddPiece
	m	()V	<clinit>	<clinit>
c	exq$1	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$1
	m	(Ljava/lang/Class;II)V	<init>	<init>
	m	(I)Z	a	doPlace
c	exq$2	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$2
	m	(Ljava/lang/Class;II)V	<init>	<init>
	m	(I)Z	a	doPlace
c	exq$3	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$3
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	exq$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedChest
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$a;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$b	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor
	f	I	a	steps
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levd;Lbck;IIILjh;)Leuq;	a	findPieceBox
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$c	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftLow
	f	Z	i	leftHigh
	f	Z	j	rightLow
	f	Z	k	rightHigh
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$c;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$d	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$d;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$e	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	TALL_HEIGHT
	f	I	d	DEPTH
	f	Z	i	isTall
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levd;Lbck;IIILjh;I)Lexq$e;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$f	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight
	f	Ljava/lang/Class;	a	pieceClass
	f	I	b	weight
	f	I	c	placeCount
	f	I	d	maxPlaceCount
	m	(Ljava/lang/Class;II)V	<init>	<init>
	m	(I)Z	a	doPlace
	m	()Z	a	isValid
c	exq$g	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	hasPlacedSpawner
	m	(ILeuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;IIILjh;I)Lexq$g;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$h	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$h;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$i	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$i;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$j	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	I	d	type
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$j;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$k	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector
	m	()V	<init>	<init>
	m	(Lbck;IIIZ)V	a	next
c	exq$l	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	isSource
	m	(Levp;IIILjh;)V	<init>	<init>
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$l;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$m	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece
	f	Lexq$f;	a	previousPiece
	f	Lexq$g;	b	portalRoomPiece
	f	Ljava/util/List;	c	pendingChildren
	m	(Lbck;II)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	()Ljb;	h	getLocatorPosition
c	exq$n	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	f	Z	d	leftChild
	f	Z	i	rightChild
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$n;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$o	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(ILbck;Leuq;Ljh;)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levc;Levd;Lbck;)V	a	addChildren
	m	(Levd;Lbck;IIILjh;I)Lexq$o;	a	createPiece
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
c	exq$p	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece
	f	Lexq$p$a;	h	entryDoor
	m	(Levp;ILeuq;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Lbck;Leuq;Lexq$p$a;III)V	a	generateSmallDoor
	m	(Lbck;)Lexq$p$a;	b	randomSmallDoor
	m	(Lexq$m;Levd;Lbck;II)Levc;	a	generateSmallDoorChildForward
	m	(Lexq$m;Levd;Lbck;II)Levc;	b	generateSmallDoorChildLeft
	m	(Lexq$m;Levd;Lbck;II)Levc;	c	generateSmallDoorChildRight
	m	(Leuq;)Z	a	isOkBox
c	exq$p$a	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType
	f	Lexq$p$a;	a	OPENING
	f	Lexq$p$a;	b	WOOD_DOOR
	f	Lexq$p$a;	c	GRATES
	f	Lexq$p$a;	d	IRON_DOOR
	f	Lcom/mojang/serialization/Codec;	e	LEGACY_CODEC
	f	[Lexq$p$a;	f	$VALUES
	m	()[Lexq$p$a;	values	values
	m	(Ljava/lang/String;)Lexq$p$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lexq$p$a;	a	$values
	m	()V	<clinit>	<clinit>
c	exq$q	net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn
	f	I	a	WIDTH
	f	I	b	HEIGHT
	f	I	c	DEPTH
	m	(Levp;ILeuq;)V	<init>	<init>
	m	(Levp;Lui;)V	<init>	<init>
c	exr	net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	exs	net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece
	f	Z	h	spawnedWitch
	f	Z	i	spawnedCat
	m	(Lbck;II)V	<init>	<init>
	m	(Lui;)V	<init>	<init>
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Ljb;)V	a	postProcess
	m	(Ldnl;Leuq;)V	a	spawnCat
c	ext	net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;)V	a	generatePieces
	m	()Levh;	e	type
	m	(Leuy$a;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	exu	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces
	m	()V	<init>	<init>
	m	(Lezb;Ljb;Ldwu;Ljava/util/List;Lbck;)V	a	generateMansion
c	exu$a	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection
	m	()V	<init>	<init>
	m	(Lbck;)Ljava/lang/String;	a	get1x1
	m	(Lbck;)Ljava/lang/String;	b	get1x1Secret
	m	(Lbck;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Lbck;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Lbck;)Ljava/lang/String;	c	get1x2Secret
	m	(Lbck;)Ljava/lang/String;	d	get2x2
	m	(Lbck;)Ljava/lang/String;	e	get2x2Secret
c	exu$b	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection
	m	()V	<init>	<init>
	m	(Lbck;)Ljava/lang/String;	a	get1x1
	m	(Lbck;)Ljava/lang/String;	b	get1x1Secret
	m	(Lbck;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Lbck;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Lbck;)Ljava/lang/String;	c	get1x2Secret
	m	(Lbck;)Ljava/lang/String;	d	get2x2
	m	(Lbck;)Ljava/lang/String;	e	get2x2Secret
c	exu$c	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid
	f	I	a	DEFAULT_SIZE
	f	I	b	CLEAR
	f	I	c	CORRIDOR
	f	I	d	ROOM
	f	I	e	START_ROOM
	f	I	f	TEST_ROOM
	f	I	g	BLOCKED
	f	I	h	ROOM_1x1
	f	I	i	ROOM_1x2
	f	I	j	ROOM_2x2
	f	I	k	ROOM_ORIGIN_FLAG
	f	I	l	ROOM_DOOR_FLAG
	f	I	m	ROOM_STAIRS_FLAG
	f	I	n	ROOM_CORRIDOR_FLAG
	f	I	o	ROOM_TYPE_MASK
	f	I	p	ROOM_ID_MASK
	f	Lbck;	q	random
	f	Lexu$g;	r	baseGrid
	f	Lexu$g;	s	thirdFloorGrid
	f	[Lexu$g;	t	floorRooms
	f	I	u	entranceX
	f	I	v	entranceY
	m	(Lbck;)V	<init>	<init>
	m	(Lexu$g;II)Z	a	isHouse
	m	(Lexu$g;IIII)Z	a	isRoomId
	m	(Lexu$g;IIII)Ljh;	b	get1x2RoomDirection
	m	(Lexu$g;IILjh;I)V	a	recursiveCorridor
	m	(Lexu$g;)Z	a	cleanEdges
	m	()V	a	setupThirdFloor
	m	(Lexu$g;Lexu$g;)V	a	identifyRooms
c	exu$d	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer
	f	Lezb;	a	structureTemplateManager
	f	Lbck;	b	random
	f	I	c	startX
	f	I	d	startY
	m	(Lezb;Lbck;)V	<init>	<init>
	m	(Ljb;Ldwu;Ljava/util/List;Lexu$c;)V	a	createMansion
	m	(Ljava/util/List;Lexu$e;Lexu$g;Ljh;IIII)V	a	traverseOuterWalls
	m	(Ljava/util/List;Ljb;Ldwu;Lexu$g;Lexu$g;)V	a	createRoof
	m	(Ljava/util/List;Lexu$e;)V	a	entrance
	m	(Ljava/util/List;Lexu$e;)V	b	traverseWallPiece
	m	(Ljava/util/List;Lexu$e;)V	c	traverseTurn
	m	(Ljava/util/List;Lexu$e;)V	d	traverseInnerTurn
	m	(Ljava/util/List;Ljb;Ldwu;Ljh;Lexu$b;)V	a	addRoom1x1
	m	(Ljava/util/List;Ljb;Ldwu;Ljh;Ljh;Lexu$b;Z)V	a	addRoom1x2
	m	(Ljava/util/List;Ljb;Ldwu;Ljh;Ljh;Lexu$b;)V	a	addRoom2x2
	m	(Ljava/util/List;Ljb;Ldwu;Lexu$b;)V	a	addRoom2x2Secret
c	exu$e	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData
	f	Ldwu;	a	rotation
	f	Ljb;	b	position
	f	Ljava/lang/String;	c	wallType
	m	()V	<init>	<init>
c	exu$f	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection
	m	()V	<init>	<init>
	m	(Lbck;)Ljava/lang/String;	a	get1x1
	m	(Lbck;)Ljava/lang/String;	b	get1x1Secret
	m	(Lbck;Z)Ljava/lang/String;	a	get1x2SideEntrance
	m	(Lbck;Z)Ljava/lang/String;	b	get1x2FrontEntrance
	m	(Lbck;)Ljava/lang/String;	c	get1x2Secret
	m	(Lbck;)Ljava/lang/String;	d	get2x2
	m	(Lbck;)Ljava/lang/String;	e	get2x2Secret
c	exu$g	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid
	f	[[I	a	grid
	f	I	b	width
	f	I	c	height
	f	I	d	valueIfOutside
	m	(III)V	<init>	<init>
	m	(III)V	a	set
	m	(IIIII)V	a	set
	m	(II)I	a	get
	m	(IIII)V	a	setif
	m	(III)Z	b	edgesTo
c	exu$h	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection
	m	()V	<init>	<init>
c	exu$i	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece
	m	(Lezb;Ljava/lang/String;Ljb;Ldwu;)V	<init>	<init>
	m	(Lezb;Ljava/lang/String;Ljb;Ldwu;Ldvd;)V	<init>	<init>
	m	(Lezb;Lui;)V	<init>	<init>
	m	()Lame;	b	makeTemplateLocation
	m	(Ljava/lang/String;)Lame;	a	makeLocation
	m	(Ldvd;Ldwu;)Leyw;	a	makeSettings
	m	(Levo;Lui;)V	a	addAdditionalSaveData
	m	(Ljava/lang/String;Ljb;Ldnl;Lbck;Leuq;)V	a	handleDataMarker
	m	(Lui;Lame;)Leyw;	a	lambda$new$0
c	exv	net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure
	f	Lcom/mojang/serialization/MapCodec;	d	CODEC
	m	(Leuy$c;)V	<init>	<init>
	m	(Leuy$a;)Ljava/util/Optional;	a	findGenerationPoint
	m	(Levq;Leuy$a;Ljb;Ldwu;)V	a	generatePieces
	m	(Ldnt;Ldnq;Lefz;Lbck;Leuq;Ldlz;Levn;)V	a	afterPlace
	m	()Levh;	e	type
	m	(Leuy$a;Ljb;Ldwu;Levq;)V	a	lambda$findGenerationPoint$0
	m	()V	<clinit>	<clinit>
c	exw	net/minecraft/world/level/levelgen/structure/structures/package-info
c	exx	net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexx;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	()Lexx;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exy	net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	f	Ljh$a;	g	axis
	m	(FFIILjh$a;)V	<init>	<init>
	m	(Ljb;Ljb;Ljb;Lbck;)Z	a	test
	m	()Leyo;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lexy;)Ljh$a;	a	lambda$static$4
	m	(Lexy;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Lexy;)Ljava/lang/Integer;	c	lambda$static$2
	m	(Lexy;)Ljava/lang/Float;	d	lambda$static$1
	m	(Lexy;)Ljava/lang/Float;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	exz	net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lexz;	b	INSTANCE
	f	Ljava/util/Map;	c	replacements
	m	()V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Ljava/util/HashMap;)V	a	lambda$new$1
	m	()Lexz;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eya	net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	PROBABILITY_OF_REPLACING_FULL_BLOCK
	f	F	c	PROBABILITY_OF_REPLACING_STAIRS
	f	F	d	PROBABILITY_OF_REPLACING_OBSIDIAN
	f	[Leeb;	e	NON_MOSSY_REPLACEMENTS
	f	F	f	mossiness
	m	(F)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	(Lbck;)Leeb;	a	maybeReplaceFullStoneBlock
	m	(Lbck;Leeb;)Leeb;	a	maybeReplaceStairs
	m	(Lbck;)Leeb;	b	maybeReplaceSlab
	m	(Lbck;)Leeb;	c	maybeReplaceWall
	m	(Lbck;)Leeb;	d	maybeReplaceObsidian
	m	(Lbck;Ldpz;)Leeb;	a	getRandomFacingStairs
	m	(Lbck;[Leeb;[Leeb;)Leeb;	a	getRandomBlock
	m	(Lbck;[Leeb;)Leeb;	a	getRandomBlock
	m	()Leyz;	a	getType
	m	(Leya;)Ljava/lang/Float;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyb	net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leyb;	b	STRUCTURE_BLOCK
	f	Leyb;	c	AIR
	f	Leyb;	d	STRUCTURE_AND_AIR
	f	Lcom/google/common/collect/ImmutableList;	e	toIgnore
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Leyb;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyc	net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpz;	b	block
	m	(Ldpz;)V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	(Leyc;)Ldpz;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyd	net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	rottableBlocks
	f	F	c	integrity
	m	(Ljp;F)V	<init>	<init>
	m	(F)V	<init>	<init>
	m	(Ljava/util/Optional;F)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leyd;)Ljava/lang/Float;	a	lambda$static$1
	m	(Leyd;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eye	net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leeb;	b	blockState
	m	(Leeb;)V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	(Leye;)Leeb;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyf	net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leyx;	b	delegate
	f	Lbwo;	c	limit
	m	(Leyx;Lbwo;)V	<init>	<init>
	m	()Leyz;	a	getType
	m	(Ldnl;Ljb;Ljb;Ljava/util/List;Ljava/util/List;Leyw;)Ljava/util/List;	a	finalizeProcessing
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leyf;)Lbwo;	a	lambda$static$1
	m	(Leyf;)Leyx;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyg	net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leka$a;	b	heightmap
	f	I	c	offset
	m	(Leka$a;I)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leyg;)Ljava/lang/Integer;	a	lambda$static$1
	m	(Leyg;)Leka$a;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyh	net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leyh;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	()Leyh;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyi	net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leyi;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	()Leyi;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyj	net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	F	b	minChance
	f	F	d	maxChance
	f	I	e	minDist
	f	I	f	maxDist
	m	(FFII)V	<init>	<init>
	m	(Ljb;Ljb;Ljb;Lbck;)Z	a	test
	m	()Leyo;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Leyj;)Ljava/lang/Integer;	a	lambda$static$3
	m	(Leyj;)Ljava/lang/Integer;	b	lambda$static$2
	m	(Leyj;)Ljava/lang/Float;	c	lambda$static$1
	m	(Leyj;)Ljava/lang/Float;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyk	net/minecraft/world/level/levelgen/structure/templatesystem/LiquidSettings
	f	Leyk;	a	IGNORE_WATERLOGGING
	f	Leyk;	b	APPLY_WATERLOGGING
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Leyk;	e	$VALUES
	m	()[Leyk;	values	values
	m	(Ljava/lang/String;)Leyk;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Leyk;	a	$values
	m	()V	<clinit>	<clinit>
c	eyl	net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leyl;	b	INSTANCE
	m	()V	<init>	<init>
	m	()Leyz;	a	getType
	m	()Leyl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eym	net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leym;	b	INSTANCE
	m	()V	<init>	<init>
	m	(Ljb;Ljb;Ljb;Lbck;)Z	a	test
	m	()Leyo;	a	getType
	m	()Leym;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyn	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	()V	<init>	<init>
	m	(Ljb;Ljb;Ljb;Lbck;)Z	a	test
	m	()Leyo;	a	getType
	m	()V	<clinit>	<clinit>
c	eyo	net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType
	f	Leyo;	a	ALWAYS_TRUE_TEST
	f	Leyo;	b	LINEAR_POS_TEST
	f	Leyo;	c	AXIS_ALIGNED_LINEAR_POS_TEST
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leyo;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	eyp	net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule
	f	Lezh;	a	DEFAULT_BLOCK_ENTITY_MODIFIER
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Leyu;	c	inputPredicate
	f	Leyu;	d	locPredicate
	f	Leyn;	e	posPredicate
	f	Leeb;	f	outputState
	f	Lezi;	g	blockEntityModifier
	m	(Leyu;Leyu;Leeb;)V	<init>	<init>
	m	(Leyu;Leyu;Leyn;Leeb;)V	<init>	<init>
	m	(Leyu;Leyu;Leyn;Leeb;Lezi;)V	<init>	<init>
	m	(Leeb;Leeb;Ljb;Ljb;Ljb;Lbck;)Z	a	test
	m	()Leeb;	a	getOutputState
	m	(Lbck;Lui;)Lui;	a	getOutputTag
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Leyp;)Lezi;	a	lambda$static$4
	m	(Leyp;)Leeb;	b	lambda$static$3
	m	(Leyp;)Leyn;	c	lambda$static$2
	m	(Leyp;)Leyu;	d	lambda$static$1
	m	(Leyp;)Leyu;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyq	net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor
	f	Lbae;	a	cannotReplace
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	(Lbae;)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Leyq;)Lbae;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyr	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldpz;	b	block
	f	F	d	probability
	m	(Ldpz;F)V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leyr;)Ljava/lang/Float;	a	lambda$static$1
	m	(Leyr;)Ldpz;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eys	net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leeb;	b	blockState
	f	F	d	probability
	m	(Leeb;F)V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Leys;)Ljava/lang/Float;	a	lambda$static$1
	m	(Leys;)Leeb;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyt	net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/google/common/collect/ImmutableList;	b	rules
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Leyt;)Ljava/util/List;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	eyu	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	()V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	()V	<clinit>	<clinit>
c	eyv	net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType
	f	Leyv;	a	ALWAYS_TRUE_TEST
	f	Leyv;	b	BLOCK_TEST
	f	Leyv;	c	BLOCKSTATE_TEST
	f	Leyv;	d	TAG_TEST
	f	Leyv;	e	RANDOM_BLOCK_TEST
	f	Leyv;	f	RANDOM_BLOCKSTATE_TEST
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leyv;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	eyw	net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings
	f	Ldvd;	a	mirror
	f	Ldwu;	b	rotation
	f	Ljb;	c	rotationPivot
	f	Z	d	ignoreEntities
	f	Leuq;	e	boundingBox
	f	Leyk;	f	liquidSettings
	f	Lbck;	g	random
	f	I	h	palette
	f	Ljava/util/List;	i	processors
	f	Z	j	knownShape
	f	Z	k	finalizeEntities
	m	()V	<init>	<init>
	m	()Leyw;	a	copy
	m	(Ldvd;)Leyw;	a	setMirror
	m	(Ldwu;)Leyw;	a	setRotation
	m	(Ljb;)Leyw;	a	setRotationPivot
	m	(Z)Leyw;	a	setIgnoreEntities
	m	(Leuq;)Leyw;	a	setBoundingBox
	m	(Lbck;)Leyw;	a	setRandom
	m	(Leyk;)Leyw;	a	setLiquidSettings
	m	(Z)Leyw;	b	setKnownShape
	m	()Leyw;	b	clearProcessors
	m	(Leyx;)Leyw;	a	addProcessor
	m	(Leyx;)Leyw;	b	popProcessor
	m	()Ldvd;	c	getMirror
	m	()Ldwu;	d	getRotation
	m	()Ljb;	e	getRotationPivot
	m	(Ljb;)Lbck;	b	getRandom
	m	()Z	f	isIgnoreEntities
	m	()Leuq;	g	getBoundingBox
	m	()Z	h	getKnownShape
	m	()Ljava/util/List;	i	getProcessors
	m	()Z	j	shouldApplyWaterlogging
	m	(Ljava/util/List;Ljb;)Leza$b;	a	getRandomPalette
	m	(Z)Leyw;	c	setFinalizeEntities
	m	()Z	k	shouldFinalizeEntities
c	eyx	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor
	m	()V	<init>	<init>
	m	(Ldmx;Ljb;Ljb;Leza$d;Leza$d;Leyw;)Leza$d;	a	processBlock
	m	()Leyz;	a	getType
	m	(Ldnl;Ljb;Ljb;Ljava/util/List;Ljava/util/List;Leyw;)Ljava/util/List;	a	finalizeProcessing
c	eyy	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList
	f	Ljava/util/List;	a	list
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	list
	m	()Ljava/lang/String;	toString	toString
c	eyz	net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType
	f	Lcom/mojang/serialization/Codec;	a	SINGLE_CODEC
	f	Lcom/mojang/serialization/Codec;	b	LIST_OBJECT_CODEC
	f	Lcom/mojang/serialization/Codec;	c	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	LIST_CODEC
	f	Leyz;	e	BLOCK_IGNORE
	f	Leyz;	f	BLOCK_ROT
	f	Leyz;	g	GRAVITY
	f	Leyz;	h	JIGSAW_REPLACEMENT
	f	Leyz;	i	RULE
	f	Leyz;	j	NOP
	f	Leyz;	k	BLOCK_AGE
	f	Leyz;	l	BLACKSTONE_REPLACE
	f	Leyz;	m	LAVA_SUBMERGED_BLOCK
	f	Leyz;	n	PROTECTED_BLOCKS
	f	Leyz;	o	CAPPED
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Leyz;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	eza	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate
	f	Lorg/slf4j/Logger;	l	LOGGER
	f	Ljava/lang/String;	a	PALETTE_TAG
	f	Ljava/lang/String;	b	PALETTE_LIST_TAG
	f	Ljava/lang/String;	c	ENTITIES_TAG
	f	Ljava/lang/String;	d	BLOCKS_TAG
	f	Ljava/lang/String;	e	BLOCK_TAG_POS
	f	Ljava/lang/String;	f	BLOCK_TAG_STATE
	f	Ljava/lang/String;	g	BLOCK_TAG_NBT
	f	Ljava/lang/String;	h	ENTITY_TAG_POS
	f	Ljava/lang/String;	i	ENTITY_TAG_BLOCKPOS
	f	Ljava/lang/String;	j	ENTITY_TAG_NBT
	f	Ljava/lang/String;	k	SIZE_TAG
	f	Ljava/util/List;	m	palettes
	f	Ljava/util/List;	n	entityInfoList
	f	Lkg;	o	size
	f	Ljava/lang/String;	p	author
	m	()V	<init>	<init>
	m	()Lkg;	a	getSize
	m	(Ljava/lang/String;)V	a	setAuthor
	m	()Ljava/lang/String;	b	getAuthor
	m	(Ldmu;Ljb;Lkg;ZLjava/util/List;)V	a	fillFromWorld
	m	(Leza$d;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V	a	addToLists
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	buildInfoList
	m	(Ldmu;Ljb;Ljb;Lbci;)V	a	fillEntityList
	m	(Ljb;Leyw;Ldpz;)Ljava/util/List;	a	filterBlocks
	m	(Ljb;Ldwu;)Ljava/util/List;	a	getJigsaws
	m	(Ljb;Leyw;Ldpz;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	filterBlocks
	m	(Leyw;Ljb;Leyw;Ljb;)Ljb;	a	calculateConnectedPosition
	m	(Leyw;Ljb;)Ljb;	a	calculateRelativePosition
	m	(Ldnl;Ljb;Ljb;Leyw;Lbck;I)Z	a	placeInWorld
	m	(Ldmv;ILfjb;Ljb;)V	a	updateShapeAtEdge
	m	(Ldmv;ILfjb;III)V	a	updateShapeAtEdge
	m	(Ldnl;Ljb;Ljb;Leyw;Ljava/util/List;)Ljava/util/List;	a	processBlockInfos
	m	(Ldnl;Ljb;Ldvd;Ldwu;Ljb;Leuq;ZLbci;)V	a	placeEntities
	m	(Lbci;Ldnl;Lui;)Ljava/util/Optional;	a	createEntityIgnoreException
	m	(Ldwu;)Lkg;	a	getSize
	m	(Ljb;Ldvd;Ldwu;Ljb;)Ljb;	a	transform
	m	(Lfis;Ldvd;Ldwu;Ljb;)Lfis;	a	transform
	m	(Ljb;Ldvd;Ldwu;)Ljb;	a	getZeroPositionWithTransform
	m	(Ljb;Ldvd;Ldwu;II)Ljb;	a	getZeroPositionWithTransform
	m	(Leyw;Ljb;)Leuq;	b	getBoundingBox
	m	(Ljb;Ldwu;Ljb;Ldvd;)Leuq;	a	getBoundingBox
	m	(Ljb;Ldwu;Ljb;Ldvd;Lkg;)Leuq;	a	getBoundingBox
	m	(Lui;)Lui;	a	save
	m	(Ljm;Lui;)V	a	load
	m	(Ljm;Luo;Luo;)V	a	loadPalette
	m	([I)Luo;	a	newIntegerList
	m	([D)Luo;	a	newDoubleList
	m	(Lui;Leeb;)Lecd$a;	a	getJointType
	m	(Leeb;)Lecd$a;	a	getDefaultJointType
	m	(Leeb;)Lecd$a;	b	lambda$getJointType$9
	m	(Leza$c;Ljava/util/List;Ljava/util/List;Ljava/util/List;Lui;)V	a	lambda$loadPalette$8
	m	(Lui;)V	b	lambda$load$7
	m	(Lfis;Ljb;Lui;)V	a	lambda$load$6
	m	(Ldwu;Ldvd;Lfis;ZLdnl;Lbzm;)V	a	lambda$placeEntities$5
	m	(Ljb$a;IIILjb$a;Ldmv;ILjh;III)V	a	lambda$updateShapeAtEdge$4
	m	(Lbzm;)Z	a	lambda$fillEntityList$3
	m	(Leza$d;)I	a	lambda$buildInfoList$2
	m	(Leza$d;)I	b	lambda$buildInfoList$1
	m	(Leza$d;)I	c	lambda$buildInfoList$0
	m	()V	<clinit>	<clinit>
c	eza$1	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$Rotation
	f	[I	b	$SwitchMap$net$minecraft$world$level$block$Mirror
	m	()V	<clinit>	<clinit>
c	eza$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$JigsawBlockInfo
	f	Leza$d;	a	info
	f	Lecd$a;	b	jointType
	f	Lame;	c	name
	f	Lamd;	d	pool
	f	Lame;	e	target
	f	I	f	placementPriority
	f	I	g	selectionPriority
	m	(Leza$d;Lecd$a;Lame;Lamd;Lame;II)V	<init>	<init>
	m	(Leza$d;)Leza$a;	a	of
	m	()Ljava/lang/String;	toString	toString
	m	(Leza$d;)Leza$a;	b	withInfo
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leza$d;	a	info
	m	()Lecd$a;	b	jointType
	m	()Lame;	c	name
	m	()Lamd;	d	pool
	m	()Lame;	e	target
	m	()I	f	placementPriority
	m	()I	g	selectionPriority
	m	(Leza$d;)Ljava/lang/String;	c	lambda$of$0
c	eza$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette
	f	Ljava/util/List;	a	blocks
	f	Ljava/util/Map;	b	cache
	f	Ljava/util/List;	c	cachedJigsaws
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Ljava/util/List;	a	jigsaws
	m	()Ljava/util/List;	b	blocks
	m	(Ldpz;)Ljava/util/List;	a	blocks
	m	(Ldpz;)Ljava/util/List;	b	lambda$blocks$1
	m	(Ldpz;Leza$d;)Z	a	lambda$blocks$0
c	eza$c	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette
	f	Leeb;	a	DEFAULT_BLOCK_STATE
	f	Ljr;	b	ids
	f	I	c	lastId
	m	()V	<init>	<init>
	m	(Leeb;)I	a	idFor
	m	(I)Leeb;	a	stateFor
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Leeb;I)V	a	addMapping
	m	()V	<clinit>	<clinit>
c	eza$d	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo
	f	Ljb;	a	pos
	f	Leeb;	b	state
	f	Lui;	c	nbt
	m	(Ljb;Leeb;Lui;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Leeb;	b	state
	m	()Lui;	c	nbt
c	eza$e	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo
	f	Lfis;	a	pos
	f	Ljb;	b	blockPos
	f	Lui;	c	nbt
	m	(Lfis;Ljb;Lui;)V	<init>	<init>
c	ezb	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/lang/String;	a	STRUCTURE_RESOURCE_DIRECTORY_NAME
	f	Ljava/lang/String;	c	STRUCTURE_GENERATED_DIRECTORY_NAME
	f	Ljava/lang/String;	d	STRUCTURE_FILE_EXTENSION
	f	Ljava/lang/String;	e	STRUCTURE_TEXT_FILE_EXTENSION
	f	Ljava/util/Map;	f	structureRepository
	f	Lcom/mojang/datafixers/DataFixer;	g	fixerUpper
	f	Laxo;	h	resourceManager
	f	Ljava/nio/file/Path;	i	generatedDir
	f	Ljava/util/List;	j	sources
	f	Ljm;	k	blockLookup
	f	Lalx;	l	RESOURCE_LISTER
	m	(Laxo;Lfcs$c;Lcom/mojang/datafixers/DataFixer;Ljm;)V	<init>	<init>
	m	(Lame;)Leza;	a	getOrCreate
	m	(Lame;)Ljava/util/Optional;	b	get
	m	()Ljava/util/stream/Stream;	a	listTemplates
	m	(Lame;)Ljava/util/Optional;	e	tryLoad
	m	(Laxo;)V	a	onResourceManagerReload
	m	(Lame;)Ljava/util/Optional;	f	loadFromResource
	m	()Ljava/util/stream/Stream;	b	listResources
	m	(Lame;)Ljava/util/Optional;	g	loadFromTestStructures
	m	()Ljava/util/stream/Stream;	c	listTestStructures
	m	(Lame;)Ljava/util/Optional;	h	loadFromGenerated
	m	()Ljava/util/stream/Stream;	d	listGenerated
	m	(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Consumer;)V	a	listFolderContents
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String;	a	relativize
	m	(Lame;Ljava/nio/file/Path;)Ljava/util/Optional;	a	loadFromSnbt
	m	(Lezb$a;Ljava/util/function/Consumer;)Ljava/util/Optional;	a	load
	m	(Ljava/io/InputStream;)Leza;	a	readStructure
	m	(Lui;)Leza;	a	readStructure
	m	(Lame;)Z	c	save
	m	(Lame;Ljava/lang/String;)Ljava/nio/file/Path;	a	createAndValidatePathToGeneratedStructure
	m	(Lame;)V	d	remove
	m	(Ljava/util/function/Consumer;Ljava/lang/String;Ljava/util/function/Function;Ljava/nio/file/Path;Ljava/nio/file/Path;)V	a	lambda$listFolderContents$8
	m	(Ljava/lang/String;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Z	a	lambda$listFolderContents$7
	m	(ILjava/lang/String;)Ljava/lang/String;	a	lambda$listFolderContents$6
	m	(Ljava/nio/file/Path;)Z	a	lambda$listGenerated$5
	m	(Ljava/nio/file/Path;Ljava/lang/Throwable;)V	a	lambda$loadFromGenerated$4
	m	(Ljava/nio/file/Path;)Ljava/io/InputStream;	b	lambda$loadFromGenerated$3
	m	(Lame;Ljava/lang/Throwable;)V	a	lambda$loadFromResource$2
	m	(Lame;)Ljava/io/InputStream;	i	lambda$loadFromResource$1
	m	(Lezb$b;)Ljava/util/stream/Stream;	a	lambda$listTemplates$0
	m	()V	<clinit>	<clinit>
c	ezb$a	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener
	m	()Ljava/io/InputStream;	open	open
c	ezb$b	net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source
	f	Ljava/util/function/Function;	a	loader
	f	Ljava/util/function/Supplier;	b	lister
	m	(Ljava/util/function/Function;Ljava/util/function/Supplier;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/function/Function;	a	loader
	m	()Ljava/util/function/Supplier;	b	lister
c	ezc	net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbae;	b	tag
	m	(Lbae;)V	<init>	<init>
	m	(Leeb;Lbck;)Z	a	test
	m	()Leyv;	a	getType
	m	(Lezc;)Lbae;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ezd	net/minecraft/world/level/levelgen/structure/templatesystem/package-info
c	eze	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lamd;	b	lootTable
	m	(Lamd;)V	<init>	<init>
	m	(Lbck;Lui;)Lui;	a	apply
	m	()Lezj;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Leze;)Lamd;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ezf	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lui;	b	tag
	m	(Lui;)V	<init>	<init>
	m	(Lbck;Lui;)Lui;	a	apply
	m	()Lezj;	a	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lezf;)Lui;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ezg	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear
	f	Lezg;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	(Lbck;Lui;)Lui;	a	apply
	m	()Lezj;	a	getType
	m	()V	<clinit>	<clinit>
c	ezh	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough
	f	Lezh;	a	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	m	()V	<init>	<init>
	m	(Lbck;Lui;)Lui;	a	apply
	m	()Lezj;	a	getType
	m	()V	<clinit>	<clinit>
c	ezi	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	m	(Lbck;Lui;)Lui;	a	apply
	m	()Lezj;	a	getType
	m	()V	<clinit>	<clinit>
c	ezj	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType
	f	Lezj;	a	CLEAR
	f	Lezj;	b	PASSTHROUGH
	f	Lezj;	c	APPEND_STATIC
	f	Lezj;	d	APPEND_LOOT
	m	()Lcom/mojang/serialization/MapCodec;	codec	codec
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lezj;	a	register
	m	(Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec;	a	lambda$register$0
	m	()V	<clinit>	<clinit>
c	ezk	net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/package-info
c	ezl	net/minecraft/world/level/levelgen/synth/BlendedNoise
	f	Lcom/mojang/serialization/Codec;	e	SCALE_RANGE
	f	Lcom/mojang/serialization/MapCodec;	f	DATA_CODEC
	f	Lbbu;	a	CODEC
	f	Lezp;	g	minLimitNoise
	f	Lezp;	h	maxLimitNoise
	f	Lezp;	i	mainNoise
	f	D	j	xzMultiplier
	f	D	k	yMultiplier
	f	D	l	xzFactor
	f	D	m	yFactor
	f	D	n	smearScaleMultiplier
	f	D	o	maxValue
	f	D	p	xzScale
	f	D	q	yScale
	m	(DDDDD)Lezl;	a	createUnseeded
	m	(Lezp;Lezp;Lezp;DDDDD)V	<init>	<init>
	m	(Lbck;DDDDD)V	<init>	<init>
	m	(Lbck;)Lezl;	a	withNewRandom
	m	(Lejt$b;)D	a	compute
	m	()D	a	minValue
	m	()D	b	maxValue
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	()Lbbu;	c	codec
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lezl;)Ljava/lang/Double;	a	lambda$static$4
	m	(Lezl;)Ljava/lang/Double;	b	lambda$static$3
	m	(Lezl;)Ljava/lang/Double;	c	lambda$static$2
	m	(Lezl;)Ljava/lang/Double;	d	lambda$static$1
	m	(Lezl;)Ljava/lang/Double;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ezm	net/minecraft/world/level/levelgen/synth/ImprovedNoise
	f	F	d	SHIFT_UP_EPSILON
	f	[B	e	p
	f	D	a	xo
	f	D	b	yo
	f	D	c	zo
	m	(Lbck;)V	<init>	<init>
	m	(DDD)D	a	noise
	m	(DDDDD)D	a	noise
	m	(DDD[D)D	a	noiseWithDerivative
	m	(IDDD)D	a	gradDot
	m	(I)I	a	p
	m	(IIIDDDD)D	a	sampleAndLerp
	m	(IIIDDD[D)D	a	sampleWithDerivative
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
c	ezn	net/minecraft/world/level/levelgen/synth/NoiseUtils
	m	()V	<init>	<init>
	m	(DD)D	a	biasTowardsExtreme
	m	(Ljava/lang/StringBuilder;DDD[B)V	a	parityNoiseOctaveConfigString
	m	(Ljava/lang/StringBuilder;DDD[I)V	a	parityNoiseOctaveConfigString
c	ezo	net/minecraft/world/level/levelgen/synth/NormalNoise
	f	D	a	INPUT_FACTOR
	f	D	b	TARGET_DEVIATION
	f	D	c	valueFactor
	f	Lezp;	d	first
	f	Lezp;	e	second
	f	D	f	maxValue
	f	Lezo$a;	g	parameters
	m	(Lbck;Lezo$a;)Lezo;	a	createLegacyNetherBiome
	m	(Lbck;I[D)Lezo;	a	create
	m	(Lbck;Lezo$a;)Lezo;	b	create
	m	(Lbck;Lezo$a;Z)V	<init>	<init>
	m	()D	a	maxValue
	m	(I)D	a	expectedDeviation
	m	(DDD)D	a	getValue
	m	()Lezo$a;	b	parameters
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
c	ezo$a	net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	Lcom/mojang/serialization/Codec;	a	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	m	(ILjava/util/List;)V	<init>	<init>
	m	(ID[D)V	<init>	<init>
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	firstOctave
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	amplitudes
	m	(DLit/unimi/dsi/fastutil/doubles/DoubleArrayList;)V	a	lambda$new$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ezp	net/minecraft/world/level/levelgen/synth/PerlinNoise
	f	I	a	ROUND_OFF
	f	[Lezm;	b	noiseLevels
	f	I	c	firstOctave
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	amplitudes
	f	D	e	lowestFreqValueFactor
	f	D	f	lowestFreqInputFactor
	f	D	g	maxValue
	m	(Lbck;Ljava/util/stream/IntStream;)Lezp;	a	createLegacyForBlendedNoise
	m	(Lbck;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lezp;	a	createLegacyForLegacyNetherBiome
	m	(Lbck;Ljava/util/stream/IntStream;)Lezp;	b	create
	m	(Lbck;Ljava/util/List;)Lezp;	a	create
	m	(Lbck;ID[D)Lezp;	a	create
	m	(Lbck;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lezp;	b	create
	m	(Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair;	a	makeAmplitudes
	m	(Lbck;Lcom/mojang/datafixers/util/Pair;Z)V	<init>	<init>
	m	()D	a	maxValue
	m	(Lbck;)V	a	skipOctave
	m	(DDD)D	a	getValue
	m	(DDDDDZ)D	a	getValue
	m	(D)D	a	maxBrokenValue
	m	(D)D	c	edgeValue
	m	(I)Lezm;	a	getOctaveNoise
	m	(D)D	b	wrap
	m	()I	b	firstOctave
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	amplitudes
	m	(Ljava/lang/StringBuilder;)V	a	parityConfigString
	m	(Ljava/lang/Double;)Ljava/lang/String;	a	lambda$parityConfigString$1
	m	(Ljava/lang/Double;)Z	b	lambda$new$0
c	ezq	net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise
	f	[Lezr;	a	noiseLevels
	f	D	b	highestFreqValueFactor
	f	D	c	highestFreqInputFactor
	m	(Lbck;Ljava/util/List;)V	<init>	<init>
	m	(Lbck;Lit/unimi/dsi/fastutil/ints/IntSortedSet;)V	<init>	<init>
	m	(DDZ)D	a	getValue
c	ezr	net/minecraft/world/level/levelgen/synth/SimplexNoise
	f	[[I	a	GRADIENT
	f	D	e	SQRT_3
	f	D	f	F2
	f	D	g	G2
	f	[I	h	p
	f	D	b	xo
	f	D	c	yo
	f	D	d	zo
	m	(Lbck;)V	<init>	<init>
	m	(I)I	a	p
	m	([IDDD)D	a	dot
	m	(IDDDD)D	a	getCornerNoise3D
	m	(DD)D	a	getValue
	m	(DDD)D	a	getValue
	m	()V	<clinit>	<clinit>
c	ezs	net/minecraft/world/level/levelgen/synth/package-info
c	ezt	net/minecraft/world/level/lighting/BlockLightEngine
	f	Ljb$a;	g	mutablePos
	m	(Legl;)V	<init>	<init>
	m	(Legl;Lezu;)V	<init>	<init>
	m	(J)V	a	checkNode
	m	(JJI)V	a	propagateIncrease
	m	(JJ)V	a	propagateDecrease
	m	(JLeeb;)I	a	getEmission
	m	(Ldlz;)V	b	propagateLightSources
	m	(Ljb;Leeb;)V	a	lambda$propagateLightSources$0
c	ezu	net/minecraft/world/level/lighting/BlockLightSectionStorage
	m	(Legl;)V	<init>	<init>
	m	(J)I	a	getLightValue
c	ezu$a	net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
	m	()Lezu$a;	a	copy
	m	()Lezw;	b	copy
c	ezv	net/minecraft/world/level/lighting/ChunkSkyLightSources
	f	I	b	SIZE
	f	I	a	NEGATIVE_INFINITY
	f	I	c	minY
	f	Lbao;	d	heightmap
	f	Ljb$a;	e	mutablePos1
	f	Ljb$a;	f	mutablePos2
	m	(Ldmw;)V	<init>	<init>
	m	(Lefy;)V	a	fillFrom
	m	(Lefy;III)I	a	findLowestSourceY
	m	(Ldly;III)Z	a	update
	m	(Ldly;IILjb;Leeb;Ljb;Leeb;)Z	a	updateEdge
	m	(Ldly;Ljb;Leeb;)I	a	findLowestSourceBelow
	m	(Leeb;Leeb;)Z	a	isEdgeOccluded
	m	(II)I	a	getLowestSourceY
	m	()I	a	getHighestLowestSourceY
	m	(I)V	a	fill
	m	(II)V	b	set
	m	(I)I	b	get
	m	(I)I	c	extendSourcesBelowWorld
	m	(II)I	c	index
c	ezw	net/minecraft/world/level/lighting/DataLayerStorageMap
	f	I	b	CACHE_SIZE
	f	[J	c	lastSectionKeys
	f	[Legd;	d	lastSections
	f	Z	e	cacheEnabled
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;	a	map
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;)V	<init>	<init>
	m	()Lezw;	b	copy
	m	(J)Legd;	a	copyDataLayer
	m	(J)Z	b	hasLayer
	m	(J)Legd;	c	getLayer
	m	(J)Legd;	d	removeLayer
	m	(JLegd;)V	a	setLayer
	m	()V	c	clearCache
	m	()V	d	disableCache
c	ezx	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint
	f	J	e	SOURCE
	f	I	a	NO_COMPUTED_LEVEL
	f	I	f	levelCount
	f	Lfab;	b	priorityQueue
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	c	computedLevels
	f	Z	d	hasWork
	m	(III)V	<init>	<init>
	m	(J)V	d	removeFromQueue
	m	(Ljava/util/function/LongPredicate;)V	a	removeIf
	m	(II)I	a	calculatePriority
	m	(J)V	e	checkNode
	m	(JJIZ)V	a	checkEdge
	m	(JJIIIZ)V	a	checkEdge
	m	(JJIZ)V	b	checkNeighbor
	m	()Z	b	hasWork
	m	(I)I	b	runUpdates
	m	()I	c	getQueueSize
	m	(J)Z	a	isSource
	m	(JJI)I	a	getComputedLevel
	m	(JIZ)V	a	checkNeighborsAfterUpdate
	m	(J)I	c	getLevel
	m	(JI)V	a	setLevel
	m	(JJI)I	b	computeLevelFromNeighbor
	m	(Ljava/util/function/LongPredicate;Lit/unimi/dsi/fastutil/longs/LongList;J)V	a	lambda$removeIf$0
c	ezx$1	net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint$1
	f	I	a	val$minMapSize
	f	Lezx;	b	this$0
	m	(Lezx;IFI)V	<init>	<init>
	m	(I)V	rehash	rehash
c	ezy	net/minecraft/world/level/lighting/LayerLightEventListener
	m	(Lke;)Legd;	a	getDataLayerData
	m	(Ljb;)I	b	getLightValue
c	ezy$a	net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener
	f	Lezy$a;	a	INSTANCE
	f	[Lezy$a;	b	$VALUES
	m	()[Lezy$a;	values	values
	m	(Ljava/lang/String;)Lezy$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	(Lke;)Legd;	a	getDataLayerData
	m	(Ljb;)I	b	getLightValue
	m	(Ljb;)V	a	checkBlock
	m	()Z	N_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Lke;Z)V	a	updateSectionStatus
	m	(Ldlz;Z)V	a	setLightEnabled
	m	(Ldlz;)V	b	propagateLightSources
	m	()[Lezy$a;	c	$values
	m	()V	<clinit>	<clinit>
c	ezz	net/minecraft/world/level/lighting/LayerLightSectionStorage
	f	Ldnd;	i	layer
	f	Legl;	a	chunkSource
	f	Lit/unimi/dsi/fastutil/longs/Long2ByteMap;	b	sectionStates
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	j	columnsWithSources
	f	Lezw;	c	visibleSectionData
	f	Lezw;	d	updatingSectionData
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	e	changedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	f	sectionsAffectedByLightUpdates
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	g	queuedSections
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	k	columnsToRetainQueuedDataFor
	f	Lit/unimi/dsi/fastutil/longs/LongSet;	l	toRemove
	f	Z	h	hasInconsistencies
	m	(Ldnd;Legl;Lezw;)V	<init>	<init>
	m	(J)Z	b	storingLightForSection
	m	(JZ)Legd;	a	getDataLayer
	m	(Lezw;J)Legd;	a	getDataLayer
	m	(J)Legd;	c	getDataLayerToWrite
	m	(J)Legd;	d	getDataLayerData
	m	(J)I	a	getLightValue
	m	(J)I	e	getStoredLevel
	m	(JI)V	a	setStoredLevel
	m	(J)V	f	markSectionAndNeighborsAsAffected
	m	(J)Legd;	g	createDataLayer
	m	()Z	a	hasInconsistencies
	m	(Lfac;)V	a	markNewInconsistencies
	m	(J)V	h	onNodeAdded
	m	(J)V	i	onNodeRemoved
	m	(JZ)V	b	setLightEnabled
	m	(J)Z	j	lightOnInSection
	m	(J)Z	k	lightOnInColumn
	m	(JZ)V	c	retainData
	m	(JLegd;)V	a	queueSectionData
	m	(JZ)V	d	updateSectionStatus
	m	(JB)V	a	putSectionState
	m	(J)V	m	initializeSection
	m	(J)V	n	removeSection
	m	()V	b	swapSectionMap
	m	(J)Lezz$b;	l	getDebugSectionType
c	ezz$a	net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState
	f	B	a	EMPTY
	f	I	b	MIN_NEIGHBORS
	f	I	c	MAX_NEIGHBORS
	f	B	d	HAS_DATA_BIT
	f	B	e	NEIGHBOR_COUNT_BITS
	m	()V	<init>	<init>
	m	(BZ)B	a	hasData
	m	(BI)B	a	neighborCount
	m	(B)Z	a	hasData
	m	(B)I	b	neighborCount
	m	(B)Lezz$b;	c	type
c	ezz$b	net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType
	f	Lezz$b;	a	EMPTY
	f	Lezz$b;	b	LIGHT_ONLY
	f	Lezz$b;	c	LIGHT_AND_DATA
	f	Ljava/lang/String;	d	display
	f	[Lezz$b;	e	$VALUES
	m	()[Lezz$b;	values	values
	m	(Ljava/lang/String;)Lezz$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	display
	m	()[Lezz$b;	b	$values
	m	()V	<clinit>	<clinit>
c	faa	net/minecraft/world/level/lighting/LevelLightEngine
	f	I	b	LIGHT_SECTION_PADDING
	f	Lfaa;	c	EMPTY
	f	Ldmw;	d	levelHeightAccessor
	f	Lfac;	a	blockEngine
	f	Lfac;	e	skyEngine
	m	(Legl;ZZ)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Ljb;)V	a	checkBlock
	m	()Z	N_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Lke;Z)V	a	updateSectionStatus
	m	(Ldlz;Z)V	a	setLightEnabled
	m	(Ldlz;)V	b	propagateLightSources
	m	(Ldnd;)Lezy;	a	getLayerListener
	m	(Ldnd;Lke;)Ljava/lang/String;	a	getDebugData
	m	(Ldnd;Lke;)Lezz$b;	b	getDebugSectionType
	m	(Ldnd;Lke;Legd;)V	a	queueSectionData
	m	(Ldlz;Z)V	b	retainData
	m	(Ljb;I)I	a	getRawBrightness
	m	(J)Z	a	lightOnInColumn
	m	()I	c	getLightSectionCount
	m	()I	d	getMinLightSection
	m	()I	e	getMaxLightSection
	m	()V	<clinit>	<clinit>
c	fab	net/minecraft/world/level/lighting/LeveledPriorityQueue
	f	I	a	levelCount
	f	[Lit/unimi/dsi/fastutil/longs/LongLinkedOpenHashSet;	b	queues
	f	I	c	firstQueuedLevel
	m	(II)V	<init>	<init>
	m	()J	a	removeFirstLong
	m	()Z	b	isEmpty
	m	(JII)V	a	dequeue
	m	(JI)V	a	enqueue
	m	(I)V	a	checkFirstQueuedLevel
c	fab$1	net/minecraft/world/level/lighting/LeveledPriorityQueue$1
	f	I	a	val$minSize
	f	Lfab;	b	this$0
	m	(Lfab;IFI)V	<init>	<init>
	m	(I)V	rehash	rehash
c	fac	net/minecraft/world/level/lighting/LightEngine
	f	I	a	MAX_LEVEL
	f	I	b	MIN_OPACITY
	f	J	c	PULL_LIGHT_IN_ENTRY
	f	I	g	MIN_QUEUE_SIZE
	f	[Ljh;	d	PROPAGATION_DIRECTIONS
	f	Legl;	e	chunkSource
	f	Lezz;	f	storage
	f	Lit/unimi/dsi/fastutil/longs/LongOpenHashSet;	h	blockNodesToCheck
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	i	decreaseQueue
	f	Lit/unimi/dsi/fastutil/longs/LongArrayFIFOQueue;	j	increaseQueue
	f	I	k	CACHE_SIZE
	f	[J	l	lastChunkPos
	f	[Legk;	m	lastChunk
	m	(Legl;Lezz;)V	<init>	<init>
	m	(Leeb;Leeb;)Z	a	hasDifferentLightProperties
	m	(Leeb;Leeb;Ljh;I)I	a	getLightBlockInto
	m	(Leeb;Ljh;)Lfjm;	a	getOcclusionShape
	m	(Leeb;)Z	a	isEmptyShape
	m	(Ljb;)Leeb;	c	getState
	m	(Leeb;)I	b	getOpacity
	m	(Leeb;Leeb;Ljh;)Z	a	shapeOccludes
	m	(II)Legk;	a	getChunk
	m	()V	c	clearChunkCache
	m	(Ljb;)V	a	checkBlock
	m	(JLegd;)V	a	queueSectionData
	m	(Ldlz;Z)V	b	retainData
	m	(Lke;Z)V	a	updateSectionStatus
	m	(Ldlz;Z)V	a	setLightEnabled
	m	()I	a	runLightUpdates
	m	()I	d	propagateIncreases
	m	()I	e	propagateDecreases
	m	(JJ)V	b	enqueueDecrease
	m	(JJ)V	c	enqueueIncrease
	m	()Z	N_	hasLightWork
	m	(Lke;)Legd;	a	getDataLayerData
	m	(Ljb;)I	b	getLightValue
	m	(J)Ljava/lang/String;	b	getDebugData
	m	(J)Lezz$b;	c	getDebugSectionType
	m	(J)V	a	checkNode
	m	(JJI)V	a	propagateIncrease
	m	(JJ)V	a	propagateDecrease
	m	()V	<clinit>	<clinit>
c	fac$a	net/minecraft/world/level/lighting/LightEngine$QueueEntry
	f	I	a	FROM_LEVEL_BITS
	f	I	b	DIRECTION_BITS
	f	J	c	LEVEL_MASK
	f	J	d	DIRECTIONS_MASK
	f	J	e	FLAG_FROM_EMPTY_SHAPE
	f	J	f	FLAG_INCREASE_FROM_EMISSION
	m	()V	<init>	<init>
	m	(ILjh;)J	a	decreaseSkipOneDirection
	m	(I)J	a	decreaseAllDirections
	m	(IZ)J	a	increaseLightFromEmission
	m	(IZLjh;)J	a	increaseSkipOneDirection
	m	(IZLjh;)J	b	increaseOnlyOneDirection
	m	(ZZZZZ)J	a	increaseSkySourceInDirections
	m	(J)I	a	getFromLevel
	m	(J)Z	b	isFromEmptyShape
	m	(J)Z	c	isIncreaseFromEmission
	m	(JLjh;)Z	a	shouldPropagateInDirection
	m	(JI)J	a	withLevel
	m	(JLjh;)J	b	withDirection
	m	(JLjh;)J	c	withoutDirection
c	fad	net/minecraft/world/level/lighting/LightEventListener
	m	(Ljb;)V	a	checkBlock
	m	()Z	N_	hasLightWork
	m	()I	a	runLightUpdates
	m	(Ljb;Z)V	a	updateSectionStatus
	m	(Lke;Z)V	a	updateSectionStatus
	m	(Ldlz;Z)V	a	setLightEnabled
	m	(Ldlz;)V	b	propagateLightSources
c	fae	net/minecraft/world/level/lighting/SkyLightEngine
	f	J	g	REMOVE_TOP_SKY_SOURCE_ENTRY
	f	J	h	REMOVE_SKY_SOURCE_ENTRY
	f	J	i	ADD_SKY_SOURCE_ENTRY
	f	Ljb$a;	j	mutablePos
	f	Lezv;	k	emptyChunkSources
	m	(Legl;)V	<init>	<init>
	m	(Legl;Lfaf;)V	<init>	<init>
	m	(I)Z	a	isSourceLevel
	m	(III)I	a	getLowestSourceY
	m	(II)Lezv;	b	getChunkSources
	m	(J)V	a	checkNode
	m	(III)V	b	updateSourcesInColumn
	m	(IIII)V	a	removeSourcesBelow
	m	(IIII)V	b	addSourcesAbove
	m	(JJI)V	a	propagateIncrease
	m	(JJ)V	a	propagateDecrease
	m	(J)I	d	countEmptySectionsBelowIfAtBorder
	m	(JLjh;IZI)V	a	propagateFromEmptySections
	m	(Ljh;II)Z	a	crossedSectionEdge
	m	(Ldlz;Z)V	a	setLightEnabled
	m	(Ldlz;)V	b	propagateLightSources
	m	()V	<clinit>	<clinit>
c	fae$1	net/minecraft/world/level/lighting/SkyLightEngine$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction
	m	()V	<clinit>	<clinit>
c	faf	net/minecraft/world/level/lighting/SkyLightSectionStorage
	m	(Legl;)V	<init>	<init>
	m	(J)I	a	getLightValue
	m	(JZ)I	e	getLightValue
	m	(J)V	h	onNodeAdded
	m	(J)V	i	onNodeRemoved
	m	(J)Legd;	g	createDataLayer
	m	(Legd;)Legd;	a	repeatFirstLayer
	m	(I)Z	a	hasLightDataAtOrBelow
	m	(J)Z	m	isAboveData
	m	(J)I	n	getTopSectionY
	m	()I	c	getBottomSectionY
c	faf$a	net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap
	f	I	b	currentLowestY
	f	Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;	c	topSections
	m	(Lit/unimi/dsi/fastutil/longs/Long2ObjectOpenHashMap;Lit/unimi/dsi/fastutil/longs/Long2IntOpenHashMap;I)V	<init>	<init>
	m	()Lfaf$a;	a	copy
	m	()Lezw;	b	copy
c	fag	net/minecraft/world/level/lighting/SpatialLongSet
	f	Lfag$a;	a	map
	m	(IF)V	<init>	<init>
	m	(J)Z	add	add
	m	(J)Z	rem	rem
	m	()J	removeFirstLong	removeFirstLong
	m	()I	size	size
	m	()Z	isEmpty	isEmpty
c	fag$a	net/minecraft/world/level/lighting/SpatialLongSet$InternalMap
	f	I	a	X_BITS
	f	I	b	Z_BITS
	f	I	c	Y_BITS
	f	I	d	Y_OFFSET
	f	I	e	Z_OFFSET
	f	I	g	X_OFFSET
	f	J	h	OUTER_MASK
	f	I	i	lastPos
	f	J	j	lastOuterKey
	f	I	k	minSize
	m	(IF)V	<init>	<init>
	m	(J)J	a	getOuterKey
	m	(J)I	b	getInnerKey
	m	(JI)J	a	getFullKey
	m	(J)Z	c	addBit
	m	(IJ)Z	a	replaceBit
	m	(J)Z	d	removeBit
	m	(J)Z	e	removeFromNullEntry
	m	(IJ)Z	b	removeFromEntry
	m	()J	a	removeFirstBit
	m	(I)V	rehash	rehash
	m	()V	<clinit>	<clinit>
c	fah	net/minecraft/world/level/lighting/package-info
c	fai	net/minecraft/world/level/material/EmptyFluid
	m	()V	<init>	<init>
	m	()Ldcr;	a	getBucket
	m	(Lfal;Ldly;Ljb;Lfak;Ljh;)Z	a	canBeReplacedWith
	m	(Ldly;Ljb;Lfal;)Lfis;	a	getFlow
	m	(Ldmx;)I	a	getTickDelay
	m	()Z	b	isEmpty
	m	()F	c	getExplosionResistance
	m	(Lfal;Ldly;Ljb;)F	a	getHeight
	m	(Lfal;)F	a	getOwnHeight
	m	(Lfal;)Leeb;	b	createLegacyBlock
	m	(Lfal;)Z	c	isSource
	m	(Lfal;)I	d	getAmount
	m	(Lfal;Ldly;Ljb;)Lfjm;	b	getShape
c	faj	net/minecraft/world/level/material/FlowingFluid
	f	Lees;	a	FALLING
	f	Lefb;	b	LEVEL
	f	I	e	CACHE_SIZE
	f	Ljava/lang/ThreadLocal;	f	OCCLUSION_CACHE
	f	Ljava/util/Map;	g	shapes
	m	()V	<init>	<init>
	m	(Leec$a;)V	a	createFluidStateDefinition
	m	(Ldly;Ljb;Lfal;)Lfis;	a	getFlow
	m	(Lfal;)Z	g	affectsFlow
	m	(Ldly;Ljb;Ljh;)Z	a	isSolidFace
	m	(Laub;Ljb;Leeb;Lfal;)V	a	spread
	m	(Laub;Ljb;Lfal;Leeb;)V	a	spreadToSides
	m	(Laub;Ljb;Leeb;)Lfal;	a	getNewLiquid
	m	(Ljh;Ldly;Ljb;Leeb;Ljb;Leeb;)Z	a	canPassThroughWall
	m	()Lfak;	d	getFlowing
	m	(IZ)Lfal;	a	getFlowing
	m	()Lfak;	e	getSource
	m	(Z)Lfal;	a	getSource
	m	(Laub;)Z	a	canConvertToSource
	m	(Ldmv;Ljb;Leeb;Ljh;Lfal;)V	a	spreadTo
	m	(Ldmv;Ljb;Leeb;)V	a	beforeDestroyingBlock
	m	(Ldmx;Ljb;ILjh;Leeb;Lfaj$b;)I	a	getSlopeDistance
	m	(Ldly;Ljb;Leeb;Ljb;Leeb;)Z	a	isWaterHole
	m	(Ldly;Lfak;Ljb;Leeb;Ljh;Ljb;Leeb;Lfal;)Z	a	canPassThrough
	m	(Ldly;Ljb;Leeb;Ljh;Ljb;Leeb;Lfal;)Z	a	canMaybePassThrough
	m	(Lfal;)Z	h	isSourceBlockOfThisType
	m	(Ldmx;)I	b	getSlopeFindDistance
	m	(Ldmx;Ljb;)I	a	sourceNeighborCount
	m	(Laub;Ljb;Leeb;)Ljava/util/Map;	b	getSpread
	m	(Leeb;)Z	a	canHoldAnyFluid
	m	(Ldly;Ljb;Leeb;Lfak;)Z	a	canHoldFluid
	m	(Ldly;Ljb;Leeb;Lfak;)Z	b	canHoldSpecificFluid
	m	(Ldmx;)I	c	getDropOff
	m	(Ldmu;Ljb;Lfal;Lfal;)I	a	getSpreadDelay
	m	(Laub;Ljb;Leeb;Lfal;)V	b	tick
	m	(Lfal;)I	e	getLegacyLevel
	m	(Lfal;Ldly;Ljb;)Z	d	hasSameAbove
	m	(Lfal;Ldly;Ljb;)F	a	getHeight
	m	(Lfal;)F	a	getOwnHeight
	m	(Lfal;)I	d	getAmount
	m	(Lfal;Ldly;Ljb;)Lfjm;	b	getShape
	m	(Ldly;Ljb;Lfal;)Lfjm;	b	lambda$getShape$1
	m	()Lit/unimi/dsi/fastutil/objects/Object2ByteLinkedOpenHashMap;	l	lambda$static$0
	m	()V	<clinit>	<clinit>
c	faj$1	net/minecraft/world/level/material/FlowingFluid$1
	m	(I)V	<init>	<init>
	m	(I)V	rehash	rehash
c	faj$a	net/minecraft/world/level/material/FlowingFluid$BlockStatePairKey
	f	Leeb;	a	first
	f	Leeb;	b	second
	f	Ljh;	c	direction
	m	(Leeb;Leeb;Ljh;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Leeb;	a	first
	m	()Leeb;	b	second
	m	()Ljh;	c	direction
c	faj$b	net/minecraft/world/level/material/FlowingFluid$SpreadContext
	f	Ldly;	b	level
	f	Ljb;	c	origin
	f	Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;	d	stateCache
	f	Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;	e	holeCache
	f	Lfaj;	a	this$0
	m	(Lfaj;Ldly;Ljb;)V	<init>	<init>
	m	(Ljb;)Leeb;	a	getBlockState
	m	(Ljb;S)Leeb;	a	getBlockState
	m	(Ljb;)Z	b	isHole
	m	(Ljb;)S	c	getCacheKey
	m	(Ljb;S)Z	b	lambda$isHole$1
	m	(Ljb;S)Leeb;	c	lambda$getBlockState$0
c	fak	net/minecraft/world/level/material/Fluid
	f	Ljr;	c	FLUID_STATE_REGISTRY
	f	Leec;	d	stateDefinition
	f	Lfal;	a	defaultFluidState
	f	Ljl$c;	b	builtInRegistryHolder
	m	()V	<init>	<init>
	m	(Leec$a;)V	a	createFluidStateDefinition
	m	()Leec;	f	getStateDefinition
	m	(Lfal;)V	f	registerDefaultState
	m	()Lfal;	g	defaultFluidState
	m	()Ldcr;	a	getBucket
	m	(Ldmu;Ljb;Lfal;Lbck;)V	a	animateTick
	m	(Laub;Ljb;Leeb;Lfal;)V	b	tick
	m	(Laub;Ljb;Lfal;Lbck;)V	a	randomTick
	m	(Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()Lmc;	h	getDripParticle
	m	(Lfal;Ldly;Ljb;Lfak;Ljh;)Z	a	canBeReplacedWith
	m	(Ldly;Ljb;Lfal;)Lfis;	a	getFlow
	m	(Ldmx;)I	a	getTickDelay
	m	()Z	i	isRandomlyTicking
	m	()Z	b	isEmpty
	m	()F	c	getExplosionResistance
	m	(Lfal;Ldly;Ljb;)F	a	getHeight
	m	(Lfal;)F	a	getOwnHeight
	m	(Lfal;)Leeb;	b	createLegacyBlock
	m	(Lfal;)Z	c	isSource
	m	(Lfal;)I	d	getAmount
	m	(Lfak;)Z	a	isSame
	m	(Lbae;)Z	a	is
	m	(Lfal;Ldly;Ljb;)Lfjm;	b	getShape
	m	(Lfal;Ldly;Ljb;)Lfin;	c	getAABB
	m	()Ljava/util/Optional;	j	getPickupSound
	m	()Ljl$c;	k	builtInRegistryHolder
	m	()V	<clinit>	<clinit>
c	fal	net/minecraft/world/level/material/FluidState
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	I	f	AMOUNT_MAX
	f	I	g	AMOUNT_FULL
	m	(Lfak;Lit/unimi/dsi/fastutil/objects/Reference2ObjectArrayMap;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lfak;	a	getType
	m	()Z	b	isSource
	m	(Lfak;)Z	a	isSourceOfType
	m	()Z	c	isEmpty
	m	(Ldly;Ljb;)F	a	getHeight
	m	()F	d	getOwnHeight
	m	()I	e	getAmount
	m	(Ldly;Ljb;)Z	b	shouldRenderBackwardUpFace
	m	(Laub;Ljb;Leeb;)V	a	tick
	m	(Ldmu;Ljb;Lbck;)V	a	animateTick
	m	()Z	f	isRandomlyTicking
	m	(Laub;Ljb;Lbck;)V	a	randomTick
	m	(Ldly;Ljb;)Lfis;	c	getFlow
	m	()Leeb;	g	createLegacyBlock
	m	()Lmc;	h	getDripParticle
	m	(Lbae;)Z	a	is
	m	(Ljp;)Z	a	is
	m	(Lfak;)Z	b	is
	m	()F	i	getExplosionResistance
	m	(Ldly;Ljb;Lfak;Ljh;)Z	a	canBeReplacedWith
	m	(Ldly;Ljb;)Lfjm;	d	getShape
	m	(Ldly;Ljb;)Lfin;	e	getAABB
	m	()Ljl;	j	holder
	m	()Ljava/util/stream/Stream;	k	getTags
	m	(Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	()V	<clinit>	<clinit>
c	fam	net/minecraft/world/level/material/Fluids
	f	Lfak;	a	EMPTY
	f	Lfaj;	b	FLOWING_WATER
	f	Lfaj;	c	WATER
	f	Lfaj;	d	FLOWING_LAVA
	f	Lfaj;	e	LAVA
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lfak;)Lfak;	a	register
	m	()V	<clinit>	<clinit>
c	fan	net/minecraft/world/level/material/FogType
	f	Lfan;	a	LAVA
	f	Lfan;	b	WATER
	f	Lfan;	c	POWDER_SNOW
	f	Lfan;	d	DIMENSION_OR_BOSS
	f	Lfan;	e	ATMOSPHERIC
	f	Lfan;	f	NONE
	f	[Lfan;	g	$VALUES
	m	()[Lfan;	values	values
	m	(Ljava/lang/String;)Lfan;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfan;	a	$values
	m	()V	<clinit>	<clinit>
c	fao	net/minecraft/world/level/material/LavaFluid
	f	F	e	MIN_LEVEL_CUTOFF
	m	()V	<init>	<init>
	m	()Lfak;	d	getFlowing
	m	()Lfak;	e	getSource
	m	()Ldcr;	a	getBucket
	m	(Ldmu;Ljb;Lfal;Lbck;)V	a	animateTick
	m	(Laub;Ljb;Lfal;Lbck;)V	a	randomTick
	m	(Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldmx;Ljb;)Z	a	hasFlammableNeighbours
	m	(Ldmx;Ljb;)Z	b	isFlammable
	m	()Lmc;	h	getDripParticle
	m	(Ldmv;Ljb;Leeb;)V	a	beforeDestroyingBlock
	m	(Ldmx;)I	b	getSlopeFindDistance
	m	(Lfal;)Leeb;	b	createLegacyBlock
	m	(Lfak;)Z	a	isSame
	m	(Ldmx;)I	c	getDropOff
	m	(Lfal;Ldly;Ljb;Lfak;Ljh;)Z	a	canBeReplacedWith
	m	(Ldmx;)I	a	getTickDelay
	m	(Ldmu;Ljb;Lfal;Lfal;)I	a	getSpreadDelay
	m	(Ldmv;Ljb;)V	a	fizz
	m	(Laub;)Z	a	canConvertToSource
	m	(Ldmv;Ljb;Leeb;Ljh;Lfal;)V	a	spreadTo
	m	()Z	i	isRandomlyTicking
	m	()F	c	getExplosionResistance
	m	()Ljava/util/Optional;	j	getPickupSound
c	fao$a	net/minecraft/world/level/material/LavaFluid$Flowing
	m	()V	<init>	<init>
	m	(Leec$a;)V	a	createFluidStateDefinition
	m	(Lfal;)I	d	getAmount
	m	(Lfal;)Z	c	isSource
c	fao$b	net/minecraft/world/level/material/LavaFluid$Source
	m	()V	<init>	<init>
	m	(Lfal;)I	d	getAmount
	m	(Lfal;)Z	c	isSource
c	fap	net/minecraft/world/level/material/MapColor
	f	[Lfap;	am	MATERIAL_COLORS
	f	Lfap;	a	NONE
	f	Lfap;	b	GRASS
	f	Lfap;	c	SAND
	f	Lfap;	d	WOOL
	f	Lfap;	e	FIRE
	f	Lfap;	f	ICE
	f	Lfap;	g	METAL
	f	Lfap;	h	PLANT
	f	Lfap;	i	SNOW
	f	Lfap;	j	CLAY
	f	Lfap;	k	DIRT
	f	Lfap;	l	STONE
	f	Lfap;	m	WATER
	f	Lfap;	n	WOOD
	f	Lfap;	o	QUARTZ
	f	Lfap;	p	COLOR_ORANGE
	f	Lfap;	q	COLOR_MAGENTA
	f	Lfap;	r	COLOR_LIGHT_BLUE
	f	Lfap;	s	COLOR_YELLOW
	f	Lfap;	t	COLOR_LIGHT_GREEN
	f	Lfap;	u	COLOR_PINK
	f	Lfap;	v	COLOR_GRAY
	f	Lfap;	w	COLOR_LIGHT_GRAY
	f	Lfap;	x	COLOR_CYAN
	f	Lfap;	y	COLOR_PURPLE
	f	Lfap;	z	COLOR_BLUE
	f	Lfap;	A	COLOR_BROWN
	f	Lfap;	B	COLOR_GREEN
	f	Lfap;	C	COLOR_RED
	f	Lfap;	D	COLOR_BLACK
	f	Lfap;	E	GOLD
	f	Lfap;	F	DIAMOND
	f	Lfap;	G	LAPIS
	f	Lfap;	H	EMERALD
	f	Lfap;	I	PODZOL
	f	Lfap;	J	NETHER
	f	Lfap;	K	TERRACOTTA_WHITE
	f	Lfap;	L	TERRACOTTA_ORANGE
	f	Lfap;	M	TERRACOTTA_MAGENTA
	f	Lfap;	N	TERRACOTTA_LIGHT_BLUE
	f	Lfap;	O	TERRACOTTA_YELLOW
	f	Lfap;	P	TERRACOTTA_LIGHT_GREEN
	f	Lfap;	Q	TERRACOTTA_PINK
	f	Lfap;	R	TERRACOTTA_GRAY
	f	Lfap;	S	TERRACOTTA_LIGHT_GRAY
	f	Lfap;	T	TERRACOTTA_CYAN
	f	Lfap;	U	TERRACOTTA_PURPLE
	f	Lfap;	V	TERRACOTTA_BLUE
	f	Lfap;	W	TERRACOTTA_BROWN
	f	Lfap;	X	TERRACOTTA_GREEN
	f	Lfap;	Y	TERRACOTTA_RED
	f	Lfap;	Z	TERRACOTTA_BLACK
	f	Lfap;	aa	CRIMSON_NYLIUM
	f	Lfap;	ab	CRIMSON_STEM
	f	Lfap;	ac	CRIMSON_HYPHAE
	f	Lfap;	ad	WARPED_NYLIUM
	f	Lfap;	ae	WARPED_STEM
	f	Lfap;	af	WARPED_HYPHAE
	f	Lfap;	ag	WARPED_WART_BLOCK
	f	Lfap;	ah	DEEPSLATE
	f	Lfap;	ai	RAW_IRON
	f	Lfap;	aj	GLOW_LICHEN
	f	I	ak	col
	f	I	al	id
	m	(II)V	<init>	<init>
	m	(Lfap$a;)I	a	calculateARGBColor
	m	(I)Lfap;	a	byId
	m	(I)Lfap;	c	byIdUnsafe
	m	(I)I	b	getColorFromPackedId
	m	(Lfap$a;)B	b	getPackedId
	m	()V	<clinit>	<clinit>
c	fap$a	net/minecraft/world/level/material/MapColor$Brightness
	f	Lfap$a;	a	LOW
	f	Lfap$a;	b	NORMAL
	f	Lfap$a;	c	HIGH
	f	Lfap$a;	d	LOWEST
	f	[Lfap$a;	g	VALUES
	f	I	e	id
	f	I	f	modifier
	f	[Lfap$a;	h	$VALUES
	m	()[Lfap$a;	values	values
	m	(Ljava/lang/String;)Lfap$a;	valueOf	valueOf
	m	(Ljava/lang/String;III)V	<init>	<init>
	m	(I)Lfap$a;	a	byId
	m	(I)Lfap$a;	b	byIdUnsafe
	m	()[Lfap$a;	a	$values
	m	()V	<clinit>	<clinit>
c	faq	net/minecraft/world/level/material/PushReaction
	f	Lfaq;	a	NORMAL
	f	Lfaq;	b	DESTROY
	f	Lfaq;	c	BLOCK
	f	Lfaq;	d	IGNORE
	f	Lfaq;	e	PUSH_ONLY
	f	[Lfaq;	f	$VALUES
	m	()[Lfaq;	values	values
	m	(Ljava/lang/String;)Lfaq;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfaq;	a	$values
	m	()V	<clinit>	<clinit>
c	far	net/minecraft/world/level/material/WaterFluid
	m	()V	<init>	<init>
	m	()Lfak;	d	getFlowing
	m	()Lfak;	e	getSource
	m	()Ldcr;	a	getBucket
	m	(Ldmu;Ljb;Lfal;Lbck;)V	a	animateTick
	m	()Lmc;	h	getDripParticle
	m	(Laub;)Z	a	canConvertToSource
	m	(Ldmv;Ljb;Leeb;)V	a	beforeDestroyingBlock
	m	(Ldmu;Ljb;Lbzm;Lcae;)V	a	entityInside
	m	(Ldmx;)I	b	getSlopeFindDistance
	m	(Lfal;)Leeb;	b	createLegacyBlock
	m	(Lfak;)Z	a	isSame
	m	(Ldmx;)I	c	getDropOff
	m	(Ldmx;)I	a	getTickDelay
	m	(Lfal;Ldly;Ljb;Lfak;Ljh;)Z	a	canBeReplacedWith
	m	()F	c	getExplosionResistance
	m	()Ljava/util/Optional;	j	getPickupSound
c	far$a	net/minecraft/world/level/material/WaterFluid$Flowing
	m	()V	<init>	<init>
	m	(Leec$a;)V	a	createFluidStateDefinition
	m	(Lfal;)I	d	getAmount
	m	(Lfal;)Z	c	isSource
c	far$b	net/minecraft/world/level/material/WaterFluid$Source
	m	()V	<init>	<init>
	m	(Lfal;)I	d	getAmount
	m	(Lfal;)Z	c	isSource
c	fas	net/minecraft/world/level/material/package-info
c	fat	net/minecraft/world/level/package-info
c	fau	net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator
	f	Z	a	prefersShallowSwimming
	f	F	m	oldWalkableCost
	f	F	n	oldWaterBorderCost
	m	(Z)V	<init>	<init>
	m	(Ldnh;Lcao;)V	a	prepare
	m	()V	b	done
	m	()Lfax;	a	getStart
	m	(DDD)Lfbg;	a	getTarget
	m	([Lfax;Lfax;)I	a	getNeighbors
	m	(Lfax;Lfax;)Z	b	isVerticalNeighborValid
	m	()Z	c	isAmphibious
	m	(Lfbe;III)Lfbc;	a	getPathType
c	fav	net/minecraft/world/level/pathfinder/BinaryHeap
	f	[Lfax;	a	heap
	f	I	b	size
	m	()V	<init>	<init>
	m	(Lfax;)Lfax;	a	insert
	m	()V	a	clear
	m	()Lfax;	b	peek
	m	()Lfax;	c	pop
	m	(Lfax;)V	b	remove
	m	(Lfax;F)V	a	changeCost
	m	()I	d	size
	m	(I)V	a	upHeap
	m	(I)V	b	downHeap
	m	()Z	e	isEmpty
	m	()[Lfax;	f	getHeap
c	faw	net/minecraft/world/level/pathfinder/FlyNodeEvaluator
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	a	pathTypeByPosCache
	f	F	m	SMALL_MOB_SIZE
	f	F	n	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX
	f	I	o	MAX_START_NODE_CANDIDATES
	m	()V	<init>	<init>
	m	(Ldnh;Lcao;)V	a	prepare
	m	()V	b	done
	m	()Lfax;	a	getStart
	m	(Ljb;)Z	a	canStartAt
	m	(DDD)Lfbg;	a	getTarget
	m	([Lfax;Lfax;)I	a	getNeighbors
	m	(Lfax;)Z	b	hasMalus
	m	(Lfax;)Z	c	isOpen
	m	(III)Lfax;	a	findAcceptedNode
	m	(III)Lfbc;	b	getCachedPathType
	m	(Lfbe;III)Lfbc;	a	getPathType
	m	(Lcao;)Ljava/lang/Iterable;	a	iteratePathfindingStartNodeCandidatePositions
	m	(IIIJ)Lfbc;	a	lambda$getCachedPathType$0
c	fax	net/minecraft/world/level/pathfinder/Node
	f	I	a	x
	f	I	b	y
	f	I	c	z
	f	I	m	hash
	f	I	d	heapIdx
	f	F	e	g
	f	F	f	h
	f	F	g	f
	f	Lfax;	h	cameFrom
	f	Z	i	closed
	f	F	j	walkedDistance
	f	F	k	costMalus
	f	Lfbc;	l	type
	m	(III)V	<init>	<init>
	m	(III)Lfax;	a	cloneAndMove
	m	(III)I	b	createHash
	m	(Lfax;)F	a	distanceTo
	m	(Lfax;)F	b	distanceToXZ
	m	(Ljb;)F	a	distanceTo
	m	(Lfax;)F	c	distanceToSqr
	m	(Ljb;)F	b	distanceToSqr
	m	(Lfax;)F	d	distanceManhattan
	m	(Ljb;)F	c	distanceManhattan
	m	()Ljb;	a	asBlockPos
	m	()Lfis;	b	asVec3
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Z	c	inOpenSet
	m	()Ljava/lang/String;	toString	toString
	m	(Lwg;)V	a	writeToStream
	m	(Lwg;)Lfax;	b	createFromStream
	m	(Lwg;Lfax;)V	a	readContents
c	fay	net/minecraft/world/level/pathfinder/NodeEvaluator
	f	Lfbe;	b	currentContext
	f	Lcao;	c	mob
	f	Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;	d	nodes
	f	I	e	entityWidth
	f	I	f	entityHeight
	f	I	g	entityDepth
	f	Z	h	canPassDoors
	f	Z	i	canOpenDoors
	f	Z	j	canFloat
	f	Z	k	canWalkOverFences
	m	()V	<init>	<init>
	m	(Ldnh;Lcao;)V	a	prepare
	m	()V	b	done
	m	(Ljb;)Lfax;	b	getNode
	m	(III)Lfax;	c	getNode
	m	()Lfax;	a	getStart
	m	(DDD)Lfbg;	a	getTarget
	m	(DDD)Lfbg;	b	getTargetNodeAt
	m	([Lfax;Lfax;)I	a	getNeighbors
	m	(Lfbe;IIILcao;)Lfbc;	a	getPathTypeOfMob
	m	(Lfbe;III)Lfbc;	a	getPathType
	m	(Lcao;Ljb;)Lfbc;	a	getPathType
	m	(Z)V	a	setCanPassDoors
	m	(Z)V	b	setCanOpenDoors
	m	(Z)V	c	setCanFloat
	m	(Z)V	d	setCanWalkOverFences
	m	()Z	d	canPassDoors
	m	()Z	e	canOpenDoors
	m	()Z	f	canFloat
	m	()Z	g	canWalkOverFences
	m	(Leeb;)Z	a	isBurningBlock
	m	(IIII)Lfax;	a	lambda$getNode$0
c	faz	net/minecraft/world/level/pathfinder/Path
	f	Ljava/util/List;	a	nodes
	f	Lfaz$a;	b	debugData
	f	I	c	nextNodeIndex
	f	Ljb;	d	target
	f	F	e	distToTarget
	f	Z	f	reached
	m	(Ljava/util/List;Ljb;Z)V	<init>	<init>
	m	()V	a	advance
	m	()Z	b	notStarted
	m	()Z	c	isDone
	m	()Lfax;	d	getEndNode
	m	(I)Lfax;	a	getNode
	m	(I)V	b	truncateNodes
	m	(ILfax;)V	a	replaceNode
	m	()I	e	getNodeCount
	m	()I	f	getNextNodeIndex
	m	(I)V	c	setNextNodeIndex
	m	(Lbzm;I)Lfis;	a	getEntityPosAtNode
	m	(I)Ljb;	d	getNodePos
	m	(Lbzm;)Lfis;	a	getNextEntityPos
	m	()Ljb;	g	getNextNodePos
	m	()Lfax;	h	getNextNode
	m	()Lfax;	i	getPreviousNode
	m	(Lfaz;)Z	a	sameAs
	m	()Z	j	canReach
	m	([Lfax;[Lfax;Ljava/util/Set;)V	a	setDebug
	m	()Lfaz$a;	k	debugData
	m	(Lwg;)V	a	writeToStream
	m	(Lwg;)Lfaz;	b	createFromStream
	m	()Ljava/lang/String;	toString	toString
	m	()Ljb;	l	getTarget
	m	()F	m	getDistToTarget
	m	(Lwg;)[Lfax;	c	readNodeArray
	m	(Lwg;[Lfax;)V	a	writeNodeArray
	m	()Lfaz;	n	copy
	m	(Lwg;Lfax;)V	a	lambda$writeToStream$0
c	faz$a	net/minecraft/world/level/pathfinder/Path$DebugData
	f	[Lfax;	a	openSet
	f	[Lfax;	b	closedSet
	f	Ljava/util/Set;	c	targetNodes
	m	([Lfax;[Lfax;Ljava/util/Set;)V	<init>	<init>
	m	(Lwg;)V	a	write
	m	(Lwg;)Lfaz$a;	b	read
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()[Lfax;	a	openSet
	m	()[Lfax;	b	closedSet
	m	()Ljava/util/Set;	c	targetNodes
	m	(Lwg;Lfbg;)V	a	lambda$write$0
c	fba	net/minecraft/world/level/pathfinder/PathComputationType
	f	Lfba;	a	LAND
	f	Lfba;	b	WATER
	f	Lfba;	c	AIR
	f	[Lfba;	d	$VALUES
	m	()[Lfba;	values	values
	m	(Ljava/lang/String;)Lfba;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfba;	a	$values
	m	()V	<clinit>	<clinit>
c	fbb	net/minecraft/world/level/pathfinder/PathFinder
	f	F	a	FUDGING
	f	[Lfax;	b	neighbors
	f	I	c	maxVisitedNodes
	f	Lfay;	d	nodeEvaluator
	f	Z	e	DEBUG
	f	Lfav;	f	openSet
	m	(Lfay;I)V	<init>	<init>
	m	(I)V	a	setMaxVisitedNodes
	m	(Ldnh;Lcao;Ljava/util/Set;FIF)Lfaz;	a	findPath
	m	(Lfax;Ljava/util/Map;FIF)Lfaz;	a	findPath
	m	(Lfax;Lfax;)F	a	distance
	m	(Lfax;Ljava/util/Set;)F	a	getBestH
	m	(Lfax;Ljb;Z)Lfaz;	a	reconstructPath
	m	(I)[Lfax;	b	lambda$findPath$3
	m	(Ljava/util/Map;Lfbg;)Lfaz;	a	lambda$findPath$2
	m	(Ljava/util/Map;Lfbg;)Lfaz;	b	lambda$findPath$1
	m	(Ljb;)Lfbg;	a	lambda$findPath$0
c	fbc	net/minecraft/world/level/pathfinder/PathType
	f	Lfbc;	a	BLOCKED
	f	Lfbc;	b	OPEN
	f	Lfbc;	c	WALKABLE
	f	Lfbc;	d	WALKABLE_DOOR
	f	Lfbc;	e	TRAPDOOR
	f	Lfbc;	f	POWDER_SNOW
	f	Lfbc;	g	DANGER_POWDER_SNOW
	f	Lfbc;	h	FENCE
	f	Lfbc;	i	LAVA
	f	Lfbc;	j	WATER
	f	Lfbc;	k	WATER_BORDER
	f	Lfbc;	l	RAIL
	f	Lfbc;	m	UNPASSABLE_RAIL
	f	Lfbc;	n	DANGER_FIRE
	f	Lfbc;	o	DAMAGE_FIRE
	f	Lfbc;	p	DANGER_OTHER
	f	Lfbc;	q	DAMAGE_OTHER
	f	Lfbc;	r	DOOR_OPEN
	f	Lfbc;	s	DOOR_WOOD_CLOSED
	f	Lfbc;	t	DOOR_IRON_CLOSED
	f	Lfbc;	u	BREACH
	f	Lfbc;	v	LEAVES
	f	Lfbc;	w	STICKY_HONEY
	f	Lfbc;	x	COCOA
	f	Lfbc;	y	DAMAGE_CAUTIOUS
	f	Lfbc;	z	DANGER_TRAPDOOR
	f	F	A	malus
	f	[Lfbc;	B	$VALUES
	m	()[Lfbc;	values	values
	m	(Ljava/lang/String;)Lfbc;	valueOf	valueOf
	m	(Ljava/lang/String;IF)V	<init>	<init>
	m	()F	a	getMalus
	m	()[Lfbc;	b	$values
	m	()V	<clinit>	<clinit>
c	fbd	net/minecraft/world/level/pathfinder/PathTypeCache
	f	I	a	SIZE
	f	I	b	MASK
	f	[J	c	positions
	f	[Lfbc;	d	pathTypes
	m	()V	<init>	<init>
	m	(Ldly;Ljb;)Lfbc;	a	getOrCompute
	m	(IJ)Lfbc;	a	get
	m	(Ldly;Ljb;IJ)Lfbc;	a	compute
	m	(Ljb;)V	a	invalidate
	m	(J)I	a	index
c	fbe	net/minecraft/world/level/pathfinder/PathfindingContext
	f	Ldmc;	a	level
	f	Lfbd;	b	cache
	f	Ljb;	c	mobPosition
	f	Ljb$a;	d	mutablePos
	m	(Ldmc;Lcao;)V	<init>	<init>
	m	(III)Lfbc;	a	getPathTypeFromState
	m	(Ljb;)Leeb;	a	getBlockState
	m	()Ldmc;	a	level
	m	()Ljb;	b	mobPosition
c	fbf	net/minecraft/world/level/pathfinder/SwimNodeEvaluator
	f	Z	a	allowBreaching
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	l	pathTypesByPosCache
	m	(Z)V	<init>	<init>
	m	(Ldnh;Lcao;)V	a	prepare
	m	()V	b	done
	m	()Lfax;	a	getStart
	m	(DDD)Lfbg;	a	getTarget
	m	([Lfax;Lfax;)I	a	getNeighbors
	m	(Lfax;)Z	a	isNodeValid
	m	(Lfax;)Z	b	hasMalus
	m	(III)Lfax;	a	findAcceptedNode
	m	(III)Lfbc;	b	getCachedBlockType
	m	(Lfbe;III)Lfbc;	a	getPathType
	m	(Lfbe;IIILcao;)Lfbc;	a	getPathTypeOfMob
	m	(IIIJ)Lfbc;	a	lambda$getCachedBlockType$0
c	fbg	net/minecraft/world/level/pathfinder/Target
	f	F	m	bestHeuristic
	f	Lfax;	n	bestNode
	f	Z	o	reached
	m	(Lfax;)V	<init>	<init>
	m	(III)V	<init>	<init>
	m	(FLfax;)V	a	updateBest
	m	()Lfax;	d	getBestNode
	m	()V	e	setReached
	m	()Z	f	isReached
	m	(Lwg;)Lfbg;	c	createFromStream
c	fbh	net/minecraft/world/level/pathfinder/WalkNodeEvaluator
	f	D	l	SPACE_BETWEEN_WALL_POSTS
	f	D	a	DEFAULT_MOB_JUMP_HEIGHT
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	m	pathTypesByPosCacheByMob
	f	Lit/unimi/dsi/fastutil/objects/Object2BooleanMap;	n	collisionCache
	f	[Lfax;	o	reusableNeighbors
	m	()V	<init>	<init>
	m	(Ldnh;Lcao;)V	a	prepare
	m	()V	b	done
	m	()Lfax;	a	getStart
	m	(Ljb;)Lfax;	c	getStartNode
	m	(Ljb;)Z	a	canStartAt
	m	(DDD)Lfbg;	a	getTarget
	m	([Lfax;Lfax;)I	a	getNeighbors
	m	(Lfax;Lfax;)Z	a	isNeighborValid
	m	(Lfax;Lfax;Lfax;)Z	a	isDiagonalValid
	m	(Lfax;)Z	a	isDiagonalValid
	m	(Lfbc;)Z	a	doesBlockHavePartialCollision
	m	(Lfax;)Z	b	canReachWithoutCollision
	m	(Ljb;)D	d	getFloorLevel
	m	(Ldly;Ljb;)D	a	getFloorLevel
	m	()Z	c	isAmphibious
	m	(IIIIDLjh;Lfbc;)Lfax;	a	findAcceptedNode
	m	()D	h	getMobJumpHeight
	m	(IIILfbc;F)Lfax;	a	getNodeAndUpdateCostToMax
	m	(III)Lfax;	a	getBlockedNode
	m	(IIILfbc;)Lfax;	a	getClosedNode
	m	(IIIIDLjh;Lfbc;Ljb$a;)Lfax;	a	tryJumpOn
	m	(IIILfax;)Lfax;	a	tryFindFirstNonWaterBelow
	m	(III)Lfax;	d	tryFindFirstGroundNodeBelow
	m	(Lfin;)Z	a	hasCollisions
	m	(III)Lfbc;	b	getCachedPathType
	m	(Lfbe;IIILcao;)Lfbc;	a	getPathTypeOfMob
	m	(Lfbe;III)Ljava/util/Set;	b	getPathTypeWithinMobBB
	m	(Lfbe;III)Lfbc;	a	getPathType
	m	(Lcao;Ljb;)Lfbc;	b	getPathTypeStatic
	m	(Lfbe;Ljb$a;)Lfbc;	a	getPathTypeStatic
	m	(Lfbe;IIILfbc;)Lfbc;	a	checkNeighbourBlocks
	m	(Ldly;Ljb;)Lfbc;	b	getPathTypeFromState
	m	(IIIJ)Lfbc;	a	lambda$getCachedPathType$1
	m	(Lfin;Ljava/lang/Object;)Z	a	lambda$hasCollisions$0
c	fbh$1	net/minecraft/world/level/pathfinder/WalkNodeEvaluator$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$pathfinder$PathType
	m	()V	<clinit>	<clinit>
c	fbi	net/minecraft/world/level/pathfinder/package-info
c	fbj	net/minecraft/world/level/portal/PortalForcer
	f	I	a	TICKET_RADIUS
	f	I	b	NETHER_PORTAL_RADIUS
	f	I	c	OVERWORLD_PORTAL_RADIUS
	f	I	d	FRAME_HEIGHT
	f	I	e	FRAME_WIDTH
	f	I	f	FRAME_BOX
	f	I	g	FRAME_HEIGHT_START
	f	I	h	FRAME_HEIGHT_END
	f	I	i	FRAME_WIDTH_START
	f	I	j	FRAME_WIDTH_END
	f	I	k	FRAME_BOX_START
	f	I	l	FRAME_BOX_END
	f	I	m	NOTHING_FOUND
	f	Laub;	n	level
	m	(Laub;)V	<init>	<init>
	m	(Ljb;ZLeft;)Ljava/util/Optional;	a	findClosestPortalPosition
	m	(Ljb;Ljh$a;)Ljava/util/Optional;	a	createPortal
	m	(Ljb$a;)Z	a	canPortalReplaceBlock
	m	(Ljb;Ljb$a;Ljh;I)Z	a	canHostFrame
	m	(Ljb;Ljb;)D	a	lambda$findClosestPortalPosition$2
	m	(Ljb;)Z	a	lambda$findClosestPortalPosition$1
	m	(Ljl;)Z	a	lambda$findClosestPortalPosition$0
c	fbk	net/minecraft/world/level/portal/PortalShape
	f	I	c	MIN_WIDTH
	f	I	a	MAX_WIDTH
	f	I	d	MIN_HEIGHT
	f	I	b	MAX_HEIGHT
	f	Leea$f;	e	FRAME
	f	F	f	SAFE_TRAVEL_MAX_ENTITY_XY
	f	D	g	SAFE_TRAVEL_MAX_VERTICAL_DELTA
	f	Ljh$a;	h	axis
	f	Ljh;	i	rightDir
	f	I	j	numPortalBlocks
	f	Ljb;	k	bottomLeft
	f	I	l	height
	f	I	m	width
	m	(Ljh$a;ILjh;Ljb;II)V	<init>	<init>
	m	(Ldmv;Ljb;Ljh$a;)Ljava/util/Optional;	a	findEmptyPortalShape
	m	(Ldmv;Ljb;Ljava/util/function/Predicate;Ljh$a;)Ljava/util/Optional;	a	findPortalShape
	m	(Ldly;Ljb;Ljh$a;)Lfbk;	a	findAnyShape
	m	(Ldly;Ljh;Ljb;)Ljb;	a	calculateBottomLeft
	m	(Ldly;Ljb;Ljh;)I	a	calculateWidth
	m	(Ldly;Ljb;Ljh;)I	b	getDistanceUntilEdgeAboveFrame
	m	(Ldly;Ljb;Ljh;ILorg/apache/commons/lang3/mutable/MutableInt;)I	a	calculateHeight
	m	(Ldly;Ljb;Ljh;Ljb$a;II)Z	a	hasTopFrame
	m	(Ldly;Ljb;Ljh;Ljb$a;ILorg/apache/commons/lang3/mutable/MutableInt;)I	a	getDistanceUntilTop
	m	(Leeb;)Z	a	isEmpty
	m	()Z	a	isValid
	m	(Ldmv;)V	a	createPortalBlocks
	m	()Z	b	isComplete
	m	(Lm$a;Ljh$a;Lfis;Lbzp;)Lfis;	a	getRelativePosition
	m	(Lfis;Laub;Lbzm;Lbzp;)Lfis;	a	findCollisionFreePosition
	m	(DLfis;)Lfis;	a	lambda$findCollisionFreePosition$3
	m	(Ldmv;Leeb;Ljb;)V	a	lambda$createPortalBlocks$2
	m	(Lfbk;)Z	a	lambda$findEmptyPortalShape$1
	m	(Leeb;Ldly;Ljb;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fbl	net/minecraft/world/level/portal/TeleportTransition
	f	Laub;	d	newLevel
	f	Lfis;	e	position
	f	Lfis;	f	deltaMovement
	f	F	g	yRot
	f	F	h	xRot
	f	Z	i	missingRespawnBlock
	f	Z	j	asPassenger
	f	Ljava/util/Set;	k	relatives
	f	Lfbl$a;	l	postTeleportTransition
	f	Lfbl$a;	a	DO_NOTHING
	f	Lfbl$a;	b	PLAY_PORTAL_SOUND
	f	Lfbl$a;	c	PLACE_PORTAL_TICKET
	m	(Laub;Lfis;Lfis;FFLfbl$a;)V	<init>	<init>
	m	(Laub;Lfis;Lfis;FFLjava/util/Set;Lfbl$a;)V	<init>	<init>
	m	(Laub;Lbzm;Lfbl$a;)V	<init>	<init>
	m	(Laub;Lfis;Lfis;FFZZLjava/util/Set;Lfbl$a;)V	<init>	<init>
	m	(Lbzm;)V	a	playPortalSound
	m	(Lbzm;)V	b	placePortalTicket
	m	(Laub;Lbzm;Lfbl$a;)Lfbl;	a	missingRespawnBlock
	m	(Laub;Lbzm;)Lfis;	a	findAdjustedSharedSpawnPos
	m	(FF)Lfbl;	a	withRotation
	m	(Lfis;)Lfbl;	a	withPosition
	m	()Lfbl;	a	transitionAsPassenger
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laub;	b	newLevel
	m	()Lfis;	c	position
	m	()Lfis;	d	deltaMovement
	m	()F	e	yRot
	m	()F	f	xRot
	m	()Z	g	missingRespawnBlock
	m	()Z	h	asPassenger
	m	()Ljava/util/Set;	i	relatives
	m	()Lfbl$a;	j	postTeleportTransition
	m	(Lbzm;)V	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fbl$a	net/minecraft/world/level/portal/TeleportTransition$PostTeleportTransition
	m	(Lbzm;)V	onTransition	onTransition
	m	(Lfbl$a;)Lfbl$a;	then	then
	m	(Lfbl$a;Lbzm;)V	a	lambda$then$0
c	fbm	net/minecraft/world/level/portal/package-info
c	fbn	net/minecraft/world/level/redstone/CollectingNeighborUpdater
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ldmu;	c	level
	f	I	d	maxChainedNeighborUpdates
	f	Ljava/util/ArrayDeque;	e	stack
	f	Ljava/util/List;	f	addedThisLayer
	f	I	g	count
	m	(Ldmu;I)V	<init>	<init>
	m	(Ljh;Leeb;Ljb;Ljb;II)V	a	shapeUpdate
	m	(Ljb;Ldpz;Lfbt;)V	a	neighborChanged
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ljb;Ldpz;Ljh;Lfbt;)V	a	updateNeighborsAtExceptFromFacing
	m	(Ljb;Lfbn$c;)V	a	addAndRun
	m	()V	a	runUpdates
	m	()V	<clinit>	<clinit>
c	fbn$a	net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate
	f	Leeb;	a	state
	f	Ljb;	b	pos
	f	Ldpz;	c	block
	f	Lfbt;	d	orientation
	f	Z	e	movedByPiston
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	<init>	<init>
	m	(Ldmu;)Z	a	runNext
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Leeb;	a	state
	m	()Ljb;	b	pos
	m	()Ldpz;	c	block
	m	()Lfbt;	d	orientation
	m	()Z	e	movedByPiston
c	fbn$b	net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate
	f	Ljb;	a	sourcePos
	f	Ldpz;	b	sourceBlock
	f	Lfbt;	c	orientation
	f	Ljh;	d	skipDirection
	f	I	e	idx
	m	(Ljb;Ldpz;Lfbt;Ljh;)V	<init>	<init>
	m	(Ldmu;)Z	a	runNext
c	fbn$c	net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates
	m	(Ldmu;)Z	a	runNext
c	fbn$d	net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate
	f	Ljh;	a	direction
	f	Leeb;	b	neighborState
	f	Ljb;	c	pos
	f	Ljb;	d	neighborPos
	f	I	e	updateFlags
	f	I	f	updateLimit
	m	(Ljh;Leeb;Ljb;Ljb;II)V	<init>	<init>
	m	(Ldmu;)Z	a	runNext
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljh;	a	direction
	m	()Leeb;	b	neighborState
	m	()Ljb;	c	pos
	m	()Ljb;	d	neighborPos
	m	()I	e	updateFlags
	m	()I	f	updateLimit
c	fbn$e	net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate
	f	Ljb;	a	pos
	f	Ldpz;	b	block
	f	Lfbt;	c	orientation
	m	(Ljb;Ldpz;Lfbt;)V	<init>	<init>
	m	(Ldmu;)Z	a	runNext
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	a	pos
	m	()Ldpz;	b	block
	m	()Lfbt;	c	orientation
c	fbo	net/minecraft/world/level/redstone/DefaultRedstoneWireEvaluator
	m	(Ldwj;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lfbt;Z)V	a	updatePowerStrength
	m	(Ldmu;Ljb;)I	c	calculateTargetStrength
c	fbp	net/minecraft/world/level/redstone/ExperimentalRedstoneUtils
	m	()V	<init>	<init>
	m	(Ldmu;Ljh;Ljh;)Lfbt;	a	initialOrientation
	m	(Lfbt;Ljh;)Lfbt;	a	withFront
c	fbq	net/minecraft/world/level/redstone/ExperimentalRedstoneWireEvaluator
	f	Ljava/util/Deque;	b	wiresToTurnOff
	f	Ljava/util/Deque;	c	wiresToTurnOn
	f	Lit/unimi/dsi/fastutil/objects/Object2IntMap;	d	updatedWires
	m	(Ldwj;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lfbt;Z)V	a	updatePowerStrength
	m	(Ldmu;)V	a	causeNeighborUpdates
	m	(Leeb;Ljh;)Z	a	isConnected
	m	(Ldmu;Lfbt;)Lfbt;	a	getInitialOrientation
	m	(Ldmu;Ljb;Lfbt;)V	a	calculateCurrentChanges
	m	(Lfbt;I)I	a	packOrientationAndPower
	m	(I)Lfbt;	a	unpackOrientation
	m	(I)I	b	unpackPower
	m	(Ljb;ILfbt;)V	a	setPower
	m	(Ldmu;Ljb;ILfbt;Z)V	a	propagateChangeToNeighbors
	m	(Ldmu;Ljb;ILfbt;Z)V	b	enqueueNeighborWire
	m	(Ljb;Leeb;)I	a	getWireSignal
	m	(Lfbt;ILjb;Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$setPower$2
	m	(Ljava/util/List;Ljb;Ljava/lang/Integer;)V	a	lambda$causeNeighborUpdates$1
	m	(Ldmu;Ljb;Ljava/lang/Integer;)V	a	lambda$causeNeighborUpdates$0
c	fbr	net/minecraft/world/level/redstone/InstantNeighborUpdater
	f	Ldmu;	b	level
	m	(Ldmu;)V	<init>	<init>
	m	(Ljh;Leeb;Ljb;Ljb;II)V	a	shapeUpdate
	m	(Ljb;Ldpz;Lfbt;)V	a	neighborChanged
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
c	fbs	net/minecraft/world/level/redstone/NeighborUpdater
	f	[Ljh;	a	UPDATE_ORDER
	m	(Ljh;Leeb;Ljb;Ljb;II)V	a	shapeUpdate
	m	(Ljb;Ldpz;Lfbt;)V	a	neighborChanged
	m	(Leeb;Ljb;Ldpz;Lfbt;Z)V	a	neighborChanged
	m	(Ljb;Ldpz;Ljh;Lfbt;)V	a	updateNeighborsAtExceptFromFacing
	m	(Ldmv;Ljh;Ljb;Ljb;Leeb;II)V	a	executeShapeUpdate
	m	(Ldmu;Leeb;Ljb;Ldpz;Lfbt;Z)V	a	executeUpdate
	m	(Ldpz;)Ljava/lang/String;	a	lambda$executeUpdate$0
	m	()V	<clinit>	<clinit>
c	fbt	net/minecraft/world/level/redstone/Orientation
	f	Lzm;	a	STREAM_CODEC
	f	[Lfbt;	b	ORIENTATIONS
	f	Ljh;	c	up
	f	Ljh;	d	front
	f	Ljh;	e	side
	f	Lfbt$a;	f	sideBias
	f	I	g	index
	f	Ljava/util/List;	h	neighbors
	f	Ljava/util/List;	i	horizontalNeighbors
	f	Ljava/util/List;	j	verticalNeighbors
	f	Ljava/util/Map;	k	withFront
	f	Ljava/util/Map;	l	withUp
	f	Ljava/util/Map;	m	withSideBias
	m	(Ljh;Ljh;Lfbt$a;)V	<init>	<init>
	m	(Ljh;Ljh;Lfbt$a;)Lfbt;	a	of
	m	(Ljh;)Lfbt;	a	withUp
	m	(Ljh;)Lfbt;	b	withFront
	m	(Ljh;)Lfbt;	c	withFrontPreserveUp
	m	(Ljh;)Lfbt;	d	withFrontAdjustSideBias
	m	(Lfbt$a;)Lfbt;	a	withSideBias
	m	()Lfbt;	a	withMirror
	m	()Ljh;	b	getFront
	m	()Ljh;	c	getUp
	m	()Ljh;	d	getSide
	m	()Lfbt$a;	e	getSideBias
	m	()Ljava/util/List;	f	getDirections
	m	()Ljava/util/List;	g	getHorizontalDirections
	m	()Ljava/util/List;	h	getVerticalDirections
	m	()Ljava/lang/String;	toString	toString
	m	()I	i	getIndex
	m	(I)Lfbt;	a	fromIndex
	m	(Lbck;)Lfbt;	a	random
	m	(Lfbt;[Lfbt;)Lfbt;	a	generateContext
	m	(Ljh;Ljh;Lfbt$a;)I	b	generateIndex
	m	(Ljh;)Z	e	lambda$new$2
	m	(Ljh;)Z	f	lambda$new$1
	m	()[Lfbt;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fbt$a	net/minecraft/world/level/redstone/Orientation$SideBias
	f	Lfbt$a;	a	LEFT
	f	Lfbt$a;	b	RIGHT
	f	Ljava/lang/String;	c	name
	f	[Lfbt$a;	d	$VALUES
	m	()[Lfbt$a;	values	values
	m	(Ljava/lang/String;)Lfbt$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Lfbt$a;	a	getOpposite
	m	()Ljava/lang/String;	toString	toString
	m	()[Lfbt$a;	b	$values
	m	()V	<clinit>	<clinit>
c	fbu	net/minecraft/world/level/redstone/Redstone
	f	I	a	BITS
	f	I	b	MASK
	f	I	c	SIGNAL_MIN
	f	I	d	SIGNAL_MAX
	f	I	e	SIGNAL_NONE
	m	()V	<init>	<init>
c	fbv	net/minecraft/world/level/redstone/RedstoneWireEvaluator
	f	Ldwj;	a	wireBlock
	m	(Ldwj;)V	<init>	<init>
	m	(Ldmu;Ljb;Leeb;Lfbt;Z)V	a	updatePowerStrength
	m	(Ldmu;Ljb;)I	a	getBlockSignal
	m	(Ljb;Leeb;)I	a	getWireSignal
	m	(Ldmu;Ljb;)I	b	getIncomingWireSignal
c	fbw	net/minecraft/world/level/redstone/package-info
c	fbx	net/minecraft/world/level/saveddata/SavedData
	f	Z	a	dirty
	m	()V	<init>	<init>
	m	()V	e	setDirty
	m	(Z)V	a	setDirty
	m	()Z	f	isDirty
c	fbx$a	net/minecraft/world/level/saveddata/SavedData$Context
	f	Laub;	a	level
	f	J	b	worldSeed
	m	(Laub;)V	<init>	<init>
	m	(Laub;J)V	<init>	<init>
	m	()Laub;	a	levelOrThrow
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Laub;	b	level
	m	()J	c	worldSeed
c	fby	net/minecraft/world/level/saveddata/SavedDataType
	f	Ljava/lang/String;	a	id
	f	Ljava/util/function/Function;	b	constructor
	f	Ljava/util/function/Function;	c	codec
	f	Lbdr;	d	dataFixType
	m	(Ljava/lang/String;Ljava/util/function/Supplier;Lcom/mojang/serialization/Codec;Lbdr;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Lbdr;)V	<init>	<init>
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()Ljava/lang/String;	a	id
	m	()Ljava/util/function/Function;	b	constructor
	m	()Ljava/util/function/Function;	c	codec
	m	()Lbdr;	d	dataFixType
	m	(Lcom/mojang/serialization/Codec;Lfbx$a;)Lcom/mojang/serialization/Codec;	a	lambda$new$1
	m	(Ljava/util/function/Supplier;Lfbx$a;)Lfbx;	a	lambda$new$0
c	fbz	net/minecraft/world/level/saveddata/maps/MapBanner
	f	Ljb;	b	pos
	f	Ldbt;	c	color
	f	Ljava/util/Optional;	d	name
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljb;Ldbt;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldly;Ljb;)Lfbz;	a	fromWorld
	m	()Ljl;	a	getDecoration
	m	()Ljava/lang/String;	b	getId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	c	pos
	m	()Ldbt;	d	color
	m	()Ljava/util/Optional;	e	name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fbz$1	net/minecraft/world/level/saveddata/maps/MapBanner$1
	f	[I	a	$SwitchMap$net$minecraft$world$item$DyeColor
	m	()V	<clinit>	<clinit>
c	fca	net/minecraft/world/level/saveddata/maps/MapDecoration
	f	Ljl;	b	type
	f	B	c	x
	f	B	d	y
	f	B	e	rot
	f	Ljava/util/Optional;	f	name
	f	Lzm;	a	STREAM_CODEC
	m	(Ljl;BBBLjava/util/Optional;)V	<init>	<init>
	m	()Lame;	a	getSpriteLocation
	m	()Z	b	renderOnFrame
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	c	type
	m	()B	d	x
	m	()B	e	y
	m	()B	f	rot
	m	()Ljava/util/Optional;	g	name
	m	()V	<clinit>	<clinit>
c	fcb	net/minecraft/world/level/saveddata/maps/MapDecorationType
	f	Lame;	d	assetId
	f	Z	e	showOnItemFrame
	f	I	f	mapColor
	f	Z	g	explorationMapElement
	f	Z	h	trackCount
	f	I	a	NO_MAP_COLOR
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lzm;	c	STREAM_CODEC
	m	(Lame;ZIZZ)V	<init>	<init>
	m	()Z	a	hasMapColor
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	assetId
	m	()Z	c	showOnItemFrame
	m	()I	d	mapColor
	m	()Z	e	explorationMapElement
	m	()Z	f	trackCount
	m	()V	<clinit>	<clinit>
c	fcc	net/minecraft/world/level/saveddata/maps/MapDecorationTypes
	f	I	J	COPPER_COLOR
	f	Ljl;	a	PLAYER
	f	Ljl;	b	FRAME
	f	Ljl;	c	RED_MARKER
	f	Ljl;	d	BLUE_MARKER
	f	Ljl;	e	TARGET_X
	f	Ljl;	f	TARGET_POINT
	f	Ljl;	g	PLAYER_OFF_MAP
	f	Ljl;	h	PLAYER_OFF_LIMITS
	f	Ljl;	i	WOODLAND_MANSION
	f	Ljl;	j	OCEAN_MONUMENT
	f	Ljl;	k	WHITE_BANNER
	f	Ljl;	l	ORANGE_BANNER
	f	Ljl;	m	MAGENTA_BANNER
	f	Ljl;	n	LIGHT_BLUE_BANNER
	f	Ljl;	o	YELLOW_BANNER
	f	Ljl;	p	LIME_BANNER
	f	Ljl;	q	PINK_BANNER
	f	Ljl;	r	GRAY_BANNER
	f	Ljl;	s	LIGHT_GRAY_BANNER
	f	Ljl;	t	CYAN_BANNER
	f	Ljl;	u	PURPLE_BANNER
	f	Ljl;	v	BLUE_BANNER
	f	Ljl;	w	BROWN_BANNER
	f	Ljl;	x	GREEN_BANNER
	f	Ljl;	y	RED_BANNER
	f	Ljl;	z	BLACK_BANNER
	f	Ljl;	A	RED_X
	f	Ljl;	B	DESERT_VILLAGE
	f	Ljl;	C	PLAINS_VILLAGE
	f	Ljl;	D	SAVANNA_VILLAGE
	f	Ljl;	E	SNOWY_VILLAGE
	f	Ljl;	F	TAIGA_VILLAGE
	f	Ljl;	G	JUNGLE_TEMPLE
	f	Ljl;	H	SWAMP_HUT
	f	Ljl;	I	TRIAL_CHAMBERS
	m	()V	<init>	<init>
	m	(Ljy;)Ljl;	a	bootstrap
	m	(Ljava/lang/String;Ljava/lang/String;ZZ)Ljl;	a	register
	m	(Ljava/lang/String;Ljava/lang/String;ZIZZ)Ljl;	a	register
	m	()V	<clinit>	<clinit>
c	fcd	net/minecraft/world/level/saveddata/maps/MapFrame
	f	Ljb;	b	pos
	f	I	c	rotation
	f	I	d	entityId
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljb;II)V	<init>	<init>
	m	()Ljava/lang/String;	a	getId
	m	(Ljb;)Ljava/lang/String;	a	frameId
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljb;	b	pos
	m	()I	c	rotation
	m	()I	d	entityId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fce	net/minecraft/world/level/saveddata/maps/MapId
	f	I	c	id
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lxo;	d	LOCKED_TEXT
	m	(I)V	<init>	<init>
	m	()Ljava/lang/String;	a	key
	m	(Ldcr$b;Ljava/util/function/Consumer;Ldek;Lkl;)V	a	addToTooltip
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	id
	m	()V	<clinit>	<clinit>
c	fcf	net/minecraft/world/level/saveddata/maps/MapIndex
	f	I	c	NO_MAP_ID
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfby;	b	TYPE
	f	I	d	lastMapId
	m	()V	<init>	<init>
	m	(I)V	<init>	<init>
	m	()Lfce;	a	getNextMapId
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lfcf;)Ljava/lang/Integer;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fcg	net/minecraft/world/level/saveddata/maps/MapItemSavedData
	f	Lorg/slf4j/Logger;	j	LOGGER
	f	I	k	MAP_SIZE
	f	I	l	HALF_MAP_SIZE
	f	I	a	MAX_SCALE
	f	I	b	TRACKED_DECORATION_LIMIT
	f	Ljava/lang/String;	m	FRAME_PREFIX
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	I	d	centerX
	f	I	e	centerZ
	f	Lamd;	f	dimension
	f	Z	n	trackingPosition
	f	Z	o	unlimitedTracking
	f	B	g	scale
	f	[B	h	colors
	f	Z	i	locked
	f	Ljava/util/List;	p	carriedBy
	f	Ljava/util/Map;	q	carriedByPlayers
	f	Ljava/util/Map;	r	bannerMarkers
	f	Ljava/util/Map;	s	decorations
	f	Ljava/util/Map;	t	frameMarkers
	f	I	u	trackedDecorationCount
	m	(Lfce;)Lfby;	a	type
	m	(IIBZZZLamd;)V	<init>	<init>
	m	(Lamd;IIBLjava/nio/ByteBuffer;ZZZLjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(DDBZZLamd;)Lfcg;	a	createFresh
	m	(BZLamd;)Lfcg;	a	createForClient
	m	()Lfcg;	a	locked
	m	()Lfcg;	b	scaled
	m	(Ldcv;)Ljava/util/function/Predicate;	a	mapMatcher
	m	(Lcut;Ldcv;)V	a	tickCarriedBy
	m	(Lcut;)Z	b	hasMapInvisibilityItemEquipped
	m	(Ljava/lang/String;)V	a	removeDecoration
	m	(Ldcv;Ljb;Ljava/lang/String;Ljl;)V	a	addTargetDecoration
	m	(Ljl;Ldmv;Ljava/lang/String;DDDLxo;)V	a	addDecoration
	m	(Ljl;Ldmv;DFF)Lfcg$b;	a	calculateDecorationLocationAndType
	m	(Ljl;Ldmv;DFF)Lcom/mojang/datafixers/util/Pair;	b	playerDecorationTypeAndRotation
	m	(Ldmv;D)B	a	calculateRotation
	m	(FF)Z	a	isInsideMap
	m	(FF)Ljl;	b	decorationTypeForPlayerOutsideMap
	m	(F)B	a	clampMapCoordinate
	m	(Lfce;Lcut;)Lzw;	a	getUpdatePacket
	m	(II)V	a	setColorsDirty
	m	()V	h	setDecorationsDirty
	m	(Lcut;)Lfcg$a;	a	getHoldingPlayer
	m	(Ldmv;Ljb;)Z	a	toggleBanner
	m	(Ldly;II)V	a	checkBanners
	m	()Ljava/util/Collection;	c	getBanners
	m	(Ljb;I)V	a	removedFromFrame
	m	(IIB)Z	a	updateColor
	m	(IIB)V	b	setColor
	m	()Z	d	isExplorationMap
	m	(Ljava/util/List;)V	a	addClientSideDecorations
	m	()Ljava/lang/Iterable;	g	getDecorations
	m	(I)Z	a	isTrackedCountOverLimit
	m	(I)Ljava/lang/String;	b	getFrameKey
	m	(Ljava/lang/String;Ldfq$a;Ldfq;)Ldfq;	a	lambda$addTargetDecoration$14
	m	(Lcut;Ljava/lang/String;Ldfq$a;)V	a	lambda$tickCarriedBy$13
	m	(Ldcv;Lfce;Ldcv;)Z	a	lambda$mapMatcher$12
	m	()Lfcg;	i	lambda$type$11
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$10
	m	(Lfcg;)Ljava/util/List;	a	lambda$static$9
	m	(Lfcg;)Ljava/util/List;	b	lambda$static$8
	m	(Lfcg;)Ljava/lang/Boolean;	c	lambda$static$7
	m	(Lfcg;)Ljava/lang/Boolean;	d	lambda$static$6
	m	(Lfcg;)Ljava/lang/Boolean;	e	lambda$static$5
	m	(Lfcg;)Ljava/nio/ByteBuffer;	f	lambda$static$4
	m	(Lfcg;)Ljava/lang/Byte;	g	lambda$static$3
	m	(Lfcg;)Ljava/lang/Integer;	h	lambda$static$2
	m	(Lfcg;)Ljava/lang/Integer;	i	lambda$static$1
	m	(Lfcg;)Lamd;	j	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fcg$a	net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer
	f	Lcut;	a	player
	f	Z	d	dirtyData
	f	I	e	minDirtyX
	f	I	f	minDirtyY
	f	I	g	maxDirtyX
	f	I	h	maxDirtyY
	f	Z	i	dirtyDecorations
	f	I	j	tick
	f	I	b	step
	f	Lfcg;	c	this$0
	m	(Lfcg;Lcut;)V	<init>	<init>
	m	()Lfcg$c;	a	createPatch
	m	(Lfce;)Lzw;	a	nextUpdatePacket
	m	(II)V	a	markColorsDirty
	m	()V	b	markDecorationsDirty
c	fcg$b	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapDecorationLocation
	f	Ljl;	a	type
	f	B	b	x
	f	B	c	y
	f	B	d	rot
	m	(Ljl;BBB)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	type
	m	()B	b	x
	m	()B	c	y
	m	()B	d	rot
c	fcg$c	net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch
	f	I	b	startX
	f	I	c	startY
	f	I	d	width
	f	I	e	height
	f	[B	f	mapColors
	f	Lzm;	a	STREAM_CODEC
	m	(IIII[B)V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;Ljava/util/Optional;)V	a	write
	m	(Lio/netty/buffer/ByteBuf;)Ljava/util/Optional;	a	read
	m	(Lfcg;)V	a	applyToMap
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	a	startX
	m	()I	b	startY
	m	()I	c	width
	m	()I	d	height
	m	()[B	e	mapColors
	m	()V	<clinit>	<clinit>
c	fch	net/minecraft/world/level/saveddata/maps/package-info
c	fci	net/minecraft/world/level/saveddata/package-info
c	fcj	net/minecraft/world/level/storage/CommandStorage
	f	Ljava/lang/String;	a	ID_PREFIX
	f	Ljava/util/Map;	b	namespaces
	f	Lfcm;	c	storage
	m	(Lfcm;)V	<init>	<init>
	m	(Lame;)Lui;	a	get
	m	(Ljava/lang/String;)Lfcj$a;	a	getContainer
	m	(Ljava/lang/String;)Lfcj$a;	b	getOrCreateContainer
	m	(Lame;Lui;)V	a	set
	m	()Ljava/util/stream/Stream;	a	keys
	m	(Ljava/lang/String;)Ljava/lang/String;	c	createId
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$keys$0
c	fcj$a	net/minecraft/world/level/storage/CommandStorage$Container
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/Map;	b	storage
	m	(Ljava/util/Map;)V	<init>	<init>
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lfby;	a	type
	m	(Ljava/lang/String;)Lui;	b	get
	m	(Ljava/lang/String;Lui;)V	a	put
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	c	getKeys
	m	(Ljava/lang/String;Ljava/lang/String;)Lame;	a	lambda$getKeys$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lfcj$a;)Ljava/util/Map;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fck	net/minecraft/world/level/storage/DataVersion
	f	I	b	version
	f	Ljava/lang/String;	c	series
	f	Ljava/lang/String;	a	MAIN_SERIES
	m	(ILjava/lang/String;)V	<init>	<init>
	m	()Z	a	isSideSeries
	m	(Lfck;)Z	a	isCompatible
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	version
	m	()Ljava/lang/String;	c	series
c	fcl	net/minecraft/world/level/storage/DerivedLevelData
	f	Lfdd;	a	worldData
	f	Lfcx;	b	wrapped
	m	(Lfdd;Lfcx;)V	<init>	<init>
	m	()Ljb;	a	getSpawnPos
	m	()F	b	getSpawnAngle
	m	()J	c	getGameTime
	m	()J	d	getDayTime
	m	()Ljava/lang/String;	e	getLevelName
	m	()I	f	getClearWeatherTime
	m	(I)V	a	setClearWeatherTime
	m	()Z	g	isThundering
	m	()I	h	getThunderTime
	m	()Z	i	isRaining
	m	()I	j	getRainTime
	m	()Ldmr;	k	getGameType
	m	(J)V	a	setGameTime
	m	(J)V	b	setDayTime
	m	(Ljb;F)V	a	setSpawn
	m	(Z)V	a	setThundering
	m	(I)V	b	setThunderTime
	m	(Z)V	b	setRaining
	m	(I)V	c	setRainTime
	m	(Ldmr;)V	a	setGameType
	m	()Z	l	isHardcore
	m	()Z	m	isAllowCommands
	m	()Z	n	isInitialized
	m	(Z)V	c	setInitialized
	m	()Ldmq;	o	getGameRules
	m	()Left$d;	p	getWorldBorder
	m	(Left$d;)V	a	setWorldBorder
	m	()Lbxg;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
	m	()Lfif;	s	getScheduledEvents
	m	()I	t	getWanderingTraderSpawnDelay
	m	(I)V	d	setWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	(I)V	e	setWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	(Lq;Ldmw;)V	a	fillCrashReportCategory
c	fcm	net/minecraft/world/level/storage/DimensionDataStorage
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lfbx$a;	b	context
	f	Ljava/util/Map;	c	cache
	f	Lcom/mojang/datafixers/DataFixer;	d	fixerUpper
	f	Ljn$a;	e	registries
	f	Ljava/nio/file/Path;	f	dataFolder
	f	Ljava/util/concurrent/CompletableFuture;	g	pendingWriteFuture
	m	(Lfbx$a;Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Ljn$a;)V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	a	getDataFile
	m	(Lfby;)Lfbx;	a	computeIfAbsent
	m	(Lfby;)Lfbx;	b	get
	m	(Lfby;)Lfbx;	c	readSavedData
	m	(Lfby;Lfbx;)V	a	set
	m	(Ljava/lang/String;Lbdr;I)Lui;	a	readTagFromDisk
	m	(Ljava/io/PushbackInputStream;)Z	a	isGzip
	m	()Ljava/util/concurrent/CompletableFuture;	a	scheduleSave
	m	()Ljava/util/Map;	c	collectDirtyTagsToSave
	m	(Lfby;Lfbx;Lamc;)Lui;	a	encodeUnchecked
	m	(Lfby;Lui;)V	a	tryWrite
	m	()V	b	saveAndJoin
	m	()V	close	close
	m	(Ljava/util/Map;Lamc;Lfby;Ljava/util/Optional;)V	a	lambda$collectDirtyTagsToSave$9
	m	(Ljava/util/Map;Lfby;Lamc;Lfbx;)V	a	lambda$collectDirtyTagsToSave$8
	m	(Ljava/util/Map;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleSave$7
	m	(I)[Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleSave$6
	m	(Ljava/util/Map$Entry;)Ljava/util/concurrent/CompletableFuture;	a	lambda$scheduleSave$5
	m	(Ljava/util/Map$Entry;)V	b	lambda$scheduleSave$4
	m	(IILjava/util/Map;Ljava/lang/Object;)Ljava/util/concurrent/CompletionStage;	a	lambda$scheduleSave$3
	m	(I)[Ljava/util/concurrent/CompletableFuture;	b	lambda$scheduleSave$2
	m	(Ljava/util/List;)V	a	lambda$scheduleSave$1
	m	(Lfby;Ljava/lang/String;)V	a	lambda$readSavedData$0
	m	()V	<clinit>	<clinit>
c	fcn	net/minecraft/world/level/storage/FileNameDateFormatter
	m	()V	<init>	<init>
	m	()Ljava/time/format/DateTimeFormatter;	a	create
c	fco	net/minecraft/world/level/storage/LevelData
	m	()Ljb;	a	getSpawnPos
	m	()F	b	getSpawnAngle
	m	()J	c	getGameTime
	m	()J	d	getDayTime
	m	()Z	g	isThundering
	m	()Z	i	isRaining
	m	(Z)V	b	setRaining
	m	()Z	l	isHardcore
	m	()Lbxg;	q	getDifficulty
	m	()Z	r	isDifficultyLocked
	m	(Lq;Ldmw;)V	a	fillCrashReportCategory
	m	()Ljava/lang/String;	e	lambda$fillCrashReportCategory$1
	m	(Ldmw;)Ljava/lang/String;	a	lambda$fillCrashReportCategory$0
c	fcp	net/minecraft/world/level/storage/LevelDataAndDimensions
	f	Lfdd;	a	worldData
	f	Lekv$b;	b	dimensions
	m	(Lfdd;Lekv$b;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfdd;	a	worldData
	m	()Lekv$b;	b	dimensions
c	fcq	net/minecraft/world/level/storage/LevelResource
	f	Lfcq;	a	PLAYER_ADVANCEMENTS_DIR
	f	Lfcq;	b	PLAYER_STATS_DIR
	f	Lfcq;	c	PLAYER_DATA_DIR
	f	Lfcq;	d	PLAYER_OLD_DATA_DIR
	f	Lfcq;	e	LEVEL_DATA_FILE
	f	Lfcq;	f	OLD_LEVEL_DATA_FILE
	f	Lfcq;	g	ICON_FILE
	f	Lfcq;	h	LOCK_FILE
	f	Lfcq;	i	GENERATED_DIR
	f	Lfcq;	j	DATAPACK_DIR
	f	Lfcq;	k	MAP_RESOURCE_FILE
	f	Lfcq;	l	ROOT
	f	Ljava/lang/String;	m	id
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	toString	toString
	m	()V	<clinit>	<clinit>
c	fcr	net/minecraft/world/level/storage/LevelStorageException
	f	Lxo;	a	messageComponent
	m	(Lxo;)V	<init>	<init>
	m	()Lxo;	a	getMessageComponent
c	fcs	net/minecraft/world/level/storage/LevelStorageSource
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Ljava/time/format/DateTimeFormatter;	d	FORMATTER
	f	Ljava/lang/String;	a	TAG_DATA
	f	Ljava/nio/file/PathMatcher;	e	NO_SYMLINKS_ALLOWED
	f	Ljava/lang/String;	b	ALLOWED_SYMLINKS_CONFIG_NAME
	f	I	f	UNCOMPRESSED_NBT_QUOTA
	f	I	g	DISK_SPACE_WARNING_THRESHOLD
	f	Ljava/nio/file/Path;	h	baseDir
	f	Ljava/nio/file/Path;	i	backupDir
	f	Lcom/mojang/datafixers/DataFixer;	j	fixerUpper
	f	Lfii;	k	worldDirValidator
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;Lfii;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
	m	(Ljava/nio/file/Path;)Lfii;	a	parseValidator
	m	(Ljava/nio/file/Path;)Lfcs;	b	createDefault
	m	(Lcom/mojang/serialization/Dynamic;)Ldns;	a	readDataConfig
	m	(Lcom/mojang/serialization/Dynamic;Lawz;Z)Lanc$d;	a	getPackConfig
	m	(Lcom/mojang/serialization/Dynamic;Ldns;Ljy;Ljn$a;)Lfcp;	a	getLevelDataAndDimensions
	m	()Ljava/lang/String;	a	getName
	m	()Lfcs$a;	b	findLevelCandidates
	m	(Lfcs$a;)Ljava/util/concurrent/CompletableFuture;	a	loadLevelSummaries
	m	()I	f	getStorageVersion
	m	(Ljava/nio/file/Path;)Lui;	c	readLevelDataTagRaw
	m	(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lcom/mojang/serialization/Dynamic;	a	readLevelDataTagFixed
	m	(Lfcs$b;Z)Lfct;	a	readLevelSummary
	m	(Lfcs$b;)J	a	getFileModificationTime
	m	(Ljava/nio/file/Path;)Ljava/time/Instant;	d	getFileModificationTime
	m	(Lcom/mojang/serialization/Dynamic;Lfcs$b;Z)Lfct;	a	makeLevelSummary
	m	(Lcom/mojang/serialization/Dynamic;)Lcyd;	b	parseFeatureFlagsFromSummary
	m	(Ljava/nio/file/Path;)Lvi;	e	readLightweightData
	m	(Ljava/lang/String;)Z	a	isNewLevelIdAcceptable
	m	(Ljava/lang/String;)Z	b	levelExists
	m	(Ljava/lang/String;)Ljava/nio/file/Path;	c	getLevelPath
	m	()Ljava/nio/file/Path;	c	getBaseDir
	m	()Ljava/nio/file/Path;	d	getBackupPath
	m	(Ljava/lang/String;)Lfcs$c;	d	validateAndCreateAccess
	m	(Ljava/lang/String;)Lfcs$c;	e	createAccess
	m	()Lfii;	e	getWorldDirValidator
	m	(Lame;)V	a	lambda$parseFeatureFlagsFromSummary$8
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	c	lambda$parseFeatureFlagsFromSummary$7
	m	(Lcom/mojang/datafixers/DataFixer;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	a	lambda$readLevelDataTagFixed$6
	m	(Lcom/mojang/datafixers/DataFixer;ILcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic;	b	lambda$readLevelDataTagFixed$5
	m	(Ljava/util/List;)Ljava/util/List;	a	lambda$loadLevelSummaries$4
	m	(Lfcs$b;)Lfct;	b	lambda$loadLevelSummaries$3
	m	(Lfcs$b;)Z	c	lambda$findLevelCandidates$2
	m	(Ljava/nio/file/Path;)Z	f	lambda$findLevelCandidates$1
	m	(Ljava/nio/file/Path;)Z	g	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fcs$a	net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates
	f	Ljava/util/List;	a	levels
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	()Ljava/util/Iterator;	iterator	iterator
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	b	levels
c	fcs$b	net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory
	f	Ljava/nio/file/Path;	a	path
	m	(Ljava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/lang/String;	a	directoryName
	m	()Ljava/nio/file/Path;	b	dataFile
	m	()Ljava/nio/file/Path;	c	oldDataFile
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	a	corruptedDataFile
	m	(Ljava/time/LocalDateTime;)Ljava/nio/file/Path;	b	rawDataFile
	m	()Ljava/nio/file/Path;	d	iconFile
	m	()Ljava/nio/file/Path;	e	lockFile
	m	(Lfcq;)Ljava/nio/file/Path;	a	resourcePath
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	f	path
c	fcs$c	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess
	f	Lbbf;	b	lock
	f	Lfcs$b;	c	levelDirectory
	f	Ljava/lang/String;	d	levelId
	f	Ljava/util/Map;	e	resources
	f	Lfcs;	a	this$0
	m	(Lfcs;Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
	m	()J	a	estimateDiskSpace
	m	()Z	b	checkForLowDiskSpace
	m	()V	c	safeClose
	m	()Lfcs;	d	parent
	m	()Lfcs$b;	e	getLevelDirectory
	m	()Ljava/lang/String;	f	getLevelId
	m	(Lfcq;)Ljava/nio/file/Path;	a	getLevelPath
	m	(Lamd;)Ljava/nio/file/Path;	a	getDimensionPath
	m	()V	o	checkLock
	m	()Lfcv;	g	createPlayerStorage
	m	(Lcom/mojang/serialization/Dynamic;)Lfct;	a	getSummary
	m	()Lcom/mojang/serialization/Dynamic;	h	getDataTag
	m	()Lcom/mojang/serialization/Dynamic;	i	getDataTagFallback
	m	(Z)Lcom/mojang/serialization/Dynamic;	b	getDataTag
	m	(Ljz;Lfdd;)V	a	saveDataTag
	m	(Ljz;Lfdd;Lui;)V	a	saveDataTag
	m	(Lui;)V	a	saveLevelData
	m	()Ljava/util/Optional;	j	getIconFile
	m	()V	k	deleteLevel
	m	(Ljava/lang/String;)V	a	renameLevel
	m	(Ljava/lang/String;)V	b	renameAndDropPlayer
	m	(Ljava/util/function/Consumer;)V	a	modifyLevelDataWithoutDatafix
	m	()J	l	makeWorldBackup
	m	()Z	m	hasWorldData
	m	()V	close	close
	m	()Z	n	restoreLevelDataFromOld
	m	(Z)Ljava/time/Instant;	a	getFileModificationTime
	m	(Ljava/lang/String;Lui;)V	a	lambda$renameAndDropPlayer$1
	m	(Ljava/lang/String;Lui;)V	b	lambda$renameLevel$0
c	fcs$c$1	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$1
	f	Ljava/nio/file/Path;	a	val$lockPath
	f	Lfcs$c;	b	this$1
	m	(Lfcs$c;Ljava/nio/file/Path;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	m	(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	a	postVisitDirectory
	m	(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;	postVisitDirectory	postVisitDirectory
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	visitFile	visitFile
c	fcs$c$2	net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess$2
	f	Ljava/nio/file/Path;	a	val$rootPath
	f	Ljava/util/zip/ZipOutputStream;	b	val$stream
	f	Lfcs$c;	c	this$1
	m	(Lfcs$c;Ljava/nio/file/Path;Ljava/util/zip/ZipOutputStream;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	visitFile
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	visitFile	visitFile
c	fct	net/minecraft/world/level/storage/LevelSummary
	f	Lxo;	a	PLAY_WORLD
	f	Ldmy;	b	settings
	f	Lfcu;	c	levelVersion
	f	Ljava/lang/String;	d	levelId
	f	Z	e	requiresManualConversion
	f	Z	f	locked
	f	Z	g	experimental
	f	Ljava/nio/file/Path;	h	icon
	f	Lxo;	i	info
	m	(Ldmy;Lfcu;Ljava/lang/String;ZZZLjava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getLevelId
	m	()Ljava/lang/String;	b	getLevelName
	m	()Ljava/nio/file/Path;	c	getIcon
	m	()Z	d	requiresManualConversion
	m	()Z	e	isExperimental
	m	()J	f	getLastPlayed
	m	(Lfct;)I	a	compareTo
	m	()Ldmy;	g	getSettings
	m	()Ldmr;	h	getGameMode
	m	()Z	i	isHardcore
	m	()Z	j	hasCommands
	m	()Lyc;	k	getWorldVersionName
	m	()Lfcu;	l	levelVersion
	m	()Z	m	shouldBackup
	m	()Z	n	isDowngrade
	m	()Lfct$a;	o	backupStatus
	m	()Z	p	isLocked
	m	()Z	q	isDisabled
	m	()Z	r	isCompatible
	m	()Lxo;	s	getInfo
	m	()Lxo;	z	createInfo
	m	()Lxo;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	m	()Z	y	canDelete
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	()V	<clinit>	<clinit>
c	fct$a	net/minecraft/world/level/storage/LevelSummary$BackupStatus
	f	Lfct$a;	a	NONE
	f	Lfct$a;	b	DOWNGRADE
	f	Lfct$a;	c	UPGRADE_TO_SNAPSHOT
	f	Z	d	shouldBackup
	f	Z	e	severe
	f	Ljava/lang/String;	f	translationKey
	f	[Lfct$a;	g	$VALUES
	m	()[Lfct$a;	values	values
	m	(Ljava/lang/String;)Lfct$a;	valueOf	valueOf
	m	(Ljava/lang/String;IZZLjava/lang/String;)V	<init>	<init>
	m	()Z	a	shouldBackup
	m	()Z	b	isSevere
	m	()Ljava/lang/String;	c	getTranslationKey
	m	()[Lfct$a;	d	$values
	m	()V	<clinit>	<clinit>
c	fct$b	net/minecraft/world/level/storage/LevelSummary$CorruptedLevelSummary
	f	Lxo;	b	INFO
	f	Lxo;	c	RECOVER
	f	J	d	lastPlayed
	m	(Ljava/lang/String;Ljava/nio/file/Path;J)V	<init>	<init>
	m	()Ljava/lang/String;	b	getLevelName
	m	()Lxo;	s	getInfo
	m	()J	f	getLastPlayed
	m	()Z	q	isDisabled
	m	()Lxo;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	(Lyl;)Lyl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fct$c	net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary
	f	Lxo;	b	MORE_INFO_BUTTON
	f	Lxo;	c	INFO
	m	(Ljava/lang/String;Ljava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/lang/String;	b	getLevelName
	m	()Lxo;	s	getInfo
	m	()J	f	getLastPlayed
	m	()Z	q	isDisabled
	m	()Lxo;	t	primaryActionMessage
	m	()Z	u	primaryActionActive
	m	()Z	v	canUpload
	m	()Z	w	canEdit
	m	()Z	x	canRecreate
	m	(Ljava/lang/Object;)I	compareTo	compareTo
	m	()V	<clinit>	<clinit>
c	fcu	net/minecraft/world/level/storage/LevelVersion
	f	I	a	levelDataVersion
	f	J	b	lastPlayed
	f	Ljava/lang/String;	c	minecraftVersionName
	f	Lfck;	d	minecraftVersion
	f	Z	e	snapshot
	m	(IJLjava/lang/String;ILjava/lang/String;Z)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;)Lfcu;	a	parse
	m	()I	a	levelDataVersion
	m	()J	b	lastPlayed
	m	()Ljava/lang/String;	c	minecraftVersionName
	m	()Lfck;	d	minecraftVersion
	m	()Z	e	snapshot
c	fcv	net/minecraft/world/level/storage/PlayerDataStorage
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Ljava/io/File;	c	playerDir
	f	Lcom/mojang/datafixers/DataFixer;	a	fixerUpper
	f	Ljava/time/format/DateTimeFormatter;	d	FORMATTER
	m	(Lfcs$c;Lcom/mojang/datafixers/DataFixer;)V	<init>	<init>
	m	(Lcut;)V	a	save
	m	(Lcut;Ljava/lang/String;)V	a	backup
	m	(Lcut;Ljava/lang/String;)Ljava/util/Optional;	b	load
	m	(Lcut;Lbci;)Ljava/util/Optional;	a	load
	m	(Lbci;Lcut;Lui;)Lfda;	a	lambda$load$1
	m	(Lcut;)Ljava/util/Optional;	b	lambda$load$0
	m	()V	<clinit>	<clinit>
c	fcw	net/minecraft/world/level/storage/PrimaryLevelData
	f	Lorg/slf4j/Logger;	f	LOGGER
	f	Ljava/lang/String;	a	LEVEL_NAME
	f	Ljava/lang/String;	b	PLAYER
	f	Ljava/lang/String;	c	WORLD_GEN_SETTINGS
	f	Ldmy;	g	settings
	f	Leky;	h	worldOptions
	f	Lfcw$a;	i	specialWorldProperty
	f	Lcom/mojang/serialization/Lifecycle;	j	worldGenSettingsLifecycle
	f	Ljb;	k	spawnPos
	f	F	l	spawnAngle
	f	J	m	gameTime
	f	J	n	dayTime
	f	Lui;	o	loadedPlayerTag
	f	I	p	version
	f	I	q	clearWeatherTime
	f	Z	r	raining
	f	I	s	rainTime
	f	Z	t	thundering
	f	I	u	thunderTime
	f	Z	v	initialized
	f	Z	w	difficultyLocked
	f	Left$d;	x	worldBorder
	f	Leib$a;	y	endDragonFightData
	f	Lui;	z	customBossEvents
	f	I	A	wanderingTraderSpawnDelay
	f	I	B	wanderingTraderSpawnChance
	f	Ljava/util/UUID;	C	wanderingTraderId
	f	Ljava/util/Set;	D	knownServerBrands
	f	Z	E	wasModded
	f	Ljava/util/Set;	F	removedFeatureFlags
	f	Lfif;	G	scheduledEvents
	m	(Lui;ZLjb;FJJIIIZIZZZLeft$d;IILjava/util/UUID;Ljava/util/Set;Ljava/util/Set;Lfif;Lui;Leib$a;Ldmy;Leky;Lfcw$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	(Ldmy;Leky;Lfcw$a;Lcom/mojang/serialization/Lifecycle;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Dynamic;Ldmy;Lfcw$a;Leky;Lcom/mojang/serialization/Lifecycle;)Lfcw;	a	parse
	m	(Ljz;Lui;)Lui;	a	createTag
	m	(Ljz;Lui;Lui;)V	a	setTagData
	m	(Ljava/util/Set;)Luo;	a	stringCollectionToTag
	m	()Ljb;	a	getSpawnPos
	m	()F	b	getSpawnAngle
	m	()J	c	getGameTime
	m	()J	d	getDayTime
	m	()Lui;	w	getLoadedPlayerTag
	m	(J)V	a	setGameTime
	m	(J)V	b	setDayTime
	m	(Ljb;F)V	a	setSpawn
	m	()Ljava/lang/String;	e	getLevelName
	m	()I	x	getVersion
	m	()I	f	getClearWeatherTime
	m	(I)V	a	setClearWeatherTime
	m	()Z	g	isThundering
	m	(Z)V	a	setThundering
	m	()I	h	getThunderTime
	m	(I)V	b	setThunderTime
	m	()Z	i	isRaining
	m	(Z)V	b	setRaining
	m	()I	j	getRainTime
	m	(I)V	c	setRainTime
	m	()Ldmr;	k	getGameType
	m	(Ldmr;)V	a	setGameType
	m	()Z	l	isHardcore
	m	()Z	m	isAllowCommands
	m	()Z	n	isInitialized
	m	(Z)V	c	setInitialized
	m	()Ldmq;	o	getGameRules
	m	()Left$d;	p	getWorldBorder
	m	(Left$d;)V	a	setWorldBorder
	m	()Lbxg;	q	getDifficulty
	m	(Lbxg;)V	a	setDifficulty
	m	()Z	r	isDifficultyLocked
	m	(Z)V	d	setDifficultyLocked
	m	()Lfif;	s	getScheduledEvents
	m	(Lq;Ldmw;)V	a	fillCrashReportCategory
	m	()Leky;	y	worldGenOptions
	m	()Z	z	isFlatWorld
	m	()Z	A	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Leib$a;	C	endDragonFightData
	m	(Leib$a;)V	a	setEndDragonFightData
	m	()Ldns;	D	getDataConfiguration
	m	(Ldns;)V	a	setDataConfiguration
	m	()Lui;	E	getCustomBossEvents
	m	(Lui;)V	a	setCustomBossEvents
	m	()I	t	getWanderingTraderSpawnDelay
	m	(I)V	d	setWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	(I)V	e	setWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ljava/util/Set;	H	getRemovedFeatureFlags
	m	()Lfcx;	I	overworldData
	m	()Ldmy;	J	getLevelSettings
	m	(Lui;Lvi;)V	a	lambda$setTagData$2
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	a	lambda$parse$1
	m	(Lcom/mojang/serialization/Dynamic;)Ljava/util/stream/Stream;	b	lambda$parse$0
	m	()V	<clinit>	<clinit>
c	fcw$a	net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty
	f	Lfcw$a;	a	NONE
	f	Lfcw$a;	b	FLAT
	f	Lfcw$a;	c	DEBUG
	f	[Lfcw$a;	d	$VALUES
	m	()[Lfcw$a;	values	values
	m	(Ljava/lang/String;)Lfcw$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfcw$a;	a	$values
	m	()V	<clinit>	<clinit>
c	fcx	net/minecraft/world/level/storage/ServerLevelData
	m	()Ljava/lang/String;	e	getLevelName
	m	(Z)V	a	setThundering
	m	()I	j	getRainTime
	m	(I)V	c	setRainTime
	m	(I)V	b	setThunderTime
	m	()I	h	getThunderTime
	m	(Lq;Ldmw;)V	a	fillCrashReportCategory
	m	()I	f	getClearWeatherTime
	m	(I)V	a	setClearWeatherTime
	m	()I	t	getWanderingTraderSpawnDelay
	m	(I)V	d	setWanderingTraderSpawnDelay
	m	()I	u	getWanderingTraderSpawnChance
	m	(I)V	e	setWanderingTraderSpawnChance
	m	()Ljava/util/UUID;	v	getWanderingTraderId
	m	(Ljava/util/UUID;)V	a	setWanderingTraderId
	m	()Ldmr;	k	getGameType
	m	(Left$d;)V	a	setWorldBorder
	m	()Left$d;	p	getWorldBorder
	m	()Z	n	isInitialized
	m	(Z)V	c	setInitialized
	m	()Z	m	isAllowCommands
	m	(Ldmr;)V	a	setGameType
	m	()Lfif;	s	getScheduledEvents
	m	(J)V	a	setGameTime
	m	(J)V	b	setDayTime
	m	()Ldmq;	o	getGameRules
	m	()Ljava/lang/String;	w	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	x	lambda$fillCrashReportCategory$0
c	fcy	net/minecraft/world/level/storage/TagValueInput
	f	Lbci;	a	problemReporter
	f	Lfdb;	b	context
	f	Lui;	c	input
	m	(Lbci;Lfdb;Lui;)V	<init>	<init>
	m	(Lbci;Ljn$a;Lui;)Lfda;	a	create
	m	(Lbci;Ljn$a;Ljava/util/List;)Lfda$b;	a	create
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	a	read
	m	(Lcom/mojang/serialization/MapCodec;)Ljava/util/Optional;	a	read
	m	(Ljava/lang/String;Lvk;)Lvi;	a	getOptionalTypedTag
	m	(Ljava/lang/String;)Luy;	i	getNumericTag
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	child
	m	(Ljava/lang/String;)Lfda;	b	childOrEmpty
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	childrenList
	m	(Ljava/lang/String;)Lfda$b;	d	childrenListOrEmpty
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	b	list
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfda$a;	c	listOrEmpty
	m	(Ljava/lang/String;Z)Z	a	getBooleanOr
	m	(Ljava/lang/String;B)B	a	getByteOr
	m	(Ljava/lang/String;S)I	a	getShortOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	getInt
	m	(Ljava/lang/String;I)I	a	getIntOr
	m	(Ljava/lang/String;J)J	a	getLongOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	f	getLong
	m	(Ljava/lang/String;F)F	a	getFloatOr
	m	(Ljava/lang/String;D)D	a	getDoubleOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	g	getString
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getStringOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	h	getIntArray
	m	()Ljn$a;	a	lookup
	m	(Ljava/lang/String;Lui;)Lfda;	a	wrapChild
	m	(Lbci;Lfdb;Lui;)Lfda;	a	wrapChild
	m	(Ljava/lang/String;Lfdb;Luo;)Lfda$b;	a	wrapList
	m	(Ljava/lang/String;Luo;Lcom/mojang/serialization/Codec;)Lfda$a;	a	wrapTypedList
	m	(Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult;	a	lambda$read$0
c	fcy$a	net/minecraft/world/level/storage/TagValueInput$CompoundListWrapper
	f	Lbci;	a	problemReporter
	f	Lfdb;	b	context
	f	Ljava/util/List;	c	list
	m	(Lbci;Lfdb;Ljava/util/List;)V	<init>	<init>
	m	(ILui;)Lfda;	a	wrapChild
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Lui;J)Lfda;	a	lambda$stream$0
c	fcy$a$1	net/minecraft/world/level/storage/TagValueInput$CompoundListWrapper$1
	f	Ljava/util/ListIterator;	a	val$iterator
	f	Lfcy$a;	b	this$0
	m	(Lfcy$a;Ljava/util/ListIterator;)V	<init>	<init>
	m	()Lfda;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	fcy$b	net/minecraft/world/level/storage/TagValueInput$DecodeFromFieldFailedProblem
	f	Ljava/lang/String;	a	name
	f	Lvi;	b	tag
	f	Lcom/mojang/serialization/DataResult$Error;	c	error
	m	(Ljava/lang/String;Lvi;Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Lvi;	c	tag
	m	()Lcom/mojang/serialization/DataResult$Error;	d	error
c	fcy$c	net/minecraft/world/level/storage/TagValueInput$DecodeFromListFailedProblem
	f	Ljava/lang/String;	a	name
	f	I	b	index
	f	Lvi;	c	tag
	f	Lcom/mojang/serialization/DataResult$Error;	d	error
	m	(Ljava/lang/String;ILvi;Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()I	c	index
	m	()Lvi;	d	tag
	m	()Lcom/mojang/serialization/DataResult$Error;	e	error
c	fcy$d	net/minecraft/world/level/storage/TagValueInput$DecodeFromMapFailedProblem
	f	Lcom/mojang/serialization/DataResult$Error;	a	error
	m	(Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/DataResult$Error;	b	error
c	fcy$e	net/minecraft/world/level/storage/TagValueInput$ListWrapper
	f	Lbci;	a	problemReporter
	f	Ljava/lang/String;	b	name
	f	Lfdb;	c	context
	f	Luo;	d	list
	m	(Lbci;Ljava/lang/String;Lfdb;Luo;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	(I)Lbci;	a	reporterForChild
	m	(ILvi;)V	a	reportIndexUnwrapProblem
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Lvi;J)Lfda;	a	lambda$stream$0
c	fcy$e$1	net/minecraft/world/level/storage/TagValueInput$ListWrapper$1
	f	I	c	index
	f	Ljava/util/Iterator;	a	val$iterator
	f	Lfcy$e;	b	this$0
	m	(Lfcy$e;Ljava/util/Iterator;)V	<init>	<init>
	m	()Lfda;	a	computeNext
	m	()Ljava/lang/Object;	computeNext	computeNext
c	fcy$f	net/minecraft/world/level/storage/TagValueInput$TypedListWrapper
	f	Lbci;	a	problemReporter
	f	Ljava/lang/String;	b	name
	f	Lfdb;	c	context
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Luo;	e	list
	m	(Lbci;Ljava/lang/String;Lfdb;Lcom/mojang/serialization/Codec;Luo;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	(ILvi;Lcom/mojang/serialization/DataResult$Error;)V	a	reportIndexUnwrapProblem
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
	m	(Lvi;J)Ljava/lang/Object;	a	lambda$stream$0
c	fcy$f$1	net/minecraft/world/level/storage/TagValueInput$TypedListWrapper$1
	f	Ljava/util/ListIterator;	a	val$iterator
	f	Lfcy$f;	b	this$0
	m	(Lfcy$f;Ljava/util/ListIterator;)V	<init>	<init>
	m	()Ljava/lang/Object;	computeNext	computeNext
c	fcy$g	net/minecraft/world/level/storage/TagValueInput$UnexpectedListElementTypeProblem
	f	Ljava/lang/String;	a	name
	f	I	b	index
	f	Lvk;	c	expected
	f	Lvk;	d	actual
	m	(Ljava/lang/String;ILvk;Lvk;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()I	c	index
	m	()Lvk;	d	expected
	m	()Lvk;	e	actual
c	fcy$h	net/minecraft/world/level/storage/TagValueInput$UnexpectedNonNumberProblem
	f	Ljava/lang/String;	a	name
	f	Lvk;	b	actual
	m	(Ljava/lang/String;Lvk;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Lvk;	c	actual
c	fcy$i	net/minecraft/world/level/storage/TagValueInput$UnexpectedTypeProblem
	f	Ljava/lang/String;	a	name
	f	Lvk;	b	expected
	f	Lvk;	c	actual
	m	(Ljava/lang/String;Lvk;Lvk;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Lvk;	c	expected
	m	()Lvk;	d	actual
c	fcz	net/minecraft/world/level/storage/TagValueOutput
	f	Lbci;	a	problemReporter
	f	Lcom/mojang/serialization/DynamicOps;	b	ops
	f	Lui;	c	output
	m	(Lbci;Lcom/mojang/serialization/DynamicOps;Lui;)V	<init>	<init>
	m	(Lbci;Ljn$a;)Lfcz;	a	createWithContext
	m	(Lbci;)Lfcz;	a	createWithoutContext
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	b	storeNullable
	m	(Lcom/mojang/serialization/MapCodec;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Z)V	a	putBoolean
	m	(Ljava/lang/String;B)V	a	putByte
	m	(Ljava/lang/String;S)V	a	putShort
	m	(Ljava/lang/String;I)V	a	putInt
	m	(Ljava/lang/String;J)V	a	putLong
	m	(Ljava/lang/String;F)V	a	putFloat
	m	(Ljava/lang/String;D)V	a	putDouble
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
	m	(Ljava/lang/String;[I)V	a	putIntArray
	m	(Ljava/lang/String;)Lbci;	d	reporterForChild
	m	(Ljava/lang/String;)Lfdc;	a	child
	m	(Ljava/lang/String;)Lfdc$b;	b	childrenList
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfdc$a;	a	list
	m	(Ljava/lang/String;)V	c	discard
	m	()Z	a	isEmpty
	m	()Lui;	b	buildResult
	m	(Lvi;)V	a	lambda$store$1
	m	(Ljava/lang/String;Lvi;)V	a	lambda$store$0
c	fcz$a	net/minecraft/world/level/storage/TagValueOutput$EncodeToFieldFailedProblem
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/Object;	b	value
	f	Lcom/mojang/serialization/DataResult$Error;	c	error
	m	(Ljava/lang/String;Ljava/lang/Object;Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Ljava/lang/Object;	c	value
	m	()Lcom/mojang/serialization/DataResult$Error;	d	error
c	fcz$b	net/minecraft/world/level/storage/TagValueOutput$EncodeToListFailedProblem
	f	Ljava/lang/String;	a	name
	f	Ljava/lang/Object;	b	value
	f	Lcom/mojang/serialization/DataResult$Error;	c	error
	m	(Ljava/lang/String;Ljava/lang/Object;Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	b	name
	m	()Ljava/lang/Object;	c	value
	m	()Lcom/mojang/serialization/DataResult$Error;	d	error
c	fcz$c	net/minecraft/world/level/storage/TagValueOutput$EncodeToMapFailedProblem
	f	Ljava/lang/Object;	a	value
	f	Lcom/mojang/serialization/DataResult$Error;	b	error
	m	(Ljava/lang/Object;Lcom/mojang/serialization/DataResult$Error;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	b	value
	m	()Lcom/mojang/serialization/DataResult$Error;	c	error
c	fcz$d	net/minecraft/world/level/storage/TagValueOutput$ListWrapper
	f	Ljava/lang/String;	a	fieldName
	f	Lbci;	b	problemReporter
	f	Lcom/mojang/serialization/DynamicOps;	c	ops
	f	Luo;	d	output
	m	(Ljava/lang/String;Lbci;Lcom/mojang/serialization/DynamicOps;Luo;)V	<init>	<init>
	m	()Lfdc;	a	addChild
	m	()V	b	discardLast
	m	()Z	c	isEmpty
c	fcz$e	net/minecraft/world/level/storage/TagValueOutput$TypedListWrapper
	f	Lbci;	a	problemReporter
	f	Ljava/lang/String;	b	name
	f	Lcom/mojang/serialization/DynamicOps;	c	ops
	f	Lcom/mojang/serialization/Codec;	d	codec
	f	Luo;	e	output
	m	(Lbci;Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Luo;)V	<init>	<init>
	m	(Ljava/lang/Object;)V	a	add
	m	()Z	a	isEmpty
c	fda	net/minecraft/world/level/storage/ValueInput
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	a	read
	m	(Lcom/mojang/serialization/MapCodec;)Ljava/util/Optional;	a	read
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	child
	m	(Ljava/lang/String;)Lfda;	b	childOrEmpty
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	childrenList
	m	(Ljava/lang/String;)Lfda$b;	d	childrenListOrEmpty
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	b	list
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfda$a;	c	listOrEmpty
	m	(Ljava/lang/String;Z)Z	a	getBooleanOr
	m	(Ljava/lang/String;B)B	a	getByteOr
	m	(Ljava/lang/String;S)I	a	getShortOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	getInt
	m	(Ljava/lang/String;I)I	a	getIntOr
	m	(Ljava/lang/String;J)J	a	getLongOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	f	getLong
	m	(Ljava/lang/String;F)F	a	getFloatOr
	m	(Ljava/lang/String;D)D	a	getDoubleOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	g	getString
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getStringOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	h	getIntArray
	m	()Ljn$a;	a	lookup
c	fda$a	net/minecraft/world/level/storage/ValueInput$TypedInputList
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	stream
c	fda$b	net/minecraft/world/level/storage/ValueInput$ValueInputList
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	stream
c	fdb	net/minecraft/world/level/storage/ValueInputContextHelper
	f	Ljn$a;	a	lookup
	f	Lcom/mojang/serialization/DynamicOps;	b	ops
	f	Lfda$b;	c	emptyChildList
	f	Lfda$a;	d	emptyTypedList
	f	Lfda;	e	empty
	m	(Ljn$a;Lcom/mojang/serialization/DynamicOps;)V	<init>	<init>
	m	()Lcom/mojang/serialization/DynamicOps;	a	ops
	m	()Ljn$a;	b	lookup
	m	()Lfda;	c	empty
	m	()Lfda$b;	d	emptyList
	m	()Lfda$a;	e	emptyTypedList
c	fdb$1	net/minecraft/world/level/storage/ValueInputContextHelper$1
	m	(Lfdb;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
c	fdb$2	net/minecraft/world/level/storage/ValueInputContextHelper$2
	m	(Lfdb;)V	<init>	<init>
	m	()Z	a	isEmpty
	m	()Ljava/util/stream/Stream;	b	stream
	m	()Ljava/util/Iterator;	iterator	iterator
c	fdb$3	net/minecraft/world/level/storage/ValueInputContextHelper$3
	f	Lfdb;	a	this$0
	m	(Lfdb;)V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	a	read
	m	(Lcom/mojang/serialization/MapCodec;)Ljava/util/Optional;	a	read
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	child
	m	(Ljava/lang/String;)Lfda;	b	childOrEmpty
	m	(Ljava/lang/String;)Ljava/util/Optional;	c	childrenList
	m	(Ljava/lang/String;)Lfda$b;	d	childrenListOrEmpty
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Ljava/util/Optional;	b	list
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfda$a;	c	listOrEmpty
	m	(Ljava/lang/String;Z)Z	a	getBooleanOr
	m	(Ljava/lang/String;B)B	a	getByteOr
	m	(Ljava/lang/String;S)I	a	getShortOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	e	getInt
	m	(Ljava/lang/String;I)I	a	getIntOr
	m	(Ljava/lang/String;J)J	a	getLongOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	f	getLong
	m	(Ljava/lang/String;F)F	a	getFloatOr
	m	(Ljava/lang/String;D)D	a	getDoubleOr
	m	(Ljava/lang/String;)Ljava/util/Optional;	g	getString
	m	(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;	a	getStringOr
	m	()Ljn$a;	a	lookup
	m	(Ljava/lang/String;)Ljava/util/Optional;	h	getIntArray
c	fdc	net/minecraft/world/level/storage/ValueOutput
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V	b	storeNullable
	m	(Lcom/mojang/serialization/MapCodec;Ljava/lang/Object;)V	a	store
	m	(Ljava/lang/String;Z)V	a	putBoolean
	m	(Ljava/lang/String;B)V	a	putByte
	m	(Ljava/lang/String;S)V	a	putShort
	m	(Ljava/lang/String;I)V	a	putInt
	m	(Ljava/lang/String;J)V	a	putLong
	m	(Ljava/lang/String;F)V	a	putFloat
	m	(Ljava/lang/String;D)V	a	putDouble
	m	(Ljava/lang/String;Ljava/lang/String;)V	a	putString
	m	(Ljava/lang/String;[I)V	a	putIntArray
	m	(Ljava/lang/String;)Lfdc;	a	child
	m	(Ljava/lang/String;)Lfdc$b;	b	childrenList
	m	(Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lfdc$a;	a	list
	m	(Ljava/lang/String;)V	c	discard
	m	()Z	a	isEmpty
c	fdc$a	net/minecraft/world/level/storage/ValueOutput$TypedOutputList
	m	(Ljava/lang/Object;)V	a	add
	m	()Z	a	isEmpty
c	fdc$b	net/minecraft/world/level/storage/ValueOutput$ValueOutputList
	m	()Lfdc;	a	addChild
	m	()V	b	discardLast
	m	()Z	c	isEmpty
c	fdd	net/minecraft/world/level/storage/WorldData
	f	I	d	ANVIL_VERSION_ID
	f	I	e	MCREGION_VERSION_ID
	m	()Ldns;	D	getDataConfiguration
	m	(Ldns;)V	a	setDataConfiguration
	m	()Z	F	wasModded
	m	()Ljava/util/Set;	G	getKnownServerBrands
	m	()Ljava/util/Set;	H	getRemovedFeatureFlags
	m	(Ljava/lang/String;Z)V	a	setModdedInfo
	m	(Lq;)V	a	fillCrashReportCategory
	m	(I)Ljava/lang/String;	f	getStorageVersionName
	m	()Lui;	E	getCustomBossEvents
	m	(Lui;)V	a	setCustomBossEvents
	m	()Lfcx;	I	overworldData
	m	()Ldmy;	J	getLevelSettings
	m	(Ljz;Lui;)Lui;	a	createTag
	m	()Z	l	isHardcore
	m	()I	x	getVersion
	m	()Ljava/lang/String;	e	getLevelName
	m	()Ldmr;	k	getGameType
	m	(Ldmr;)V	a	setGameType
	m	()Z	m	isAllowCommands
	m	()Lbxg;	q	getDifficulty
	m	(Lbxg;)V	a	setDifficulty
	m	()Z	r	isDifficultyLocked
	m	(Z)V	d	setDifficultyLocked
	m	()Ldmq;	o	getGameRules
	m	()Lui;	w	getLoadedPlayerTag
	m	()Leib$a;	C	endDragonFightData
	m	(Leib$a;)V	a	setEndDragonFightData
	m	()Leky;	y	worldGenOptions
	m	()Z	z	isFlatWorld
	m	()Z	A	isDebugWorld
	m	()Lcom/mojang/serialization/Lifecycle;	B	worldGenSettingsLifecycle
	m	()Lcyd;	K	enabledFeatures
	m	()Ljava/lang/String;	a	lambda$fillCrashReportCategory$3
	m	()Ljava/lang/String;	b	lambda$fillCrashReportCategory$2
	m	()Ljava/lang/String;	c	lambda$fillCrashReportCategory$1
	m	()Ljava/lang/String;	d	lambda$fillCrashReportCategory$0
c	fde	net/minecraft/world/level/storage/WritableLevelData
	m	(Ljb;F)V	a	setSpawn
c	fdf	net/minecraft/world/level/storage/loot/BuiltInLootTables
	f	Ljava/util/Set;	bd	LOCATIONS
	f	Ljava/util/Set;	be	IMMUTABLE_LOCATIONS
	f	Lamd;	a	SPAWN_BONUS_CHEST
	f	Lamd;	b	END_CITY_TREASURE
	f	Lamd;	c	SIMPLE_DUNGEON
	f	Lamd;	d	VILLAGE_WEAPONSMITH
	f	Lamd;	e	VILLAGE_TOOLSMITH
	f	Lamd;	f	VILLAGE_ARMORER
	f	Lamd;	g	VILLAGE_CARTOGRAPHER
	f	Lamd;	h	VILLAGE_MASON
	f	Lamd;	i	VILLAGE_SHEPHERD
	f	Lamd;	j	VILLAGE_BUTCHER
	f	Lamd;	k	VILLAGE_FLETCHER
	f	Lamd;	l	VILLAGE_FISHER
	f	Lamd;	m	VILLAGE_TANNERY
	f	Lamd;	n	VILLAGE_TEMPLE
	f	Lamd;	o	VILLAGE_DESERT_HOUSE
	f	Lamd;	p	VILLAGE_PLAINS_HOUSE
	f	Lamd;	q	VILLAGE_TAIGA_HOUSE
	f	Lamd;	r	VILLAGE_SNOWY_HOUSE
	f	Lamd;	s	VILLAGE_SAVANNA_HOUSE
	f	Lamd;	t	ABANDONED_MINESHAFT
	f	Lamd;	u	NETHER_BRIDGE
	f	Lamd;	v	STRONGHOLD_LIBRARY
	f	Lamd;	w	STRONGHOLD_CROSSING
	f	Lamd;	x	STRONGHOLD_CORRIDOR
	f	Lamd;	y	DESERT_PYRAMID
	f	Lamd;	z	JUNGLE_TEMPLE
	f	Lamd;	A	JUNGLE_TEMPLE_DISPENSER
	f	Lamd;	B	IGLOO_CHEST
	f	Lamd;	C	WOODLAND_MANSION
	f	Lamd;	D	UNDERWATER_RUIN_SMALL
	f	Lamd;	E	UNDERWATER_RUIN_BIG
	f	Lamd;	F	BURIED_TREASURE
	f	Lamd;	G	SHIPWRECK_MAP
	f	Lamd;	H	SHIPWRECK_SUPPLY
	f	Lamd;	I	SHIPWRECK_TREASURE
	f	Lamd;	J	PILLAGER_OUTPOST
	f	Lamd;	K	BASTION_TREASURE
	f	Lamd;	L	BASTION_OTHER
	f	Lamd;	M	BASTION_BRIDGE
	f	Lamd;	N	BASTION_HOGLIN_STABLE
	f	Lamd;	O	ANCIENT_CITY
	f	Lamd;	P	ANCIENT_CITY_ICE_BOX
	f	Lamd;	Q	RUINED_PORTAL
	f	Lamd;	R	TRIAL_CHAMBERS_REWARD
	f	Lamd;	S	TRIAL_CHAMBERS_REWARD_COMMON
	f	Lamd;	T	TRIAL_CHAMBERS_REWARD_RARE
	f	Lamd;	U	TRIAL_CHAMBERS_REWARD_UNIQUE
	f	Lamd;	V	TRIAL_CHAMBERS_REWARD_OMINOUS
	f	Lamd;	W	TRIAL_CHAMBERS_REWARD_OMINOUS_COMMON
	f	Lamd;	X	TRIAL_CHAMBERS_REWARD_OMINOUS_RARE
	f	Lamd;	Y	TRIAL_CHAMBERS_REWARD_OMINOUS_UNIQUE
	f	Lamd;	Z	TRIAL_CHAMBERS_SUPPLY
	f	Lamd;	aa	TRIAL_CHAMBERS_CORRIDOR
	f	Lamd;	ab	TRIAL_CHAMBERS_INTERSECTION
	f	Lamd;	ac	TRIAL_CHAMBERS_INTERSECTION_BARREL
	f	Lamd;	ad	TRIAL_CHAMBERS_ENTRANCE
	f	Lamd;	ae	TRIAL_CHAMBERS_CORRIDOR_DISPENSER
	f	Lamd;	af	TRIAL_CHAMBERS_CHAMBER_DISPENSER
	f	Lamd;	ag	TRIAL_CHAMBERS_WATER_DISPENSER
	f	Lamd;	ah	TRIAL_CHAMBERS_CORRIDOR_POT
	f	Lamd;	ai	EQUIPMENT_TRIAL_CHAMBER
	f	Lamd;	aj	EQUIPMENT_TRIAL_CHAMBER_RANGED
	f	Lamd;	ak	EQUIPMENT_TRIAL_CHAMBER_MELEE
	f	Ljava/util/Map;	al	SHEEP_BY_DYE
	f	Lamd;	am	FISHING
	f	Lamd;	an	FISHING_JUNK
	f	Lamd;	ao	FISHING_TREASURE
	f	Lamd;	ap	FISHING_FISH
	f	Lamd;	aq	CAT_MORNING_GIFT
	f	Lamd;	ar	ARMORER_GIFT
	f	Lamd;	as	BUTCHER_GIFT
	f	Lamd;	at	CARTOGRAPHER_GIFT
	f	Lamd;	au	CLERIC_GIFT
	f	Lamd;	av	FARMER_GIFT
	f	Lamd;	aw	FISHERMAN_GIFT
	f	Lamd;	ax	FLETCHER_GIFT
	f	Lamd;	ay	LEATHERWORKER_GIFT
	f	Lamd;	az	LIBRARIAN_GIFT
	f	Lamd;	aA	MASON_GIFT
	f	Lamd;	aB	SHEPHERD_GIFT
	f	Lamd;	aC	TOOLSMITH_GIFT
	f	Lamd;	aD	WEAPONSMITH_GIFT
	f	Lamd;	aE	UNEMPLOYED_GIFT
	f	Lamd;	aF	BABY_VILLAGER_GIFT
	f	Lamd;	aG	SNIFFER_DIGGING
	f	Lamd;	aH	PANDA_SNEEZE
	f	Lamd;	aI	CHICKEN_LAY
	f	Lamd;	aJ	ARMADILLO_SHED
	f	Lamd;	aK	PIGLIN_BARTERING
	f	Lamd;	aL	SPAWNER_TRIAL_CHAMBER_KEY
	f	Lamd;	aM	SPAWNER_TRIAL_CHAMBER_CONSUMABLES
	f	Lamd;	aN	SPAWNER_OMINOUS_TRIAL_CHAMBER_KEY
	f	Lamd;	aO	SPAWNER_OMINOUS_TRIAL_CHAMBER_CONSUMABLES
	f	Lamd;	aP	SPAWNER_TRIAL_ITEMS_TO_DROP_WHEN_OMINOUS
	f	Lamd;	aQ	BOGGED_SHEAR
	f	Lamd;	aR	SHEAR_MOOSHROOM
	f	Lamd;	aS	SHEAR_RED_MOOSHROOM
	f	Lamd;	aT	SHEAR_BROWN_MOOSHROOM
	f	Lamd;	aU	SHEAR_SNOW_GOLEM
	f	Lamd;	aV	SHEAR_SHEEP
	f	Ljava/util/Map;	aW	SHEAR_SHEEP_BY_DYE
	f	Lamd;	aX	DESERT_WELL_ARCHAEOLOGY
	f	Lamd;	aY	DESERT_PYRAMID_ARCHAEOLOGY
	f	Lamd;	aZ	TRAIL_RUINS_ARCHAEOLOGY_COMMON
	f	Lamd;	ba	TRAIL_RUINS_ARCHAEOLOGY_RARE
	f	Lamd;	bb	OCEAN_RUIN_WARM_ARCHAEOLOGY
	f	Lamd;	bc	OCEAN_RUIN_COLD_ARCHAEOLOGY
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Ljava/util/Map;	a	makeDyeKeyMap
	m	(Ljava/lang/String;)Lamd;	b	register
	m	(Lamd;)Lamd;	a	register
	m	()Ljava/util/Set;	a	all
	m	(Ljava/lang/String;Ldbt;)Lamd;	a	lambda$makeDyeKeyMap$0
	m	()V	<clinit>	<clinit>
c	fdg	net/minecraft/world/level/storage/loot/ContainerComponentManipulator
	m	()Lkp;	a	type
	m	()Ljava/lang/Object;	b	empty
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
	m	(Ldcv;Ljava/lang/Object;Ljava/util/stream/Stream;)V	a	setContents
	m	(Ldcv;Ljava/util/stream/Stream;)V	a	setContents
	m	(Ldcv;Ljava/util/function/UnaryOperator;)V	a	modifyItems
	m	(Ljava/util/function/UnaryOperator;Ldcv;)Ldcv;	a	lambda$modifyItems$0
c	fdh	net/minecraft/world/level/storage/loot/ContainerComponentManipulators
	f	Lfdg;	a	CONTAINER
	f	Lfdg;	b	BUNDLE_CONTENTS
	f	Lfdg;	c	CHARGED_PROJECTILES
	f	Ljava/util/Map;	d	ALL_MANIPULATORS
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	m	(Lkp;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	()Ljava/lang/String;	a	lambda$static$1
	m	(Lfdg;)Lfdg;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdh$1	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$1
	m	()V	<init>	<init>
	m	()Lkp;	a	type
	m	(Ldfn;)Ljava/util/stream/Stream;	a	getContents
	m	()Ldfn;	c	empty
	m	(Ldfn;Ljava/util/stream/Stream;)Ldfn;	a	setContents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
	m	()Ljava/lang/Object;	b	empty
c	fdh$2	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$2
	m	()V	<init>	<init>
	m	()Lkp;	a	type
	m	()Ldey;	c	empty
	m	(Ldey;)Ljava/util/stream/Stream;	a	getContents
	m	(Ldey;Ljava/util/stream/Stream;)Ldey;	a	setContents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
	m	()Ljava/lang/Object;	b	empty
c	fdh$3	net/minecraft/world/level/storage/loot/ContainerComponentManipulators$3
	m	()V	<init>	<init>
	m	()Lkp;	a	type
	m	()Ldez;	c	empty
	m	(Ldez;)Ljava/util/stream/Stream;	a	getContents
	m	(Ldez;Ljava/util/stream/Stream;)Ldez;	a	setContents
	m	(Ljava/lang/Object;)Ljava/util/stream/Stream;	a	getContents
	m	(Ljava/lang/Object;Ljava/util/stream/Stream;)Ljava/lang/Object;	a	setContents
	m	()Ljava/lang/Object;	b	empty
c	fdi	net/minecraft/world/level/storage/loot/IntRange
	f	Lcom/mojang/serialization/Codec;	b	RECORD_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfho;	c	min
	f	Lfho;	d	max
	f	Lfdi$b;	e	limiter
	f	Lfdi$a;	f	predicate
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Lfho;Lfho;)V	<init>	<init>
	m	(I)Lfdi;	a	exact
	m	(II)Lfdi;	a	range
	m	(I)Lfdi;	b	lowerBound
	m	(I)Lfdi;	c	upperBound
	m	(Lfdj;I)I	a	clamp
	m	(Lfdj;I)Z	b	test
	m	()Ljava/util/OptionalInt;	b	unpackExact
	m	(Lfho;Lfho;Lfdj;I)Z	a	lambda$new$12
	m	(Lfho;Lfho;Lfdj;I)I	b	lambda$new$11
	m	(Lfho;Lfdj;I)Z	a	lambda$new$10
	m	(Lfho;Lfdj;I)I	b	lambda$new$9
	m	(Lfho;Lfdj;I)Z	c	lambda$new$8
	m	(Lfho;Lfdj;I)I	d	lambda$new$7
	m	(Lfdj;I)Z	c	lambda$new$6
	m	(Lfdj;I)I	d	lambda$new$5
	m	(Lfdi;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$4
	m	(Lcom/mojang/datafixers/util/Either;)Lfdi;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lfdi;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lfdi;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdi$a	net/minecraft/world/level/storage/loot/IntRange$IntChecker
	m	(Lfdj;I)Z	test	test
c	fdi$b	net/minecraft/world/level/storage/loot/IntRange$IntLimiter
	m	(Lfdj;I)I	apply	apply
c	fdj	net/minecraft/world/level/storage/loot/LootContext
	f	Lfdm;	a	params
	f	Lbck;	b	random
	f	Ljm$a;	c	lootDataResolver
	f	Ljava/util/Set;	d	visitedElements
	m	(Lfdm;Lbck;Ljm$a;)V	<init>	<init>
	m	(Lbdn;)Z	a	hasParameter
	m	(Lbdn;)Ljava/lang/Object;	b	getParameter
	m	(Lbdn;)Ljava/lang/Object;	c	getOptionalParameter
	m	(Lame;Ljava/util/function/Consumer;)V	a	addDynamicDrops
	m	(Lfdj$c;)Z	a	hasVisitedElement
	m	(Lfdj$c;)Z	b	pushVisitedElement
	m	(Lfdj$c;)V	c	popVisitedElement
	m	()Ljm$a;	a	getResolver
	m	()Lbck;	b	getRandom
	m	()F	c	getLuck
	m	()Laub;	d	getLevel
	m	(Lfdo;)Lfdj$c;	a	createVisitedEntry
	m	(Lfgs;)Lfdj$c;	a	createVisitedEntry
	m	(Lfex;)Lfdj$c;	a	createVisitedEntry
c	fdj$a	net/minecraft/world/level/storage/loot/LootContext$Builder
	f	Lfdm;	a	params
	f	Lbck;	b	random
	m	(Lfdm;)V	<init>	<init>
	m	(J)Lfdj$a;	a	withOptionalRandomSeed
	m	(Lbck;)Lfdj$a;	a	withOptionalRandomSource
	m	()Laub;	a	getLevel
	m	(Ljava/util/Optional;)Lfdj;	a	create
	m	(Ljava/util/Optional;Laub;)Ljava/util/Optional;	a	lambda$create$0
c	fdj$b	net/minecraft/world/level/storage/loot/LootContext$EntityTarget
	f	Lfdj$b;	a	THIS
	f	Lfdj$b;	b	ATTACKER
	f	Lfdj$b;	c	DIRECT_ATTACKER
	f	Lfdj$b;	d	ATTACKING_PLAYER
	f	Lbda$a;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Lbdn;	g	param
	f	[Lfdj$b;	h	$VALUES
	m	()[Lfdj$b;	values	values
	m	(Ljava/lang/String;)Lfdj$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lbdn;)V	<init>	<init>
	m	()Lbdn;	a	getParam
	m	(Ljava/lang/String;)Lfdj$b;	a	getByName
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lfdj$b;	b	$values
	m	()V	<clinit>	<clinit>
c	fdj$c	net/minecraft/world/level/storage/loot/LootContext$VisitedEntry
	f	Lfdl;	a	type
	f	Ljava/lang/Object;	b	value
	m	(Lfdl;Ljava/lang/Object;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfdl;	a	type
	m	()Ljava/lang/Object;	b	value
c	fdk	net/minecraft/world/level/storage/loot/LootContextUser
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdp;)V	a	validate
c	fdl	net/minecraft/world/level/storage/loot/LootDataType
	f	Lamd;	d	registryKey
	f	Lcom/mojang/serialization/Codec;	e	codec
	f	Lfdl$a;	f	validator
	f	Lfdl;	a	PREDICATE
	f	Lfdl;	b	MODIFIER
	f	Lfdl;	c	TABLE
	m	(Lamd;Lcom/mojang/serialization/Codec;Lfdl$a;)V	<init>	<init>
	m	(Lfdp;Lamd;Ljava/lang/Object;)V	a	runValidation
	m	()Ljava/util/stream/Stream;	a	values
	m	()Lfdl$a;	e	createSimpleValidator
	m	()Lfdl$a;	f	createLootTableValidator
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	registryKey
	m	()Lcom/mojang/serialization/Codec;	c	codec
	m	()Lfdl$a;	d	validator
	m	(Lfdp;Lamd;Lfdo;)V	a	lambda$createLootTableValidator$1
	m	(Lfdp;Lamd;Lfdk;)V	a	lambda$createSimpleValidator$0
	m	()V	<clinit>	<clinit>
c	fdl$a	net/minecraft/world/level/storage/loot/LootDataType$Validator
	m	(Lfdp;Lamd;Ljava/lang/Object;)V	run	run
c	fdm	net/minecraft/world/level/storage/loot/LootParams
	f	Laub;	a	level
	f	Lbdp;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
	m	(Laub;Lbdp;Ljava/util/Map;F)V	<init>	<init>
	m	()Laub;	a	getLevel
	m	()Lbdp;	b	contextMap
	m	(Lame;Ljava/util/function/Consumer;)V	a	addDynamicDrops
	m	()F	c	getLuck
c	fdm$a	net/minecraft/world/level/storage/loot/LootParams$Builder
	f	Laub;	a	level
	f	Lbdp$a;	b	params
	f	Ljava/util/Map;	c	dynamicDrops
	f	F	d	luck
	m	(Laub;)V	<init>	<init>
	m	()Laub;	a	getLevel
	m	(Lbdn;Ljava/lang/Object;)Lfdm$a;	a	withParameter
	m	(Lbdn;Ljava/lang/Object;)Lfdm$a;	b	withOptionalParameter
	m	(Lbdn;)Ljava/lang/Object;	a	getParameter
	m	(Lbdn;)Ljava/lang/Object;	b	getOptionalParameter
	m	(Lame;Lfdm$b;)Lfdm$a;	a	withDynamicDrop
	m	(F)Lfdm$a;	a	withLuck
	m	(Lbdo;)Lfdm;	a	create
c	fdm$b	net/minecraft/world/level/storage/loot/LootParams$DynamicDrop
	m	(Ljava/util/function/Consumer;)V	add	add
c	fdn	net/minecraft/world/level/storage/loot/LootPool
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Ljava/util/List;	b	entries
	f	Ljava/util/List;	c	conditions
	f	Ljava/util/function/Predicate;	d	compositeCondition
	f	Ljava/util/List;	e	functions
	f	Ljava/util/function/BiFunction;	f	compositeFunction
	f	Lfho;	g	rolls
	f	Lfho;	h	bonusRolls
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/List;Lfho;Lfho;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;Lfdj;)V	b	addRandomItem
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	addRandomItems
	m	(Lfdp;)V	a	validate
	m	()Lfdn$a;	a	lootPool
	m	(Lfdj;Ljava/util/List;Lorg/apache/commons/lang3/mutable/MutableInt;Lfdy;)V	a	lambda$addRandomItem$6
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$5
	m	(Lfdn;)Lfho;	a	lambda$static$4
	m	(Lfdn;)Lfho;	b	lambda$static$3
	m	(Lfdn;)Ljava/util/List;	c	lambda$static$2
	m	(Lfdn;)Ljava/util/List;	d	lambda$static$1
	m	(Lfdn;)Ljava/util/List;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdn$a	net/minecraft/world/level/storage/loot/LootPool$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	conditions
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
	f	Lfho;	d	rolls
	f	Lfho;	e	bonusRolls
	m	()V	<init>	<init>
	m	(Lfho;)Lfdn$a;	a	setRolls
	m	()Lfdn$a;	a	unwrap
	m	(Lfho;)Lfdn$a;	b	setBonusRolls
	m	(Lfdz$a;)Lfdn$a;	a	add
	m	(Lfgs$a;)Lfdn$a;	a	when
	m	(Lfex$a;)Lfdn$a;	a	apply
	m	()Lfdn;	b	build
	m	()Lfet;	c	unwrap
	m	(Lfex$a;)Lfet;	b	apply
	m	()Lfgk;	d	unwrap
	m	(Lfgs$a;)Lfgk;	b	when
c	fdo	net/minecraft/world/level/storage/loot/LootTable
	f	Lorg/slf4j/Logger;	g	LOGGER
	f	Lcom/mojang/serialization/Codec;	a	KEY_CODEC
	f	Lbdo;	b	DEFAULT_PARAM_SET
	f	J	c	RANDOMIZE_SEED
	f	Lcom/mojang/serialization/Codec;	d	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Lfdo;	f	EMPTY
	f	Lbdo;	h	paramSet
	f	Ljava/util/Optional;	i	randomSequence
	f	Ljava/util/List;	j	pools
	f	Ljava/util/List;	k	functions
	f	Ljava/util/function/BiFunction;	l	compositeFunction
	m	(Lbdo;Ljava/util/Optional;Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Laub;Ljava/util/function/Consumer;)Ljava/util/function/Consumer;	a	createStackSplitter
	m	(Lfdm;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
	m	(Lfdj;Ljava/util/function/Consumer;)V	a	getRandomItemsRaw
	m	(Lfdm;JLjava/util/function/Consumer;)V	a	getRandomItems
	m	(Lfdm;Ljava/util/function/Consumer;)V	b	getRandomItems
	m	(Lfdj;Ljava/util/function/Consumer;)V	b	getRandomItems
	m	(Lfdm;Lbck;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
	m	(Lfdm;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
	m	(Lfdm;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
	m	(Lfdj;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList;	a	getRandomItems
	m	()Lbdo;	a	getParamSet
	m	(Lfdp;)V	a	validate
	m	(Lbxc;Lfdm;J)V	a	fill
	m	(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILbck;)V	a	shuffleAndSplitItems
	m	(Lbxc;Lbck;)Ljava/util/List;	a	getAvailableSlots
	m	()Lfdo$a;	b	lootTable
	m	(Laub;Ljava/util/function/Consumer;Ldcv;)V	a	lambda$createStackSplitter$6
	m	()Lcom/mojang/serialization/Codec;	c	lambda$static$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$4
	m	(Lfdo;)Ljava/util/List;	a	lambda$static$3
	m	(Lfdo;)Ljava/util/List;	b	lambda$static$2
	m	(Lfdo;)Ljava/util/Optional;	c	lambda$static$1
	m	(Lfdo;)Lbdo;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdo$a	net/minecraft/world/level/storage/loot/LootTable$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	pools
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	functions
	f	Lbdo;	c	paramSet
	f	Ljava/util/Optional;	d	randomSequence
	m	()V	<init>	<init>
	m	(Lfdn$a;)Lfdo$a;	a	withPool
	m	(Lbdo;)Lfdo$a;	a	setParamSet
	m	(Lame;)Lfdo$a;	a	setRandomSequence
	m	(Lfex$a;)Lfdo$a;	a	apply
	m	()Lfdo$a;	a	unwrap
	m	()Lfdo;	b	build
	m	()Lfet;	c	unwrap
	m	(Lfex$a;)Lfet;	b	apply
c	fdp	net/minecraft/world/level/storage/loot/ValidationContext
	f	Lbci;	a	reporter
	f	Lbdo;	b	contextKeySet
	f	Ljava/util/Optional;	c	resolver
	f	Ljava/util/Set;	d	visitedElements
	m	(Lbci;Lbdo;Ljm$a;)V	<init>	<init>
	m	(Lbci;Lbdo;)V	<init>	<init>
	m	(Lbci;Lbdo;Ljava/util/Optional;Ljava/util/Set;)V	<init>	<init>
	m	(Lbci$f;)Lfdp;	a	forChild
	m	(Lbci$f;Lamd;)Lfdp;	a	enterElement
	m	(Lamd;)Z	a	hasVisitedElement
	m	(Lbci$g;)V	a	reportProblem
	m	(Lfdk;)V	a	validateContextUsage
	m	()Ljm$a;	a	resolver
	m	()Z	b	allowsReferences
	m	(Lbdo;)Lfdp;	a	setContextKeySet
	m	()Lbci;	c	reporter
	m	()Ljava/lang/UnsupportedOperationException;	d	lambda$resolver$0
c	fdp$a	net/minecraft/world/level/storage/loot/ValidationContext$MissingReferenceProblem
	f	Lamd;	a	referenced
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	referenced
c	fdp$b	net/minecraft/world/level/storage/loot/ValidationContext$ParametersNotProvidedProblem
	f	Ljava/util/Set;	a	notProvided
	m	(Ljava/util/Set;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Set;	b	notProvided
c	fdp$c	net/minecraft/world/level/storage/loot/ValidationContext$RecursiveReferenceProblem
	f	Lamd;	a	referenced
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	referenced
c	fdp$d	net/minecraft/world/level/storage/loot/ValidationContext$ReferenceNotAllowedProblem
	f	Lamd;	a	referenced
	m	(Lamd;)V	<init>	<init>
	m	()Ljava/lang/String;	a	description
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	b	referenced
c	fdq	net/minecraft/world/level/storage/loot/entries/AlternativesEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbci$g;	b	UNREACHABLE_PROBLEM
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/List;)Lfdr;	a	compose
	m	(Lfdp;)V	a	validate
	m	([Lfdz$a;)Lfdq$a;	a	alternatives
	m	(Ljava/util/Collection;Ljava/util/function/Function;)Lfdq$a;	a	alternatives
	m	(I)[Lfdz$a;	a	lambda$alternatives$1
	m	(Ljava/util/List;Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	()V	<clinit>	<clinit>
c	fdq$1	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	a	description
c	fdq$a	net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	m	([Lfdz$a;)V	<init>	<init>
	m	()Lfdq$a;	a	getThis
	m	(Lfdz$a;)Lfdq$a;	a	otherwise
	m	()Lfdz;	b	build
	m	()Lfdz$a;	aE_	getThis
c	fdr	net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer
	f	Lfdr;	c	ALWAYS_FALSE
	f	Lfdr;	d	ALWAYS_TRUE
	m	(Lfdj;Ljava/util/function/Consumer;)Z	expand	expand
	m	(Lfdr;)Lfdr;	and	and
	m	(Lfdr;)Lfdr;	or	or
	m	(Lfdr;Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$or$3
	m	(Lfdr;Lfdj;Ljava/util/function/Consumer;)Z	b	lambda$and$2
	m	(Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$static$1
	m	(Lfdj;Ljava/util/function/Consumer;)Z	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fds	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase
	f	Lbci$g;	e	NO_CHILDREN_PROBLEM
	f	Ljava/util/List;	f	children
	f	Lfdr;	a	composedChildren
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Lfdp;)V	a	validate
	m	(Ljava/util/List;)Lfdr;	a	compose
	m	(Lfdj;Ljava/util/function/Consumer;)Z	expand	expand
	m	(Lfds$a;)Lcom/mojang/serialization/MapCodec;	a	createCodec
	m	(Lfds$a;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
	m	(Lfds;)Ljava/util/List;	a	lambda$createCodec$0
	m	()V	<clinit>	<clinit>
c	fds$1	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	a	description
c	fds$a	net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor
	m	(Ljava/util/List;Ljava/util/List;)Lfds;	create	create
c	fdt	net/minecraft/world/level/storage/loot/entries/DynamicLoot
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lame;	j	name
	m	(Lame;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	(Lame;)Lfeb$a;	a	dynamicEntry
	m	(Lame;IILjava/util/List;Ljava/util/List;)Lfeb;	a	lambda$dynamicEntry$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	m	(Lfdt;)Lame;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdu	net/minecraft/world/level/storage/loot/entries/EmptyLootItem
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	()Lfeb$a;	b	emptyItem
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdv	net/minecraft/world/level/storage/loot/entries/EntryGroup
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/List;)Lfdr;	a	compose
	m	([Lfdz$a;)Lfdv$a;	a	list
	m	(Ljava/util/List;Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$compose$1
	m	(Lfdr;Lfdr;Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	()V	<clinit>	<clinit>
c	fdv$a	net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	m	([Lfdz$a;)V	<init>	<init>
	m	()Lfdv$a;	a	getThis
	m	(Lfdz$a;)Lfdv$a;	b	append
	m	()Lfdz;	b	build
	m	()Lfdz$a;	aE_	getThis
c	fdw	net/minecraft/world/level/storage/loot/entries/LootItem
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljl;	j	item
	m	(Ljl;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	(Ldmt;)Lfeb$a;	a	lootTableItem
	m	(Ldmt;IILjava/util/List;Ljava/util/List;)Lfeb;	a	lambda$lootTableItem$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	m	(Lfdw;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fdx	net/minecraft/world/level/storage/loot/entries/LootPoolEntries
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfea;	b	EMPTY
	f	Lfea;	c	ITEM
	f	Lfea;	d	LOOT_TABLE
	f	Lfea;	e	DYNAMIC
	f	Lfea;	f	TAG
	f	Lfea;	g	ALTERNATIVES
	f	Lfea;	h	SEQUENCE
	f	Lfea;	i	GROUP
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfea;	a	register
	m	()V	<clinit>	<clinit>
c	fdy	net/minecraft/world/level/storage/loot/entries/LootPoolEntry
	m	(F)I	a	getWeight
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
c	fdz	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer
	f	Ljava/util/List;	g	conditions
	f	Ljava/util/function/Predicate;	a	compositeCondition
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
	m	(Lfdp;)V	a	validate
	m	(Lfdj;)Z	a	canRun
	m	()Lfea;	a	getType
	m	(Lfdz;)Ljava/util/List;	a	lambda$commonFields$0
c	fdz$a	net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
	m	()V	<init>	<init>
	m	()Lfdz$a;	aE_	getThis
	m	(Lfgs$a;)Lfdz$a;	a	when
	m	()Lfdz$a;	e	unwrap
	m	()Ljava/util/List;	f	getConditions
	m	(Lfdz$a;)Lfdq$a;	a	otherwise
	m	(Lfdz$a;)Lfdv$a;	b	append
	m	(Lfdz$a;)Lfed$a;	c	then
	m	()Lfdz;	b	build
	m	()Lfgk;	d	unwrap
	m	(Lfgs$a;)Lfgk;	b	when
c	fea	net/minecraft/world/level/storage/loot/entries/LootPoolEntryType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	feb	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer
	f	I	b	DEFAULT_WEIGHT
	f	I	e	DEFAULT_QUALITY
	f	I	f	weight
	f	I	h	quality
	f	Ljava/util/List;	i	functions
	f	Ljava/util/function/BiFunction;	a	compositeFunction
	f	Lfdy;	j	entry
	m	(IILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4;	b	singletonFields
	m	(Lfdp;)V	a	validate
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	(Lfdj;Ljava/util/function/Consumer;)Z	expand	expand
	m	(Lfeb$d;)Lfeb$a;	a	simpleBuilder
	m	(Lfeb;)Ljava/util/List;	a	lambda$singletonFields$2
	m	(Lfeb;)Ljava/lang/Integer;	b	lambda$singletonFields$1
	m	(Lfeb;)Ljava/lang/Integer;	c	lambda$singletonFields$0
c	feb$1	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$1
	f	Lfeb;	a	this$0
	m	(Lfeb;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
c	feb$a	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder
	f	I	a	weight
	f	I	b	quality
	f	Lcom/google/common/collect/ImmutableList$Builder;	c	functions
	m	()V	<init>	<init>
	m	(Lfex$a;)Lfeb$a;	a	apply
	m	()Ljava/util/List;	a	getFunctions
	m	(I)Lfeb$a;	a	setWeight
	m	(I)Lfeb$a;	b	setQuality
	m	()Lfet;	c	unwrap
	m	(Lfex$a;)Lfet;	b	apply
c	feb$b	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder
	f	Lfeb$d;	c	constructor
	m	(Lfeb$d;)V	<init>	<init>
	m	()Lfeb$b;	g	getThis
	m	()Lfdz;	b	build
	m	()Lfdz$a;	aE_	getThis
c	feb$c	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase
	f	Lfeb;	b	this$0
	m	(Lfeb;)V	<init>	<init>
	m	(F)I	a	getWeight
c	feb$d	net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor
	m	(IILjava/util/List;Ljava/util/List;)Lfeb;	build	build
c	fec	net/minecraft/world/level/storage/loot/entries/NestedLootTable
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbci$f;	j	INLINE_LOOT_TABLE_PATH_ELEMENT
	f	Lcom/mojang/datafixers/util/Either;	k	contents
	m	(Lcom/mojang/datafixers/util/Either;IILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	(Lfdp;)V	a	validate
	m	(Lamd;)Lfeb$a;	a	lootTableReference
	m	(Lfdo;)Lfeb$a;	a	inlineLootTable
	m	(Lfdo;IILjava/util/List;Ljava/util/List;)Lfeb;	a	lambda$inlineLootTable$9
	m	(Lamd;IILjava/util/List;Ljava/util/List;)Lfeb;	a	lambda$lootTableReference$8
	m	(Lfdp;Lfdo;)V	a	lambda$validate$7
	m	(Lfdp;Lamd;)V	a	lambda$validate$6
	m	(Lfdp;Lamd;)V	b	lambda$validate$5
	m	(Lfdp;Lamd;Ljl$c;)V	a	lambda$validate$4
	m	(Lfdo;)Lfdo;	b	lambda$createItemStack$3
	m	(Lfdj;Lamd;)Lfdo;	a	lambda$createItemStack$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$1
	m	(Lfec;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fec$1	net/minecraft/world/level/storage/loot/entries/NestedLootTable$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	get	get
c	fed	net/minecraft/world/level/storage/loot/entries/SequentialEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/List;)Lfdr;	a	compose
	m	([Lfdz$a;)Lfed$a;	a	sequential
	m	(Ljava/util/List;Lfdj;Ljava/util/function/Consumer;)Z	a	lambda$compose$0
	m	()V	<clinit>	<clinit>
c	fed$a	net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	m	([Lfdz$a;)V	<init>	<init>
	m	()Lfed$a;	a	getThis
	m	(Lfdz$a;)Lfed$a;	c	then
	m	()Lfdz;	b	build
	m	()Lfdz$a;	aE_	getThis
c	fee	net/minecraft/world/level/storage/loot/entries/TagEntry
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbae;	j	tag
	f	Z	k	expand
	m	(Lbae;ZIILjava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfea;	a	getType
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
	m	(Lfdj;Ljava/util/function/Consumer;)Z	a	expandTag
	m	(Lfdj;Ljava/util/function/Consumer;)Z	expand	expand
	m	(Lbae;)Lfeb$a;	a	tagContents
	m	(Lbae;)Lfeb$a;	b	expandTag
	m	(Lbae;IILjava/util/List;Ljava/util/List;)Lfeb;	a	lambda$expandTag$5
	m	(Lbae;IILjava/util/List;Ljava/util/List;)Lfeb;	b	lambda$tagContents$4
	m	(Ljava/util/function/Consumer;Ljl;)V	a	lambda$createItemStack$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	c	lambda$static$2
	m	(Lfee;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lfee;)Lbae;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fee$1	net/minecraft/world/level/storage/loot/entries/TagEntry$1
	f	Ljl;	a	val$item
	m	(Lfee;Ljl;)V	<init>	<init>
	m	(Ljava/util/function/Consumer;Lfdj;)V	a	createItemStack
c	fef	net/minecraft/world/level/storage/loot/entries/package-info
c	feg	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount
	f	Ljava/util/Map;	b	FORMULAS
	f	Lcom/mojang/serialization/Codec;	c	FORMULA_TYPE_CODEC
	f	Lcom/mojang/serialization/MapCodec;	d	FORMULA_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljl;	e	enchantment
	f	Lfeg$b;	f	formula
	m	(Ljava/util/List;Ljl;Lfeg$b;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ljl;FI)Lfew$a;	a	addBonusBinomialDistributionCount
	m	(Ljl;)Lfew$a;	a	addOreBonusCount
	m	(Ljl;)Lfew$a;	b	addUniformBonusCount
	m	(Ljl;I)Lfew$a;	a	addUniformBonusCount
	m	(Ljl;ILjava/util/List;)Lfex;	a	lambda$addUniformBonusCount$8
	m	(Ljl;Ljava/util/List;)Lfex;	a	lambda$addUniformBonusCount$7
	m	(Ljl;Ljava/util/List;)Lfex;	b	lambda$addOreBonusCount$6
	m	(Ljl;IFLjava/util/List;)Lfex;	a	lambda$addBonusBinomialDistributionCount$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Lfeg;)Lfeg$b;	a	lambda$static$3
	m	(Lfeg;)Ljl;	b	lambda$static$2
	m	(Lame;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lame;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	feg$a	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount
	f	I	b	extraRounds
	f	F	c	probability
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lfeg$c;	a	TYPE
	m	(IF)V	<init>	<init>
	m	(Lbck;II)I	a	calculateNewCount
	m	()Lfeg$c;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	extraRounds
	m	()F	c	probability
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	feg$b	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula
	m	(Lbck;II)I	a	calculateNewCount
	m	()Lfeg$c;	a	getType
c	feg$c	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaType
	f	Lame;	a	id
	f	Lcom/mojang/serialization/Codec;	b	codec
	m	(Lame;Lcom/mojang/serialization/Codec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Lcom/mojang/serialization/Codec;	b	codec
c	feg$d	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfeg$c;	b	TYPE
	m	()V	<init>	<init>
	m	(Lbck;II)I	a	calculateNewCount
	m	()Lfeg$c;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()V	<clinit>	<clinit>
c	feg$e	net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount
	f	I	c	bonusMultiplier
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfeg$c;	b	TYPE
	m	(I)V	<init>	<init>
	m	(Lbck;II)I	a	calculateNewCount
	m	()Lfeg$c;	a	getType
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	bonusMultiplier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	feh	net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfew$a;	c	explosionDecay
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fei	net/minecraft/world/level/storage/loot/functions/CopyBlockState
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljl;	b	block
	f	Ljava/util/Set;	c	properties
	m	(Ljava/util/List;Ljl;Ljava/util/Set;)V	<init>	<init>
	m	(Ljava/util/List;Ljl;Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldpz;)Lfei$a;	a	copyState
	m	(Leeb;Ldev;)Ldev;	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lfei;)Ljava/util/List;	a	lambda$static$1
	m	(Lfei;)Ljl;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fei$a	net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder
	f	Ljl;	a	block
	f	Lcom/google/common/collect/ImmutableSet$Builder;	b	properties
	m	(Ldpz;)V	<init>	<init>
	m	(Lefe;)Lfei$a;	a	copy
	m	()Lfei$a;	a	getThis
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fej	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfej$b;	b	source
	f	Ljava/util/Optional;	c	include
	f	Ljava/util/Optional;	d	exclude
	f	Ljava/util/function/Predicate;	e	bakedPredicate
	m	(Ljava/util/List;Lfej$b;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfej$b;)Lfej$a;	a	copyComponents
	m	(Ljava/util/List;Ljava/util/List;)V	a	lambda$new$6
	m	(Ljava/util/List;Ljava/util/List;)V	b	lambda$new$5
	m	(Ljava/util/List;Lkp;)Z	a	lambda$new$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lfej;)Ljava/util/Optional;	a	lambda$static$2
	m	(Lfej;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lfej;)Lfej$b;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fej$a	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction$Builder
	f	Lfej$b;	a	source
	f	Ljava/util/Optional;	b	include
	f	Ljava/util/Optional;	c	exclude
	m	(Lfej$b;)V	<init>	<init>
	m	(Lkp;)Lfej$a;	a	include
	m	(Lkp;)Lfej$a;	b	exclude
	m	()Lfej$a;	a	getThis
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fej$b	net/minecraft/world/level/storage/loot/functions/CopyComponentsFunction$Source
	f	Lfej$b;	a	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Ljava/lang/String;	c	name
	f	[Lfej$b;	d	$VALUES
	m	()[Lfej$b;	values	values
	m	(Ljava/lang/String;)Lfej$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lfdj;)Lkn;	a	get
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lfej$b;	b	$values
	m	()V	<clinit>	<clinit>
c	fek	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfhg;	b	source
	f	Ljava/util/List;	c	operations
	m	(Ljava/util/List;Lfhg;Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfhg;)Lfek$a;	a	copyData
	m	(Lfdj$b;)Lfek$a;	a	copyData
	m	(Ljava/util/function/Supplier;Lvi;Lfek$b;)V	a	lambda$run$4
	m	(Lorg/apache/commons/lang3/mutable/MutableObject;Ldcv;)Lvi;	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lfek;)Ljava/util/List;	a	lambda$static$1
	m	(Lfek;)Lfhg;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fek$a	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$Builder
	f	Lfhg;	a	source
	f	Ljava/util/List;	b	ops
	m	(Lfhg;)V	<init>	<init>
	m	(Ljava/lang/String;Ljava/lang/String;Lfek$c;)Lfek$a;	a	copy
	m	(Ljava/lang/String;Ljava/lang/String;)Lfek$a;	a	copy
	m	()Lfek$a;	a	getThis
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fek$b	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$CopyOperation
	f	Lfe$g;	b	sourcePath
	f	Lfe$g;	c	targetPath
	f	Lfek$c;	d	op
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lfe$g;Lfe$g;Lfek$c;)V	<init>	<init>
	m	(Ljava/util/function/Supplier;Lvi;)V	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfe$g;	a	sourcePath
	m	()Lfe$g;	b	targetPath
	m	()Lfek$c;	c	op
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fek$c	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$MergeStrategy
	f	Lfek$c;	a	REPLACE
	f	Lfek$c;	b	APPEND
	f	Lfek$c;	c	MERGE
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Ljava/lang/String;	e	name
	f	[Lfek$c;	f	$VALUES
	m	()[Lfek$c;	values	values
	m	(Ljava/lang/String;)Lfek$c;	valueOf	valueOf
	m	(Lvi;Lfe$g;Ljava/util/List;)V	a	merge
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lfek$c;	a	$values
	m	()V	<clinit>	<clinit>
c	fek$c$1	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$MergeStrategy$1
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lvi;Lfe$g;Ljava/util/List;)V	a	merge
c	fek$c$2	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$MergeStrategy$2
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lvi;Lfe$g;Ljava/util/List;)V	a	merge
	m	(Ljava/util/List;Lvi;)V	a	lambda$merge$1
	m	(Lvi;Lvi;)V	a	lambda$merge$0
c	fek$c$3	net/minecraft/world/level/storage/loot/functions/CopyCustomDataFunction$MergeStrategy$3
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	(Lvi;Lfe$g;Ljava/util/List;)V	a	merge
	m	(Ljava/util/List;Lvi;)V	a	lambda$merge$1
	m	(Lvi;Lvi;)V	a	lambda$merge$0
c	fel	net/minecraft/world/level/storage/loot/functions/CopyNameFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfel$a;	b	source
	m	(Ljava/util/List;Lfel$a;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfel$a;)Lfew$a;	a	copyName
	m	(Lfel$a;Ljava/util/List;)Lfex;	a	lambda$copyName$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfel;)Lfel$a;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fel$a	net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource
	f	Lfel$a;	a	THIS
	f	Lfel$a;	b	ATTACKING_ENTITY
	f	Lfel$a;	c	LAST_DAMAGE_PLAYER
	f	Lfel$a;	d	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	name
	f	Lbdn;	g	param
	f	[Lfel$a;	h	$VALUES
	m	()[Lfel$a;	values	values
	m	(Ljava/lang/String;)Lfel$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lbdn;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lfel$a;	a	$values
	m	()V	<clinit>	<clinit>
c	fem	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	c	options
	f	Z	d	onlyCompatible
	m	(Ljava/util/List;Ljava/util/Optional;Z)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldcv;Ljl;Lbck;)Ldcv;	a	enchantItem
	m	()Lfem$a;	c	randomEnchantment
	m	(Ljn$a;)Lfem$a;	a	randomApplicableEnchantment
	m	(ZLdcv;Ljl;)Z	a	lambda$run$4
	m	(Lfdj;)Ljava/util/stream/Stream;	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lfem;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lfem;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fem$a	net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder
	f	Ljava/util/Optional;	a	options
	f	Z	b	onlyCompatible
	m	()V	<init>	<init>
	m	()Lfem$a;	a	getThis
	m	(Ljl;)Lfem$a;	a	withEnchantment
	m	(Ljp;)Lfem$a;	a	withOneOf
	m	()Lfem$a;	e	allowingIncompatibleEnchantments
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fen	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfho;	b	levels
	f	Ljava/util/Optional;	c	options
	m	(Ljava/util/List;Lfho;Ljava/util/Optional;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ljn$a;Lfho;)Lfen$a;	a	enchantWithLevels
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lfen;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lfen;)Lfho;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fen$a	net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder
	f	Lfho;	a	levels
	f	Ljava/util/Optional;	b	options
	m	(Lfho;)V	<init>	<init>
	m	()Lfen$a;	a	getThis
	m	(Ljp;)Lfen$a;	a	fromOptions
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	feo	net/minecraft/world/level/storage/loot/functions/EnchantedCountIncreaseFunction
	f	I	a	NO_LIMIT
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Ljl;	c	enchantment
	f	Lfho;	d	value
	f	I	e	limit
	m	(Ljava/util/List;Ljl;Lfho;I)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Z	c	hasLimit
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ljn$a;Lfho;)Lfeo$a;	a	lootingMultiplier
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lfeo;)Ljava/lang/Integer;	a	lambda$static$2
	m	(Lfeo;)Lfho;	b	lambda$static$1
	m	(Lfeo;)Ljl;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	feo$a	net/minecraft/world/level/storage/loot/functions/EnchantedCountIncreaseFunction$Builder
	f	Ljl;	a	enchantment
	f	Lfho;	b	count
	f	I	c	limit
	m	(Ljl;Lfho;)V	<init>	<init>
	m	()Lfeo$a;	a	getThis
	m	(I)Lfeo$a;	a	setLimit
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fep	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction
	f	Lbae;	a	DEFAULT_DESTINATION
	f	Ljl;	b	DEFAULT_DECORATION
	f	B	c	DEFAULT_ZOOM
	f	I	d	DEFAULT_SEARCH_RADIUS
	f	Z	e	DEFAULT_SKIP_EXISTING
	f	Lcom/mojang/serialization/MapCodec;	f	CODEC
	f	Lbae;	h	destination
	f	Ljl;	i	mapDecoration
	f	B	j	zoom
	f	I	k	searchRadius
	f	Z	l	skipKnownStructures
	m	(Ljava/util/List;Lbae;Ljl;BIZ)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfep$a;	c	makeExplorationMap
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Lfep;)Ljava/lang/Boolean;	a	lambda$static$4
	m	(Lfep;)Ljava/lang/Integer;	b	lambda$static$3
	m	(Lfep;)Ljava/lang/Byte;	c	lambda$static$2
	m	(Lfep;)Ljl;	d	lambda$static$1
	m	(Lfep;)Lbae;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fep$a	net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder
	f	Lbae;	a	destination
	f	Ljl;	b	mapDecoration
	f	B	c	zoom
	f	I	d	searchRadius
	f	Z	e	skipKnownStructures
	m	()V	<init>	<init>
	m	()Lfep$a;	a	getThis
	m	(Lbae;)Lfep$a;	a	setDestination
	m	(Ljl;)Lfep$a;	a	setMapDecoration
	m	(B)Lfep$a;	a	setZoom
	m	(I)Lfep$a;	a	setSearchRadius
	m	(Z)Lfep$a;	a	setSkipKnownStructures
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	feq	net/minecraft/world/level/storage/loot/functions/FillPlayerHead
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfdj$b;	b	entityTarget
	m	(Ljava/util/List;Lfdj$b;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdj$b;)Lfew$a;	a	fillPlayerHead
	m	(Lfdj$b;Ljava/util/List;)Lfex;	a	lambda$fillPlayerHead$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfeq;)Lfdj$b;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fer	net/minecraft/world/level/storage/loot/functions/FilteredFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcn;	b	filter
	f	Lfex;	c	modifier
	m	(Ljava/util/List;Lcn;Lfex;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdp;)V	a	validate
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lfer;)Lfex;	a	lambda$static$1
	m	(Lfer;)Lcn;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fes	net/minecraft/world/level/storage/loot/functions/FunctionReference
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lamd;	c	name
	m	(Ljava/util/List;Lamd;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Lfdp;)V	a	validate
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lamd;)Lfew$a;	a	functionReference
	m	(Lamd;Ljava/util/List;)Lfex;	a	lambda$functionReference$4
	m	(Lfdp;)V	b	lambda$validate$3
	m	(Lfdp;Ljl$c;)V	a	lambda$validate$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfes;)Lamd;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fet	net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder
	m	(Lfex$a;)Lfet;	b	apply
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Lfet;	a	apply
	m	([Ljava/lang/Object;Ljava/util/function/Function;)Lfet;	a	apply
	m	()Lfet;	c	unwrap
c	feu	net/minecraft/world/level/storage/loot/functions/LimitCount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfdi;	b	limiter
	m	(Ljava/util/List;Lfdi;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdi;)Lfew$a;	a	limitCount
	m	(Lfdi;Ljava/util/List;)Lfex;	a	lambda$limitCount$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfeu;)Lfdi;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fev	net/minecraft/world/level/storage/loot/functions/ListOperation
	f	Lcom/mojang/serialization/MapCodec;	a	UNLIMITED_CODEC
	m	(I)Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Lfev$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;)Ljava/util/List;	a	apply
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
	m	(ILfev;)Lcom/mojang/serialization/DataResult;	a	lambda$codec$2
	m	(II)Ljava/lang/String;	a	lambda$codec$1
	m	(Lfev$f;)Lcom/mojang/serialization/MapCodec;	a	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	fev$a	net/minecraft/world/level/storage/loot/functions/ListOperation$Append
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lfev$a;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	m	()V	<init>	<init>
	m	()Lfev$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
	m	()Lfev$a;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fev$b	net/minecraft/world/level/storage/loot/functions/ListOperation$Insert
	f	I	c	offset
	f	Lorg/slf4j/Logger;	d	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	(I)V	<init>	<init>
	m	()Lfev$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	offset
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fev$c	net/minecraft/world/level/storage/loot/functions/ListOperation$ReplaceAll
	f	Lfev$c;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	c	MAP_CODEC
	m	()V	<init>	<init>
	m	()Lfev$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
	m	()Lfev$c;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fev$d	net/minecraft/world/level/storage/loot/functions/ListOperation$ReplaceSection
	f	I	c	offset
	f	Ljava/util/Optional;	d	size
	f	Lorg/slf4j/Logger;	e	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	b	MAP_CODEC
	m	(I)V	<init>	<init>
	m	(ILjava/util/Optional;)V	<init>	<init>
	m	()Lfev$f;	a	mode
	m	(Ljava/util/List;Ljava/util/List;I)Ljava/util/List;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	b	offset
	m	()Ljava/util/Optional;	c	size
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fev$e	net/minecraft/world/level/storage/loot/functions/ListOperation$StandAlone
	f	Ljava/util/List;	a	value
	f	Lfev;	b	operation
	m	(Ljava/util/List;Lfev;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;I)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/List;)Ljava/util/List;	a	apply
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	value
	m	()Lfev;	b	operation
	m	(Lcom/mojang/serialization/Codec;ILcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$2
	m	(Lfev$e;)Lfev;	a	lambda$codec$1
	m	(Lfev$e;)Ljava/util/List;	b	lambda$codec$0
c	fev$f	net/minecraft/world/level/storage/loot/functions/ListOperation$Type
	f	Lfev$f;	a	REPLACE_ALL
	f	Lfev$f;	b	REPLACE_SECTION
	f	Lfev$f;	c	INSERT
	f	Lfev$f;	d	APPEND
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/lang/String;	f	id
	f	Lcom/mojang/serialization/MapCodec;	g	mapCodec
	f	[Lfev$f;	h	$VALUES
	m	()[Lfev$f;	values	values
	m	(Ljava/lang/String;)Lfev$f;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Lcom/mojang/serialization/MapCodec;	a	mapCodec
	m	()Ljava/lang/String;	c	getSerializedName
	m	()[Lfev$f;	b	$values
	m	()V	<clinit>	<clinit>
c	few	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction
	f	Ljava/util/List;	g	predicates
	f	Ljava/util/function/Predicate;	a	compositePredicates
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1;	a	commonFields
	m	(Ldcv;Lfdj;)Ldcv;	b	apply
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdp;)V	a	validate
	m	(Ljava/util/function/Function;)Lfew$a;	a	simpleBuilder
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lfew;)Ljava/util/List;	a	lambda$commonFields$0
c	few$a	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	conditions
	m	()V	<init>	<init>
	m	(Lfgs$a;)Lfew$a;	a	when
	m	()Lfew$a;	f	unwrap
	m	()Lfew$a;	c	getThis
	m	()Ljava/util/List;	g	getConditions
	m	()Lfgk;	d	unwrap
	m	(Lfgs$a;)Lfgk;	b	when
c	few$b	net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder
	f	Ljava/util/function/Function;	a	constructor
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	()Lfew$b;	a	getThis
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	fex	net/minecraft/world/level/storage/loot/functions/LootItemFunction
	m	()Lfey;	b	getType
	m	(Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lfdj;)Ljava/util/function/Consumer;	a	decorate
	m	(Ljava/util/function/Consumer;Ljava/util/function/BiFunction;Lfdj;Ldcv;)V	a	lambda$decorate$0
c	fex$a	net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder
	m	()Lfex;	b	build
c	fey	net/minecraft/world/level/storage/loot/functions/LootItemFunctionType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fez	net/minecraft/world/level/storage/loot/functions/LootItemFunctions
	f	Ljava/util/function/BiFunction;	a	IDENTITY
	f	Lcom/mojang/serialization/Codec;	b	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	c	ROOT_CODEC
	f	Lcom/mojang/serialization/Codec;	d	CODEC
	f	Lfey;	e	SET_COUNT
	f	Lfey;	f	SET_ITEM
	f	Lfey;	g	ENCHANT_WITH_LEVELS
	f	Lfey;	h	ENCHANT_RANDOMLY
	f	Lfey;	i	SET_ENCHANTMENTS
	f	Lfey;	j	SET_CUSTOM_DATA
	f	Lfey;	k	SET_COMPONENTS
	f	Lfey;	l	FURNACE_SMELT
	f	Lfey;	m	ENCHANTED_COUNT_INCREASE
	f	Lfey;	n	SET_DAMAGE
	f	Lfey;	o	SET_ATTRIBUTES
	f	Lfey;	p	SET_NAME
	f	Lfey;	q	EXPLORATION_MAP
	f	Lfey;	r	SET_STEW_EFFECT
	f	Lfey;	s	COPY_NAME
	f	Lfey;	t	SET_CONTENTS
	f	Lfey;	u	MODIFY_CONTENTS
	f	Lfey;	v	FILTERED
	f	Lfey;	w	LIMIT_COUNT
	f	Lfey;	x	APPLY_BONUS
	f	Lfey;	y	SET_LOOT_TABLE
	f	Lfey;	z	EXPLOSION_DECAY
	f	Lfey;	A	SET_LORE
	f	Lfey;	B	FILL_PLAYER_HEAD
	f	Lfey;	C	COPY_CUSTOM_DATA
	f	Lfey;	D	COPY_STATE
	f	Lfey;	E	SET_BANNER_PATTERN
	f	Lfey;	F	SET_POTION
	f	Lfey;	G	SET_INSTRUMENT
	f	Lfey;	H	REFERENCE
	f	Lfey;	I	SEQUENCE
	f	Lfey;	J	COPY_COMPONENTS
	f	Lfey;	K	SET_FIREWORKS
	f	Lfey;	L	SET_FIREWORK_EXPLOSION
	f	Lfey;	M	SET_BOOK_COVER
	f	Lfey;	N	SET_WRITTEN_BOOK_PAGES
	f	Lfey;	O	SET_WRITABLE_BOOK_PAGES
	f	Lfey;	P	TOGGLE_TOOLTIPS
	f	Lfey;	Q	SET_OMINOUS_BOTTLE_AMPLIFIER
	f	Lfey;	R	SET_CUSTOM_MODEL_DATA
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfey;	a	register
	m	(Ljava/util/List;)Ljava/util/function/BiFunction;	a	compose
	m	(Ljava/util/List;Ldcv;Lfdj;)Ldcv;	a	lambda$compose$3
	m	(Ljava/util/function/BiFunction;Ljava/util/function/BiFunction;Ldcv;Lfdj;)Ldcv;	a	lambda$compose$2
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Ldcv;Lfdj;)Ldcv;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffa	net/minecraft/world/level/storage/loot/functions/ModifyContainerContents
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfdg;	b	component
	f	Lfex;	c	modifier
	m	(Ljava/util/List;Lfdg;Lfex;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdp;)V	a	validate
	m	(Lfdj;Ldcv;)Ldcv;	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffa;)Lfex;	a	lambda$static$1
	m	(Lffa;)Lfdg;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffb	net/minecraft/world/level/storage/loot/functions/SequenceFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	f	Ljava/util/List;	c	functions
	f	Ljava/util/function/BiFunction;	d	compositeFunction
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Lffb;	a	of
	m	(Ldcv;Lfdj;)Ldcv;	a	apply
	m	(Lfdp;)V	a	validate
	m	()Lfey;	b	getType
	m	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;	apply	apply
	m	(Lffb;)Ljava/util/List;	a	lambda$static$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lffb;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffc	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	modifiers
	f	Z	c	replace
	m	(Ljava/util/List;Ljava/util/List;Z)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdj;Ldfm;)Ldfm;	a	updateModifiers
	m	(Lame;Ljl;Lcbq$a;Lfho;)Lffc$c;	a	modifier
	m	()Lffc$a;	c	setAttributes
	m	(Lfdj;Ldfm;)Ldfm;	b	lambda$run$4
	m	(Lffc$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffc;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lffc;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffc$a	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder
	f	Z	a	replace
	f	Ljava/util/List;	b	modifiers
	m	(Z)V	<init>	<init>
	m	()V	<init>	<init>
	m	()Lffc$a;	a	getThis
	m	(Lffc$c;)Lffc$a;	a	withModifier
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	ffc$b	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier
	f	Lame;	b	id
	f	Ljl;	c	attribute
	f	Lcbq$a;	d	operation
	f	Lfho;	e	amount
	f	Ljava/util/List;	f	slots
	f	Lcom/mojang/serialization/Codec;	g	SLOTS_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Lame;Ljl;Lcbq$a;Lfho;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	a	id
	m	()Ljl;	b	attribute
	m	()Lcbq$a;	c	operation
	m	()Lfho;	d	amount
	m	()Ljava/util/List;	e	slots
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffc$c	net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder
	f	Lame;	a	id
	f	Ljl;	b	attribute
	f	Lcbq$a;	c	operation
	f	Lfho;	d	amount
	f	Ljava/util/Set;	e	slots
	m	(Lame;Ljl;Lcbq$a;Lfho;)V	<init>	<init>
	m	(Lbzx;)Lffc$c;	a	forSlot
	m	()Lffc$b;	a	build
c	ffd	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Leap;	b	patterns
	f	Z	c	append
	m	(Ljava/util/List;Leap;Z)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfey;	b	getType
	m	(Z)Lffd$a;	a	setBannerPattern
	m	(Leap;Leap;)Leap;	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffd;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lffd;)Leap;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffd$a	net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder
	f	Leap$a;	a	patterns
	f	Z	b	append
	m	(Z)V	<init>	<init>
	m	()Lffd$a;	a	getThis
	m	()Lfex;	b	build
	m	(Ljl;Ldbt;)Lffd$a;	a	addPattern
	m	()Lfew$a;	c	getThis
c	ffe	net/minecraft/world/level/storage/loot/functions/SetBookCoverFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	b	author
	f	Ljava/util/Optional;	c	title
	f	Ljava/util/Optional;	d	generation
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldgf;)Ldgf;	a	apply
	m	()Lfey;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lffe;)Ljava/util/Optional;	a	lambda$static$2
	m	(Lffe;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lffe;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fff	net/minecraft/world/level/storage/loot/functions/SetComponentsFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lko;	b	components
	m	(Ljava/util/List;Lko;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lkp;Ljava/lang/Object;)Lfew$a;	a	setComponent
	m	(Lkp;Ljava/lang/Object;Ljava/util/List;)Lfex;	a	lambda$setComponent$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfff;)Lko;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffg	net/minecraft/world/level/storage/loot/functions/SetContainerContents
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfdg;	b	component
	f	Ljava/util/List;	c	entries
	m	(Ljava/util/List;Lfdg;Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdp;)V	a	validate
	m	(Lfdg;)Lffg$a;	a	setContents
	m	(Lfdj;Ljava/util/stream/Stream$Builder;Lfdz;)V	a	lambda$run$4
	m	(Lfdj;Ljava/util/stream/Stream$Builder;Lfdy;)V	a	lambda$run$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffg;)Ljava/util/List;	a	lambda$static$1
	m	(Lffg;)Lfdg;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffg$a	net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	entries
	f	Lfdg;	b	component
	m	(Lfdg;)V	<init>	<init>
	m	()Lffg$a;	a	getThis
	m	(Lfdz$a;)Lffg$a;	a	withEntry
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	ffh	net/minecraft/world/level/storage/loot/functions/SetContainerLootTable
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lamd;	b	name
	f	J	c	seed
	f	Ljl;	d	type
	m	(Ljava/util/List;Lamd;JLjl;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdp;)V	a	validate
	m	(Lebb;Lamd;)Lfew$a;	a	withLootTable
	m	(Lebb;Lamd;J)Lfew$a;	a	withLootTable
	m	(Lamd;JLebb;Ljava/util/List;)Lfex;	a	lambda$withLootTable$5
	m	(Lamd;Lebb;Ljava/util/List;)Lfex;	a	lambda$withLootTable$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lffh;)Ljl;	a	lambda$static$2
	m	(Lffh;)Ljava/lang/Long;	b	lambda$static$1
	m	(Lffh;)Lamd;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffi	net/minecraft/world/level/storage/loot/functions/SetCustomDataFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lui;	b	tag
	m	(Ljava/util/List;Lui;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lui;)Lfew$a;	a	setCustomData
	m	(Lui;Ljava/util/List;)Lfex;	a	lambda$setCustomData$3
	m	(Lui;)V	b	lambda$run$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lffi;)Lui;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffj	net/minecraft/world/level/storage/loot/functions/SetCustomModelDataFunction
	f	Lcom/mojang/serialization/Codec;	b	COLOR_PROVIDER_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	c	floats
	f	Ljava/util/Optional;	d	flags
	f	Ljava/util/Optional;	e	strings
	f	Ljava/util/Optional;	f	colors
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Lfey;	b	getType
	m	(Ljava/util/Optional;Ljava/util/List;)Ljava/util/List;	a	apply
	m	(Ljava/util/Optional;Ljava/util/List;Ljava/util/function/Function;)Ljava/util/List;	a	apply
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdj;Lfho;)Ljava/lang/Integer;	a	lambda$run$10
	m	(Lfdj;Lfho;)Ljava/lang/Float;	b	lambda$run$9
	m	(Ljava/util/function/Function;Ljava/util/List;Lfev$e;)Ljava/util/List;	a	lambda$apply$8
	m	(Ljava/util/List;Lfev$e;)Ljava/util/List;	a	lambda$apply$7
	m	(Lfho;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$6
	m	(Lfev$e;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$5
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$4
	m	(Lffj;)Ljava/util/Optional;	a	lambda$static$3
	m	(Lffj;)Ljava/util/Optional;	b	lambda$static$2
	m	(Lffj;)Ljava/util/Optional;	c	lambda$static$1
	m	(Lffj;)Ljava/util/Optional;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffk	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	enchantments
	f	Z	c	add
	m	(Ljava/util/List;Ljava/util/Map;Z)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfdj;Ldjo$a;)V	a	lambda$run$6
	m	(Ldjo$a;Lfdj;Ljl;Lfho;)V	a	lambda$run$5
	m	(Ldjo$a;Lfdj;Ljl;Lfho;)V	b	lambda$run$4
	m	(Lfho;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffk;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lffk;)Ljava/util/Map;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffk$a	net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	enchantments
	f	Z	b	add
	m	()V	<init>	<init>
	m	(Z)V	<init>	<init>
	m	()Lffk$a;	a	getThis
	m	(Ljl;Lfho;)Lffk$a;	a	withEnchantment
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	ffl	net/minecraft/world/level/storage/loot/functions/SetFireworkExplosionFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfj;	b	DEFAULT_VALUE
	f	Ljava/util/Optional;	c	shape
	f	Ljava/util/Optional;	d	colors
	f	Ljava/util/Optional;	e	fadeColors
	f	Ljava/util/Optional;	f	trail
	f	Ljava/util/Optional;	h	twinkle
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldfj;)Ldfj;	a	apply
	m	()Lfey;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$5
	m	(Lffl;)Ljava/util/Optional;	a	lambda$static$4
	m	(Lffl;)Ljava/util/Optional;	b	lambda$static$3
	m	(Lffl;)Ljava/util/Optional;	c	lambda$static$2
	m	(Lffl;)Ljava/util/Optional;	d	lambda$static$1
	m	(Lffl;)Ljava/util/Optional;	e	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffm	net/minecraft/world/level/storage/loot/functions/SetFireworksFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ldfk;	b	DEFAULT_VALUE
	f	Ljava/util/Optional;	c	explosions
	f	Ljava/util/Optional;	d	flightDuration
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldfk;)Ldfk;	a	apply
	m	()Lfey;	b	getType
	m	(Ldfk;Lfev$e;)Ljava/util/List;	a	lambda$apply$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffm;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lffm;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffn	net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lbae;	b	options
	m	(Ljava/util/List;Lbae;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lbae;)Lfew$a;	a	setInstrumentOptions
	m	(Lbae;Ljava/util/List;)Lfex;	a	lambda$setInstrumentOptions$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lffn;)Lbae;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffo	net/minecraft/world/level/storage/loot/functions/SetItemCountFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfho;	b	value
	f	Z	c	add
	m	(Ljava/util/List;Lfho;Z)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfho;)Lfew$a;	a	setCount
	m	(Lfho;Z)Lfew$a;	a	setCount
	m	(Lfho;ZLjava/util/List;)Lfex;	a	lambda$setCount$4
	m	(Lfho;Ljava/util/List;)Lfex;	a	lambda$setCount$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffo;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lffo;)Lfho;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffp	net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfho;	c	damage
	f	Z	d	add
	m	(Ljava/util/List;Lfho;Z)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lfho;)Lfew$a;	a	setDamage
	m	(Lfho;Z)Lfew$a;	a	setDamage
	m	(Lfho;ZLjava/util/List;)Lfex;	a	lambda$setDamage$4
	m	(Lfho;Ljava/util/List;)Lfex;	a	lambda$setDamage$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffp;)Ljava/lang/Boolean;	a	lambda$static$1
	m	(Lffp;)Lfho;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffq	net/minecraft/world/level/storage/loot/functions/SetItemFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljl;	b	item
	m	(Ljava/util/List;Ljl;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lffq;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffr	net/minecraft/world/level/storage/loot/functions/SetLoreFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	lore
	f	Lfev;	c	mode
	f	Ljava/util/Optional;	d	resolutionContext
	m	(Ljava/util/List;Ljava/util/List;Lfev;Ljava/util/Optional;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldfo;Lfdj;)Ljava/util/List;	a	updateLore
	m	()Lffr$a;	c	setLore
	m	(Lfdj;Ldfo;)Ldfo;	a	lambda$run$5
	m	(Lfdj$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lffr;)Ljava/util/Optional;	a	lambda$static$2
	m	(Lffr;)Lfev;	b	lambda$static$1
	m	(Lffr;)Ljava/util/List;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffr$a	net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder
	f	Ljava/util/Optional;	a	resolutionContext
	f	Lcom/google/common/collect/ImmutableList$Builder;	b	lore
	f	Lfev;	c	mode
	m	()V	<init>	<init>
	m	(Lfev;)Lffr$a;	a	setMode
	m	(Lfdj$b;)Lffr$a;	a	setResolutionContext
	m	(Lxo;)Lffr$a;	a	addLine
	m	()Lffr$a;	a	getThis
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	ffs	net/minecraft/world/level/storage/loot/functions/SetNameFunction
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Optional;	c	name
	f	Ljava/util/Optional;	d	resolutionContext
	f	Lffs$a;	e	target
	m	(Ljava/util/List;Ljava/util/Optional;Ljava/util/Optional;Lffs$a;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;Lfdj$b;)Ljava/util/function/UnaryOperator;	a	createResolver
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Lxo;Lffs$a;)Lfew$a;	a	setName
	m	(Lxo;Lffs$a;Lfdj$b;)Lfew$a;	a	setName
	m	(Lxo;Lfdj$b;Lffs$a;Ljava/util/List;)Lfex;	a	lambda$setName$9
	m	(Lxo;Lffs$a;Ljava/util/List;)Lfex;	a	lambda$setName$8
	m	(Ldcv;Lfdj;Lxo;)V	a	lambda$run$7
	m	(Lxo;)Lxo;	a	lambda$createResolver$6
	m	(Lek;Lbzm;Lxo;)Lxo;	a	lambda$createResolver$5
	m	(Lfdj$b;)Ljava/util/Set;	a	lambda$getReferencedContextParams$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lffs;)Lffs$a;	a	lambda$static$2
	m	(Lffs;)Ljava/util/Optional;	b	lambda$static$1
	m	(Lffs;)Ljava/util/Optional;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffs$a	net/minecraft/world/level/storage/loot/functions/SetNameFunction$Target
	f	Lffs$a;	a	CUSTOM_NAME
	f	Lffs$a;	b	ITEM_NAME
	f	Lcom/mojang/serialization/Codec;	c	CODEC
	f	Ljava/lang/String;	d	name
	f	[Lffs$a;	e	$VALUES
	m	()[Lffs$a;	values	values
	m	(Ljava/lang/String;)Lffs$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	c	getSerializedName
	m	()Lkp;	a	component
	m	()[Lffs$a;	b	$values
	m	()V	<clinit>	<clinit>
c	fft	net/minecraft/world/level/storage/loot/functions/SetOminousBottleAmplifierFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lfho;	b	amplifierGenerator
	m	(Ljava/util/List;Lfho;)V	<init>	<init>
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfho;	c	amplifier
	m	(Lfho;)Lfew$a;	a	setAmplifier
	m	(Lfho;Ljava/util/List;)Lfex;	a	lambda$setAmplifier$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lfft;)Lfho;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffu	net/minecraft/world/level/storage/loot/functions/SetPotionFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljl;	b	potion
	m	(Ljava/util/List;Ljl;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ljl;)Lfew$a;	a	setPotion
	m	(Ljl;Ljava/util/List;)Lfex;	a	lambda$setPotion$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lffu;)Ljl;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffv	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction
	f	Lcom/mojang/serialization/Codec;	b	EFFECTS_LIST
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	c	effects
	m	(Ljava/util/List;Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lffv$a;	c	stewEffect
	m	(Lffv$b;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$4
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$3
	m	(Lffv;)Ljava/util/List;	a	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Lffv$b;)Ljava/lang/String;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffv$a	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	effects
	m	()V	<init>	<init>
	m	()Lffv$a;	a	getThis
	m	(Ljl;Lfho;)Lffv$a;	a	withEffect
	m	()Lfex;	b	build
	m	()Lfew$a;	c	getThis
c	ffv$b	net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$EffectEntry
	f	Ljl;	b	effect
	f	Lfho;	c	duration
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljl;Lfho;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	a	effect
	m	()Lfho;	b	duration
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffw	net/minecraft/world/level/storage/loot/functions/SetWritableBookPagesFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	pages
	f	Lfev;	c	pageOperation
	m	(Ljava/util/List;Ljava/util/List;Lfev;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldge;)Ldge;	a	apply
	m	()Lfey;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffw;)Lfev;	a	lambda$static$1
	m	(Lffw;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffx	net/minecraft/world/level/storage/loot/functions/SetWrittenBookPagesFunction
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/List;	b	pages
	f	Lfev;	c	pageOperation
	m	(Ljava/util/List;Ljava/util/List;Lfev;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	(Ldgf;)Ldgf;	a	apply
	m	()Lfey;	b	getType
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$2
	m	(Lffx;)Lfev;	a	lambda$static$1
	m	(Lffx;)Ljava/util/List;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffy	net/minecraft/world/level/storage/loot/functions/SmeltItemFunction
	f	Lorg/slf4j/Logger;	b	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lfey;	b	getType
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfew$a;	c	smelted
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	ffz	net/minecraft/world/level/storage/loot/functions/ToggleTooltips
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Ljava/util/Map;	b	values
	m	(Ljava/util/List;Ljava/util/Map;)V	<init>	<init>
	m	(Ldcv;Lfdj;)Ldcv;	a	run
	m	()Lfey;	b	getType
	m	(Ldfz;)Ldfz;	a	lambda$run$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$1
	m	(Lffz;)Ljava/util/Map;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fga	net/minecraft/world/level/storage/loot/functions/package-info
c	fgb	net/minecraft/world/level/storage/loot/package-info
c	fgc	net/minecraft/world/level/storage/loot/parameters/LootContextParamSets
	f	Lcom/google/common/collect/BiMap;	y	REGISTRY
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lbdo;	b	EMPTY
	f	Lbdo;	c	CHEST
	f	Lbdo;	d	COMMAND
	f	Lbdo;	e	SELECTOR
	f	Lbdo;	f	FISHING
	f	Lbdo;	g	ENTITY
	f	Lbdo;	h	EQUIPMENT
	f	Lbdo;	i	ARCHAEOLOGY
	f	Lbdo;	j	GIFT
	f	Lbdo;	k	PIGLIN_BARTER
	f	Lbdo;	l	VAULT
	f	Lbdo;	m	ADVANCEMENT_REWARD
	f	Lbdo;	n	ADVANCEMENT_ENTITY
	f	Lbdo;	o	ADVANCEMENT_LOCATION
	f	Lbdo;	p	BLOCK_USE
	f	Lbdo;	q	ALL_PARAMS
	f	Lbdo;	r	BLOCK
	f	Lbdo;	s	SHEARING
	f	Lbdo;	t	ENCHANTED_DAMAGE
	f	Lbdo;	u	ENCHANTED_ITEM
	f	Lbdo;	v	ENCHANTED_LOCATION
	f	Lbdo;	w	ENCHANTED_ENTITY
	f	Lbdo;	x	HIT_BLOCK
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Ljava/util/function/Consumer;)Lbdo;	a	register
	m	(Lbdo$a;)V	a	lambda$static$25
	m	(Lbdo$a;)V	b	lambda$static$24
	m	(Lbdo$a;)V	c	lambda$static$23
	m	(Lbdo$a;)V	d	lambda$static$22
	m	(Lbdo$a;)V	e	lambda$static$21
	m	(Lbdo$a;)V	f	lambda$static$20
	m	(Lbdo$a;)V	g	lambda$static$19
	m	(Lbdo$a;)V	h	lambda$static$18
	m	(Lbdo$a;)V	i	lambda$static$17
	m	(Lbdo$a;)V	j	lambda$static$16
	m	(Lbdo$a;)V	k	lambda$static$15
	m	(Lbdo$a;)V	l	lambda$static$14
	m	(Lbdo$a;)V	m	lambda$static$13
	m	(Lbdo$a;)V	n	lambda$static$12
	m	(Lbdo$a;)V	o	lambda$static$11
	m	(Lbdo$a;)V	p	lambda$static$10
	m	(Lbdo$a;)V	q	lambda$static$9
	m	(Lbdo$a;)V	r	lambda$static$8
	m	(Lbdo$a;)V	s	lambda$static$7
	m	(Lbdo$a;)V	t	lambda$static$6
	m	(Lbdo$a;)V	u	lambda$static$5
	m	(Lbdo$a;)V	v	lambda$static$4
	m	(Lbdo$a;)V	w	lambda$static$3
	m	(Lame;)Lcom/mojang/serialization/DataResult;	a	lambda$static$2
	m	(Lame;)Lcom/mojang/serialization/DataResult;	b	lambda$static$1
	m	(Lame;)Ljava/lang/String;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgd	net/minecraft/world/level/storage/loot/parameters/LootContextParams
	f	Lbdn;	a	THIS_ENTITY
	f	Lbdn;	b	LAST_DAMAGE_PLAYER
	f	Lbdn;	c	DAMAGE_SOURCE
	f	Lbdn;	d	ATTACKING_ENTITY
	f	Lbdn;	e	DIRECT_ATTACKING_ENTITY
	f	Lbdn;	f	ORIGIN
	f	Lbdn;	g	BLOCK_STATE
	f	Lbdn;	h	BLOCK_ENTITY
	f	Lbdn;	i	TOOL
	f	Lbdn;	j	EXPLOSION_RADIUS
	f	Lbdn;	k	ENCHANTMENT_LEVEL
	f	Lbdn;	l	ENCHANTMENT_ACTIVE
	m	()V	<init>	<init>
	m	()V	<clinit>	<clinit>
c	fge	net/minecraft/world/level/storage/loot/parameters/package-info
c	fgf	net/minecraft/world/level/storage/loot/predicates/AllOfCondition
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/List;)Lfgf;	a	allOf
	m	()Lfgt;	b	getType
	m	([Lfgs$a;)Lfgf$a;	a	allOf
	m	()V	<clinit>	<clinit>
c	fgf$a	net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder
	m	([Lfgs$a;)V	<init>	<init>
	m	(Lfgs$a;)Lfgf$a;	and	and
	m	(Ljava/util/List;)Lfgs;	a	create
c	fgg	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/List;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	([Lfgs$a;)Lfgg$a;	a	anyOf
	m	()V	<clinit>	<clinit>
c	fgg$a	net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder
	m	([Lfgs$a;)V	<init>	<init>
	m	(Lfgs$a;)Lfgg$a;	or	or
	m	(Ljava/util/List;)Lfgs;	a	create
c	fgh	net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition
	f	Ljl;	b	enchantment
	f	Ljava/util/List;	c	values
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljl;Ljava/util/List;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Ljl;[F)Lfgs$a;	a	bonusLevelFlatChance
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	c	enchantment
	m	()Ljava/util/List;	d	values
	m	(Ljava/lang/Object;)Z	test	test
	m	(Ljl;Ljava/util/List;)Lfgs;	a	lambda$bonusLevelFlatChance$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgi	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition
	f	Ljava/util/List;	c	terms
	f	Ljava/util/function/Predicate;	a	composedPredicate
	m	(Ljava/util/List;Ljava/util/function/Predicate;)V	<init>	<init>
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec;	a	createCodec
	m	(Ljava/util/function/Function;)Lcom/mojang/serialization/Codec;	b	createInlineCodec
	m	(Lfdj;)Z	a	test
	m	(Lfdp;)V	a	validate
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfgi;)Ljava/util/List;	a	lambda$createInlineCodec$2
	m	(Ljava/util/function/Function;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$createCodec$1
	m	(Lfgi;)Ljava/util/List;	b	lambda$createCodec$0
c	fgi$a	net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder
	f	Lcom/google/common/collect/ImmutableList$Builder;	a	terms
	m	([Lfgs$a;)V	<init>	<init>
	m	(Lfgs$a;)V	a	addTerm
	m	()Lfgs;	build	build
	m	(Ljava/util/List;)Lfgs;	a	create
c	fgj	net/minecraft/world/level/storage/loot/predicates/ConditionReference
	f	Lamd;	b	name
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lamd;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	(Lfdp;)V	a	validate
	m	(Lfdj;)Z	a	test
	m	(Lamd;)Lfgs$a;	a	conditionReference
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lamd;	c	name
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lamd;)Lfgs;	b	lambda$conditionReference$3
	m	(Lfdp;)V	b	lambda$validate$2
	m	(Lfdp;Ljl$c;)V	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgk	net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder
	m	(Lfgs$a;)Lfgk;	b	when
	m	(Ljava/lang/Iterable;Ljava/util/function/Function;)Lfgk;	a_	when
	m	()Lfgk;	d	unwrap
c	fgl	net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition
	f	Ljava/util/Optional;	b	predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lbn$a;)Lfgs$a;	a	hasDamageSource
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	predicate
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lbn$a;)Lfgs;	b	lambda$hasDamageSource$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgm	net/minecraft/world/level/storage/loot/predicates/EnchantmentActiveCheck
	f	Z	b	active
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Z)V	<init>	<init>
	m	(Lfdj;)Z	a	test
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Lfgs$a;	c	enchantmentActiveCheck
	m	()Lfgs$a;	d	enchantmentInactiveCheck
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Z	e	active
	m	(Ljava/lang/Object;)Z	test	test
	m	()Lfgs;	f	lambda$enchantmentInactiveCheck$2
	m	()Lfgs;	g	lambda$enchantmentActiveCheck$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgn	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition
	f	Ljava/util/Map;	b	scores
	f	Lfdj$b;	c	entityTarget
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Map;Lfdj$b;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lfdj;Lbzm;Lfjx;Ljava/lang/String;Lfdi;)Z	a	hasScore
	m	(Lfdj$b;)Lfgn$a;	a	hasScores
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Map;	c	scores
	m	()Lfdj$b;	d	entityTarget
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfdi;)Ljava/util/stream/Stream;	a	lambda$getReferencedContextParams$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgn$a	net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder
	f	Lcom/google/common/collect/ImmutableMap$Builder;	a	scores
	f	Lfdj$b;	b	entityTarget
	m	(Lfdj$b;)V	<init>	<init>
	m	(Ljava/lang/String;Lfdi;)Lfgn$a;	a	withScore
	m	()Lfgs;	build	build
c	fgo	net/minecraft/world/level/storage/loot/predicates/ExplosionCondition
	f	Lfgo;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	()Lfgs$a;	c	survivesExplosion
	m	(Ljava/lang/Object;)Z	test	test
	m	()Lfgs;	d	lambda$survivesExplosion$0
	m	()V	<clinit>	<clinit>
c	fgp	net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition
	f	Lfgs;	b	term
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfgs;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	(Lfdj;)Z	a	test
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdp;)V	a	validate
	m	(Lfgs$a;)Lfgs$a;	a	invert
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfgs;	c	term
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfgp;)Lfgs;	a	lambda$invert$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgq	net/minecraft/world/level/storage/loot/predicates/LocationCheck
	f	Ljava/util/Optional;	b	predicate
	f	Ljb;	c	offset
	f	Lcom/mojang/serialization/MapCodec;	g	OFFSET_CODEC
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;Ljb;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	(Lfdj;)Z	a	test
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lcv$a;)Lfgs$a;	a	checkLocation
	m	(Lcv$a;Ljb;)Lfgs$a;	a	checkLocation
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	predicate
	m	()Ljb;	d	offset
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcv$a;Ljb;)Lfgs;	b	lambda$checkLocation$3
	m	(Lcv$a;)Lfgs;	b	lambda$checkLocation$2
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgr	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition
	f	Ljl;	b	block
	f	Ljava/util/Optional;	c	properties
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljl;Ljava/util/Optional;)V	<init>	<init>
	m	(Lfgr;)Lcom/mojang/serialization/DataResult;	a	validate
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Ldpz;)Lfgr$a;	a	hasBlockStateProperties
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljl;	c	block
	m	()Ljava/util/Optional;	d	properties
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfgr;Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	a	lambda$validate$3
	m	(Lfgr;Ljava/lang/String;)Ljava/lang/String;	b	lambda$validate$2
	m	(Lfgr;Lds;)Ljava/util/Optional;	a	lambda$validate$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgr$a	net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder
	f	Ljl;	a	block
	f	Ljava/util/Optional;	b	properties
	m	(Ldpz;)V	<init>	<init>
	m	(Lds$a;)Lfgr$a;	a	setProperties
	m	()Lfgs;	build	build
c	fgs	net/minecraft/world/level/storage/loot/predicates/LootItemCondition
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	e	DIRECT_CODEC
	f	Lcom/mojang/serialization/Codec;	f	CODEC
	m	()Lfgt;	b	getType
	m	()Lcom/mojang/serialization/Codec;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgs$a	net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder
	m	()Lfgs;	build	build
	m	()Lfgs$a;	invert	invert
	m	(Lfgs$a;)Lfgg$a;	or	or
	m	(Lfgs$a;)Lfgf$a;	and	and
c	fgt	net/minecraft/world/level/storage/loot/predicates/LootItemConditionType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fgu	net/minecraft/world/level/storage/loot/predicates/LootItemConditions
	f	Lfgt;	a	INVERTED
	f	Lfgt;	b	ANY_OF
	f	Lfgt;	c	ALL_OF
	f	Lfgt;	d	RANDOM_CHANCE
	f	Lfgt;	e	RANDOM_CHANCE_WITH_ENCHANTED_BONUS
	f	Lfgt;	f	ENTITY_PROPERTIES
	f	Lfgt;	g	KILLED_BY_PLAYER
	f	Lfgt;	h	ENTITY_SCORES
	f	Lfgt;	i	BLOCK_STATE_PROPERTY
	f	Lfgt;	j	MATCH_TOOL
	f	Lfgt;	k	TABLE_BONUS
	f	Lfgt;	l	SURVIVES_EXPLOSION
	f	Lfgt;	m	DAMAGE_SOURCE_PROPERTIES
	f	Lfgt;	n	LOCATION_CHECK
	f	Lfgt;	o	WEATHER_CHECK
	f	Lfgt;	p	REFERENCE
	f	Lfgt;	q	TIME_CHECK
	f	Lfgt;	r	VALUE_CHECK
	f	Lfgt;	s	ENCHANTMENT_ACTIVE_CHECK
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfgt;	a	register
	m	()V	<clinit>	<clinit>
c	fgv	net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition
	f	Ljava/util/Optional;	b	predicate
	f	Lfdj$b;	c	entityTarget
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;Lfdj$b;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lfdj$b;)Lfgs$a;	a	entityPresent
	m	(Lfdj$b;Lbz$a;)Lfgs$a;	a	hasProperties
	m	(Lfdj$b;Lbz;)Lfgs$a;	a	hasProperties
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	predicate
	m	()Lfdj$b;	d	entityTarget
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lbz;Lfdj$b;)Lfgs;	a	lambda$hasProperties$2
	m	(Lbz$a;Lfdj$b;)Lfgs;	a	lambda$hasProperties$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgw	net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition
	f	Lfgw;	b	INSTANCE
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	()V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	()Lfgs$a;	c	killedByPlayer
	m	(Ljava/lang/Object;)Z	test	test
	m	()Lfgs;	d	lambda$killedByPlayer$0
	m	()V	<clinit>	<clinit>
c	fgx	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition
	f	Lfho;	b	chance
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfho;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	(Lfdj;)Z	a	test
	m	(F)Lfgs$a;	a	randomChance
	m	(Lfho;)Lfgs$a;	a	randomChance
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfho;	c	chance
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfho;)Lfgs;	b	lambda$randomChance$2
	m	(F)Lfgs;	b	lambda$randomChance$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgy	net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithEnchantedBonusCondition
	f	F	b	unenchantedChance
	f	Ldjp;	c	enchantedChance
	f	Ljl;	g	enchantment
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(FLdjp;Ljl;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Ljn$a;FF)Lfgs$a;	a	randomChanceAndLootingBoost
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()F	c	unenchantedChance
	m	()Ldjp;	d	enchantedChance
	m	()Ljl;	e	enchantment
	m	(Ljava/lang/Object;)Z	test	test
	m	(FFLjn$b;)Lfgs;	a	lambda$randomChanceAndLootingBoost$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fgz	net/minecraft/world/level/storage/loot/predicates/MatchTool
	f	Ljava/util/Optional;	b	predicate
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lcn$a;)Lfgs$a;	a	toolMatches
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	predicate
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcn$a;)Lfgs;	b	lambda$toolMatches$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fha	net/minecraft/world/level/storage/loot/predicates/TimeCheck
	f	Ljava/util/Optional;	b	period
	f	Lfdi;	c	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;Lfdi;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lfdi;)Lfha$a;	a	time
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	c	period
	m	()Lfdi;	d	value
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fha$a	net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder
	f	Ljava/util/Optional;	a	period
	f	Lfdi;	b	value
	m	(Lfdi;)V	<init>	<init>
	m	(J)Lfha$a;	a	setPeriod
	m	()Lfha;	a	build
	m	()Lfgs;	build	build
c	fhb	net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition
	f	Lfho;	b	provider
	f	Lfdi;	c	range
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfho;Lfdi;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj;)Z	a	test
	m	(Lfho;Lfdi;)Lfgs$a;	a	hasValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfho;	c	provider
	m	()Lfdi;	d	range
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lfho;Lfdi;)Lfgs;	b	lambda$hasValue$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhc	net/minecraft/world/level/storage/loot/predicates/WeatherCheck
	f	Ljava/util/Optional;	b	isRaining
	f	Ljava/util/Optional;	c	isThundering
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()Lfgt;	b	getType
	m	(Lfdj;)Z	a	test
	m	()Lfhc$a;	c	weather
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/Optional;	d	isRaining
	m	()Ljava/util/Optional;	e	isThundering
	m	(Ljava/lang/Object;)Z	test	test
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhc$a	net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder
	f	Ljava/util/Optional;	a	isRaining
	f	Ljava/util/Optional;	b	isThundering
	m	()V	<init>	<init>
	m	(Z)Lfhc$a;	a	setRaining
	m	(Z)Lfhc$a;	b	setThundering
	m	()Lfhc;	a	build
	m	()Lfgs;	build	build
c	fhd	net/minecraft/world/level/storage/loot/predicates/package-info
c	fhe	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider
	f	Ljava/lang/String;	d	BLOCK_ENTITY_ID
	f	Lfhe$a;	e	BLOCK_ENTITY_PROVIDER
	f	Lfhe;	a	BLOCK_ENTITY
	f	Lcom/mojang/serialization/Codec;	f	GETTER_CODEC
	f	Lcom/mojang/serialization/MapCodec;	b	CODEC
	f	Lcom/mojang/serialization/Codec;	c	INLINE_CODEC
	f	Lfhe$a;	g	getter
	m	(Lfdj$b;)Lfhe$a;	b	forEntity
	m	(Lfhe$a;)V	<init>	<init>
	m	()Lfhf;	a	getType
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	(Lfdj$b;)Lfhg;	a	forContextEntity
	m	(Lfhe;)Lfhe$a;	a	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lfhe;)Lfhe$a;	b	lambda$static$1
	m	(Ljava/lang/String;)Lfhe$a;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhe$1	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$1
	m	()V	<init>	<init>
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	fhe$2	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$2
	f	Lfdj$b;	a	val$target
	m	(Lfdj$b;)V	<init>	<init>
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	fhe$a	net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	fhf	net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fhg	net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Lfhf;	a	getType
c	fhh	net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfhf;	b	STORAGE
	f	Lfhf;	c	CONTEXT
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfhf;	a	register
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lfhg;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhi	net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider
	f	Lame;	b	id
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;)V	<init>	<init>
	m	()Lfhf;	a	getType
	m	(Lfdj;)Lvi;	a	get
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	c	id
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhj	net/minecraft/world/level/storage/loot/providers/nbt/package-info
c	fhk	net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator
	f	Lfho;	b	n
	f	Lfho;	c	p
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfho;Lfho;)V	<init>	<init>
	m	()Lfhn;	b	getType
	m	(Lfdj;)I	a	getInt
	m	(Lfdj;)F	b	getFloat
	m	(IF)Lfhk;	a	binomial
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfho;	c	n
	m	()Lfho;	d	p
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhl	net/minecraft/world/level/storage/loot/providers/number/ConstantValue
	f	F	c	value
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	m	(F)V	<init>	<init>
	m	()Lfhn;	b	getType
	m	(Lfdj;)F	b	getFloat
	m	(F)Lfhl;	a	exactly
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	()F	c	value
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhm	net/minecraft/world/level/storage/loot/providers/number/EnchantmentLevelProvider
	f	Ldjp;	b	amount
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ldjp;)V	<init>	<init>
	m	(Lfdj;)F	b	getFloat
	m	()Lfhn;	b	getType
	m	(Ldjp;)Lfhm;	a	forEnchantmentLevel
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ldjp;	c	amount
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhn	net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fho	net/minecraft/world/level/storage/loot/providers/number/NumberProvider
	m	(Lfdj;)F	b	getFloat
	m	(Lfdj;)I	a	getInt
	m	()Lfhn;	b	getType
c	fhp	net/minecraft/world/level/storage/loot/providers/number/NumberProviders
	f	Lcom/mojang/serialization/Codec;	h	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfhn;	b	CONSTANT
	f	Lfhn;	c	UNIFORM
	f	Lfhn;	d	BINOMIAL
	f	Lfhn;	e	SCORE
	f	Lfhn;	f	STORAGE
	f	Lfhn;	g	ENCHANTMENT_LEVEL
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfhn;	a	register
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lfho;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhq	net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue
	f	Lfhx;	b	target
	f	Ljava/lang/String;	c	score
	f	F	d	scale
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfhx;Ljava/lang/String;F)V	<init>	<init>
	m	()Lfhn;	b	getType
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	(Lfdj$b;Ljava/lang/String;)Lfhq;	a	fromScoreboard
	m	(Lfdj$b;Ljava/lang/String;F)Lfhq;	a	fromScoreboard
	m	(Lfdj;)F	b	getFloat
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfhx;	c	target
	m	()Ljava/lang/String;	d	score
	m	()F	e	scale
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhr	net/minecraft/world/level/storage/loot/providers/number/StorageValue
	f	Lame;	b	storage
	f	Lfe$g;	c	path
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;Lfe$g;)V	<init>	<init>
	m	()Lfhn;	b	getType
	m	(Lfdj;Ljava/lang/Number;)Ljava/lang/Number;	a	getNumericTag
	m	(Lfdj;)F	b	getFloat
	m	(Lfdj;)I	a	getInt
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	c	storage
	m	()Lfe$g;	d	path
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhs	net/minecraft/world/level/storage/loot/providers/number/UniformGenerator
	f	Lfho;	b	min
	f	Lfho;	c	max
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lfho;Lfho;)V	<init>	<init>
	m	()Lfhn;	b	getType
	m	(FF)Lfhs;	a	between
	m	(Lfdj;)I	a	getInt
	m	(Lfdj;)F	b	getFloat
	m	()Ljava/util/Set;	a	getReferencedContextParams
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfho;	c	min
	m	()Lfho;	d	max
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fht	net/minecraft/world/level/storage/loot/providers/number/package-info
c	fhu	net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider
	f	Lfdj$b;	c	target
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	f	Lcom/mojang/serialization/Codec;	b	INLINE_CODEC
	m	(Lfdj$b;)V	<init>	<init>
	m	(Lfdj$b;)Lfhx;	a	forTarget
	m	()Lfhw;	a	getType
	m	(Lfdj;)Lfjw;	a	getScoreHolder
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfdj$b;	c	target
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhv	net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider
	f	Ljava/lang/String;	b	name
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;)Lfhx;	a	forName
	m	()Lfhw;	a	getType
	m	(Lfdj;)Lfjw;	a	getScoreHolder
	m	()Ljava/util/Set;	b	getReferencedContextParams
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	c	name
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhw	net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType
	f	Lcom/mojang/serialization/MapCodec;	a	codec
	m	(Lcom/mojang/serialization/MapCodec;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fhx	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider
	m	(Lfdj;)Lfjw;	a	getScoreHolder
	m	()Lfhw;	a	getType
	m	()Ljava/util/Set;	b	getReferencedContextParams
c	fhy	net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders
	f	Lcom/mojang/serialization/Codec;	d	TYPED_CODEC
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lfhw;	b	FIXED
	f	Lfhw;	c	CONTEXT
	m	()V	<init>	<init>
	m	(Ljava/lang/String;Lcom/mojang/serialization/MapCodec;)Lfhw;	a	register
	m	()Lcom/mojang/serialization/Codec;	a	lambda$static$1
	m	(Lfhx;)Lcom/mojang/datafixers/util/Either;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fhz	net/minecraft/world/level/storage/loot/providers/score/package-info
c	fia	net/minecraft/world/level/storage/package-info
c	fib	net/minecraft/world/level/timers/FunctionCallback
	f	Lame;	b	functionId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;)V	<init>	<init>
	m	(Lnet/minecraft/server/MinecraftServer;Lfif;J)V	a	handle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	functionId
	m	(Ljava/lang/Object;Lfif;J)V	a	handle
	m	(Lamt;Lib;)V	a	lambda$handle$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fic	net/minecraft/world/level/timers/FunctionTagCallback
	f	Lame;	b	tagId
	f	Lcom/mojang/serialization/MapCodec;	a	CODEC
	m	(Lame;)V	<init>	<init>
	m	(Lnet/minecraft/server/MinecraftServer;Lfif;J)V	a	handle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lame;	b	tagId
	m	(Ljava/lang/Object;Lfif;J)V	a	handle
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fid	net/minecraft/world/level/timers/TimerCallback
	m	(Ljava/lang/Object;Lfif;J)V	a	handle
	m	()Lcom/mojang/serialization/MapCodec;	a	codec
c	fie	net/minecraft/world/level/timers/TimerCallbacks
	f	Lfie;	a	SERVER_CALLBACKS
	f	Lbbi$b;	b	idMapper
	f	Lcom/mojang/serialization/Codec;	c	codec
	m	()V	<init>	<init>
	m	(Lame;Lcom/mojang/serialization/MapCodec;)Lfie;	a	register
	m	()Lcom/mojang/serialization/Codec;	a	codec
	m	()V	<clinit>	<clinit>
c	fif	net/minecraft/world/level/timers/TimerQueue
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	CALLBACK_DATA_TAG
	f	Ljava/lang/String;	c	TIMER_NAME_TAG
	f	Ljava/lang/String;	d	TIMER_TRIGGER_TIME_TAG
	f	Lfie;	e	callbacksRegistry
	f	Ljava/util/Queue;	f	queue
	f	Lcom/google/common/primitives/UnsignedLong;	g	sequentialId
	f	Lcom/google/common/collect/Table;	h	events
	m	()Ljava/util/Comparator;	c	createComparator
	m	(Lfie;Ljava/util/stream/Stream;)V	<init>	<init>
	m	(Lfie;)V	<init>	<init>
	m	(Ljava/lang/Object;J)V	a	tick
	m	(Ljava/lang/String;JLfid;)V	a	schedule
	m	(Ljava/lang/String;)I	a	remove
	m	()Ljava/util/Set;	a	getEventsIds
	m	(Lui;)V	a	loadEvent
	m	(Lfif$a;)Lui;	a	storeEvent
	m	()Luo;	b	store
	m	(Lcom/mojang/serialization/Dynamic;)V	a	lambda$new$2
	m	(Lfif$a;)Lcom/google/common/primitives/UnsignedLong;	b	lambda$createComparator$1
	m	(Lfif$a;)J	c	lambda$createComparator$0
	m	()V	<clinit>	<clinit>
c	fif$a	net/minecraft/world/level/timers/TimerQueue$Event
	f	J	a	triggerTime
	f	Lcom/google/common/primitives/UnsignedLong;	b	sequentialId
	f	Ljava/lang/String;	c	id
	f	Lfid;	d	callback
	m	(JLcom/google/common/primitives/UnsignedLong;Ljava/lang/String;Lfid;)V	<init>	<init>
c	fig	net/minecraft/world/level/timers/package-info
c	fih	net/minecraft/world/level/validation/ContentValidationException
	f	Ljava/nio/file/Path;	a	directory
	f	Ljava/util/List;	b	entries
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	getMessage	getMessage
	m	(Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String;	a	getMessage
	m	(Lfij;)Ljava/lang/String;	a	lambda$getMessage$0
c	fii	net/minecraft/world/level/validation/DirectoryValidator
	f	Ljava/nio/file/PathMatcher;	a	symlinkTargetAllowList
	m	(Ljava/nio/file/PathMatcher;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	a	validateSymlink
	m	(Ljava/nio/file/Path;)Ljava/util/List;	a	validateSymlink
	m	(Ljava/nio/file/Path;Z)Ljava/util/List;	a	validateDirectory
	m	(Ljava/nio/file/Path;Ljava/util/List;)V	b	validateKnownDirectory
c	fii$1	net/minecraft/world/level/validation/DirectoryValidator$1
	f	Ljava/util/List;	a	val$issues
	f	Lfii;	b	this$0
	m	(Lfii;Ljava/util/List;)V	<init>	<init>
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V	c	validateSymlink
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	a	preVisitDirectory
	m	(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	b	visitFile
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	visitFile	visitFile
	m	(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;	preVisitDirectory	preVisitDirectory
c	fij	net/minecraft/world/level/validation/ForbiddenSymlinkInfo
	f	Ljava/nio/file/Path;	a	link
	f	Ljava/nio/file/Path;	b	target
	m	(Ljava/nio/file/Path;Ljava/nio/file/Path;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/nio/file/Path;	a	link
	m	()Ljava/nio/file/Path;	b	target
c	fik	net/minecraft/world/level/validation/PathAllowList
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Ljava/lang/String;	b	COMMENT_PREFIX
	f	Ljava/util/List;	c	entries
	f	Ljava/util/Map;	d	compiledPaths
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	getForFileSystem
	m	(Ljava/nio/file/Path;)Z	matches	matches
	m	(Ljava/io/BufferedReader;)Lfik;	a	readPlain
	m	(Ljava/lang/String;)Ljava/util/stream/Stream;	a	lambda$readPlain$5
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$4
	m	(Ljava/util/List;Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$3
	m	(Ljava/nio/file/Path;)Z	a	lambda$getForFileSystem$2
	m	(Ljava/nio/file/Path;)Z	b	lambda$getForFileSystem$1
	m	(Ljava/nio/file/FileSystem;Lfik$a;)Ljava/nio/file/PathMatcher;	a	lambda$getForFileSystem$0
	m	()V	<clinit>	<clinit>
c	fik$a	net/minecraft/world/level/validation/PathAllowList$ConfigEntry
	f	Lfik$b;	a	type
	f	Ljava/lang/String;	b	pattern
	m	(Lfik$b;Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher;	a	compile
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	parse
	m	(Ljava/lang/String;)Lfik$a;	b	glob
	m	(Ljava/lang/String;)Lfik$a;	c	regex
	m	(Ljava/lang/String;)Lfik$a;	d	prefix
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Lfik$b;	a	type
	m	()Ljava/lang/String;	b	pattern
c	fik$b	net/minecraft/world/level/validation/PathAllowList$EntryType
	f	Lfik$b;	a	FILESYSTEM
	f	Lfik$b;	b	PREFIX
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	compile	compile
	m	(Ljava/nio/file/FileSystem;Ljava/lang/String;)Ljava/nio/file/PathMatcher;	a	lambda$static$1
	m	(Ljava/lang/String;Ljava/nio/file/Path;)Z	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fil	net/minecraft/world/level/validation/package-info
c	fim	net/minecraft/world/package-info
c	fin	net/minecraft/world/phys/AABB
	f	D	g	EPSILON
	f	D	a	minX
	f	D	b	minY
	f	D	c	minZ
	f	D	d	maxX
	f	D	e	maxY
	f	D	f	maxZ
	m	(DDDDDD)V	<init>	<init>
	m	(Ljb;)V	<init>	<init>
	m	(Lfis;Lfis;)V	<init>	<init>
	m	(Leuq;)Lfin;	a	of
	m	(Lfis;)Lfin;	a	unitCubeFromLowerCorner
	m	(Ljb;Ljb;)Lfin;	a	encapsulatingFullBlocks
	m	(D)Lfin;	a	setMinX
	m	(D)Lfin;	b	setMinY
	m	(D)Lfin;	c	setMinZ
	m	(D)Lfin;	d	setMaxX
	m	(D)Lfin;	e	setMaxY
	m	(D)Lfin;	f	setMaxZ
	m	(Ljh$a;)D	a	min
	m	(Ljh$a;)D	b	max
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	(DDD)Lfin;	a	contract
	m	(Lfis;)Lfin;	b	expandTowards
	m	(DDD)Lfin;	b	expandTowards
	m	(DDD)Lfin;	c	inflate
	m	(D)Lfin;	g	inflate
	m	(Lfin;)Lfin;	a	intersect
	m	(Lfin;)Lfin;	b	minmax
	m	(DDD)Lfin;	d	move
	m	(Ljb;)Lfin;	a	move
	m	(Lfis;)Lfin;	c	move
	m	(Lorg/joml/Vector3f;)Lfin;	a	move
	m	(Lfin;)Z	c	intersects
	m	(DDDDDD)Z	a	intersects
	m	(Lfis;Lfis;)Z	a	intersects
	m	(Ljb;)Z	b	intersects
	m	(Lfis;)Z	d	contains
	m	(DDD)Z	e	contains
	m	()D	a	getSize
	m	()D	b	getXsize
	m	()D	c	getYsize
	m	()D	d	getZsize
	m	(DDD)Lfin;	f	deflate
	m	(D)Lfin;	h	deflate
	m	(Lfis;Lfis;)Ljava/util/Optional;	b	clip
	m	(DDDDDDLfis;Lfis;)Ljava/util/Optional;	a	clip
	m	(Ljava/lang/Iterable;Lfis;Lfis;Ljb;)Lfio;	a	clip
	m	(Lfin;Lfis;[DLjh;DDD)Ljh;	a	getDirection
	m	(DDDDDDLfis;[DLjh;DDD)Ljh;	a	getDirection
	m	([DLjh;DDDDDDDDLjh;DDD)Ljh;	a	clipPoint
	m	(Lfis;Ljava/util/List;)Z	a	collidedAlongVector
	m	(Lfis;)D	e	distanceToSqr
	m	(Lfin;)D	d	distanceToSqr
	m	()Ljava/lang/String;	toString	toString
	m	()Z	e	hasNaN
	m	()Lfis;	f	getCenter
	m	()Lfis;	g	getBottomCenter
	m	()Lfis;	h	getMinPosition
	m	()Lfis;	i	getMaxPosition
	m	(Lfis;DDD)Lfin;	a	ofSize
c	fin$a	net/minecraft/world/phys/AABB$Builder
	f	F	a	minX
	f	F	b	minY
	f	F	c	minZ
	f	F	d	maxX
	f	F	e	maxY
	f	F	f	maxZ
	m	()V	<init>	<init>
	m	(Lorg/joml/Vector3fc;)V	a	include
	m	()Lfin;	a	build
c	fio	net/minecraft/world/phys/BlockHitResult
	f	Ljh;	b	direction
	f	Ljb;	c	blockPos
	f	Z	d	miss
	f	Z	e	inside
	f	Z	f	worldBorderHit
	m	(Lfis;Ljh;Ljb;)Lfio;	a	miss
	m	(Lfis;Ljh;Ljb;Z)V	<init>	<init>
	m	(Lfis;Ljh;Ljb;ZZ)V	<init>	<init>
	m	(ZLfis;Ljh;Ljb;ZZ)V	<init>	<init>
	m	(Ljh;)Lfio;	a	withDirection
	m	(Ljb;)Lfio;	a	withPosition
	m	()Lfio;	a	hitBorder
	m	()Ljb;	b	getBlockPos
	m	()Ljh;	c	getDirection
	m	()Lfiq$a;	d	getType
	m	()Z	e	isInside
	m	()Z	f	isWorldBorderHit
c	fip	net/minecraft/world/phys/EntityHitResult
	f	Lbzm;	b	entity
	m	(Lbzm;)V	<init>	<init>
	m	(Lbzm;Lfis;)V	<init>	<init>
	m	()Lbzm;	a	getEntity
	m	()Lfiq$a;	d	getType
c	fiq	net/minecraft/world/phys/HitResult
	f	Lfis;	a	location
	m	(Lfis;)V	<init>	<init>
	m	(Lbzm;)D	a	distanceTo
	m	()Lfiq$a;	d	getType
	m	()Lfis;	g	getLocation
c	fiq$a	net/minecraft/world/phys/HitResult$Type
	f	Lfiq$a;	a	MISS
	f	Lfiq$a;	b	BLOCK
	f	Lfiq$a;	c	ENTITY
	f	[Lfiq$a;	d	$VALUES
	m	()[Lfiq$a;	values	values
	m	(Ljava/lang/String;)Lfiq$a;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfiq$a;	a	$values
	m	()V	<clinit>	<clinit>
c	fir	net/minecraft/world/phys/Vec2
	f	Lfir;	a	ZERO
	f	Lfir;	b	ONE
	f	Lfir;	c	UNIT_X
	f	Lfir;	d	NEG_UNIT_X
	f	Lfir;	e	UNIT_Y
	f	Lfir;	f	NEG_UNIT_Y
	f	Lfir;	g	MAX
	f	Lfir;	h	MIN
	f	Lcom/mojang/serialization/Codec;	i	CODEC
	f	F	j	x
	f	F	k	y
	m	(FF)V	<init>	<init>
	m	(F)Lfir;	a	scale
	m	(Lfir;)F	a	dot
	m	(Lfir;)Lfir;	b	add
	m	(F)Lfir;	b	add
	m	(Lfir;)Z	c	equals
	m	()Lfir;	a	normalized
	m	()F	b	length
	m	()F	c	lengthSquared
	m	(Lfir;)F	d	distanceToSqr
	m	()Lfir;	d	negated
	m	(Lfir;)Ljava/util/List;	e	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/util/List;)Lfir;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fis	net/minecraft/world/phys/Vec3
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lfis;	c	ZERO
	f	D	d	x
	f	D	e	y
	f	D	f	z
	m	(I)Lfis;	a	fromRGB24
	m	(Lkg;)Lfis;	a	atLowerCornerOf
	m	(Lkg;DDD)Lfis;	a	atLowerCornerWithOffset
	m	(Lkg;)Lfis;	b	atCenterOf
	m	(Lkg;)Lfis;	c	atBottomCenterOf
	m	(Lkg;D)Lfis;	a	upFromBottomCenterOf
	m	(DDD)V	<init>	<init>
	m	(Lorg/joml/Vector3f;)V	<init>	<init>
	m	(Lkg;)V	<init>	<init>
	m	(Lfis;)Lfis;	a	vectorTo
	m	()Lfis;	d	normalize
	m	(Lfis;)D	b	dot
	m	(Lfis;)Lfis;	c	cross
	m	(Lfis;)Lfis;	d	subtract
	m	(D)Lfis;	a	subtract
	m	(DDD)Lfis;	a	subtract
	m	(D)Lfis;	b	add
	m	(Lfis;)Lfis;	e	add
	m	(DDD)Lfis;	b	add
	m	(Ljv;D)Z	a	closerThan
	m	(Lfis;)D	f	distanceTo
	m	(Lfis;)D	g	distanceToSqr
	m	(DDD)D	c	distanceToSqr
	m	(Lfis;DD)Z	a	closerThan
	m	(D)Lfis;	c	scale
	m	()Lfis;	e	reverse
	m	(Lfis;)Lfis;	h	multiply
	m	(DDD)Lfis;	d	multiply
	m	()Lfis;	f	horizontal
	m	(Lbck;F)Lfis;	a	offsetRandom
	m	()D	g	length
	m	()D	h	lengthSqr
	m	()D	i	horizontalDistance
	m	()D	j	horizontalDistanceSqr
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()I	hashCode	hashCode
	m	()Ljava/lang/String;	toString	toString
	m	(Lfis;D)Lfis;	a	lerp
	m	(F)Lfis;	a	xRot
	m	(F)Lfis;	b	yRot
	m	(F)Lfis;	c	zRot
	m	()Lfis;	k	rotateClockwise90
	m	(Lfir;)Lfis;	a	directionFromRotation
	m	(FF)Lfis;	a	directionFromRotation
	m	(Ljava/util/EnumSet;)Lfis;	a	align
	m	(Ljh$a;)D	a	get
	m	(Ljh$a;D)Lfis;	a	with
	m	(Ljh;D)Lfis;	a	relative
	m	()D	a	x
	m	()D	b	y
	m	()D	c	z
	m	()Lorg/joml/Vector3f;	l	toVector3f
	m	(Lfis;)Lfis;	i	projectedOn
	m	(Lfis;)Ljava/util/List;	j	lambda$static$2
	m	(Ljava/util/List;)Lcom/mojang/serialization/DataResult;	a	lambda$static$1
	m	(Ljava/util/List;)Lfis;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fis$1	net/minecraft/world/phys/Vec3$1
	m	()V	<init>	<init>
	m	(Lio/netty/buffer/ByteBuf;)Lfis;	a	decode
	m	(Lio/netty/buffer/ByteBuf;Lfis;)V	a	encode
	m	(Ljava/lang/Object;Ljava/lang/Object;)V	encode	encode
	m	(Ljava/lang/Object;)Ljava/lang/Object;	decode	decode
c	fit	net/minecraft/world/phys/package-info
c	fiu	net/minecraft/world/phys/shapes/ArrayVoxelShape
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	xs
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	c	ys
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	zs
	m	(Lfjb;[D[D[D)V	<init>	<init>
	m	(Lfjb;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
	m	(Ljh$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
c	fiu$1	net/minecraft/world/phys/shapes/ArrayVoxelShape$1
	f	[I	a	$SwitchMap$net$minecraft$core$Direction$Axis
	m	()V	<clinit>	<clinit>
c	fiv	net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape
	f	Ljava/util/BitSet;	d	storage
	f	I	e	xMin
	f	I	f	yMin
	f	I	g	zMin
	f	I	h	xMax
	f	I	i	yMax
	f	I	j	zMax
	m	(III)V	<init>	<init>
	m	(IIIIIIIII)Lfiv;	a	withFilledBounds
	m	(Lfjb;)V	<init>	<init>
	m	(III)I	a	getIndex
	m	(III)Z	b	isFull
	m	(IIIZ)V	a	fillUpdateBounds
	m	(III)V	c	fill
	m	()Z	a	isEmpty
	m	(Ljh$a;)I	a	firstFull
	m	(Ljh$a;)I	b	lastFull
	m	(Lfjb;Lfjb;Lfje;Lfje;Lfje;Lfiw;)Lfiv;	a	join
	m	(Lfjb;Lfjb$b;Z)V	a	forAllBoxes
	m	(IIII)Z	a	isZStripFull
	m	(IIIII)Z	a	isXZRectangleFull
	m	(IIII)V	b	clearZStrip
	m	(III)Z	d	isInterior
	m	(Lfje;Lfje;Lfiw;Lfjb;Lfjb;Lfiv;[IIII)Z	a	lambda$join$2
	m	(Lfje;Lfiw;Lfjb;ILfjb;ILfiv;I[I[ZIII)Z	a	lambda$join$1
	m	(Lfiw;Lfjb;IILfjb;IILfiv;II[I[ZIII)Z	a	lambda$join$0
c	fiw	net/minecraft/world/phys/shapes/BooleanOp
	f	Lfiw;	a	FALSE
	f	Lfiw;	b	NOT_OR
	f	Lfiw;	c	ONLY_SECOND
	f	Lfiw;	d	NOT_FIRST
	f	Lfiw;	e	ONLY_FIRST
	f	Lfiw;	f	NOT_SECOND
	f	Lfiw;	g	NOT_SAME
	f	Lfiw;	h	NOT_AND
	f	Lfiw;	i	AND
	f	Lfiw;	j	SAME
	f	Lfiw;	k	SECOND
	f	Lfiw;	l	CAUSES
	f	Lfiw;	m	FIRST
	f	Lfiw;	n	CAUSED_BY
	f	Lfiw;	o	OR
	f	Lfiw;	p	TRUE
	m	(ZZ)Z	apply	apply
	m	(ZZ)Z	a	lambda$static$15
	m	(ZZ)Z	b	lambda$static$14
	m	(ZZ)Z	c	lambda$static$13
	m	(ZZ)Z	d	lambda$static$12
	m	(ZZ)Z	e	lambda$static$11
	m	(ZZ)Z	f	lambda$static$10
	m	(ZZ)Z	g	lambda$static$9
	m	(ZZ)Z	h	lambda$static$8
	m	(ZZ)Z	i	lambda$static$7
	m	(ZZ)Z	j	lambda$static$6
	m	(ZZ)Z	k	lambda$static$5
	m	(ZZ)Z	l	lambda$static$4
	m	(ZZ)Z	m	lambda$static$3
	m	(ZZ)Z	n	lambda$static$2
	m	(ZZ)Z	o	lambda$static$1
	m	(ZZ)Z	p	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fix	net/minecraft/world/phys/shapes/CollisionContext
	m	()Lfix;	a	empty
	m	(Lbzm;)Lfix;	a	of
	m	(Lbzm;Z)Lfix;	a	of
	m	(Lcut;)Lfix;	a	placementContext
	m	(Lbzm;D)Lfix;	a	withPosition
	m	()Z	b	isDescending
	m	(Lfjm;Ljb;Z)Z	a	isAbove
	m	(Ldcr;)Z	a	isHoldingItem
	m	(Lfal;Lfal;)Z	a	canStandOnFluid
	m	(Leeb;Ldmc;Ljb;)Lfjm;	a	getCollisionShape
	m	()Z	c	isPlacement
	m	(Lfal;)Z	a	lambda$withPosition$3
	m	(Lcam;Lfal;)Z	a	lambda$withPosition$2
	m	(Lfal;)Z	b	lambda$placementContext$1
	m	(Lcam;Lfal;)Z	b	lambda$placementContext$0
c	fiy	net/minecraft/world/phys/shapes/CubePointRange
	f	I	a	parts
	m	(I)V	<init>	<init>
	m	(I)D	getDouble	getDouble
	m	()I	size	size
c	fiz	net/minecraft/world/phys/shapes/CubeVoxelShape
	m	(Lfjb;)V	<init>	<init>
	m	(Ljh$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	m	(Ljh$a;D)I	a	findIndex
c	fja	net/minecraft/world/phys/shapes/DiscreteCubeMerger
	f	Lfiy;	a	result
	f	I	b	firstDiv
	f	I	c	secondDiv
	m	(II)V	<init>	<init>
	m	(Lfje$a;)Z	a	forMergedIndexes
	m	()I	size	size
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
c	fjb	net/minecraft/world/phys/shapes/DiscreteVoxelShape
	f	[Ljh$a;	d	AXIS_VALUES
	f	I	a	xSize
	f	I	b	ySize
	f	I	c	zSize
	m	(III)V	<init>	<init>
	m	(Lh;)Lfjb;	a	rotate
	m	(Liy;III)Z	a	isFullWide
	m	(III)Z	e	isFullWide
	m	(Liy;III)Z	b	isFull
	m	(III)Z	b	isFull
	m	(III)V	c	fill
	m	()Z	a	isEmpty
	m	(Ljh$a;)I	a	firstFull
	m	(Ljh$a;)I	b	lastFull
	m	(Ljh$a;II)I	a	firstFull
	m	(Ljh$a;II)I	b	lastFull
	m	(Ljh$a;)I	c	getSize
	m	()I	b	getXSize
	m	()I	c	getYSize
	m	()I	d	getZSize
	m	(Lfjb$b;Z)V	a	forAllEdges
	m	(Lfjb$b;Liy;Z)V	a	forAllAxisEdges
	m	(Lfjb$b;Z)V	b	forAllBoxes
	m	(Lfjb$a;)V	a	forAllFaces
	m	(Lfjb$a;Liy;)V	a	forAllAxisFaces
	m	()V	<clinit>	<clinit>
c	fjb$a	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer
	m	(Ljh;III)V	consume	consume
c	fjb$b	net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer
	m	(IIIIII)V	consume	consume
c	fjc	net/minecraft/world/phys/shapes/EntityCollisionContext
	f	Lfix;	a	EMPTY
	f	Z	b	descending
	f	D	c	entityBottom
	f	Z	d	placement
	f	Ldcv;	e	heldItem
	f	Ljava/util/function/Predicate;	f	canStandOnFluid
	f	Lbzm;	g	entity
	m	(ZZDLdcv;Ljava/util/function/Predicate;Lbzm;)V	<init>	<init>
	m	(Lbzm;ZZ)V	<init>	<init>
	m	(Ldcr;)Z	a	isHoldingItem
	m	(Lfal;Lfal;)Z	a	canStandOnFluid
	m	(Leeb;Ldmc;Ljb;)Lfjm;	a	getCollisionShape
	m	()Z	b	isDescending
	m	(Lfjm;Ljb;Z)Z	a	isAbove
	m	()Lbzm;	d	getEntity
	m	()Z	c	isPlacement
	m	(Lfal;)Z	a	lambda$new$3
	m	(Lcam;Lfal;)Z	a	lambda$new$2
	m	(Lfal;)Z	b	lambda$new$1
	m	(Lfal;)Z	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjc$1	net/minecraft/world/phys/shapes/EntityCollisionContext$1
	m	(ZZDLdcv;Ljava/util/function/Predicate;Lbzm;)V	<init>	<init>
	m	(Lfjm;Ljb;Z)Z	a	isAbove
c	fjd	net/minecraft/world/phys/shapes/IdenticalMerger
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	coords
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;)V	<init>	<init>
	m	(Lfje$a;)Z	a	forMergedIndexes
	m	()I	size	size
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
c	fje	net/minecraft/world/phys/shapes/IndexMerger
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lfje$a;)Z	a	forMergedIndexes
	m	()I	size	size
c	fje$a	net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer
	m	(III)Z	merge	merge
c	fjf	net/minecraft/world/phys/shapes/IndirectMerger
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	EMPTY
	f	[D	b	result
	f	[I	c	firstIndices
	f	[I	d	secondIndices
	f	I	e	resultLength
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)V	<init>	<init>
	m	(Lfje$a;)Z	a	forMergedIndexes
	m	()I	size	size
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	()V	<clinit>	<clinit>
c	fjg	net/minecraft/world/phys/shapes/MinecartCollisionContext
	f	Ljb;	b	ingoreBelow
	f	Ljb;	c	slopeIgnore
	m	(Lcxg;Z)V	<init>	<init>
	m	(Lcxg;)V	a	setupContext
	m	(Leeb;Ldmc;Ljb;)Lfjm;	a	getCollisionShape
c	fjg$1	net/minecraft/world/phys/shapes/MinecartCollisionContext$1
	f	[I	a	$SwitchMap$net$minecraft$world$level$block$state$properties$RailShape
	m	()V	<clinit>	<clinit>
c	fjh	net/minecraft/world/phys/shapes/NonOverlappingMerger
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	lower
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	b	upper
	f	Z	c	swap
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Z)V	<init>	<init>
	m	()I	size	size
	m	(Lfje$a;)Z	a	forMergedIndexes
	m	(Lfje$a;)Z	b	forNonSwappedIndexes
	m	(I)D	getDouble	getDouble
	m	()Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getList
	m	(Lfje$a;III)Z	a	lambda$forMergedIndexes$0
c	fji	net/minecraft/world/phys/shapes/OffsetDoubleList
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	delegate
	f	D	b	offset
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;D)V	<init>	<init>
	m	(I)D	getDouble	getDouble
	m	()I	size	size
c	fjj	net/minecraft/world/phys/shapes/Shapes
	f	D	a	EPSILON
	f	D	b	BIG_EPSILON
	f	Lfjm;	d	BLOCK
	f	Lfis;	e	BLOCK_CENTER
	f	Lfjm;	c	INFINITY
	f	Lfjm;	f	EMPTY
	m	()V	<init>	<init>
	m	()Lfjm;	a	empty
	m	()Lfjm;	b	block
	m	(DDDDDD)Lfjm;	a	box
	m	(DDDDDD)Lfjm;	b	create
	m	(Lfin;)Lfjm;	a	create
	m	(DD)I	a	findBits
	m	(II)J	a	lcm
	m	(Lfjm;Lfjm;)Lfjm;	a	or
	m	(Lfjm;[Lfjm;)Lfjm;	a	or
	m	(Lfjm;Lfjm;Lfiw;)Lfjm;	a	join
	m	(Lfjm;Lfjm;Lfiw;)Lfjm;	b	joinUnoptimized
	m	(Lfjm;Lfjm;Lfiw;)Z	c	joinIsNotEmpty
	m	(Lfje;Lfje;Lfje;Lfjb;Lfjb;Lfiw;)Z	a	joinIsNotEmpty
	m	(Ljh$a;Lfin;Ljava/lang/Iterable;D)D	a	collide
	m	(Lfjm;Lfjm;Ljh;)Z	a	blockOccludes
	m	(Lfjm;Lfjm;Ljh;)Z	b	mergedFaceOccludes
	m	(Lfjm;Lfjm;)Z	b	faceShapeOccludes
	m	(ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lfje;	a	createIndexMerger
	m	(Lfjm;Lh;)Lfjm;	a	rotate
	m	(Lfjm;Lh;Lfis;)Lfjm;	a	rotate
	m	(Lit/unimi/dsi/fastutil/doubles/DoubleList;ZDD)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	makeAxis
	m	(Lfjm;Lfjm;)Z	c	equal
	m	(Lfjm;)Ljava/util/Map;	a	rotateHorizontalAxis
	m	(Lfjm;Lfis;)Ljava/util/Map;	a	rotateHorizontalAxis
	m	(Lfjm;)Ljava/util/Map;	b	rotateAllAxis
	m	(Lfjm;Lfis;)Ljava/util/Map;	b	rotateAllAxis
	m	(Lfjm;)Ljava/util/Map;	c	rotateHorizontal
	m	(Lfjm;Lfis;)Ljava/util/Map;	c	rotateHorizontal
	m	(Lfjm;)Ljava/util/Map;	d	rotateAll
	m	(Lfjm;Lfis;)Ljava/util/Map;	d	rotateAll
	m	(Lfjm;)Ljava/util/Map;	e	rotateAttachFace
	m	(Lfje;Lfje;Lfiw;Lfjb;Lfjb;III)Z	a	lambda$joinIsNotEmpty$3
	m	(Lfje;Lfiw;Lfjb;ILfjb;IIII)Z	a	lambda$joinIsNotEmpty$2
	m	(Lfiw;Lfjb;IILfjb;IIIII)Z	a	lambda$joinIsNotEmpty$1
	m	()Lfiz;	c	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjj$a	net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer
	m	(DDDDDD)V	consume	consume
c	fjk	net/minecraft/world/phys/shapes/SliceShape
	f	Lfjm;	b	delegate
	f	Ljh$a;	c	axis
	f	Lit/unimi/dsi/fastutil/doubles/DoubleList;	d	SLICE_COORDS
	m	(Lfjm;Ljh$a;I)V	<init>	<init>
	m	(Lfjb;Ljh$a;I)Lfjb;	a	makeSlice
	m	(Ljh$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	m	()V	<clinit>	<clinit>
c	fjl	net/minecraft/world/phys/shapes/SubShape
	f	Lfjb;	d	parent
	f	I	e	startX
	f	I	f	startY
	f	I	g	startZ
	f	I	h	endX
	f	I	i	endY
	f	I	j	endZ
	m	(Lfjb;IIIIII)V	<init>	<init>
	m	(III)Z	b	isFull
	m	(III)V	c	fill
	m	(Ljh$a;)I	a	firstFull
	m	(Ljh$a;)I	b	lastFull
	m	(Ljh$a;I)I	a	clampToShape
c	fjm	net/minecraft/world/phys/shapes/VoxelShape
	f	Lfjb;	a	shape
	f	[Lfjm;	b	faces
	m	(Lfjb;)V	<init>	<init>
	m	(Ljh$a;)D	b	min
	m	(Ljh$a;)D	c	max
	m	()Lfin;	a	bounds
	m	()Lfjm;	b	singleEncompassing
	m	(Ljh$a;I)D	a	get
	m	(Ljh$a;)Lit/unimi/dsi/fastutil/doubles/DoubleList;	a	getCoords
	m	()Z	c	isEmpty
	m	(Lfis;)Lfjm;	a	move
	m	(Lkg;)Lfjm;	a	move
	m	(DDD)Lfjm;	a	move
	m	()Lfjm;	d	optimize
	m	(Lfjj$a;)V	a	forAllEdges
	m	(Lfjj$a;)V	b	forAllBoxes
	m	()Ljava/util/List;	e	toAabbs
	m	(Ljh$a;DD)D	a	min
	m	(Ljh$a;DD)D	b	max
	m	(Ljh$a;D)I	a	findIndex
	m	(Lfis;Lfis;Ljb;)Lfio;	a	clip
	m	(Lfis;)Ljava/util/Optional;	b	closestPointTo
	m	(Ljh;)Lfjm;	a	getFaceShape
	m	(Ljh;)Lfjm;	b	calculateFace
	m	()Z	f	isCubeLike
	m	(Ljh$a;)Z	d	isCubeLikeAlong
	m	(Ljh$a;Lfin;D)D	a	collide
	m	(Liy;Lfin;D)D	a	collideX
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	toString	toString
	m	(Lfis;[Lfis;DDDDDD)V	a	lambda$closestPointTo$5
	m	(DLjh$a;I)Z	a	lambda$findIndex$4
	m	(Ljava/util/List;DDDDDD)V	a	lambda$toAabbs$3
	m	(Lfjj$a;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;IIIIII)V	a	lambda$forAllBoxes$2
	m	(Lfjj$a;IIIIII)V	a	lambda$forAllEdges$1
	m	([Lfjm;DDDDDD)V	a	lambda$optimize$0
c	fjn	net/minecraft/world/phys/shapes/package-info
c	fjo	net/minecraft/world/scores/DisplaySlot
	f	Lfjo;	a	LIST
	f	Lfjo;	b	SIDEBAR
	f	Lfjo;	c	BELOW_NAME
	f	Lfjo;	d	TEAM_BLACK
	f	Lfjo;	e	TEAM_DARK_BLUE
	f	Lfjo;	f	TEAM_DARK_GREEN
	f	Lfjo;	g	TEAM_DARK_AQUA
	f	Lfjo;	h	TEAM_DARK_RED
	f	Lfjo;	i	TEAM_DARK_PURPLE
	f	Lfjo;	j	TEAM_GOLD
	f	Lfjo;	k	TEAM_GRAY
	f	Lfjo;	l	TEAM_DARK_GRAY
	f	Lfjo;	m	TEAM_BLUE
	f	Lfjo;	n	TEAM_GREEN
	f	Lfjo;	o	TEAM_AQUA
	f	Lfjo;	p	TEAM_RED
	f	Lfjo;	q	TEAM_LIGHT_PURPLE
	f	Lfjo;	r	TEAM_YELLOW
	f	Lfjo;	s	TEAM_WHITE
	f	Lbda$a;	t	CODEC
	f	Ljava/util/function/IntFunction;	u	BY_ID
	f	I	v	id
	f	Ljava/lang/String;	w	name
	f	[Lfjo;	x	$VALUES
	m	()[Lfjo;	values	values
	m	(Ljava/lang/String;)Lfjo;	valueOf	valueOf
	m	(Ljava/lang/String;IILjava/lang/String;)V	<init>	<init>
	m	()I	a	id
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lo;)Lfjo;	a	teamColorToSlot
	m	()[Lfjo;	b	$values
	m	()V	<clinit>	<clinit>
c	fjo$1	net/minecraft/world/scores/DisplaySlot$1
	f	[I	a	$SwitchMap$net$minecraft$ChatFormatting
	m	()V	<clinit>	<clinit>
c	fjp	net/minecraft/world/scores/Objective
	f	Lfjx;	a	scoreboard
	f	Ljava/lang/String;	b	name
	f	Lfka;	c	criteria
	f	Lxo;	d	displayName
	f	Lxo;	e	formattedDisplayName
	f	Lfka$a;	f	renderType
	f	Z	g	displayAutoUpdate
	f	Lze;	h	numberFormat
	m	(Lfjx;Ljava/lang/String;Lfka;Lxo;Lfka$a;ZLze;)V	<init>	<init>
	m	()Lfjp$a;	a	pack
	m	()Lfjx;	b	getScoreboard
	m	()Ljava/lang/String;	c	getName
	m	()Lfka;	d	getCriteria
	m	()Lxo;	e	getDisplayName
	m	()Z	f	displayAutoUpdate
	m	()Lze;	g	numberFormat
	m	(Lze;)Lze;	a	numberFormatOrDefault
	m	()Lxo;	j	createFormattedDisplayName
	m	()Lxo;	h	getFormattedDisplayName
	m	(Lxo;)V	a	setDisplayName
	m	()Lfka$a;	i	getRenderType
	m	(Lfka$a;)V	a	setRenderType
	m	(Z)V	a	setDisplayAutoUpdate
	m	(Lze;)V	b	setNumberFormat
	m	(Lyl;)Lyl;	a	lambda$createFormattedDisplayName$0
c	fjp$a	net/minecraft/world/scores/Objective$Packed
	f	Ljava/lang/String;	b	name
	f	Lfka;	c	criteria
	f	Lxo;	d	displayName
	f	Lfka$a;	e	renderType
	f	Z	f	displayAutoUpdate
	f	Ljava/util/Optional;	g	numberFormat
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;Lfka;Lxo;Lfka$a;ZLjava/util/Optional;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Lfka;	b	criteria
	m	()Lxo;	c	displayName
	m	()Lfka$a;	d	renderType
	m	()Z	e	displayAutoUpdate
	m	()Ljava/util/Optional;	f	numberFormat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjq	net/minecraft/world/scores/PlayerScoreEntry
	f	Ljava/lang/String;	a	owner
	f	I	b	value
	f	Lxo;	c	display
	f	Lze;	d	numberFormatOverride
	m	(Ljava/lang/String;ILxo;Lze;)V	<init>	<init>
	m	()Z	a	isHidden
	m	()Lxo;	b	ownerName
	m	(Lze;)Lyc;	a	formatValue
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	c	owner
	m	()I	d	value
	m	()Lxo;	e	display
	m	()Lze;	f	numberFormatOverride
c	fjr	net/minecraft/world/scores/PlayerScores
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectOpenHashMap;	a	scores
	m	()V	<init>	<init>
	m	(Lfjp;)Lfju;	a	get
	m	(Lfjp;Ljava/util/function/Consumer;)Lfju;	a	getOrCreate
	m	(Lfjp;)Z	b	remove
	m	()Z	a	hasScores
	m	()Lit/unimi/dsi/fastutil/objects/Object2IntMap;	b	listScores
	m	(Lfjp;Lfju;)V	a	setScore
	m	()Ljava/util/Map;	c	listRawScores
	m	(Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lfjp;Lfju;)V	a	lambda$listScores$1
	m	(Ljava/util/function/Consumer;Ljava/lang/Object;)Lfju;	a	lambda$getOrCreate$0
c	fjs	net/minecraft/world/scores/PlayerTeam
	f	I	a	BIT_FRIENDLY_FIRE
	f	I	b	BIT_SEE_INVISIBLES
	f	Lfjx;	c	scoreboard
	f	Ljava/lang/String;	d	name
	f	Ljava/util/Set;	e	players
	f	Lxo;	f	displayName
	f	Lxo;	g	playerPrefix
	f	Lxo;	h	playerSuffix
	f	Z	i	allowFriendlyFire
	f	Z	j	seeFriendlyInvisibles
	f	Lfjz$b;	k	nameTagVisibility
	f	Lfjz$b;	l	deathMessageVisibility
	f	Lo;	m	color
	f	Lfjz$a;	n	collisionRule
	f	Lyl;	o	displayNameStyle
	m	(Lfjx;Ljava/lang/String;)V	<init>	<init>
	m	()Lfjs$a;	a	pack
	m	()Lfjx;	b	getScoreboard
	m	()Ljava/lang/String;	c	getName
	m	()Lxo;	d	getDisplayName
	m	()Lyc;	e	getFormattedDisplayName
	m	(Lxo;)V	a	setDisplayName
	m	(Lxo;)V	b	setPlayerPrefix
	m	()Lxo;	f	getPlayerPrefix
	m	(Lxo;)V	c	setPlayerSuffix
	m	()Lxo;	g	getPlayerSuffix
	m	()Ljava/util/Collection;	h	getPlayers
	m	(Lxo;)Lyc;	d	getFormattedName
	m	(Lfjz;Lxo;)Lyc;	a	formatNameForTeam
	m	()Z	i	isAllowFriendlyFire
	m	(Z)V	a	setAllowFriendlyFire
	m	()Z	j	canSeeFriendlyInvisibles
	m	(Z)V	b	setSeeFriendlyInvisibles
	m	()Lfjz$b;	k	getNameTagVisibility
	m	()Lfjz$b;	l	getDeathMessageVisibility
	m	(Lfjz$b;)V	a	setNameTagVisibility
	m	(Lfjz$b;)V	b	setDeathMessageVisibility
	m	()Lfjz$a;	m	getCollisionRule
	m	(Lfjz$a;)V	a	setCollisionRule
	m	()I	n	packOptions
	m	(I)V	a	unpackOptions
	m	(Lo;)V	a	setColor
	m	()Lo;	o	getColor
c	fjs$a	net/minecraft/world/scores/PlayerTeam$Packed
	f	Ljava/lang/String;	b	name
	f	Ljava/util/Optional;	c	displayName
	f	Ljava/util/Optional;	d	color
	f	Z	e	allowFriendlyFire
	f	Z	f	seeFriendlyInvisibles
	f	Lxo;	g	memberNamePrefix
	f	Lxo;	h	memberNameSuffix
	f	Lfjz$b;	i	nameTagVisibility
	f	Lfjz$b;	j	deathMessageVisibility
	f	Lfjz$a;	k	collisionRule
	f	Ljava/util/List;	l	players
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;Ljava/util/Optional;Ljava/util/Optional;ZZLxo;Lxo;Lfjz$b;Lfjz$b;Lfjz$a;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	name
	m	()Ljava/util/Optional;	b	displayName
	m	()Ljava/util/Optional;	c	color
	m	()Z	d	allowFriendlyFire
	m	()Z	e	seeFriendlyInvisibles
	m	()Lxo;	f	memberNamePrefix
	m	()Lxo;	g	memberNameSuffix
	m	()Lfjz$b;	h	nameTagVisibility
	m	()Lfjz$b;	i	deathMessageVisibility
	m	()Lfjz$a;	j	collisionRule
	m	()Ljava/util/List;	k	players
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjt	net/minecraft/world/scores/ReadOnlyScoreInfo
	m	()I	a	value
	m	()Z	b	isLocked
	m	()Lze;	c	numberFormat
	m	(Lze;)Lyc;	a	formatValue
	m	(Lfjt;Lze;)Lyc;	a	safeFormatValue
c	fju	net/minecraft/world/scores/Score
	f	Lcom/mojang/serialization/MapCodec;	a	MAP_CODEC
	f	I	b	value
	f	Z	c	locked
	f	Lxo;	d	display
	f	Lze;	e	numberFormat
	m	()V	<init>	<init>
	m	(IZLjava/util/Optional;Ljava/util/Optional;)V	<init>	<init>
	m	()I	a	value
	m	(I)V	a	value
	m	()Z	b	isLocked
	m	(Z)V	a	setLocked
	m	()Lxo;	d	display
	m	(Lxo;)V	a	display
	m	()Lze;	c	numberFormat
	m	(Lze;)V	b	numberFormat
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lfju;)Ljava/util/Optional;	a	lambda$static$1
	m	(Lfju;)Ljava/util/Optional;	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjv	net/minecraft/world/scores/ScoreAccess
	m	()I	a	get
	m	(I)V	a	set
	m	(I)I	b	add
	m	()I	b	increment
	m	()V	c	reset
	m	()Z	d	locked
	m	()V	e	unlock
	m	()V	f	lock
	m	()Lxo;	g	display
	m	(Lxo;)V	a	display
	m	(Lze;)V	a	numberFormatOverride
c	fjw	net/minecraft/world/scores/ScoreHolder
	f	Ljava/lang/String;	cK	WILDCARD_NAME
	f	Lfjw;	cL	WILDCARD
	m	()Ljava/lang/String;	cM	getScoreboardName
	m	()Lxo;	Q_	getDisplayName
	m	()Lxo;	ht	getFeedbackDisplayName
	m	(Ljava/lang/String;)Lfjw;	c	forNameOnly
	m	(Lcom/mojang/authlib/GameProfile;)Lfjw;	a	fromGameProfile
	m	(Lyl;)Lyl;	a	lambda$getFeedbackDisplayName$0
	m	()V	<clinit>	<clinit>
c	fjw$1	net/minecraft/world/scores/ScoreHolder$1
	m	()V	<init>	<init>
	m	()Ljava/lang/String;	cM	getScoreboardName
c	fjw$2	net/minecraft/world/scores/ScoreHolder$2
	f	Ljava/lang/String;	a	val$name
	f	Lxo;	b	val$feedbackName
	m	(Ljava/lang/String;Lxo;)V	<init>	<init>
	m	()Ljava/lang/String;	cM	getScoreboardName
	m	()Lxo;	ht	getFeedbackDisplayName
c	fjw$3	net/minecraft/world/scores/ScoreHolder$3
	f	Ljava/lang/String;	a	val$name
	m	(Ljava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	cM	getScoreboardName
c	fjx	net/minecraft/world/scores/Scoreboard
	f	Ljava/lang/String;	b	HIDDEN_SCORE_PREFIX
	f	Lorg/slf4j/Logger;	a	LOGGER
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	c	objectivesByName
	f	Lit/unimi/dsi/fastutil/objects/Reference2ObjectMap;	d	objectivesByCriteria
	f	Ljava/util/Map;	e	playerScores
	f	Ljava/util/Map;	f	displayObjectives
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	g	teamsByName
	f	Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;	h	teamsByPlayer
	m	()V	<init>	<init>
	m	(Ljava/lang/String;)Lfjp;	a	getObjective
	m	(Ljava/lang/String;Lfka;Lxo;Lfka$a;ZLze;)Lfjp;	a	addObjective
	m	(Lfka;Lfjw;Ljava/util/function/Consumer;)V	a	forAllObjectives
	m	(Ljava/lang/String;)Lfjr;	f	getOrCreatePlayerInfo
	m	(Lfjw;Lfjp;)Lfjv;	c	getOrCreatePlayerScore
	m	(Lfjw;Lfjp;Z)Lfjv;	a	getOrCreatePlayerScore
	m	(Lfjw;Lfjp;)Lfjt;	d	getPlayerScoreInfo
	m	(Lfjp;)Ljava/util/Collection;	i	listPlayerScores
	m	()Ljava/util/Collection;	b	getObjectives
	m	()Ljava/util/Collection;	c	getObjectiveNames
	m	()Ljava/util/Collection;	d	getTrackedPlayers
	m	(Lfjw;)V	b	resetAllPlayerScores
	m	(Lfjw;Lfjp;)V	e	resetSinglePlayerScore
	m	(Lfjw;)Lit/unimi/dsi/fastutil/objects/Object2IntMap;	c	listPlayerScores
	m	(Lfjp;)V	j	removeObjective
	m	(Lfjo;Lfjp;)V	a	setDisplayObjective
	m	(Lfjo;)Lfjp;	a	getDisplayObjective
	m	(Ljava/lang/String;)Lfjs;	b	getPlayerTeam
	m	(Ljava/lang/String;)Lfjs;	c	addPlayerTeam
	m	(Lfjs;)V	d	removePlayerTeam
	m	(Ljava/lang/String;Lfjs;)Z	a	addPlayerToTeam
	m	(Ljava/lang/String;)Z	d	removePlayerFromTeam
	m	(Ljava/lang/String;Lfjs;)V	b	removePlayerFromTeam
	m	()Ljava/util/Collection;	e	getTeamNames
	m	()Ljava/util/Collection;	f	getPlayerTeams
	m	(Ljava/lang/String;)Lfjs;	e	getPlayersTeam
	m	(Lfjp;)V	a	onObjectiveAdded
	m	(Lfjp;)V	b	onObjectiveChanged
	m	(Lfjp;)V	c	onObjectiveRemoved
	m	(Lfjw;Lfjp;Lfju;)V	a	onScoreChanged
	m	(Lfjw;Lfjp;)V	a	onScoreLockChanged
	m	(Lfjw;)V	a	onPlayerRemoved
	m	(Lfjw;Lfjp;)V	b	onPlayerScoreRemoved
	m	(Lfjs;)V	a	onTeamAdded
	m	(Lfjs;)V	b	onTeamChanged
	m	(Lfjs;)V	c	onTeamRemoved
	m	(Lbzm;)V	a	entityRemoved
	m	()Ljava/util/List;	g	packPlayerScores
	m	(Lfjx$a;)V	a	loadPlayerScore
	m	(Lfjs$a;)V	a	loadPlayerTeam
	m	(Lfjp$a;)V	a	loadObjective
	m	(Ljava/util/Map$Entry;)Ljava/util/stream/Stream;	a	lambda$packPlayerScores$6
	m	(Ljava/lang/String;Ljava/util/Map$Entry;)Lfjx$a;	a	lambda$packPlayerScores$5
	m	(Lfjp;Ljava/util/List;Ljava/lang/String;Lfjr;)V	a	lambda$listPlayerScores$4
	m	(Lorg/apache/commons/lang3/mutable/MutableBoolean;Lfju;)V	a	lambda$getOrCreatePlayerScore$3
	m	(Ljava/lang/String;)Lfjr;	g	lambda$getOrCreatePlayerInfo$2
	m	(Ljava/util/function/Consumer;Lfjw;Lfjp;)V	a	lambda$forAllObjectives$1
	m	(Ljava/lang/Object;)Ljava/util/List;	a	lambda$addObjective$0
	m	()V	<clinit>	<clinit>
c	fjx$1	net/minecraft/world/scores/Scoreboard$1
	f	Lfju;	a	val$score
	f	Z	b	val$canModify
	f	Lorg/apache/commons/lang3/mutable/MutableBoolean;	c	val$requiresSync
	f	Lfjp;	d	val$objective
	f	Lfjw;	e	val$scoreHolder
	f	Lfjx;	f	this$0
	m	(Lfjx;Lfju;ZLorg/apache/commons/lang3/mutable/MutableBoolean;Lfjp;Lfjw;)V	<init>	<init>
	m	()I	a	get
	m	(I)V	a	set
	m	()Lxo;	g	display
	m	(Lxo;)V	a	display
	m	(Lze;)V	a	numberFormatOverride
	m	()Z	d	locked
	m	()V	e	unlock
	m	()V	f	lock
	m	(Z)V	a	setLocked
	m	()V	h	sendScoreToPlayers
c	fjx$a	net/minecraft/world/scores/Scoreboard$PackedScore
	f	Ljava/lang/String;	b	owner
	f	Ljava/lang/String;	c	objective
	f	Lfju;	d	score
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/lang/String;Ljava/lang/String;Lfju;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/String;	a	owner
	m	()Ljava/lang/String;	b	objective
	m	()Lfju;	c	score
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjy	net/minecraft/world/scores/ScoreboardSaveData
	f	Ljava/lang/String;	a	FILE_ID
	f	Lfjx;	b	scoreboard
	m	(Lfjx;)V	<init>	<init>
	m	(Lfjy$a;)V	a	loadFrom
	m	()Lfjy$a;	a	pack
	m	(Lfjo;Ljava/lang/String;)V	a	lambda$loadFrom$0
c	fjy$a	net/minecraft/world/scores/ScoreboardSaveData$Packed
	f	Ljava/util/List;	b	objectives
	f	Ljava/util/List;	c	scores
	f	Ljava/util/Map;	d	displaySlots
	f	Ljava/util/List;	e	teams
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	m	(Ljava/util/List;Ljava/util/List;Ljava/util/Map;Ljava/util/List;)V	<init>	<init>
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/util/List;	a	objectives
	m	()Ljava/util/List;	b	scores
	m	()Ljava/util/Map;	c	displaySlots
	m	()Ljava/util/List;	d	teams
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fjz	net/minecraft/world/scores/Team
	m	()V	<init>	<init>
	m	(Lfjz;)Z	a	isAlliedTo
	m	()Ljava/lang/String;	c	getName
	m	(Lxo;)Lyc;	d	getFormattedName
	m	()Z	j	canSeeFriendlyInvisibles
	m	()Z	i	isAllowFriendlyFire
	m	()Lfjz$b;	k	getNameTagVisibility
	m	()Lo;	o	getColor
	m	()Ljava/util/Collection;	h	getPlayers
	m	()Lfjz$b;	l	getDeathMessageVisibility
	m	()Lfjz$a;	m	getCollisionRule
c	fjz$a	net/minecraft/world/scores/Team$CollisionRule
	f	Lfjz$a;	a	ALWAYS
	f	Lfjz$a;	b	NEVER
	f	Lfjz$a;	c	PUSH_OTHER_TEAMS
	f	Lfjz$a;	d	PUSH_OWN_TEAM
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	Ljava/lang/String;	g	name
	f	I	h	id
	f	[Lfjz$a;	j	$VALUES
	m	()[Lfjz$a;	values	values
	m	(Ljava/lang/String;)Lfjz$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
	m	()Lxo;	a	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lfjz$a;)I	a	lambda$static$1
	m	(Lfjz$a;)I	b	lambda$static$0
	m	()[Lfjz$a;	b	$values
	m	()V	<clinit>	<clinit>
c	fjz$b	net/minecraft/world/scores/Team$Visibility
	f	Lfjz$b;	a	ALWAYS
	f	Lfjz$b;	b	NEVER
	f	Lfjz$b;	c	HIDE_FOR_OTHER_TEAMS
	f	Lfjz$b;	d	HIDE_FOR_OWN_TEAM
	f	Lcom/mojang/serialization/Codec;	e	CODEC
	f	Ljava/util/function/IntFunction;	i	BY_ID
	f	Lzm;	f	STREAM_CODEC
	f	Ljava/lang/String;	g	name
	f	I	h	id
	f	[Lfjz$b;	j	$VALUES
	m	()[Lfjz$b;	values	values
	m	(Ljava/lang/String;)Lfjz$b;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;I)V	<init>	<init>
	m	()Lxo;	a	getDisplayName
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Lfjz$b;)I	a	lambda$static$1
	m	(Lfjz$b;)I	b	lambda$static$0
	m	()[Lfjz$b;	b	$values
	m	()V	<clinit>	<clinit>
c	fka	net/minecraft/world/scores/criteria/ObjectiveCriteria
	f	Ljava/util/Map;	a	CUSTOM_CRITERIA
	f	Ljava/util/Map;	p	CRITERIA_CACHE
	f	Lcom/mojang/serialization/Codec;	b	CODEC
	f	Lfka;	c	DUMMY
	f	Lfka;	d	TRIGGER
	f	Lfka;	e	DEATH_COUNT
	f	Lfka;	f	KILL_COUNT_PLAYERS
	f	Lfka;	g	KILL_COUNT_ALL
	f	Lfka;	h	HEALTH
	f	Lfka;	i	FOOD
	f	Lfka;	j	AIR
	f	Lfka;	k	ARMOR
	f	Lfka;	l	EXPERIENCE
	f	Lfka;	m	LEVEL
	f	[Lfka;	n	TEAM_KILL
	f	[Lfka;	o	KILLED_BY_TEAM
	f	Ljava/lang/String;	q	name
	f	Z	r	readOnly
	f	Lfka$a;	s	renderType
	m	(Ljava/lang/String;ZLfka$a;)Lfka;	a	registerCustom
	m	(Ljava/lang/String;)Lfka;	b	registerCustom
	m	(Ljava/lang/String;)V	<init>	<init>
	m	(Ljava/lang/String;ZLfka$a;)V	<init>	<init>
	m	()Ljava/util/Set;	c	getCustomCriteriaNames
	m	(Ljava/lang/String;)Ljava/util/Optional;	a	byName
	m	(Lazi;Lame;)Ljava/util/Optional;	a	getStat
	m	()Ljava/lang/String;	d	getName
	m	()Z	e	isReadOnly
	m	()Lfka$a;	f	getDefaultRenderType
	m	(Ljava/lang/String;ILazi;)Ljava/util/Optional;	a	lambda$byName$2
	m	(Ljava/lang/String;)Lcom/mojang/serialization/DataResult;	c	lambda$static$1
	m	(Ljava/lang/String;)Ljava/lang/String;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fka$a	net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType
	f	Lfka$a;	a	INTEGER
	f	Lfka$a;	b	HEARTS
	f	Ljava/lang/String;	d	id
	f	Lbda$a;	c	CODEC
	f	[Lfka$a;	e	$VALUES
	m	()[Lfka$a;	values	values
	m	(Ljava/lang/String;)Lfka$a;	valueOf	valueOf
	m	(Ljava/lang/String;ILjava/lang/String;)V	<init>	<init>
	m	()Ljava/lang/String;	a	getId
	m	()Ljava/lang/String;	c	getSerializedName
	m	(Ljava/lang/String;)Lfka$a;	a	byId
	m	()[Lfka$a;	b	$values
	m	()V	<clinit>	<clinit>
c	fkb	net/minecraft/world/scores/criteria/package-info
c	fkc	net/minecraft/world/scores/package-info
c	fkd	net/minecraft/world/ticks/BlackholeTickAccess
	f	Lfkn;	a	CONTAINER_BLACKHOLE
	f	Lfkg;	b	LEVEL_BLACKHOLE
	m	()V	<init>	<init>
	m	()Lfkn;	a	emptyContainer
	m	()Lfkg;	b	emptyLevelList
	m	()V	<clinit>	<clinit>
c	fkd$1	net/minecraft/world/ticks/BlackholeTickAccess$1
	m	()V	<init>	<init>
	m	(Lfkk;)V	a	schedule
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	()I	a	count
c	fkd$2	net/minecraft/world/ticks/BlackholeTickAccess$2
	m	()V	<init>	<init>
	m	(Lfkk;)V	a	schedule
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Ljb;Ljava/lang/Object;)Z	b	willTickThisTick
	m	()I	a	count
c	fke	net/minecraft/world/ticks/ContainerSingleItem
	m	()Ldcv;	f	getTheItem
	m	(I)Ldcv;	c	splitTheItem
	m	(Ldcv;)V	b	setTheItem
	m	()Ldcv;	h	removeTheItem
	m	()I	b	getContainerSize
	m	()Z	c	isEmpty
	m	()V	a	clearContent
	m	(I)Ldcv;	b	removeItemNoUpdate
	m	(I)Ldcv;	a	getItem
	m	(II)Ldcv;	a	removeItem
	m	(ILdcv;)V	a	setItem
c	fke$a	net/minecraft/world/ticks/ContainerSingleItem$BlockContainerSingleItem
	m	()Leaz;	v	getContainerBlockEntity
	m	(Lcut;)Z	a	stillValid
c	fkf	net/minecraft/world/ticks/LevelChunkTicks
	f	Ljava/util/Queue;	a	tickQueue
	f	Ljava/util/List;	b	pendingTicks
	f	Ljava/util/Set;	c	ticksPerPosition
	f	Ljava/util/function/BiConsumer;	d	onTickAdded
	m	()V	<init>	<init>
	m	(Ljava/util/List;)V	<init>	<init>
	m	(Ljava/util/function/BiConsumer;)V	a	setOnTickAdded
	m	()Lfkk;	b	peek
	m	()Lfkk;	c	poll
	m	(Lfkk;)V	a	schedule
	m	(Lfkk;)V	b	scheduleUnchecked
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Ljava/util/function/Predicate;)V	a	removeIf
	m	()Ljava/util/stream/Stream;	d	getAll
	m	()I	a	count
	m	(J)Ljava/util/List;	a	pack
	m	(J)V	b	unpack
c	fkg	net/minecraft/world/ticks/LevelTickAccess
	m	(Ljb;Ljava/lang/Object;)Z	b	willTickThisTick
c	fkh	net/minecraft/world/ticks/LevelTicks
	f	Ljava/util/Comparator;	a	CONTAINER_DRAIN_ORDER
	f	Ljava/util/function/LongPredicate;	b	tickCheck
	f	Lit/unimi/dsi/fastutil/longs/Long2ObjectMap;	c	allContainers
	f	Lit/unimi/dsi/fastutil/longs/Long2LongMap;	d	nextTickForContainer
	f	Ljava/util/Queue;	e	containersToTick
	f	Ljava/util/Queue;	f	toRunThisTick
	f	Ljava/util/List;	g	alreadyRunThisTick
	f	Ljava/util/Set;	h	toRunThisTickSet
	f	Ljava/util/function/BiConsumer;	i	chunkScheduleUpdater
	m	(Ljava/util/function/LongPredicate;)V	<init>	<init>
	m	(Ldlz;Lfkf;)V	a	addContainer
	m	(Ldlz;)V	a	removeContainer
	m	(Lfkk;)V	a	schedule
	m	(JILjava/util/function/BiConsumer;)V	a	tick
	m	(JILbtt;)V	a	collectTicks
	m	(J)V	a	sortContainersToTick
	m	(JI)V	a	drainContainers
	m	()V	b	rescheduleLeftoverContainers
	m	(Lfkk;)V	b	updateContainerScheduling
	m	(Ljava/util/Queue;Lfkf;JI)V	a	drainFromCurrentContainer
	m	(Lfkk;)V	c	scheduleForThisTick
	m	(I)Z	a	canScheduleMoreTicks
	m	(Ljava/util/function/BiConsumer;)V	a	runCollectedTicks
	m	()V	c	cleanupAfterTick
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Ljb;Ljava/lang/Object;)Z	b	willTickThisTick
	m	()V	d	calculateTickSetIfNeeded
	m	(Leuq;Lfkh$a;)V	a	forContainersInArea
	m	(Leuq;)V	a	clearArea
	m	(Leuq;Lkg;)V	a	copyArea
	m	(Lfkh;Leuq;Lkg;)V	a	copyAreaFrom
	m	()I	a	count
	m	(Lkg;JJLfkk;)V	a	lambda$copyAreaFrom$7
	m	(Ljava/util/function/Predicate;Ljava/util/List;JLfkf;)V	a	lambda$copyAreaFrom$6
	m	(Leuq;Lfkk;)Z	a	lambda$copyAreaFrom$5
	m	(Ljava/util/function/Predicate;JLfkf;)V	a	lambda$clearArea$4
	m	(Leuq;Lfkk;)Z	b	lambda$clearArea$3
	m	(Lfkf;Lfkk;)V	a	lambda$new$2
	m	(Lit/unimi/dsi/fastutil/longs/Long2LongOpenHashMap;)V	a	lambda$new$1
	m	(Lfkf;Lfkf;)I	a	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fkh$a	net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer
	m	(JLfkf;)V	accept	accept
c	fki	net/minecraft/world/ticks/ProtoChunkTicks
	f	Ljava/util/List;	a	ticks
	f	Ljava/util/Set;	b	ticksPerPosition
	m	()V	<init>	<init>
	m	(Lfkk;)V	a	schedule
	m	(Lfkj;)V	a	schedule
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	()I	a	count
	m	(J)Ljava/util/List;	a	pack
	m	()Ljava/util/List;	b	scheduledTicks
	m	(Ljava/util/List;)Lfki;	a	load
c	fkj	net/minecraft/world/ticks/SavedTick
	f	Ljava/lang/Object;	b	type
	f	Ljb;	c	pos
	f	I	d	delay
	f	Lfko;	e	priority
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	a	UNIQUE_TICK_HASH
	m	(Ljava/lang/Object;Ljb;ILfko;)V	<init>	<init>
	m	(Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec;	a	codec
	m	(Ljava/util/List;Ldlz;)Ljava/util/List;	a	filterTickListForChunk
	m	(JJ)Lfkk;	a	unpack
	m	(Ljava/lang/Object;Ljb;)Lfkj;	a	probe
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	type
	m	()Ljb;	b	pos
	m	()I	c	delay
	m	()Lfko;	d	priority
	m	(JLfkj;)Z	a	lambda$filterTickListForChunk$2
	m	(Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/MapCodec;Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$1
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$codec$0
	m	()V	<clinit>	<clinit>
c	fkj$1	net/minecraft/world/ticks/SavedTick$1
	m	()V	<init>	<init>
	m	(Lfkj;)I	a	hashCode
	m	(Lfkj;Lfkj;)Z	a	equals
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	equals	equals
	m	(Ljava/lang/Object;)I	hashCode	hashCode
c	fkk	net/minecraft/world/ticks/ScheduledTick
	f	Ljava/lang/Object;	d	type
	f	Ljb;	e	pos
	f	J	f	triggerTick
	f	Lfko;	g	priority
	f	J	h	subTickOrder
	f	Ljava/util/Comparator;	a	DRAIN_ORDER
	f	Ljava/util/Comparator;	b	INTRA_TICK_DRAIN_ORDER
	f	Lit/unimi/dsi/fastutil/Hash$Strategy;	c	UNIQUE_TICK_HASH
	m	(Ljava/lang/Object;Ljb;JJ)V	<init>	<init>
	m	(Ljava/lang/Object;Ljb;JLfko;J)V	<init>	<init>
	m	(Ljava/lang/Object;Ljb;)Lfkk;	a	probe
	m	(J)Lfkj;	a	toSavedTick
	m	()Ljava/lang/String;	toString	toString
	m	()I	hashCode	hashCode
	m	(Ljava/lang/Object;)Z	equals	equals
	m	()Ljava/lang/Object;	a	type
	m	()Ljb;	b	pos
	m	()J	c	triggerTick
	m	()Lfko;	d	priority
	m	()J	e	subTickOrder
	m	(Lfkk;Lfkk;)I	a	lambda$static$1
	m	(Lfkk;Lfkk;)I	b	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fkk$1	net/minecraft/world/ticks/ScheduledTick$1
	m	()V	<init>	<init>
	m	(Lfkk;)I	a	hashCode
	m	(Lfkk;Lfkk;)Z	a	equals
	m	(Ljava/lang/Object;Ljava/lang/Object;)Z	equals	equals
	m	(Ljava/lang/Object;)I	hashCode	hashCode
c	fkl	net/minecraft/world/ticks/SerializableTickContainer
	m	(J)Ljava/util/List;	a	pack
c	fkm	net/minecraft/world/ticks/TickAccess
	m	(Lfkk;)V	a	schedule
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	()I	a	count
c	fkn	net/minecraft/world/ticks/TickContainerAccess
c	fko	net/minecraft/world/ticks/TickPriority
	f	Lfko;	a	EXTREMELY_HIGH
	f	Lfko;	b	VERY_HIGH
	f	Lfko;	c	HIGH
	f	Lfko;	d	NORMAL
	f	Lfko;	e	LOW
	f	Lfko;	f	VERY_LOW
	f	Lfko;	g	EXTREMELY_LOW
	f	Lcom/mojang/serialization/Codec;	h	CODEC
	f	I	i	value
	f	[Lfko;	j	$VALUES
	m	()[Lfko;	values	values
	m	(Ljava/lang/String;)Lfko;	valueOf	valueOf
	m	(Ljava/lang/String;II)V	<init>	<init>
	m	(I)Lfko;	a	byValue
	m	()I	a	getValue
	m	()[Lfko;	b	$values
	m	()V	<clinit>	<clinit>
c	fkp	net/minecraft/world/ticks/WorldGenTickAccess
	f	Ljava/util/function/Function;	a	containerGetter
	m	(Ljava/util/function/Function;)V	<init>	<init>
	m	(Ljb;Ljava/lang/Object;)Z	a	hasScheduledTick
	m	(Lfkk;)V	a	schedule
	m	(Ljb;Ljava/lang/Object;)Z	b	willTickThisTick
	m	()I	a	count
c	fkq	net/minecraft/world/ticks/package-info
c	fkr	net/minecraft/world/waypoints/TrackedWaypoint
	f	Lorg/slf4j/Logger;	c	LOGGER
	f	Lzm;	a	STREAM_CODEC
	f	Lcom/mojang/datafixers/util/Either;	b	identifier
	f	Lfkt$a;	d	icon
	f	Lfkr$g;	e	type
	m	(Lcom/mojang/datafixers/util/Either;Lfkt$a;Lfkr$g;)V	<init>	<init>
	m	()Lcom/mojang/datafixers/util/Either;	a	id
	m	(Lfkr;)V	a	update
	m	(Lio/netty/buffer/ByteBuf;)V	a	write
	m	(Lio/netty/buffer/ByteBuf;)V	b	writeContents
	m	(Lio/netty/buffer/ByteBuf;)Lfkr;	c	read
	m	(Ljava/util/UUID;Lfkt$a;Lkg;)Lfkr;	a	setPosition
	m	(Ljava/util/UUID;Lfkt$a;Ldlz;)Lfkr;	a	setChunk
	m	(Ljava/util/UUID;Lfkt$a;F)Lfkr;	a	setAzimuth
	m	(Ljava/util/UUID;)Lfkr;	a	empty
	m	(Ldmu;Lfkr$b;)D	a	yawAngleToCamera
	m	(Ldmu;Lfkr$f;)Lfkr$e;	a	pitchDirectionToCamera
	m	(Lbzm;)D	a	distanceSquared
	m	()Lfkt$a;	b	icon
	m	()V	<clinit>	<clinit>
c	fkr$a	net/minecraft/world/waypoints/TrackedWaypoint$AzimuthWaypoint
	f	F	c	angle
	m	(Ljava/util/UUID;Lfkt$a;F)V	<init>	<init>
	m	(Lcom/mojang/datafixers/util/Either;Lfkt$a;Lwg;)V	<init>	<init>
	m	(Lfkr;)V	a	update
	m	(Lio/netty/buffer/ByteBuf;)V	b	writeContents
	m	(Ldmu;Lfkr$b;)D	a	yawAngleToCamera
	m	(Ldmu;Lfkr$f;)Lfkr$e;	a	pitchDirectionToCamera
	m	(Lbzm;)D	a	distanceSquared
c	fkr$b	net/minecraft/world/waypoints/TrackedWaypoint$Camera
	m	()F	a	yaw
	m	()Lfis;	b	position
c	fkr$c	net/minecraft/world/waypoints/TrackedWaypoint$ChunkWaypoint
	f	Ldlz;	c	chunkPos
	m	(Ljava/util/UUID;Lfkt$a;Ldlz;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/util/Either;Lfkt$a;Lwg;)V	<init>	<init>
	m	(Lfkr;)V	a	update
	m	(Lio/netty/buffer/ByteBuf;)V	b	writeContents
	m	(D)Lfis;	a	position
	m	(Ldmu;Lfkr$b;)D	a	yawAngleToCamera
	m	(Ldmu;Lfkr$f;)Lfkr$e;	a	pitchDirectionToCamera
	m	(Lbzm;)D	a	distanceSquared
c	fkr$d	net/minecraft/world/waypoints/TrackedWaypoint$EmptyWaypoint
	m	(Lcom/mojang/datafixers/util/Either;Lfkt$a;Lwg;)V	<init>	<init>
	m	(Ljava/util/UUID;)V	<init>	<init>
	m	(Lfkr;)V	a	update
	m	(Lio/netty/buffer/ByteBuf;)V	b	writeContents
	m	(Ldmu;Lfkr$b;)D	a	yawAngleToCamera
	m	(Ldmu;Lfkr$f;)Lfkr$e;	a	pitchDirectionToCamera
	m	(Lbzm;)D	a	distanceSquared
c	fkr$e	net/minecraft/world/waypoints/TrackedWaypoint$PitchDirection
	f	Lfkr$e;	a	NONE
	f	Lfkr$e;	b	UP
	f	Lfkr$e;	c	DOWN
	f	[Lfkr$e;	d	$VALUES
	m	()[Lfkr$e;	values	values
	m	(Ljava/lang/String;)Lfkr$e;	valueOf	valueOf
	m	(Ljava/lang/String;I)V	<init>	<init>
	m	()[Lfkr$e;	a	$values
	m	()V	<clinit>	<clinit>
c	fkr$f	net/minecraft/world/waypoints/TrackedWaypoint$Projector
	m	(Lfis;)Lfis;	a	projectPointToScreen
	m	()D	a	projectHorizonToScreen
c	fkr$g	net/minecraft/world/waypoints/TrackedWaypoint$Type
	f	Lfkr$g;	a	EMPTY
	f	Lfkr$g;	b	VEC3I
	f	Lfkr$g;	c	CHUNK
	f	Lfkr$g;	d	AZIMUTH
	f	Lorg/apache/commons/lang3/function/TriFunction;	e	constructor
	f	[Lfkr$g;	f	$VALUES
	m	()[Lfkr$g;	values	values
	m	(Ljava/lang/String;)Lfkr$g;	valueOf	valueOf
	m	(Ljava/lang/String;ILorg/apache/commons/lang3/function/TriFunction;)V	<init>	<init>
	m	()[Lfkr$g;	a	$values
	m	()V	<clinit>	<clinit>
c	fkr$h	net/minecraft/world/waypoints/TrackedWaypoint$Vec3iWaypoint
	f	Lkg;	c	vector
	m	(Ljava/util/UUID;Lfkt$a;Lkg;)V	<init>	<init>
	m	(Lcom/mojang/datafixers/util/Either;Lfkt$a;Lwg;)V	<init>	<init>
	m	(Lfkr;)V	a	update
	m	(Lio/netty/buffer/ByteBuf;)V	b	writeContents
	m	(Ldmu;)Lfis;	a	position
	m	(Ldmu;Lfkr$b;)D	a	yawAngleToCamera
	m	(Ldmu;Lfkr$f;)Lfkr$e;	a	pitchDirectionToCamera
	m	(Lbzm;)D	a	distanceSquared
	m	()Lfis;	c	lambda$position$1
	m	(Lbzm;)Lfis;	b	lambda$position$0
c	fks	net/minecraft/world/waypoints/TrackedWaypointManager
c	fkt	net/minecraft/world/waypoints/Waypoint
	f	I	b_	MAX_RANGE
	f	Lcbq;	c_	WAYPOINT_TRANSMIT_RANGE_HIDE_MODIFIER
	m	(Ldcr$a;)Ldcr$a;	a	addHideAttribute
	m	()V	<clinit>	<clinit>
c	fkt$a	net/minecraft/world/waypoints/Waypoint$Icon
	f	Lcom/mojang/serialization/Codec;	a	CODEC
	f	Lzm;	b	STREAM_CODEC
	f	Lfkt$a;	c	NULL
	f	Lamd;	d	style
	f	Ljava/util/Optional;	e	color
	m	()V	<init>	<init>
	m	(Lamd;Ljava/util/Optional;)V	<init>	<init>
	m	()Z	a	hasData
	m	(Lcam;)Lfkt$a;	a	cloneAndAssignStyle
	m	()Lamd;	b	getOverrideStyle
	m	(Lcam;)Ljava/util/Optional;	b	lambda$cloneAndAssignStyle$7
	m	(Ljava/lang/Integer;)Ljava/lang/Integer;	a	lambda$cloneAndAssignStyle$6
	m	(Lfjs;)Ljava/lang/Integer;	a	lambda$cloneAndAssignStyle$5
	m	(Lfkt$a;)Ljava/util/Optional;	a	lambda$static$4
	m	(Lfkt$a;)Lamd;	b	lambda$static$3
	m	(Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/kinds/App;	a	lambda$static$2
	m	(Lfkt$a;)Ljava/util/Optional;	c	lambda$static$1
	m	(Lfkt$a;)Lamd;	d	lambda$static$0
	m	()V	<clinit>	<clinit>
c	fku	net/minecraft/world/waypoints/WaypointManager
	m	(Lfkt;)V	c	trackWaypoint
	m	(Lfkt;)V	b	updateWaypoint
	m	(Lfkt;)V	a	untrackWaypoint
c	fkv	net/minecraft/world/waypoints/WaypointStyleAsset
	m	()V	<init>	<init>
c	fkw	net/minecraft/world/waypoints/WaypointStyleAssets
	f	Lamd;	a	ROOT_ID
	f	Lamd;	b	DEFAULT
	f	Lamd;	c	BOWTIE
	m	(Ljava/lang/String;)Lamd;	a	createId
	m	()V	<clinit>	<clinit>
c	fkx	net/minecraft/world/waypoints/WaypointTransmitter
	f	I	a_	REALLY_FAR_DISTANCE
	m	()Z	ge	isTransmittingWaypoint
	m	(Lauc;)Ljava/util/Optional;	f	makeWaypointConnectionWith
	m	()Lfkt$a;	gf	waypointIcon
	m	(Lcam;Lauc;)Z	a	doesSourceIgnoreReceiver
	m	(Ldlz;Lauc;)Z	a	isChunkVisible
	m	(Lcam;Lauc;)Z	b	isReallyFar
c	fkx$a	net/minecraft/world/waypoints/WaypointTransmitter$BlockConnection
	m	()I	a	distanceManhattan
	m	()Z	b	isBroken
c	fkx$b	net/minecraft/world/waypoints/WaypointTransmitter$ChunkConnection
	m	()I	a	distanceChessboard
	m	()Z	b	isBroken
c	fkx$c	net/minecraft/world/waypoints/WaypointTransmitter$Connection
	m	()V	c	connect
	m	()V	d	disconnect
	m	()V	e	update
	m	()Z	b	isBroken
c	fkx$d	net/minecraft/world/waypoints/WaypointTransmitter$EntityAzimuthConnection
	f	Lcam;	a	source
	f	Lfkt$a;	b	icon
	f	Lauc;	c	receiver
	f	F	d	lastAngle
	m	(Lcam;Lfkt$a;Lauc;)V	<init>	<init>
	m	()Z	b	isBroken
	m	()V	c	connect
	m	()V	d	disconnect
	m	()V	e	update
c	fkx$e	net/minecraft/world/waypoints/WaypointTransmitter$EntityBlockConnection
	f	Lcam;	a	source
	f	Lfkt$a;	b	icon
	f	Lauc;	c	receiver
	f	Ljb;	d	lastPosition
	m	(Lcam;Lfkt$a;Lauc;)V	<init>	<init>
	m	()V	c	connect
	m	()V	d	disconnect
	m	()V	e	update
	m	()I	a	distanceManhattan
	m	()Z	b	isBroken
c	fkx$f	net/minecraft/world/waypoints/WaypointTransmitter$EntityChunkConnection
	f	Lcam;	a	source
	f	Lfkt$a;	b	icon
	f	Lauc;	c	receiver
	f	Ldlz;	d	lastPosition
	m	(Lcam;Lfkt$a;Lauc;)V	<init>	<init>
	m	()I	a	distanceChessboard
	m	()V	c	connect
	m	()V	d	disconnect
	m	()V	e	update
	m	()Z	b	isBroken
