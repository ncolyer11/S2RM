AIR = Blocks.AIR
STONE = Blocks.STONE	
GRANITE = Blocks.GRANITE	
POLISHED_GRANITE = Blocks.POLISHED_GRANITE	
DIORITE = Blocks.DIORITE	
POLISHED_DIORITE = Blocks.POLISHED_DIORITE	
ANDESITE = Blocks.ANDESITE	
POLISHED_ANDESITE = Blocks.POLISHED_ANDESITE	
DEEPSLATE = Blocks.DEEPSLATE	
COBBLED_DEEPSLATE = Blocks.COBBLED_DEEPSLATE	
POLISHED_DEEPSLATE = Blocks.POLISHED_DEEPSLATE	
CALCITE = Blocks.CALCITE	
TUFF = Blocks.TUFF	
TUFF_SLAB = Blocks.TUFF_SLAB	
TUFF_STAIRS = Blocks.TUFF_STAIRS	
TUFF_WALL = Blocks.TUFF_WALL	
CHISELED_TUFF = Blocks.CHISELED_TUFF	
POLISHED_TUFF = Blocks.POLISHED_TUFF	
POLISHED_TUFF_SLAB = Blocks.POLISHED_TUFF_SLAB	
POLISHED_TUFF_STAIRS = Blocks.POLISHED_TUFF_STAIRS	
POLISHED_TUFF_WALL = Blocks.POLISHED_TUFF_WALL	
TUFF_BRICKS = Blocks.TUFF_BRICKS	
TUFF_BRICK_SLAB = Blocks.TUFF_BRICK_SLAB	
TUFF_BRICK_STAIRS = Blocks.TUFF_BRICK_STAIRS	
TUFF_BRICK_WALL = Blocks.TUFF_BRICK_WALL	
CHISELED_TUFF_BRICKS = Blocks.CHISELED_TUFF_BRICKS	
DRIPSTONE_BLOCK = Blocks.DRIPSTONE_BLOCK	
GRASS_BLOCK = Blocks.GRASS_BLOCK	
DIRT = Blocks.DIRT	
COARSE_DIRT = Blocks.COARSE_DIRT	
PODZOL = Blocks.PODZOL	
ROOTED_DIRT = Blocks.ROOTED_DIRT	
MUD = Blocks.MUD	
CRIMSON_NYLIUM = Blocks.CRIMSON_NYLIUM	
WARPED_NYLIUM = Blocks.WARPED_NYLIUM	
COBBLESTONE = Blocks.COBBLESTONE	
OAK_PLANKS = Blocks.OAK_PLANKS	
SPRUCE_PLANKS = Blocks.SPRUCE_PLANKS	
BIRCH_PLANKS = Blocks.BIRCH_PLANKS	
JUNGLE_PLANKS = Blocks.JUNGLE_PLANKS	
ACACIA_PLANKS = Blocks.ACACIA_PLANKS	
CHERRY_PLANKS = Blocks.CHERRY_PLANKS	
DARK_OAK_PLANKS = Blocks.DARK_OAK_PLANKS	
PALE_OAK_PLANKS = Blocks.PALE_OAK_PLANKS	
MANGROVE_PLANKS = Blocks.MANGROVE_PLANKS	
BAMBOO_PLANKS = Blocks.BAMBOO_PLANKS	
CRIMSON_PLANKS = Blocks.CRIMSON_PLANKS	
WARPED_PLANKS = Blocks.WARPED_PLANKS	
BAMBOO_MOSAIC = Blocks.BAMBOO_MOSAIC	
OAK_SAPLING = Blocks.OAK_SAPLING	
SPRUCE_SAPLING = Blocks.SPRUCE_SAPLING	
BIRCH_SAPLING = Blocks.BIRCH_SAPLING	
JUNGLE_SAPLING = Blocks.JUNGLE_SAPLING	
ACACIA_SAPLING = Blocks.ACACIA_SAPLING	
CHERRY_SAPLING = Blocks.CHERRY_SAPLING	
DARK_OAK_SAPLING = Blocks.DARK_OAK_SAPLING	
PALE_OAK_SAPLING = Blocks.PALE_OAK_SAPLING	
MANGROVE_PROPAGULE = Blocks.MANGROVE_PROPAGULE	
BEDROCK = Blocks.BEDROCK	
SAND = Blocks.SAND	
SUSPICIOUS_SAND = Blocks.SUSPICIOUS_SAND	
SUSPICIOUS_GRAVEL = Blocks.SUSPICIOUS_GRAVEL	
RED_SAND = Blocks.RED_SAND	
GRAVEL = Blocks.GRAVEL	
COAL_ORE = Blocks.COAL_ORE	
DEEPSLATE_COAL_ORE = Blocks.DEEPSLATE_COAL_ORE	
IRON_ORE = Blocks.IRON_ORE	
DEEPSLATE_IRON_ORE = Blocks.DEEPSLATE_IRON_ORE	
COPPER_ORE = Blocks.COPPER_ORE	
DEEPSLATE_COPPER_ORE = Blocks.DEEPSLATE_COPPER_ORE	
GOLD_ORE = Blocks.GOLD_ORE	
DEEPSLATE_GOLD_ORE = Blocks.DEEPSLATE_GOLD_ORE	
REDSTONE_ORE = Blocks.REDSTONE_ORE	
DEEPSLATE_REDSTONE_ORE = Blocks.DEEPSLATE_REDSTONE_ORE	
EMERALD_ORE = Blocks.EMERALD_ORE	
DEEPSLATE_EMERALD_ORE = Blocks.DEEPSLATE_EMERALD_ORE	
LAPIS_ORE = Blocks.LAPIS_ORE	
DEEPSLATE_LAPIS_ORE = Blocks.DEEPSLATE_LAPIS_ORE	
DIAMOND_ORE = Blocks.DIAMOND_ORE	
DEEPSLATE_DIAMOND_ORE = Blocks.DEEPSLATE_DIAMOND_ORE	
NETHER_GOLD_ORE = Blocks.NETHER_GOLD_ORE	
NETHER_QUARTZ_ORE = Blocks.NETHER_QUARTZ_ORE	
ANCIENT_DEBRIS = Blocks.ANCIENT_DEBRIS, new Item.Properties().fireResistant()	
COAL_BLOCK = Blocks.COAL_BLOCK	
RAW_IRON_BLOCK = Blocks.RAW_IRON_BLOCK	
RAW_COPPER_BLOCK = Blocks.RAW_COPPER_BLOCK	
RAW_GOLD_BLOCK = Blocks.RAW_GOLD_BLOCK	
HEAVY_CORE = Blocks.HEAVY_CORE, new Item.Properties().rarity(Rarity.EPIC)	
AMETHYST_BLOCK = Blocks.AMETHYST_BLOCK	
BUDDING_AMETHYST = Blocks.BUDDING_AMETHYST	
IRON_BLOCK = Blocks.IRON_BLOCK	
COPPER_BLOCK = Blocks.COPPER_BLOCK	
GOLD_BLOCK = Blocks.GOLD_BLOCK	
DIAMOND_BLOCK = Blocks.DIAMOND_BLOCK	
NETHERITE_BLOCK = Blocks.NETHERITE_BLOCK, new Item.Properties().fireResistant()	
EXPOSED_COPPER = Blocks.EXPOSED_COPPER	
WEATHERED_COPPER = Blocks.WEATHERED_COPPER	
OXIDIZED_COPPER = Blocks.OXIDIZED_COPPER	
CHISELED_COPPER = Blocks.CHISELED_COPPER	
EXPOSED_CHISELED_COPPER = Blocks.EXPOSED_CHISELED_COPPER	
WEATHERED_CHISELED_COPPER = Blocks.WEATHERED_CHISELED_COPPER	
OXIDIZED_CHISELED_COPPER = Blocks.OXIDIZED_CHISELED_COPPER	
CUT_COPPER = Blocks.CUT_COPPER	
EXPOSED_CUT_COPPER = Blocks.EXPOSED_CUT_COPPER	
WEATHERED_CUT_COPPER = Blocks.WEATHERED_CUT_COPPER	
OXIDIZED_CUT_COPPER = Blocks.OXIDIZED_CUT_COPPER	
CUT_COPPER_STAIRS = Blocks.CUT_COPPER_STAIRS	
EXPOSED_CUT_COPPER_STAIRS = Blocks.EXPOSED_CUT_COPPER_STAIRS	
WEATHERED_CUT_COPPER_STAIRS = Blocks.WEATHERED_CUT_COPPER_STAIRS	
OXIDIZED_CUT_COPPER_STAIRS = Blocks.OXIDIZED_CUT_COPPER_STAIRS	
CUT_COPPER_SLAB = Blocks.CUT_COPPER_SLAB	
EXPOSED_CUT_COPPER_SLAB = Blocks.EXPOSED_CUT_COPPER_SLAB	
WEATHERED_CUT_COPPER_SLAB = Blocks.WEATHERED_CUT_COPPER_SLAB	
OXIDIZED_CUT_COPPER_SLAB = Blocks.OXIDIZED_CUT_COPPER_SLAB	
WAXED_COPPER_BLOCK = Blocks.WAXED_COPPER_BLOCK	
WAXED_EXPOSED_COPPER = Blocks.WAXED_EXPOSED_COPPER	
WAXED_WEATHERED_COPPER = Blocks.WAXED_WEATHERED_COPPER	
WAXED_OXIDIZED_COPPER = Blocks.WAXED_OXIDIZED_COPPER	
WAXED_CHISELED_COPPER = Blocks.WAXED_CHISELED_COPPER	
WAXED_EXPOSED_CHISELED_COPPER = Blocks.WAXED_EXPOSED_CHISELED_COPPER	
WAXED_WEATHERED_CHISELED_COPPER = Blocks.WAXED_WEATHERED_CHISELED_COPPER	
WAXED_OXIDIZED_CHISELED_COPPER = Blocks.WAXED_OXIDIZED_CHISELED_COPPER	
WAXED_CUT_COPPER = Blocks.WAXED_CUT_COPPER	
WAXED_EXPOSED_CUT_COPPER = Blocks.WAXED_EXPOSED_CUT_COPPER	
WAXED_WEATHERED_CUT_COPPER = Blocks.WAXED_WEATHERED_CUT_COPPER	
WAXED_OXIDIZED_CUT_COPPER = Blocks.WAXED_OXIDIZED_CUT_COPPER	
WAXED_CUT_COPPER_STAIRS = Blocks.WAXED_CUT_COPPER_STAIRS	
WAXED_EXPOSED_CUT_COPPER_STAIRS = Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS	
WAXED_WEATHERED_CUT_COPPER_STAIRS = Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS	
WAXED_OXIDIZED_CUT_COPPER_STAIRS = Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS	
WAXED_CUT_COPPER_SLAB = Blocks.WAXED_CUT_COPPER_SLAB	
WAXED_EXPOSED_CUT_COPPER_SLAB = Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB	
WAXED_WEATHERED_CUT_COPPER_SLAB = Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB	
WAXED_OXIDIZED_CUT_COPPER_SLAB = Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB	
OAK_LOG = Blocks.OAK_LOG	
SPRUCE_LOG = Blocks.SPRUCE_LOG	
BIRCH_LOG = Blocks.BIRCH_LOG	
JUNGLE_LOG = Blocks.JUNGLE_LOG	
ACACIA_LOG = Blocks.ACACIA_LOG	
CHERRY_LOG = Blocks.CHERRY_LOG	
PALE_OAK_LOG = Blocks.PALE_OAK_LOG	
DARK_OAK_LOG = Blocks.DARK_OAK_LOG	
MANGROVE_LOG = Blocks.MANGROVE_LOG	
MANGROVE_ROOTS = Blocks.MANGROVE_ROOTS	
MUDDY_MANGROVE_ROOTS = Blocks.MUDDY_MANGROVE_ROOTS	
CRIMSON_STEM = Blocks.CRIMSON_STEM	
WARPED_STEM = Blocks.WARPED_STEM	
BAMBOO_BLOCK = Blocks.BAMBOO_BLOCK	
STRIPPED_OAK_LOG = Blocks.STRIPPED_OAK_LOG	
STRIPPED_SPRUCE_LOG = Blocks.STRIPPED_SPRUCE_LOG	
STRIPPED_BIRCH_LOG = Blocks.STRIPPED_BIRCH_LOG	
STRIPPED_JUNGLE_LOG = Blocks.STRIPPED_JUNGLE_LOG	
STRIPPED_ACACIA_LOG = Blocks.STRIPPED_ACACIA_LOG	
STRIPPED_CHERRY_LOG = Blocks.STRIPPED_CHERRY_LOG	
STRIPPED_DARK_OAK_LOG = Blocks.STRIPPED_DARK_OAK_LOG	
STRIPPED_PALE_OAK_LOG = Blocks.STRIPPED_PALE_OAK_LOG	
STRIPPED_MANGROVE_LOG = Blocks.STRIPPED_MANGROVE_LOG	
STRIPPED_CRIMSON_STEM = Blocks.STRIPPED_CRIMSON_STEM	
STRIPPED_WARPED_STEM = Blocks.STRIPPED_WARPED_STEM	
STRIPPED_OAK_WOOD = Blocks.STRIPPED_OAK_WOOD	
STRIPPED_SPRUCE_WOOD = Blocks.STRIPPED_SPRUCE_WOOD	
STRIPPED_BIRCH_WOOD = Blocks.STRIPPED_BIRCH_WOOD	
STRIPPED_JUNGLE_WOOD = Blocks.STRIPPED_JUNGLE_WOOD	
STRIPPED_ACACIA_WOOD = Blocks.STRIPPED_ACACIA_WOOD	
STRIPPED_CHERRY_WOOD = Blocks.STRIPPED_CHERRY_WOOD	
STRIPPED_DARK_OAK_WOOD = Blocks.STRIPPED_DARK_OAK_WOOD	
STRIPPED_PALE_OAK_WOOD = Blocks.STRIPPED_PALE_OAK_WOOD	
STRIPPED_MANGROVE_WOOD = Blocks.STRIPPED_MANGROVE_WOOD	
STRIPPED_CRIMSON_HYPHAE = Blocks.STRIPPED_CRIMSON_HYPHAE	
STRIPPED_WARPED_HYPHAE = Blocks.STRIPPED_WARPED_HYPHAE	
STRIPPED_BAMBOO_BLOCK = Blocks.STRIPPED_BAMBOO_BLOCK	
OAK_WOOD = Blocks.OAK_WOOD	
SPRUCE_WOOD = Blocks.SPRUCE_WOOD	
BIRCH_WOOD = Blocks.BIRCH_WOOD	
JUNGLE_WOOD = Blocks.JUNGLE_WOOD	
ACACIA_WOOD = Blocks.ACACIA_WOOD	
CHERRY_WOOD = Blocks.CHERRY_WOOD	
PALE_OAK_WOOD = Blocks.PALE_OAK_WOOD	
DARK_OAK_WOOD = Blocks.DARK_OAK_WOOD	
MANGROVE_WOOD = Blocks.MANGROVE_WOOD	
CRIMSON_HYPHAE = Blocks.CRIMSON_HYPHAE	
WARPED_HYPHAE = Blocks.WARPED_HYPHAE	
OAK_LEAVES = Blocks.OAK_LEAVES	
SPRUCE_LEAVES = Blocks.SPRUCE_LEAVES	
BIRCH_LEAVES = Blocks.BIRCH_LEAVES	
JUNGLE_LEAVES = Blocks.JUNGLE_LEAVES	
ACACIA_LEAVES = Blocks.ACACIA_LEAVES	
CHERRY_LEAVES = Blocks.CHERRY_LEAVES	
DARK_OAK_LEAVES = Blocks.DARK_OAK_LEAVES	
PALE_OAK_LEAVES = Blocks.PALE_OAK_LEAVES	
MANGROVE_LEAVES = Blocks.MANGROVE_LEAVES	
AZALEA_LEAVES = Blocks.AZALEA_LEAVES	
FLOWERING_AZALEA_LEAVES = Blocks.FLOWERING_AZALEA_LEAVES	
SPONGE = Blocks.SPONGE	
WET_SPONGE = Blocks.WET_SPONGE	
GLASS = Blocks.GLASS	
TINTED_GLASS = Blocks.TINTED_GLASS	
LAPIS_BLOCK = Blocks.LAPIS_BLOCK	
SANDSTONE = Blocks.SANDSTONE	
CHISELED_SANDSTONE = Blocks.CHISELED_SANDSTONE	
CUT_SANDSTONE = Blocks.CUT_SANDSTONE	
COBWEB = Blocks.COBWEB	
SHORT_GRASS = Blocks.SHORT_GRASS	
FERN = Blocks.FERN	
BUSH = Blocks.BUSH	
AZALEA = Blocks.AZALEA	
FLOWERING_AZALEA = Blocks.FLOWERING_AZALEA	
DEAD_BUSH = Blocks.DEAD_BUSH	
FIREFLY_BUSH = Blocks.FIREFLY_BUSH	
DRY_SHORT_GRASS = Blocks.SHORT_DRY_GRASS	
DRY_TALL_GRASS = Blocks.TALL_DRY_GRASS	
SEAGRASS = Blocks.SEAGRASS	
SEA_PICKLE = Blocks.SEA_PICKLE	
WHITE_WOOL = Blocks.WHITE_WOOL	
ORANGE_WOOL = Blocks.ORANGE_WOOL	
MAGENTA_WOOL = Blocks.MAGENTA_WOOL	
LIGHT_BLUE_WOOL = Blocks.LIGHT_BLUE_WOOL	
YELLOW_WOOL = Blocks.YELLOW_WOOL	
LIME_WOOL = Blocks.LIME_WOOL	
PINK_WOOL = Blocks.PINK_WOOL	
GRAY_WOOL = Blocks.GRAY_WOOL	
LIGHT_GRAY_WOOL = Blocks.LIGHT_GRAY_WOOL	
CYAN_WOOL = Blocks.CYAN_WOOL	
PURPLE_WOOL = Blocks.PURPLE_WOOL	
BLUE_WOOL = Blocks.BLUE_WOOL	
BROWN_WOOL = Blocks.BROWN_WOOL	
GREEN_WOOL = Blocks.GREEN_WOOL	
RED_WOOL = Blocks.RED_WOOL	
BLACK_WOOL = Blocks.BLACK_WOOL	
DANDELION = Blocks.DANDELION	
OPEN_EYEBLOSSOM = Blocks.OPEN_EYEBLOSSOM	
CLOSED_EYEBLOSSOM = Blocks.CLOSED_EYEBLOSSOM	
POPPY = Blocks.POPPY	
BLUE_ORCHID = Blocks.BLUE_ORCHID	
ALLIUM = Blocks.ALLIUM	
AZURE_BLUET = Blocks.AZURE_BLUET	
RED_TULIP = Blocks.RED_TULIP	
ORANGE_TULIP = Blocks.ORANGE_TULIP	
WHITE_TULIP = Blocks.WHITE_TULIP	
PINK_TULIP = Blocks.PINK_TULIP	
OXEYE_DAISY = Blocks.OXEYE_DAISY	
CORNFLOWER = Blocks.CORNFLOWER	
LILY_OF_THE_VALLEY = Blocks.LILY_OF_THE_VALLEY	
WITHER_ROSE = Blocks.WITHER_ROSE	
TORCHFLOWER = Blocks.TORCHFLOWER	
PITCHER_PLANT = Blocks.PITCHER_PLANT	
SPORE_BLOSSOM = Blocks.SPORE_BLOSSOM	
BROWN_MUSHROOM = Blocks.BROWN_MUSHROOM	
RED_MUSHROOM = Blocks.RED_MUSHROOM	
CRIMSON_FUNGUS = Blocks.CRIMSON_FUNGUS	
WARPED_FUNGUS = Blocks.WARPED_FUNGUS	
CRIMSON_ROOTS = Blocks.CRIMSON_ROOTS	
WARPED_ROOTS = Blocks.WARPED_ROOTS	
NETHER_SPROUTS = Blocks.NETHER_SPROUTS	
WEEPING_VINES = Blocks.WEEPING_VINES	
TWISTING_VINES = Blocks.TWISTING_VINES	
SUGAR_CANE = Blocks.SUGAR_CANE	
KELP = Blocks.KELP	
PINK_PETALS = Blocks.PINK_PETALS	
WILDFLOWERS = Blocks.WILDFLOWERS	
LEAF_LITTER = Blocks.LEAF_LITTER	
MOSS_CARPET = Blocks.MOSS_CARPET	
MOSS_BLOCK = Blocks.MOSS_BLOCK	
PALE_MOSS_CARPET = Blocks.PALE_MOSS_CARPET	
PALE_HANGING_MOSS = Blocks.PALE_HANGING_MOSS	
PALE_MOSS_BLOCK = Blocks.PALE_MOSS_BLOCK	
HANGING_ROOTS = Blocks.HANGING_ROOTS	
BIG_DRIPLEAF = Blocks.BIG_DRIPLEAF, Blocks.BIG_DRIPLEAF_STEM	
SMALL_DRIPLEAF = Blocks.SMALL_DRIPLEAF, DoubleHighBlockItem::new	
BAMBOO = Blocks.BAMBOO	
OAK_SLAB = Blocks.OAK_SLAB	
SPRUCE_SLAB = Blocks.SPRUCE_SLAB	
BIRCH_SLAB = Blocks.BIRCH_SLAB	
JUNGLE_SLAB = Blocks.JUNGLE_SLAB	
ACACIA_SLAB = Blocks.ACACIA_SLAB	
CHERRY_SLAB = Blocks.CHERRY_SLAB	
DARK_OAK_SLAB = Blocks.DARK_OAK_SLAB	
PALE_OAK_SLAB = Blocks.PALE_OAK_SLAB	
MANGROVE_SLAB = Blocks.MANGROVE_SLAB	
BAMBOO_SLAB = Blocks.BAMBOO_SLAB	
BAMBOO_MOSAIC_SLAB = Blocks.BAMBOO_MOSAIC_SLAB	
CRIMSON_SLAB = Blocks.CRIMSON_SLAB	
WARPED_SLAB = Blocks.WARPED_SLAB	
STONE_SLAB = Blocks.STONE_SLAB	
SMOOTH_STONE_SLAB = Blocks.SMOOTH_STONE_SLAB	
SANDSTONE_SLAB = Blocks.SANDSTONE_SLAB	
CUT_STANDSTONE_SLAB = Blocks.CUT_SANDSTONE_SLAB	
PETRIFIED_OAK_SLAB = Blocks.PETRIFIED_OAK_SLAB	
COBBLESTONE_SLAB = Blocks.COBBLESTONE_SLAB	
BRICK_SLAB = Blocks.BRICK_SLAB	
STONE_BRICK_SLAB = Blocks.STONE_BRICK_SLAB	
MUD_BRICK_SLAB = Blocks.MUD_BRICK_SLAB	
NETHER_BRICK_SLAB = Blocks.NETHER_BRICK_SLAB	
QUARTZ_SLAB = Blocks.QUARTZ_SLAB	
RED_SANDSTONE_SLAB = Blocks.RED_SANDSTONE_SLAB	
CUT_RED_SANDSTONE_SLAB = Blocks.CUT_RED_SANDSTONE_SLAB	
PURPUR_SLAB = Blocks.PURPUR_SLAB	
PRISMARINE_SLAB = Blocks.PRISMARINE_SLAB	
PRISMARINE_BRICK_SLAB = Blocks.PRISMARINE_BRICK_SLAB	
DARK_PRISMARINE_SLAB = Blocks.DARK_PRISMARINE_SLAB	
SMOOTH_QUARTZ = Blocks.SMOOTH_QUARTZ	
SMOOTH_RED_SANDSTONE = Blocks.SMOOTH_RED_SANDSTONE	
SMOOTH_SANDSTONE = Blocks.SMOOTH_SANDSTONE	
SMOOTH_STONE = Blocks.SMOOTH_STONE	
BRICKS = Blocks.BRICKS	
BOOKSHELF = Blocks.BOOKSHELF	
CHISELED_BOOKSHELF = Blocks.CHISELED_BOOKSHELF, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
DECORATED_POT = Blocks.DECORATED_POT,new Item.Properties().component(DataComponents.POT_DECORATIONS, PotDecorations.EMPTY).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
MOSSY_COBBLESTONE = Blocks.MOSSY_COBBLESTONE	
OBSIDIAN = Blocks.OBSIDIAN	
TORCH = Blocks.TORCH,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.WALL_TORCH, Direction.DOWN, properties))		
END_ROD = Blocks.END_ROD	
CHORUS_PLANT = Blocks.CHORUS_PLANT	
CHORUS_FLOWER = Blocks.CHORUS_FLOWER	
PURPUR_BLOCK = Blocks.PURPUR_BLOCK	
PURPUR_PILLAR = Blocks.PURPUR_PILLAR	
PURPUR_STAIRS = Blocks.PURPUR_STAIRS	
SPAWNER = Blocks.SPAWNER	
CREAKING_HEART = Blocks.CREAKING_HEART	
CHEST = Blocks.CHEST, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
CRAFTING_TABLE = Blocks.CRAFTING_TABLE	
FARMLAND = Blocks.FARMLAND	
FURNACE = Blocks.FURNACE, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
LADDER = Blocks.LADDER	
COBBLESTONE_STAIRS = Blocks.COBBLESTONE_STAIRS	
SNOW = Blocks.SNOW	
ICE = Blocks.ICE	
SNOW_BLOCK = Blocks.SNOW_BLOCK	
CACTUS = Blocks.CACTUS	
CACTUS_FLOWER = Blocks.CACTUS_FLOWER	
CLAY = Blocks.CLAY	
JUKEBOX = Blocks.JUKEBOX	
OAK_FENCE = Blocks.OAK_FENCE	
SPRUCE_FENCE = Blocks.SPRUCE_FENCE	
BIRCH_FENCE = Blocks.BIRCH_FENCE	
JUNGLE_FENCE = Blocks.JUNGLE_FENCE	
ACACIA_FENCE = Blocks.ACACIA_FENCE	
CHERRY_FENCE = Blocks.CHERRY_FENCE	
DARK_OAK_FENCE = Blocks.DARK_OAK_FENCE	
PALE_OAK_FENCE = Blocks.PALE_OAK_FENCE	
MANGROVE_FENCE = Blocks.MANGROVE_FENCE	
BAMBOO_FENCE = Blocks.BAMBOO_FENCE	
CRIMSON_FENCE = Blocks.CRIMSON_FENCE	
WARPED_FENCE = Blocks.WARPED_FENCE	
PUMPKIN = Blocks.PUMPKIN	
CARVED_PUMPKIN = Blocks.CARVED_PUMPKIN,(UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE,Equippable.builder(EquipmentSlot.HEAD).setSwappable(false).setCameraOverlay(ResourceLocation.withDefaultNamespace("misc/pumpkinblur")).build()	))		
JACK_O_LANTERN = Blocks.JACK_O_LANTERN	
NETHERRACK = Blocks.NETHERRACK	
SOUL_SAND = Blocks.SOUL_SAND	
SOUL_SOIL = Blocks.SOUL_SOIL	
BASALT = Blocks.BASALT	
POLISHED_BASALT = Blocks.POLISHED_BASALT	
SMOOTH_BASALT = Blocks.SMOOTH_BASALT	
SOUL_TORCH = Blocks.SOUL_TORCH,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.SOUL_WALL_TORCH, Direction.DOWN, properties))		
GLOWSTONE = Blocks.GLOWSTONE	
INFESTED_STONE = Blocks.INFESTED_STONE	
INFESTED_COBBLESTONE = Blocks.INFESTED_COBBLESTONE	
INFESTED_STONE_BRICKS = Blocks.INFESTED_STONE_BRICKS	
INFESTED_MOSSY_STONE_BRICKS = Blocks.INFESTED_MOSSY_STONE_BRICKS	
INFESTED_CRACKED_STONE_BRICKS = Blocks.INFESTED_CRACKED_STONE_BRICKS	
INFESTED_CHISELED_STONE_BRICKS = Blocks.INFESTED_CHISELED_STONE_BRICKS	
INFESTED_DEEPSLATE = Blocks.INFESTED_DEEPSLATE	
STONE_BRICKS = Blocks.STONE_BRICKS	
MOSSY_STONE_BRICKS = Blocks.MOSSY_STONE_BRICKS	
CRACKED_STONE_BRICKS = Blocks.CRACKED_STONE_BRICKS	
CHISELED_STONE_BRICKS = Blocks.CHISELED_STONE_BRICKS	
PACKED_MUD = Blocks.PACKED_MUD	
MUD_BRICKS = Blocks.MUD_BRICKS	
DEEPSLATE_BRICKS = Blocks.DEEPSLATE_BRICKS	
CRACKED_DEEPSLATE_BRICKS = Blocks.CRACKED_DEEPSLATE_BRICKS	
DEEPSLATE_TILES = Blocks.DEEPSLATE_TILES	
CRACKED_DEEPSLATE_TILES = Blocks.CRACKED_DEEPSLATE_TILES	
CHISELED_DEEPSLATE = Blocks.CHISELED_DEEPSLATE	
REINFORCED_DEEPSLATE = Blocks.REINFORCED_DEEPSLATE	
BROWN_MUSHROOM_BLOCK = Blocks.BROWN_MUSHROOM_BLOCK	
RED_MUSHROOM_BLOCK = Blocks.RED_MUSHROOM_BLOCK	
MUSHROOM_STEM = Blocks.MUSHROOM_STEM	
IRON_BARS = Blocks.IRON_BARS	
CHAIN = Blocks.CHAIN	
GLASS_PANE = Blocks.GLASS_PANE	
MELON = Blocks.MELON	
VINE = Blocks.VINE	
GLOW_LICHEN = Blocks.GLOW_LICHEN	
RESIN_CLUMP = "resin_clump", createBlockItemWithCustomItemName(Blocks.RESIN_CLUMP)	
RESIN_BLOCK = Blocks.RESIN_BLOCK	
RESIN_BRICKS = Blocks.RESIN_BRICKS	
RESIN_BRICK_STAIRS = Blocks.RESIN_BRICK_STAIRS	
RESIN_BRICK_SLAB = Blocks.RESIN_BRICK_SLAB	
RESIN_BRICK_WALL = Blocks.RESIN_BRICK_WALL	
CHISELED_RESIN_BRICKS = Blocks.CHISELED_RESIN_BRICKS	
BRICK_STAIRS = Blocks.BRICK_STAIRS	
STONE_BRICK_STAIRS = Blocks.STONE_BRICK_STAIRS	
MUD_BRICK_STAIRS = Blocks.MUD_BRICK_STAIRS	
MYCELIUM = Blocks.MYCELIUM	
LILY_PAD = Blocks.LILY_PAD, PlaceOnWaterBlockItem::new	
NETHER_BRICKS = Blocks.NETHER_BRICKS	
CRACKED_NETHER_BRICKS = Blocks.CRACKED_NETHER_BRICKS	
CHISELED_NETHER_BRICKS = Blocks.CHISELED_NETHER_BRICKS	
NETHER_BRICK_FENCE = Blocks.NETHER_BRICK_FENCE	
NETHER_BRICK_STAIRS = Blocks.NETHER_BRICK_STAIRS	
SCULK = Blocks.SCULK	
SCULK_VEIN = Blocks.SCULK_VEIN	
SCULK_CATALYST = Blocks.SCULK_CATALYST	
SCULK_SHRIEKER = Blocks.SCULK_SHRIEKER	
ENCHANTING_TABLE = Blocks.ENCHANTING_TABLE	
END_PORTAL_FRAME = Blocks.END_PORTAL_FRAME	
END_STONE = Blocks.END_STONE	
END_STONE_BRICKS = Blocks.END_STONE_BRICKS	
DRAGON_EGG = Blocks.DRAGON_EGG, new Item.Properties().rarity(Rarity.EPIC)	
SANDSTONE_STAIRS = Blocks.SANDSTONE_STAIRS	
ENDER_CHEST = Blocks.ENDER_CHEST	
EMERALD_BLOCK = Blocks.EMERALD_BLOCK	
OAK_STAIRS = Blocks.OAK_STAIRS	
SPRUCE_STAIRS = Blocks.SPRUCE_STAIRS	
BIRCH_STAIRS = Blocks.BIRCH_STAIRS	
JUNGLE_STAIRS = Blocks.JUNGLE_STAIRS	
ACACIA_STAIRS = Blocks.ACACIA_STAIRS	
CHERRY_STAIRS = Blocks.CHERRY_STAIRS	
DARK_OAK_STAIRS = Blocks.DARK_OAK_STAIRS	
PALE_OAK_STAIRS = Blocks.PALE_OAK_STAIRS	
MANGROVE_STAIRS = Blocks.MANGROVE_STAIRS	
BAMBOO_STAIRS = Blocks.BAMBOO_STAIRS	
BAMBOO_MOSAIC_STAIRS = Blocks.BAMBOO_MOSAIC_STAIRS	
CRIMSON_STAIRS = Blocks.CRIMSON_STAIRS	
WARPED_STAIRS = Blocks.WARPED_STAIRS	
COMMAND_BLOCK = Blocks.COMMAND_BLOCK, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)	
BEACON = Blocks.BEACON, new Item.Properties().rarity(Rarity.RARE)	
COBBLESTONE_WALL = Blocks.COBBLESTONE_WALL	
MOSSY_COBBLESTONE_WALL = Blocks.MOSSY_COBBLESTONE_WALL	
BRICK_WALL = Blocks.BRICK_WALL	
PRISMARINE_WALL = Blocks.PRISMARINE_WALL	
RED_SANDSTONE_WALL = Blocks.RED_SANDSTONE_WALL	
MOSSY_STONE_BRICK_WALL = Blocks.MOSSY_STONE_BRICK_WALL	
GRANITE_WALL = Blocks.GRANITE_WALL	
STONE_BRICK_WALL = Blocks.STONE_BRICK_WALL	
MUD_BRICK_WALL = Blocks.MUD_BRICK_WALL	
NETHER_BRICK_WALL = Blocks.NETHER_BRICK_WALL	
ANDESITE_WALL = Blocks.ANDESITE_WALL	
RED_NETHER_BRICK_WALL = Blocks.RED_NETHER_BRICK_WALL	
SANDSTONE_WALL = Blocks.SANDSTONE_WALL	
END_STONE_BRICK_WALL = Blocks.END_STONE_BRICK_WALL	
DIORITE_WALL = Blocks.DIORITE_WALL	
BLACKSTONE_WALL = Blocks.BLACKSTONE_WALL	
POLISHED_BLACKSTONE_WALL = Blocks.POLISHED_BLACKSTONE_WALL	
POLISHED_BLACKSTONE_BRICK_WALL = Blocks.POLISHED_BLACKSTONE_BRICK_WALL	
COBBLED_DEEPSLATE_WALL = Blocks.COBBLED_DEEPSLATE_WALL	
POLISHED_DEEPSLATE_WALL = Blocks.POLISHED_DEEPSLATE_WALL	
DEEPSLATE_BRICK_WALL = Blocks.DEEPSLATE_BRICK_WALL	
DEEPSLATE_TILE_WALL = Blocks.DEEPSLATE_TILE_WALL	
ANVIL = Blocks.ANVIL	
CHIPPED_ANVIL = Blocks.CHIPPED_ANVIL	
DAMAGED_ANVIL = Blocks.DAMAGED_ANVIL	
CHISELED_QUARTZ_BLOCK = Blocks.CHISELED_QUARTZ_BLOCK	
QUARTZ_BLOCK = Blocks.QUARTZ_BLOCK	
QUARTZ_BRICKS = Blocks.QUARTZ_BRICKS	
QUARTZ_PILLAR = Blocks.QUARTZ_PILLAR	
QUARTZ_STAIRS = Blocks.QUARTZ_STAIRS	
WHITE_TERRACOTTA = Blocks.WHITE_TERRACOTTA	
ORANGE_TERRACOTTA = Blocks.ORANGE_TERRACOTTA	
MAGENTA_TERRACOTTA = Blocks.MAGENTA_TERRACOTTA	
LIGHT_BLUE_TERRACOTTA = Blocks.LIGHT_BLUE_TERRACOTTA	
YELLOW_TERRACOTTA = Blocks.YELLOW_TERRACOTTA	
LIME_TERRACOTTA = Blocks.LIME_TERRACOTTA	
PINK_TERRACOTTA = Blocks.PINK_TERRACOTTA	
GRAY_TERRACOTTA = Blocks.GRAY_TERRACOTTA	
LIGHT_GRAY_TERRACOTTA = Blocks.LIGHT_GRAY_TERRACOTTA	
CYAN_TERRACOTTA = Blocks.CYAN_TERRACOTTA	
PURPLE_TERRACOTTA = Blocks.PURPLE_TERRACOTTA	
BLUE_TERRACOTTA = Blocks.BLUE_TERRACOTTA	
BROWN_TERRACOTTA = Blocks.BROWN_TERRACOTTA	
GREEN_TERRACOTTA = Blocks.GREEN_TERRACOTTA	
RED_TERRACOTTA = Blocks.RED_TERRACOTTA	
BLACK_TERRACOTTA = Blocks.BLACK_TERRACOTTA	
BARRIER = Blocks.BARRIER, new Item.Properties().rarity(Rarity.EPIC)	
LIGHT = Blocks.LIGHT,(UnaryOperator<Item.Properties>)(properties -> properties.rarity(Rarity.EPIC).component(DataComponents.BLOCK_STATE, BlockItemStateProperties.EMPTY.with(LightBlock.LEVEL, 15)))		
HAY_BLOCK = Blocks.HAY_BLOCK	
WHITE_CARPET = Blocks.WHITE_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.WHITE)))		
ORANGE_CARPET = Blocks.ORANGE_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.ORANGE)))		
MAGENTA_CARPET = Blocks.MAGENTA_CARPET,(UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.MAGENTA)))		
LIGHT_BLUE_CARPET = Blocks.LIGHT_BLUE_CARPET,(UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.LIGHT_BLUE)))		
YELLOW_CARPET = Blocks.YELLOW_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.YELLOW)))		
LIME_CARPET = Blocks.LIME_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.LIME)))		
PINK_CARPET = Blocks.PINK_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.PINK)))		
GRAY_CARPET = Blocks.GRAY_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.GRAY)))		
LIGHT_GRAY_CARPET = Blocks.LIGHT_GRAY_CARPET,(UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.LIGHT_GRAY)))		
CYAN_CARPET = Blocks.CYAN_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.CYAN)))		
PURPLE_CARPET = Blocks.PURPLE_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.PURPLE)))		
BLUE_CARPET = Blocks.BLUE_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.BLUE)))		
BROWN_CARPET = Blocks.BROWN_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.BROWN)))		
GREEN_CARPET = Blocks.GREEN_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.GREEN)))		
RED_CARPET = Blocks.RED_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.RED)))		
BLACK_CARPET = Blocks.BLACK_CARPET, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.EQUIPPABLE, Equippable.llamaSwag(DyeColor.BLACK)))		
TERRACOTTA = Blocks.TERRACOTTA	
PACKED_ICE = Blocks.PACKED_ICE	
DIRT_PATH = Blocks.DIRT_PATH	
SUNFLOWER = Blocks.SUNFLOWER, DoubleHighBlockItem::new	
LILAC = Blocks.LILAC, DoubleHighBlockItem::new	
ROSE_BUSH = Blocks.ROSE_BUSH, DoubleHighBlockItem::new	
PEONY = Blocks.PEONY, DoubleHighBlockItem::new	
TALL_GRASS = Blocks.TALL_GRASS, DoubleHighBlockItem::new	
LARGE_FERN = Blocks.LARGE_FERN, DoubleHighBlockItem::new	
WHITE_STAINED_GLASS = Blocks.WHITE_STAINED_GLASS	
ORANGE_STAINED_GLASS = Blocks.ORANGE_STAINED_GLASS	
MAGENTA_STAINED_GLASS = Blocks.MAGENTA_STAINED_GLASS	
LIGHT_BLUE_STAINED_GLASS = Blocks.LIGHT_BLUE_STAINED_GLASS	
YELLOW_STAINED_GLASS = Blocks.YELLOW_STAINED_GLASS	
LIME_STAINED_GLASS = Blocks.LIME_STAINED_GLASS	
PINK_STAINED_GLASS = Blocks.PINK_STAINED_GLASS	
GRAY_STAINED_GLASS = Blocks.GRAY_STAINED_GLASS	
LIGHT_GRAY_STAINED_GLASS = Blocks.LIGHT_GRAY_STAINED_GLASS	
CYAN_STAINED_GLASS = Blocks.CYAN_STAINED_GLASS	
PURPLE_STAINED_GLASS = Blocks.PURPLE_STAINED_GLASS	
BLUE_STAINED_GLASS = Blocks.BLUE_STAINED_GLASS	
BROWN_STAINED_GLASS = Blocks.BROWN_STAINED_GLASS	
GREEN_STAINED_GLASS = Blocks.GREEN_STAINED_GLASS	
RED_STAINED_GLASS = Blocks.RED_STAINED_GLASS	
BLACK_STAINED_GLASS = Blocks.BLACK_STAINED_GLASS	
WHITE_STAINED_GLASS_PANE = Blocks.WHITE_STAINED_GLASS_PANE	
ORANGE_STAINED_GLASS_PANE = Blocks.ORANGE_STAINED_GLASS_PANE	
MAGENTA_STAINED_GLASS_PANE = Blocks.MAGENTA_STAINED_GLASS_PANE	
LIGHT_BLUE_STAINED_GLASS_PANE = Blocks.LIGHT_BLUE_STAINED_GLASS_PANE	
YELLOW_STAINED_GLASS_PANE = Blocks.YELLOW_STAINED_GLASS_PANE	
LIME_STAINED_GLASS_PANE = Blocks.LIME_STAINED_GLASS_PANE	
PINK_STAINED_GLASS_PANE = Blocks.PINK_STAINED_GLASS_PANE	
GRAY_STAINED_GLASS_PANE = Blocks.GRAY_STAINED_GLASS_PANE	
LIGHT_GRAY_STAINED_GLASS_PANE = Blocks.LIGHT_GRAY_STAINED_GLASS_PANE	
CYAN_STAINED_GLASS_PANE = Blocks.CYAN_STAINED_GLASS_PANE	
PURPLE_STAINED_GLASS_PANE = Blocks.PURPLE_STAINED_GLASS_PANE	
BLUE_STAINED_GLASS_PANE = Blocks.BLUE_STAINED_GLASS_PANE	
BROWN_STAINED_GLASS_PANE = Blocks.BROWN_STAINED_GLASS_PANE	
GREEN_STAINED_GLASS_PANE = Blocks.GREEN_STAINED_GLASS_PANE	
RED_STAINED_GLASS_PANE = Blocks.RED_STAINED_GLASS_PANE	
BLACK_STAINED_GLASS_PANE = Blocks.BLACK_STAINED_GLASS_PANE	
PRISMARINE = Blocks.PRISMARINE	
PRISMARINE_BRICKS = Blocks.PRISMARINE_BRICKS	
DARK_PRISMARINE = Blocks.DARK_PRISMARINE	
PRISMARINE_STAIRS = Blocks.PRISMARINE_STAIRS	
PRISMARINE_BRICK_STAIRS = Blocks.PRISMARINE_BRICK_STAIRS	
DARK_PRISMARINE_STAIRS = Blocks.DARK_PRISMARINE_STAIRS	
SEA_LANTERN = Blocks.SEA_LANTERN	
RED_SANDSTONE = Blocks.RED_SANDSTONE	
CHISELED_RED_SANDSTONE = Blocks.CHISELED_RED_SANDSTONE	
CUT_RED_SANDSTONE = Blocks.CUT_RED_SANDSTONE	
RED_SANDSTONE_STAIRS = Blocks.RED_SANDSTONE_STAIRS	
REPEATING_COMMAND_BLOCK = Blocks.REPEATING_COMMAND_BLOCK, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)		
CHAIN_COMMAND_BLOCK = Blocks.CHAIN_COMMAND_BLOCK, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)	
MAGMA_BLOCK = Blocks.MAGMA_BLOCK	
NETHER_WART_BLOCK = Blocks.NETHER_WART_BLOCK	
WARPED_WART_BLOCK = Blocks.WARPED_WART_BLOCK	
RED_NETHER_BRICKS = Blocks.RED_NETHER_BRICKS	
BONE_BLOCK = Blocks.BONE_BLOCK	
STRUCTURE_VOID = Blocks.STRUCTURE_VOID, new Item.Properties().rarity(Rarity.EPIC)	
SHULKER_BOX = Blocks.SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
WHITE_SHULKER_BOX = Blocks.WHITE_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
ORANGE_SHULKER_BOX = Blocks.ORANGE_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
MAGENTA_SHULKER_BOX = Blocks.MAGENTA_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
LIGHT_BLUE_SHULKER_BOX = Blocks.LIGHT_BLUE_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
YELLOW_SHULKER_BOX = Blocks.YELLOW_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
LIME_SHULKER_BOX = Blocks.LIME_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
PINK_SHULKER_BOX = Blocks.PINK_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
GRAY_SHULKER_BOX = Blocks.GRAY_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
LIGHT_GRAY_SHULKER_BOX = Blocks.LIGHT_GRAY_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
CYAN_SHULKER_BOX = Blocks.CYAN_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
PURPLE_SHULKER_BOX = Blocks.PURPLE_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
BLUE_SHULKER_BOX = Blocks.BLUE_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
BROWN_SHULKER_BOX = Blocks.BROWN_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
GREEN_SHULKER_BOX = Blocks.GREEN_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
RED_SHULKER_BOX = Blocks.RED_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
BLACK_SHULKER_BOX = Blocks.BLACK_SHULKER_BOX, new Item.Properties().stacksTo(1).component(DataComponents.CONTAINER, ItemContainerContents.EMPTY)		
WHITE_GLAZED_TERRACOTTA = Blocks.WHITE_GLAZED_TERRACOTTA	
ORANGE_GLAZED_TERRACOTTA = Blocks.ORANGE_GLAZED_TERRACOTTA	
MAGENTA_GLAZED_TERRACOTTA = Blocks.MAGENTA_GLAZED_TERRACOTTA	
LIGHT_BLUE_GLAZED_TERRACOTTA = Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA	
YELLOW_GLAZED_TERRACOTTA = Blocks.YELLOW_GLAZED_TERRACOTTA	
LIME_GLAZED_TERRACOTTA = Blocks.LIME_GLAZED_TERRACOTTA	
PINK_GLAZED_TERRACOTTA = Blocks.PINK_GLAZED_TERRACOTTA	
GRAY_GLAZED_TERRACOTTA = Blocks.GRAY_GLAZED_TERRACOTTA	
LIGHT_GRAY_GLAZED_TERRACOTTA = Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA	
CYAN_GLAZED_TERRACOTTA = Blocks.CYAN_GLAZED_TERRACOTTA	
PURPLE_GLAZED_TERRACOTTA = Blocks.PURPLE_GLAZED_TERRACOTTA	
BLUE_GLAZED_TERRACOTTA = Blocks.BLUE_GLAZED_TERRACOTTA	
BROWN_GLAZED_TERRACOTTA = Blocks.BROWN_GLAZED_TERRACOTTA	
GREEN_GLAZED_TERRACOTTA = Blocks.GREEN_GLAZED_TERRACOTTA	
RED_GLAZED_TERRACOTTA = Blocks.RED_GLAZED_TERRACOTTA	
BLACK_GLAZED_TERRACOTTA = Blocks.BLACK_GLAZED_TERRACOTTA	
WHITE_CONCRETE = Blocks.WHITE_CONCRETE	
ORANGE_CONCRETE = Blocks.ORANGE_CONCRETE	
MAGENTA_CONCRETE = Blocks.MAGENTA_CONCRETE	
LIGHT_BLUE_CONCRETE = Blocks.LIGHT_BLUE_CONCRETE	
YELLOW_CONCRETE = Blocks.YELLOW_CONCRETE	
LIME_CONCRETE = Blocks.LIME_CONCRETE	
PINK_CONCRETE = Blocks.PINK_CONCRETE	
GRAY_CONCRETE = Blocks.GRAY_CONCRETE	
LIGHT_GRAY_CONCRETE = Blocks.LIGHT_GRAY_CONCRETE	
CYAN_CONCRETE = Blocks.CYAN_CONCRETE	
PURPLE_CONCRETE = Blocks.PURPLE_CONCRETE	
BLUE_CONCRETE = Blocks.BLUE_CONCRETE	
BROWN_CONCRETE = Blocks.BROWN_CONCRETE	
GREEN_CONCRETE = Blocks.GREEN_CONCRETE	
RED_CONCRETE = Blocks.RED_CONCRETE	
BLACK_CONCRETE = Blocks.BLACK_CONCRETE	
WHITE_CONCRETE_POWDER = Blocks.WHITE_CONCRETE_POWDER	
ORANGE_CONCRETE_POWDER = Blocks.ORANGE_CONCRETE_POWDER	
MAGENTA_CONCRETE_POWDER = Blocks.MAGENTA_CONCRETE_POWDER	
LIGHT_BLUE_CONCRETE_POWDER = Blocks.LIGHT_BLUE_CONCRETE_POWDER	
YELLOW_CONCRETE_POWDER = Blocks.YELLOW_CONCRETE_POWDER	
LIME_CONCRETE_POWDER = Blocks.LIME_CONCRETE_POWDER	
PINK_CONCRETE_POWDER = Blocks.PINK_CONCRETE_POWDER	
GRAY_CONCRETE_POWDER = Blocks.GRAY_CONCRETE_POWDER	
LIGHT_GRAY_CONCRETE_POWDER = Blocks.LIGHT_GRAY_CONCRETE_POWDER	
CYAN_CONCRETE_POWDER = Blocks.CYAN_CONCRETE_POWDER	
PURPLE_CONCRETE_POWDER = Blocks.PURPLE_CONCRETE_POWDER	
BLUE_CONCRETE_POWDER = Blocks.BLUE_CONCRETE_POWDER	
BROWN_CONCRETE_POWDER = Blocks.BROWN_CONCRETE_POWDER	
GREEN_CONCRETE_POWDER = Blocks.GREEN_CONCRETE_POWDER	
RED_CONCRETE_POWDER = Blocks.RED_CONCRETE_POWDER	
BLACK_CONCRETE_POWDER = Blocks.BLACK_CONCRETE_POWDER	
TURTLE_EGG = Blocks.TURTLE_EGG	
SNIFFER_EGG = Blocks.SNIFFER_EGG, (UnaryOperator<Item.Properties>)(properties -> properties.rarity(Rarity.UNCOMMON))	
DEAD_TUBE_CORAL_BLOCK = Blocks.DEAD_TUBE_CORAL_BLOCK	
DEAD_BRAIN_CORAL_BLOCK = Blocks.DEAD_BRAIN_CORAL_BLOCK	
DEAD_BUBBLE_CORAL_BLOCK = Blocks.DEAD_BUBBLE_CORAL_BLOCK	
DEAD_FIRE_CORAL_BLOCK = Blocks.DEAD_FIRE_CORAL_BLOCK	
DEAD_HORN_CORAL_BLOCK = Blocks.DEAD_HORN_CORAL_BLOCK	
TUBE_CORAL_BLOCK = Blocks.TUBE_CORAL_BLOCK	
BRAIN_CORAL_BLOCK = Blocks.BRAIN_CORAL_BLOCK	
BUBBLE_CORAL_BLOCK = Blocks.BUBBLE_CORAL_BLOCK	
FIRE_CORAL_BLOCK = Blocks.FIRE_CORAL_BLOCK	
HORN_CORAL_BLOCK = Blocks.HORN_CORAL_BLOCK	
TUBE_CORAL = Blocks.TUBE_CORAL	
BRAIN_CORAL = Blocks.BRAIN_CORAL	
BUBBLE_CORAL = Blocks.BUBBLE_CORAL	
FIRE_CORAL = Blocks.FIRE_CORAL	
HORN_CORAL = Blocks.HORN_CORAL	
DEAD_BRAIN_CORAL = Blocks.DEAD_BRAIN_CORAL	
DEAD_BUBBLE_CORAL = Blocks.DEAD_BUBBLE_CORAL	
DEAD_FIRE_CORAL = Blocks.DEAD_FIRE_CORAL	
DEAD_HORN_CORAL = Blocks.DEAD_HORN_CORAL	
DEAD_TUBE_CORAL = Blocks.DEAD_TUBE_CORAL	
TUBE_CORAL_FAN = Blocks.TUBE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.TUBE_CORAL_WALL_FAN, Direction.DOWN, properties))		
BRAIN_CORAL_FAN = Blocks.BRAIN_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.BRAIN_CORAL_WALL_FAN, Direction.DOWN, properties))		
BUBBLE_CORAL_FAN = Blocks.BUBBLE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.BUBBLE_CORAL_WALL_FAN, Direction.DOWN, properties	))		
FIRE_CORAL_FAN = Blocks.FIRE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.FIRE_CORAL_WALL_FAN, Direction.DOWN, properties))		
HORN_CORAL_FAN = Blocks.HORN_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.HORN_CORAL_WALL_FAN, Direction.DOWN, properties))		
DEAD_TUBE_CORAL_FAN = Blocks.DEAD_TUBE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.DEAD_TUBE_CORAL_WALL_FAN, Direction.DOWN, properties	))		
DEAD_BRAIN_CORAL_FAN = Blocks.DEAD_BRAIN_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.DEAD_BRAIN_CORAL_WALL_FAN, Direction.DOWN, properties	))		
DEAD_BUBBLE_CORAL_FAN = Blocks.DEAD_BUBBLE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.DEAD_BUBBLE_CORAL_WALL_FAN, Direction.DOWN, properties	))		
DEAD_FIRE_CORAL_FAN = Blocks.DEAD_FIRE_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.DEAD_FIRE_CORAL_WALL_FAN, Direction.DOWN, properties	))		
DEAD_HORN_CORAL_FAN = Blocks.DEAD_HORN_CORAL_FAN,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.DEAD_HORN_CORAL_WALL_FAN, Direction.DOWN, properties	))		
BLUE_ICE = Blocks.BLUE_ICE	
CONDUIT = Blocks.CONDUIT, new Item.Properties().rarity(Rarity.UNCOMMON)	
POLISHED_GRANITE_STAIRS = Blocks.POLISHED_GRANITE_STAIRS	
SMOOTH_RED_SANDSTONE_STAIRS = Blocks.SMOOTH_RED_SANDSTONE_STAIRS	
MOSSY_STONE_BRICK_STAIRS = Blocks.MOSSY_STONE_BRICK_STAIRS	
POLISHED_DIORITE_STAIRS = Blocks.POLISHED_DIORITE_STAIRS	
MOSSY_COBBLESTONE_STAIRS = Blocks.MOSSY_COBBLESTONE_STAIRS	
END_STONE_BRICK_STAIRS = Blocks.END_STONE_BRICK_STAIRS	
STONE_STAIRS = Blocks.STONE_STAIRS	
SMOOTH_SANDSTONE_STAIRS = Blocks.SMOOTH_SANDSTONE_STAIRS	
SMOOTH_QUARTZ_STAIRS = Blocks.SMOOTH_QUARTZ_STAIRS	
GRANITE_STAIRS = Blocks.GRANITE_STAIRS	
ANDESITE_STAIRS = Blocks.ANDESITE_STAIRS	
RED_NETHER_BRICK_STAIRS = Blocks.RED_NETHER_BRICK_STAIRS	
POLISHED_ANDESITE_STAIRS = Blocks.POLISHED_ANDESITE_STAIRS	
DIORITE_STAIRS = Blocks.DIORITE_STAIRS	
COBBLED_DEEPSLATE_STAIRS = Blocks.COBBLED_DEEPSLATE_STAIRS	
POLISHED_DEEPSLATE_STAIRS = Blocks.POLISHED_DEEPSLATE_STAIRS	
DEEPSLATE_BRICK_STAIRS = Blocks.DEEPSLATE_BRICK_STAIRS	
DEEPSLATE_TILE_STAIRS = Blocks.DEEPSLATE_TILE_STAIRS	
POLISHED_GRANITE_SLAB = Blocks.POLISHED_GRANITE_SLAB	
SMOOTH_RED_SANDSTONE_SLAB = Blocks.SMOOTH_RED_SANDSTONE_SLAB	
MOSSY_STONE_BRICK_SLAB = Blocks.MOSSY_STONE_BRICK_SLAB	
POLISHED_DIORITE_SLAB = Blocks.POLISHED_DIORITE_SLAB	
MOSSY_COBBLESTONE_SLAB = Blocks.MOSSY_COBBLESTONE_SLAB	
END_STONE_BRICK_SLAB = Blocks.END_STONE_BRICK_SLAB	
SMOOTH_SANDSTONE_SLAB = Blocks.SMOOTH_SANDSTONE_SLAB	
SMOOTH_QUARTZ_SLAB = Blocks.SMOOTH_QUARTZ_SLAB	
GRANITE_SLAB = Blocks.GRANITE_SLAB	
ANDESITE_SLAB = Blocks.ANDESITE_SLAB	
RED_NETHER_BRICK_SLAB = Blocks.RED_NETHER_BRICK_SLAB	
POLISHED_ANDESITE_SLAB = Blocks.POLISHED_ANDESITE_SLAB	
DIORITE_SLAB = Blocks.DIORITE_SLAB	
COBBLED_DEEPSLATE_SLAB = Blocks.COBBLED_DEEPSLATE_SLAB	
POLISHED_DEEPSLATE_SLAB = Blocks.POLISHED_DEEPSLATE_SLAB	
DEEPSLATE_BRICK_SLAB = Blocks.DEEPSLATE_BRICK_SLAB	
DEEPSLATE_TILE_SLAB = Blocks.DEEPSLATE_TILE_SLAB	
SCAFFOLDING = Blocks.SCAFFOLDING, ScaffoldingBlockItem::new	
REDSTONE = "redstone", createBlockItemWithCustomItemName(Blocks.REDSTONE_WIRE), new Item.Properties().trimMaterial(TrimMaterials.REDSTONE)		
REDSTONE_TORCH = Blocks.REDSTONE_TORCH,(BiFunction<Block, Item.Properties, Item>)((block, properties) -> new StandingAndWallBlockItem(block, Blocks.REDSTONE_WALL_TORCH, Direction.DOWN, properties))		
REDSTONE_BLOCK = Blocks.REDSTONE_BLOCK	
REPEATER = Blocks.REPEATER	
COMPARATOR = Blocks.COMPARATOR	
PISTON = Blocks.PISTON	
STICKY_PISTON = Blocks.STICKY_PISTON	
SLIME_BLOCK = Blocks.SLIME_BLOCK	
HONEY_BLOCK = Blocks.HONEY_BLOCK	
OBSERVER = Blocks.OBSERVER	
HOPPER = Blocks.HOPPER, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
DISPENSER = Blocks.DISPENSER, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
DROPPER = Blocks.DROPPER, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
LECTERN = Blocks.LECTERN	
TARGET = Blocks.TARGET	
LEVER = Blocks.LEVER	
LIGHTNING_ROD = Blocks.LIGHTNING_ROD	
DAYLIGHT_DETECTOR = Blocks.DAYLIGHT_DETECTOR	
SCULK_SENSOR = Blocks.SCULK_SENSOR	
CALIBRATED_SCULK_SENSOR = Blocks.CALIBRATED_SCULK_SENSOR	
TRIPWIRE_HOOK = Blocks.TRIPWIRE_HOOK	
TRAPPED_CHEST = Blocks.TRAPPED_CHEST, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
TNT = Blocks.TNT	
REDSTONE_LAMP = Blocks.REDSTONE_LAMP	
NOTE_BLOCK = Blocks.NOTE_BLOCK	
STONE_BUTTON = Blocks.STONE_BUTTON	
POLISHED_BLACKSTONE_BUTTON = Blocks.POLISHED_BLACKSTONE_BUTTON	
OAK_BUTTON = Blocks.OAK_BUTTON	
SPRUCE_BUTTON = Blocks.SPRUCE_BUTTON	
BIRCH_BUTTON = Blocks.BIRCH_BUTTON	
JUNGLE_BUTTON = Blocks.JUNGLE_BUTTON	
ACACIA_BUTTON = Blocks.ACACIA_BUTTON	
CHERRY_BUTTON = Blocks.CHERRY_BUTTON	
DARK_OAK_BUTTON = Blocks.DARK_OAK_BUTTON	
PALE_OAK_BUTTON = Blocks.PALE_OAK_BUTTON	
MANGROVE_BUTTON = Blocks.MANGROVE_BUTTON	
BAMBOO_BUTTON = Blocks.BAMBOO_BUTTON	
CRIMSON_BUTTON = Blocks.CRIMSON_BUTTON	
WARPED_BUTTON = Blocks.WARPED_BUTTON	
STONE_PRESSURE_PLATE = Blocks.STONE_PRESSURE_PLATE	
POLISHED_BLACKSTONE_PRESSURE_PLATE = Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE	
LIGHT_WEIGHTED_PRESSURE_PLATE = Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE	
HEAVY_WEIGHTED_PRESSURE_PLATE = Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE	
OAK_PRESSURE_PLATE = Blocks.OAK_PRESSURE_PLATE	
SPRUCE_PRESSURE_PLATE = Blocks.SPRUCE_PRESSURE_PLATE	
BIRCH_PRESSURE_PLATE = Blocks.BIRCH_PRESSURE_PLATE	
JUNGLE_PRESSURE_PLATE = Blocks.JUNGLE_PRESSURE_PLATE	
ACACIA_PRESSURE_PLATE = Blocks.ACACIA_PRESSURE_PLATE	
CHERRY_PRESSURE_PLATE = Blocks.CHERRY_PRESSURE_PLATE	
DARK_OAK_PRESSURE_PLATE = Blocks.DARK_OAK_PRESSURE_PLATE	
PALE_OAK_PRESSURE_PLATE = Blocks.PALE_OAK_PRESSURE_PLATE	
MANGROVE_PRESSURE_PLATE = Blocks.MANGROVE_PRESSURE_PLATE	
BAMBOO_PRESSURE_PLATE = Blocks.BAMBOO_PRESSURE_PLATE	
CRIMSON_PRESSURE_PLATE = Blocks.CRIMSON_PRESSURE_PLATE	
WARPED_PRESSURE_PLATE = Blocks.WARPED_PRESSURE_PLATE	
IRON_DOOR = Blocks.IRON_DOOR, DoubleHighBlockItem::new	
OAK_DOOR = Blocks.OAK_DOOR, DoubleHighBlockItem::new	
SPRUCE_DOOR = Blocks.SPRUCE_DOOR, DoubleHighBlockItem::new	
BIRCH_DOOR = Blocks.BIRCH_DOOR, DoubleHighBlockItem::new	
JUNGLE_DOOR = Blocks.JUNGLE_DOOR, DoubleHighBlockItem::new	
ACACIA_DOOR = Blocks.ACACIA_DOOR, DoubleHighBlockItem::new	
CHERRY_DOOR = Blocks.CHERRY_DOOR, DoubleHighBlockItem::new	
DARK_OAK_DOOR = Blocks.DARK_OAK_DOOR, DoubleHighBlockItem::new	
PALE_OAK_DOOR = Blocks.PALE_OAK_DOOR, DoubleHighBlockItem::new	
MANGROVE_DOOR = Blocks.MANGROVE_DOOR, DoubleHighBlockItem::new	
BAMBOO_DOOR = Blocks.BAMBOO_DOOR, DoubleHighBlockItem::new	
CRIMSON_DOOR = Blocks.CRIMSON_DOOR, DoubleHighBlockItem::new	
WARPED_DOOR = Blocks.WARPED_DOOR, DoubleHighBlockItem::new	
COPPER_DOOR = Blocks.COPPER_DOOR, DoubleHighBlockItem::new	
EXPOSED_COPPER_DOOR = Blocks.EXPOSED_COPPER_DOOR, DoubleHighBlockItem::new	
WEATHERED_COPPER_DOOR = Blocks.WEATHERED_COPPER_DOOR, DoubleHighBlockItem::new	
OXIDIZED_COPPER_DOOR = Blocks.OXIDIZED_COPPER_DOOR, DoubleHighBlockItem::new	
WAXED_COPPER_DOOR = Blocks.WAXED_COPPER_DOOR, DoubleHighBlockItem::new	
WAXED_EXPOSED_COPPER_DOOR = Blocks.WAXED_EXPOSED_COPPER_DOOR, DoubleHighBlockItem::new	
WAXED_WEATHERED_COPPER_DOOR = Blocks.WAXED_WEATHERED_COPPER_DOOR, DoubleHighBlockItem::new	
WAXED_OXIDIZED_COPPER_DOOR = Blocks.WAXED_OXIDIZED_COPPER_DOOR, DoubleHighBlockItem::new	
IRON_TRAPDOOR = Blocks.IRON_TRAPDOOR	
OAK_TRAPDOOR = Blocks.OAK_TRAPDOOR	
SPRUCE_TRAPDOOR = Blocks.SPRUCE_TRAPDOOR	
BIRCH_TRAPDOOR = Blocks.BIRCH_TRAPDOOR	
JUNGLE_TRAPDOOR = Blocks.JUNGLE_TRAPDOOR	
ACACIA_TRAPDOOR = Blocks.ACACIA_TRAPDOOR	
CHERRY_TRAPDOOR = Blocks.CHERRY_TRAPDOOR	
DARK_OAK_TRAPDOOR = Blocks.DARK_OAK_TRAPDOOR	
PALE_OAK_TRAPDOOR = Blocks.PALE_OAK_TRAPDOOR	
MANGROVE_TRAPDOOR = Blocks.MANGROVE_TRAPDOOR	
BAMBOO_TRAPDOOR = Blocks.BAMBOO_TRAPDOOR	
CRIMSON_TRAPDOOR = Blocks.CRIMSON_TRAPDOOR	
WARPED_TRAPDOOR = Blocks.WARPED_TRAPDOOR	
COPPER_TRAPDOOR = Blocks.COPPER_TRAPDOOR	
EXPOSED_COPPER_TRAPDOOR = Blocks.EXPOSED_COPPER_TRAPDOOR	
WEATHERED_COPPER_TRAPDOOR = Blocks.WEATHERED_COPPER_TRAPDOOR	
OXIDIZED_COPPER_TRAPDOOR = Blocks.OXIDIZED_COPPER_TRAPDOOR	
WAXED_COPPER_TRAPDOOR = Blocks.WAXED_COPPER_TRAPDOOR	
WAXED_EXPOSED_COPPER_TRAPDOOR = Blocks.WAXED_EXPOSED_COPPER_TRAPDOOR	
WAXED_WEATHERED_COPPER_TRAPDOOR = Blocks.WAXED_WEATHERED_COPPER_TRAPDOOR	
WAXED_OXIDIZED_COPPER_TRAPDOOR = Blocks.WAXED_OXIDIZED_COPPER_TRAPDOOR	
OAK_FENCE_GATE = Blocks.OAK_FENCE_GATE	
SPRUCE_FENCE_GATE = Blocks.SPRUCE_FENCE_GATE	
BIRCH_FENCE_GATE = Blocks.BIRCH_FENCE_GATE	
JUNGLE_FENCE_GATE = Blocks.JUNGLE_FENCE_GATE	
ACACIA_FENCE_GATE = Blocks.ACACIA_FENCE_GATE	
CHERRY_FENCE_GATE = Blocks.CHERRY_FENCE_GATE	
DARK_OAK_FENCE_GATE = Blocks.DARK_OAK_FENCE_GATE	
PALE_OAK_FENCE_GATE = Blocks.PALE_OAK_FENCE_GATE	
MANGROVE_FENCE_GATE = Blocks.MANGROVE_FENCE_GATE	
BAMBOO_FENCE_GATE = Blocks.BAMBOO_FENCE_GATE	
CRIMSON_FENCE_GATE = Blocks.CRIMSON_FENCE_GATE	
WARPED_FENCE_GATE = Blocks.WARPED_FENCE_GATE	
POWERED_RAIL = Blocks.POWERED_RAIL	
DETECTOR_RAIL = Blocks.DETECTOR_RAIL	
RAIL = Blocks.RAIL	
ACTIVATOR_RAIL = Blocks.ACTIVATOR_RAIL	
SADDLE = "saddle", new Item.Properties().stacksTo(1).component(DataComponents.EQUIPPABLE, Equippable.saddle())	
MINECART = "minecart", properties -> new MinecartItem(EntityType.MINECART, properties), new Item.Properties().stacksTo(1)		
CHEST_MINECART = "chest_minecart", properties -> new MinecartItem(EntityType.CHEST_MINECART, properties), new Item.Properties().stacksTo(1)		
FURNACE_MINECART = "furnace_minecart", properties -> new MinecartItem(EntityType.FURNACE_MINECART, properties), new Item.Properties().stacksTo(1)		
TNT_MINECART = "tnt_minecart", properties -> new MinecartItem(EntityType.TNT_MINECART, properties), new Item.Properties().stacksTo(1)		
HOPPER_MINECART = "hopper_minecart", properties -> new MinecartItem(EntityType.HOPPER_MINECART, properties), new Item.Properties().stacksTo(1)		
CARROT_ON_A_STICK = "carrot_on_a_stick", properties -> new FoodOnAStickItem<>(EntityType.PIG, 7, properties), new Item.Properties().durability(25)		
WARPED_FUNGUS_ON_A_STICK = "warped_fungus_on_a_stick", properties -> new FoodOnAStickItem<>(EntityType.STRIDER, 1, properties), new Item.Properties().durability(100)		
PHANTOM_MEMBRANE = "phantom_membrane"	
ELYTRA = "elytra",new Item.Properties()	.durability(432)	.rarity(Rarity.EPIC)	.component(DataComponents.GLIDER, Unit.INSTANCE)	.component(DataComponents.EQUIPPABLE,Equippable.builder(EquipmentSlot.CHEST).setEquipSound(SoundEvents.ARMOR_EQUIP_ELYTRA).setAsset(EquipmentAssets.ELYTRA).setDamageOnHurt(false).build()	)	.repairable(PHANTOM_MEMBRANE)		
OAK_BOAT = "oak_boat", properties -> new BoatItem(EntityType.OAK_BOAT, properties), new Item.Properties().stacksTo(1)	
OAK_CHEST_BOAT = "oak_chest_boat", properties -> new BoatItem(EntityType.OAK_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
SPRUCE_BOAT = "spruce_boat", properties -> new BoatItem(EntityType.SPRUCE_BOAT, properties), new Item.Properties().stacksTo(1)		
SPRUCE_CHEST_BOAT = "spruce_chest_boat", properties -> new BoatItem(EntityType.SPRUCE_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
BIRCH_BOAT = "birch_boat", properties -> new BoatItem(EntityType.BIRCH_BOAT, properties), new Item.Properties().stacksTo(1)		
BIRCH_CHEST_BOAT = "birch_chest_boat", properties -> new BoatItem(EntityType.BIRCH_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
JUNGLE_BOAT = "jungle_boat", properties -> new BoatItem(EntityType.JUNGLE_BOAT, properties), new Item.Properties().stacksTo(1)		
JUNGLE_CHEST_BOAT = "jungle_chest_boat", properties -> new BoatItem(EntityType.JUNGLE_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
ACACIA_BOAT = "acacia_boat", properties -> new BoatItem(EntityType.ACACIA_BOAT, properties), new Item.Properties().stacksTo(1)		
ACACIA_CHEST_BOAT = "acacia_chest_boat", properties -> new BoatItem(EntityType.ACACIA_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
CHERRY_BOAT = "cherry_boat", properties -> new BoatItem(EntityType.CHERRY_BOAT, properties), new Item.Properties().stacksTo(1)		
CHERRY_CHEST_BOAT = "cherry_chest_boat", properties -> new BoatItem(EntityType.CHERRY_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
DARK_OAK_BOAT = "dark_oak_boat", properties -> new BoatItem(EntityType.DARK_OAK_BOAT, properties), new Item.Properties().stacksTo(1)		
DARK_OAK_CHEST_BOAT = "dark_oak_chest_boat", properties -> new BoatItem(EntityType.DARK_OAK_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
PALE_OAK_BOAT = "pale_oak_boat", properties -> new BoatItem(EntityType.PALE_OAK_BOAT, properties), new Item.Properties().stacksTo(1)		
PALE_OAK_CHEST_BOAT = "pale_oak_chest_boat", properties -> new BoatItem(EntityType.PALE_OAK_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
MANGROVE_BOAT = "mangrove_boat", properties -> new BoatItem(EntityType.MANGROVE_BOAT, properties), new Item.Properties().stacksTo(1)		
MANGROVE_CHEST_BOAT = "mangrove_chest_boat", properties -> new BoatItem(EntityType.MANGROVE_CHEST_BOAT, properties), new Item.Properties().stacksTo(1)		
BAMBOO_RAFT = "bamboo_raft", properties -> new BoatItem(EntityType.BAMBOO_RAFT, properties), new Item.Properties().stacksTo(1)		
BAMBOO_CHEST_RAFT = "bamboo_chest_raft", properties -> new BoatItem(EntityType.BAMBOO_CHEST_RAFT, properties), new Item.Properties().stacksTo(1)		
STRUCTURE_BLOCK = Blocks.STRUCTURE_BLOCK, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)	
JIGSAW = Blocks.JIGSAW, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)	
TEST_BLOCK = Blocks.TEST_BLOCK,GameMasterBlockItem::new,new Item.Properties().rarity(Rarity.EPIC).component(DataComponents.BLOCK_STATE, BlockItemStateProperties.EMPTY.with(TestBlock.MODE, TestBlockMode.START))		
TEST_INSTANCE_BLOCK = Blocks.TEST_INSTANCE_BLOCK, GameMasterBlockItem::new, new Item.Properties().rarity(Rarity.EPIC)	
TURTLE_HELMET = "turtle_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.TURTLE_SCUTE, ArmorType.HELMET)	
TURTLE_SCUTE = "turtle_scute"	
ARMADILLO_SCUTE = "armadillo_scute"	
WOLF_ARMOR = "wolf_armor", new Item.Properties().wolfArmor(ArmorMaterials.ARMADILLO_SCUTE)	
FLINT_AND_STEEL = "flint_and_steel", FlintAndSteelItem::new, new Item.Properties().durability(64)	
BOWL = "bowl"	
APPLE = "apple", new Item.Properties().food(Foods.APPLE)	
BOW = "bow", BowItem::new, new Item.Properties().durability(384).enchantable(1)	
ARROW = "arrow", ArrowItem::new	
COAL = "coal"	
CHARCOAL = "charcoal"	
DIAMOND = "diamond", new Item.Properties().trimMaterial(TrimMaterials.DIAMOND)	
EMERALD = "emerald", new Item.Properties().trimMaterial(TrimMaterials.EMERALD)	
LAPIS_LAZULI = "lapis_lazuli", new Item.Properties().trimMaterial(TrimMaterials.LAPIS)	
QUARTZ = "quartz", new Item.Properties().trimMaterial(TrimMaterials.QUARTZ)	
AMETHYST_SHARD = "amethyst_shard", new Item.Properties().trimMaterial(TrimMaterials.AMETHYST)	
RAW_IRON = "raw_iron"	
IRON_INGOT = "iron_ingot", new Item.Properties().trimMaterial(TrimMaterials.IRON)	
RAW_COPPER = "raw_copper"	
COPPER_INGOT = "copper_ingot", new Item.Properties().trimMaterial(TrimMaterials.COPPER)	
RAW_GOLD = "raw_gold"	
GOLD_INGOT = "gold_ingot", new Item.Properties().trimMaterial(TrimMaterials.GOLD)	
NETHERITE_INGOT = "netherite_ingot", new Item.Properties().fireResistant().trimMaterial(TrimMaterials.NETHERITE)	
NETHERITE_SCRAP = "netherite_scrap", new Item.Properties().fireResistant()	
WOODEN_SWORD = "wooden_sword", new Item.Properties().sword(ToolMaterial.WOOD, 3.0F, -2.4F)	
WOODEN_SHOVEL = "wooden_shovel", properties -> new ShovelItem(ToolMaterial.WOOD, 1.5F, -3.0F, properties)	
WOODEN_PICKAXE = "wooden_pickaxe", new Item.Properties().pickaxe(ToolMaterial.WOOD, 1.0F, -2.8F)	
WOODEN_AXE = "wooden_axe", properties -> new AxeItem(ToolMaterial.WOOD, 6.0F, -3.2F, properties)	
WOODEN_HOE = "wooden_hoe", properties -> new HoeItem(ToolMaterial.WOOD, 0.0F, -3.0F, properties)	
STONE_SWORD = "stone_sword", new Item.Properties().sword(ToolMaterial.STONE, 3.0F, -2.4F)	
STONE_SHOVEL = "stone_shovel", properties -> new ShovelItem(ToolMaterial.STONE, 1.5F, -3.0F, properties)	
STONE_PICKAXE = "stone_pickaxe", new Item.Properties().pickaxe(ToolMaterial.STONE, 1.0F, -2.8F)	
STONE_AXE = "stone_axe", properties -> new AxeItem(ToolMaterial.STONE, 7.0F, -3.2F, properties)	
STONE_HOE = "stone_hoe", properties -> new HoeItem(ToolMaterial.STONE, -1.0F, -2.0F, properties)	
GOLDEN_SWORD = "golden_sword", new Item.Properties().sword(ToolMaterial.GOLD, 3.0F, -2.4F)	
GOLDEN_SHOVEL = "golden_shovel", properties -> new ShovelItem(ToolMaterial.GOLD, 1.5F, -3.0F, properties)	
GOLDEN_PICKAXE = "golden_pickaxe", new Item.Properties().pickaxe(ToolMaterial.GOLD, 1.0F, -2.8F)	
GOLDEN_AXE = "golden_axe", properties -> new AxeItem(ToolMaterial.GOLD, 6.0F, -3.0F, properties)	
GOLDEN_HOE = "golden_hoe", properties -> new HoeItem(ToolMaterial.GOLD, 0.0F, -3.0F, properties)	
IRON_SWORD = "iron_sword", new Item.Properties().sword(ToolMaterial.IRON, 3.0F, -2.4F)	
IRON_SHOVEL = "iron_shovel", properties -> new ShovelItem(ToolMaterial.IRON, 1.5F, -3.0F, properties)	
IRON_PICKAXE = "iron_pickaxe", new Item.Properties().pickaxe(ToolMaterial.IRON, 1.0F, -2.8F)	
IRON_AXE = "iron_axe", properties -> new AxeItem(ToolMaterial.IRON, 6.0F, -3.1F, properties)	
IRON_HOE = "iron_hoe", properties -> new HoeItem(ToolMaterial.IRON, -2.0F, -1.0F, properties)	
DIAMOND_SWORD = "diamond_sword", new Item.Properties().sword(ToolMaterial.DIAMOND, 3.0F, -2.4F)	
DIAMOND_SHOVEL = "diamond_shovel", properties -> new ShovelItem(ToolMaterial.DIAMOND, 1.5F, -3.0F, properties)	
DIAMOND_PICKAXE = "diamond_pickaxe", new Item.Properties().pickaxe(ToolMaterial.DIAMOND, 1.0F, -2.8F)	
DIAMOND_AXE = "diamond_axe", properties -> new AxeItem(ToolMaterial.DIAMOND, 5.0F, -3.0F, properties)	
DIAMOND_HOE = "diamond_hoe", properties -> new HoeItem(ToolMaterial.DIAMOND, -3.0F, 0.0F, properties)	
NETHERITE_SWORD = "netherite_sword", new Item.Properties().sword(ToolMaterial.NETHERITE, 3.0F, -2.4F).fireResistant()	
NETHERITE_SHOVEL = "netherite_shovel", properties -> new ShovelItem(ToolMaterial.NETHERITE, 1.5F, -3.0F, properties), new Item.Properties().fireResistant()		
NETHERITE_PICKAXE = "netherite_pickaxe", new Item.Properties().pickaxe(ToolMaterial.NETHERITE, 1.0F, -2.8F).fireResistant()		
NETHERITE_AXE = "netherite_axe", properties -> new AxeItem(ToolMaterial.NETHERITE, 5.0F, -3.0F, properties), new Item.Properties().fireResistant()		
NETHERITE_HOE = "netherite_hoe", properties -> new HoeItem(ToolMaterial.NETHERITE, -4.0F, 0.0F, properties), new Item.Properties().fireResistant()		
STICK = "stick"	
MUSHROOM_STEW = "mushroom_stew", new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).usingConvertsTo(BOWL)	
STRING = "string", createBlockItemWithCustomItemName(Blocks.TRIPWIRE)	
FEATHER = "feather"	
GUNPOWDER = "gunpowder"	
WHEAT_SEEDS = "wheat_seeds", createBlockItemWithCustomItemName(Blocks.WHEAT)	
WHEAT = "wheat"	
BREAD = "bread", new Item.Properties().food(Foods.BREAD)	
LEATHER_HELMET = "leather_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.LEATHER, ArmorType.HELMET)	
LEATHER_CHESTPLATE = "leather_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.LEATHER, ArmorType.CHESTPLATE)		
LEATHER_LEGGINGS = "leather_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.LEATHER, ArmorType.LEGGINGS)	
LEATHER_BOOTS = "leather_boots", new Item.Properties().humanoidArmor(ArmorMaterials.LEATHER, ArmorType.BOOTS)	
CHAINMAIL_HELMET = "chainmail_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.CHAINMAIL, ArmorType.HELMET).rarity(Rarity.UNCOMMON)		
CHAINMAIL_CHESTPLATE = "chainmail_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.CHAINMAIL, ArmorType.CHESTPLATE).rarity(Rarity.UNCOMMON)		
CHAINMAIL_LEGGINGS = "chainmail_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.CHAINMAIL, ArmorType.LEGGINGS).rarity(Rarity.UNCOMMON)		
CHAINMAIL_BOOTS = "chainmail_boots", new Item.Properties().humanoidArmor(ArmorMaterials.CHAINMAIL, ArmorType.BOOTS).rarity(Rarity.UNCOMMON)		
IRON_HELMET = "iron_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.IRON, ArmorType.HELMET)	
IRON_CHESTPLATE = "iron_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.IRON, ArmorType.CHESTPLATE)	
IRON_LEGGINGS = "iron_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.IRON, ArmorType.LEGGINGS)	
IRON_BOOTS = "iron_boots", new Item.Properties().humanoidArmor(ArmorMaterials.IRON, ArmorType.BOOTS)	
DIAMOND_HELMET = "diamond_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.DIAMOND, ArmorType.HELMET)	
DIAMOND_CHESTPLATE = "diamond_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.DIAMOND, ArmorType.CHESTPLATE)		
DIAMOND_LEGGINGS = "diamond_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.DIAMOND, ArmorType.LEGGINGS)	
DIAMOND_BOOTS = "diamond_boots", new Item.Properties().humanoidArmor(ArmorMaterials.DIAMOND, ArmorType.BOOTS)	
GOLDEN_HELMET = "golden_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.GOLD, ArmorType.HELMET)	
GOLDEN_CHESTPLATE = "golden_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.GOLD, ArmorType.CHESTPLATE)	
GOLDEN_LEGGINGS = "golden_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.GOLD, ArmorType.LEGGINGS)	
GOLDEN_BOOTS = "golden_boots", new Item.Properties().humanoidArmor(ArmorMaterials.GOLD, ArmorType.BOOTS)	
NETHERITE_HELMET = "netherite_helmet", new Item.Properties().humanoidArmor(ArmorMaterials.NETHERITE, ArmorType.HELMET).fireResistant()		
NETHERITE_CHESTPLATE = "netherite_chestplate", new Item.Properties().humanoidArmor(ArmorMaterials.NETHERITE, ArmorType.CHESTPLATE).fireResistant()		
NETHERITE_LEGGINGS = "netherite_leggings", new Item.Properties().humanoidArmor(ArmorMaterials.NETHERITE, ArmorType.LEGGINGS).fireResistant()		
NETHERITE_BOOTS = "netherite_boots", new Item.Properties().humanoidArmor(ArmorMaterials.NETHERITE, ArmorType.BOOTS).fireResistant()		
FLINT = "flint"	
PORKCHOP = "porkchop", new Item.Properties().food(Foods.PORKCHOP)	
COOKED_PORKCHOP = "cooked_porkchop", new Item.Properties().food(Foods.COOKED_PORKCHOP)	
PAINTING = "painting", properties -> new HangingEntityItem(EntityType.PAINTING, properties)	
GOLDEN_APPLE = "golden_apple", new Item.Properties().food(Foods.GOLDEN_APPLE, Consumables.GOLDEN_APPLE)	
ENCHANTED_GOLDEN_APPLE = "enchanted_golden_apple",new Item.Properties()	.rarity(Rarity.RARE)	.food(Foods.ENCHANTED_GOLDEN_APPLE, Consumables.ENCHANTED_GOLDEN_APPLE)	.component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
OAK_SIGN = Blocks.OAK_SIGN, (block, properties) -> new SignItem(block, Blocks.OAK_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
SPRUCE_SIGN = Blocks.SPRUCE_SIGN, (block, properties) -> new SignItem(block, Blocks.SPRUCE_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
BIRCH_SIGN = Blocks.BIRCH_SIGN, (block, properties) -> new SignItem(block, Blocks.BIRCH_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
JUNGLE_SIGN = Blocks.JUNGLE_SIGN, (block, properties) -> new SignItem(block, Blocks.JUNGLE_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
ACACIA_SIGN = Blocks.ACACIA_SIGN, (block, properties) -> new SignItem(block, Blocks.ACACIA_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
CHERRY_SIGN = Blocks.CHERRY_SIGN, (block, properties) -> new SignItem(block, Blocks.CHERRY_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
DARK_OAK_SIGN = Blocks.DARK_OAK_SIGN, (block, properties) -> new SignItem(block, Blocks.DARK_OAK_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
PALE_OAK_SIGN = Blocks.PALE_OAK_SIGN, (block, properties) -> new SignItem(block, Blocks.PALE_OAK_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
MANGROVE_SIGN = Blocks.MANGROVE_SIGN, (block, properties) -> new SignItem(block, Blocks.MANGROVE_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
BAMBOO_SIGN = Blocks.BAMBOO_SIGN, (block, properties) -> new SignItem(block, Blocks.BAMBOO_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
CRIMSON_SIGN = Blocks.CRIMSON_SIGN, (block, properties) -> new SignItem(block, Blocks.CRIMSON_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
WARPED_SIGN = Blocks.WARPED_SIGN, (block, properties) -> new SignItem(block, Blocks.WARPED_WALL_SIGN, properties), new Item.Properties().stacksTo(16)		
OAK_HANGING_SIGN = Blocks.OAK_HANGING_SIGN, (block, properties) -> new HangingSignItem(block, Blocks.OAK_WALL_HANGING_SIGN, properties), new Item.Properties().stacksTo(16)		
SPRUCE_HANGING_SIGN = Blocks.SPRUCE_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.SPRUCE_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
BIRCH_HANGING_SIGN = Blocks.BIRCH_HANGING_SIGN, (block, properties) -> new HangingSignItem(block, Blocks.BIRCH_WALL_HANGING_SIGN, properties), new Item.Properties().stacksTo(16)		
JUNGLE_HANGING_SIGN = Blocks.JUNGLE_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.JUNGLE_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
ACACIA_HANGING_SIGN = Blocks.ACACIA_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.ACACIA_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
CHERRY_HANGING_SIGN = Blocks.CHERRY_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.CHERRY_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
DARK_OAK_HANGING_SIGN = Blocks.DARK_OAK_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.DARK_OAK_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
PALE_OAK_HANGING_SIGN = Blocks.PALE_OAK_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.PALE_OAK_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
MANGROVE_HANGING_SIGN = Blocks.MANGROVE_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.MANGROVE_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
BAMBOO_HANGING_SIGN = Blocks.BAMBOO_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.BAMBOO_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
CRIMSON_HANGING_SIGN = Blocks.CRIMSON_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.CRIMSON_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
WARPED_HANGING_SIGN = Blocks.WARPED_HANGING_SIGN,(block, properties) -> new HangingSignItem(block, Blocks.WARPED_WALL_HANGING_SIGN, properties),new Item.Properties().stacksTo(16)		
BUCKET = "bucket", properties -> new BucketItem(Fluids.EMPTY, properties), new Item.Properties().stacksTo(16)	
WATER_BUCKET = "water_bucket", properties -> new BucketItem(Fluids.WATER, properties), new Item.Properties().craftRemainder(BUCKET).stacksTo(1)		
LAVA_BUCKET = "lava_bucket", properties -> new BucketItem(Fluids.LAVA, properties), new Item.Properties().craftRemainder(BUCKET).stacksTo(1)		
POWDER_SNOW_BUCKET = "powder_snow_bucket",properties -> new SolidBucketItem(Blocks.POWDER_SNOW, SoundEvents.BUCKET_EMPTY_POWDER_SNOW, properties),new Item.Properties().stacksTo(1).useItemDescriptionPrefix()		
SNOWBALL = "snowball", SnowballItem::new, new Item.Properties().stacksTo(16)	
LEATHER = "leather"	
MILK_BUCKET = "milk_bucket", new Item.Properties().craftRemainder(BUCKET).component(DataComponents.CONSUMABLE, Consumables.MILK_BUCKET).usingConvertsTo(BUCKET).stacksTo(1)		
PUFFERFISH_BUCKET = "pufferfish_bucket",properties -> new MobBucketItem(EntityType.PUFFERFISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
SALMON_BUCKET = "salmon_bucket",properties -> new MobBucketItem(EntityType.SALMON, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
COD_BUCKET = "cod_bucket",properties -> new MobBucketItem(EntityType.COD, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
TROPICAL_FISH_BUCKET = "tropical_fish_bucket",properties -> new MobBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, SoundEvents.BUCKET_EMPTY_FISH, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
AXOLOTL_BUCKET = "axolotl_bucket",properties -> new MobBucketItem(EntityType.AXOLOTL, Fluids.WATER, SoundEvents.BUCKET_EMPTY_AXOLOTL, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
TADPOLE_BUCKET = "tadpole_bucket",properties -> new MobBucketItem(EntityType.TADPOLE, Fluids.WATER, SoundEvents.BUCKET_EMPTY_TADPOLE, properties),new Item.Properties().stacksTo(1).component(DataComponents.BUCKET_ENTITY_DATA, CustomData.EMPTY)		
BRICK = "brick"	
CLAY_BALL = "clay_ball"	
DRIED_KELP_BLOCK = Blocks.DRIED_KELP_BLOCK	
PAPER = "paper"	
BOOK = "book", new Item.Properties().enchantable(1)	
SLIME_BALL = "slime_ball"	
EGG = "egg", EggItem::new, new Item.Properties().stacksTo(16).component(DataComponents.CHICKEN_VARIANT, new EitherHolder<>(ChickenVariants.TEMPERATE))		
BLUE_EGG = "blue_egg", EggItem::new, new Item.Properties().stacksTo(16).component(DataComponents.CHICKEN_VARIANT, new EitherHolder<>(ChickenVariants.COLD))		
BROWN_EGG = "brown_egg", EggItem::new, new Item.Properties().stacksTo(16).component(DataComponents.CHICKEN_VARIANT, new EitherHolder<>(ChickenVariants.WARM))		
COMPASS = "compass", CompassItem::new	
RECOVERY_COMPASS = "recovery_compass", new Item.Properties().rarity(Rarity.UNCOMMON)	
BUNDLE = "bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
WHITE_BUNDLE = "white_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
ORANGE_BUNDLE = "orange_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
MAGENTA_BUNDLE = "magenta_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
LIGHT_BLUE_BUNDLE = "light_blue_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
YELLOW_BUNDLE = "yellow_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
LIME_BUNDLE = "lime_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
PINK_BUNDLE = "pink_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
GRAY_BUNDLE = "gray_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
LIGHT_GRAY_BUNDLE = "light_gray_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
CYAN_BUNDLE = "cyan_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
PURPLE_BUNDLE = "purple_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
BLUE_BUNDLE = "blue_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
BROWN_BUNDLE = "brown_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
GREEN_BUNDLE = "green_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
RED_BUNDLE = "red_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
BLACK_BUNDLE = "black_bundle", BundleItem::new, new Item.Properties().stacksTo(1).component(DataComponents.BUNDLE_CONTENTS, BundleContents.EMPTY)		
FISHING_ROD = "fishing_rod", FishingRodItem::new, new Item.Properties().durability(64).enchantable(1)	
CLOCK = "clock"	
SPYGLASS = "spyglass", SpyglassItem::new, new Item.Properties().stacksTo(1)	
GLOWSTONE_DUST = "glowstone_dust"	
COD = "cod", new Item.Properties().food(Foods.COD)	
SALMON = "salmon", new Item.Properties().food(Foods.SALMON)	
TROPICAL_FISH = "tropical_fish", new Item.Properties().food(Foods.TROPICAL_FISH)	
PUFFERFISH = "pufferfish", new Item.Properties().food(Foods.PUFFERFISH, Consumables.PUFFERFISH)	
COOKED_COD = "cooked_cod", new Item.Properties().food(Foods.COOKED_COD)	
COOKED_SALMON = "cooked_salmon", new Item.Properties().food(Foods.COOKED_SALMON)	
INK_SAC = "ink_sac", InkSacItem::new	
GLOW_INK_SAC = "glow_ink_sac", GlowInkSacItem::new	
COCOA_BEANS = "cocoa_beans", createBlockItemWithCustomItemName(Blocks.COCOA)	
WHITE_DYE = "white_dye", properties -> new DyeItem(DyeColor.WHITE, properties)	
ORANGE_DYE = "orange_dye", properties -> new DyeItem(DyeColor.ORANGE, properties)	
MAGENTA_DYE = "magenta_dye", properties -> new DyeItem(DyeColor.MAGENTA, properties)	
LIGHT_BLUE_DYE = "light_blue_dye", properties -> new DyeItem(DyeColor.LIGHT_BLUE, properties)	
YELLOW_DYE = "yellow_dye", properties -> new DyeItem(DyeColor.YELLOW, properties)	
LIME_DYE = "lime_dye", properties -> new DyeItem(DyeColor.LIME, properties)	
PINK_DYE = "pink_dye", properties -> new DyeItem(DyeColor.PINK, properties)	
GRAY_DYE = "gray_dye", properties -> new DyeItem(DyeColor.GRAY, properties)	
LIGHT_GRAY_DYE = "light_gray_dye", properties -> new DyeItem(DyeColor.LIGHT_GRAY, properties)	
CYAN_DYE = "cyan_dye", properties -> new DyeItem(DyeColor.CYAN, properties)	
PURPLE_DYE = "purple_dye", properties -> new DyeItem(DyeColor.PURPLE, properties)	
BLUE_DYE = "blue_dye", properties -> new DyeItem(DyeColor.BLUE, properties)	
BROWN_DYE = "brown_dye", properties -> new DyeItem(DyeColor.BROWN, properties)	
GREEN_DYE = "green_dye", properties -> new DyeItem(DyeColor.GREEN, properties)	
RED_DYE = "red_dye", properties -> new DyeItem(DyeColor.RED, properties)	
BLACK_DYE = "black_dye", properties -> new DyeItem(DyeColor.BLACK, properties)	
BONE_MEAL = "bone_meal", BoneMealItem::new	
BONE = "bone"	
SUGAR = "sugar"	
CAKE = Blocks.CAKE, new Item.Properties().stacksTo(1)	
WHITE_BED = Blocks.WHITE_BED, BedItem::new, new Item.Properties().stacksTo(1)	
ORANGE_BED = Blocks.ORANGE_BED, BedItem::new, new Item.Properties().stacksTo(1)	
MAGENTA_BED = Blocks.MAGENTA_BED, BedItem::new, new Item.Properties().stacksTo(1)	
LIGHT_BLUE_BED = Blocks.LIGHT_BLUE_BED, BedItem::new, new Item.Properties().stacksTo(1)	
YELLOW_BED = Blocks.YELLOW_BED, BedItem::new, new Item.Properties().stacksTo(1)	
LIME_BED = Blocks.LIME_BED, BedItem::new, new Item.Properties().stacksTo(1)	
PINK_BED = Blocks.PINK_BED, BedItem::new, new Item.Properties().stacksTo(1)	
GRAY_BED = Blocks.GRAY_BED, BedItem::new, new Item.Properties().stacksTo(1)	
LIGHT_GRAY_BED = Blocks.LIGHT_GRAY_BED, BedItem::new, new Item.Properties().stacksTo(1)	
CYAN_BED = Blocks.CYAN_BED, BedItem::new, new Item.Properties().stacksTo(1)	
PURPLE_BED = Blocks.PURPLE_BED, BedItem::new, new Item.Properties().stacksTo(1)	
BLUE_BED = Blocks.BLUE_BED, BedItem::new, new Item.Properties().stacksTo(1)	
BROWN_BED = Blocks.BROWN_BED, BedItem::new, new Item.Properties().stacksTo(1)	
GREEN_BED = Blocks.GREEN_BED, BedItem::new, new Item.Properties().stacksTo(1)	
RED_BED = Blocks.RED_BED, BedItem::new, new Item.Properties().stacksTo(1)	
BLACK_BED = Blocks.BLACK_BED, BedItem::new, new Item.Properties().stacksTo(1)	
COOKIE = "cookie", new Item.Properties().food(Foods.COOKIE)	
CRAFTER = Blocks.CRAFTER, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
FILLED_MAP = "filled_map",MapItem::new,new Item.Properties().component(DataComponents.MAP_COLOR, MapItemColor.DEFAULT).component(DataComponents.MAP_DECORATIONS, MapDecorations.EMPTY)		
SHEARS = "shears", ShearsItem::new, new Item.Properties().durability(238).component(DataComponents.TOOL, ShearsItem.createToolProperties())		
MELON_SLICE = "melon_slice", new Item.Properties().food(Foods.MELON_SLICE)	
DRIED_KELP = "dried_kelp", new Item.Properties().food(Foods.DRIED_KELP, Consumables.DRIED_KELP)	
PUMPKIN_SEEDS = net.minecraft.references.Items.PUMPKIN_SEEDS, createBlockItemWithCustomItemName(Blocks.PUMPKIN_STEM)	
MELON_SEEDS = net.minecraft.references.Items.MELON_SEEDS, createBlockItemWithCustomItemName(Blocks.MELON_STEM)	
BEEF = "beef", new Item.Properties().food(Foods.BEEF)	
COOKED_BEEF = "cooked_beef", new Item.Properties().food(Foods.COOKED_BEEF)	
CHICKEN = "chicken", new Item.Properties().food(Foods.CHICKEN, Consumables.CHICKEN)	
COOKED_CHICKEN = "cooked_chicken", new Item.Properties().food(Foods.COOKED_CHICKEN)	
ROTTEN_FLESH = "rotten_flesh", new Item.Properties().food(Foods.ROTTEN_FLESH, Consumables.ROTTEN_FLESH)	
ENDER_PEARL = "ender_pearl", EnderpearlItem::new, new Item.Properties().stacksTo(16).useCooldown(1.0F)	
BLAZE_ROD = "blaze_rod"	
GHAST_TEAR = "ghast_tear"	
GOLD_NUGGET = "gold_nugget"	
NETHER_WART = "nether_wart", createBlockItemWithCustomItemName(Blocks.NETHER_WART)	
GLASS_BOTTLE = "glass_bottle", BottleItem::new	
POTION = "potion",PotionItem::new,new Item.Properties()	.stacksTo(1)	.component(DataComponents.POTION_CONTENTS, PotionContents.EMPTY)	.component(DataComponents.CONSUMABLE, Consumables.DEFAULT_DRINK)	.usingConvertsTo(GLASS_BOTTLE)		
SPIDER_EYE = "spider_eye", new Item.Properties().food(Foods.SPIDER_EYE, Consumables.SPIDER_EYE)	
FERMENTED_SPIDER_EYE = "fermented_spider_eye"	
BLAZE_POWDER = "blaze_powder"	
MAGMA_CREAM = "magma_cream"	
BREWING_STAND = Blocks.BREWING_STAND, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
CAULDRON = Blocks.CAULDRON, Blocks.WATER_CAULDRON, Blocks.LAVA_CAULDRON, Blocks.POWDER_SNOW_CAULDRON	
ENDER_EYE = "ender_eye", EnderEyeItem::new	
GLISTERING_MELON_SLICE = "glistering_melon_slice"	
ARMADILLO_SPAWN_EGG = "armadillo_spawn_egg", properties -> new SpawnEggItem(EntityType.ARMADILLO, properties)	
ALLAY_SPAWN_EGG = "allay_spawn_egg", properties -> new SpawnEggItem(EntityType.ALLAY, properties)	
AXOLOTL_SPAWN_EGG = "axolotl_spawn_egg", properties -> new SpawnEggItem(EntityType.AXOLOTL, properties)	
BAT_SPAWN_EGG = "bat_spawn_egg", properties -> new SpawnEggItem(EntityType.BAT, properties)	
BEE_SPAWN_EGG = "bee_spawn_egg", properties -> new SpawnEggItem(EntityType.BEE, properties)	
BLAZE_SPAWN_EGG = "blaze_spawn_egg", properties -> new SpawnEggItem(EntityType.BLAZE, properties)	
BOGGED_SPAWN_EGG = "bogged_spawn_egg", properties -> new SpawnEggItem(EntityType.BOGGED, properties)	
BREEZE_SPAWN_EGG = "breeze_spawn_egg", properties -> new SpawnEggItem(EntityType.BREEZE, properties)	
CAT_SPAWN_EGG = "cat_spawn_egg", properties -> new SpawnEggItem(EntityType.CAT, properties)	
CAMEL_SPAWN_EGG = "camel_spawn_egg", properties -> new SpawnEggItem(EntityType.CAMEL, properties)	
CAVE_SPIDER_SPAWN_EGG = "cave_spider_spawn_egg", properties -> new SpawnEggItem(EntityType.CAVE_SPIDER, properties)	
CHICKEN_SPAWN_EGG = "chicken_spawn_egg", properties -> new SpawnEggItem(EntityType.CHICKEN, properties)	
COD_SPAWN_EGG = "cod_spawn_egg", properties -> new SpawnEggItem(EntityType.COD, properties)	
COW_SPAWN_EGG = "cow_spawn_egg", properties -> new SpawnEggItem(EntityType.COW, properties)	
CREEPER_SPAWN_EGG = "creeper_spawn_egg", properties -> new SpawnEggItem(EntityType.CREEPER, properties)	
DOLPHIN_SPAWN_EGG = "dolphin_spawn_egg", properties -> new SpawnEggItem(EntityType.DOLPHIN, properties)	
DONKEY_SPAWN_EGG = "donkey_spawn_egg", properties -> new SpawnEggItem(EntityType.DONKEY, properties)	
DROWNED_SPAWN_EGG = "drowned_spawn_egg", properties -> new SpawnEggItem(EntityType.DROWNED, properties)	
ELDER_GUARDIAN_SPAWN_EGG = "elder_guardian_spawn_egg", properties -> new SpawnEggItem(EntityType.ELDER_GUARDIAN, properties)		
ENDER_DRAGON_SPAWN_EGG = "ender_dragon_spawn_egg", properties -> new SpawnEggItem(EntityType.ENDER_DRAGON, properties)	
ENDERMAN_SPAWN_EGG = "enderman_spawn_egg", properties -> new SpawnEggItem(EntityType.ENDERMAN, properties)	
ENDERMITE_SPAWN_EGG = "endermite_spawn_egg", properties -> new SpawnEggItem(EntityType.ENDERMITE, properties)	
EVOKER_SPAWN_EGG = "evoker_spawn_egg", properties -> new SpawnEggItem(EntityType.EVOKER, properties)	
FOX_SPAWN_EGG = "fox_spawn_egg", properties -> new SpawnEggItem(EntityType.FOX, properties)	
FROG_SPAWN_EGG = "frog_spawn_egg", properties -> new SpawnEggItem(EntityType.FROG, properties)	
GHAST_SPAWN_EGG = "ghast_spawn_egg", properties -> new SpawnEggItem(EntityType.GHAST, properties)	
GLOW_SQUID_SPAWN_EGG = "glow_squid_spawn_egg", properties -> new SpawnEggItem(EntityType.GLOW_SQUID, properties)	
GOAT_SPAWN_EGG = "goat_spawn_egg", properties -> new SpawnEggItem(EntityType.GOAT, properties)	
GUARDIAN_SPAWN_EGG = "guardian_spawn_egg", properties -> new SpawnEggItem(EntityType.GUARDIAN, properties)	
HOGLIN_SPAWN_EGG = "hoglin_spawn_egg", properties -> new SpawnEggItem(EntityType.HOGLIN, properties)	
HORSE_SPAWN_EGG = "horse_spawn_egg", properties -> new SpawnEggItem(EntityType.HORSE, properties)	
HUSK_SPAWN_EGG = "husk_spawn_egg", properties -> new SpawnEggItem(EntityType.HUSK, properties)	
IRON_GOLEM_SPAWN_EGG = "iron_golem_spawn_egg", properties -> new SpawnEggItem(EntityType.IRON_GOLEM, properties)	
LLAMA_SPAWN_EGG = "llama_spawn_egg", properties -> new SpawnEggItem(EntityType.LLAMA, properties)	
MAGMA_CUBE_SPAWN_EGG = "magma_cube_spawn_egg", properties -> new SpawnEggItem(EntityType.MAGMA_CUBE, properties)	
MOOSHROOM_SPAWN_EGG = "mooshroom_spawn_egg", properties -> new SpawnEggItem(EntityType.MOOSHROOM, properties)	
MULE_SPAWN_EGG = "mule_spawn_egg", properties -> new SpawnEggItem(EntityType.MULE, properties)	
OCELOT_SPAWN_EGG = "ocelot_spawn_egg", properties -> new SpawnEggItem(EntityType.OCELOT, properties)	
PANDA_SPAWN_EGG = "panda_spawn_egg", properties -> new SpawnEggItem(EntityType.PANDA, properties)	
PARROT_SPAWN_EGG = "parrot_spawn_egg", properties -> new SpawnEggItem(EntityType.PARROT, properties)	
PHANTOM_SPAWN_EGG = "phantom_spawn_egg", properties -> new SpawnEggItem(EntityType.PHANTOM, properties)	
PIG_SPAWN_EGG = "pig_spawn_egg", properties -> new SpawnEggItem(EntityType.PIG, properties)	
PIGLIN_SPAWN_EGG = "piglin_spawn_egg", properties -> new SpawnEggItem(EntityType.PIGLIN, properties)	
PIGLIN_BRUTE_SPAWN_EGG = "piglin_brute_spawn_egg", properties -> new SpawnEggItem(EntityType.PIGLIN_BRUTE, properties)	
PILLAGER_SPAWN_EGG = "pillager_spawn_egg", properties -> new SpawnEggItem(EntityType.PILLAGER, properties)	
POLAR_BEAR_SPAWN_EGG = "polar_bear_spawn_egg", properties -> new SpawnEggItem(EntityType.POLAR_BEAR, properties)	
PUFFERFISH_SPAWN_EGG = "pufferfish_spawn_egg", properties -> new SpawnEggItem(EntityType.PUFFERFISH, properties)	
RABBIT_SPAWN_EGG = "rabbit_spawn_egg", properties -> new SpawnEggItem(EntityType.RABBIT, properties)	
RAVAGER_SPAWN_EGG = "ravager_spawn_egg", properties -> new SpawnEggItem(EntityType.RAVAGER, properties)	
SALMON_SPAWN_EGG = "salmon_spawn_egg", properties -> new SpawnEggItem(EntityType.SALMON, properties)	
SHEEP_SPAWN_EGG = "sheep_spawn_egg", properties -> new SpawnEggItem(EntityType.SHEEP, properties)	
SHULKER_SPAWN_EGG = "shulker_spawn_egg", properties -> new SpawnEggItem(EntityType.SHULKER, properties)	
SILVERFISH_SPAWN_EGG = "silverfish_spawn_egg", properties -> new SpawnEggItem(EntityType.SILVERFISH, properties)	
SKELETON_SPAWN_EGG = "skeleton_spawn_egg", properties -> new SpawnEggItem(EntityType.SKELETON, properties)	
SKELETON_HORSE_SPAWN_EGG = "skeleton_horse_spawn_egg", properties -> new SpawnEggItem(EntityType.SKELETON_HORSE, properties)		
SLIME_SPAWN_EGG = "slime_spawn_egg", properties -> new SpawnEggItem(EntityType.SLIME, properties)	
SNIFFER_SPAWN_EGG = "sniffer_spawn_egg", properties -> new SpawnEggItem(EntityType.SNIFFER, properties)	
SNOW_GOLEM_SPAWN_EGG = "snow_golem_spawn_egg", properties -> new SpawnEggItem(EntityType.SNOW_GOLEM, properties)	
SPIDER_SPAWN_EGG = "spider_spawn_egg", properties -> new SpawnEggItem(EntityType.SPIDER, properties)	
SQUID_SPAWN_EGG = "squid_spawn_egg", properties -> new SpawnEggItem(EntityType.SQUID, properties)	
STRAY_SPAWN_EGG = "stray_spawn_egg", properties -> new SpawnEggItem(EntityType.STRAY, properties)	
STRIDER_SPAWN_EGG = "strider_spawn_egg", properties -> new SpawnEggItem(EntityType.STRIDER, properties)	
TADPOLE_SPAWN_EGG = "tadpole_spawn_egg", properties -> new SpawnEggItem(EntityType.TADPOLE, properties)	
TRADER_LLAMA_SPAWN_EGG = "trader_llama_spawn_egg", properties -> new SpawnEggItem(EntityType.TRADER_LLAMA, properties)	
TROPICAL_FISH_SPAWN_EGG = "tropical_fish_spawn_egg", properties -> new SpawnEggItem(EntityType.TROPICAL_FISH, properties)		
TURTLE_SPAWN_EGG = "turtle_spawn_egg", properties -> new SpawnEggItem(EntityType.TURTLE, properties)	
VEX_SPAWN_EGG = "vex_spawn_egg", properties -> new SpawnEggItem(EntityType.VEX, properties)	
VILLAGER_SPAWN_EGG = "villager_spawn_egg", properties -> new SpawnEggItem(EntityType.VILLAGER, properties)	
VINDICATOR_SPAWN_EGG = "vindicator_spawn_egg", properties -> new SpawnEggItem(EntityType.VINDICATOR, properties)	
WANDERING_TRADER_SPAWN_EGG = "wandering_trader_spawn_egg", properties -> new SpawnEggItem(EntityType.WANDERING_TRADER, properties)		
WARDEN_SPAWN_EGG = "warden_spawn_egg", properties -> new SpawnEggItem(EntityType.WARDEN, properties)	
WITCH_SPAWN_EGG = "witch_spawn_egg", properties -> new SpawnEggItem(EntityType.WITCH, properties)	
WITHER_SPAWN_EGG = "wither_spawn_egg", properties -> new SpawnEggItem(EntityType.WITHER, properties)	
WITHER_SKELETON_SPAWN_EGG = "wither_skeleton_spawn_egg", properties -> new SpawnEggItem(EntityType.WITHER_SKELETON, properties)		
WOLF_SPAWN_EGG = "wolf_spawn_egg", properties -> new SpawnEggItem(EntityType.WOLF, properties)	
ZOGLIN_SPAWN_EGG = "zoglin_spawn_egg", properties -> new SpawnEggItem(EntityType.ZOGLIN, properties)	
CREAKING_SPAWN_EGG = "creaking_spawn_egg", properties -> new SpawnEggItem(EntityType.CREAKING, properties)	
ZOMBIE_SPAWN_EGG = "zombie_spawn_egg", properties -> new SpawnEggItem(EntityType.ZOMBIE, properties)	
ZOMBIE_HORSE_SPAWN_EGG = "zombie_horse_spawn_egg", properties -> new SpawnEggItem(EntityType.ZOMBIE_HORSE, properties)	
ZOMBIE_VILLAGER_SPAWN_EGG = "zombie_villager_spawn_egg", properties -> new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, properties)		
ZOMBIFIED_PIGLIN_SPAWN_EGG = "zombified_piglin_spawn_egg", properties -> new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, properties)		
EXPERIENCE_BOTTLE = "experience_bottle", ExperienceBottleItem::new, new Item.Properties().rarity(Rarity.UNCOMMON).component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
FIRE_CHARGE = "fire_charge", FireChargeItem::new	
WIND_CHARGE = "wind_charge", WindChargeItem::new, new Item.Properties().useCooldown(0.5F)	
WRITABLE_BOOK = "writable_book", WritableBookItem::new, new Item.Properties().stacksTo(1).component(DataComponents.WRITABLE_BOOK_CONTENT, WritableBookContent.EMPTY)		
WRITTEN_BOOK = "written_book", WrittenBookItem::new, new Item.Properties().stacksTo(16).component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
BREEZE_ROD = "breeze_rod"	
MACE = "mace",MaceItem::new,new Item.Properties()	.rarity(Rarity.EPIC)	.durability(500)	.component(DataComponents.TOOL, MaceItem.createToolProperties())	.repairable(BREEZE_ROD)	.attributes(MaceItem.createAttributes())	.enchantable(15)	.component(DataComponents.WEAPON, new Weapon(1))		
ITEM_FRAME = "item_frame", properties -> new ItemFrameItem(EntityType.ITEM_FRAME, properties)	
GLOW_ITEM_FRAME = "glow_item_frame", properties -> new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, properties)	
FLOWER_POT = Blocks.FLOWER_POT	
CARROT = "carrot", createBlockItemWithCustomItemName(Blocks.CARROTS), new Item.Properties().food(Foods.CARROT)	
POTATO = "potato", createBlockItemWithCustomItemName(Blocks.POTATOES), new Item.Properties().food(Foods.POTATO)	
BAKED_POTATO = "baked_potato", new Item.Properties().food(Foods.BAKED_POTATO)	
POISONOUS_POTATO = "poisonous_potato", new Item.Properties().food(Foods.POISONOUS_POTATO, Consumables.POISONOUS_POTATO)	
MAP = "map", EmptyMapItem::new	
GOLDEN_CARROT = "golden_carrot", new Item.Properties().food(Foods.GOLDEN_CARROT)	
SKELETON_SKULL = Blocks.SKELETON_SKULL,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.SKELETON_WALL_SKULL, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.UNCOMMON).equippableUnswappable(EquipmentSlot.HEAD)		
WITHER_SKELETON_SKULL = Blocks.WITHER_SKELETON_SKULL,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.WITHER_SKELETON_WALL_SKULL, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.RARE).equippableUnswappable(EquipmentSlot.HEAD)		
PLAYER_HEAD = Blocks.PLAYER_HEAD,(block, properties) -> new PlayerHeadItem(block, Blocks.PLAYER_WALL_HEAD, properties),new Item.Properties().rarity(Rarity.UNCOMMON).equippableUnswappable(EquipmentSlot.HEAD)		
ZOMBIE_HEAD = Blocks.ZOMBIE_HEAD,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.ZOMBIE_WALL_HEAD, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.UNCOMMON).equippableUnswappable(EquipmentSlot.HEAD)		
CREEPER_HEAD = Blocks.CREEPER_HEAD,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.CREEPER_WALL_HEAD, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.UNCOMMON).equippableUnswappable(EquipmentSlot.HEAD)		
DRAGON_HEAD = Blocks.DRAGON_HEAD,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.DRAGON_WALL_HEAD, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.EPIC).equippableUnswappable(EquipmentSlot.HEAD)		
PIGLIN_HEAD = Blocks.PIGLIN_HEAD,(block, properties) -> new StandingAndWallBlockItem(block, Blocks.PIGLIN_WALL_HEAD, Direction.DOWN, properties),new Item.Properties().rarity(Rarity.UNCOMMON).equippableUnswappable(EquipmentSlot.HEAD)		
NETHER_STAR = "nether_star",new Item.Properties()	.rarity(Rarity.RARE)	.component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)	.component(DataComponents.DAMAGE_RESISTANT, new DamageResistant(DamageTypeTags.IS_EXPLOSION))		
PUMPKIN_PIE = "pumpkin_pie", new Item.Properties().food(Foods.PUMPKIN_PIE)	
FIREWORK_ROCKET = "firework_rocket", FireworkRocketItem::new, new Item.Properties().component(DataComponents.FIREWORKS, new Fireworks(1, List.of()))		
FIREWORK_STAR = "firework_star"	
ENCHANTED_BOOK = "enchanted_book",new Item.Properties()	.stacksTo(1)	.rarity(Rarity.UNCOMMON)	.component(DataComponents.STORED_ENCHANTMENTS, ItemEnchantments.EMPTY)	.component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
NETHER_BRICK = "nether_brick"	
RESIN_BRICK = "resin_brick", new Item.Properties().trimMaterial(TrimMaterials.RESIN)	
PRISMARINE_SHARD = "prismarine_shard"	
PRISMARINE_CRYSTALS = "prismarine_crystals"	
RABBIT = "rabbit", new Item.Properties().food(Foods.RABBIT)	
COOKED_RABBIT = "cooked_rabbit", new Item.Properties().food(Foods.COOKED_RABBIT)	
RABBIT_STEW = "rabbit_stew", new Item.Properties().stacksTo(1).food(Foods.RABBIT_STEW).usingConvertsTo(BOWL)	
RABBIT_FOOT = "rabbit_foot"	
RABBIT_HIDE = "rabbit_hide"	
ARMOR_STAND = "armor_stand", ArmorStandItem::new, new Item.Properties().stacksTo(16)	
IRON_HORSE_ARMOR = "iron_horse_armor", new Item.Properties().horseArmor(ArmorMaterials.IRON)	
GOLDEN_HORSE_ARMOR = "golden_horse_armor", new Item.Properties().horseArmor(ArmorMaterials.GOLD)	
DIAMOND_HORSE_ARMOR = "diamond_horse_armor", new Item.Properties().horseArmor(ArmorMaterials.DIAMOND)	
LEATHER_HORSE_ARMOR = "leather_horse_armor", new Item.Properties().horseArmor(ArmorMaterials.LEATHER)	
LEAD = "lead", LeadItem::new	
NAME_TAG = "name_tag", NameTagItem::new	
COMMAND_BLOCK_MINECART = "command_block_minecart",properties -> new MinecartItem(EntityType.COMMAND_BLOCK_MINECART, properties),new Item.Properties().stacksTo(1).rarity(Rarity.EPIC)		
MUTTON = "mutton", new Item.Properties().food(Foods.MUTTON)	
COOKED_MUTTON = "cooked_mutton", new Item.Properties().food(Foods.COOKED_MUTTON)	
WHITE_BANNER = Blocks.WHITE_BANNER,(block, properties) -> new BannerItem(block, Blocks.WHITE_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
ORANGE_BANNER = Blocks.ORANGE_BANNER,(block, properties) -> new BannerItem(block, Blocks.ORANGE_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
MAGENTA_BANNER = Blocks.MAGENTA_BANNER,(block, properties) -> new BannerItem(block, Blocks.MAGENTA_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
LIGHT_BLUE_BANNER = Blocks.LIGHT_BLUE_BANNER,(block, properties) -> new BannerItem(block, Blocks.LIGHT_BLUE_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
YELLOW_BANNER = Blocks.YELLOW_BANNER,(block, properties) -> new BannerItem(block, Blocks.YELLOW_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
LIME_BANNER = Blocks.LIME_BANNER,(block, properties) -> new BannerItem(block, Blocks.LIME_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
PINK_BANNER = Blocks.PINK_BANNER,(block, properties) -> new BannerItem(block, Blocks.PINK_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
GRAY_BANNER = Blocks.GRAY_BANNER,(block, properties) -> new BannerItem(block, Blocks.GRAY_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
LIGHT_GRAY_BANNER = Blocks.LIGHT_GRAY_BANNER,(block, properties) -> new BannerItem(block, Blocks.LIGHT_GRAY_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
CYAN_BANNER = Blocks.CYAN_BANNER,(block, properties) -> new BannerItem(block, Blocks.CYAN_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
PURPLE_BANNER = Blocks.PURPLE_BANNER,(block, properties) -> new BannerItem(block, Blocks.PURPLE_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
BLUE_BANNER = Blocks.BLUE_BANNER,(block, properties) -> new BannerItem(block, Blocks.BLUE_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
BROWN_BANNER = Blocks.BROWN_BANNER,(block, properties) -> new BannerItem(block, Blocks.BROWN_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
GREEN_BANNER = Blocks.GREEN_BANNER,(block, properties) -> new BannerItem(block, Blocks.GREEN_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
RED_BANNER = Blocks.RED_BANNER,(block, properties) -> new BannerItem(block, Blocks.RED_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
BLACK_BANNER = Blocks.BLACK_BANNER,(block, properties) -> new BannerItem(block, Blocks.BLACK_WALL_BANNER, properties),new Item.Properties().stacksTo(16).component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)		
END_CRYSTAL = "end_crystal", EndCrystalItem::new, new Item.Properties().component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
CHORUS_FRUIT = "chorus_fruit", new Item.Properties().food(Foods.CHORUS_FRUIT, Consumables.CHORUS_FRUIT).useCooldown(1.0F)		
POPPED_CHORUS_FRUIT = "popped_chorus_fruit"	
TORCHFLOWER_SEEDS = "torchflower_seeds", createBlockItemWithCustomItemName(Blocks.TORCHFLOWER_CROP)	
PITCHER_POD = "pitcher_pod", createBlockItemWithCustomItemName(Blocks.PITCHER_CROP)	
BEETROOT = "beetroot", new Item.Properties().food(Foods.BEETROOT)	
BEETROOT_SEEDS = "beetroot_seeds", createBlockItemWithCustomItemName(Blocks.BEETROOTS)	
BEETROOT_SOUP = "beetroot_soup", new Item.Properties().stacksTo(1).food(Foods.BEETROOT_SOUP).usingConvertsTo(BOWL)	
DRAGON_BREATH = "dragon_breath", new Item.Properties().craftRemainder(GLASS_BOTTLE).rarity(Rarity.UNCOMMON)	
SPLASH_POTION = "splash_potion", SplashPotionItem::new, new Item.Properties().stacksTo(1).component(DataComponents.POTION_CONTENTS, PotionContents.EMPTY)		
SPECTRAL_ARROW = "spectral_arrow", SpectralArrowItem::new	
TIPPED_ARROW = "tipped_arrow",TippedArrowItem::new,new Item.Properties().component(DataComponents.POTION_CONTENTS, PotionContents.EMPTY).component(DataComponents.POTION_DURATION_SCALE, 0.125F)		
LINGERING_POTION = "lingering_potion",LingeringPotionItem::new,new Item.Properties().stacksTo(1).component(DataComponents.POTION_CONTENTS, PotionContents.EMPTY).component(DataComponents.POTION_DURATION_SCALE, 0.25F)		
SHIELD = "shield",ShieldItem::new,new Item.Properties()	.durability(336)	.component(DataComponents.BANNER_PATTERNS, BannerPatternLayers.EMPTY)	.repairable(ItemTags.WOODEN_TOOL_MATERIALS)	.equippableUnswappable(EquipmentSlot.OFFHAND)	.component(DataComponents.BLOCKS_ATTACKS,new BlocksAttacks(	0.25F,	1.0F,	List.of(new BlocksAttacks.DamageReduction(90.0F, Optional.empty(), 0.0F, 1.0F)),	new BlocksAttacks.ItemDamageFunction(3.0F, 1.0F, 1.0F),	Optional.of(DamageTypeTags.BYPASSES_SHIELD),	Optional.of(SoundEvents.SHIELD_BLOCK),	Optional.of(SoundEvents.SHIELD_BREAK))	)	.component(DataComponents.BREAK_SOUND, SoundEvents.SHIELD_BREAK)		
TOTEM_OF_UNDYING = "totem_of_undying", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).component(DataComponents.DEATH_PROTECTION, DeathProtection.TOTEM_OF_UNDYING)		
SHULKER_SHELL = "shulker_shell"	
IRON_NUGGET = "iron_nugget"	
KNOWLEDGE_BOOK = "knowledge_book", KnowledgeBookItem::new, new Item.Properties().stacksTo(1).rarity(Rarity.EPIC).component(DataComponents.RECIPES, List.of())		
DEBUG_STICK = "debug_stick",DebugStickItem::new,new Item.Properties()	.stacksTo(1)	.rarity(Rarity.EPIC)	.component(DataComponents.DEBUG_STICK_STATE, DebugStickState.EMPTY)	.component(DataComponents.ENCHANTMENT_GLINT_OVERRIDE, true)		
MUSIC_DISC_13 = "music_disc_13", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.THIRTEEN)		
MUSIC_DISC_CAT = "music_disc_cat", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.CAT)		
MUSIC_DISC_BLOCKS = "music_disc_blocks", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.BLOCKS)		
MUSIC_DISC_CHIRP = "music_disc_chirp", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.CHIRP)		
MUSIC_DISC_CREATOR = "music_disc_creator", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(JukeboxSongs.CREATOR)		
MUSIC_DISC_CREATOR_MUSIC_BOX = "music_disc_creator_music_box", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.CREATOR_MUSIC_BOX)		
MUSIC_DISC_FAR = "music_disc_far", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.FAR)		
MUSIC_DISC_MALL = "music_disc_mall", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.MALL)		
MUSIC_DISC_MELLOHI = "music_disc_mellohi", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.MELLOHI)		
MUSIC_DISC_STAL = "music_disc_stal", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.STAL)		
MUSIC_DISC_STRAD = "music_disc_strad", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.STRAD)		
MUSIC_DISC_WARD = "music_disc_ward", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.WARD)		
MUSIC_DISC_11 = "music_disc_11", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.ELEVEN)		
MUSIC_DISC_WAIT = "music_disc_wait", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.WAIT)		
MUSIC_DISC_OTHERSIDE = "music_disc_otherside", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(JukeboxSongs.OTHERSIDE)		
MUSIC_DISC_RELIC = "music_disc_relic", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.RELIC)		
MUSIC_DISC_5 = "music_disc_5", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.FIVE)		
MUSIC_DISC_PIGSTEP = "music_disc_pigstep", new Item.Properties().stacksTo(1).rarity(Rarity.RARE).jukeboxPlayable(JukeboxSongs.PIGSTEP)		
MUSIC_DISC_PRECIPICE = "music_disc_precipice", new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).jukeboxPlayable(JukeboxSongs.PRECIPICE)		
DISC_FRAGMENT_5 = "disc_fragment_5", DiscFragmentItem::new, new Item.Properties().rarity(Rarity.UNCOMMON)	
TRIDENT = "trident",TridentItem::new,new Item.Properties()	.rarity(Rarity.RARE)	.durability(250)	.attributes(TridentItem.createAttributes())	.component(DataComponents.TOOL, TridentItem.createToolProperties())	.enchantable(1)	.component(DataComponents.WEAPON, new Weapon(1))		
NAUTILUS_SHELL = "nautilus_shell", new Item.Properties().rarity(Rarity.UNCOMMON)	
HEART_OF_THE_SEA = "heart_of_the_sea", new Item.Properties().rarity(Rarity.UNCOMMON)	
CROSSBOW = "crossbow",CrossbowItem::new,new Item.Properties().stacksTo(1).durability(465).component(DataComponents.CHARGED_PROJECTILES, ChargedProjectiles.EMPTY).enchantable(1)		
SUSPICIOUS_STEW = "suspicious_stew",new Item.Properties()	.stacksTo(1)	.food(Foods.SUSPICIOUS_STEW)	.component(DataComponents.SUSPICIOUS_STEW_EFFECTS, SuspiciousStewEffects.EMPTY)	.usingConvertsTo(BOWL)		
LOOM = Blocks.LOOM	
FLOWER_BANNER_PATTERN = "flower_banner_pattern", new Item.Properties().stacksTo(1).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_FLOWER)		
CREEPER_BANNER_PATTERN = "creeper_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_CREEPER)		
SKULL_BANNER_PATTERN = "skull_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.RARE).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_SKULL)		
MOJANG_BANNER_PATTERN = "mojang_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.RARE).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_MOJANG)		
GLOBE_BANNER_PATTERN = "globe_banner_pattern", new Item.Properties().stacksTo(1).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_GLOBE)		
PIGLIN_BANNER_PATTERN = "piglin_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_PIGLIN)		
FLOW_BANNER_PATTERN = "flow_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.RARE).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_FLOW)		
GUSTER_BANNER_PATTERN = "guster_banner_pattern",new Item.Properties().stacksTo(1).rarity(Rarity.RARE).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_GUSTER)		
FIELD_MASONED_BANNER_PATTERN = "field_masoned_banner_pattern",new Item.Properties().stacksTo(1).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_FIELD_MASONED)		
BORDURE_INDENTED_BANNER_PATTERN = "bordure_indented_banner_pattern",new Item.Properties().stacksTo(1).component(DataComponents.PROVIDES_BANNER_PATTERNS, BannerPatternTags.PATTERN_ITEM_BORDURE_INDENTED)		
GOAT_HORN = "goat_horn",InstrumentItem::new,new Item.Properties().rarity(Rarity.UNCOMMON).stacksTo(1).component(DataComponents.INSTRUMENT, new InstrumentComponent(Instruments.PONDER_GOAT_HORN))		
COMPOSTER = Blocks.COMPOSTER	
BARREL = Blocks.BARREL, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
SMOKER = Blocks.SMOKER, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
BLAST_FURNACE = Blocks.BLAST_FURNACE, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
CARTOGRAPHY_TABLE = Blocks.CARTOGRAPHY_TABLE	
FLETCHING_TABLE = Blocks.FLETCHING_TABLE	
GRINDSTONE = Blocks.GRINDSTONE	
SMITHING_TABLE = Blocks.SMITHING_TABLE	
STONECUTTER = Blocks.STONECUTTER	
BELL = Blocks.BELL	
LANTERN = Blocks.LANTERN	
SOUL_LANTERN = Blocks.SOUL_LANTERN	
SWEET_BERRIES = "sweet_berries", createBlockItemWithCustomItemName(Blocks.SWEET_BERRY_BUSH), new Item.Properties().food(Foods.SWEET_BERRIES)		
GLOW_BERRIES = "glow_berries", createBlockItemWithCustomItemName(Blocks.CAVE_VINES), new Item.Properties().food(Foods.GLOW_BERRIES)		
CAMPFIRE = Blocks.CAMPFIRE, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
SOUL_CAMPFIRE = Blocks.SOUL_CAMPFIRE, (UnaryOperator<Item.Properties>)(properties -> properties.component(DataComponents.CONTAINER, ItemContainerContents.EMPTY))		
SHROOMLIGHT = Blocks.SHROOMLIGHT	
HONEYCOMB = "honeycomb", HoneycombItem::new	
BEE_NEST = Blocks.BEE_NEST,new Item.Properties()	.component(DataComponents.BEES, Bees.EMPTY)	.component(DataComponents.BLOCK_STATE, BlockItemStateProperties.EMPTY.with(BeehiveBlock.HONEY_LEVEL, 0))		
BEEHIVE = Blocks.BEEHIVE,new Item.Properties()	.component(DataComponents.BEES, Bees.EMPTY)	.component(DataComponents.BLOCK_STATE, BlockItemStateProperties.EMPTY.with(BeehiveBlock.HONEY_LEVEL, 0))		
HONEY_BOTTLE = "honey_bottle",new Item.Properties().craftRemainder(GLASS_BOTTLE).food(Foods.HONEY_BOTTLE, Consumables.HONEY_BOTTLE).usingConvertsTo(GLASS_BOTTLE).stacksTo(16)		
HONEYCOMB_BLOCK = Blocks.HONEYCOMB_BLOCK	
LODESTONE = Blocks.LODESTONE	
CRYING_OBSIDIAN = Blocks.CRYING_OBSIDIAN	
BLACKSTONE = Blocks.BLACKSTONE	
BLACKSTONE_SLAB = Blocks.BLACKSTONE_SLAB	
BLACKSTONE_STAIRS = Blocks.BLACKSTONE_STAIRS	
GILDED_BLACKSTONE = Blocks.GILDED_BLACKSTONE	
POLISHED_BLACKSTONE = Blocks.POLISHED_BLACKSTONE	
POLISHED_BLACKSTONE_SLAB = Blocks.POLISHED_BLACKSTONE_SLAB	
POLISHED_BLACKSTONE_STAIRS = Blocks.POLISHED_BLACKSTONE_STAIRS	
CHISELED_POLISHED_BLACKSTONE = Blocks.CHISELED_POLISHED_BLACKSTONE	
POLISHED_BLACKSTONE_BRICKS = Blocks.POLISHED_BLACKSTONE_BRICKS	
POLISHED_BLACKSTONE_BRICK_SLAB = Blocks.POLISHED_BLACKSTONE_BRICK_SLAB	
POLISHED_BLACKSTONE_BRICK_STAIRS = Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS	
CRACKED_POLISHED_BLACKSTONE_BRICKS = Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS	
RESPAWN_ANCHOR = Blocks.RESPAWN_ANCHOR	
CANDLE = Blocks.CANDLE	
WHITE_CANDLE = Blocks.WHITE_CANDLE	
ORANGE_CANDLE = Blocks.ORANGE_CANDLE	
MAGENTA_CANDLE = Blocks.MAGENTA_CANDLE	
LIGHT_BLUE_CANDLE = Blocks.LIGHT_BLUE_CANDLE	
YELLOW_CANDLE = Blocks.YELLOW_CANDLE	
LIME_CANDLE = Blocks.LIME_CANDLE	
PINK_CANDLE = Blocks.PINK_CANDLE	
GRAY_CANDLE = Blocks.GRAY_CANDLE	
LIGHT_GRAY_CANDLE = Blocks.LIGHT_GRAY_CANDLE	
CYAN_CANDLE = Blocks.CYAN_CANDLE	
PURPLE_CANDLE = Blocks.PURPLE_CANDLE	
BLUE_CANDLE = Blocks.BLUE_CANDLE	
BROWN_CANDLE = Blocks.BROWN_CANDLE	
GREEN_CANDLE = Blocks.GREEN_CANDLE	
RED_CANDLE = Blocks.RED_CANDLE	
BLACK_CANDLE = Blocks.BLACK_CANDLE	
SMALL_AMETHYST_BUD = Blocks.SMALL_AMETHYST_BUD	
MEDIUM_AMETHYST_BUD = Blocks.MEDIUM_AMETHYST_BUD	
LARGE_AMETHYST_BUD = Blocks.LARGE_AMETHYST_BUD	
AMETHYST_CLUSTER = Blocks.AMETHYST_CLUSTER	
POINTED_DRIPSTONE = Blocks.POINTED_DRIPSTONE	
OCHRE_FROGLIGHT = Blocks.OCHRE_FROGLIGHT	
VERDANT_FROGLIGHT = Blocks.VERDANT_FROGLIGHT	
PEARLESCENT_FROGLIGHT = Blocks.PEARLESCENT_FROGLIGHT	
FROGSPAWN = Blocks.FROGSPAWN, PlaceOnWaterBlockItem::new	
ECHO_SHARD = "echo_shard", new Item.Properties().rarity(Rarity.UNCOMMON)	
BRUSH = "brush", BrushItem::new, new Item.Properties().durability(64)	
NETHERITE_UPGRADE_SMITHING_TEMPLATE = "netherite_upgrade_smithing_template", SmithingTemplateItem::createNetheriteUpgradeTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE = "sentry_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
DUNE_ARMOR_TRIM_SMITHING_TEMPLATE = "dune_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
COAST_ARMOR_TRIM_SMITHING_TEMPLATE = "coast_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
WILD_ARMOR_TRIM_SMITHING_TEMPLATE = "wild_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
WARD_ARMOR_TRIM_SMITHING_TEMPLATE = "ward_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.RARE)		
EYE_ARMOR_TRIM_SMITHING_TEMPLATE = "eye_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.RARE)		
VEX_ARMOR_TRIM_SMITHING_TEMPLATE = "vex_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.RARE)		
TIDE_ARMOR_TRIM_SMITHING_TEMPLATE = "tide_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE = "snout_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
RIB_ARMOR_TRIM_SMITHING_TEMPLATE = "rib_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE = "spire_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.RARE)		
WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE = "wayfinder_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE = "shaper_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE = "silence_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.EPIC)		
RAISER_ARMOR_TRIM_SMITHING_TEMPLATE = "raiser_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
HOST_ARMOR_TRIM_SMITHING_TEMPLATE = "host_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
FLOW_ARMOR_TRIM_SMITHING_TEMPLATE = "flow_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
BOLT_ARMOR_TRIM_SMITHING_TEMPLATE = "bolt_armor_trim_smithing_template", SmithingTemplateItem::createArmorTrimTemplate, new Item.Properties().rarity(Rarity.UNCOMMON)		
ANGLER_POTTERY_SHERD = "angler_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
ARCHER_POTTERY_SHERD = "archer_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
ARMS_UP_POTTERY_SHERD = "arms_up_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
BLADE_POTTERY_SHERD = "blade_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
BREWER_POTTERY_SHERD = "brewer_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
BURN_POTTERY_SHERD = "burn_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
DANGER_POTTERY_SHERD = "danger_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
EXPLORER_POTTERY_SHERD = "explorer_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
FLOW_POTTERY_SHERD = "flow_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
FRIEND_POTTERY_SHERD = "friend_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
GUSTER_POTTERY_SHERD = "guster_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
HEART_POTTERY_SHERD = "heart_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
HEARTBREAK_POTTERY_SHERD = "heartbreak_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
HOWL_POTTERY_SHERD = "howl_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
MINER_POTTERY_SHERD = "miner_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
MOURNER_POTTERY_SHERD = "mourner_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
PLENTY_POTTERY_SHERD = "plenty_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
PRIZE_POTTERY_SHERD = "prize_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
SCRAPE_POTTERY_SHERD = "scrape_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
SHEAF_POTTERY_SHERD = "sheaf_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
SHELTER_POTTERY_SHERD = "shelter_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
SKULL_POTTERY_SHERD = "skull_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
SNORT_POTTERY_SHERD = "snort_pottery_sherd", new Item.Properties().rarity(Rarity.UNCOMMON)	
COPPER_GRATE = Blocks.COPPER_GRATE	
EXPOSED_COPPER_GRATE = Blocks.EXPOSED_COPPER_GRATE	
WEATHERED_COPPER_GRATE = Blocks.WEATHERED_COPPER_GRATE	
OXIDIZED_COPPER_GRATE = Blocks.OXIDIZED_COPPER_GRATE	
WAXED_COPPER_GRATE = Blocks.WAXED_COPPER_GRATE	
WAXED_EXPOSED_COPPER_GRATE = Blocks.WAXED_EXPOSED_COPPER_GRATE	
WAXED_WEATHERED_COPPER_GRATE = Blocks.WAXED_WEATHERED_COPPER_GRATE	
WAXED_OXIDIZED_COPPER_GRATE = Blocks.WAXED_OXIDIZED_COPPER_GRATE	
COPPER_BULB = Blocks.COPPER_BULB	
EXPOSED_COPPER_BULB = Blocks.EXPOSED_COPPER_BULB	
WEATHERED_COPPER_BULB = Blocks.WEATHERED_COPPER_BULB	
OXIDIZED_COPPER_BULB = Blocks.OXIDIZED_COPPER_BULB	
WAXED_COPPER_BULB = Blocks.WAXED_COPPER_BULB	
WAXED_EXPOSED_COPPER_BULB = Blocks.WAXED_EXPOSED_COPPER_BULB	
WAXED_WEATHERED_COPPER_BULB = Blocks.WAXED_WEATHERED_COPPER_BULB	
WAXED_OXIDIZED_COPPER_BULB = Blocks.WAXED_OXIDIZED_COPPER_BULB	
TRIAL_SPAWNER = Blocks.TRIAL_SPAWNER	
TRIAL_KEY = "trial_key"	
OMINOUS_TRIAL_KEY = "ominous_trial_key"	
VAULT = Blocks.VAULT	
OMINOUS_BOTTLE = "ominous_bottle",new Item.Properties()	.rarity(Rarity.UNCOMMON)	.component(DataComponents.CONSUMABLE, Consumables.OMINOUS_BOTTLE)	.component(DataComponents.OMINOUS_BOTTLE_AMPLIFIER, new OminousBottleAmplifier(0))	